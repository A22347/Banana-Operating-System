Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e79a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x89b acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000580                strlen
                0x00000000c00005b0                strpbrk
                0x00000000c0000600                strtok
                0x00000000c0000650                strcpy
                0x00000000c0000690                strncpy
                0x00000000c0000780                strcmp
                0x00000000c00007d0                strchr
                0x00000000c0000810                strncmp
                0x00000000c0000870                strcat
                0x00000000c00008a0                strncat
                0x00000000c0000900                strstr
                0x00000000c0000960                toupper
                0x00000000c0000980                tolower
                0x00000000c00009a0                simple_strtoul
 .text          0x00000000c0000c1b      0xfb1 core/malloc.32
                0x00000000c0000d86                dlfree
                0x00000000c00010e4                dlmalloc
                0x00000000c0001621                dlrealloc
                0x00000000c00017c5                dlmemalign
                0x00000000c00018e8                dlcalloc
                0x00000000c0001982                dlcfree
                0x00000000c0001987                dlindependent_calloc
                0x00000000c00019ac                dlindependent_comalloc
                0x00000000c00019c3                dlvalloc
                0x00000000c00019ee                dlpvalloc
                0x00000000c0001a24                dlmalloc_trim
                0x00000000c0001a31                dlmalloc_usable_size
                0x00000000c0001a62                dlmallinfo
                0x00000000c0001b31                dlmalloc_stats
                0x00000000c0001b42                dlmallopt
 .text          0x00000000c0001bcc      0x1f2 libk/ctype.32
                0x00000000c0001bcc                isblank
                0x00000000c0001bec                iscntrl
                0x00000000c0001c0c                isdigit
                0x00000000c0001c28                islower
                0x00000000c0001c44                isspace
                0x00000000c0001c6c                isupper
                0x00000000c0001c88                isalpha
                0x00000000c0001cb8                isalnum
                0x00000000c0001ce8                ispunct
                0x00000000c0001d28                isgraph
                0x00000000c0001d58                isprint
                0x00000000c0001d80                isxdigit
 .text          0x00000000c0001dbe        0x0 libk/string.32
 .text          0x00000000c0001dbe       0x51 fs/fat/diskio.32
                0x00000000c0001dbe                disk_status
                0x00000000c0001dc1                disk_initialize
                0x00000000c0001dc4                disk_read
                0x00000000c0001dda                disk_write
                0x00000000c0001df0                disk_ioctl
 .text          0x00000000c0001e0f     0x3e44 fs/fat/ff.32
                0x00000000c0003c3e                f_mount
                0x00000000c0003ca0                f_open
                0x00000000c0003f63                f_read
                0x00000000c0004144                f_write
                0x00000000c000438b                f_sync
                0x00000000c0004450                f_close
                0x00000000c000447f                f_lseek
                0x00000000c000462f                f_opendir
                0x00000000c00046fa                f_closedir
                0x00000000c000471c                f_readdir
                0x00000000c00047ae                f_stat
                0x00000000c000482d                f_getfree
                0x00000000c0004936                f_truncate
                0x00000000c0004a20                f_unlink
                0x00000000c0004b40                f_mkdir
                0x00000000c0004cdb                f_rename
                0x00000000c0004e93                f_chmod
                0x00000000c0004f43                f_utime
                0x00000000c0004ff3                f_getlabel
                0x00000000c0005147                f_setlabel
                0x00000000c00052d7                f_expand
                0x00000000c0005444                f_mkfs
 *fill*         0x00000000c0005c53        0x1 
 .text          0x00000000c0005c54       0x2f fs/fat/ffsystem.32
                0x00000000c0005c54                ff_memalloc
                0x00000000c0005c6c                ff_memfree
 *fill*         0x00000000c0005c83        0x1 
 .text          0x00000000c0005c84      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005c84                ff_uni2oem
                0x00000000c0005d20                ff_oem2uni
                0x00000000c0005d98                ff_wtoupper
 .text          0x00000000c0005f58      0xd27 fs/iso9660/iso9660.32
                0x00000000c00061a3                isoReadDiscSector
                0x00000000c000623e                strnicmp
                0x00000000c00064de                stricmp
                0x00000000c000652a                iso_open
                0x00000000c00065b4                iso_close
                0x00000000c00065d2                iso_read
                0x00000000c00066e8                iso_seek
                0x00000000c000676c                iso_tell
                0x00000000c000679d                iso_total
                0x00000000c00067c8                fn_postprocess
                0x00000000c00067ef                iso_readdir
                0x00000000c0006a4a                iso_reset
                0x00000000c0006a67                init_percd
                0x00000000c0006b61                iso_ioctl
                0x00000000c0006b79                fs_iso9660_init
                0x00000000c0006c0f                fs_iso9660_shutdown
 *fill*         0x00000000c0006c7f        0x1 
 .text          0x00000000c0006c80      0x6a7 core/computer.32
                0x00000000c0006c80                Computer::close(int, int, void*)
                0x00000000c0006cc5                Krnl::firstTask()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006e00                Computer::Computer()
                0x00000000c0006eb0                Computer::setBootMessage(char const*)
                0x00000000c0006eb2                Computer::detectFeatures()
                0x00000000c00070d8                Computer::displayFeatures()
                0x00000000c00070da                Computer::rdmsr(unsigned int)
                0x00000000c0007106                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007142                Computer::shutdown()
                0x00000000c000715a                Computer::restart()
                0x00000000c0007172                Computer::sleep()
                0x00000000c0007186                Computer::nmiEnabled()
                0x00000000c0007192                Computer::readCMOS(unsigned char)
                0x00000000c00071ae                Computer::enableNMI(bool)
                0x00000000c00071c6                Computer::open(int, int, void*)
                0x00000000c0007288                Computer::disableNMI()
                0x00000000c0007298                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072bc                Computer::handleNMI()
 *fill*         0x00000000c0007327        0x1 
 .text          0x00000000c0007328      0x1db core/gdt.32
                0x00000000c0007328                GDTEntry::setBase(unsigned int)
                0x00000000c0007344                GDTEntry::setLimit(unsigned int)
                0x00000000c0007362                GDT::GDT()
                0x00000000c0007362                GDT::GDT()
                0x00000000c0007378                GDT::addEntry(GDTEntry)
                0x00000000c000739a                GDT::getNumberOfEntries()
                0x00000000c00073a2                GDT::flush()
                0x00000000c00073c4                GDT::setup()
 .text          0x00000000c0007503       0x1d core/idle.32
                0x00000000c0007503                idleFunction(void*)
 .text          0x00000000c0007520      0x46c core/idt.32
                0x00000000c0007520                IDTEntry::IDTEntry(bool)
                0x00000000c0007520                IDTEntry::IDTEntry(bool)
                0x00000000c000759a                IDTEntry::setOffset(unsigned int)
                0x00000000c00075b0                IDT::IDT()
                0x00000000c00075b0                IDT::IDT()
                0x00000000c00075b2                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075ba                IDT::addEntry(IDTEntry, int)
                0x00000000c00075d4                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000760c                IDT::flush()
                0x00000000c0007626                IDT::setup()
 .text          0x00000000c000798c      0x185 core/kheap.32
                0x00000000c000798c                sbrk
                0x00000000c0007a20                mmap
                0x00000000c0007a36                munmap
                0x00000000c0007a4c                liballoc_lock()
                0x00000000c0007a5a                liballoc_unlock()
                0x00000000c0007a70                liballoc_alloc(int)
                0x00000000c0007a88                liballoc_free(void*, int)
                0x00000000c0007aa3                realloc
                0x00000000c0007ab7                malloc
                0x00000000c0007ac7                free
                0x00000000c0007ad7                rfree
                0x00000000c0007ae7                calloc
 .text          0x00000000c0007b11       0xc3 core/main.32
                0x00000000c0007b11                KeEntryPoint
 .text          0x00000000c0007bd4      0x639 core/physmgr.32
                0x00000000c0007bd4                Phys::allocateDMA(unsigned long)
                0x00000000c0007cc2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007cfd                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d3d                Phys::getPageState(unsigned long)
                0x00000000c0007d59                Phys::freePage(unsigned long)
                0x00000000c0007dc2                Phys::allocatePage()
                0x00000000c0007e91                Phys::allocateContiguousPages(int)
                0x00000000c0007ef8                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f30                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000820d        0x1 
 .text          0x00000000c000820e      0x26d core/pipe.32
                0x00000000c000820e                Pipe::isAtty()
                0x00000000c0008212                Pipe::~Pipe()
                0x00000000c0008212                Pipe::~Pipe()
                0x00000000c0008236                Pipe::~Pipe()
                0x00000000c000825e                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008322                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008414                Pipe::Pipe(int)
                0x00000000c0008414                Pipe::Pipe(int)
 *fill*         0x00000000c000847b        0x1 
 .text          0x00000000c000847c      0xaaa core/terminal.32
                0x00000000c000847c                VgaText::isAtty()
                0x00000000c0008480                VgaText::~VgaText()
                0x00000000c0008480                VgaText::~VgaText()
                0x00000000c00084a4                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00084ee                setTerminalScrollLock(bool)
                0x00000000c00084ef                doTerminalCycle()
                0x00000000c00084f0                addToTerminalCycle(VgaText*)
                0x00000000c00084f1                scrollTerminalScrollLock(int)
                0x00000000c00084f2                VgaText::updateTitle()
                0x00000000c00084f4                VgaText::load()
                0x00000000c00084f6                VgaText::updateCursor()
                0x00000000c000850c                VgaText::doANSI_SGR(int)
                0x00000000c0008580                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0008590                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085a0                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085c0                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085cc                VgaText::setTitleColour(VgaColour)
                0x00000000c00085d8                VgaText::setTitle(char*)
                0x00000000c00085da                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00085ec                VgaText::scrollScreen()
                0x00000000c000867e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000868e                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000871e                VgaText::getCursorX()
                0x00000000c0008726                VgaText::getCursorY()
                0x00000000c000872e                VgaText::setCursor(int, int)
                0x00000000c0008745                setActiveTerminal(VgaText*)
                0x00000000c0008790                VgaText::clearScreen()
                0x00000000c00087de                VgaText::setCursorX(int)
                0x00000000c00087f6                VgaText::setCursorY(int)
                0x00000000c000880e                VgaText::incrementCursor(bool)
                0x00000000c0008862                VgaText::decrementCursor(bool)
                0x00000000c0008884                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008954                VgaText::putchar(char)
                0x00000000c0008a3c                VgaText::putx(unsigned int)
                0x00000000c0008a82                VgaText::puts(char const*)
                0x00000000c0008aa8                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008af4                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c42                VgaText::VgaText(char const*)
                0x00000000c0008c42                VgaText::VgaText(char const*)
                0x00000000c0008d92                VgaText::receiveKey(unsigned char)
                0x00000000c0008f00                VgaText::doUpdate()
                0x00000000c0008f01                newTerminal(char*)
 *fill*         0x00000000c0008f26        0x2 
 .text          0x00000000c0008f28      0x1a1 core/tss.32
                0x00000000c0008f28                TSS::TSS()
                0x00000000c0008f28                TSS::TSS()
                0x00000000c0008f38                TSS::setESP(unsigned long)
                0x00000000c0008f4c                TSS::flush()
                0x00000000c0008f6c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090c9        0x1 
 .text          0x00000000c00090ca      0x4ca core/unixfile.32
                0x00000000c00090ca                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009120                ReservedFilename::isAtty()
                0x00000000c000913c                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000919a                UnixFile::getFileDescriptor()
                0x00000000c00091a2                UnixFile::UnixFile(int)
                0x00000000c00091a2                UnixFile::UnixFile(int)
                0x00000000c0009356                ReservedFilename::ReservedFilename(int)
                0x00000000c0009356                ReservedFilename::ReservedFilename(int)
                0x00000000c0009388                UnixFile::~UnixFile()
                0x00000000c0009388                UnixFile::~UnixFile()
                0x00000000c0009424                UnixFile::~UnixFile()
                0x00000000c000944c                ReservedFilename::~ReservedFilename()
                0x00000000c000944c                ReservedFilename::~ReservedFilename()
                0x00000000c0009470                ReservedFilename::~ReservedFilename()
                0x00000000c0009497                getFromFileDescriptor(int)
 .text          0x00000000c0009594     0x125b core/virtmgr.32
                0x00000000c0009594                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095ce                Virt::getPageState(unsigned long)
                0x00000000c00095f1                Virt::allocateKernelVirtualPages(int)
                0x00000000c000970d                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009730                Virt::swapIDToSector(unsigned long)
                0x00000000c0009746                Virt::allocateSwapfilePage()
                0x00000000c00097c5                Virt::virtualMemorySetup()
                0x00000000c0009816                Virt::setupPageSwapping(int)
                0x00000000c0009888                VAS::VAS(VAS*)
                0x00000000c0009888                VAS::VAS(VAS*)
                0x00000000c00098b6                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00098e4                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009903                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a16                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a3a                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a54                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009a98                VAS::VAS()
                0x00000000c0009a98                VAS::VAS()
                0x00000000c0009b02                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b36                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009b62                VAS::~VAS()
                0x00000000c0009b62                VAS::~VAS()
                0x00000000c0009cd0                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009ddc                VAS::allocatePages(int, int)
                0x00000000c0009fcc                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009fea                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a0b2                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a1a2                VAS::VAS(bool)
                0x00000000c000a1a2                VAS::VAS(bool)
                0x00000000c000a434                VAS::evict(unsigned long)
                0x00000000c000a500                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a60e                VAS::scanForEviction()
                0x00000000c000a6f4                mapVASFirstTime
 .text          0x00000000c000a7ef       0x5f coreobjs/c++.32
                0x00000000c000a7ef                __cxa_atexit
                0x00000000c000a7f2                __cxa_finalize
                0x00000000c000a7f3                __stack_chk_fail
                0x00000000c000a829                __cxa_pure_virtual
                0x00000000c000a83a                operator new[](unsigned long)
                0x00000000c000a83f                operator delete(void*, unsigned long)
                0x00000000c000a844                operator delete[](void*)
                0x00000000c000a849                operator delete[](void*, unsigned long)
 .text          0x00000000c000a84e      0x225 dbg/kconsole.32
                0x00000000c000a84e                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8bf                Dbg::logc(char)
                0x00000000c000a8df                Dbg::logs(char*)
                0x00000000c000a8fe                Dbg::logWriteInt(unsigned int)
                0x00000000c000a91c                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a93d                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa73        0x1 
 .text          0x00000000c000aa74      0xc86 fs/vfs.32
                0x00000000c000aa74                File::read(unsigned long long, void*, int*)
                0x00000000c000aacc                File::write(unsigned long long, void*, int*)
                0x00000000c000ab24                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ab7c                Directory::write(unsigned long long, void*, int*)
                0x00000000c000abaa                File::isAtty()
                0x00000000c000abae                Directory::isAtty()
                0x00000000c000abb2                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000abb8                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000abbe                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000abc4                File::~File()
                0x00000000c000abc4                File::~File()
                0x00000000c000abe8                File::~File()
                0x00000000c000ac12                Directory::~Directory()
                0x00000000c000ac12                Directory::~Directory()
                0x00000000c000ac36                Directory::~Directory()
                0x00000000c000ac60                Filesystem::Filesystem()
                0x00000000c000ac60                Filesystem::Filesystem()
                0x00000000c000ac84                Filesystem::~Filesystem()
                0x00000000c000ac84                Filesystem::~Filesystem()
                0x00000000c000ac92                Filesystem::~Filesystem()
                0x00000000c000acb6                Fs::getcwd(Process*, char*, int)
                0x00000000c000ace0                Fs::initVFS()
                0x00000000c000ad0a                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aee6                File::File(char const*, Process*)
                0x00000000c000aee6                File::File(char const*, Process*)
                0x00000000c000afa2                File::open(FileOpenMode)
                0x00000000c000b000                File::close()
                0x00000000c000b060                File::seek(unsigned long long)
                0x00000000c000b0b6                File::tell(unsigned long long*)
                0x00000000c000b106                File::rewind()
                0x00000000c000b11a                File::unlink()
                0x00000000c000b166                File::rename(char const*)
                0x00000000c000b1b4                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b210                File::exists()
                0x00000000c000b24e                File::stat(unsigned long long*, bool*)
                0x00000000c000b2af                Fs::setcwd(Process*, char*)
                0x00000000c000b40c                Directory::Directory(char const*, Process*)
                0x00000000c000b40c                Directory::Directory(char const*, Process*)
                0x00000000c000b4c8                Directory::open()
                0x00000000c000b524                Directory::close()
                0x00000000c000b584                Directory::unlink()
                0x00000000c000b5d0                Directory::rename(char const*)
                0x00000000c000b61e                Directory::exists()
                0x00000000c000b65c                Directory::read(dirent*)
                0x00000000c000b6a8                Directory::create()
                0x00000000c000b6f4                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b6fa        0x2 
 .text          0x00000000c000b6fc       0x86 hal/bus.32
                0x00000000c000b6fc                Bus::Bus(char const*)
                0x00000000c000b6fc                Bus::Bus(char const*)
                0x00000000c000b734                Bus::~Bus()
                0x00000000c000b734                Bus::~Bus()
                0x00000000c000b758                Bus::~Bus()
 .text          0x00000000c000b782       0x96 hal/buzzer.32
                0x00000000c000b782                beepThread(void*)
                0x00000000c000b7bf                Krnl::beep(int, int, bool)
 .text          0x00000000c000b818      0x465 hal/clock.32
                0x00000000c000b818                User::loadClockSettings(int)
                0x00000000c000b86a                Clock::Clock(char const*)
                0x00000000c000b86a                Clock::Clock(char const*)
                0x00000000c000b8a0                Clock::~Clock()
                0x00000000c000b8a0                Clock::~Clock()
                0x00000000c000b8c4                Clock::~Clock()
                0x00000000c000b8ee                Clock::timeInSecondsLocal()
                0x00000000c000b936                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b98f                datetimeToSeconds(datetime_t)
                0x00000000c000bab4                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bb14                secondsToDatetime(unsigned long long)
                0x00000000c000bc58                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bc7d        0x1 
 .text          0x00000000c000bc7e      0x464 hal/device.32
                0x00000000c000bc7e                Device::hibernate()
                0x00000000c000bc80                Device::wake()
                0x00000000c000bc82                Device::detect()
                0x00000000c000bc84                Device::disableLegacy()
                0x00000000c000bc86                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bc88                DriverlessDevice::close(int, int, void*)
                0x00000000c000bc8c                DriverlessDevice::detect()
                0x00000000c000bc8e                DriverlessDevice::open(int, int, void*)
                0x00000000c000bca2                Device::~Device()
                0x00000000c000bca2                Device::~Device()
                0x00000000c000bcb0                Device::~Device()
                0x00000000c000bcd8                Device::findAndLoadDriver()
                0x00000000c000bce6                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bd0c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bd4c                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bd76                Device::getParent()
                0x00000000c000bd82                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000bda0                Device::addChild(Device*)
                0x00000000c000bde4                Device::removeAllChildren()
                0x00000000c000be2a                Device::hibernateAll()
                0x00000000c000be5a                Device::wakeAll()
                0x00000000c000be8a                Device::detectAll()
                0x00000000c000beba                Device::disableLegacyAll()
                0x00000000c000bebc                Device::loadDriversForAll()
                0x00000000c000bebe                Device::closeAll()
                0x00000000c000bef4                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bf2a                Device::setName(char const*)
                0x00000000c000bf38                Device::Device(char const*)
                0x00000000c000bf38                Device::Device(char const*)
                0x00000000c000c034                Device::getName()
                0x00000000c000c03e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c03e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c074                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c0b8                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c0e2        0x2 
 .text          0x00000000c000c0e4       0x86 hal/diskctrl.32
                0x00000000c000c0e4                HardDiskController::HardDiskController(char const*)
                0x00000000c000c0e4                HardDiskController::HardDiskController(char const*)
                0x00000000c000c11c                HardDiskController::~HardDiskController()
                0x00000000c000c11c                HardDiskController::~HardDiskController()
                0x00000000c000c140                HardDiskController::~HardDiskController()
 .text          0x00000000c000c16a       0xe2 hal/diskphys.32
                0x00000000c000c16a                PhysicalDisk::eject()
                0x00000000c000c16e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c16e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c1d6                PhysicalDisk::startCache()
                0x00000000c000c1fe                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c1fe                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c222                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c24c        0x0 hal/fpu.32
 .text          0x00000000c000c24c      0x360 hal/intctrl.32
                0x00000000c000c24c                int_handler
                0x00000000c000c2d6                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c320                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c463                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c497                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c50d                setupINTS()
                0x00000000c000c56a                convertLegacyIRQNumber(int)
 .text          0x00000000c000c5ac      0x8be hal/keybrd.32
                0x00000000c000c5ac                startGUI(void*)
                0x00000000c000c61a                startGUIVESA(void*)
                0x00000000c000c688                sendKeyToTerminal(unsigned char)
                0x00000000c000c763                sendKeyboardToken(KeyboardToken)
                0x00000000c000cc4d                clearInternalKeybuffer(VgaText*)
                0x00000000c000cc82                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000cde0                Keyboard::Keyboard(char const*)
                0x00000000c000cde0                Keyboard::Keyboard(char const*)
                0x00000000c000ce1c                Keyboard::~Keyboard()
                0x00000000c000ce1c                Keyboard::~Keyboard()
                0x00000000c000ce40                Keyboard::~Keyboard()
 .text          0x00000000c000ce6a      0x3f8 hal/logidisk.32
                0x00000000c000ce6a                LogicalDisk::close(int, int, void*)
                0x00000000c000ce6e                LogicalDisk::~LogicalDisk()
                0x00000000c000ce6e                LogicalDisk::~LogicalDisk()
                0x00000000c000ce92                LogicalDisk::~LogicalDisk()
                0x00000000c000cebc                LogicalDisk::open(int, int, void*)
                0x00000000c000ced0                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cf08                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cf4e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cf4e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d00e                LogicalDisk::assignDriveLetter()
                0x00000000c000d0c8                LogicalDisk::mount()
                0x00000000c000d110                LogicalDisk::unmount()
                0x00000000c000d120                LogicalDisk::eject()
                0x00000000c000d134                LogicalDisk::unassignDriveLetter()
                0x00000000c000d18a                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d1f6                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000d262        0x2 
 .text          0x00000000c000d264       0x86 hal/mouse.32
                0x00000000c000d264                Mouse::Mouse(char const*)
                0x00000000c000d264                Mouse::Mouse(char const*)
                0x00000000c000d29c                Mouse::~Mouse()
                0x00000000c000d29c                Mouse::~Mouse()
                0x00000000c000d2c0                Mouse::~Mouse()
 .text          0x00000000c000d2ea       0x90 hal/nic.32
                0x00000000c000d2ea                NIC::getMAC()
                0x00000000c000d2f0                NIC::write(int, unsigned char*, int*)
                0x00000000c000d2f6                NIC::NIC(char const*)
                0x00000000c000d2f6                NIC::NIC(char const*)
                0x00000000c000d32c                NIC::~NIC()
                0x00000000c000d32c                NIC::~NIC()
                0x00000000c000d350                NIC::~NIC()
 .text          0x00000000c000d37a      0x33b hal/partition.32
                0x00000000c000d37a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d422                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d6b5        0x3 
 .text          0x00000000c000d6b8       0x86 hal/serial.32
                0x00000000c000d6b8                Serial::Serial(char const*)
                0x00000000c000d6b8                Serial::Serial(char const*)
                0x00000000c000d6f0                Serial::~Serial()
                0x00000000c000d6f0                Serial::~Serial()
                0x00000000c000d714                Serial::~Serial()
 *fill*         0x00000000c000d73e        0x2 
 .text          0x00000000c000d740      0x234 hal/timer.32
                0x00000000c000d740                Timer::Timer(char const*)
                0x00000000c000d740                Timer::Timer(char const*)
                0x00000000c000d778                Timer::~Timer()
                0x00000000c000d778                Timer::~Timer()
                0x00000000c000d79c                Timer::~Timer()
                0x00000000c000d7c6                Timer::read()
                0x00000000c000d7d1                setupTimer(int)
                0x00000000c000d80c                timerHandler(unsigned int)
 .text          0x00000000c000d974      0x450 hal/vcache.32
                0x00000000c000d974                VCache::VCache(PhysicalDisk*)
                0x00000000c000d974                VCache::VCache(PhysicalDisk*)
                0x00000000c000dae4                VCache::invalidateReadBuffer()
                0x00000000c000daf4                VCache::writeWriteBuffer()
                0x00000000c000db40                VCache::~VCache()
                0x00000000c000db40                VCache::~VCache()
                0x00000000c000db98                VCache::~VCache()
                0x00000000c000dbc0                VCache::write(unsigned long long, int, void*)
                0x00000000c000dcba                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ddc4      0x4d9 hal/video.32
                0x00000000c000ddc4                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000de10                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000de80                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000df10                Video::clearScreen(unsigned int)
                0x00000000c000df44                Video::putpixel(int, int, unsigned int)
                0x00000000c000df52                Video::readPixelApprox(int, int)
                0x00000000c000df66                Video::Video(char const*)
                0x00000000c000df66                Video::Video(char const*)
                0x00000000c000df9c                Video::~Video()
                0x00000000c000df9c                Video::~Video()
                0x00000000c000dfc0                Video::~Video()
                0x00000000c000dfea                Video::isMonochrome()
                0x00000000c000dff6                Video::getWidth()
                0x00000000c000e002                Video::getHeight()
                0x00000000c000e00e                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e0ca                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e232                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e29d        0x3 
 .text          0x00000000c000e2a0     0x128a hw/acpi.32
                0x00000000c000e2a0                ACPI::close(int, int, void*)
                0x00000000c000e354                findRSDP()
                0x00000000c000e3ec                loadACPITables(unsigned char*)
                0x00000000c000e658                findRSDT(unsigned char*)
                0x00000000c000e7b0                findDataTable(unsigned char*, char*)
                0x00000000c000e830                scanMADT()
                0x00000000c000ece8                ACPI::ACPI()
                0x00000000c000ece8                ACPI::ACPI()
                0x00000000c000ed3c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ee38                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ef04                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ef0c                ACPI::detectPCI()
                0x00000000c000f12c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f174                ACPI::sleep()
                0x00000000c000f190                ACPI::open(int, int, void*)
 .text          0x00000000c000f52a      0xba5 hw/cpu.32
                0x00000000c000f52a                CPU::close(int, int, void*)
                0x00000000c000f52e                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f54a                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f562                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f5d6                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f65a                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f688                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f6b6                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f6e4                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f712                CPU::CPU()
                0x00000000c000f712                CPU::CPU()
                0x00000000c000f7a0                CPU::displayFeatures()
                0x00000000c000f7a2                CPU::detectFeatures()
                0x00000000c000fe76                CPU::setupSMEP()
                0x00000000c000fe82                CPU::setupUMIP()
                0x00000000c000fe8c                CPU::setupTSC()
                0x00000000c000fe96                CPU::setupLargePages()
                0x00000000c000fea0                CPU::setupPAT()
                0x00000000c000fedc                CPU::setupMTRR()
                0x00000000c000fede                CPU::setupGlobalPages()
                0x00000000c000fee8                CPU::allowUsermodeDataAccess()
                0x00000000c000fefa                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ff0c                CPU::setupSMAP()
                0x00000000c000ff1a                CPU::setupFeatures()
                0x00000000c000ffe6                CPU::open(int, int, void*)
 .text          0x00000000c00100cf       0xd8 krnl/bootmsg.32
                0x00000000c00100cf                KeDisplaySplashScreen()
                0x00000000c0010144                KeSetBootMessage(char const*)
 *fill*         0x00000000c00101a7        0x1 
 .text          0x00000000c00101a8      0x585 krnl/env.32
                0x00000000c00101a8                EnvVarContainer::getEnv(char const*)
                0x00000000c00101e6                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00102a8                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00102aa                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010494                EnvVarContainer::__loadSystem()
                0x00000000c00104ae                EnvVarContainer::__loadUser()
                0x00000000c00104b0                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104b0                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104d2                EnvVarContainer::~EnvVarContainer()
                0x00000000c00104d2                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010502                Krnl::getEnv(Process*, char const*)
                0x00000000c0010567                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c0010581                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00105a0                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00105b3                Krnl::deleteEnvSystem(char const*)
                0x00000000c00105b4                Krnl::deleteEnvUser(char const*)
                0x00000000c00105b5                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c00105b6                Krnl::newProcessEnv(Process*)
                0x00000000c00105d8                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010624                Krnl::loadSystemEnv()
                0x00000000c0010652                Krnl::loadUserEnv()
                0x00000000c0010678                Krnl::flushEnv()
                0x00000000c0010679                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0010699                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001072d       0x94 krnl/inlines.32
                0x00000000c001072d                CPU::current()
                0x00000000c0010739                operator new(unsigned long)
                0x00000000c001073e                operator delete(void*)
                0x00000000c0010743                disableIRQs()
                0x00000000c0010745                enableIRQs()
                0x00000000c0010747                lockScheduler()
                0x00000000c001074f                unlockScheduler()
                0x00000000c001075e                lockStuff()
                0x00000000c001076c                unlockStuff()
                0x00000000c00107a6                Virt::getAKernelVAS()
                0x00000000c00107ac                __not_memcpy
 .text          0x00000000c00107c1        0xc krnl/panic.32
                0x00000000c00107c1                KePanic(char const*)
 .text          0x00000000c00107cd      0x142 krnl/powctrl.32
                0x00000000c00107cd                Krnl::powerThread(void*)
                0x00000000c00107fb                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010811                Krnl::userIOReceived()
                0x00000000c001081c                Krnl::handlePowerButton()
                0x00000000c0010851                Krnl::handleSleepButton()
                0x00000000c0010886                Krnl::setupPowerManager()
 .text          0x00000000c001090f       0x9b krnl/random.32
                0x00000000c001090f                KeRand()
                0x00000000c001094f                KeSeedRand(unsigned int)
                0x00000000c0010978                KeInitRand()
 *fill*         0x00000000c00109aa        0x2 
 .text          0x00000000c00109ac      0x1bc krnl/resolve.32
                0x00000000c00109ac                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010b68      0x313 krnl/signal.32
                0x00000000c0010b68                KiSigKill(int)
                0x00000000c0010b7c                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010b7d                KiDefaultSignalHandlerPause(int)
                0x00000000c0010ba9                KiDefaultSignalHandlerResume(int)
                0x00000000c0010bd5                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010bda                KeInitSignals()
                0x00000000c0010c25                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010c5b                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010cd8                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010dc7                KiCheckSignalZ
                0x00000000c0010e09                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010e44                KiFinishSignalZ
 .text          0x00000000c0010e7b      0xc76 krnl/syscalls.32
                0x00000000c0010e7b                SysSeekDir(regs*)
                0x00000000c0010e80                SysTellDir(regs*)
                0x00000000c0010e85                SysVerify(regs*)
                0x00000000c0010e8f                SysGetArgc(regs*)
                0x00000000c0010ea3                SysTTYName(regs*)
                0x00000000c0010eab                SysFormatDisk(regs*)
                0x00000000c0010f12                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010f66                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010fbf                SysShutdown(regs*)
                0x00000000c001104c                SysRealpath(regs*)
                0x00000000c001109b                SysReadDir(regs*)
                0x00000000c001111b                SysIsATTY(regs*)
                0x00000000c0011175                SysSeek(regs*)
                0x00000000c00111cf                SysTell(regs*)
                0x00000000c001123c                SysSize(regs*)
                0x00000000c00112af                SysSizeFromFilename(regs*)
                0x00000000c0011359                SysClose(regs*)
                0x00000000c00113b9                SysOpenDir(regs*)
                0x00000000c0011436                SysMakeDir(regs*)
                0x00000000c00114a4                SysCloseDir(regs*)
                0x00000000c00114f3                SysWait(regs*)
                0x00000000c0011514                SysNotImpl(regs*)
                0x00000000c001152f                SysPanic(regs*)
                0x00000000c001154a                SysRmdir(regs*)
                0x00000000c00115a8                SysUnlink(regs*)
                0x00000000c0011606                SysGetArgv(regs*)
                0x00000000c0011653                SysUSleep(regs*)
                0x00000000c001167c                SysSpawn(regs*)
                0x00000000c00116ed                SysGetEnv(regs*)
                0x00000000c00117a2                SysSetFatAttrib(regs*)
                0x00000000c001180b                SysPipe(regs*)
                0x00000000c0011850                SysGetUnixTime(regs*)
                0x00000000c0011864                string_ends_with(char const*, char const*)
                0x00000000c00118af                SysOpen(regs*)
                0x00000000c0011aaf                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011af1        0x3 
 .text          0x00000000c0011af4      0x159 net/ethernet.32
                0x00000000c0011af4                KeSwitchEndian16(unsigned short)
                0x00000000c0011b18                KeSwitchEndian32(unsigned int)
                0x00000000c0011b48                EthernetCRC32(unsigned char*, int)
                0x00000000c0011bec                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0011c4d      0xd51 reg/cm.32
                0x00000000c0011c4d                CmOpen(char const*)
                0x00000000c0011d6b                CmClose(Reghive_Tag*)
                0x00000000c0011d81                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011dbd                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0011e34                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0011e73                CmGetNext(Reghive_Tag*, int)
                0x00000000c0011ea5                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011ee1                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0011f09                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0011f2a                CmExpand(Reghive_Tag*, int)
                0x00000000c0011fa5                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c001202b                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c001211f                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0012257                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c00122b8                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c00122e8                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c001231f                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012349                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0012389                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c001242d                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c001245b                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00125f8                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0012645                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00126bf                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c0012712                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00127d6                zStrtok(char*, char const*)
                0x00000000c0012848                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00128c9                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c001296c                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c001299e      0x545 reg/registry.32
                0x00000000c001299e                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012b2a                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0012c7f                Reg::getLine(char*, char*, char*)
                0x00000000c0012cb6                Reg::readInt(char*, char*, int*)
                0x00000000c0012da4                Reg::readString(char*, char*, char*, int)
                0x00000000c0012e25                Reg::readBool(char*, char*, bool*)
                0x00000000c0012e4a                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0012e76                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0012ea2                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0012ee3       0x36 sys/eject.32
                0x00000000c0012ee3                SysEject(regs*)
 .text          0x00000000c0012f19       0x18 sys/exit.32
                0x00000000c0012f19                SysExit(regs*)
 .text          0x00000000c0012f31       0x1f sys/getcwd.32
                0x00000000c0012f31                SysGetCwd(regs*)
 .text          0x00000000c0012f50        0xc sys/getpid.32
                0x00000000c0012f50                SysGetPID(regs*)
 .text          0x00000000c0012f5c       0x1a sys/getramdata.32
                0x00000000c0012f5c                SysGetRAMData(regs*)
 .text          0x00000000c0012f76       0x82 sys/getvgaptr.32
                0x00000000c0012f76                SysGetVGAPtr(regs*)
 .text          0x00000000c0012ff8       0xb9 sys/kill.32
                0x00000000c0012ff8                SysKill(regs*)
 .text          0x00000000c00130b1       0xa8 sys/loaddll.32
                0x00000000c00130b1                SysLoadDLL(regs*)
 .text          0x00000000c0013159       0x68 sys/read.32
                0x00000000c0013159                SysRead(regs*)
 .text          0x00000000c00131c1       0x29 sys/registersignal.32
                0x00000000c00131c1                SysRegisterSignal(regs*)
 .text          0x00000000c00131ea      0x19c sys/registry.32
                0x00000000c00131ea                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013261                SysRegistryReadExtent(regs*)
                0x00000000c00132a9                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00132d1                SysRegistryEnterDirectory(regs*)
                0x00000000c00132f9                SysRegistryGetNext(regs*)
                0x00000000c0013321                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001335b                SysRegistryOpen(regs*)
                0x00000000c001336f                SysRegistryClose(regs*)
 .text          0x00000000c0013386       0x55 sys/sbrk.32
                0x00000000c0013386                SysSbrk(regs*)
 .text          0x00000000c00133db       0x1c sys/setcwd.32
                0x00000000c00133db                SysSetCwd(regs*)
 .text          0x00000000c00133f7       0x96 sys/settime.32
                0x00000000c00133f7                SysSetTime(regs*)
 .text          0x00000000c001348d       0x4a sys/timezone.32
                0x00000000c001348d                SysTimezone(regs*)
 .text          0x00000000c00134d7       0x68 sys/write.32
                0x00000000c00134d7                SysWrite(regs*)
 .text          0x00000000c001353f       0x62 sys/wsbe.32
                0x00000000c001353f                SysWsbe(regs*)
 .text          0x00000000c00135a1       0x25 sys/yield.32
                0x00000000c00135a1                SysYield(regs*)
 .text          0x00000000c00135c6     0x1203 thr/elf.32
                0x00000000c00135c6                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001384d                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013a6c                Thr::runtimeReferenceHelper()
                0x00000000c0013a7f                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013ace                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0013d8c                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00144cd                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00144ff                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0014536                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0014550                Thr::loadDLL(char const*, bool)
                0x00000000c0014790                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00147c9        0x3 
 .text          0x00000000c00147cc     0x13b1 thr/prcssthr.32
                0x00000000c00147cc                userModeEntryPoint(void*)
                0x00000000c00147f4                changeTSS
                0x00000000c0014824                switchToThread(ThreadControlBlock*)
                0x00000000c00148d4                Process::addArgs(char**)
                0x00000000c0014940                Process::Process(char const*, Process*, char**)
                0x00000000c0014940                Process::Process(char const*, Process*, char**)
                0x00000000c0014b48                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014b48                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014d1c                taskStartupFunction
                0x00000000c0014d28                Semaphore::Semaphore(int)
                0x00000000c0014d28                Semaphore::Semaphore(int)
                0x00000000c0014d58                Mutex::Mutex()
                0x00000000c0014d58                Mutex::Mutex()
                0x00000000c0014d6c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0014e74                Process::createUserThread()
                0x00000000c0014e94                setupMultitasking(void (*)())
                0x00000000c0014fb8                schedule()
                0x00000000c001504c                Semaphore::tryAcquire()
                0x00000000c001510c                Semaphore::assertLocked(char const*)
                0x00000000c0015190                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00151b8                blockTask(TaskState)
                0x00000000c00151f0                waitTask(int, int*, int)
                0x00000000c0015234                milliTenthSleepUntil(unsigned int)
                0x00000000c00152d4                milliTenthSleep(unsigned int)
                0x00000000c00152e8                sleep(unsigned int)
                0x00000000c00152f8                Semaphore::acquire()
                0x00000000c00153c0                taskReturned
                0x00000000c0015404                Thr::processFromPID(int)
                0x00000000c00154b0                unblockTask(ThreadControlBlock*)
                0x00000000c001555c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015830                cleanerTaskFunction(void*)
                0x00000000c0015938                terminateTask(int)
                0x00000000c0015a24                Thr::terminateFromIRQ(int)
                0x00000000c0015a34                Semaphore::release()
 .text          0x00000000c0015b7d      0xbec vm86/vm8086.32
                0x00000000c0015b7d                Vm::inbv(unsigned short)
                0x00000000c0015b90                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015bc6                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015bd6                Vm::getSegment(unsigned int)
                0x00000000c0015bde                Vm::getOffset(unsigned int)
                0x00000000c0015be3                Vm::mainloop2()
                0x00000000c0015c1d                Vm::mainVm8086Loop(void*)
                0x00000000c0015c2d                Vm::mainloop3(unsigned long)
                0x00000000c0015c53                Vm::initialise8086()
                0x00000000c0015c96                Vm::finish8086()
                0x00000000c0015cf7                Vm::getOutput8086(unsigned char*)
                0x00000000c0015d1c                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015dd5                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015f62                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0015feb                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0015ffc                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001600e                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001601f                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016034                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001604a                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001605f                Vm::faultHandler(regs*)
 .text          0x00000000c0016769      0xaac arch/i386/hal.32
                0x00000000c0016769                noCopro(unsigned long)
                0x00000000c001676a                nmiHandler(regs*, void*)
                0x00000000c0016783                doubleFault(regs*, void*)
                0x00000000c001679c                displayDebugInfo(regs*)
                0x00000000c0016af8                HalSystemIdle()
                0x00000000c0016b74                displayProgramFault(char const*)
                0x00000000c0016bc0                gpFault(regs*, void*)
                0x00000000c0016c27                pgFault(regs*, void*)
                0x00000000c0016cb0                otherISRHandler(regs*, void*)
                0x00000000c0016ce4                opcodeFault(regs*, void*)
                0x00000000c0016d67                i386SaveCoprocessor(void*)
                0x00000000c0016d7b                i386LoadCoprocessor(void*)
                0x00000000c0016d8f                x87EmulHandler(regs*, void*)
                0x00000000c0016e2c                HalInitialiseCoprocessor()
                0x00000000c0016eda                HalPanic(char const*)
                0x00000000c0016fd3                HalQueryPerformanceCounter()
                0x00000000c0016fee                HalInitialise()
                0x00000000c00171a4                HalMakeBeep(int)
                0x00000000c00171de                HalGetRand()
                0x00000000c00171e1                HalEndOfInterrupt(int)
                0x00000000c0017212                HalRestart()
                0x00000000c0017213                HalShutdown()
                0x00000000c0017214                HalSleep()
 *fill*         0x00000000c0017215        0x3 
 .text          0x00000000c0017218      0x2dc arch/i386/pic.32
                0x00000000c0017218                picIoWait()
                0x00000000c0017220                picDisable()
                0x00000000c0017254                picGetIRQReg(int)
                0x00000000c00172d0                picOpen()
                0x00000000c0017454                picEOI(int)
 .text          0x00000000c00174f4      0x66e arch/i386/rtc.32
                0x00000000c00174f4                RTC::open(int, int, void*)
                0x00000000c00174f8                RTC::close(int, int, void*)
                0x00000000c00174fc                RTC::timeInSecondsUTC()
                0x00000000c001750e                RTC::timeInDatetimeUTC()
                0x00000000c0017534                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0017572                RTC::~RTC()
                0x00000000c0017572                RTC::~RTC()
                0x00000000c0017596                RTC::~RTC()
                0x00000000c00175c0                RTC::get_update_in_progress_flag()
                0x00000000c00175da                RTC::completeRTCRefresh()
                0x00000000c00178b4                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0017a62                rtcIRQHandler(regs*, void*)
                0x00000000c0017aa8                RTC::RTC()
                0x00000000c0017aa8                RTC::RTC()
 *fill*         0x00000000c0017b62        0x2 
 .text          0x00000000c0017b64      0x1f4 arch/i386/vga.32
                0x00000000c0017b64                HalConsoleScroll(int, int)
                0x00000000c0017c6c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0017cd0                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0017d58     0x1487 fs/fat/vfslink.32
                0x00000000c0017d58                FAT::getName()
                0x00000000c0017d60                FAT::tell(void*, unsigned long long*)
                0x00000000c0017d9c                FAT::stat(void*, unsigned long long*)
                0x00000000c0017dd8                FAT::~FAT()
                0x00000000c0017dd8                FAT::~FAT()
                0x00000000c0017dfc                FAT::~FAT()
                0x00000000c0017e24                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017ec8                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0017fa8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001818c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00183a8                FAT::allocateSwapfile(char const*, int)
                0x00000000c0018568                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00186d8                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0018738                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0018798                FAT::close(void*)
                0x00000000c00187ec                FAT::closeDir(void*)
                0x00000000c0018840                FAT::seek(void*, unsigned long long)
                0x00000000c0018898                fatWrapperReadDisk
                0x00000000c00188d8                fatWrapperWriteDisk
                0x00000000c0018918                fatWrapperIoctl
                0x00000000c0018a38                FAT::FAT()
                0x00000000c0018a38                FAT::FAT()
                0x00000000c0018a90                FAT::fixFilepath(char*)
                0x00000000c0018ad0                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0018c44                FAT::openDir(char const*, void**)
                0x00000000c0018cf4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018dec                FAT::unlink(char const*)
                0x00000000c0018e6c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019024                FAT::rename(char const*, char const*)
                0x00000000c00190f0                FAT::mkdir(char const*)
                0x00000000c0019170                FAT::exists(char const*)
 *fill*         0x00000000c00191df        0x1 
 .text          0x00000000c00191e0       0x94 fs/iso9660/helper.32
                0x00000000c00191e0                isoReadDiscSectorHelper
                0x00000000c001923c                iso_kprintf
                0x00000000c0019258                iso_kprintfd
 .text          0x00000000c0019274      0x714 fs/iso9660/vfslink.32
                0x00000000c0019274                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001927a                ISO9660::getName()
                0x00000000c0019280                ISO9660::closeDir(void*)
                0x00000000c001928a                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019290                ISO9660::unlink(char const*)
                0x00000000c0019296                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001929c                ISO9660::rename(char const*, char const*)
                0x00000000c00192a2                ISO9660::mkdir(char const*)
                0x00000000c00192a8                ISO9660::~ISO9660()
                0x00000000c00192a8                ISO9660::~ISO9660()
                0x00000000c00192cc                ISO9660::~ISO9660()
                0x00000000c00192f4                ISO9660::exists(char const*)
                0x00000000c0019308                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00193ee                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0019436                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019478                ISO9660::tell(void*, unsigned long long*)
                0x00000000c00194b6                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019508                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001964a                ISO9660::close(void*)
                0x00000000c001967a                ISO9660::openDir(char const*, void**)
                0x00000000c0019754                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001986f                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c00198ee                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0019960                ISO9660::ISO9660()
                0x00000000c0019960                ISO9660::ISO9660()
 .text          0x00000000c0019988      0x26c hal/sound/sndcard.32
                0x00000000c0019988                SoundCard::beginPlayback()
                0x00000000c0019996                SoundCard::stopPlayback()
                0x00000000c00199a4                SoundCard::SoundCard(char const*)
                0x00000000c00199a4                SoundCard::SoundCard(char const*)
                0x00000000c0019a42                SoundCard::~SoundCard()
                0x00000000c0019a42                SoundCard::~SoundCard()
                0x00000000c0019a66                SoundCard::~SoundCard()
                0x00000000c0019a90                SoundCard::configureRates(int, int, int)
                0x00000000c0019ac0                SoundCard::getSamples16(int, short*)
                0x00000000c0019b1c                SoundCard::getSamples32(int, int*)
                0x00000000c0019ba2                SoundCard::addChannel(SoundPort*)
                0x00000000c0019be0                SoundCard::removeChannel(int)
 .text          0x00000000c0019bf4      0x393 hal/sound/sndport.32
                0x00000000c0019bf4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019bf4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019c80                SoundPort::~SoundPort()
                0x00000000c0019c80                SoundPort::~SoundPort()
                0x00000000c0019cb4                SoundPort::unpause()
                0x00000000c0019cc0                SoundPort::pause()
                0x00000000c0019ccc                SoundPort::getBufferUsed()
                0x00000000c0019cd4                SoundPort::getBufferSize()
                0x00000000c0019cdc                SoundPort::buffer16(short*, int)
                0x00000000c0019d68                SoundPort::buffer32(int*, int)
                0x00000000c0019df4                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0019ec4                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0019f87        0x0 hw/bus/isa.32
 *fill*         0x00000000c0019f87        0x1 
 .text          0x00000000c0019f88      0xbc5 hw/bus/pci.32
                0x00000000c0019f88                PCI::open(int, int, void*)
                0x00000000c0019fa6                PCI::close(int, int, void*)
                0x00000000c0019faa                PCI::PCI()
                0x00000000c0019faa                PCI::PCI()
                0x00000000c001a042                PCI::readBAR8(unsigned int, int)
                0x00000000c001a05e                PCI::readBAR16(unsigned int, int)
                0x00000000c001a07c                PCI::readBAR32(unsigned int, int)
                0x00000000c001a098                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001a0b8                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001a0da                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001a0fa                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a170                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a21a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a23e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001a266                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001a2b0                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001a2d8                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a2fc                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001a320                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001a348                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a3ac                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001a492                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a75c                PCI::checkBus(unsigned char)
                0x00000000c001a780                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a906                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001aa82                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001aaf4                PCI::detect()
 *fill*         0x00000000c001ab4d        0x1 
 .text          0x00000000c001ab4e      0xb96 hw/diskctrl/ide.32
                0x00000000c001ab4e                IDE::close(int, int, void*)
                0x00000000c001ab52                IDE::IDE()
                0x00000000c001ab52                IDE::IDE()
                0x00000000c001ab86                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ab98                selectDrive(unsigned char, unsigned char)
                0x00000000c001ab9a                IDE::getBase(unsigned char)
                0x00000000c001abac                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ac6c                IDE::read(unsigned char, unsigned char)
                0x00000000c001ad20                IDE::waitInterrupt(unsigned char)
                0x00000000c001ad82                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ad9e                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001adba                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ae04                IDE::open(int, int, void*)
                0x00000000c001b23e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001b30e                IDE::detect()
                0x00000000c001b5d6                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001b690                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001b6e4      0x32c hw/diskctrl/satabus.32
                0x00000000c001b6e4                SATABus::close(int, int, void*)
                0x00000000c001b6e8                SATABus::detect()
                0x00000000c001b6ea                SATABus::SATABus()
                0x00000000c001b6ea                SATABus::SATABus()
                0x00000000c001b770                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b7a2                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b7ea                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b80a                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b834                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001b946                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001b9f0                SATABus::open(int, int, void*)
 .text          0x00000000c001ba10      0x96d hw/diskphys/ata.32
                0x00000000c001ba10                ATA::close(int, int, void*)
                0x00000000c001ba34                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001ba36                ATA::ATA()
                0x00000000c001ba36                ATA::ATA()
                0x00000000c001ba64                ATA::flush(bool)
                0x00000000c001bab2                ATA::readyForCommand()
                0x00000000c001bafe                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001bec2                ATA::detectCHS()
                0x00000000c001beec                ATA::open(int, int, void*)
                0x00000000c001bfb8                combineCharAndColour(char, unsigned char)
                0x00000000c001bfc9                combineColours(unsigned char, unsigned char)
                0x00000000c001bfd6                ATA::read(unsigned long long, int, void*)
                0x00000000c001c1ac                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001c37d        0x1 
 .text          0x00000000c001c37e      0x612 hw/diskphys/atapi.32
                0x00000000c001c37e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c384                ATAPI::close(int, int, void*)
                0x00000000c001c3a8                ATAPI::ATAPI()
                0x00000000c001c3a8                ATAPI::ATAPI()
                0x00000000c001c3d6                ATAPI::readyForCommand()
                0x00000000c001c428                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c6e8                ATAPI::diskRemoved()
                0x00000000c001c722                ATAPI::eject()
                0x00000000c001c76a                ATAPI::diskInserted()
                0x00000000c001c776                ATAPI::detectMedia()
                0x00000000c001c836                ATAPI::open(int, int, void*)
                0x00000000c001c916                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001c990      0x7ff hw/diskphys/sata.32
                0x00000000c001c990                SATA::close(int, int, void*)
                0x00000000c001c9b4                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001c9b6                SATA::open(int, int, void*)
                0x00000000c001ca60                SATA::SATA()
                0x00000000c001ca60                SATA::SATA()
                0x00000000c001ca8e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cce0                SATA::read(unsigned long long, int, void*)
                0x00000000c001cf30                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d18f        0x1 
 .text          0x00000000c001d190      0x5d8 hw/diskphys/satapi.32
                0x00000000c001d190                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001d196                SATAPI::close(int, int, void*)
                0x00000000c001d1ba                SATAPI::SATAPI()
                0x00000000c001d1ba                SATAPI::SATAPI()
                0x00000000c001d1e8                SATAPI::diskRemoved()
                0x00000000c001d1ea                SATAPI::diskInserted()
                0x00000000c001d206                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001d4ec                SATAPI::eject()
                0x00000000c001d528                SATAPI::detectMedia()
                0x00000000c001d57e                SATAPI::open(int, int, void*)
                0x00000000c001d67e                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d768      0x45b hw/intctrl/apic.32
                0x00000000c001d768                IOAPIC::close(int, int, void*)
                0x00000000c001d76e                apicGetBase()
                0x00000000c001d7b4                IOAPIC::IOAPIC()
                0x00000000c001d7b4                IOAPIC::IOAPIC()
                0x00000000c001d7dc                apicOpen()
                0x00000000c001d958                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d98a                IOAPIC::read(int)
                0x00000000c001d9b2                IOAPIC::open(int, int, void*)
                0x00000000c001da98                IOAPIC::write(int, int)
                0x00000000c001dac4                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001dbc3        0x1 
 .text          0x00000000c001dbc4       0xf0 hw/timer/apictimer.32
                0x00000000c001dbc4                APICTimer::close(int, int, void*)
                0x00000000c001dbcc                apicTimerHandler(regs*, void*)
                0x00000000c001dbf4                APICTimer::open(int, int, void*)
                0x00000000c001dc64                APICTimer::write(int)
                0x00000000c001dc8c                APICTimer::APICTimer()
                0x00000000c001dc8c                APICTimer::APICTimer()
 .text          0x00000000c001dcb4      0x1ad hw/timer/pit.32
                0x00000000c001dcb4                PIT::write(int)
                0x00000000c001dd38                pitHandler(regs*, void*)
                0x00000000c001dd60                PIT::open(int, int, void*)
                0x00000000c001ddb0                PIT::close(int, int, void*)
                0x00000000c001dde0                PIT::PIT()
                0x00000000c001dde0                PIT::PIT()
 *fill*         0x00000000c001de61        0xf 
 .text          0x00000000c001de70       0x83 arch/i386/avx.32
                0x00000000c001de70                avxDetect
                0x00000000c001de9a                avxSave
                0x00000000c001deab                avxLoad
                0x00000000c001debc                avxInit
                0x00000000c001dede                avxClose
                0x00000000c001dedf                wouldSheSayYes
 *fill*         0x00000000c001def3        0xd 
 .text          0x00000000c001df00      0x2ec arch/i386/interrupt.32
                0x00000000c001df00                isr0
                0x00000000c001df10                isr1
                0x00000000c001df1a                isr2
                0x00000000c001df24                isr3
                0x00000000c001df2e                isr4
                0x00000000c001df38                isr5
                0x00000000c001df42                isr6
                0x00000000c001df4c                isr7
                0x00000000c001df56                isr8
                0x00000000c001df5e                isr9
                0x00000000c001df68                isr10
                0x00000000c001df70                isr11
                0x00000000c001df78                isr12
                0x00000000c001df80                isr13
                0x00000000c001df9a                isr14
                0x00000000c001dfa2                isr15
                0x00000000c001dfac                isr16
                0x00000000c001dfb6                isr17
                0x00000000c001dfc0                isr18
                0x00000000c001dfca                irq3
                0x00000000c001dfd4                irq4
                0x00000000c001dfde                irq5
                0x00000000c001dfe8                irq6
                0x00000000c001dff2                irq7
                0x00000000c001dffc                irq8
                0x00000000c001e006                irq9
                0x00000000c001e010                irq10
                0x00000000c001e01a                irq11
                0x00000000c001e024                irq12
                0x00000000c001e02e                irq13
                0x00000000c001e038                irq14
                0x00000000c001e042                irq15
                0x00000000c001e04c                irq1
                0x00000000c001e053                irq2
                0x00000000c001e05a                isr96
                0x00000000c001e061                irq0
                0x00000000c001e066                int_common_stub
                0x00000000c001e098                syscall_common_stub
                0x00000000c001e19c                irq16
                0x00000000c001e1a6                irq17
                0x00000000c001e1b0                irq18
                0x00000000c001e1ba                irq19
                0x00000000c001e1c4                irq20
                0x00000000c001e1ce                irq21
                0x00000000c001e1d8                irq22
                0x00000000c001e1e2                irq23
 *fill*         0x00000000c001e1ec        0x4 
 .text          0x00000000c001e1f0       0x10 arch/i386/rdrand.32
                0x00000000c001e1f0                i386GetRDRAND
 .text          0x00000000c001e200       0x39 arch/i386/sse.32
                0x00000000c001e200                absolutelyNoChanceInHell
                0x00000000c001e200                sseDetect
                0x00000000c001e218                sseSave
                0x00000000c001e220                sseLoad
                0x00000000c001e228                sseInit
                0x00000000c001e238                sseClose
 *fill*         0x00000000c001e239        0x7 
 .text          0x00000000c001e240       0x49 arch/i386/x87.32
                0x00000000c001e246                x87Detect
                0x00000000c001e261                x87Save
                0x00000000c001e268                x87Load
                0x00000000c001e26f                x87Init
                0x00000000c001e288                x87Close
 *fill*         0x00000000c001e289        0x3 
 .text          0x00000000c001e28c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e2b1        0x0 crtn.32
 *fill*         0x00000000c001e2b1        0x3 
 .text          0x00000000c001e2b4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001e2b4                __divdi3
 *fill*         0x00000000c001e3ff        0x1 
 .text          0x00000000c001e400      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001e400                __moddi3
 *fill*         0x00000000c001e57e        0x2 
 .text          0x00000000c001e580       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001e580                __udivdi3
 *fill*         0x00000000c001e67f        0x1 
 .text          0x00000000c001e680      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001e680                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e7a0        0x0
 .iplt          0x00000000c001e7a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e79a        0xf
 .init          0x00000000c001e79a        0x3 crti.32
                0x00000000c001e79a                _init
 .init          0x00000000c001e79d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e7a2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e7a7        0x2 crtn.32

.fini           0x00000000c001e7a9        0xa
 .fini          0x00000000c001e7a9        0x3 crti.32
                0x00000000c001e7a9                _fini
 .fini          0x00000000c001e7ac        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e7b1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e7b4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e7b4       0x23 core/computer.32
                0x00000000c001e7b4                Computer::~Computer()
                0x00000000c001e7b4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e7d8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e7d8       0x2a core/computer.32
                0x00000000c001e7d8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e802       0x21
 .text._Z10idleCommonv
                0x00000000c001e802       0x21 core/idle.32
                0x00000000c001e802                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e824        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e824        0x2 core/unixfile.32
                0x00000000c001e824                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e824                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e826       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e826       0x42 core/unixfile.32
                0x00000000c001e826                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e826                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e868       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e868       0xd3 core/unixfile.32
                0x00000000c001e868                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e93c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e93c        0x7 core/unixfile.32
                0x00000000c001e93c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e944       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e944       0xa1 core/unixfile.32
                0x00000000c001e944                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e9e6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e9e6        0x8 core/unixfile.32
                0x00000000c001e9e6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e9ee       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e9ee       0x1a hal/device.32
                0x00000000c001e9ee                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e9ee                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ea08       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ea08       0x2a hal/device.32
                0x00000000c001ea08                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ea32       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ea32       0xdc hal/device.32
                0x00000000c001ea32                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001eb0e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001eb0e       0x42 hal/device.32
                0x00000000c001eb0e                LinkedList<Device>::LinkedList()
                0x00000000c001eb0e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eb50       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eb50       0x1c hal/timer.32
                0x00000000c001eb50                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001eb6c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001eb6c        0x7 hal/timer.32
                0x00000000c001eb6c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001eb74       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001eb74       0xbc hal/timer.32
                0x00000000c001eb74                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ec30       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ec30       0xda hal/timer.32
                0x00000000c001ec30                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ed0c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ed0c       0x23 hw/acpi.32
                0x00000000c001ed0c                ACPI::~ACPI()
                0x00000000c001ed0c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ed30       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ed30       0x2a hw/acpi.32
                0x00000000c001ed30                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ed5c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ed5c        0x2 hw/acpi.32
                0x00000000c001ed5c                LinkedList<Device>::~LinkedList()
                0x00000000c001ed5c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ed60       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ed60       0x1c hw/acpi.32
                0x00000000c001ed60                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ed7c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ed7c        0x7 hw/acpi.32
                0x00000000c001ed7c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ed84       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ed84       0xb8 hw/acpi.32
                0x00000000c001ed84                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ee3c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ee3c       0x23 hw/cpu.32
                0x00000000c001ee3c                CPU::~CPU()
                0x00000000c001ee3c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ee60       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ee60       0x2a hw/cpu.32
                0x00000000c001ee60                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ee8c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ee8c        0x8 sys/kill.32
                0x00000000c001ee8c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ee94        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ee94        0x2 thr/prcssthr.32
                0x00000000c001ee94                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ee94                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ee98       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ee98       0x49 thr/prcssthr.32
                0x00000000c001ee98                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ee98                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001eee4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001eee4       0x42 thr/prcssthr.32
                0x00000000c001eee4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001eee4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001ef26       0x23
 .text._ZN3PCID2Ev
                0x00000000c001ef26       0x23 hw/bus/pci.32
                0x00000000c001ef26                PCI::~PCI()
                0x00000000c001ef26                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001ef4a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001ef4a       0x2a hw/bus/pci.32
                0x00000000c001ef4a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001ef74       0x23
 .text._ZN3IDED2Ev
                0x00000000c001ef74       0x23 hw/diskctrl/ide.32
                0x00000000c001ef74                IDE::~IDE()
                0x00000000c001ef74                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001ef98       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001ef98       0x2a hw/diskctrl/ide.32
                0x00000000c001ef98                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001efc2       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001efc2       0x23 hw/diskctrl/satabus.32
                0x00000000c001efc2                SATABus::~SATABus()
                0x00000000c001efc2                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001efe6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001efe6       0x2a hw/diskctrl/satabus.32
                0x00000000c001efe6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001f010       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f010       0x23 hw/diskphys/ata.32
                0x00000000c001f010                ATA::~ATA()
                0x00000000c001f010                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f034       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f034       0x2a hw/diskphys/ata.32
                0x00000000c001f034                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f05e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f05e       0x23 hw/diskphys/atapi.32
                0x00000000c001f05e                ATAPI::~ATAPI()
                0x00000000c001f05e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f082       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f082       0x2a hw/diskphys/atapi.32
                0x00000000c001f082                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001f0ac       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001f0ac       0x23 hw/diskphys/sata.32
                0x00000000c001f0ac                SATA::~SATA()
                0x00000000c001f0ac                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001f0d0       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001f0d0       0x2a hw/diskphys/sata.32
                0x00000000c001f0d0                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001f0fa       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001f0fa       0x23 hw/diskphys/satapi.32
                0x00000000c001f0fa                SATAPI::~SATAPI()
                0x00000000c001f0fa                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001f11e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001f11e       0x2a hw/diskphys/satapi.32
                0x00000000c001f11e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001f148       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f148       0x23 hw/intctrl/apic.32
                0x00000000c001f148                IOAPIC::~IOAPIC()
                0x00000000c001f148                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f16c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f16c       0x2a hw/intctrl/apic.32
                0x00000000c001f16c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f198       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f198       0x23 hw/timer/apictimer.32
                0x00000000c001f198                APICTimer::~APICTimer()
                0x00000000c001f198                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f1bc       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f1bc       0x2a hw/timer/apictimer.32
                0x00000000c001f1bc                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f1e8       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f1e8       0x23 hw/timer/pit.32
                0x00000000c001f1e8                PIT::~PIT()
                0x00000000c001f1e8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f20c       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f20c       0x2a hw/timer/pit.32
                0x00000000c001f20c                PIT::~PIT()

.rodata         0x00000000c001f236     0x2b92
                0x00000000c001f236                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f236        0x2 
 .ctors         0x00000000c001f238        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f23c        0x4 core/unixfile.32
 .ctors         0x00000000c001f240        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f244        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f248                end_ctors = .
                0x00000000c001f248                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f248        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f24c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f24c                __DTOR_END__
                0x00000000c001f250                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f250       0x10 
 .rodata        0x00000000c001f260      0x101 acpica/utclib.32
                0x00000000c001f260                AcpiGbl_Ctypes
 *fill*         0x00000000c001f361        0x3 
 .rodata        0x00000000c001f364       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001f37c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001f3c6       0x1a 
 .rodata        0x00000000c001f3e0       0xed fs/fat/ff.32
 *fill*         0x00000000c001f4cd       0x13 
 .rodata        0x00000000c001f4e0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f8e0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001f94f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001fa64       0x43 core/computer.32
 *fill*         0x00000000c001faa7        0x1 
 .rodata._ZTV8Computer
                0x00000000c001faa8       0x2c core/computer.32
                0x00000000c001faa8                vtable for Computer
 .rodata.str1.4
                0x00000000c001fad4       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001fb04        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001fb10       0x17 core/main.32
 *fill*         0x00000000c001fb27        0x1 
 .rodata.str1.4
                0x00000000c001fb28       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fbcd       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fc25       0x39 core/pipe.32
 *fill*         0x00000000c001fc5e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001fc60       0x1c core/pipe.32
                0x00000000c001fc60                vtable for Pipe
 .rodata.str1.1
                0x00000000c001fc7c       0x2b core/terminal.32
 *fill*         0x00000000c001fca7        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001fca8       0x1c core/terminal.32
                0x00000000c001fca8                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001fcc4       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001fce6       0x15 core/unixfile.32
 *fill*         0x00000000c001fcfb        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001fcfc       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001fd47        0x8 core/unixfile.32
 *fill*         0x00000000c001fd4f        0x1 
 .rodata.str1.4
                0x00000000c001fd50       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001fd70       0x1c core/unixfile.32
                0x00000000c001fd70                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001fd8c       0x1c core/unixfile.32
                0x00000000c001fd8c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001fda8      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001ff0f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020016       0x33 coreobjs/c++.32
 *fill*         0x00000000c0020049        0x3 
 .rodata        0x00000000c002004c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002019c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c002019c       0x68 fs/vfs.32
                0x00000000c002019c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020204       0x1c fs/vfs.32
                0x00000000c0020204                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020220       0x1c fs/vfs.32
                0x00000000c0020220                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002023c       0x2c hal/bus.32
                0x00000000c002023c                vtable for Bus
 .rodata.str1.1
                0x00000000c0020268       0x1e hal/clock.32
 *fill*         0x00000000c0020286        0x2 
 .rodata._ZTV5Clock
                0x00000000c0020288       0x3c hal/clock.32
                0x00000000c0020288                vtable for Clock
 *fill*         0x00000000c00202c4       0x1c 
 .rodata        0x00000000c00202e0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020310       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020368       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020368       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0020368       0x2c hal/device.32
                0x00000000c0020368                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020394       0x2c hal/device.32
                0x00000000c0020394                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00203c0       0x2c hal/diskctrl.32
                0x00000000c00203c0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00203ec       0x38 hal/diskphys.32
                0x00000000c00203ec                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020424       0x3e hal/intctrl.32
 *fill*         0x00000000c0020462        0x2 
 .rodata.str1.4
                0x00000000c0020464       0x5d hal/intctrl.32
 .rodata        0x00000000c00204c1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0020514       0x34 hal/keybrd.32
                0x00000000c0020514                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020548       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002058c       0x2c hal/logidisk.32
                0x00000000c002058c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00205b8       0x2c hal/mouse.32
                0x00000000c00205b8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c00205e4       0x34 hal/nic.32
                0x00000000c00205e4                vtable for NIC
 .rodata.str1.1
                0x00000000c0020618        0xb hal/partition.32
 *fill*         0x00000000c0020623        0x1 
 .rodata._ZTV6Serial
                0x00000000c0020624       0x44 hal/serial.32
                0x00000000c0020624                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020668       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020668        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020668       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020668       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0020668       0x30 hal/timer.32
                0x00000000c0020668                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020698       0x10 hal/vcache.32
                0x00000000c0020698                vtable for VCache
 .rodata.str1.1
                0x00000000c00206a8       0x93 hal/video.32
 *fill*         0x00000000c002073b        0x1 
 .rodata._ZTV5Video
                0x00000000c002073c       0x4c hal/video.32
                0x00000000c002073c                vtable for Video
 .rodata.str1.4
                0x00000000c0020788       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0020823      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c002095f       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c002095f        0x8 hw/acpi.32
 *fill*         0x00000000c002095f        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0020960       0x2c hw/acpi.32
                0x00000000c0020960                vtable for ACPI
 .rodata.str1.1
                0x00000000c002098c      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c0020af9        0x3 
 .rodata._ZTV3CPU
                0x00000000c0020afc       0x2c hw/cpu.32
                0x00000000c0020afc                vtable for CPU
 .rodata.str1.1
                0x00000000c0020b28       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0020b64       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0020bf5       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0020cbe       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020d06       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0020d31       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0020da7       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020dec        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0020df6       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0020e17       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0020ead       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0020f01       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0020f2d      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00210f9       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0021150      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002125c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002125c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002125c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002125c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002125c       0xa0 vm86/vm8086.32
 .rodata        0x00000000c00212fc       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002132c      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c00214bc       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c002152f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0021544       0x3c arch/i386/rtc.32
                0x00000000c0021544                vtable for RTC
 .rodata.str1.1
                0x00000000c0021580       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00215c1        0x3 
 .rodata._ZTV3FAT
                0x00000000c00215c4       0x68 fs/fat/vfslink.32
                0x00000000c00215c4                vtable for FAT
 .rodata.str1.1
                0x00000000c002162c       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c002162c      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0021764       0x68 fs/iso9660/vfslink.32
                0x00000000c0021764                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00217cc       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0021810       0x34 hal/sound/sndcard.32
                0x00000000c0021810                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0021844       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0021883       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00218bb       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c002195c       0x2c hw/bus/pci.32
                0x00000000c002195c                vtable for PCI
 .rodata.str1.1
                0x00000000c0021988       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0021a0f        0x1 
 .rodata._ZTV3IDE
                0x00000000c0021a10       0x2c hw/diskctrl/ide.32
                0x00000000c0021a10                vtable for IDE
 .rodata.str1.4
                0x00000000c0021a3c       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0021a60       0x2c hw/diskctrl/satabus.32
                0x00000000c0021a60                vtable for SATABus
 .rodata.str1.1
                0x00000000c0021a8c       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0021a9e        0x2 
 .rodata._ZTV3ATA
                0x00000000c0021aa0       0x38 hw/diskphys/ata.32
                0x00000000c0021aa0                vtable for ATA
 .rodata.str1.1
                0x00000000c0021ad8        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0021ae5        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0021ae8       0x38 hw/diskphys/atapi.32
                0x00000000c0021ae8                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0021b20       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0021b9c       0x38 hw/diskphys/sata.32
                0x00000000c0021b9c                vtable for SATA
 .rodata.str1.1
                0x00000000c0021bd4       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0021cbe        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0021cc0       0x38 hw/diskphys/satapi.32
                0x00000000c0021cc0                vtable for SATAPI
 .rodata        0x00000000c0021cf8        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0021d00       0x2c hw/intctrl/apic.32
                0x00000000c0021d00                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0021d2c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0021d47        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0021d48       0x30 hw/timer/apictimer.32
                0x00000000c0021d48                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021d78       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021d95        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021d98       0x30 hw/timer/pit.32
                0x00000000c0021d98                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021dc8      0x4dd
 *(.data)
 .data          0x00000000c0021dc8        0x0 crti.32
 .data          0x00000000c0021dc8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021dc8                __dso_handle
 .data          0x00000000c0021dcc        0x0 acpica/utclib.32
 .data          0x00000000c0021dcc        0x0 core/malloc.32
 .data          0x00000000c0021dcc        0x0 libk/ctype.32
 .data          0x00000000c0021dcc        0x0 libk/string.32
 .data          0x00000000c0021dcc        0x0 fs/fat/diskio.32
 .data          0x00000000c0021dcc        0x0 fs/fat/ff.32
 .data          0x00000000c0021dcc        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0021dcc        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0021dcc        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0021dcc        0x0 core/computer.32
 .data          0x00000000c0021dcc        0x0 core/gdt.32
 .data          0x00000000c0021dcc        0x0 core/idle.32
 .data          0x00000000c0021dcc        0x0 core/idt.32
 .data          0x00000000c0021dcc        0x4 core/kheap.32
 .data          0x00000000c0021dd0        0x0 core/main.32
 .data          0x00000000c0021dd0        0x4 core/physmgr.32
                0x00000000c0021dd0                Phys::bitmap
 .data          0x00000000c0021dd4        0x0 core/pipe.32
 *fill*         0x00000000c0021dd4        0xc 
 .data          0x00000000c0021de0       0x60 core/terminal.32
                0x00000000c0021de0                VgaText::hiddenOut
                0x00000000c0021e00                ansiToVGAMappings
 .data          0x00000000c0021e40        0x0 core/tss.32
 .data          0x00000000c0021e40        0x4 core/unixfile.32
                0x00000000c0021e40                UnixFile::nextFd
 .data          0x00000000c0021e44       0x15 core/virtmgr.32
                0x00000000c0021e44                Virt::pageAllocPtr
                0x00000000c0021e48                Virt::bitmap
                0x00000000c0021e4c                Virt::swapfileSectorsPerPage
                0x00000000c0021e50                Virt::swapfileLength
                0x00000000c0021e54                Virt::swapfileSector
                0x00000000c0021e58                Virt::swapfileDrive
 *fill*         0x00000000c0021e59        0x3 
 .data          0x00000000c0021e5c        0x4 coreobjs/c++.32
                0x00000000c0021e5c                __stack_chk_guard
 .data          0x00000000c0021e60        0x0 dbg/kconsole.32
 .data          0x00000000c0021e60        0x0 fs/vfs.32
 .data          0x00000000c0021e60        0x0 hal/bus.32
 .data          0x00000000c0021e60        0x0 hal/buzzer.32
 .data          0x00000000c0021e60        0x0 hal/clock.32
 .data          0x00000000c0021e60        0x0 hal/device.32
 .data          0x00000000c0021e60        0x0 hal/diskctrl.32
 .data          0x00000000c0021e60        0x0 hal/diskphys.32
 .data          0x00000000c0021e60        0x0 hal/fpu.32
 .data          0x00000000c0021e60        0x0 hal/intctrl.32
 .data          0x00000000c0021e60        0x0 hal/keybrd.32
 .data          0x00000000c0021e60        0x0 hal/logidisk.32
 .data          0x00000000c0021e60        0x0 hal/mouse.32
 .data          0x00000000c0021e60        0x0 hal/nic.32
 .data          0x00000000c0021e60        0x0 hal/partition.32
 .data          0x00000000c0021e60        0x0 hal/serial.32
 .data          0x00000000c0021e60        0x0 hal/timer.32
 .data          0x00000000c0021e60        0x0 hal/vcache.32
 .data          0x00000000c0021e60        0x0 hal/video.32
 .data          0x00000000c0021e60       0x10 hw/acpi.32
                0x00000000c0021e60                legacyIRQRemaps
 .data          0x00000000c0021e70        0x4 hw/cpu.32
                0x00000000c0021e70                lastCode
 *fill*         0x00000000c0021e74        0xc 
 .data          0x00000000c0021e80      0x142 krnl/bootmsg.32
                0x00000000c0021e80                KiSplashScreen
 *fill*         0x00000000c0021fc2       0x1e 
 .data          0x00000000c0021fe0       0x4d krnl/env.32
                0x00000000c0021fe0                defaultSysEnv
 .data          0x00000000c002202d        0x0 krnl/inlines.32
 .data          0x00000000c002202d        0x0 krnl/panic.32
 .data          0x00000000c002202d        0x0 krnl/powctrl.32
 .data          0x00000000c002202d        0x0 krnl/random.32
 .data          0x00000000c002202d        0x0 krnl/resolve.32
 *fill*         0x00000000c002202d       0x13 
 .data          0x00000000c0022040       0x4c krnl/signal.32
                0x00000000c0022040                KiDefaultSignalHandlers
 *fill*         0x00000000c002208c       0x14 
 .data          0x00000000c00220a0       0xf0 krnl/syscalls.32
                0x00000000c00220a0                systemCallHandlers
 .data          0x00000000c0022190        0x0 net/ethernet.32
 *fill*         0x00000000c0022190       0x10 
 .data          0x00000000c00221a0      0x100 reg/cm.32
                0x00000000c00221a0                CmComponents
 .data          0x00000000c00222a0        0x0 reg/registry.32
 .data          0x00000000c00222a0        0x0 sys/eject.32
 .data          0x00000000c00222a0        0x0 sys/exit.32
 .data          0x00000000c00222a0        0x0 sys/getcwd.32
 .data          0x00000000c00222a0        0x0 sys/getpid.32
 .data          0x00000000c00222a0        0x0 sys/getramdata.32
 .data          0x00000000c00222a0        0x0 sys/getvgaptr.32
 .data          0x00000000c00222a0        0x0 sys/kill.32
 .data          0x00000000c00222a0        0x0 sys/loaddll.32
 .data          0x00000000c00222a0        0x0 sys/read.32
 .data          0x00000000c00222a0        0x0 sys/registersignal.32
 .data          0x00000000c00222a0        0x0 sys/registry.32
 .data          0x00000000c00222a0        0x0 sys/sbrk.32
 .data          0x00000000c00222a0        0x0 sys/setcwd.32
 .data          0x00000000c00222a0        0x0 sys/settime.32
 .data          0x00000000c00222a0        0x0 sys/timezone.32
 .data          0x00000000c00222a0        0x0 sys/write.32
 .data          0x00000000c00222a0        0x0 sys/wsbe.32
 .data          0x00000000c00222a0        0x0 sys/yield.32
 .data          0x00000000c00222a0        0x0 thr/elf.32
 .data          0x00000000c00222a0        0x4 thr/prcssthr.32
                0x00000000c00222a0                Thr::nextPID
 .data          0x00000000c00222a4        0x0 vm86/vm8086.32
 .data          0x00000000c00222a4        0x0 arch/i386/hal.32
 .data          0x00000000c00222a4        0x0 arch/i386/pic.32
 .data          0x00000000c00222a4        0x0 arch/i386/rtc.32
 .data          0x00000000c00222a4        0x0 arch/i386/vga.32
 .data          0x00000000c00222a4        0x0 fs/fat/vfslink.32
 .data          0x00000000c00222a4        0x0 fs/iso9660/helper.32
 .data          0x00000000c00222a4        0x1 fs/iso9660/vfslink.32
                0x00000000c00222a4                recentDriveletter
 .data          0x00000000c00222a5        0x0 hal/sound/sndcard.32
 .data          0x00000000c00222a5        0x0 hal/sound/sndport.32
 .data          0x00000000c00222a5        0x0 hw/bus/isa.32
 .data          0x00000000c00222a5        0x0 hw/bus/pci.32
 .data          0x00000000c00222a5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00222a5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00222a5        0x0 hw/diskphys/ata.32
 .data          0x00000000c00222a5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00222a5        0x0 hw/diskphys/sata.32
 .data          0x00000000c00222a5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00222a5        0x0 hw/intctrl/apic.32
 .data          0x00000000c00222a5        0x0 hw/timer/apictimer.32
 .data          0x00000000c00222a5        0x0 hw/timer/pit.32
 .data          0x00000000c00222a5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00222a5        0x0 crtn.32
 .data          0x00000000c00222a5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00222a5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00222a5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00222a5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00222a8        0x0
 .got           0x00000000c00222a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00222a8        0x0
 .got.plt       0x00000000c00222a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00222a8        0x0
 .igot.plt      0x00000000c00222a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00222a8        0x0
 .tm_clone_table
                0x00000000c00222a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00222a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00222a5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00222a5        0x3 
 .eh_frame      0x00000000c00222a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00222a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00222a8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0022300       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0022340       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00223ac       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0023000       0x7d
 *(userkernel)
 userkernel     0x00000000c0023000       0x52 krnl/signal.32
                0x00000000c0023000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002302c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0023052       0x2b krnl/syscalls.32
                0x00000000c0023052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0024000        0x1
 *(align_previous)
 align_previous
                0x00000000c0024000        0x1 krnl/signal.32
                0x00000000c0024000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0024004        0x0
 .rel.got       0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0024001     0x4ba7
                0x00000000c0024001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0024001       0x1f 
 COMMON         0x00000000c0024020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0024020                dcache
                0x00000000c0024060                cdDriveLetter
                0x00000000c0024080                icache
 *(.bss)
 .bss           0x00000000c00240c0        0x0 crti.32
 .bss           0x00000000c00240c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00240e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00240e4       0x1c 
 .bss           0x00000000c0024100      0x378 core/malloc.32
 .bss           0x00000000c0024478        0x0 libk/ctype.32
 .bss           0x00000000c0024478        0x0 libk/string.32
 .bss           0x00000000c0024478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024478        0x8 
 .bss           0x00000000c0024480       0x88 fs/fat/ff.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0024508       0x18 
 .bss           0x00000000c0024520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0024eb8        0x6 core/computer.32
                0x00000000c0024eb8                Krnl::computer
                0x00000000c0024ebc                KeIsPreemptionOn
                0x00000000c0024ebd                KeIsSchedulingOn
 *fill*         0x00000000c0024ebe        0x2 
 .bss           0x00000000c0024ec0        0x6 core/gdt.32
                0x00000000c0024ec0                gdtDescr
 .bss           0x00000000c0024ec6        0x0 core/idle.32
 *fill*         0x00000000c0024ec6        0x2 
 .bss           0x00000000c0024ec8        0x6 core/idt.32
                0x00000000c0024ec8                idtDescr
 .bss           0x00000000c0024ece        0x0 core/kheap.32
 *fill*         0x00000000c0024ece        0x2 
 .bss           0x00000000c0024ed0        0x4 core/main.32
                0x00000000c0024ed0                sysBootSettings
 .bss           0x00000000c0024ed4       0x29 core/physmgr.32
                0x00000000c0024ed4                Phys::forbidEvictions
                0x00000000c0024ed8                Phys::currentPagePointer
                0x00000000c0024edc                Phys::highestMem
                0x00000000c0024ee0                Phys::oldPercent
                0x00000000c0024ee4                Phys::usedPages
                0x00000000c0024ee8                Phys::usablePages
                0x00000000c0024eec                Phys::dmaUsage
 .bss           0x00000000c0024efd        0x0 core/pipe.32
 *fill*         0x00000000c0024efd        0x3 
 .bss           0x00000000c0024f00        0x9 core/terminal.32
                0x00000000c0024f00                terminalCycle
                0x00000000c0024f04                activeTerminal
                0x00000000c0024f08                VgaText::graphicMode
 *fill*         0x00000000c0024f09        0x1 
 .bss           0x00000000c0024f0a        0x2 core/tss.32
                0x00000000c0024f0a                doubleFaultSelector
 *fill*         0x00000000c0024f0c       0x14 
 .bss           0x00000000c0024f20       0x84 core/unixfile.32
                0x00000000c0024f20                sfileLpt
                0x00000000c0024f60                sfileCom
                0x00000000c0024f84                sfileNul
                0x00000000c0024f88                sfilePnt
                0x00000000c0024f8c                sfileAux
                0x00000000c0024f90                sfileCon
                0x00000000c0024f94                initialFilesAdded
                0x00000000c0024f98                unixFileLinkedList
 .bss           0x00000000c0024fa4       0x10 core/virtmgr.32
                0x00000000c0024fa4                twswaps
                0x00000000c0024fa8                swapBalance
                0x00000000c0024fac                Virt::swapfileBitmap
                0x00000000c0024fb0                firstVAS
 .bss           0x00000000c0024fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0024fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0024fb4        0x4 fs/vfs.32
                0x00000000c0024fb4                installedFilesystems
 .bss           0x00000000c0024fb8        0x0 hal/bus.32
 .bss           0x00000000c0024fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0024fb8        0x8 hal/clock.32
                0x00000000c0024fb8                User::dstOn
                0x00000000c0024fb9                User::timezoneHalfHourOffset
                0x00000000c0024fbc                User::timezoneHourOffset
 .bss           0x00000000c0024fc0        0x0 hal/device.32
 .bss           0x00000000c0024fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0024fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0024fc0        0x0 hal/fpu.32
 .bss           0x00000000c0024fc0     0x2000 hal/intctrl.32
                0x00000000c0024fc0                INT_contexts
                0x00000000c0025fc0                INT_handlers
 .bss           0x00000000c0026fc0      0x429 hal/keybrd.32
                0x00000000c0026fc0                keyboardWaitingTaskList
                0x00000000c0026fc4                keyboardSetupYet
                0x00000000c0026fc8                guiKeyboardHandler
                0x00000000c0026fe0                keystates
 *fill*         0x00000000c00273e9       0x17 
 .bss           0x00000000c0027400       0x88 hal/logidisk.32
                0x00000000c0027400                diskAssignments
                0x00000000c0027420                disks
 .bss           0x00000000c0027488        0x4 hal/mouse.32
                0x00000000c0027488                guiMouseHandler
 .bss           0x00000000c002748c        0x0 hal/nic.32
 .bss           0x00000000c002748c        0x0 hal/partition.32
 .bss           0x00000000c002748c        0x0 hal/serial.32
 .bss           0x00000000c002748c        0x4 hal/timer.32
                0x00000000c002748c                milliTenthsSinceBoot
 .bss           0x00000000c0027490        0x0 hal/vcache.32
 .bss           0x00000000c0027490        0x4 hal/video.32
                0x00000000c0027490                screen
 *fill*         0x00000000c0027494        0xc 
 .bss           0x00000000c00274a0      0x480 hw/acpi.32
                0x00000000c00274a0                systemSleepFunction
                0x00000000c00274a4                systemResetFunction
                0x00000000c00274a8                systemShutdownFunction
                0x00000000c00274ac                nextACPITable
                0x00000000c00274c0                acpiTables
                0x00000000c00276c0                usingXSDT
                0x00000000c00276c4                MADTpointer
                0x00000000c00276c8                RSDTpointer
                0x00000000c00276cc                RSDPpointer
                0x00000000c00276d0                nextAPICNMI
                0x00000000c00276e0                apicNMIInfo
                0x00000000c0027760                legacyIRQFlags
                0x00000000c0027780                ioapicDiscoveryNumber
                0x00000000c00277a0                ioapicFoundInMADT
                0x00000000c00277c0                ioapicAddresses
                0x00000000c0027840                ioapicGSIBase
                0x00000000c00278c0                processorDiscoveryNumber
                0x00000000c00278e0                matchingAPICID
                0x00000000c0027900                processorID
 .bss           0x00000000c0027920       0x10 hw/cpu.32
                0x00000000c0027920                lastD
                0x00000000c0027924                lastC
                0x00000000c0027928                lastB
                0x00000000c002792c                lastA
 .bss           0x00000000c0027930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0027930        0x8 krnl/env.32
                0x00000000c0027930                Krnl::userEnv
                0x00000000c0027934                Krnl::systemEnv
 .bss           0x00000000c0027938        0x0 krnl/inlines.32
 .bss           0x00000000c0027938        0x1 krnl/panic.32
                0x00000000c0027938                KeIsKernelInPanic
 *fill*         0x00000000c0027939        0x7 
 .bss           0x00000000c0027940       0x48 krnl/powctrl.32
                0x00000000c0027940                Krnl::powCtrlOnBattery
                0x00000000c0027960                Krnl::currentPowerSettings
                0x00000000c0027984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0027988        0x8 krnl/random.32
                0x00000000c0027988                kiRandSeed
 .bss           0x00000000c0027990        0x0 krnl/resolve.32
 .bss           0x00000000c0027990        0x0 krnl/signal.32
 .bss           0x00000000c0027990        0x0 krnl/syscalls.32
 .bss           0x00000000c0027990        0x0 net/ethernet.32
 .bss           0x00000000c0027990        0x4 reg/cm.32
 .bss           0x00000000c0027994        0x0 reg/registry.32
 .bss           0x00000000c0027994        0x0 sys/eject.32
 .bss           0x00000000c0027994        0x0 sys/exit.32
 .bss           0x00000000c0027994        0x0 sys/getcwd.32
 .bss           0x00000000c0027994        0x0 sys/getpid.32
 .bss           0x00000000c0027994        0x0 sys/getramdata.32
 .bss           0x00000000c0027994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0027994        0x0 sys/kill.32
 .bss           0x00000000c0027994        0x0 sys/loaddll.32
 .bss           0x00000000c0027994        0x0 sys/read.32
 .bss           0x00000000c0027994        0x0 sys/registersignal.32
 .bss           0x00000000c0027994        0x0 sys/registry.32
 .bss           0x00000000c0027994        0x0 sys/sbrk.32
 .bss           0x00000000c0027994        0x0 sys/setcwd.32
 .bss           0x00000000c0027994        0x0 sys/settime.32
 .bss           0x00000000c0027994        0x0 sys/timezone.32
 .bss           0x00000000c0027994        0x0 sys/write.32
 .bss           0x00000000c0027994        0x0 sys/wsbe.32
 .bss           0x00000000c0027994        0x0 sys/yield.32
 *fill*         0x00000000c0027994        0xc 
 .bss           0x00000000c00279a0      0x7a4 thr/elf.32
                0x00000000c00279a0                Thr::driverLookupNext
                0x00000000c00279c0                Thr::driverLookupLen
                0x00000000c0027bc0                Thr::driverLookupAddr
                0x00000000c0027dc0                Thr::driverNameLookup
                0x00000000c0027fc0                Thr::kernelSymbols
                0x00000000c0028040                Thr::kernelStringTable
                0x00000000c00280c0                Thr::kernelSymbolTable
                0x00000000c0028140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0028144        0x4 
 .bss           0x00000000c0028148       0x68 thr/prcssthr.32
                0x00000000c0028148                cleanerThread
                0x00000000c002814c                weNeedTheCleanerToNotBlock
                0x00000000c0028150                retValLockStuff
                0x00000000c0028154                retValSchedLock
                0x00000000c0028158                lockStuffLock
                0x00000000c002815c                schedulerLock
                0x00000000c0028160                taskSwitchesPostponedFlag
                0x00000000c0028164                postponeTaskSwitchesCounter
                0x00000000c0028168                irqDisableCounter
                0x00000000c002816c                terminatedTaskList
                0x00000000c0028178                sleepingTaskList
                0x00000000c0028184                taskList
                0x00000000c0028190                kernelProcess
 *fill*         0x00000000c00281b0       0x10 
 .bss           0x00000000c00281c0       0x40 vm86/vm8086.32
                0x00000000c00281c0                Vm::vmRetV
                0x00000000c00281c4                Vm::vmDone
                0x00000000c00281c5                Vm::vmReady
                0x00000000c00281c8                Vm::vm86Thread
                0x00000000c00281cc                Vm::vmToHostCommsPtr
                0x00000000c00281e0                Vm::vmToHostComms
 .bss           0x00000000c0028200       0x14 arch/i386/hal.32
                0x00000000c0028200                apic
                0x00000000c0028204                fpuOwner
                0x00000000c0028208                coproLoadFunc
                0x00000000c002820c                coproSaveFunc
                0x00000000c0028210                gpFaultIntercept
 .bss           0x00000000c0028214        0x0 arch/i386/pic.32
 .bss           0x00000000c0028214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0028216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0028216        0xa 
 .bss           0x00000000c0028220       0xf0 fs/fat/vfslink.32
                0x00000000c0028220                FAT::fats
                0x00000000c0028240                FAT::vfsToFatRemaps
                0x00000000c00282c0                fatToVFSRemaps
 .bss           0x00000000c0028310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0028310       0x10 
 .bss           0x00000000c0028320      0x820 fs/iso9660/vfslink.32
                0x00000000c0028320                iso9660Owner
                0x00000000c0028324                recentSector
                0x00000000c0028340                recentBuffer
 .bss           0x00000000c0028b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0028b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0028b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0028b40        0xd hw/bus/pci.32
                0x00000000c0028b40                thePCI
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0028b4d        0x3 
 .bss           0x00000000c0028b50        0x8 hw/diskphys/ata.32
                0x00000000c0028b50                ataSectorsWritten
                0x00000000c0028b54                ataSectorsRead
 .bss           0x00000000c0028b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0028b58        0x8 
 .bss           0x00000000c0028b60       0x41 hw/intctrl/apic.32
                0x00000000c0028b60                noOfIOAPICs
                0x00000000c0028b80                ioapics
                0x00000000c0028ba0                IOAPICsSetupYet
 .bss           0x00000000c0028ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0028ba1        0x3 
 .bss           0x00000000c0028ba4        0x4 hw/timer/pit.32
                0x00000000c0028ba4                pitFreq
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0028ba8        0x0 crtn.32
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0028ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002d74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
