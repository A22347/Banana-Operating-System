Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
                              hal/sound/sndhw.32 (__addsf3)
D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
                              hal/libresample/src_linear.32 (__adddf3)
D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
                              hal/libresample/samplerate.32 (__truncdfsf2)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD net/ethernet.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x28668
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x4ed D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                voodooXADD
                0x00000000c000027f                doTPAUSE
                0x00000000c0000289                hasLegacyFPU
                0x00000000c00002ae                is486
                0x00000000c00002e4                detectCPUID
                0x00000000c00002fa                goToVM86
                0x00000000c000032a                goToUsermode
                0x00000000c0000354                switchToThreadASMFirstTime
                0x00000000c0000362                switchToThreadASM
                0x00000000c00003ea                asmQuickAcquireLock
                0x00000000c0000408                asmQuickReleaseLock
                0x00000000c0000414                asmAcquireLock
                0x00000000c0000435                asmReleaseLock
                0x00000000c0000448                loadGDT
                0x00000000c0000468                isr0
                0x00000000c0000478                isr1
                0x00000000c0000482                isr2
                0x00000000c000048c                isr3
                0x00000000c0000496                isr4
                0x00000000c00004a0                isr5
                0x00000000c00004aa                isr6
                0x00000000c00004b4                isr7
                0x00000000c00004be                isr8
                0x00000000c00004c6                isr9
                0x00000000c00004d0                isr10
                0x00000000c00004d8                isr11
                0x00000000c00004e0                isr12
                0x00000000c00004e8                isr13
                0x00000000c00004f0                isr14
                0x00000000c00004f8                isr15
                0x00000000c0000502                isr16
                0x00000000c000050c                isr17
                0x00000000c0000516                isr18
                0x00000000c0000520                irq3
                0x00000000c000052a                irq4
                0x00000000c0000534                irq5
                0x00000000c000053e                irq6
                0x00000000c0000548                irq7
                0x00000000c0000552                irq8
                0x00000000c000055c                irq9
                0x00000000c0000566                irq10
                0x00000000c0000570                irq11
                0x00000000c000057a                irq12
                0x00000000c0000584                irq13
                0x00000000c000058e                irq14
                0x00000000c0000598                irq15
                0x00000000c00005a2                irq1
                0x00000000c00005a9                irq2
                0x00000000c00005b0                isr96
                0x00000000c00005b7                irq0
                0x00000000c00005bc                int_common_stub
                0x00000000c00005bc                syscall_common_stub
                0x00000000c00005ed                irq16
                0x00000000c00005f7                irq17
                0x00000000c0000601                irq18
                0x00000000c000060b                irq19
                0x00000000c0000615                irq20
                0x00000000c000061f                irq21
                0x00000000c0000629                irq22
                0x00000000c0000633                irq23
 *fill*         0x00000000c000063d        0x3 
 .text          0x00000000c0000640      0x611 acpica/utclib.32
                0x00000000c0000640                memcmp
                0x00000000c000067c                memmove
                0x00000000c0000744                memcpy
                0x00000000c0000778                memset
                0x00000000c0000794                strlen
                0x00000000c00007ac                strpbrk
                0x00000000c00007e8                strtok
                0x00000000c0000834                strcpy
                0x00000000c0000858                strncpy
                0x00000000c00008c0                strcmp
                0x00000000c0000900                strchr
                0x00000000c0000924                strncmp
                0x00000000c0000974                strcat
                0x00000000c00009a4                strncat
                0x00000000c00009e0                strstr
                0x00000000c0000a28                toupper
                0x00000000c0000a3c                tolower
                0x00000000c0000a50                simple_strtoul
 .text          0x00000000c0000c51      0xfbf core/malloc.32
                0x00000000c0000dbc                dlfree
                0x00000000c0001117                dlmalloc
                0x00000000c0001654                dlrealloc
                0x00000000c0001809                dlmemalign
                0x00000000c000192c                dlcalloc
                0x00000000c00019c6                dlcfree
                0x00000000c00019cb                dlindependent_calloc
                0x00000000c00019f0                dlindependent_comalloc
                0x00000000c0001a07                dlvalloc
                0x00000000c0001a32                dlpvalloc
                0x00000000c0001a68                dlmalloc_trim
                0x00000000c0001a75                dlmalloc_usable_size
                0x00000000c0001aa6                dlmallinfo
                0x00000000c0001b75                dlmalloc_stats
                0x00000000c0001b86                dlmallopt
 .text          0x00000000c0001c10        0x0 libk/string.32
 .text          0x00000000c0001c10       0x51 fs/fat/diskio.32
                0x00000000c0001c10                disk_status
                0x00000000c0001c13                disk_initialize
                0x00000000c0001c16                disk_read
                0x00000000c0001c2c                disk_write
                0x00000000c0001c42                disk_ioctl
 .text          0x00000000c0001c61     0x6833 fs/fat/ff.32
                0x00000000c0004f2f                f_mount
                0x00000000c0004f91                f_open
                0x00000000c00053cd                f_read
                0x00000000c000564d                f_write
                0x00000000c0005907                f_sync
                0x00000000c0005ae3                f_close
                0x00000000c0005b12                f_lseek
                0x00000000c0005fc9                f_opendir
                0x00000000c00060cb                f_closedir
                0x00000000c00060ed                f_readdir
                0x00000000c0006188                f_stat
                0x00000000c0006217                f_getfree
                0x00000000c00063e2                f_truncate
                0x00000000c00064da                f_unlink
                0x00000000c000665d                f_mkdir
                0x00000000c0006889                f_rename
                0x00000000c0006b7c                f_chmod
                0x00000000c0006c5a                f_utime
                0x00000000c0006d38                f_getlabel
                0x00000000c0006f26                f_setlabel
                0x00000000c0007193                f_forward
                0x00000000c0007371                f_mkfs
 .text          0x00000000c0008494       0x2d fs/fat/ffsystem.32
                0x00000000c0008494                ff_memalloc
                0x00000000c00084aa                ff_memfree
 .text          0x00000000c00084c1      0x253 fs/fat/ffunicode.32
                0x00000000c00084c1                ff_uni2oem
                0x00000000c0008551                ff_oem2uni
                0x00000000c00085bd                ff_wtoupper
 .text          0x00000000c0008714      0x8fb hal/libresample/samplerate.32
                0x00000000c0008758                src_delete
                0x00000000c0008794                src_process
                0x00000000c000894a                src_callback_read
                0x00000000c0008ac7                src_set_ratio
                0x00000000c0008b31                src_get_channels
                0x00000000c0008b53                src_reset
                0x00000000c0008b9f                src_new
                0x00000000c0008c2d                src_callback_new
                0x00000000c0008c8f                src_get_name
                0x00000000c0008cc6                src_get_description
                0x00000000c0008cfd                src_get_version
                0x00000000c0008d03                src_is_valid_ratio
                0x00000000c0008d57                src_error
                0x00000000c0008d65                src_strerror
                0x00000000c0008d78                src_simple
                0x00000000c0008dcb                src_short_to_float_array
                0x00000000c0008e30                src_float_to_short_array
                0x00000000c0008eef                src_int_to_float_array
                0x00000000c0008f52                src_float_to_int_array
 .text          0x00000000c000900f      0x8cb hal/libresample/src_linear.32
                0x00000000c0009835                linear_get_name
                0x00000000c0009844                linear_get_description
                0x00000000c0009853                linear_set_converter
 .text          0x00000000c00098da     0x447c hal/libresample/src_sinc.32
                0x00000000c000dc6d                sinc_get_name
                0x00000000c000dc80                sinc_get_description
                0x00000000c000dc93                sinc_set_converter
 .text          0x00000000c000dd56      0x77c hal/libresample/src_zoh.32
                0x00000000c000e42d                zoh_get_name
                0x00000000c000e43c                zoh_get_description
                0x00000000c000e44b                zoh_set_converter
 .text          0x00000000c000e4d2       0x23 compat/inlines.32
                0x00000000c000e4d2                CPU::current()
                0x00000000c000e4df                operator new(unsigned long)
 .text          0x00000000c000e4f5      0x111 compat/resolve.32
                0x00000000c000e4f5                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c000e606      0xa17 core/computer.32
                0x00000000c000e606                Computer::close(int, int, void*)
                0x00000000c000e64a                Krnl::firstTask()
                0x00000000c000e73a                Computer::Computer()
                0x00000000c000e73a                Computer::Computer()
                0x00000000c000e896                Computer::setBootMessage(char const*)
                0x00000000c000e898                Computer::detectFeatures()
                0x00000000c000eaa2                Computer::displayFeatures()
                0x00000000c000ede8                Computer::rdmsr(unsigned int)
                0x00000000c000ee14                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000ee4c                Computer::nmiEnabled()
                0x00000000c000ee58                Computer::readCMOS(unsigned char)
                0x00000000c000ee72                Computer::enableNMI(bool)
                0x00000000c000ee8a                Computer::open(int, int, void*)
                0x00000000c000ef60                Computer::disableNMI()
                0x00000000c000ef6e                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000ef8c                Computer::handleNMI()
                0x00000000c000eff2                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000f01d        0x1 
 .text          0x00000000c000f01e      0x1b7 core/gdt.32
                0x00000000c000f01e                GDTEntry::setBase(unsigned int)
                0x00000000c000f03a                GDTEntry::setLimit(unsigned int)
                0x00000000c000f058                GDT::GDT()
                0x00000000c000f058                GDT::GDT()
                0x00000000c000f06e                GDT::addEntry(GDTEntry)
                0x00000000c000f0aa                GDT::getNumberOfEntries()
                0x00000000c000f0b2                GDT::flush()
                0x00000000c000f0d4                GDT::setup()
 .text          0x00000000c000f1d5       0x62 core/idle.32
                0x00000000c000f1d5                idleFunction(void*)
 *fill*         0x00000000c000f237        0x1 
 .text          0x00000000c000f238      0x45f core/idt.32
                0x00000000c000f238                IDTEntry::IDTEntry(bool)
                0x00000000c000f238                IDTEntry::IDTEntry(bool)
                0x00000000c000f2a6                IDTEntry::setOffset(unsigned int)
                0x00000000c000f2ba                IDT::IDT()
                0x00000000c000f2ba                IDT::IDT()
                0x00000000c000f2bc                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000f2c4                IDT::addEntry(IDTEntry, int)
                0x00000000c000f2de                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000f316                IDT::flush()
                0x00000000c000f330                IDT::setup()
 .text          0x00000000c000f697      0x206 core/kheap.32
                0x00000000c000f697                sbrk
                0x00000000c000f7a5                mmap
                0x00000000c000f7bb                munmap
                0x00000000c000f7d1                liballoc_lock()
                0x00000000c000f7e2                liballoc_unlock()
                0x00000000c000f7f3                liballoc_alloc(int)
                0x00000000c000f811                liballoc_free(void*, int)
                0x00000000c000f82f                realloc
                0x00000000c000f843                malloc
                0x00000000c000f853                free
                0x00000000c000f863                rfree
                0x00000000c000f873                calloc
 .text          0x00000000c000f89d      0x485 core/main.32
                0x00000000c000f89d                hwTextMode_loadInData(VgaText*)
                0x00000000c000f8e8                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000f966                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000f9c4                hwTextMode_update(VgaText*)
                0x00000000c000f9c5                hwTextMode_updateCursor(VgaText*)
                0x00000000c000fa16                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000fa5c                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000fb09                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000fb8b                setupTextMode()
                0x00000000c000fbfb                kernel_main
 .text          0x00000000c000fd22      0x5cb core/physmgr.32
                0x00000000c000fd22                Phys::allocateDMA(unsigned long)
                0x00000000c000fdc5                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000fe0d                Phys::setPageState(unsigned long, bool)
                0x00000000c000fe3f                Phys::getPageState(unsigned long)
                0x00000000c000fe5b                Phys::freePage(unsigned long)
                0x00000000c000fee5                Phys::allocatePage()
                0x00000000c001002b                Phys::allocateContiguousPages(int)
                0x00000000c0010085                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c00100bd                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c00102ed        0x1 
 .text          0x00000000c00102ee      0x273 core/pipe.32
                0x00000000c00102ee                Pipe::isAtty()
                0x00000000c00102f2                Pipe::~Pipe()
                0x00000000c00102f2                Pipe::~Pipe()
                0x00000000c0010316                Pipe::~Pipe()
                0x00000000c001033e                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0010432                Pipe::write(unsigned long long, void*, int*)
                0x00000000c00104fa                Pipe::Pipe(int)
                0x00000000c00104fa                Pipe::Pipe(int)
 *fill*         0x00000000c0010561        0x1 
 .text          0x00000000c0010562      0xf73 core/terminal.32
                0x00000000c0010562                VgaText::isAtty()
                0x00000000c0010566                VgaText::~VgaText()
                0x00000000c0010566                VgaText::~VgaText()
                0x00000000c001058a                VgaText::~VgaText()
                0x00000000c00105b4                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00105d4                setTerminalScrollLock(bool)
                0x00000000c00105d5                addToTerminalCycle(VgaText*)
                0x00000000c0010602                installVgaTextImplementation()
                0x00000000c0010617                scrollTerminalScrollLock(int)
                0x00000000c0010618                VgaText::load()
                0x00000000c001066c                VgaText::updateCursor()
                0x00000000c0010686                VgaText::showCursor(bool)
                0x00000000c0010696                VgaText::disableBlink(bool)
                0x00000000c00106d0                VgaText::doANSI_SGR(int)
                0x00000000c001075c                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0010772                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0010788                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00107a8                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00107ba                VgaText::scrollScreen()
                0x00000000c001084e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0010860                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00108c0                VgaText::getCursorX()
                0x00000000c00108cc                VgaText::getCursorY()
                0x00000000c00108d8                VgaText::setCursor(int, int)
                0x00000000c00108f6                VgaText::setCursorX(int)
                0x00000000c0010912                VgaText::setCursorY(int)
                0x00000000c001092e                VgaText::incrementCursor(bool)
                0x00000000c0010996                VgaText::updateRAMUsageDisplay(int)
                0x00000000c00109fa                VgaText::updateDiskUsage()
                0x00000000c0010b64                VgaText::updateTitle()
                0x00000000c0010baa                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0010bba                VgaText::setTitleColour(VgaColour)
                0x00000000c0010bca                VgaText::setTitle(char*)
                0x00000000c0010bf0                VgaText::decrementCursor(bool)
                0x00000000c0010c18                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0010d14                VgaText::isShowingCursor()
                0x00000000c0010d20                VgaText::isBlinkDisabled()
                0x00000000c0010d2e                VgaText::setCursorHeight(int)
                0x00000000c0010d4c                VgaText::getCursorHeight()
                0x00000000c0010d57                setActiveTerminal(VgaText*)
                0x00000000c0010e09                doTerminalCycle()
                0x00000000c0010e26                VgaText::doUpdate()
                0x00000000c0010e38                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0010ff8                VgaText::clearScreen()
                0x00000000c001105c                VgaText::putchar(char)
                0x00000000c0011176                VgaText::puts(char const*)
                0x00000000c001119c                VgaText::putx(unsigned int)
                0x00000000c00111e2                VgaText::VgaText(char const*)
                0x00000000c00111e2                VgaText::VgaText(char const*)
                0x00000000c0011374                VgaText::receiveKey(unsigned char)
                0x00000000c001145c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00114b0                newTerminal(char*)
 *fill*         0x00000000c00114d5        0x1 
 .text          0x00000000c00114d6      0x1b3 core/tss.32
                0x00000000c00114d6                TSS::TSS()
                0x00000000c00114d6                TSS::TSS()
                0x00000000c00114e4                TSS::setESP(unsigned long)
                0x00000000c00114f6                TSS::flush()
                0x00000000c0011516                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0011689        0x1 
 .text          0x00000000c001168a      0x4c2 core/unixfile.32
                0x00000000c001168a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00116e0                ReservedFilename::isAtty()
                0x00000000c00116fc                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c001175a                UnixFile::getFileDescriptor()
                0x00000000c0011762                UnixFile::UnixFile(int)
                0x00000000c0011762                UnixFile::UnixFile(int)
                0x00000000c0011912                ReservedFilename::ReservedFilename(int)
                0x00000000c0011912                ReservedFilename::ReservedFilename(int)
                0x00000000c0011944                UnixFile::~UnixFile()
                0x00000000c0011944                UnixFile::~UnixFile()
                0x00000000c00119dc                UnixFile::~UnixFile()
                0x00000000c0011a04                ReservedFilename::~ReservedFilename()
                0x00000000c0011a04                ReservedFilename::~ReservedFilename()
                0x00000000c0011a28                ReservedFilename::~ReservedFilename()
                0x00000000c0011a4f                getFromFileDescriptor(int)
 .text          0x00000000c0011b4c     0x129e core/virtmgr.32
                0x00000000c0011b4c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0011b81                Virt::getPageState(unsigned long)
                0x00000000c0011ba5                Virt::allocateKernelVirtualPages(int)
                0x00000000c0011cb6                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0011cd4                Virt::swapIDToSector(unsigned long)
                0x00000000c0011ce6                Virt::allocateSwapfilePage()
                0x00000000c0011d64                Virt::virtualMemorySetup()
                0x00000000c0011de3                Virt::swappingSetup()
                0x00000000c0011e40                Virt::getAKernelVAS()
                0x00000000c0011e46                Virt::setupPageSwapping(int)
                0x00000000c0011f76                VAS::VAS()
                0x00000000c0011f76                VAS::VAS()
                0x00000000c0011fa6                VAS::VAS(VAS*)
                0x00000000c0011fa6                VAS::VAS(VAS*)
                0x00000000c0011fca                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0011ff6                VAS::getPageTableEntry(unsigned long)
                0x00000000c0012015                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0012138                VAS::freeAllocatedPages(unsigned long)
                0x00000000c001215c                VAS::virtualToPhysical(unsigned long)
                0x00000000c0012174                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c00121b4                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00121e6                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0012210                VAS::~VAS()
                0x00000000c0012210                VAS::~VAS()
                0x00000000c001237c                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c001247c                VAS::allocatePages(int, int)
                0x00000000c0012654                VAS::setCPUSpecific(unsigned long)
                0x00000000c0012670                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0012736                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0012824                VAS::VAS(bool)
                0x00000000c0012824                VAS::VAS(bool)
                0x00000000c0012a80                VAS::evict(unsigned long)
                0x00000000c0012b3e                VAS::scanForEviction(int, int)
                0x00000000c0012bde                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0012d2e                mapVASFirstTime
 .text          0x00000000c0012dea       0x95 coreobjs/c++.32
                0x00000000c0012dea                __cxa_atexit
                0x00000000c0012ded                __cxa_finalize
                0x00000000c0012dee                __stack_chk_fail
                0x00000000c0012e5a                __cxa_pure_virtual
                0x00000000c0012e6b                operator new[](unsigned long)
                0x00000000c0012e70                operator delete(void*, unsigned long)
                0x00000000c0012e75                operator delete[](void*)
                0x00000000c0012e7a                operator delete[](void*, unsigned long)
 .text          0x00000000c0012e7f      0x1ef dbg/kconsole.32
                0x00000000c0012e7f                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0012ee0                Dbg::logc(char)
                0x00000000c0012ef7                Dbg::logs(char*)
                0x00000000c0012f14                Dbg::logWriteInt(unsigned int)
                0x00000000c0012f31                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0012f50                Dbg::kprintf(char const*, ...)
 .text          0x00000000c001306e      0xb7c fs/vfs.32
                0x00000000c001306e                File::read(unsigned long long, void*, int*)
                0x00000000c00130c6                File::write(unsigned long long, void*, int*)
                0x00000000c001311e                Directory::read(unsigned long long, void*, int*)
                0x00000000c0013176                Directory::write(unsigned long long, void*, int*)
                0x00000000c00131a4                File::isAtty()
                0x00000000c00131a8                Directory::isAtty()
                0x00000000c00131ac                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00131b2                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c00131b8                File::~File()
                0x00000000c00131b8                File::~File()
                0x00000000c00131dc                File::~File()
                0x00000000c0013206                Directory::~Directory()
                0x00000000c0013206                Directory::~Directory()
                0x00000000c001322a                Directory::~Directory()
                0x00000000c0013254                Filesystem::Filesystem()
                0x00000000c0013254                Filesystem::Filesystem()
                0x00000000c0013278                Filesystem::~Filesystem()
                0x00000000c0013278                Filesystem::~Filesystem()
                0x00000000c0013286                Filesystem::~Filesystem()
                0x00000000c00132aa                Fs::getcwd(Process*, char*, int)
                0x00000000c00132d4                Fs::initVFS()
                0x00000000c00132fe                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c00134a8                File::File(char const*, Process*)
                0x00000000c00134a8                File::File(char const*, Process*)
                0x00000000c001350c                File::open(FileOpenMode)
                0x00000000c001356a                File::close()
                0x00000000c00135ca                File::seek(unsigned long long)
                0x00000000c0013620                File::tell(unsigned long long*)
                0x00000000c0013670                File::rewind()
                0x00000000c0013684                File::unlink()
                0x00000000c00136d0                File::rename(char const*)
                0x00000000c001371e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c001377a                File::exists()
                0x00000000c00137b8                File::stat(unsigned long long*, bool*)
                0x00000000c0013819                Fs::setcwd(Process*, char*)
                0x00000000c0013954                Directory::Directory(char const*, Process*)
                0x00000000c0013954                Directory::Directory(char const*, Process*)
                0x00000000c00139b8                Directory::open()
                0x00000000c0013a14                Directory::close()
                0x00000000c0013a74                Directory::unlink()
                0x00000000c0013ac0                Directory::rename(char const*)
                0x00000000c0013b0e                Directory::exists()
                0x00000000c0013b4c                Directory::read(dirent*)
                0x00000000c0013b98                Directory::create()
                0x00000000c0013be4                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0013bea       0x84 hal/bus.32
                0x00000000c0013bea                Bus::Bus(char const*)
                0x00000000c0013bea                Bus::Bus(char const*)
                0x00000000c0013c20                Bus::~Bus()
                0x00000000c0013c20                Bus::~Bus()
                0x00000000c0013c44                Bus::~Bus()
 .text          0x00000000c0013c6e      0x14e hal/buzzer.32
                0x00000000c0013c6e                Buzzer::Buzzer(char const*)
                0x00000000c0013c6e                Buzzer::Buzzer(char const*)
                0x00000000c0013cb2                Buzzer::~Buzzer()
                0x00000000c0013cb2                Buzzer::~Buzzer()
                0x00000000c0013cd6                Buzzer::~Buzzer()
                0x00000000c0013d00                Buzzer::stop()
                0x00000000c0013d13                beepThread(void*)
                0x00000000c0013d4e                Buzzer::beep(int, int, bool)
 .text          0x00000000c0013dbc      0x467 hal/clock.32
                0x00000000c0013dbc                User::loadClockSettings(int)
                0x00000000c0013e0e                Clock::Clock(char const*)
                0x00000000c0013e0e                Clock::Clock(char const*)
                0x00000000c0013e44                Clock::~Clock()
                0x00000000c0013e44                Clock::~Clock()
                0x00000000c0013e68                Clock::~Clock()
                0x00000000c0013e92                Clock::timeInSecondsLocal()
                0x00000000c0013eda                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0013f33                datetimeToSeconds(datetime_t)
                0x00000000c001405a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c00140ba                secondsToDatetime(unsigned long long)
                0x00000000c00141fe                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0014223        0x1 
 .text          0x00000000c0014224      0x4de hal/device.32
                0x00000000c0014224                Device::hibernate()
                0x00000000c0014226                Device::wake()
                0x00000000c0014228                Device::detect()
                0x00000000c001422a                Device::disableLegacy()
                0x00000000c001422c                Device::powerSaving(PowerSavingLevel)
                0x00000000c001422e                DriverlessDevice::close(int, int, void*)
                0x00000000c0014232                DriverlessDevice::detect()
                0x00000000c0014234                DriverlessDevice::open(int, int, void*)
                0x00000000c0014248                Device::~Device()
                0x00000000c0014248                Device::~Device()
                0x00000000c0014256                Device::~Device()
                0x00000000c001427e                Device::findAndLoadDriver()
                0x00000000c0014280                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00142a6                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00142fa                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0014338                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0014376                Device::addChild(Device*)
                0x00000000c00143ba                Device::removeAllChildren()
                0x00000000c0014400                Device::hibernateAll()
                0x00000000c0014430                Device::wakeAll()
                0x00000000c0014460                Device::detectAll()
                0x00000000c0014490                Device::disableLegacyAll()
                0x00000000c00144c0                Device::loadDriversForAll()
                0x00000000c00144ec                Device::closeAll()
                0x00000000c0014522                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0014558                Device::setName(char const*)
                0x00000000c0014566                Device::Device(char const*)
                0x00000000c0014566                Device::Device(char const*)
                0x00000000c0014662                Device::getName()
                0x00000000c001466c                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c001466c                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0014694                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c00146d8                getDevicesOfType(DeviceType)
 .text          0x00000000c0014702       0x84 hal/diskctrl.32
                0x00000000c0014702                HardDiskController::HardDiskController(char const*)
                0x00000000c0014702                HardDiskController::HardDiskController(char const*)
                0x00000000c0014738                HardDiskController::~HardDiskController()
                0x00000000c0014738                HardDiskController::~HardDiskController()
                0x00000000c001475c                HardDiskController::~HardDiskController()
 .text          0x00000000c0014786       0xf2 hal/diskphys.32
                0x00000000c0014786                PhysicalDisk::eject()
                0x00000000c001479a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c001479a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0014802                PhysicalDisk::startCache()
                0x00000000c001482a                PhysicalDisk::~PhysicalDisk()
                0x00000000c001482a                PhysicalDisk::~PhysicalDisk()
                0x00000000c001484e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0014878      0x13b hal/fpu.32
                0x00000000c0014878                FPU::FPU(char const*)
                0x00000000c0014878                FPU::FPU(char const*)
                0x00000000c00148ae                FPU::~FPU()
                0x00000000c00148ae                FPU::~FPU()
                0x00000000c00148d2                FPU::~FPU()
                0x00000000c00148fc                setupFPU()
 *fill*         0x00000000c00149b3        0x1 
 .text          0x00000000c00149b4     0x13a7 hal/intctrl.32
                0x00000000c00149b4                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c00149ec                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0014a3e                doubleFault(regs*, void*)
                0x00000000c0014a58                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0014af4                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0014b9c                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0014c23                nmiHandler(regs*, void*)
                0x00000000c0014c31                int_handler
                0x00000000c0014cd2                InterruptController::InterruptController(char const*)
                0x00000000c0014cd2                InterruptController::InterruptController(char const*)
                0x00000000c0014d78                InterruptController::~InterruptController()
                0x00000000c0014d78                InterruptController::~InterruptController()
                0x00000000c0014d9c                InterruptController::~InterruptController()
                0x00000000c0014dc6                displayDebugInfo(regs*)
                0x00000000c0015255                x87EmulHandler(regs*, void*)
                0x00000000c0015284                gpFault(regs*, void*)
                0x00000000c00152bd                pgFault(regs*, void*)
                0x00000000c00152f9                otherISRHandler(regs*, void*)
                0x00000000c0015318                opcodeFault(regs*, void*)
                0x00000000c001591e                displayProgramFault(char const*)
                0x00000000c0015946                setupInterruptController()
                0x00000000c0015d0e                InterruptController::convertLegacyIRQNumber(int)
 *fill*         0x00000000c0015d5b        0x1 
 .text          0x00000000c0015d5c      0x6c8 hal/keybrd.32
                0x00000000c0015d5c                startGUI(void*)
                0x00000000c0015db8                startGUIVESA(void*)
                0x00000000c0015e14                sendKeyToTerminal(unsigned char)
                0x00000000c0015e80                sendKeyboardToken(KeyboardToken)
                0x00000000c00162bd                clearInternalKeybuffer(VgaText*)
                0x00000000c00162f2                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c001639a                Keyboard::Keyboard(char const*)
                0x00000000c001639a                Keyboard::Keyboard(char const*)
                0x00000000c00163d6                Keyboard::~Keyboard()
                0x00000000c00163d6                Keyboard::~Keyboard()
                0x00000000c00163fa                Keyboard::~Keyboard()
 .text          0x00000000c0016424      0x414 hal/logidisk.32
                0x00000000c0016424                LogicalDisk::close(int, int, void*)
                0x00000000c0016428                LogicalDisk::~LogicalDisk()
                0x00000000c0016428                LogicalDisk::~LogicalDisk()
                0x00000000c001644c                LogicalDisk::~LogicalDisk()
                0x00000000c0016476                LogicalDisk::open(int, int, void*)
                0x00000000c001648a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c00164c2                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0016508                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0016508                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00165be                LogicalDisk::assignDriveLetter()
                0x00000000c0016674                LogicalDisk::mount()
                0x00000000c00166e6                LogicalDisk::unmount()
                0x00000000c00166f6                LogicalDisk::eject()
                0x00000000c001670a                LogicalDisk::unassignDriveLetter()
                0x00000000c0016760                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c00167cc                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c0016838       0x84 hal/mouse.32
                0x00000000c0016838                Mouse::Mouse(char const*)
                0x00000000c0016838                Mouse::Mouse(char const*)
                0x00000000c001686e                Mouse::~Mouse()
                0x00000000c001686e                Mouse::~Mouse()
                0x00000000c0016892                Mouse::~Mouse()
 .text          0x00000000c00168bc      0x34d hal/partition.32
                0x00000000c00168bc                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0016978                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0016c09        0x1 
 .text          0x00000000c0016c0a       0x84 hal/serial.32
                0x00000000c0016c0a                Serial::Serial(char const*)
                0x00000000c0016c0a                Serial::Serial(char const*)
                0x00000000c0016c40                Serial::~Serial()
                0x00000000c0016c40                Serial::~Serial()
                0x00000000c0016c64                Serial::~Serial()
 .text          0x00000000c0016c8e      0x2b8 hal/timer.32
                0x00000000c0016c8e                Timer::Timer(char const*)
                0x00000000c0016c8e                Timer::Timer(char const*)
                0x00000000c0016cc4                Timer::~Timer()
                0x00000000c0016cc4                Timer::~Timer()
                0x00000000c0016ce8                Timer::~Timer()
                0x00000000c0016d12                Timer::read()
                0x00000000c0016d1d                timerHandler(unsigned long long)
                0x00000000c0016e54                setupTimer(int)
 .text          0x00000000c0016f46      0x425 hal/vcache.32
                0x00000000c0016f46                VCache::VCache(PhysicalDisk*)
                0x00000000c0016f46                VCache::VCache(PhysicalDisk*)
                0x00000000c00170ae                VCache::invalidateReadBuffer()
                0x00000000c00170be                VCache::writeWriteBuffer()
                0x00000000c00170fa                VCache::~VCache()
                0x00000000c00170fa                VCache::~VCache()
                0x00000000c001714e                VCache::~VCache()
                0x00000000c0017176                VCache::write(unsigned long long, int, void*)
                0x00000000c001726c                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c001736b        0x1 
 .text          0x00000000c001736c      0x4cd hal/video.32
                0x00000000c001736c                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c00173b8                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c0017428                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c00174a6                Video::clearScreen(unsigned int)
                0x00000000c00174da                Video::putpixel(int, int, unsigned int)
                0x00000000c00174e8                Video::Video(char const*)
                0x00000000c00174e8                Video::Video(char const*)
                0x00000000c001751e                Video::~Video()
                0x00000000c001751e                Video::~Video()
                0x00000000c0017542                Video::~Video()
                0x00000000c001756c                Video::isMonochrome()
                0x00000000c0017578                Video::getWidth()
                0x00000000c0017584                Video::getHeight()
                0x00000000c0017590                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c001764c                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c00177ce                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c0017839        0x1 
 .text          0x00000000c001783a      0xf88 hw/acpi.32
                0x00000000c001783a                ACPI::close(int, int, void*)
                0x00000000c00178ef                findRSDP()
                0x00000000c001799d                loadACPITables(unsigned char*)
                0x00000000c0017bc4                findRSDT(unsigned char*)
                0x00000000c0017ce2                findDataTable(unsigned char*, char*)
                0x00000000c0017d7e                scanMADT()
                0x00000000c0018204                ACPI::ACPI()
                0x00000000c0018204                ACPI::ACPI()
                0x00000000c001826e                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0018350                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0018416                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c001841c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c0018464                ACPI::open(int, int, void*)
                0x00000000c00187aa                ACPI::sleep()
 .text          0x00000000c00187c2     0x1715 hw/cpu.32
                0x00000000c00187c2                CPU::close(int, int, void*)
                0x00000000c00187c6                CPU::lookupAMDName(unsigned char, unsigned char)
                0x00000000c001895a                CPU::lookupIntelName(unsigned char, unsigned char)
                0x00000000c0018c08                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0018c24                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c0018c3c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0018cb0                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018d34                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0018d62                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0018d90                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018dbe                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018dec                CPU::CPU()
                0x00000000c0018dec                CPU::CPU()
                0x00000000c0018e7a                CPU::displayFeatures()
                0x00000000c00190f6                CPU::detectFeatures()
                0x00000000c0019ae6                CPU::setupSMEP()
                0x00000000c0019af2                CPU::setupUMIP()
                0x00000000c0019afc                CPU::setupTSC()
                0x00000000c0019b06                CPU::setupLargePages()
                0x00000000c0019b10                CPU::setupPAT()
                0x00000000c0019b4c                CPU::setupMTRR()
                0x00000000c0019b4e                CPU::setupGlobalPages()
                0x00000000c0019b58                CPU::allowUsermodeDataAccess()
                0x00000000c0019b6a                CPU::prohibitUsermodeDataAccess()
                0x00000000c0019b7c                CPU::setupSMAP()
                0x00000000c0019b8a                CPU::setupFeatures()
                0x00000000c0019c0a                CPU::open(int, int, void*)
                0x00000000c0019cdc                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c0019ed7        0x0 hw/ports.32
 .text          0x00000000c0019ed7      0x16a hw/smp.32
                0x00000000c0019ed7                Krnl::smpEntry()
                0x00000000c0019ed9                Krnl::startCPU(int)
                0x00000000c001a022                Krnl::startCPUs()
 *fill*         0x00000000c001a041        0x1 
 .text          0x00000000c001a042      0x5d3 krnl/env.32
                0x00000000c001a042                EnvVarContainer::getEnv(char const*)
                0x00000000c001a080                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001a14c                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001a14e                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001a344                EnvVarContainer::__loadSystem()
                0x00000000c001a35e                EnvVarContainer::__loadUser()
                0x00000000c001a360                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001a360                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001a382                EnvVarContainer::~EnvVarContainer()
                0x00000000c001a382                EnvVarContainer::~EnvVarContainer()
                0x00000000c001a3b2                Krnl::getEnv(Process*, char const*)
                0x00000000c001a417                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c001a431                Krnl::setEnvUser(char const*, char const*)
                0x00000000c001a450                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c001a463                Krnl::deleteEnvSystem(char const*)
                0x00000000c001a464                Krnl::deleteEnvUser(char const*)
                0x00000000c001a465                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c001a466                Krnl::newProcessEnv(Process*)
                0x00000000c001a488                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c001a4dc                Krnl::loadSystemEnv()
                0x00000000c001a50a                Krnl::loadUserEnv()
                0x00000000c001a530                Krnl::flushEnv()
                0x00000000c001a531                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001a551                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001a615      0x396 krnl/panic.32
                0x00000000c001a615                Krnl::panic(char const*)
 .text          0x00000000c001a9ab      0x3b6 net/ethernet.32
                0x00000000c001a9ab                Net::switchEndian16(unsigned short)
                0x00000000c001a9cc                Net::switchEndian32(unsigned int)
                0x00000000c001a9fb                Net::crc32Calc(unsigned char*, int)
                0x00000000c001aa8c                Net::wrapEthernetFrame(Net::UnwrappedEthernetFrame, unsigned char*)
                0x00000000c001abc8                Net::unwrapEthernetFrame(unsigned char*, int)
 .text          0x00000000c001ad61      0x513 reg/registry.32
                0x00000000c001ad61                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c001aeb9                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001b00e                Reg::getLine(char*, char*, char*)
                0x00000000c001b045                Reg::readInt(char*, char*, int*)
                0x00000000c001b130                Reg::readString(char*, char*, char*, int)
                0x00000000c001b1b1                Reg::readBool(char*, char*, bool*)
                0x00000000c001b1d6                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c001b202                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001b22e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001b274       0x36 sys/sc_eject.32
                0x00000000c001b274                Sys::eject(regs*)
 .text          0x00000000c001b2aa       0x18 sys/sc_exit.32
                0x00000000c001b2aa                Sys::exit(regs*)
 .text          0x00000000c001b2c2       0x1f sys/sc_getcwd.32
                0x00000000c001b2c2                Sys::getCwd(regs*)
 .text          0x00000000c001b2e1        0xc sys/sc_getpid.32
                0x00000000c001b2e1                Sys::getPID(regs*)
 .text          0x00000000c001b2ed       0x17 sys/sc_getramdata.32
                0x00000000c001b2ed                Sys::getRAMData(regs*)
 .text          0x00000000c001b304       0xa8 sys/sc_loaddll.32
                0x00000000c001b304                Sys::loadDLL(regs*)
 .text          0x00000000c001b3ac       0x68 sys/sc_read.32
                0x00000000c001b3ac                Sys::read(regs*)
 .text          0x00000000c001b414       0x55 sys/sc_sbrk.32
                0x00000000c001b414                Sys::sbrk(regs*)
 .text          0x00000000c001b469       0x1c sys/sc_setcwd.32
                0x00000000c001b469                Sys::setCwd(regs*)
 .text          0x00000000c001b485      0x128 sys/sc_settime.32
                0x00000000c001b485                Sys::setTime(regs*)
 .text          0x00000000c001b5ad       0x4a sys/sc_timezone.32
                0x00000000c001b5ad                Sys::timezone(regs*)
 .text          0x00000000c001b5f7       0x68 sys/sc_write.32
                0x00000000c001b5f7                Sys::write(regs*)
 .text          0x00000000c001b65f       0x62 sys/sc_wsbe.32
                0x00000000c001b65f                Sys::wsbe(regs*)
 .text          0x00000000c001b6c1       0x3b sys/sc_yield.32
                0x00000000c001b6c1                Sys::yield(regs*)
 .text          0x00000000c001b6fc     0x10e5 sys/syscalls.32
                0x00000000c001b6fc                sysCallSeekDir(regs*)
                0x00000000c001b701                sysCallTellDir(regs*)
                0x00000000c001b706                sysCallVerify(regs*)
                0x00000000c001b710                sysFormatDisk(regs*)
                0x00000000c001b77a                sysSetDiskVolumeLabel(regs*)
                0x00000000c001b7c0                sysGetDiskVolumeLabel(regs*)
                0x00000000c001b811                sysShutdown(regs*)
                0x00000000c001b86f                sysCallRealpath(regs*)
                0x00000000c001b8b2                sysCallGetArgc(regs*)
                0x00000000c001b8e0                sysCallReadDir(regs*)
                0x00000000c001b96e                sysCallIsATTY(regs*)
                0x00000000c001b9c8                sysCallSeek(regs*)
                0x00000000c001ba31                sysCallTell(regs*)
                0x00000000c001baae                sysCallSize(regs*)
                0x00000000c001bb31                sysCallSizeFromFilename(regs*)
                0x00000000c001bbf1                sysCallClose(regs*)
                0x00000000c001bc79                sysCallOpenDir(regs*)
                0x00000000c001bcee                sysCallCloseDir(regs*)
                0x00000000c001bd54                sysCallMakeDir(regs*)
                0x00000000c001bdc4                sysCallWait(regs*)
                0x00000000c001bdde                sysCallNotImpl(regs*)
                0x00000000c001bdf9                sysPanic(regs*)
                0x00000000c001be1f                sysCallRmdir(regs*)
                0x00000000c001be83                sysCallUnlink(regs*)
                0x00000000c001bee7                sysCallGetArgv(regs*)
                0x00000000c001bf33                sysCallTTYName(regs*)
                0x00000000c001bfb6                sysCallUSleep(regs*)
                0x00000000c001bfdd                sysCallSpawn(regs*)
                0x00000000c001c035                sysCallGetEnv(regs*)
                0x00000000c001c16d                sysAppSettings(regs*)
                0x00000000c001c28c                sysSetFatAttrib(regs*)
                0x00000000c001c2fe                sysPipe(regs*)
                0x00000000c001c343                sysGetUnixTime(regs*)
                0x00000000c001c357                string_ends_with(char const*, char const*)
                0x00000000c001c39f                sysCallOpen(regs*)
                0x00000000c001c5b4                Sys::loadSyscalls()
                0x00000000c001c79f                Sys::systemCall(regs*, void*)
 .text          0x00000000c001c7e1     0x11d4 thr/elf.32
                0x00000000c001c7e1                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001ca73                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001cc89                Thr::runtimeReferenceHelper()
                0x00000000c001cc9c                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001cceb                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001cfa9                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001d6c5                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001d6f7                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001d72e                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001d748                Thr::loadDLL(char const*, bool)
                0x00000000c001d97c                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001d9b5        0x1 
 .text          0x00000000c001d9b6     0x1056 thr/prcssthr.32
                0x00000000c001d9b6                changeTSS
                0x00000000c001d9e6                Process::addArgs(char**)
                0x00000000c001da40                Process::Process(char const*, Process*, char**)
                0x00000000c001da40                Process::Process(char const*, Process*, char**)
                0x00000000c001dc24                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001dc24                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001ddd3                disableIRQs()
                0x00000000c001dddb                getIRQNestingLevel()
                0x00000000c001dde1                enableIRQs()
                0x00000000c001ddf0                lockScheduler()
                0x00000000c001ddf2                unlockScheduler()
                0x00000000c001ddf4                userModeEntryPoint(void*)
                0x00000000c001de17                lockStuff()
                0x00000000c001de23                taskStartupFunction
                0x00000000c001de2c                updateTimeUsed()
                0x00000000c001de91                switchToThread(ThreadControlBlock*)
                0x00000000c001dee2                Semaphore::Semaphore(int)
                0x00000000c001dee2                Semaphore::Semaphore(int)
                0x00000000c001df10                Mutex::Mutex()
                0x00000000c001df10                Mutex::Mutex()
                0x00000000c001df22                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001e006                Process::createUserThread()
                0x00000000c001e022                setupMultitasking(void (*)())
                0x00000000c001e12c                schedule()
                0x00000000c001e1b1                unlockStuff()
                0x00000000c001e1e6                Semaphore::tryAcquire()
                0x00000000c001e214                Semaphore::assertLocked(char const*)
                0x00000000c001e244                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001e286                blockTask(TaskState)
                0x00000000c001e2a7                waitTask(int, int*, int)
                0x00000000c001e2e9                nanoSleepUntil(unsigned long long)
                0x00000000c001e340                nanoSleep(unsigned long long)
                0x00000000c001e355                sleep(unsigned long long)
                0x00000000c001e372                Semaphore::acquire()
                0x00000000c001e3da                taskReturned
                0x00000000c001e408                unblockTask(ThreadControlBlock*)
                0x00000000c001e4b7                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001e780                cleanerTaskFunction(void*)
                0x00000000c001e833                terminateTask(int)
                0x00000000c001e913                Thr::terminateFromIRQ(int)
                0x00000000c001e920                Semaphore::release()
 .text          0x00000000c001ea0c      0xc26 vm86/vm8086.32
                0x00000000c001ea0c                Vm::inbv(unsigned short)
                0x00000000c001ea1f                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001ea72                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001ea82                Vm::getSegment(unsigned int)
                0x00000000c001ea8a                Vm::getOffset(unsigned int)
                0x00000000c001ea8f                Vm::mainloop2()
                0x00000000c001eaca                Vm::mainVm8086Loop(void*)
                0x00000000c001ead7                Vm::mainloop3(unsigned long)
                0x00000000c001eb01                Vm::initialise8086()
                0x00000000c001eb44                Vm::finish8086()
                0x00000000c001eb89                Vm::getOutput8086(unsigned char*)
                0x00000000c001ebb3                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001ed03                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001ed8d                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001ed9e                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001edb0                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001edc1                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001edd6                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001edec                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001ee01                Vm::faultHandler(regs*)
 .text          0x00000000c001f632      0xefd vm86/x87em.32
                0x00000000c001f632                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c001f68d                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c001f696                Vm::fpu32ToInternal(unsigned int)
                0x00000000c001f6db                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c001f6e4                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c001f73f                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c001f775                Vm::fpuLongToFloat(long long)
                0x00000000c001f7cb                Vm::fpuGet0()
                0x00000000c001f7d0                Vm::fpuGet1()
                0x00000000c001f7d8                Vm::fpuGetPi()
                0x00000000c001f7e0                Vm::fpuGetLog2E()
                0x00000000c001f7f8                Vm::fpuGetLogE2()
                0x00000000c001f810                Vm::fpuGetLog210()
                0x00000000c001f828                Vm::fpuGetLog102()
                0x00000000c001f840                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c001f854                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c001f86a                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c001f8bd                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c001f8ce                Vm::fpuAbs(unsigned long long)
                0x00000000c001f8d7                Vm::fpuChs(unsigned long long)
                0x00000000c001f8e7                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c001f8f6                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c001f915                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c001f931                Vm::fpuSquare(unsigned long long)
                0x00000000c001f947                Vm::fpuGetReg(int)
                0x00000000c001f98a                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c001f9d5                Vm::fpuPush(unsigned long long)
                0x00000000c001fa32                Vm::fpuPop()
                0x00000000c001fa84                Vm::x87Handler(regs*)
 *fill*         0x00000000c002052f        0x1 
 .text          0x00000000c0020530     0x10ed fs/fat/vfslink.32
                0x00000000c0020530                FAT::getName()
                0x00000000c0020536                FAT::tell(void*, unsigned long long*)
                0x00000000c002056a                FAT::stat(void*, unsigned long long*)
                0x00000000c002059e                FAT::~FAT()
                0x00000000c002059e                FAT::~FAT()
                0x00000000c00205c2                FAT::~FAT()
                0x00000000c00205ea                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0020688                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0020742                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0020926                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0020b2c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0020c32                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0020c8c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0020ce6                FAT::close(void*)
                0x00000000c0020d32                FAT::closeDir(void*)
                0x00000000c0020d7e                FAT::seek(void*, unsigned long long)
                0x00000000c0020dd2                fatWrapperReadDisk
                0x00000000c0020e19                fatWrapperWriteDisk
                0x00000000c0020e60                fatWrapperIoctl
                0x00000000c0020f64                FAT::FAT()
                0x00000000c0020f64                FAT::FAT()
                0x00000000c0020fb6                FAT::fixFilepath(char*)
                0x00000000c0020fee                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0021116                FAT::openDir(char const*, void**)
                0x00000000c00211bc                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00212a6                FAT::unlink(char const*)
                0x00000000c0021320                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0021474                FAT::rename(char const*, char const*)
                0x00000000c0021538                FAT::mkdir(char const*)
                0x00000000c00215b2                FAT::exists(char const*)
 *fill*         0x00000000c002161d        0x1 
 .text          0x00000000c002161e      0xbc1 fs/iso9660/vfslink.32
                0x00000000c002161e                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0021624                ISO9660::seek(void*, unsigned long long)
                0x00000000c0021654                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0021678                ISO9660::getName()
                0x00000000c002167e                ISO9660::stat(void*, unsigned long long*)
                0x00000000c00216a2                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00216a8                ISO9660::unlink(char const*)
                0x00000000c00216ae                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c00216b4                ISO9660::rename(char const*, char const*)
                0x00000000c00216ba                ISO9660::mkdir(char const*)
                0x00000000c00216c0                ISO9660::close(void*)
                0x00000000c00216e2                ISO9660::closeDir(void*)
                0x00000000c0021704                ISO9660::~ISO9660()
                0x00000000c0021704                ISO9660::~ISO9660()
                0x00000000c0021728                ISO9660::~ISO9660()
                0x00000000c002174f                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c0021791                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c00217f8                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0021848                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0021a48                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0021cd5                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0021d2a                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c0021efd                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c0021f8c                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c002204c                ISO9660::exists(char const*)
                0x00000000c0022070                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0022104                ISO9660::openDir(char const*, void**)
                0x00000000c00221bc                ISO9660::ISO9660()
                0x00000000c00221bc                ISO9660::ISO9660()
 *fill*         0x00000000c00221df        0x1 
 .text          0x00000000c00221e0      0x326 hal/sound/sndchannel.32
                0x00000000c00221e0                SoundChannel::~SoundChannel()
                0x00000000c00221e0                SoundChannel::~SoundChannel()
                0x00000000c00221fc                SoundChannel::setSpeed(float)
                0x00000000c0022208                SoundChannel::getSpeed()
                0x00000000c0022210                SoundChannel::setVolume(int)
                0x00000000c002222c                SoundChannel::getVolume()
                0x00000000c0022234                SoundChannel::pause()
                0x00000000c002223e                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c002223e                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c0022394                SoundChannel::play()
                0x00000000c002239e                SoundChannel::paused()
                0x00000000c00223a6                SoundChannel::getSampleRate()
                0x00000000c00223ae                SoundChannel::getBits()
                0x00000000c00223b6                SoundChannel::getBufferUsed()
                0x00000000c00223be                SoundChannel::getBufferSize()
                0x00000000c00223c6                SoundChannel::unbuffer(float*, int, int)
                0x00000000c0022466                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c0022506      0x3d5 hal/sound/sndhw.32
                0x00000000c0022506                SoundDevice::SoundDevice(char const*)
                0x00000000c0022506                SoundDevice::SoundDevice(char const*)
                0x00000000c0022572                SoundDevice::~SoundDevice()
                0x00000000c0022572                SoundDevice::~SoundDevice()
                0x00000000c00225ec                SoundDevice::~SoundDevice()
                0x00000000c0022616                SoundDevice::getFreeChannelNum()
                0x00000000c0022630                SoundDevice::addChannel(SoundChannel*)
                0x00000000c00226a0                SoundDevice::removeChannel(int)
                0x00000000c00226d2                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c00227ba                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c00228db        0x0 hw/bus/isa.32
 *fill*         0x00000000c00228db        0x1 
 .text          0x00000000c00228dc      0x6c3 hw/bus/pci.32
                0x00000000c00228dc                PCI::open(int, int, void*)
                0x00000000c00228f0                PCI::close(int, int, void*)
                0x00000000c00228f4                PCI::PCI()
                0x00000000c00228f4                PCI::PCI()
                0x00000000c0022974                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00229bc                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c00229de                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a02                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a46                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a6a                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a8c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0022aae                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0022ad2                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0022b32                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0022b9e                PCI::checkBus(unsigned char)
                0x00000000c0022bc2                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0022d34                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0022ee0                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0022f4c                PCI::detect()
 *fill*         0x00000000c0022f9f        0x1 
 .text          0x00000000c0022fa0      0xc70 hw/diskctrl/ide.32
                0x00000000c0022fa0                IDE::close(int, int, void*)
                0x00000000c0022fa4                IDE::IDE()
                0x00000000c0022fa4                IDE::IDE()
                0x00000000c0022fd8                IDE::prepareInterrupt(unsigned char)
                0x00000000c0022fea                selectDrive(unsigned char, unsigned char)
                0x00000000c0022fec                IDE::getBase(unsigned char)
                0x00000000c0022ffe                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c00230be                IDE::read(unsigned char, unsigned char)
                0x00000000c002316c                IDE::waitInterrupt(unsigned char)
                0x00000000c00231d2                ideChannel0IRQHandler(regs*, void*)
                0x00000000c00231ee                ideChannel1IRQHandler(regs*, void*)
                0x00000000c002320a                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0023250                IDE::open(int, int, void*)
                0x00000000c0023660                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c002372c                IDE::detect()
                0x00000000c0023a14                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0023baa                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0023c10      0x390 hw/diskctrl/satabus.32
                0x00000000c0023c10                SATABus::close(int, int, void*)
                0x00000000c0023c14                SATABus::detect()
                0x00000000c0023c16                SATABus::SATABus()
                0x00000000c0023c16                SATABus::SATABus()
                0x00000000c0023cc2                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023d0a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023d52                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023d72                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023d9c                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0023ea2                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0023f80                SATABus::open(int, int, void*)
 .text          0x00000000c0023fa0      0x63c hw/diskphys/ata.32
                0x00000000c0023fa0                ATA::close(int, int, void*)
                0x00000000c0023fc4                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0023fc6                ATA::ATA()
                0x00000000c0023fc6                ATA::ATA()
                0x00000000c0023ff4                ATA::flush(bool)
                0x00000000c002403e                ATA::readyForCommand()
                0x00000000c002408e                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c0024416                ATA::read(unsigned long long, int, void*)
                0x00000000c002447e                ATA::write(unsigned long long, int, void*)
                0x00000000c00244e6                ATA::detectCHS()
                0x00000000c0024510                ATA::open(int, int, void*)
 .text          0x00000000c00245dc      0x5bd hw/diskphys/atapi.32
                0x00000000c00245dc                ATAPI::write(unsigned long long, int, void*)
                0x00000000c00245e2                ATAPI::close(int, int, void*)
                0x00000000c0024606                ATAPI::ATAPI()
                0x00000000c0024606                ATAPI::ATAPI()
                0x00000000c0024634                ATAPI::readyForCommand()
                0x00000000c0024684                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c0024944                ATAPI::diskRemoved()
                0x00000000c0024960                ATAPI::eject()
                0x00000000c00249a8                ATAPI::diskInserted()
                0x00000000c00249d6                ATAPI::detectMedia()
                0x00000000c0024a92                ATAPI::open(int, int, void*)
                0x00000000c0024b1a                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c0024b99        0x1 
 .text          0x00000000c0024b9a      0x455 hw/diskphys/sata.32
                0x00000000c0024b9a                SATA::close(int, int, void*)
                0x00000000c0024bbe                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0024bc0                SATA::open(int, int, void*)
                0x00000000c0024c6e                SATA::SATA()
                0x00000000c0024c6e                SATA::SATA()
                0x00000000c0024c9c                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0024f02                SATA::read(unsigned long long, int, void*)
                0x00000000c0024f6a                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c0024fef        0x1 
 .text          0x00000000c0024ff0      0x500 hw/diskphys/satapi.32
                0x00000000c0024ff0                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0024ff6                SATAPI::close(int, int, void*)
                0x00000000c002501a                SATAPI::SATAPI()
                0x00000000c002501a                SATAPI::SATAPI()
                0x00000000c0025048                SATAPI::diskRemoved()
                0x00000000c0025064                SATAPI::diskInserted()
                0x00000000c0025092                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0025296                SATAPI::eject()
                0x00000000c00252de                SATAPI::detectMedia()
                0x00000000c00253a0                SATAPI::open(int, int, void*)
                0x00000000c002544e                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c00254f0       0x8e hw/fpu/avx.32
                0x00000000c00254f0                AVX::open(int, int, void*)
                0x00000000c0025502                AVX::close(int, int, void*)
                0x00000000c0025514                AVX::available()
                0x00000000c0025526                AVX::save(void*)
                0x00000000c002553e                AVX::load(void*)
                0x00000000c0025556                AVX::AVX()
                0x00000000c0025556                AVX::AVX()
 .text          0x00000000c002557e       0x90 hw/fpu/mmx.32
                0x00000000c002557e                MMX::available()
                0x00000000c0025592                MMX::open(int, int, void*)
                0x00000000c00255a4                MMX::close(int, int, void*)
                0x00000000c00255b6                MMX::save(void*)
                0x00000000c00255ce                MMX::load(void*)
                0x00000000c00255e6                MMX::MMX()
                0x00000000c00255e6                MMX::MMX()
 .text          0x00000000c002560e       0x96 hw/fpu/sse.32
                0x00000000c002560e                SSE::open(int, int, void*)
                0x00000000c0025620                SSE::close(int, int, void*)
                0x00000000c0025632                SSE::available()
                0x00000000c002564c                SSE::save(void*)
                0x00000000c0025664                SSE::load(void*)
                0x00000000c002567c                SSE::SSE()
                0x00000000c002567c                SSE::SSE()
 .text          0x00000000c00256a4       0x8e hw/fpu/x87.32
                0x00000000c00256a4                x87::open(int, int, void*)
                0x00000000c00256b6                x87::close(int, int, void*)
                0x00000000c00256c8                x87::available()
                0x00000000c00256da                x87::save(void*)
                0x00000000c00256f2                x87::load(void*)
                0x00000000c002570a                x87::x87()
                0x00000000c002570a                x87::x87()
 .text          0x00000000c0025732      0x71e hw/intctrl/apic.32
                0x00000000c0025732                APIC::disable()
                0x00000000c0025734                APIC::close(int, int, void*)
                0x00000000c0025756                IOAPIC::close(int, int, void*)
                0x00000000c002575c                APIC::io_wait()
                0x00000000c0025762                APIC::getBase()
                0x00000000c00257a4                APIC::eoi(unsigned char)
                0x00000000c00257d2                APIC::open(int, int, void*)
                0x00000000c0025920                IOAPIC::IOAPIC()
                0x00000000c0025920                IOAPIC::IOAPIC()
                0x00000000c0025948                APIC::APIC()
                0x00000000c0025948                APIC::APIC()
                0x00000000c0025a24                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0025a56                IOAPIC::read(int)
                0x00000000c0025a7e                IOAPIC::open(int, int, void*)
                0x00000000c0025b74                IOAPIC::write(int, int)
                0x00000000c0025ba0                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
                0x00000000c0025c9a                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 .text          0x00000000c0025e50      0x3d3 hw/intctrl/pic.32
                0x00000000c0025e50                PIC::disable()
                0x00000000c0025e7e                PIC::close(int, int, void*)
                0x00000000c0025ea0                PIC::PIC()
                0x00000000c0025ea0                PIC::PIC()
                0x00000000c0025f76                PIC::ioWait()
                0x00000000c0025f7c                PIC::getIRQReg(int)
                0x00000000c0025fe6                PIC::eoi(unsigned char)
                0x00000000c0026078                PIC::remap()
                0x00000000c00261e4                PIC::open(int, int, void*)
 *fill*         0x00000000c0026223        0x1 
 .text          0x00000000c0026224      0x25e hw/timer/apictimer.32
                0x00000000c0026224                APICTimer::close(int, int, void*)
                0x00000000c002622a                apicTimerHandler(regs*, void*)
                0x00000000c0026258                APICTimer::write(int)
                0x00000000c002635c                APICTimer::open(int, int, void*)
                0x00000000c002645a                APICTimer::APICTimer()
                0x00000000c002645a                APICTimer::APICTimer()
 .text          0x00000000c0026482      0x1a7 hw/timer/pit.32
                0x00000000c0026482                PIT::write(int)
                0x00000000c0026500                pitHandler(regs*, void*)
                0x00000000c002652c                PIT::open(int, int, void*)
                0x00000000c002657a                PIT::close(int, int, void*)
                0x00000000c00265aa                PIT::PIT()
                0x00000000c00265aa                PIT::PIT()
 *fill*         0x00000000c0026629        0x7 
 .text          0x00000000c0026630       0x1e hw/fpu/x86/avx.32
                0x00000000c0026630                avxDetect
                0x00000000c0026636                avxSave
                0x00000000c0026637                avxLoad
                0x00000000c0026638                avxInit
                0x00000000c0026639                avxClose
                0x00000000c002663a                wouldSheSayYes
 *fill*         0x00000000c002664e        0x2 
 .text          0x00000000c0026650       0x35 hw/fpu/x86/sse.32
                0x00000000c0026650                absolutelyNoChanceInHell
                0x00000000c0026650                sseDetect
                0x00000000c0026668                sseSave
                0x00000000c002666e                sseLoad
                0x00000000c0026674                sseInit
                0x00000000c0026684                sseClose
 *fill*         0x00000000c0026685        0xb 
 .text          0x00000000c0026690       0x47 hw/fpu/x86/x87.32
                0x00000000c0026696                x87Detect
                0x00000000c00266b1                x87Save
                0x00000000c00266b7                x87Load
                0x00000000c00266bc                x87Init
                0x00000000c00266d6                x87Close
 *fill*         0x00000000c00266d7        0x1 
 .text          0x00000000c00266d8       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00266fd        0x0 crtn.32
 *fill*         0x00000000c00266fd        0x3 
 .text          0x00000000c0026700      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0026700                __divdi3
 *fill*         0x00000000c002684b        0x1 
 .text          0x00000000c002684c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c002684c                __moddi3
 *fill*         0x00000000c00269ca        0x2 
 .text          0x00000000c00269cc       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c00269cc                __udivdi3
 *fill*         0x00000000c0026acb        0x1 
 .text          0x00000000c0026acc      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0026acc                __umoddi3
 .text          0x00000000c0026be6      0x96d D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
                0x00000000c0026be6                __addsf3
                0x00000000c0026ee8                __subsf3
                0x00000000c0026efc                __negsf2
                0x00000000c0026f09                __mulsf3
                0x00000000c00270cc                __divsf3
                0x00000000c00272f7                __floatsisf
                0x00000000c002736b                __floatunsisf
                0x00000000c00273ad                __fixsfsi
                0x00000000c002740f                __fixunssfsi
                0x00000000c0027440                __cmpsf2
                0x00000000c00274d5                __eqsf2
                0x00000000c0027510                __nesf2
                0x00000000c0027512                __gtsf2
                0x00000000c002754d                __gesf2
                0x00000000c002754f                __ltsf2
                0x00000000c0027551                __lesf2
 .text          0x00000000c0027553      0xf50 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
                0x00000000c0027553                __adddf3
                0x00000000c0027ba4                __subdf3
                0x00000000c0027bbf                __negdf2
                0x00000000c0027bd0                __muldf3
                0x00000000c0027eb4                __divdf3
                0x00000000c0028233                __floatsidf
                0x00000000c002828e                __floatunsidf
                0x00000000c00282cc                __fixdfsi
                0x00000000c0028339                __fixunsdfsi
                0x00000000c0028375                __cmpdf2
                0x00000000c0028463                __eqdf2
                0x00000000c002847f                __nedf2
                0x00000000c0028481                __gtdf2
                0x00000000c002849d                __gedf2
                0x00000000c002849f                __ltdf2
                0x00000000c00284a1                __ledf2
 .text          0x00000000c00284a3      0x18d D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
                0x00000000c00284a3                __truncdfsf2
                0x00000000c00285c7                __extendsfdf2
 .text          0x00000000c0028630       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c0028630                fabs
 *fill*         0x00000000c002864e        0x2 
 .text          0x00000000c0028650        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c0028650                lrint
 .text          0x00000000c002865c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c002865c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0028668        0x0
 .iplt          0x00000000c0028668        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0028668        0xf
 .init          0x00000000c0028668        0x3 crti.32
                0x00000000c0028668                _init
 .init          0x00000000c002866b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0028670        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0028675        0x2 crtn.32

.fini           0x00000000c0028677        0xa
 .fini          0x00000000c0028677        0x3 crti.32
                0x00000000c0028677                _fini
 .fini          0x00000000c002867a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c002867f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c0028682       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0028682       0x23 core/computer.32
                0x00000000c0028682                Computer::~Computer()
                0x00000000c0028682                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c00286a6       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c00286a6       0x2a core/computer.32
                0x00000000c00286a6                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c00286d0       0x15
 .text._Z10idleCommonv
                0x00000000c00286d0       0x15 core/idle.32
                0x00000000c00286d0                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00286e6        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00286e6        0x2 core/unixfile.32
                0x00000000c00286e6                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00286e6                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00286e8       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00286e8       0x58 core/unixfile.32
                0x00000000c00286e8                LinkedList<UnixFile>::LinkedList()
                0x00000000c00286e8                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0028740       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0028740       0xd3 core/unixfile.32
                0x00000000c0028740                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0028814        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0028814        0x7 core/unixfile.32
                0x00000000c0028814                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002881c       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002881c       0xa1 core/unixfile.32
                0x00000000c002881c                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00288be        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00288be        0x8 core/unixfile.32
                0x00000000c00288be                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00288c6       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c00288c6       0x1a hal/device.32
                0x00000000c00288c6                DriverlessDevice::~DriverlessDevice()
                0x00000000c00288c6                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c00288e0       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c00288e0       0x2a hal/device.32
                0x00000000c00288e0                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002890a       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002890a       0xdc hal/device.32
                0x00000000c002890a                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c00289e6       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c00289e6       0x58 hal/device.32
                0x00000000c00289e6                LinkedList<Device>::LinkedList()
                0x00000000c00289e6                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0028a3e        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0028a3e        0x7 hal/timer.32
                0x00000000c0028a3e                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0028a46       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0028a46       0x1c hal/timer.32
                0x00000000c0028a46                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0028a62       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0028a62       0xae hal/timer.32
                0x00000000c0028a62                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0028b10       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0028b10       0xd3 hal/timer.32
                0x00000000c0028b10                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0028be4       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0028be4       0x23 hw/acpi.32
                0x00000000c0028be4                ACPI::~ACPI()
                0x00000000c0028be4                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0028c08       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0028c08       0x2a hw/acpi.32
                0x00000000c0028c08                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c0028c32       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0028c32       0x23 hw/cpu.32
                0x00000000c0028c32                CPU::~CPU()
                0x00000000c0028c32                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0028c56       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0028c56       0x2a hw/cpu.32
                0x00000000c0028c56                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0028c80        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0028c80        0x2 thr/prcssthr.32
                0x00000000c0028c80                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0028c80                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0028c82       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0028c82       0x3e thr/prcssthr.32
                0x00000000c0028c82                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0028c82                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0028cc0       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0028cc0       0x58 thr/prcssthr.32
                0x00000000c0028cc0                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0028cc0                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0028d18        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0028d18        0x8 thr/prcssthr.32
                0x00000000c0028d18                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0028d20        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0028d20        0xd vm86/x87em.32
                0x00000000c0028d20                Vm::_FPUState::_FPUState()
                0x00000000c0028d20                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c0028d2e       0x23
 .text._ZN3PCID2Ev
                0x00000000c0028d2e       0x23 hw/bus/pci.32
                0x00000000c0028d2e                PCI::~PCI()
                0x00000000c0028d2e                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0028d52       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0028d52       0x2a hw/bus/pci.32
                0x00000000c0028d52                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0028d7c       0x23
 .text._ZN3IDED2Ev
                0x00000000c0028d7c       0x23 hw/diskctrl/ide.32
                0x00000000c0028d7c                IDE::~IDE()
                0x00000000c0028d7c                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0028da0       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0028da0       0x2a hw/diskctrl/ide.32
                0x00000000c0028da0                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0028dca       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0028dca       0x23 hw/diskctrl/satabus.32
                0x00000000c0028dca                SATABus::~SATABus()
                0x00000000c0028dca                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0028dee       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0028dee       0x2a hw/diskctrl/satabus.32
                0x00000000c0028dee                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0028e18       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0028e18       0x23 hw/diskphys/ata.32
                0x00000000c0028e18                ATA::~ATA()
                0x00000000c0028e18                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0028e3c       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0028e3c       0x2a hw/diskphys/ata.32
                0x00000000c0028e3c                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0028e66       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0028e66       0x23 hw/diskphys/atapi.32
                0x00000000c0028e66                ATAPI::~ATAPI()
                0x00000000c0028e66                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0028e8a       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0028e8a       0x2a hw/diskphys/atapi.32
                0x00000000c0028e8a                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0028eb4       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0028eb4       0x23 hw/diskphys/sata.32
                0x00000000c0028eb4                SATA::~SATA()
                0x00000000c0028eb4                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0028ed8       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0028ed8       0x2a hw/diskphys/sata.32
                0x00000000c0028ed8                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0028f02       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0028f02       0x23 hw/diskphys/satapi.32
                0x00000000c0028f02                SATAPI::~SATAPI()
                0x00000000c0028f02                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0028f26       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0028f26       0x2a hw/diskphys/satapi.32
                0x00000000c0028f26                SATAPI::~SATAPI()

.text._ZN3AVXD2Ev
                0x00000000c0028f50       0x23
 .text._ZN3AVXD2Ev
                0x00000000c0028f50       0x23 hw/fpu/avx.32
                0x00000000c0028f50                AVX::~AVX()
                0x00000000c0028f50                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c0028f74       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c0028f74       0x2a hw/fpu/avx.32
                0x00000000c0028f74                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c0028f9e       0x23
 .text._ZN3MMXD2Ev
                0x00000000c0028f9e       0x23 hw/fpu/mmx.32
                0x00000000c0028f9e                MMX::~MMX()
                0x00000000c0028f9e                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c0028fc2       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c0028fc2       0x2a hw/fpu/mmx.32
                0x00000000c0028fc2                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c0028fec       0x23
 .text._ZN3SSED2Ev
                0x00000000c0028fec       0x23 hw/fpu/sse.32
                0x00000000c0028fec                SSE::~SSE()
                0x00000000c0028fec                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c0029010       0x2a
 .text._ZN3SSED0Ev
                0x00000000c0029010       0x2a hw/fpu/sse.32
                0x00000000c0029010                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c002903a       0x23
 .text._ZN3x87D2Ev
                0x00000000c002903a       0x23 hw/fpu/x87.32
                0x00000000c002903a                x87::~x87()
                0x00000000c002903a                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c002905e       0x2a
 .text._ZN3x87D0Ev
                0x00000000c002905e       0x2a hw/fpu/x87.32
                0x00000000c002905e                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c0029088       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0029088       0x23 hw/intctrl/apic.32
                0x00000000c0029088                IOAPIC::~IOAPIC()
                0x00000000c0029088                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00290ac       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00290ac       0x2a hw/intctrl/apic.32
                0x00000000c00290ac                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c00290d6       0x23
 .text._ZN4APICD2Ev
                0x00000000c00290d6       0x23 hw/intctrl/apic.32
                0x00000000c00290d6                APIC::~APIC()
                0x00000000c00290d6                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c00290fa       0x2a
 .text._ZN4APICD0Ev
                0x00000000c00290fa       0x2a hw/intctrl/apic.32
                0x00000000c00290fa                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c0029124       0x23
 .text._ZN3PICD2Ev
                0x00000000c0029124       0x23 hw/intctrl/pic.32
                0x00000000c0029124                PIC::~PIC()
                0x00000000c0029124                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c0029148       0x2a
 .text._ZN3PICD0Ev
                0x00000000c0029148       0x2a hw/intctrl/pic.32
                0x00000000c0029148                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0029172       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0029172       0x23 hw/timer/apictimer.32
                0x00000000c0029172                APICTimer::~APICTimer()
                0x00000000c0029172                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0029196       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0029196       0x2a hw/timer/apictimer.32
                0x00000000c0029196                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c00291c0       0x23
 .text._ZN3PITD2Ev
                0x00000000c00291c0       0x23 hw/timer/pit.32
                0x00000000c00291c0                PIT::~PIT()
                0x00000000c00291c0                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00291e4       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00291e4       0x2a hw/timer/pit.32
                0x00000000c00291e4                PIT::~PIT()

.rodata         0x00000000c002920e     0x40fa
                0x00000000c002920e                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002920e        0x2 
 .ctors         0x00000000c0029210        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0029214        0x4 core/unixfile.32
 .ctors         0x00000000c0029218        0x4 thr/prcssthr.32
 .ctors         0x00000000c002921c        0x4 vm86/x87em.32
 .ctors         0x00000000c0029220        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0029224                end_ctors = .
                0x00000000c0029224                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0029224        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0029228        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0029228                __DTOR_END__
                0x00000000c002922c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c002922c       0x14 
 .rodata        0x00000000c0029240      0x101 acpica/utclib.32
                0x00000000c0029240                AcpiGbl_Ctypes
 *fill*         0x00000000c0029341        0x3 
 .rodata        0x00000000c0029344       0x18 core/malloc.32
 *fill*         0x00000000c002935c        0x4 
 .rodata        0x00000000c0029360      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c0029480       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c00294d6        0xa 
 .rodata        0x00000000c00294e0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00298e0       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c0029996        0x2 
 .rodata.str1.4
                0x00000000c0029998      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c0029d3d        0x3 
 .rodata        0x00000000c0029d40       0x60 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c0029da0       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c0029de2        0x2 
 .rodata        0x00000000c0029de4       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c0029e50       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0029f14       0x4a hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0029f5e       0x48 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c0029fa6       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c0029fef      0x1d0 core/computer.32
                                        0x1d2 (size before relaxing)
 *fill*         0x00000000c002a1bf        0x1 
 .rodata._ZTV8Computer
                0x00000000c002a1c0       0x2c core/computer.32
                0x00000000c002a1c0                vtable for Computer
 .rodata.str1.1
                0x00000000c002a1ec       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c002a208       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c002a238        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c002a244       0x62 core/main.32
                                         0x63 (size before relaxing)
 .rodata.str1.1
                0x00000000c002a2a6       0x5f core/physmgr.32
 *fill*         0x00000000c002a305        0x3 
 .rodata.str1.4
                0x00000000c002a308       0x4d core/physmgr.32
 .rodata.str1.1
                0x00000000c002a355       0x39 core/pipe.32
 *fill*         0x00000000c002a38e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c002a390       0x1c core/pipe.32
                0x00000000c002a390                vtable for Pipe
 .rodata.str1.1
                0x00000000c002a3ac       0x9d core/terminal.32
 *fill*         0x00000000c002a449        0x3 
 .rodata._ZTV7VgaText
                0x00000000c002a44c       0x1c core/terminal.32
                0x00000000c002a44c                vtable for VgaText
 .rodata        0x00000000c002a468       0x1e core/tss.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c002a486       0x19 core/unixfile.32
 *fill*         0x00000000c002a49f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002a4a0       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002a4c2       0x15 core/unixfile.32
 *fill*         0x00000000c002a4d7        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c002a4d8       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002a523        0x8 core/unixfile.32
 *fill*         0x00000000c002a52b        0x1 
 .rodata.str1.4
                0x00000000c002a52c       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c002a54c       0x1c core/unixfile.32
                0x00000000c002a54c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c002a568       0x1c core/unixfile.32
                0x00000000c002a568                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002a584      0x187 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002a70b      0x178 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002a883       0x83 coreobjs/c++.32
 *fill*         0x00000000c002a906        0x2 
 .rodata.str1.4
                0x00000000c002a908       0x3f dbg/kconsole.32
 *fill*         0x00000000c002a947        0x1 
 .rodata        0x00000000c002a948      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002aa98       0x83 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c002aa98       0x64 fs/vfs.32
                0x00000000c002aa98                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002aafc       0x1c fs/vfs.32
                0x00000000c002aafc                vtable for File
 .rodata._ZTV9Directory
                0x00000000c002ab18       0x1c fs/vfs.32
                0x00000000c002ab18                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002ab34       0x2c hal/bus.32
                0x00000000c002ab34                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c002ab60       0x30 hal/buzzer.32
                0x00000000c002ab60                vtable for Buzzer
 .rodata.str1.1
                0x00000000c002ab90       0x1e hal/clock.32
 *fill*         0x00000000c002abae        0x2 
 .rodata._ZTV5Clock
                0x00000000c002abb0       0x3c hal/clock.32
                0x00000000c002abb0                vtable for Clock
 *fill*         0x00000000c002abec       0x14 
 .rodata        0x00000000c002ac00       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c002ac30       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c002ac4e       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c002ac4e       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c002ac4e       0x19 hal/device.32
 *fill*         0x00000000c002ac4e        0x2 
 .rodata._ZTV6Device
                0x00000000c002ac50       0x2c hal/device.32
                0x00000000c002ac50                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c002ac7c       0x2c hal/device.32
                0x00000000c002ac7c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c002aca8       0x2c hal/diskctrl.32
                0x00000000c002aca8                vtable for HardDiskController
 .rodata.str1.1
                0x00000000c002acd4       0x27 hal/diskphys.32
 *fill*         0x00000000c002acfb        0x1 
 .rodata._ZTV12PhysicalDisk
                0x00000000c002acfc       0x38 hal/diskphys.32
                0x00000000c002acfc                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c002ad34        0x9 hal/fpu.32
 *fill*         0x00000000c002ad3d        0x3 
 .rodata._ZTV3FPU
                0x00000000c002ad40       0x38 hal/fpu.32
                0x00000000c002ad40                vtable for FPU
 .rodata        0x00000000c002ad78      0x34d hal/intctrl.32
 *fill*         0x00000000c002b0c5        0x3 
 .rodata._ZTV19InterruptController
                0x00000000c002b0c8       0x48 hal/intctrl.32
                0x00000000c002b0c8                vtable for InterruptController
 .rodata        0x00000000c002b110       0x4f hal/keybrd.32
 *fill*         0x00000000c002b15f        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c002b160       0x34 hal/keybrd.32
                0x00000000c002b160                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002b194       0x7a hal/logidisk.32
 *fill*         0x00000000c002b20e        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c002b210       0x2c hal/logidisk.32
                0x00000000c002b210                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c002b23c       0x2c hal/mouse.32
                0x00000000c002b23c                vtable for Mouse
 .rodata.str1.1
                0x00000000c002b268       0x2d hal/partition.32
 *fill*         0x00000000c002b295        0x3 
 .rodata._ZTV6Serial
                0x00000000c002b298       0x44 hal/serial.32
                0x00000000c002b298                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002b2dc       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002b2dc        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002b2dc       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002b2dc       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c002b2dc       0x30 hal/timer.32
                0x00000000c002b2dc                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c002b30c       0x10 hal/vcache.32
                0x00000000c002b30c                vtable for VCache
 .rodata.str1.1
                0x00000000c002b31c       0x7c hal/video.32
 .rodata._ZTV5Video
                0x00000000c002b398       0x48 hal/video.32
                0x00000000c002b398                vtable for Video
 .rodata.str1.1
                0x00000000c002b3e0      0x130 hw/acpi.32
 .rodata.str1.4
                0x00000000c002b510       0xbe hw/acpi.32
 *fill*         0x00000000c002b5ce        0x2 
 .rodata._ZTV4ACPI
                0x00000000c002b5d0       0x2c hw/acpi.32
                0x00000000c002b5d0                vtable for ACPI
 .rodata.str1.1
                0x00000000c002b5fc      0x3c1 hw/cpu.32
                                        0x3ce (size before relaxing)
 *fill*         0x00000000c002b9bd        0x3 
 .rodata._ZTV3CPU
                0x00000000c002b9c0       0x2c hw/cpu.32
                0x00000000c002b9c0                vtable for CPU
 .rodata.str1.1
                0x00000000c002b9ec       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c002b9fd       0x89 krnl/env.32
 .rodata.str1.1
                0x00000000c002ba86       0xbe krnl/panic.32
                                         0xc5 (size before relaxing)
 .rodata.str1.4
                0x00000000c002bb44      0x13e krnl/panic.32
 *fill*         0x00000000c002bc82        0x2 
 .rodata.str1.4
                0x00000000c002bc84       0x4c net/ethernet.32
 .rodata.str1.1
                0x00000000c002bcd0       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c002bd15       0x38 sys/sc_settime.32
 .rodata.str1.1
                0x00000000c002bd4d       0x77 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c002bdc4       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c002bdf0      0x115 sys/syscalls.32
                                        0x133 (size before relaxing)
 *fill*         0x00000000c002bf05        0x3 
 .rodata.str1.4
                0x00000000c002bf08       0x6f sys/syscalls.32
 .rodata.str1.1
                0x00000000c002bf77      0x254 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c002c1cb       0xfb thr/prcssthr.32
 *fill*         0x00000000c002c2c6        0x2 
 .rodata.str1.4
                0x00000000c002c2c8      0x2a7 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c002c56f       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002c56f       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002c56f       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002c56f       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002c56f        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002c56f      0x19f vm86/vm8086.32
 *fill*         0x00000000c002c70e        0x2 
 .rodata        0x00000000c002c710       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002c740       0x58 vm86/x87em.32
 .rodata        0x00000000c002c798       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c002c7d4       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c002c827        0x1 
 .rodata.str1.4
                0x00000000c002c828       0x25 fs/fat/vfslink.32
 *fill*         0x00000000c002c84d        0x3 
 .rodata._ZTV3FAT
                0x00000000c002c850       0x64 fs/fat/vfslink.32
                0x00000000c002c850                vtable for FAT
 .rodata.str1.1
                0x00000000c002c8b4       0x5c fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c002c910       0x64 fs/iso9660/vfslink.32
                0x00000000c002c910                vtable for ISO9660
 .rodata.str1.1
                0x00000000c002c974       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c002c98e        0x2 
 .rodata.cst4   0x00000000c002c990        0x8 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c002c998       0x38 hal/sound/sndhw.32
                0x00000000c002c998                vtable for SoundDevice
 .rodata.str1.1
                0x00000000c002c9d0       0x62 hw/bus/pci.32
 *fill*         0x00000000c002ca32        0x2 
 .rodata._ZTV3PCI
                0x00000000c002ca34       0x2c hw/bus/pci.32
                0x00000000c002ca34                vtable for PCI
 .rodata.str1.1
                0x00000000c002ca60      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c002cc96        0x2 
 .rodata._ZTV3IDE
                0x00000000c002cc98       0x2c hw/diskctrl/ide.32
                0x00000000c002cc98                vtable for IDE
 .rodata.str1.4
                0x00000000c002ccc4       0x48 hw/diskctrl/satabus.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c002cd0c       0x6a hw/diskctrl/satabus.32
 *fill*         0x00000000c002cd76        0x2 
 .rodata._ZTV7SATABus
                0x00000000c002cd78       0x2c hw/diskctrl/satabus.32
                0x00000000c002cd78                vtable for SATABus
 .rodata.str1.1
                0x00000000c002cda4       0x1d hw/diskphys/ata.32
                                         0x2c (size before relaxing)
 *fill*         0x00000000c002cdc1        0x3 
 .rodata._ZTV3ATA
                0x00000000c002cdc4       0x38 hw/diskphys/ata.32
                0x00000000c002cdc4                vtable for ATA
 .rodata.str1.1
                0x00000000c002cdfc       0x1d hw/diskphys/atapi.32
                                         0x38 (size before relaxing)
 .rodata._ZTV5ATAPI
                0x00000000c002cdfc       0x38 hw/diskphys/atapi.32
                0x00000000c002cdfc                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002ce34       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c002ceb0       0x38 hw/diskphys/sata.32
                0x00000000c002ceb0                vtable for SATA
 .rodata.str1.1
                0x00000000c002cee8       0xa3 hw/diskphys/satapi.32
                                         0xb1 (size before relaxing)
 *fill*         0x00000000c002cf8b        0x1 
 .rodata._ZTV6SATAPI
                0x00000000c002cf8c       0x38 hw/diskphys/satapi.32
                0x00000000c002cf8c                vtable for SATAPI
 .rodata.str1.1
                0x00000000c002cfc4        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c002cfcc       0x38 hw/fpu/avx.32
                0x00000000c002cfcc                vtable for AVX
 .rodata.str1.1
                0x00000000c002d004        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c002d00c       0x38 hw/fpu/mmx.32
                0x00000000c002d00c                vtable for MMX
 .rodata.str1.1
                0x00000000c002d044        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c002d04c       0x38 hw/fpu/sse.32
                0x00000000c002d04c                vtable for SSE
 .rodata.str1.1
                0x00000000c002d084        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c002d08c       0x38 hw/fpu/x87.32
                0x00000000c002d08c                vtable for x87
 .rodata        0x00000000c002d0c4       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c002d19c       0x48 hw/intctrl/apic.32
                0x00000000c002d19c                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c002d1e4       0x2c hw/intctrl/apic.32
                0x00000000c002d1e4                vtable for IOAPIC
 .rodata        0x00000000c002d210       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c002d232        0x2 
 .rodata._ZTV3PIC
                0x00000000c002d234       0x48 hw/intctrl/pic.32
                0x00000000c002d234                vtable for PIC
 .rodata.str1.1
                0x00000000c002d27c        0xb hw/timer/apictimer.32
 *fill*         0x00000000c002d287        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002d288       0x30 hw/timer/apictimer.32
                0x00000000c002d288                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002d2b8       0x1d hw/timer/pit.32
 *fill*         0x00000000c002d2d5        0x3 
 .rodata._ZTV3PIT
                0x00000000c002d2d8       0x30 hw/timer/pit.32
                0x00000000c002d2d8                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002d308      0x66d
 *(.data)
 .data          0x00000000c002d308        0x0 crti.32
 .data          0x00000000c002d308        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002d308                __dso_handle
 .data          0x00000000c002d30c        0x0 acpica/utclib.32
 .data          0x00000000c002d30c        0x0 core/malloc.32
 .data          0x00000000c002d30c        0x0 libk/string.32
 .data          0x00000000c002d30c        0x0 fs/fat/diskio.32
 .data          0x00000000c002d30c        0x0 fs/fat/ff.32
 .data          0x00000000c002d30c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c002d30c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c002d30c        0x0 hal/libresample/samplerate.32
 .data          0x00000000c002d30c        0x0 hal/libresample/src_linear.32
 .data          0x00000000c002d30c        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c002d30c        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c002d30c        0x0 compat/inlines.32
 .data          0x00000000c002d30c        0x0 compat/resolve.32
 .data          0x00000000c002d30c        0x0 core/computer.32
 .data          0x00000000c002d30c        0x0 core/gdt.32
 .data          0x00000000c002d30c        0x0 core/idle.32
 .data          0x00000000c002d30c        0x0 core/idt.32
 .data          0x00000000c002d30c        0x4 core/kheap.32
 .data          0x00000000c002d310        0x0 core/main.32
 .data          0x00000000c002d310        0x4 core/physmgr.32
                0x00000000c002d310                Phys::bitmap
 .data          0x00000000c002d314        0x0 core/pipe.32
 *fill*         0x00000000c002d314        0xc 
 .data          0x00000000c002d320       0x60 core/terminal.32
                0x00000000c002d320                VGA_TEXT_MODE_ADDRESS
                0x00000000c002d324                VgaText::hiddenOut
                0x00000000c002d340                ansiToVGAMappings
 .data          0x00000000c002d380        0x0 core/tss.32
 .data          0x00000000c002d380        0x4 core/unixfile.32
                0x00000000c002d380                UnixFile::nextFd
 .data          0x00000000c002d384       0x15 core/virtmgr.32
                0x00000000c002d384                Virt::pageAllocPtr
                0x00000000c002d388                Virt::bitmap
                0x00000000c002d38c                Virt::swapfileSectorsPerPage
                0x00000000c002d390                Virt::swapfileLength
                0x00000000c002d394                Virt::swapfileSector
                0x00000000c002d398                Virt::swapfileDrive
 *fill*         0x00000000c002d399        0x3 
 .data          0x00000000c002d39c        0x4 coreobjs/c++.32
                0x00000000c002d39c                __stack_chk_guard
 .data          0x00000000c002d3a0        0x0 dbg/kconsole.32
 .data          0x00000000c002d3a0        0x0 fs/vfs.32
 .data          0x00000000c002d3a0        0x0 hal/bus.32
 .data          0x00000000c002d3a0        0x0 hal/buzzer.32
 .data          0x00000000c002d3a0        0x0 hal/clock.32
 .data          0x00000000c002d3a0        0x0 hal/device.32
 .data          0x00000000c002d3a0        0x0 hal/diskctrl.32
 .data          0x00000000c002d3a0        0x0 hal/diskphys.32
 .data          0x00000000c002d3a0        0x0 hal/fpu.32
 .data          0x00000000c002d3a0      0x2a0 hal/intctrl.32
                0x00000000c002d3a0                exceptionNames
 .data          0x00000000c002d640        0x0 hal/keybrd.32
 .data          0x00000000c002d640        0x0 hal/logidisk.32
 .data          0x00000000c002d640        0x0 hal/mouse.32
 .data          0x00000000c002d640        0x0 hal/partition.32
 .data          0x00000000c002d640        0x0 hal/serial.32
 .data          0x00000000c002d640        0x0 hal/timer.32
 .data          0x00000000c002d640        0x0 hal/vcache.32
 .data          0x00000000c002d640        0x0 hal/video.32
 .data          0x00000000c002d640       0x10 hw/acpi.32
                0x00000000c002d640                legacyIRQRemaps
 *fill*         0x00000000c002d650       0x10 
 .data          0x00000000c002d660      0x2a4 hw/cpu.32
                0x00000000c002d660                cpuNameList
                0x00000000c002d900                lastCode
 .data          0x00000000c002d904        0x0 hw/ports.32
 .data          0x00000000c002d904        0x0 hw/smp.32
 *fill*         0x00000000c002d904       0x1c 
 .data          0x00000000c002d920       0x4d krnl/env.32
                0x00000000c002d920                defaultSysEnv
 .data          0x00000000c002d96d        0x0 krnl/panic.32
 .data          0x00000000c002d96d        0x0 net/ethernet.32
 .data          0x00000000c002d96d        0x0 reg/registry.32
 .data          0x00000000c002d96d        0x0 sys/sc_eject.32
 .data          0x00000000c002d96d        0x0 sys/sc_exit.32
 .data          0x00000000c002d96d        0x0 sys/sc_getcwd.32
 .data          0x00000000c002d96d        0x0 sys/sc_getpid.32
 .data          0x00000000c002d96d        0x0 sys/sc_getramdata.32
 .data          0x00000000c002d96d        0x0 sys/sc_loaddll.32
 .data          0x00000000c002d96d        0x0 sys/sc_read.32
 .data          0x00000000c002d96d        0x0 sys/sc_sbrk.32
 .data          0x00000000c002d96d        0x0 sys/sc_setcwd.32
 .data          0x00000000c002d96d        0x0 sys/sc_settime.32
 .data          0x00000000c002d96d        0x0 sys/sc_timezone.32
 .data          0x00000000c002d96d        0x0 sys/sc_write.32
 .data          0x00000000c002d96d        0x0 sys/sc_wsbe.32
 .data          0x00000000c002d96d        0x0 sys/sc_yield.32
 .data          0x00000000c002d96d        0x0 sys/syscalls.32
 .data          0x00000000c002d96d        0x0 thr/elf.32
 *fill*         0x00000000c002d96d        0x3 
 .data          0x00000000c002d970        0x4 thr/prcssthr.32
                0x00000000c002d970                Thr::nextPID
 .data          0x00000000c002d974        0x0 vm86/vm8086.32
 .data          0x00000000c002d974        0x0 vm86/x87em.32
 .data          0x00000000c002d974        0x0 fs/fat/vfslink.32
 .data          0x00000000c002d974        0x1 fs/iso9660/vfslink.32
                0x00000000c002d974                recentDriveletter
 .data          0x00000000c002d975        0x0 hal/sound/sndchannel.32
 .data          0x00000000c002d975        0x0 hal/sound/sndhw.32
 .data          0x00000000c002d975        0x0 hw/bus/isa.32
 .data          0x00000000c002d975        0x0 hw/bus/pci.32
 .data          0x00000000c002d975        0x0 hw/diskctrl/ide.32
 .data          0x00000000c002d975        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c002d975        0x0 hw/diskphys/ata.32
 .data          0x00000000c002d975        0x0 hw/diskphys/atapi.32
 .data          0x00000000c002d975        0x0 hw/diskphys/sata.32
 .data          0x00000000c002d975        0x0 hw/diskphys/satapi.32
 .data          0x00000000c002d975        0x0 hw/fpu/avx.32
 .data          0x00000000c002d975        0x0 hw/fpu/mmx.32
 .data          0x00000000c002d975        0x0 hw/fpu/sse.32
 .data          0x00000000c002d975        0x0 hw/fpu/x87.32
 .data          0x00000000c002d975        0x0 hw/intctrl/apic.32
 .data          0x00000000c002d975        0x0 hw/intctrl/pic.32
 .data          0x00000000c002d975        0x0 hw/timer/apictimer.32
 .data          0x00000000c002d975        0x0 hw/timer/pit.32
 .data          0x00000000c002d975        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c002d975        0x0 crtn.32
 .data          0x00000000c002d975        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c002d975        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c002d975        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c002d975        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 .data          0x00000000c002d975        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
 .data          0x00000000c002d975        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
 .data          0x00000000c002d975        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
 .data          0x00000000c002d975        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c002d975        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c002d975        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c002d978        0x0
 .got           0x00000000c002d978        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c002d978        0x0
 .got.plt       0x00000000c002d978        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c002d978        0x0
 .igot.plt      0x00000000c002d978        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c002d978        0x0
 .tm_clone_table
                0x00000000c002d978        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c002d978        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c002d975      0x633
 *(.eh_frame)
 *fill*         0x00000000c002d975        0x3 
 .eh_frame      0x00000000c002d978        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c002d978        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c002d978       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002d9d0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002da10       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002da7c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c002db00      0x218 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
                                        0x230 (size before relaxing)
 .eh_frame      0x00000000c002dd18      0x220 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
                                        0x238 (size before relaxing)
 .eh_frame      0x00000000c002df38       0x58 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
                                         0x70 (size before relaxing)
 .eh_frame      0x00000000c002df90       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c002dfa8        0x0
 .rel.got       0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c002dfa8     0x4820
                0x00000000c002dfa8                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c002dfa8        0x0 crti.32
 .bss           0x00000000c002dfa8       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c002dfc8        0x4 acpica/utclib.32
 *fill*         0x00000000c002dfcc       0x14 
 .bss           0x00000000c002dfe0      0x378 core/malloc.32
 .bss           0x00000000c002e358        0x0 libk/string.32
 .bss           0x00000000c002e358        0x0 fs/fat/diskio.32
 *fill*         0x00000000c002e358        0x8 
 .bss           0x00000000c002e360       0x88 fs/fat/ff.32
 .bss           0x00000000c002e3e8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c002e3e8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c002e3e8        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c002e3e8        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c002e3e8        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c002e3e8        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c002e3e8        0x0 compat/inlines.32
 .bss           0x00000000c002e3e8        0x0 compat/resolve.32
 .bss           0x00000000c002e3e8        0x6 core/computer.32
                0x00000000c002e3e8                Krnl::computer
                0x00000000c002e3ec                Krnl::preemptionOn
                0x00000000c002e3ed                Krnl::schedulingOn
 *fill*         0x00000000c002e3ee        0x2 
 .bss           0x00000000c002e3f0        0x6 core/gdt.32
                0x00000000c002e3f0                gdtDescr
 .bss           0x00000000c002e3f6        0x0 core/idle.32
 *fill*         0x00000000c002e3f6        0x2 
 .bss           0x00000000c002e3f8        0x6 core/idt.32
                0x00000000c002e3f8                idtDescr
 .bss           0x00000000c002e3fe        0x0 core/kheap.32
 *fill*         0x00000000c002e3fe        0x2 
 .bss           0x00000000c002e400        0x4 core/main.32
                0x00000000c002e400                sysBootSettings
 *fill*         0x00000000c002e404       0x1c 
 .bss           0x00000000c002e420       0x50 core/physmgr.32
                0x00000000c002e420                Phys::forbidEvictions
                0x00000000c002e424                Phys::currentPagePointer
                0x00000000c002e428                Phys::highestMem
                0x00000000c002e42c                Phys::oldPercent
                0x00000000c002e430                Phys::usedPages
                0x00000000c002e434                Phys::usablePages
                0x00000000c002e440                Phys::dmaUsage
 .bss           0x00000000c002e470        0x0 core/pipe.32
 *fill*         0x00000000c002e470       0x10 
 .bss           0x00000000c002e480       0x49 core/terminal.32
                0x00000000c002e480                vgamono
                0x00000000c002e4a0                textModeImplementation
                0x00000000c002e4c0                terminalCycle
                0x00000000c002e4c4                activeTerminal
                0x00000000c002e4c8                VgaText::graphicMode
 *fill*         0x00000000c002e4c9        0x1 
 .bss           0x00000000c002e4ca        0x2 core/tss.32
                0x00000000c002e4ca                doubleFaultSelector
 *fill*         0x00000000c002e4cc       0x14 
 .bss           0x00000000c002e4e0       0x84 core/unixfile.32
                0x00000000c002e4e0                sfileLpt
                0x00000000c002e520                sfileCom
                0x00000000c002e544                sfileNul
                0x00000000c002e548                sfilePnt
                0x00000000c002e54c                sfileAux
                0x00000000c002e550                sfileCon
                0x00000000c002e554                initialFilesAdded
                0x00000000c002e558                unixFileLinkedList
 .bss           0x00000000c002e564       0x14 core/virtmgr.32
                0x00000000c002e564                swapBalance
                0x00000000c002e568                Virt::swapfileBitmap
                0x00000000c002e56c                firstVAS
 .bss           0x00000000c002e578        0x0 coreobjs/c++.32
 .bss           0x00000000c002e578        0x0 dbg/kconsole.32
 .bss           0x00000000c002e578        0x4 fs/vfs.32
                0x00000000c002e578                installedFilesystems
 .bss           0x00000000c002e57c        0x0 hal/bus.32
 .bss           0x00000000c002e57c        0x4 hal/buzzer.32
                0x00000000c002e57c                systemBuzzer
 .bss           0x00000000c002e580        0x8 hal/clock.32
                0x00000000c002e580                User::dstOn
                0x00000000c002e581                User::timezoneHalfHourOffset
                0x00000000c002e584                User::timezoneHourOffset
 .bss           0x00000000c002e588        0x0 hal/device.32
 .bss           0x00000000c002e588        0x0 hal/diskctrl.32
 .bss           0x00000000c002e588        0x0 hal/diskphys.32
 .bss           0x00000000c002e588        0x0 hal/fpu.32
 .bss           0x00000000c002e588       0x1c hal/intctrl.32
                0x00000000c002e588                pf5
                0x00000000c002e58c                pf4
                0x00000000c002e590                pf3
                0x00000000c002e594                pf2
                0x00000000c002e598                pf1
                0x00000000c002e59c                pf0
                0x00000000c002e5a0                gpFaultIntercept
 *fill*         0x00000000c002e5a4       0x1c 
 .bss           0x00000000c002e5c0      0x429 hal/keybrd.32
                0x00000000c002e5c0                keyboardWaitingTaskList
                0x00000000c002e5c4                keyboardSetupYet
                0x00000000c002e5c8                guiKeyboardHandler
                0x00000000c002e5e0                keystates
 *fill*         0x00000000c002e9e9       0x17 
 .bss           0x00000000c002ea00       0x88 hal/logidisk.32
                0x00000000c002ea00                diskAssignments
                0x00000000c002ea20                disks
 .bss           0x00000000c002ea88        0x4 hal/mouse.32
                0x00000000c002ea88                guiMouseHandler
 .bss           0x00000000c002ea8c        0x0 hal/partition.32
 .bss           0x00000000c002ea8c        0x0 hal/serial.32
 *fill*         0x00000000c002ea8c        0x4 
 .bss           0x00000000c002ea90        0x8 hal/timer.32
                0x00000000c002ea90                nanoSinceBoot
 *fill*         0x00000000c002ea98        0x8 
 .bss           0x00000000c002eaa0     0x2000 hal/vcache.32
                0x00000000c002eaa0                testBuffer
 .bss           0x00000000c0030aa0        0x4 hal/video.32
                0x00000000c0030aa0                screen
 *fill*         0x00000000c0030aa4       0x1c 
 .bss           0x00000000c0030ac0      0x480 hw/acpi.32
                0x00000000c0030ac0                systemSleepFunction
                0x00000000c0030ac4                systemResetFunction
                0x00000000c0030ac8                systemShutdownFunction
                0x00000000c0030acc                nextACPITable
                0x00000000c0030ae0                acpiTables
                0x00000000c0030ce0                usingXSDT
                0x00000000c0030ce4                MADTpointer
                0x00000000c0030ce8                RSDTpointer
                0x00000000c0030cec                RSDPpointer
                0x00000000c0030cf0                nextAPICNMI
                0x00000000c0030d00                apicNMIInfo
                0x00000000c0030d80                legacyIRQFlags
                0x00000000c0030da0                ioapicDiscoveryNumber
                0x00000000c0030dc0                ioapicFoundInMADT
                0x00000000c0030de0                ioapicAddresses
                0x00000000c0030e60                ioapicGSIBase
                0x00000000c0030ee0                processorDiscoveryNumber
                0x00000000c0030f00                matchingAPICID
                0x00000000c0030f20                processorID
 .bss           0x00000000c0030f40       0x10 hw/cpu.32
                0x00000000c0030f40                lastD
                0x00000000c0030f44                lastC
                0x00000000c0030f48                lastB
                0x00000000c0030f4c                lastA
 .bss           0x00000000c0030f50        0x0 hw/ports.32
 .bss           0x00000000c0030f50        0x1 hw/smp.32
                0x00000000c0030f50                Krnl::bspID
 *fill*         0x00000000c0030f51        0x3 
 .bss           0x00000000c0030f54        0x8 krnl/env.32
                0x00000000c0030f54                Krnl::userEnv
                0x00000000c0030f58                Krnl::systemEnv
 .bss           0x00000000c0030f5c        0x9 krnl/panic.32
                0x00000000c0030f5c                Krnl::guiProgramFaultHandler
                0x00000000c0030f60                Krnl::guiPanicHandler
                0x00000000c0030f64                Krnl::kernelInPanic
 .bss           0x00000000c0030f65        0x0 net/ethernet.32
 .bss           0x00000000c0030f65        0x0 reg/registry.32
 .bss           0x00000000c0030f65        0x0 sys/sc_eject.32
 .bss           0x00000000c0030f65        0x0 sys/sc_exit.32
 .bss           0x00000000c0030f65        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0030f65        0x0 sys/sc_getpid.32
 .bss           0x00000000c0030f65        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0030f65        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0030f65        0x0 sys/sc_read.32
 .bss           0x00000000c0030f65        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0030f65        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0030f65        0x0 sys/sc_settime.32
 .bss           0x00000000c0030f65        0x0 sys/sc_timezone.32
 .bss           0x00000000c0030f65        0x0 sys/sc_write.32
 .bss           0x00000000c0030f65        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0030f65        0x0 sys/sc_yield.32
 *fill*         0x00000000c0030f65       0x1b 
 .bss           0x00000000c0030f80      0x200 sys/syscalls.32
                0x00000000c0030f80                systemCallHandlers
 .bss           0x00000000c0031180      0x7a4 thr/elf.32
                0x00000000c0031180                Thr::driverLookupNext
                0x00000000c00311a0                Thr::driverLookupLen
                0x00000000c00313a0                Thr::driverLookupAddr
                0x00000000c00315a0                Thr::driverNameLookup
                0x00000000c00317a0                Thr::kernelSymbols
                0x00000000c0031820                Thr::kernelStringTable
                0x00000000c00318a0                Thr::kernelSymbolTable
                0x00000000c0031920                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0031924        0x4 
 .bss           0x00000000c0031928       0x68 thr/prcssthr.32
                0x00000000c0031928                cleanerThread
                0x00000000c003192c                weNeedTheCleanerToNotBlock
                0x00000000c0031930                xxxx
                0x00000000c0031934                retValLockStuff
                0x00000000c0031938                retValSchedLock
                0x00000000c003193c                lockStuffLock
                0x00000000c0031940                schedulerLock
                0x00000000c0031944                taskSwitchesPostponedFlag
                0x00000000c0031948                postponeTaskSwitchesCounter
                0x00000000c003194c                irqDisableCounter
                0x00000000c0031950                terminatedTaskList
                0x00000000c003195c                sleepingTaskList
                0x00000000c0031968                taskList
                0x00000000c0031974                kernelProcess
 *fill*         0x00000000c0031990       0x10 
 .bss           0x00000000c00319a0       0x40 vm86/vm8086.32
                0x00000000c00319a0                Vm::vmRetV
                0x00000000c00319a4                Vm::vmDone
                0x00000000c00319a5                Vm::vmReady
                0x00000000c00319a8                Vm::vm86Thread
                0x00000000c00319ac                Vm::vmToHostCommsPtr
                0x00000000c00319c0                Vm::vmToHostComms
 .bss           0x00000000c00319e0       0x48 vm86/x87em.32
                0x00000000c00319e0                Vm::fpuState
 *fill*         0x00000000c0031a28       0x18 
 .bss           0x00000000c0031a40       0xf0 fs/fat/vfslink.32
                0x00000000c0031a40                FAT::fats
                0x00000000c0031a60                FAT::vfsToFatRemaps
                0x00000000c0031ae0                fatToVFSRemaps
 *fill*         0x00000000c0031b30       0x10 
 .bss           0x00000000c0031b40      0x820 fs/iso9660/vfslink.32
                0x00000000c0031b40                recentSector
                0x00000000c0031b60                recentBuffer
 .bss           0x00000000c0032360      0x401 hal/sound/sndchannel.32
                0x00000000c0032360                lookupTable8
                0x00000000c0032760                gotLookupTable
 .bss           0x00000000c0032761        0x0 hal/sound/sndhw.32
 .bss           0x00000000c0032761        0x0 hw/bus/isa.32
 .bss           0x00000000c0032761        0x0 hw/bus/pci.32
 .bss           0x00000000c0032761        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0032761        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0032761        0x3 
 .bss           0x00000000c0032764        0x8 hw/diskphys/ata.32
                0x00000000c0032764                ataSectorsWritten
                0x00000000c0032768                ataSectorsRead
 .bss           0x00000000c003276c        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c003276c        0x0 hw/diskphys/sata.32
 .bss           0x00000000c003276c        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c003276c        0x0 hw/fpu/avx.32
 .bss           0x00000000c003276c        0x0 hw/fpu/mmx.32
 .bss           0x00000000c003276c        0x0 hw/fpu/sse.32
 .bss           0x00000000c003276c        0x0 hw/fpu/x87.32
 *fill*         0x00000000c003276c       0x14 
 .bss           0x00000000c0032780       0x41 hw/intctrl/apic.32
                0x00000000c0032780                noOfIOAPICs
                0x00000000c00327a0                ioapics
                0x00000000c00327c0                IOAPICsSetupYet
 .bss           0x00000000c00327c1        0x0 hw/intctrl/pic.32
 .bss           0x00000000c00327c1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00327c1        0x3 
 .bss           0x00000000c00327c4        0x4 hw/timer/pit.32
                0x00000000c00327c4                pitFreq
 .bss           0x00000000c00327c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00327c8        0x0 crtn.32
 .bss           0x00000000c00327c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00327c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00327c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00327c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 .bss           0x00000000c00327c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
 .bss           0x00000000c00327c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
 .bss           0x00000000c00327c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
 .bss           0x00000000c00327c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c00327c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c00327c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00327c8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0036fe8                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
