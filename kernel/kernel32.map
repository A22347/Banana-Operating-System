Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootflags.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/pthread.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/elf2.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/apic.32
 .group         0x0000000000000000        0xc arch/i386/apic.32
 .comment       0x0000000000000000       0x12 arch/i386/apic.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootflags.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/pthread.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/elf2.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/apic.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x2220e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x2ad dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f13                Dbg::logs(char*)
                0x00000000c0006f3d                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f5b                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f7c                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c00070f3        0x1 
 .text          0x00000000c00070f4      0x2d4 dbg/usban.32
                0x00000000c00070f4                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007160                __ubsan_handle_type_mismatch_v1
                0x00000000c000723c                __ubsan_handle_pointer_overflow
                0x00000000c0007268                __ubsan_handle_out_of_bounds
                0x00000000c0007294                __ubsan_handle_add_overflow
                0x00000000c00072c0                __ubsan_handle_load_invalid_value
                0x00000000c00072ec                __ubsan_handle_divrem_overflow
                0x00000000c0007318                __ubsan_handle_mul_overflow
                0x00000000c0007344                __ubsan_handle_sub_overflow
                0x00000000c0007370                __ubsan_handle_shift_out_of_bounds
                0x00000000c000739c                __ubsan_handle_negate_overflow
 .text          0x00000000c00073c8      0x814 fs/symlink.32
                0x00000000c0007517                KiDeinitialiseSymlinks(void*)
                0x00000000c00075aa                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000762d                KeInitialiseSymlinks()
                0x00000000c000778f                KiIsSymlinkRegistered(char const*)
                0x00000000c00078f9                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007aa0                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007bdc      0xd88 fs/vfs.32
                0x00000000c0007bdc                File::read(unsigned long long, void*, int*)
                0x00000000c0007c34                File::write(unsigned long long, void*, int*)
                0x00000000c0007c8c                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007ce4                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007d12                File::isAtty()
                0x00000000c0007d16                Directory::isAtty()
                0x00000000c0007d1a                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007d20                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007d26                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007d2c                File::~File()
                0x00000000c0007d2c                File::~File()
                0x00000000c0007d50                File::~File()
                0x00000000c0007d7a                Directory::~Directory()
                0x00000000c0007d7a                Directory::~Directory()
                0x00000000c0007d9e                Directory::~Directory()
                0x00000000c0007dc8                Filesystem::Filesystem()
                0x00000000c0007dc8                Filesystem::Filesystem()
                0x00000000c0007dec                Filesystem::~Filesystem()
                0x00000000c0007dec                Filesystem::~Filesystem()
                0x00000000c0007dfa                Filesystem::~Filesystem()
                0x00000000c0007e1e                Fs::getcwd(Process*, char*, int)
                0x00000000c0007e48                Fs::initVFS()
                0x00000000c0007e72                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000808c                File::File(char const*, Process*, bool)
                0x00000000c000808c                File::File(char const*, Process*, bool)
                0x00000000c000818a                File::File(char const*, Process*)
                0x00000000c000818a                File::File(char const*, Process*)
                0x00000000c00081a8                File::open(FileOpenMode)
                0x00000000c0008206                File::close()
                0x00000000c0008266                File::seek(unsigned long long)
                0x00000000c00082bc                File::truncate(unsigned long long)
                0x00000000c0008312                File::tell(unsigned long long*)
                0x00000000c0008362                File::rewind()
                0x00000000c0008376                File::unlink()
                0x00000000c00083c2                File::rename(char const*)
                0x00000000c0008410                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000846c                File::exists()
                0x00000000c00084aa                File::stat(unsigned long long*, bool*)
                0x00000000c000850b                Fs::setcwd(Process*, char*)
                0x00000000c000866a                Directory::Directory(char const*, Process*)
                0x00000000c000866a                Directory::Directory(char const*, Process*)
                0x00000000c0008732                Directory::open()
                0x00000000c000878e                Directory::close()
                0x00000000c00087ee                Directory::unlink()
                0x00000000c000883a                Directory::rename(char const*)
                0x00000000c0008888                Directory::exists()
                0x00000000c00088c6                Directory::read(dirent*)
                0x00000000c0008912                Directory::create()
                0x00000000c000895e                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0008964       0x86 hal/bus.32
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c0008964                Bus::Bus(char const*)
                0x00000000c000899c                Bus::~Bus()
                0x00000000c000899c                Bus::~Bus()
                0x00000000c00089c0                Bus::~Bus()
 .text          0x00000000c00089ea       0x9b hal/buzzer.32
                0x00000000c00089ea                KeBeepThread(void*)
                0x00000000c0008a2b                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a85        0x1 
 .text          0x00000000c0008a86      0xeac hal/clock.32
                0x00000000c0008a86                KeLoadTimezoneStrings()
                0x00000000c0008e15                KeGetTimezoneStringFromID(int)
                0x00000000c0008eb2                KeUpdateTimezone(char const*)
                0x00000000c0008fac                KeSetTimezone(char const*)
                0x00000000c0009009                KeSetTimezone(int)
                0x00000000c000903c                KeLoadTimezone()
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090b6                Clock::Clock(char const*)
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c00090ec                Clock::~Clock()
                0x00000000c0009110                Clock::~Clock()
                0x00000000c000913a                Clock::timeInSecondsLocal()
                0x00000000c00091b0                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000923c                KeDatetimeToSeconds(datetime_t)
                0x00000000c000957c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000964a                KeSecondsToDatetime(unsigned long long)
                0x00000000c0009906                Clock::timeInDatetimeLocal()
 .text          0x00000000c0009932      0x47a hal/device.32
                0x00000000c0009932                Device::hibernate()
                0x00000000c0009934                Device::wake()
                0x00000000c0009936                Device::detect()
                0x00000000c0009938                Device::disableLegacy()
                0x00000000c000993a                Device::powerSaving(PowerSavingLevel)
                0x00000000c000993c                DriverlessDevice::close(int, int, void*)
                0x00000000c0009940                DriverlessDevice::detect()
                0x00000000c0009942                DriverlessDevice::open(int, int, void*)
                0x00000000c0009956                Device::~Device()
                0x00000000c0009956                Device::~Device()
                0x00000000c0009964                Device::~Device()
                0x00000000c000998c                Device::findAndLoadDriver()
                0x00000000c000999a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00099c0                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0009a00                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0009a2a                Device::getParent()
                0x00000000c0009a36                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0009a54                Device::addChild(Device*)
                0x00000000c0009a98                Device::removeAllChildren()
                0x00000000c0009ade                Device::hibernateAll()
                0x00000000c0009b0e                Device::wakeAll()
                0x00000000c0009b3e                Device::detectAll()
                0x00000000c0009b6e                Device::disableLegacyAll()
                0x00000000c0009b70                Device::loadDriversForAll()
                0x00000000c0009b72                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009ba8                Device::setName(char const*)
                0x00000000c0009bb6                Device::Device(char const*)
                0x00000000c0009bb6                Device::Device(char const*)
                0x00000000c0009cb2                Device::getName()
                0x00000000c0009cbc                Device::closeAll()
                0x00000000c0009d08                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009d08                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009d3e                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d82                getDevicesOfType(DeviceType)
 .text          0x00000000c0009dac       0x86 hal/diskctrl.32
                0x00000000c0009dac                HardDiskController::HardDiskController(char const*)
                0x00000000c0009dac                HardDiskController::HardDiskController(char const*)
                0x00000000c0009de4                HardDiskController::~HardDiskController()
                0x00000000c0009de4                HardDiskController::~HardDiskController()
                0x00000000c0009e08                HardDiskController::~HardDiskController()
 .text          0x00000000c0009e32       0xe2 hal/diskphys.32
                0x00000000c0009e32                PhysicalDisk::eject()
                0x00000000c0009e36                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e36                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e9e                PhysicalDisk::startCache()
                0x00000000c0009ec6                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009ec6                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009eea                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009f14        0x0 hal/fpu.32
 .text          0x00000000c0009f14      0x83e hal/keybrd.32
                0x00000000c0009f14                startGUI(void*)
                0x00000000c0009f5e                startGUIVESA(void*)
                0x00000000c0009fa8                sendKeyToTerminal(unsigned char)
                0x00000000c000a07e                sendKeyboardToken(KeyboardToken)
                0x00000000c000a53a                clearInternalKeybuffer(VgaText*)
                0x00000000c000a56f                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6c8                Keyboard::Keyboard(char const*)
                0x00000000c000a6c8                Keyboard::Keyboard(char const*)
                0x00000000c000a704                Keyboard::~Keyboard()
                0x00000000c000a704                Keyboard::~Keyboard()
                0x00000000c000a728                Keyboard::~Keyboard()
 .text          0x00000000c000a752      0x3f8 hal/logidisk.32
                0x00000000c000a752                LogicalDisk::close(int, int, void*)
                0x00000000c000a756                LogicalDisk::~LogicalDisk()
                0x00000000c000a756                LogicalDisk::~LogicalDisk()
                0x00000000c000a77a                LogicalDisk::~LogicalDisk()
                0x00000000c000a7a4                LogicalDisk::open(int, int, void*)
                0x00000000c000a7b8                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a7f0                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a836                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a836                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a8f6                LogicalDisk::assignDriveLetter()
                0x00000000c000a9b0                LogicalDisk::mount()
                0x00000000c000a9f8                LogicalDisk::unmount()
                0x00000000c000aa08                LogicalDisk::eject()
                0x00000000c000aa1c                LogicalDisk::unassignDriveLetter()
                0x00000000c000aa72                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aade                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000ab4a        0x2 
 .text          0x00000000c000ab4c       0x86 hal/mouse.32
                0x00000000c000ab4c                Mouse::Mouse(char const*)
                0x00000000c000ab4c                Mouse::Mouse(char const*)
                0x00000000c000ab84                Mouse::~Mouse()
                0x00000000c000ab84                Mouse::~Mouse()
                0x00000000c000aba8                Mouse::~Mouse()
 .text          0x00000000c000abd2       0x90 hal/nic.32
                0x00000000c000abd2                NIC::getMAC()
                0x00000000c000abd8                NIC::write(int, unsigned char*, int*)
                0x00000000c000abde                NIC::NIC(char const*)
                0x00000000c000abde                NIC::NIC(char const*)
                0x00000000c000ac14                NIC::~NIC()
                0x00000000c000ac14                NIC::~NIC()
                0x00000000c000ac38                NIC::~NIC()
 .text          0x00000000c000ac62      0x33b hal/partition.32
                0x00000000c000ac62                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ad0a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000af9d        0x3 
 .text          0x00000000c000afa0       0x86 hal/serial.32
                0x00000000c000afa0                Serial::Serial(char const*)
                0x00000000c000afa0                Serial::Serial(char const*)
                0x00000000c000afd8                Serial::~Serial()
                0x00000000c000afd8                Serial::~Serial()
                0x00000000c000affc                Serial::~Serial()
 *fill*         0x00000000c000b026        0x2 
 .text          0x00000000c000b028      0x248 hal/timer.32
                0x00000000c000b028                Timer::Timer(char const*)
                0x00000000c000b028                Timer::Timer(char const*)
                0x00000000c000b060                Timer::~Timer()
                0x00000000c000b060                Timer::~Timer()
                0x00000000c000b084                Timer::~Timer()
                0x00000000c000b0ae                Timer::read()
                0x00000000c000b0b9                setupTimer(int)
                0x00000000c000b0f4                timerHandler(unsigned int)
 .text          0x00000000c000b270      0x5fe hal/vcache.32
                0x00000000c000b270                VCache::VCache(PhysicalDisk*)
                0x00000000c000b270                VCache::VCache(PhysicalDisk*)
                0x00000000c000b3e0                VCache::invalidateReadBuffer()
                0x00000000c000b3f0                VCache::writeWriteBuffer()
                0x00000000c000b43c                VCache::~VCache()
                0x00000000c000b43c                VCache::~VCache()
                0x00000000c000b494                VCache::~VCache()
                0x00000000c000b4bc                VCache::write(unsigned long long, int, void*)
                0x00000000c000b68a                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b86e      0x700 hal/video.32
                0x00000000c000b86e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b8ba                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b92a                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b9a8                Video::clearScreen(unsigned int)
                0x00000000c000b9ce                Video::putpixel(int, int, unsigned int)
                0x00000000c000b9dc                Video::readPixelApprox(int, int)
                0x00000000c000b9f0                Video::Video(char const*)
                0x00000000c000b9f0                Video::Video(char const*)
                0x00000000c000ba26                Video::~Video()
                0x00000000c000ba26                Video::~Video()
                0x00000000c000ba4a                Video::~Video()
                0x00000000c000ba74                Video::isMonochrome()
                0x00000000c000ba80                Video::getWidth()
                0x00000000c000ba8c                Video::getHeight()
                0x00000000c000ba98                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb54                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000befe                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000bf6e        0x2 
 .text          0x00000000c000bf70     0x117f hw/acpi.32
                0x00000000c000bf70                ACPI::close(int, int, void*)
                0x00000000c000bf78                loadACPITables(unsigned char*)
                0x00000000c000c1d8                findRSDT(unsigned char*)
                0x00000000c000c324                findDataTable(unsigned char*, char*)
                0x00000000c000c398                scanMADT()
                0x00000000c000c848                ACPI::ACPI()
                0x00000000c000c848                ACPI::ACPI()
                0x00000000c000c898                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c994                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca60                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca68                ACPI::detectPCI()
                0x00000000c000cc74                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cc8c                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d0ef        0x1 
 .text          0x00000000c000d0f0       0xea krnl/assert.32
                0x00000000c000d0f0                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d1da       0x91 krnl/atexit.32
                0x00000000c000d1da                KeInitialiseAtexit()
                0x00000000c000d1fc                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d230                KeExecuteAtexit()
 *fill*         0x00000000c000d26b        0x1 
 .text          0x00000000c000d26c       0x1e krnl/bootflags.32
                0x00000000c000d26c                KeGetBootConfigurationFlag(BootConfigurationFlag)
                0x00000000c000d27c                KeInitialiseBootConfigurationFlags()
 .text          0x00000000c000d28a       0x8a krnl/bootmsg.32
                0x00000000c000d28a                KeDisplaySplashScreen()
                0x00000000c000d2b9                KeSetBootMessage(char const*)
 .text          0x00000000c000d314       0x5f krnl/c++.32
                0x00000000c000d314                __cxa_atexit
                0x00000000c000d317                __cxa_finalize
                0x00000000c000d318                __stack_chk_fail
                0x00000000c000d34e                __cxa_pure_virtual
                0x00000000c000d35f                operator new[](unsigned long)
                0x00000000c000d364                operator delete(void*, unsigned long)
                0x00000000c000d369                operator delete[](void*)
                0x00000000c000d36e                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000d373        0x1 
 .text          0x00000000c000d374       0x44 krnl/cdefs.32
                0x00000000c000d374                CUnlockScheduler
                0x00000000c000d38c                CLockScheduler
                0x00000000c000d39c                CPrintf
 .text          0x00000000c000d3b8      0xc81 krnl/cm.32
                0x00000000c000d3b8                CmOpen(char const*)
                0x00000000c000d4d6                CmClose(Reghive_Tag*)
                0x00000000c000d4ec                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d528                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d59f                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d5de                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d610                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d64c                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d674                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d695                CmExpand(Reghive_Tag*, int)
                0x00000000c000d710                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d796                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d88a                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d9c6                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000da27                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000da57                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000da8e                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000dab8                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000daf8                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000db9c                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000dbca                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dd68                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000ddb5                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000de2f                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000de82                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000df46                zStrtok(char*, char const*)
                0x00000000c000dfb8                CmFindObjectFromPath(Reghive_Tag*, char const*)
 *fill*         0x00000000c000e039        0x1 
 .text          0x00000000c000e03a       0xe3 krnl/computer.32
                0x00000000c000e03a                Computer::close(int, int, void*)
                0x00000000c000e040                Computer::Computer()
                0x00000000c000e040                Computer::Computer()
                0x00000000c000e084                Computer::open(int, int, void*)
 .text          0x00000000c000e11d       0x2b krnl/crc32.32
                0x00000000c000e11d                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e148      0x5bf krnl/env.32
                0x00000000c000e148                EnvVarContainer::getEnv(char const*)
                0x00000000c000e186                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e248                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e24a                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e46e                EnvVarContainer::__loadSystem()
                0x00000000c000e488                EnvVarContainer::__loadUser()
                0x00000000c000e48a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e48a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e4ac                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e4ac                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e4dc                KeGetEnv(Process*, char const*)
                0x00000000c000e541                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e55b                KeSetEnvUser(char const*, char const*)
                0x00000000c000e57a                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e58d                KeDeleteEnvSystem(char const*)
                0x00000000c000e58e                KeDeleteEnvUser(char const*)
                0x00000000c000e58f                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e590                KeNewProcessEnv(Process*)
                0x00000000c000e5b2                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e5fe                KeLoadSystemEnv()
                0x00000000c000e62c                KeLoadUserEnv()
                0x00000000c000e652                KeFlushEnv()
                0x00000000c000e653                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e673                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e707        0x1 
 .text          0x00000000c000e708      0x1a8 krnl/fault.32
                0x00000000c000e708                KeDisplayProgramFault(char const*)
                0x00000000c000e758                KeGeneralProtectionFault(void*, void*)
                0x00000000c000e7ac                KePageFault(void*, void*)
                0x00000000c000e800                KeOpcodeFault(void*, void*)
                0x00000000c000e854                KeOtherFault(void*, void*)
                0x00000000c000e888                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000e898                KeDoubleFault(void*, void*)
 .text          0x00000000c000e8b0      0x1db krnl/gdt.32
                0x00000000c000e8b0                GDTEntry::setBase(unsigned int)
                0x00000000c000e8cc                GDTEntry::setLimit(unsigned int)
                0x00000000c000e8ea                GDT::GDT()
                0x00000000c000e8ea                GDT::GDT()
                0x00000000c000e900                GDT::addEntry(GDTEntry)
                0x00000000c000e922                GDT::getNumberOfEntries()
                0x00000000c000e92a                GDT::flush()
                0x00000000c000e94c                GDT::setup()
 .text          0x00000000c000ea8b       0x20 krnl/idle.32
                0x00000000c000ea8b                idleFunction(void*)
 *fill*         0x00000000c000eaab        0x1 
 .text          0x00000000c000eaac      0x46c krnl/idt.32
                0x00000000c000eaac                IDTEntry::IDTEntry(bool)
                0x00000000c000eaac                IDTEntry::IDTEntry(bool)
                0x00000000c000eb26                IDTEntry::setOffset(unsigned int)
                0x00000000c000eb3c                IDT::IDT()
                0x00000000c000eb3c                IDT::IDT()
                0x00000000c000eb3e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000eb46                IDT::addEntry(IDTEntry, int)
                0x00000000c000eb60                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000eb98                IDT::flush()
                0x00000000c000ebb2                IDT::setup()
 .text          0x00000000c000ef18       0x9a krnl/inlines.32
                0x00000000c000ef18                CPU::current()
                0x00000000c000ef24                operator new(unsigned long)
                0x00000000c000ef29                operator delete(void*)
                0x00000000c000ef2e                disableIRQs()
                0x00000000c000ef30                enableIRQs()
                0x00000000c000ef32                lockScheduler()
                0x00000000c000ef3a                unlockScheduler()
                0x00000000c000ef4c                lockStuff()
                0x00000000c000ef5a                unlockStuff()
                0x00000000c000ef97                Virt::getAKernelVAS()
                0x00000000c000ef9d                __not_memcpy
 .text          0x00000000c000efb2      0x2bc krnl/intlformat.32
                0x00000000c000efb2                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f1a2                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f1c4                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f1e6                KeSetLocale(klocale_t)
                0x00000000c000f1fc                KeInitialiseLocale()
                0x00000000c000f26a                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f26b                KeFormatCurrency(char*, int, double)
                0x00000000c000f26c                KeFormatNumber(char*, long long, long long)
                0x00000000c000f26d                KeFormatNumber(char*, double)
 *fill*         0x00000000c000f26e        0x2 
 .text          0x00000000c000f270      0x42e krnl/intops.32
                0x00000000c000f270                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f3f8                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f5a4                KeGetDigitsInNumber(long long)
                0x00000000c000f610                KeItoa(unsigned long long, char*)
                0x00000000c000f640                KeItoa(long long, char*)
                0x00000000c000f670                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000f69e      0x207 krnl/kheap.32
                0x00000000c000f69e                sbrk
                0x00000000c000f735                sbrk_thunk
                0x00000000c000f76b                mmap
                0x00000000c000f7c9                munmap
                0x00000000c000f7de                liballoc_lock()
                0x00000000c000f7ec                liballoc_unlock()
                0x00000000c000f804                liballoc_alloc(int)
                0x00000000c000f81c                liballoc_free(void*, int)
                0x00000000c000f837                realloc
                0x00000000c000f84b                malloc
                0x00000000c000f85b                free
                0x00000000c000f86b                rfree
                0x00000000c000f87b                calloc
 *fill*         0x00000000c000f8a5        0x3 
 .text          0x00000000c000f8a8      0x1d3 krnl/mailbox.32
                0x00000000c000f8a8                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000f908                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000f968                KeMailboxCreate()
                0x00000000c000f99c                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fa00                KeMailboxGet(Mailbox*, void**)
                0x00000000c000fa64                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000fa7b      0x204 krnl/main.32
                0x00000000c000fa7b                KeFirstTask()
                0x00000000c000fb7f                KeEntryPoint
 *fill*         0x00000000c000fc7f        0x1 
 .text          0x00000000c000fc80       0x1a krnl/mutex.32
                0x00000000c000fc80                Mutex::Mutex()
                0x00000000c000fc80                Mutex::Mutex()
 .text          0x00000000c000fc9a       0x12 krnl/panic.32
                0x00000000c000fc9a                KeIsKernelInPanic()
                0x00000000c000fca0                KePanic(char const*)
 .text          0x00000000c000fcac      0x5bc krnl/physmgr.32
                0x00000000c000fcac                Phys::allocateDMA(unsigned long)
                0x00000000c000fd94                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000fdcf                Phys::setPageState(unsigned long, bool)
                0x00000000c000fe0f                Phys::getPageState(unsigned long)
                0x00000000c000fe2b                Phys::freePage(unsigned long)
                0x00000000c000fe94                Phys::allocatePage()
                0x00000000c000ff7b                Phys::allocateContiguousPages(int)
                0x00000000c000fff6                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c001002e                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0010268      0x275 krnl/pipe.32
                0x00000000c0010268                Pipe::isAtty()
                0x00000000c001026c                Pipe::~Pipe()
                0x00000000c001026c                Pipe::~Pipe()
                0x00000000c0010290                Pipe::~Pipe()
                0x00000000c00102b8                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0010378                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0010476                Pipe::Pipe(int)
                0x00000000c0010476                Pipe::Pipe(int)
 .text          0x00000000c00104dd      0x1a3 krnl/powctrl.32
                0x00000000c00104dd                KePowerThread(void*)
                0x00000000c001050f                KeChangePowerSettings(PowerSettings)
                0x00000000c0010525                KeUserIOReceived()
                0x00000000c0010530                KeSetupPowerManager()
                0x00000000c00105b9                KePrepareShutdown()
                0x00000000c00105d8                KeRegisterShutdownHandler(void (*)())
                0x00000000c00105e2                KeRegisterRestartHandler(void (*)())
                0x00000000c00105ec                KeRegisterSleepHandler(void (*)())
                0x00000000c00105f6                KeShutdown()
                0x00000000c001062c                KeSleep()
                0x00000000c0010638                KeHandlePowerButton()
                0x00000000c001064a                KeHandleSleepButton()
                0x00000000c001065c                KeRestart()
 .text          0x00000000c0010680       0x9d krnl/random.32
                0x00000000c0010680                KeRand()
                0x00000000c00106c2                KeSeedRand(unsigned int)
                0x00000000c00106eb                KeInitRand()
 *fill*         0x00000000c001071d        0x3 
 .text          0x00000000c0010720      0x26c krnl/resolve.32
                0x00000000c0010720                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c001098c      0x415 krnl/semaphore.32
                0x00000000c001098c                Semaphore::Semaphore(int)
                0x00000000c001098c                Semaphore::Semaphore(int)
                0x00000000c00109bc                Semaphore::tryAcquire()
                0x00000000c0010a90                Semaphore::assertLocked(char const*)
                0x00000000c0010b1c                Semaphore::acquire(int)
                0x00000000c0010cd4                Semaphore::acquire()
                0x00000000c0010cf0                Semaphore::release()
 .text          0x00000000c0010da1      0x3a8 krnl/signal.32
                0x00000000c0010da1                KiSigKill(int)
                0x00000000c0010db5                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010db6                KiDefaultSignalHandlerPause(int)
                0x00000000c0010de2                KiDefaultSignalHandlerResume(int)
                0x00000000c0010e0e                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010e13                KeInitSignals()
                0x00000000c0010e85                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010ebb                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010f3c                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c001106b                KiCheckSignalZ
                0x00000000c00110bc                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00110f7                KiFinishSignalZ
 .text          0x00000000c0011149      0xe91 krnl/syscalls.32
                0x00000000c0011149                SysSeekDir(regs*)
                0x00000000c001114e                SysTellDir(regs*)
                0x00000000c0011153                SysVerify(regs*)
                0x00000000c001115d                SysGetArgc(regs*)
                0x00000000c0011171                SysTTYName(regs*)
                0x00000000c0011179                SysFormatDisk(regs*)
                0x00000000c00111f0                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011244                SysGetDiskVolumeLabel(regs*)
                0x00000000c001129d                SysRealpath(regs*)
                0x00000000c00112e1                SysReadDir(regs*)
                0x00000000c0011361                SysIsATTY(regs*)
                0x00000000c00113bb                SysSeek(regs*)
                0x00000000c0011419                SysTell(regs*)
                0x00000000c001148e                SysSize(regs*)
                0x00000000c0011508                SysSizeFromFilename(regs*)
                0x00000000c0011632                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c001175c                SysClose(regs*)
                0x00000000c00117bc                SysOpenDir(regs*)
                0x00000000c0011839                SysMakeDir(regs*)
                0x00000000c00118a7                SysCloseDir(regs*)
                0x00000000c00118fb                SysWait(regs*)
                0x00000000c001191c                SysNotImpl(regs*)
                0x00000000c0011937                SysPanic(regs*)
                0x00000000c0011952                SysRmdir(regs*)
                0x00000000c00119b7                SysUnlink(regs*)
                0x00000000c0011a1c                SysGetArgv(regs*)
                0x00000000c0011a69                SysUSleep(regs*)
                0x00000000c0011a93                SysSpawn(regs*)
                0x00000000c0011b06                SysGetEnv(regs*)
                0x00000000c0011bb7                SysSetFatAttrib(regs*)
                0x00000000c0011c2a                SysShutdown(regs*)
                0x00000000c0011c87                SysPipe(regs*)
                0x00000000c0011ccc                SysGetUnixTime(regs*)
                0x00000000c0011d59                string_ends_with(char const*, char const*)
                0x00000000c0011da1                SysOpen(regs*)
                0x00000000c0011f98                KeSystemCall(regs*, void*)
 .text          0x00000000c0011fda      0xb0b krnl/terminal.32
                0x00000000c0011fda                VgaText::isAtty()
                0x00000000c0011fde                VgaText::~VgaText()
                0x00000000c0011fde                VgaText::~VgaText()
                0x00000000c0012002                VgaText::~VgaText()
                0x00000000c001202c                VgaText::read(unsigned long long, void*, int*)
                0x00000000c001204c                setTerminalScrollLock(bool)
                0x00000000c001204d                doTerminalCycle()
                0x00000000c001204e                addToTerminalCycle(VgaText*)
                0x00000000c001204f                scrollTerminalScrollLock(int)
                0x00000000c0012050                VgaText::updateTitle()
                0x00000000c0012052                VgaText::load()
                0x00000000c0012054                VgaText::updateCursor()
                0x00000000c001206a                VgaText::doANSI_SGR(int)
                0x00000000c00120de                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00120ee                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00120fe                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c001211e                VgaText::setTitleTextColour(VgaColour)
                0x00000000c001212a                VgaText::setTitleColour(VgaColour)
                0x00000000c0012136                VgaText::setTitle(char*)
                0x00000000c0012138                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c001214a                VgaText::scrollScreen()
                0x00000000c00121dc                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00121ec                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0012298                VgaText::getCursorX()
                0x00000000c00122a0                VgaText::getCursorY()
                0x00000000c00122a8                VgaText::setCursor(int, int)
                0x00000000c00122bf                setActiveTerminal(VgaText*)
                0x00000000c001230a                VgaText::clearScreen()
                0x00000000c0012358                VgaText::setCursorX(int)
                0x00000000c0012370                VgaText::setCursorY(int)
                0x00000000c0012388                VgaText::incrementCursor(bool)
                0x00000000c00123dc                VgaText::decrementCursor(bool)
                0x00000000c00123fe                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00124ce                VgaText::putchar(char)
                0x00000000c00125c6                VgaText::putx(unsigned int)
                0x00000000c001260c                VgaText::puts(char const*)
                0x00000000c0012632                VgaText::write(unsigned long long, void*, int*)
                0x00000000c001267e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00127f8                VgaText::VgaText(char const*)
                0x00000000c00127f8                VgaText::VgaText(char const*)
                0x00000000c0012958                VgaText::receiveKey(unsigned char)
                0x00000000c0012ae4                VgaText::doUpdate()
 *fill*         0x00000000c0012ae5        0x3 
 .text          0x00000000c0012ae8      0x224 krnl/tss.32
                0x00000000c0012ae8                TSS::TSS()
                0x00000000c0012ae8                TSS::TSS()
                0x00000000c0012af8                TSS::setESP(unsigned long)
                0x00000000c0012b0c                TSS::flush()
                0x00000000c0012b2c                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012d0c      0x4ce krnl/unixfile.32
                0x00000000c0012d0c                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012d62                ReservedFilename::isAtty()
                0x00000000c0012d7e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0012ddc                UnixFile::getFileDescriptor()
                0x00000000c0012de4                UnixFile::UnixFile(int)
                0x00000000c0012de4                UnixFile::UnixFile(int)
                0x00000000c0012f98                ReservedFilename::ReservedFilename(int)
                0x00000000c0012f98                ReservedFilename::ReservedFilename(int)
                0x00000000c0012fca                UnixFile::~UnixFile()
                0x00000000c0012fca                UnixFile::~UnixFile()
                0x00000000c0013066                UnixFile::~UnixFile()
                0x00000000c001308e                ReservedFilename::~ReservedFilename()
                0x00000000c001308e                ReservedFilename::~ReservedFilename()
                0x00000000c00130b2                ReservedFilename::~ReservedFilename()
                0x00000000c00130d9                KeGetFileFromDescriptor(int)
 .text          0x00000000c00131da     0x132b krnl/virtmgr.32
                0x00000000c00131da                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0013214                Virt::getPageState(unsigned long)
                0x00000000c0013237                Virt::allocateKernelVirtualPages(int)
                0x00000000c001335c                Virt::freeSwapfilePage(unsigned long)
                0x00000000c001337f                Virt::swapIDToSector(unsigned long)
                0x00000000c0013395                Virt::allocateSwapfilePage()
                0x00000000c0013415                Virt::virtualMemorySetup()
                0x00000000c0013466                Virt::setupPageSwapping(int)
                0x00000000c00134d8                VAS::setCPUSpecific(unsigned long)
                0x00000000c00134da                VAS::VAS(VAS*)
                0x00000000c00134da                VAS::VAS(VAS*)
                0x00000000c00134f2                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0013520                VAS::getPageTableEntry(unsigned long)
                0x00000000c001353f                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c001367c                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00136a0                VAS::virtualToPhysical(unsigned long)
                0x00000000c00136ba                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c00136fc                VAS::VAS()
                0x00000000c00136fc                VAS::VAS()
                0x00000000c0013766                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0013786                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00137b2                VAS::~VAS()
                0x00000000c00137b2                VAS::~VAS()
                0x00000000c001391a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013a1e                VAS::allocatePages(int, int)
                0x00000000c0013b04                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013b5c                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013c52                VAS::VAS(bool)
                0x00000000c0013c52                VAS::VAS(bool)
                0x00000000c0013e3a                VAS::evict(unsigned long)
                0x00000000c0013f3e                VAS::canLockPage(unsigned long)
                0x00000000c0013f58                VAS::unlockPage(unsigned long)
                0x00000000c0013f8c                VAS::canLockPages(unsigned long, int)
                0x00000000c0013fc8                VAS::unlockPages(unsigned long, int)
                0x00000000c0014004                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c001417e                VAS::lockPage(unsigned long)
                0x00000000c00141f0                VAS::lockPages(unsigned long, int)
                0x00000000c001422c                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c00142a0                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c00142cc                VAS::scanForEviction()
                0x00000000c001440a                mapVASFirstTime
 .text          0x00000000c0014505       0x2f sys/alarm.32
                0x00000000c0014505                SysAlarm(regs*)
 .text          0x00000000c0014534       0x36 sys/eject.32
                0x00000000c0014534                SysEject(regs*)
 .text          0x00000000c001456a       0x18 sys/exit.32
                0x00000000c001456a                SysExit(regs*)
 .text          0x00000000c0014582       0x1f sys/getcwd.32
                0x00000000c0014582                SysGetCwd(regs*)
 .text          0x00000000c00145a1       0x26 sys/getpid.32
                0x00000000c00145a1                SysGetPID(regs*)
 .text          0x00000000c00145c7       0x21 sys/getramdata.32
                0x00000000c00145c7                SysGetRAMData(regs*)
 .text          0x00000000c00145e8       0xbe sys/getvgaptr.32
                0x00000000c00145e8                SysGetVGAPtr(regs*)
 *fill*         0x00000000c00146a6        0x2 
 .text          0x00000000c00146a8       0xb9 sys/kill.32
                0x00000000c00146a8                SysKill(regs*)
 .text          0x00000000c0014761       0x9e sys/loaddll.32
                0x00000000c0014761                SysLoadDLL(regs*)
 .text          0x00000000c00147ff       0x12 sys/pause.32
                0x00000000c00147ff                SysPause(regs*)
 .text          0x00000000c0014811       0x49 sys/pthread.32
                0x00000000c0014811                SysPthreadCreate(regs*)
                0x00000000c0014829                SysPthreadGetTID(regs*)
                0x00000000c0014833                SysInternalPthreadGetContext(regs*)
                0x00000000c0014838                SysInternalPthreadGetStartLocation(regs*)
                0x00000000c001483d                SysPthreadJoin(regs*)
                0x00000000c0014842                SysPthreadExit(regs*)
 .text          0x00000000c001485a       0x68 sys/read.32
                0x00000000c001485a                SysRead(regs*)
 .text          0x00000000c00148c2       0x29 sys/registersignal.32
                0x00000000c00148c2                SysRegisterSignal(regs*)
 .text          0x00000000c00148eb      0x1cc sys/registry.32
                0x00000000c00148eb                SysRegistryGetTypeFromPath(regs*)
                0x00000000c001492f                SysRegistryReadExtent(regs*)
                0x00000000c0014977                SysRegistryPathToExtentLookup(regs*)
                0x00000000c001498e                SysRegistryEnterDirectory(regs*)
                0x00000000c00149a5                SysRegistryGetNext(regs*)
                0x00000000c00149bc                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c00149f6                SysRegistryOpen(regs*)
                0x00000000c0014a0a                SysRegistryClose(regs*)
                0x00000000c0014a21                SysRegistryEasyReadString(regs*)
                0x00000000c0014a6d                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014ab7       0x55 sys/sbrk.32
                0x00000000c0014ab7                SysSbrk(regs*)
 .text          0x00000000c0014b0c       0x1c sys/setcwd.32
                0x00000000c0014b0c                SysSetCwd(regs*)
 .text          0x00000000c0014b28       0xd7 sys/settime.32
                0x00000000c0014b28                SysSetTime(regs*)
 .text          0x00000000c0014bff       0x73 sys/symlink.32
                0x00000000c0014bff                SysSymlink(regs*)
 .text          0x00000000c0014c72       0x3e sys/timezone.32
                0x00000000c0014c72                SysTimezone(regs*)
 .text          0x00000000c0014cb0       0xfc sys/truncate.32
                0x00000000c0014cb0                SysTruncate(regs*)
 .text          0x00000000c0014dac       0x68 sys/write.32
                0x00000000c0014dac                SysWrite(regs*)
 .text          0x00000000c0014e14       0x9d sys/wsbe.32
                0x00000000c0014e14                SysWsbe(regs*)
 .text          0x00000000c0014eb1       0x28 sys/yield.32
                0x00000000c0014eb1                SysYield(regs*)
 *fill*         0x00000000c0014ed9        0x3 
 .text          0x00000000c0014edc      0x281 thr/alarm.32
                0x00000000c0014edc                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c001506c                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c001515d      0x84a thr/elf.32
                0x00000000c001515d                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00153ef                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0015687                Thr::runtimeReferenceHelper()
                0x00000000c001569a                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00156e9                Thr::loadKernelSymbolTable(char const*)
 .text          0x00000000c00159a7      0x558 thr/elf2.32
                0x00000000c00159a7                KeIsELFValid(Elf32_Ehdr*)
                0x00000000c00159c6                KeGetELFSectionHeader(unsigned char*, int)
                0x00000000c00159d5                KeGetELFProgramHeader(unsigned char*, int)
                0x00000000c00159e6                KeLookupELFString(unsigned char*, int)
                0x00000000c0015a09                KeLoadELFProgramHeaders(unsigned char*, bool, unsigned long)
                0x00000000c0015ac3                KeGetELFSymbolValue(unsigned char*, int, int, bool*, unsigned long, unsigned long)
                0x00000000c0015b5f                KePerformRelocation(unsigned char*, unsigned long, Elf32_Shdr*, Elf32_Rel*)
                0x00000000c0015bdf                KePerformRelocations(unsigned char*, unsigned long)
                0x00000000c0015c94                KeLoadELF(unsigned char*, bool, unsigned long)
                0x00000000c0015d09                KeLoadDriver(char const*)
                0x00000000c0015e62                KeExecuteDriver(unsigned long, void*)
                0x00000000c0015e8c                KeLoadAndExecuteDriver(char const*, void*, bool)
 .text          0x00000000c0015eff       0x5a thr/exec.32
                0x00000000c0015eff                KeProcessExec(Process*, char const*)
 *fill*         0x00000000c0015f59        0x3 
 .text          0x00000000c0015f5c     0x1299 thr/prcssthr.32
                0x00000000c0015f5c                userModeEntryPoint(void*)
                0x00000000c0015f88                changeTSS
                0x00000000c0015fb8                switchToThread(ThreadControlBlock*)
                0x00000000c0016078                Process::addArgs(char**)
                0x00000000c00160e4                Process::Process(char const*, Process*, char**)
                0x00000000c00160e4                Process::Process(char const*, Process*, char**)
                0x00000000c001631c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001631c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016508                taskStartupFunction
                0x00000000c0016514                KeDisablePreemption()
                0x00000000c001653c                KeRestorePreemption()
                0x00000000c001655c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00166c0                Process::createUserThread()
                0x00000000c00166e0                setupMultitasking(void (*)())
                0x00000000c0016828                schedule()
                0x00000000c00168bc                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00168e8                blockTask(TaskState)
                0x00000000c0016924                waitTask(int, int*, int)
                0x00000000c0016968                milliTenthSleepUntil(unsigned long long)
                0x00000000c0016a1c                milliTenthSleep(unsigned long long)
                0x00000000c0016a34                sleep(unsigned long long)
                0x00000000c0016a54                sleep(unsigned int)
                0x00000000c0016a6c                milliTenthSleep(unsigned int)
                0x00000000c0016a8c                taskReturned
                0x00000000c0016ad4                KeProcessFromPID(int)
                0x00000000c0016b84                unblockTask(ThreadControlBlock*)
                0x00000000c0016c38                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016f10                cleanerTaskFunction(void*)
                0x00000000c0017028                KeTerminateCurrentThread(int)
 .text          0x00000000c00171f5     0x1a2a vm86/vm8086.32
                0x00000000c00171f5                Vm::inbv(unsigned short)
                0x00000000c001722c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0017293                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00172b8                Vm::getSegment(unsigned int)
                0x00000000c00172c3                Vm::getOffset(unsigned int)
                0x00000000c00172cb                Vm::mainloop2()
                0x00000000c001733e                Vm::mainVm8086Loop(void*)
                0x00000000c001735e                Vm::mainloop3(unsigned long)
                0x00000000c0017396                Vm::initialise8086()
                0x00000000c00173e0                Vm::resetConventionalMemory8086()
                0x00000000c00173e8                Vm::finish8086()
                0x00000000c0017459                Vm::getOutput8086(unsigned char*)
                0x00000000c00174ba                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017695                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001796a                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017b6e                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017bc1                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017c15                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017c68                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017cc7                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017d26                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017d7d                Vm::faultHandler(regs*)
 *fill*         0x00000000c0018c1f        0x1 
 .text          0x00000000c0018c20      0x45f arch/i386/apic.32
                0x00000000c0018c20                IOAPIC::close(int, int, void*)
                0x00000000c0018c26                apicGetBase()
                0x00000000c0018c60                IOAPIC::IOAPIC()
                0x00000000c0018c60                IOAPIC::IOAPIC()
                0x00000000c0018c88                apicOpen()
                0x00000000c0018e14                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0018e46                IOAPIC::read(int)
                0x00000000c0018e6e                IOAPIC::open(int, int, void*)
                0x00000000c0018f54                IOAPIC::write(int, int)
                0x00000000c0018f80                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001907f        0x1 
 .text          0x00000000c0019080     0x1f53 arch/i386/hal.32
                0x00000000c0019080                noCopro(unsigned long)
                0x00000000c0019081                HalRestart()
                0x00000000c001908c                HalShutdown()
                0x00000000c001908d                HalSleep()
                0x00000000c001908e                CPU::close(int, int, void*)
                0x00000000c0019091                x86ReadCMOS(unsigned char)
                0x00000000c00190e5                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0019145                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0019164                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0019181                AMD_K6_writeback(int, int, int)
                0x00000000c0019241                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00192df                cpuidCheckEDX(unsigned int)
                0x00000000c001930c                cpuidCheckECX(unsigned int)
                0x00000000c001933a                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0019368                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0019396                HalDetectFeatures()
                0x00000000c001a181                HalEnableNMI()
                0x00000000c001a194                HalDisableNMI()
                0x00000000c001a1a7                HalGetNMIState()
                0x00000000c001a1ad                x86rdmsr(unsigned int)
                0x00000000c001a1eb                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c001a230                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c001a25b                HalFindRSDP()
                0x00000000c001a338                HalHandlePageFault(void*, void*)
                0x00000000c001a367                HalHandleOpcodeFault(void*, void*)
                0x00000000c001a3a9                HalDisplayDebugInfo(void*)
                0x00000000c001a737                HalReceivedNMI()
                0x00000000c001a7d2                HalSystemIdle()
                0x00000000c001a831                i386SaveCoprocessor(void*)
                0x00000000c001a845                i386LoadCoprocessor(void*)
                0x00000000c001a859                x87EmulHandler(regs*, void*)
                0x00000000c001a8f6                HalInitialiseCoprocessor()
                0x00000000c001a97a                HalPanic(char const*)
                0x00000000c001aa8e                HalQueryPerformanceCounter()
                0x00000000c001aa9e                HalInitialise()
                0x00000000c001ac86                HalMakeBeep(int)
                0x00000000c001acc0                HalGetRand()
                0x00000000c001acc3                HalEndOfInterrupt(int)
                0x00000000c001acee                CPU::CPU()
                0x00000000c001acee                CPU::CPU()
                0x00000000c001ad72                CPU::setupSMEP()
                0x00000000c001ad7e                CPU::setupUMIP()
                0x00000000c001ad88                CPU::setupTSC()
                0x00000000c001ad92                CPU::setupLargePages()
                0x00000000c001ad9c                CPU::setupPAT()
                0x00000000c001adce                CPU::setupMTRR()
                0x00000000c001add0                CPU::setupGlobalPages()
                0x00000000c001adda                CPU::allowUsermodeDataAccess()
                0x00000000c001ade8                CPU::prohibitUsermodeDataAccess()
                0x00000000c001adf6                CPU::setupSMAP()
                0x00000000c001ae04                CPU::setupFeatures()
                0x00000000c001aed0                CPU::open(int, int, void*)
 .text          0x00000000c001afd3      0x341 arch/i386/intctrl.32
                0x00000000c001afd3                convertLegacyIRQNumber(int)
                0x00000000c001b00f                KeSetupInterrupts()
                0x00000000c001b06c                int_handler
                0x00000000c001b0ef                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001b139                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001b267                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001b29b                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 .text          0x00000000c001b314      0x2dc arch/i386/pic.32
                0x00000000c001b314                picIoWait()
                0x00000000c001b31c                picDisable()
                0x00000000c001b350                picGetIRQReg(int)
                0x00000000c001b3cc                picOpen()
                0x00000000c001b550                picEOI(int)
 .text          0x00000000c001b5f0      0x5f3 arch/i386/rtc.32
                0x00000000c001b5f0                RTC::open(int, int, void*)
                0x00000000c001b5f4                RTC::close(int, int, void*)
                0x00000000c001b5f8                RTC::timeInSecondsUTC()
                0x00000000c001b60a                RTC::timeInDatetimeUTC()
                0x00000000c001b630                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001b66e                RTC::~RTC()
                0x00000000c001b66e                RTC::~RTC()
                0x00000000c001b692                RTC::~RTC()
                0x00000000c001b6bc                RTC::get_update_in_progress_flag()
                0x00000000c001b6d0                RTC::completeRTCRefresh()
                0x00000000c001b984                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001bafa                rtcIRQHandler(regs*, void*)
                0x00000000c001bb3a                RTC::RTC()
                0x00000000c001bb3a                RTC::RTC()
 *fill*         0x00000000c001bbe3        0x1 
 .text          0x00000000c001bbe4      0x1f4 arch/i386/vga.32
                0x00000000c001bbe4                HalConsoleScroll(int, int)
                0x00000000c001bcec                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001bd50                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001bdd8     0x14cf fs/fat/vfslink.32
                0x00000000c001bdd8                FAT::getName()
                0x00000000c001bde0                FAT::tell(void*, unsigned long long*)
                0x00000000c001be1c                FAT::stat(void*, unsigned long long*)
                0x00000000c001be58                FAT::~FAT()
                0x00000000c001be58                FAT::~FAT()
                0x00000000c001be7c                FAT::~FAT()
                0x00000000c001bea4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001bf48                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001c00c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001c1f0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001c40c                FAT::allocateSwapfile(char const*, int)
                0x00000000c001c5cc                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001c73c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001c79c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001c7fc                FAT::close(void*)
                0x00000000c001c850                FAT::closeDir(void*)
                0x00000000c001c8a4                FAT::truncate(void*, unsigned long long)
                0x00000000c001c910                FAT::seek(void*, unsigned long long)
                0x00000000c001c968                fatWrapperReadDisk
                0x00000000c001c9a8                fatWrapperWriteDisk
                0x00000000c001c9e8                fatWrapperIoctl
                0x00000000c001cb04                FAT::FAT()
                0x00000000c001cb04                FAT::FAT()
                0x00000000c001cb5c                FAT::fixFilepath(char*)
                0x00000000c001cb9c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001cd10                FAT::openDir(char const*, void**)
                0x00000000c001cdc0                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001ceb8                FAT::unlink(char const*)
                0x00000000c001cf38                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001d0ec                FAT::rename(char const*, char const*)
                0x00000000c001d1b8                FAT::mkdir(char const*)
                0x00000000c001d238                FAT::exists(char const*)
 *fill*         0x00000000c001d2a7        0x1 
 .text          0x00000000c001d2a8       0x94 fs/iso9660/helper.32
                0x00000000c001d2a8                isoReadDiscSectorHelper
                0x00000000c001d304                iso_kprintf
                0x00000000c001d320                iso_kprintfd
 .text          0x00000000c001d33c      0x71c fs/iso9660/vfslink.32
                0x00000000c001d33c                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001d342                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001d348                ISO9660::getName()
                0x00000000c001d34e                ISO9660::closeDir(void*)
                0x00000000c001d358                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001d35e                ISO9660::unlink(char const*)
                0x00000000c001d364                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001d36a                ISO9660::rename(char const*, char const*)
                0x00000000c001d370                ISO9660::mkdir(char const*)
                0x00000000c001d376                ISO9660::~ISO9660()
                0x00000000c001d376                ISO9660::~ISO9660()
                0x00000000c001d39a                ISO9660::~ISO9660()
                0x00000000c001d3c2                ISO9660::exists(char const*)
                0x00000000c001d3d6                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001d4bc                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001d504                ISO9660::seek(void*, unsigned long long)
                0x00000000c001d546                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001d584                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001d5d6                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001d718                ISO9660::close(void*)
                0x00000000c001d748                ISO9660::openDir(char const*, void**)
                0x00000000c001d822                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001d93f                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001d9be                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001da30                ISO9660::ISO9660()
                0x00000000c001da30                ISO9660::ISO9660()
 .text          0x00000000c001da58      0x26c hal/sound/sndcard.32
                0x00000000c001da58                SoundCard::beginPlayback()
                0x00000000c001da66                SoundCard::stopPlayback()
                0x00000000c001da74                SoundCard::SoundCard(char const*)
                0x00000000c001da74                SoundCard::SoundCard(char const*)
                0x00000000c001db12                SoundCard::~SoundCard()
                0x00000000c001db12                SoundCard::~SoundCard()
                0x00000000c001db36                SoundCard::~SoundCard()
                0x00000000c001db60                SoundCard::configureRates(int, int, int)
                0x00000000c001db90                SoundCard::getSamples16(int, short*)
                0x00000000c001dbec                SoundCard::getSamples32(int, int*)
                0x00000000c001dc72                SoundCard::addChannel(SoundPort*)
                0x00000000c001dcb0                SoundCard::removeChannel(int)
 .text          0x00000000c001dcc4      0x426 hal/sound/sndport.32
                0x00000000c001dcc4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001dcc4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001dd50                SoundPort::~SoundPort()
                0x00000000c001dd50                SoundPort::~SoundPort()
                0x00000000c001dd84                SoundPort::unpause()
                0x00000000c001dd90                SoundPort::pause()
                0x00000000c001dd9c                SoundPort::getBufferUsed()
                0x00000000c001dda4                SoundPort::getBufferSize()
                0x00000000c001ddac                SoundPort::buffer8(signed char*, int)
                0x00000000c001de40                SoundPort::buffer16(short*, int)
                0x00000000c001ded4                SoundPort::buffer32(int*, int)
                0x00000000c001df60                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001e02c                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001e0ea      0xc23 hw/bus/pci.32
                0x00000000c001e0ea                PCI::open(int, int, void*)
                0x00000000c001e108                PCI::close(int, int, void*)
                0x00000000c001e10c                PCI::PCI()
                0x00000000c001e10c                PCI::PCI()
                0x00000000c001e1a4                PCI::readBAR8(unsigned int, int)
                0x00000000c001e1c0                PCI::readBAR16(unsigned int, int)
                0x00000000c001e1de                PCI::readBAR32(unsigned int, int)
                0x00000000c001e1fa                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001e21a                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001e23c                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001e25c                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e2d2                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e37c                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001e3a0                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001e3c8                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001e412                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001e43a                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001e45e                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001e482                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001e4aa                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001e50e                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001e5f6                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001e8bc                PCI::checkBus(unsigned char)
                0x00000000c001e8e0                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001eac6                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001ec42                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001ecb4                PCI::detect()
 *fill*         0x00000000c001ed0d        0x1 
 .text          0x00000000c001ed0e      0xe58 hw/diskctrl/ide.32
                0x00000000c001ed0e                IDE::close(int, int, void*)
                0x00000000c001ed12                IDE::IDE()
                0x00000000c001ed12                IDE::IDE()
                0x00000000c001ed46                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ed58                selectDrive(unsigned char, unsigned char)
                0x00000000c001ed5a                IDE::getBase(unsigned char)
                0x00000000c001ed6c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ee2c                IDE::read(unsigned char, unsigned char)
                0x00000000c001eeda                IDE::waitInterrupt(unsigned char)
                0x00000000c001ef3d                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ef59                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ef76                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001efc0                IDE::open(int, int, void*)
                0x00000000c001f51a                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001f5ea                IDE::detect()
                0x00000000c001fa58                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001fb12                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001fb66      0x33d hw/diskctrl/satabus.32
                0x00000000c001fb66                SATABus::close(int, int, void*)
                0x00000000c001fb6a                SATABus::detect()
                0x00000000c001fb6c                SATABus::SATABus()
                0x00000000c001fb6c                SATABus::SATABus()
                0x00000000c001fbf2                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001fc24                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001fc6c                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001fc8c                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001fcb6                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001fdc6                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001fe70                SATABus::open(int, int, void*)
 *fill*         0x00000000c001fea3        0x1 
 .text          0x00000000c001fea4      0x7a9 hw/diskphys/ata.32
                0x00000000c001fea4                ATA::close(int, int, void*)
                0x00000000c001fec8                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001feca                ATA::ATA()
                0x00000000c001feca                ATA::ATA()
                0x00000000c001fef8                ATA::flush(bool)
                0x00000000c001ff46                ATA::readyForCommand()
                0x00000000c001ff92                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020382                ATA::read(unsigned long long, int, void*)
                0x00000000c00203ce                ATA::write(unsigned long long, int, void*)
                0x00000000c002041a                ATA::detectCHS()
                0x00000000c0020444                ATA::open(int, int, void*)
                0x00000000c002062f                combineCharAndColour(char, unsigned char)
                0x00000000c0020640                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c002064d        0x1 
 .text          0x00000000c002064e      0x618 hw/diskphys/atapi.32
                0x00000000c002064e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c0020654                ATAPI::close(int, int, void*)
                0x00000000c0020678                ATAPI::ATAPI()
                0x00000000c0020678                ATAPI::ATAPI()
                0x00000000c00206a6                ATAPI::readyForCommand()
                0x00000000c00206f8                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c00209c0                ATAPI::diskRemoved()
                0x00000000c00209fa                ATAPI::eject()
                0x00000000c0020a42                ATAPI::diskInserted()
                0x00000000c0020a4e                ATAPI::detectMedia()
                0x00000000c0020b0c                ATAPI::open(int, int, void*)
                0x00000000c0020bec                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020c66      0x44c hw/diskphys/sata.32
                0x00000000c0020c66                SATA::close(int, int, void*)
                0x00000000c0020c8a                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0020c8c                SATA::open(int, int, void*)
                0x00000000c0020d44                SATA::SATA()
                0x00000000c0020d44                SATA::SATA()
                0x00000000c0020d72                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0020ffa                SATA::read(unsigned long long, int, void*)
                0x00000000c0021046                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c00210b2      0x5d4 hw/diskphys/satapi.32
                0x00000000c00210b2                SATAPI::write(unsigned long long, int, void*)
                0x00000000c00210b8                SATAPI::close(int, int, void*)
                0x00000000c00210dc                SATAPI::SATAPI()
                0x00000000c00210dc                SATAPI::SATAPI()
                0x00000000c002110a                SATAPI::diskRemoved()
                0x00000000c002110c                SATAPI::diskInserted()
                0x00000000c0021128                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c002140a                SATAPI::eject()
                0x00000000c0021446                SATAPI::detectMedia()
                0x00000000c002149c                SATAPI::open(int, int, void*)
                0x00000000c002159c                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c0021686        0x2 
 .text          0x00000000c0021688       0xf0 hw/timer/apictimer.32
                0x00000000c0021688                APICTimer::close(int, int, void*)
                0x00000000c0021690                apicTimerHandler(regs*, void*)
                0x00000000c00216b8                APICTimer::open(int, int, void*)
                0x00000000c0021728                APICTimer::write(int)
                0x00000000c0021750                APICTimer::APICTimer()
                0x00000000c0021750                APICTimer::APICTimer()
 .text          0x00000000c0021778      0x1ad hw/timer/pit.32
                0x00000000c0021778                PIT::write(int)
                0x00000000c00217fc                pitHandler(regs*, void*)
                0x00000000c0021824                PIT::open(int, int, void*)
                0x00000000c0021874                PIT::close(int, int, void*)
                0x00000000c00218a4                PIT::PIT()
                0x00000000c00218a4                PIT::PIT()
 *fill*         0x00000000c0021925        0xb 
 .text          0x00000000c0021930       0x6f arch/i386/avx.32
                0x00000000c0021930                avxDetect
                0x00000000c002195a                avxSave
                0x00000000c002196b                avxLoad
                0x00000000c002197c                avxInit
                0x00000000c002199e                avxClose
 *fill*         0x00000000c002199f        0x1 
 .text          0x00000000c00219a0      0x2b8 arch/i386/interrupt.32
                0x00000000c00219a0                isr0
                0x00000000c00219b0                isr1
                0x00000000c00219ba                isr2
                0x00000000c00219c4                isr3
                0x00000000c00219ce                isr4
                0x00000000c00219d8                isr5
                0x00000000c00219e2                isr6
                0x00000000c00219ec                isr7
                0x00000000c00219f6                isr8
                0x00000000c00219fe                isr9
                0x00000000c0021a08                isr10
                0x00000000c0021a10                isr11
                0x00000000c0021a18                isr12
                0x00000000c0021a20                isr13
                0x00000000c0021a3a                isr14
                0x00000000c0021a42                isr15
                0x00000000c0021a4c                isr16
                0x00000000c0021a56                isr17
                0x00000000c0021a60                isr18
                0x00000000c0021a6a                irq3
                0x00000000c0021a74                irq4
                0x00000000c0021a7e                irq5
                0x00000000c0021a88                irq6
                0x00000000c0021a92                irq7
                0x00000000c0021a9c                irq8
                0x00000000c0021aa6                irq9
                0x00000000c0021ab0                irq10
                0x00000000c0021aba                irq11
                0x00000000c0021ac4                irq12
                0x00000000c0021ace                irq13
                0x00000000c0021ad8                irq14
                0x00000000c0021ae2                irq15
                0x00000000c0021aec                irq1
                0x00000000c0021af3                irq2
                0x00000000c0021afa                isr96
                0x00000000c0021b01                irq0
                0x00000000c0021b06                int_common_stub
                0x00000000c0021b06                syscall_common_stub
                0x00000000c0021c08                irq16
                0x00000000c0021c12                irq17
                0x00000000c0021c1c                irq18
                0x00000000c0021c26                irq19
                0x00000000c0021c30                irq20
                0x00000000c0021c3a                irq21
                0x00000000c0021c44                irq22
                0x00000000c0021c4e                irq23
 *fill*         0x00000000c0021c58        0x8 
 .text          0x00000000c0021c60       0x10 arch/i386/rdrand.32
                0x00000000c0021c60                i386GetRDRAND
 .text          0x00000000c0021c70       0x39 arch/i386/sse.32
                0x00000000c0021c70                sseDetect
                0x00000000c0021c88                sseSave
                0x00000000c0021c90                sseLoad
                0x00000000c0021c98                sseInit
                0x00000000c0021ca8                sseClose
 *fill*         0x00000000c0021ca9        0x7 
 .text          0x00000000c0021cb0       0x4f arch/i386/x87.32
                0x00000000c0021cb6                x87Detect
                0x00000000c0021cd7                x87Save
                0x00000000c0021cde                x87Load
                0x00000000c0021ce5                x87Init
                0x00000000c0021cfe                x87Close
 *fill*         0x00000000c0021cff        0x1 
 .text          0x00000000c0021d00       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0021d25        0x0 crtn.32
 *fill*         0x00000000c0021d25        0x3 
 .text          0x00000000c0021d28      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0021d28                __divdi3
 *fill*         0x00000000c0021e73        0x1 
 .text          0x00000000c0021e74      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021e74                __moddi3
 *fill*         0x00000000c0021ff2        0x2 
 .text          0x00000000c0021ff4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021ff4                __udivdi3
 *fill*         0x00000000c00220f3        0x1 
 .text          0x00000000c00220f4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c00220f4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0022210        0x0
 .iplt          0x00000000c0022210        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c002220e        0xf
 .init          0x00000000c002220e        0x3 crti.32
                0x00000000c002220e                _init
 .init          0x00000000c0022211        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0022216        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c002221b        0x2 crtn.32

.fini           0x00000000c002221d        0xa
 .fini          0x00000000c002221d        0x3 crti.32
                0x00000000c002221d                _fini
 .fini          0x00000000c0022220        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0022225        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0022228       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0022228       0x1a hal/device.32
                0x00000000c0022228                DriverlessDevice::~DriverlessDevice()
                0x00000000c0022228                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0022242       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0022242       0x2a hal/device.32
                0x00000000c0022242                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002226c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c002226c       0xdc hal/device.32
                0x00000000c002226c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0022348       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0022348       0x42 hal/device.32
                0x00000000c0022348                LinkedList<Device>::LinkedList()
                0x00000000c0022348                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002238c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c002238c       0x1c hal/timer.32
                0x00000000c002238c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00223a8        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00223a8        0x7 hal/timer.32
                0x00000000c00223a8                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00223b0       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c00223b0       0xbc hal/timer.32
                0x00000000c00223b0                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002246c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c002246c       0xda hal/timer.32
                0x00000000c002246c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0022548       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0022548       0x23 hw/acpi.32
                0x00000000c0022548                ACPI::~ACPI()
                0x00000000c0022548                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c002256c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c002256c       0x2a hw/acpi.32
                0x00000000c002256c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0022598        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0022598        0x2 hw/acpi.32
                0x00000000c0022598                LinkedList<Device>::~LinkedList()
                0x00000000c0022598                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002259c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c002259c       0x1c hw/acpi.32
                0x00000000c002259c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00225b8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c00225b8        0x7 hw/acpi.32
                0x00000000c00225b8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00225c0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c00225c0       0xb8 hw/acpi.32
                0x00000000c00225c0                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0022678       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0022678       0x23 krnl/computer.32
                0x00000000c0022678                Computer::~Computer()
                0x00000000c0022678                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c002269c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c002269c       0x2a krnl/computer.32
                0x00000000c002269c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c00226c6       0x24
 .text._Z10idleCommonv
                0x00000000c00226c6       0x24 krnl/idle.32
                0x00000000c00226c6                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00226ea        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c00226ea        0x2 krnl/unixfile.32
                0x00000000c00226ea                LinkedList<UnixFile>::~LinkedList()
                0x00000000c00226ea                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00226ec       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c00226ec       0x42 krnl/unixfile.32
                0x00000000c00226ec                LinkedList<UnixFile>::LinkedList()
                0x00000000c00226ec                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002272e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002272e       0xd3 krnl/unixfile.32
                0x00000000c002272e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022802        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022802        0x7 krnl/unixfile.32
                0x00000000c0022802                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002280a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002280a       0xa1 krnl/unixfile.32
                0x00000000c002280a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00228ac        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c00228ac        0x8 krnl/unixfile.32
                0x00000000c00228ac                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00228b4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00228b4        0x8 sys/kill.32
                0x00000000c00228b4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00228bc        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00228bc        0x2 thr/prcssthr.32
                0x00000000c00228bc                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00228bc                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00228c0       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00228c0       0x49 thr/prcssthr.32
                0x00000000c00228c0                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00228c0                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002290c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002290c       0x42 thr/prcssthr.32
                0x00000000c002290c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c002290c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN6IOAPICD2Ev
                0x00000000c002294e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002294e       0x23 arch/i386/apic.32
                0x00000000c002294e                IOAPIC::~IOAPIC()
                0x00000000c002294e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0022972       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0022972       0x2a arch/i386/apic.32
                0x00000000c0022972                IOAPIC::~IOAPIC()

.text._ZN3CPUD2Ev
                0x00000000c002299c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002299c       0x23 arch/i386/hal.32
                0x00000000c002299c                CPU::~CPU()
                0x00000000c002299c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c00229c0       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c00229c0       0x2a arch/i386/hal.32
                0x00000000c00229c0                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c00229ea       0x23
 .text._ZN3PCID2Ev
                0x00000000c00229ea       0x23 hw/bus/pci.32
                0x00000000c00229ea                PCI::~PCI()
                0x00000000c00229ea                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0022a0e       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0022a0e       0x2a hw/bus/pci.32
                0x00000000c0022a0e                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0022a38       0x23
 .text._ZN3IDED2Ev
                0x00000000c0022a38       0x23 hw/diskctrl/ide.32
                0x00000000c0022a38                IDE::~IDE()
                0x00000000c0022a38                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0022a5c       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0022a5c       0x2a hw/diskctrl/ide.32
                0x00000000c0022a5c                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0022a86       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0022a86       0x23 hw/diskctrl/satabus.32
                0x00000000c0022a86                SATABus::~SATABus()
                0x00000000c0022a86                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0022aaa       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0022aaa       0x2a hw/diskctrl/satabus.32
                0x00000000c0022aaa                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0022ad4       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0022ad4       0x23 hw/diskphys/ata.32
                0x00000000c0022ad4                ATA::~ATA()
                0x00000000c0022ad4                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0022af8       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0022af8       0x2a hw/diskphys/ata.32
                0x00000000c0022af8                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0022b22       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0022b22       0x23 hw/diskphys/atapi.32
                0x00000000c0022b22                ATAPI::~ATAPI()
                0x00000000c0022b22                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0022b46       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0022b46       0x2a hw/diskphys/atapi.32
                0x00000000c0022b46                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0022b70       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0022b70       0x23 hw/diskphys/sata.32
                0x00000000c0022b70                SATA::~SATA()
                0x00000000c0022b70                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0022b94       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0022b94       0x2a hw/diskphys/sata.32
                0x00000000c0022b94                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0022bbe       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0022bbe       0x23 hw/diskphys/satapi.32
                0x00000000c0022bbe                SATAPI::~SATAPI()
                0x00000000c0022bbe                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0022be2       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0022be2       0x2a hw/diskphys/satapi.32
                0x00000000c0022be2                SATAPI::~SATAPI()

.text._ZN9APICTimerD2Ev
                0x00000000c0022c0c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0022c0c       0x23 hw/timer/apictimer.32
                0x00000000c0022c0c                APICTimer::~APICTimer()
                0x00000000c0022c0c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0022c30       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0022c30       0x2a hw/timer/apictimer.32
                0x00000000c0022c30                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0022c5c       0x23
 .text._ZN3PITD2Ev
                0x00000000c0022c5c       0x23 hw/timer/pit.32
                0x00000000c0022c5c                PIT::~PIT()
                0x00000000c0022c5c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022c80       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022c80       0x2a hw/timer/pit.32
                0x00000000c0022c80                PIT::~PIT()

.rodata         0x00000000c0022caa     0x3afe
                0x00000000c0022caa                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0022caa        0x2 
 .ctors         0x00000000c0022cac        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0022cb0        0x4 krnl/unixfile.32
 .ctors         0x00000000c0022cb4        0x4 thr/prcssthr.32
 .ctors         0x00000000c0022cb8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022cbc                end_ctors = .
                0x00000000c0022cbc                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0022cbc        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0022cc0        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022cc0                __DTOR_END__
                0x00000000c0022cc4                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022cc4       0x1c 
 .rodata        0x00000000c0022ce0      0x101 acpica/utclib.32
                0x00000000c0022ce0                AcpiGbl_Ctypes
 *fill*         0x00000000c0022de1        0x3 
 .rodata        0x00000000c0022de4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c0022dfc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022e46       0x1a 
 .rodata        0x00000000c0022e60       0xed fs/fat/ff.32
 *fill*         0x00000000c0022f4d       0x13 
 .rodata        0x00000000c0022f60      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0023360       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c00233cf       0x11 dbg/kconsole.32
 .rodata.str1.4
                0x00000000c00233e0       0x38 dbg/kconsole.32
 .rodata        0x00000000c0023418      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0023568      0x169 dbg/usban.32
 *fill*         0x00000000c00236d1        0x3 
 .rodata.str1.4
                0x00000000c00236d4      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c002380b      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c002392e       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c0023987        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0023988       0x6c fs/vfs.32
                0x00000000c0023988                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00239f4       0x1c fs/vfs.32
                0x00000000c00239f4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0023a10       0x1c fs/vfs.32
                0x00000000c0023a10                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0023a2c       0x2c hal/bus.32
                0x00000000c0023a2c                vtable for Bus
 *fill*         0x00000000c0023a58        0x8 
 .rodata        0x00000000c0023a60      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0023bb0       0x3c hal/clock.32
                0x00000000c0023bb0                vtable for Clock
 .rodata.str1.1
                0x00000000c0023bec       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0023c50       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0023c72       0x15 hal/device.32
 *fill*         0x00000000c0023c87        0x1 
 .rodata._ZTV6Device
                0x00000000c0023c88       0x2c hal/device.32
                0x00000000c0023c88                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0023cb4       0x2c hal/device.32
                0x00000000c0023cb4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023ce0       0x2c hal/diskctrl.32
                0x00000000c0023ce0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0023d0c       0x38 hal/diskphys.32
                0x00000000c0023d0c                vtable for PhysicalDisk
 .rodata        0x00000000c0023d44       0x53 hal/keybrd.32
 *fill*         0x00000000c0023d97        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023d98       0x34 hal/keybrd.32
                0x00000000c0023d98                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0023dcc       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0023e10       0x2c hal/logidisk.32
                0x00000000c0023e10                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0023e3c       0x2c hal/mouse.32
                0x00000000c0023e3c                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023e68       0x34 hal/nic.32
                0x00000000c0023e68                vtable for NIC
 .rodata.str1.1
                0x00000000c0023e9c        0xb hal/partition.32
 *fill*         0x00000000c0023ea7        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023ea8       0x44 hal/serial.32
                0x00000000c0023ea8                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0023eec       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023f37        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023f3f       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023f3f       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c0023f3f       0x47 hal/timer.32
 *fill*         0x00000000c0023f86        0x2 
 .rodata._ZTV5Timer
                0x00000000c0023f88       0x30 hal/timer.32
                0x00000000c0023f88                vtable for Timer
 .rodata.str1.1
                0x00000000c0023fb8       0x3e hal/vcache.32
 *fill*         0x00000000c0023ff6        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023ff8       0x10 hal/vcache.32
                0x00000000c0023ff8                vtable for VCache
 .rodata.str1.1
                0x00000000c0024008       0xba hal/video.32
 *fill*         0x00000000c00240c2        0x2 
 .rodata._ZTV5Video
                0x00000000c00240c4       0x4c hal/video.32
                0x00000000c00240c4                vtable for Video
 .rodata.str1.1
                0x00000000c0024110      0x1b7 hw/acpi.32
 *fill*         0x00000000c00242c7        0x1 
 .rodata.str1.4
                0x00000000c00242c8       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0024363       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0024363        0x8 hw/acpi.32
 *fill*         0x00000000c0024363        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0024364       0x2c hw/acpi.32
                0x00000000c0024364                vtable for ACPI
 .rodata.str1.1
                0x00000000c0024390       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c00243a3       0x19 krnl/atexit.32
 .rodata.str1.1
                0x00000000c00243bc       0x13 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c00243cf       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0024402        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0024405       0x87 krnl/cm.32
                                         0x89 (size before relaxing)
 .rodata.str1.1
                0x00000000c002448c       0x21 krnl/computer.32
 *fill*         0x00000000c00244ad        0x3 
 .rodata.str1.4
                0x00000000c00244b0       0x2c krnl/computer.32
 .rodata._ZTV8Computer
                0x00000000c00244dc       0x2c krnl/computer.32
                0x00000000c00244dc                vtable for Computer
 .rodata.str1.1
                0x00000000c0024508       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0024544       0x3e krnl/fault.32
 *fill*         0x00000000c0024582        0x2 
 .rodata.str1.4
                0x00000000c0024584       0x28 krnl/fault.32
 .rodata.str1.1
                0x00000000c00245ac        0x4 krnl/intlformat.32
 .rodata.str1.1
                0x00000000c00245b0       0x11 krnl/intops.32
 .rodata.str1.4
                0x00000000c00245b0       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c00245e0        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c00245ef       0x9f krnl/main.32
                                         0xb9 (size before relaxing)
 *fill*         0x00000000c002468e        0x2 
 .rodata.str1.4
                0x00000000c0024690       0x48 krnl/main.32
 .rodata.str1.1
                0x00000000c00246d8       0x6f krnl/physmgr.32
 *fill*         0x00000000c0024747        0x1 
 .rodata.str1.4
                0x00000000c0024748       0xdd krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0024825       0x39 krnl/pipe.32
 *fill*         0x00000000c002485e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0024860       0x1c krnl/pipe.32
                0x00000000c0024860                vtable for Pipe
 .rodata.str1.1
                0x00000000c002487c       0x54 krnl/powctrl.32
 .rodata.str1.1
                0x00000000c00248d0       0xd9 krnl/resolve.32
 *fill*         0x00000000c00249a9        0x3 
 .rodata.str1.4
                0x00000000c00249ac       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c00249cb      0x108 krnl/signal.32
 .rodata.str1.1
                0x00000000c0024ad3       0x63 krnl/syscalls.32
                                         0x6b (size before relaxing)
 .rodata.str1.1
                0x00000000c0024b36       0x4d krnl/terminal.32
                                         0x5e (size before relaxing)
 *fill*         0x00000000c0024b83        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0024b84       0x1c krnl/terminal.32
                0x00000000c0024b84                vtable for VgaText
 .rodata        0x00000000c0024ba0       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0024bdb       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0024bdb       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0024bdb       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0024bdb        0x8 krnl/unixfile.32
 *fill*         0x00000000c0024bdb        0x1 
 .rodata.str1.4
                0x00000000c0024bdc       0x20 krnl/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0024bfc       0x1c krnl/unixfile.32
                0x00000000c0024bfc                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0024c18       0x1c krnl/unixfile.32
                0x00000000c0024c18                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0024c34      0x313 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024f47      0x173 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c00250ba       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c00250cf        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c00250de        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00250e8       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0025109       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c002514d       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0025162       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c002518e       0x11 thr/alarm.32
 .rodata.str1.1
                0x00000000c002519f       0x91 thr/elf.32
 .rodata.str1.1
                0x00000000c0025230       0xec thr/elf2.32
 .rodata.str1.1
                0x00000000c002531c       0x6b thr/prcssthr.32
 *fill*         0x00000000c0025387        0x1 
 .rodata.str1.4
                0x00000000c0025388       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0025480       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0025480       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0025480       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0025480        0x8 thr/prcssthr.32
 .rodata        0x00000000c0025480      0x4b0 vm86/vm8086.32
 .rodata        0x00000000c0025930       0x17 arch/i386/apic.32
 *fill*         0x00000000c0025947        0x1 
 .rodata._ZTV6IOAPIC
                0x00000000c0025948       0x2c arch/i386/apic.32
                0x00000000c0025948                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0025974      0x322 arch/i386/hal.32
                                        0x335 (size before relaxing)
 *fill*         0x00000000c0025c96        0x2 
 .rodata.str1.4
                0x00000000c0025c98       0x23 arch/i386/hal.32
 *fill*         0x00000000c0025cbb        0x1 
 .rodata._ZTV3CPU
                0x00000000c0025cbc       0x2c arch/i386/hal.32
                0x00000000c0025cbc                vtable for CPU
 .rodata.str1.4
                0x00000000c0025ce8       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025d49       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025d87       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0025d9c       0x3c arch/i386/rtc.32
                0x00000000c0025d9c                vtable for RTC
 .rodata.str1.1
                0x00000000c0025dd8       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025e19        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025e1c       0x6c fs/fat/vfslink.32
                0x00000000c0025e1c                vtable for FAT
 .rodata.str1.1
                0x00000000c0025e88       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0025e88      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0025fc0       0x6c fs/iso9660/vfslink.32
                0x00000000c0025fc0                vtable for ISO9660
 .rodata.str1.1
                0x00000000c002602c       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0026070       0x34 hal/sound/sndcard.32
                0x00000000c0026070                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00260a4       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00260e3       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002611b       0xa1 hw/bus/pci.32
 .rodata        0x00000000c00261bc       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0026220       0x2c hw/bus/pci.32
                0x00000000c0026220                vtable for PCI
 .rodata.str1.1
                0x00000000c002624c      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0026370       0x2c hw/diskctrl/ide.32
                0x00000000c0026370                vtable for IDE
 .rodata.str1.4
                0x00000000c002639c       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00263c0       0x2c hw/diskctrl/satabus.32
                0x00000000c00263c0                vtable for SATABus
 .rodata.str1.1
                0x00000000c00263ec       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c00264a7        0x1 
 .rodata._ZTV3ATA
                0x00000000c00264a8       0x38 hw/diskphys/ata.32
                0x00000000c00264a8                vtable for ATA
 .rodata.str1.1
                0x00000000c00264e0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00264ed        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00264f0       0x38 hw/diskphys/atapi.32
                0x00000000c00264f0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0026528       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00265b0       0x38 hw/diskphys/sata.32
                0x00000000c00265b0                vtable for SATA
 .rodata.str1.1
                0x00000000c00265e8       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c00266d2        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c00266d4       0x38 hw/diskphys/satapi.32
                0x00000000c00266d4                vtable for SATAPI
 .rodata.str1.1
                0x00000000c002670c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0026727        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0026728       0x30 hw/timer/apictimer.32
                0x00000000c0026728                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0026758       0x1d hw/timer/pit.32
 *fill*         0x00000000c0026775        0x3 
 .rodata._ZTV3PIT
                0x00000000c0026778       0x30 hw/timer/pit.32
                0x00000000c0026778                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00267a8      0xa7d
 *(.data)
 .data          0x00000000c00267a8        0x0 crti.32
 .data          0x00000000c00267a8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00267a8                __dso_handle
 .data          0x00000000c00267ac        0x0 acpica/utclib.32
 .data          0x00000000c00267ac        0x0 krnl/malloc.32
 .data          0x00000000c00267ac        0x0 libk/ctype.32
 .data          0x00000000c00267ac        0x0 libk/string.32
 .data          0x00000000c00267ac        0x0 arch/i386/cc.32
 .data          0x00000000c00267ac        0x0 fs/fat/diskio.32
 .data          0x00000000c00267ac        0x0 fs/fat/ff.32
 .data          0x00000000c00267ac        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00267ac        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00267ac        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00267ac        0x0 dbg/kconsole.32
 *fill*         0x00000000c00267ac       0x14 
 .data          0x00000000c00267c0       0x28 dbg/usban.32
                0x00000000c00267c0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00267e8        0x0 fs/symlink.32
 .data          0x00000000c00267e8        0x0 fs/vfs.32
 .data          0x00000000c00267e8        0x0 hal/bus.32
 .data          0x00000000c00267e8        0x0 hal/buzzer.32
 .data          0x00000000c00267e8        0x0 hal/clock.32
 .data          0x00000000c00267e8        0x0 hal/device.32
 .data          0x00000000c00267e8        0x0 hal/diskctrl.32
 .data          0x00000000c00267e8        0x0 hal/diskphys.32
 .data          0x00000000c00267e8        0x0 hal/fpu.32
 .data          0x00000000c00267e8        0x0 hal/keybrd.32
 .data          0x00000000c00267e8        0x0 hal/logidisk.32
 .data          0x00000000c00267e8        0x0 hal/mouse.32
 .data          0x00000000c00267e8        0x0 hal/nic.32
 .data          0x00000000c00267e8        0x0 hal/partition.32
 .data          0x00000000c00267e8        0x0 hal/serial.32
 .data          0x00000000c00267e8        0x0 hal/timer.32
 .data          0x00000000c00267e8        0x0 hal/vcache.32
 .data          0x00000000c00267e8        0x0 hal/video.32
 .data          0x00000000c00267e8       0x10 hw/acpi.32
                0x00000000c00267e8                legacyIRQRemaps
 .data          0x00000000c00267f8        0x0 krnl/assert.32
 .data          0x00000000c00267f8        0x0 krnl/atexit.32
 .data          0x00000000c00267f8        0x0 krnl/bootflags.32
 .data          0x00000000c00267f8        0x0 krnl/bootmsg.32
 .data          0x00000000c00267f8        0x4 krnl/c++.32
                0x00000000c00267f8                __stack_chk_guard
 .data          0x00000000c00267fc        0x0 krnl/cdefs.32
 *fill*         0x00000000c00267fc        0x4 
 .data          0x00000000c0026800      0x100 krnl/cm.32
                0x00000000c0026800                CmComponents
 .data          0x00000000c0026900        0x0 krnl/computer.32
 .data          0x00000000c0026900      0x400 krnl/crc32.32
                0x00000000c0026900                KiPolyLookupCRC32
 .data          0x00000000c0026d00       0x4d krnl/env.32
                0x00000000c0026d00                defaultSysEnv
 .data          0x00000000c0026d4d        0x0 krnl/fault.32
 .data          0x00000000c0026d4d        0x0 krnl/gdt.32
 .data          0x00000000c0026d4d        0x0 krnl/idle.32
 .data          0x00000000c0026d4d        0x0 krnl/idt.32
 .data          0x00000000c0026d4d        0x0 krnl/inlines.32
 .data          0x00000000c0026d4d        0x0 krnl/intlformat.32
 .data          0x00000000c0026d4d        0x0 krnl/intops.32
 *fill*         0x00000000c0026d4d        0x3 
 .data          0x00000000c0026d50        0x4 krnl/kheap.32
 .data          0x00000000c0026d54        0x0 krnl/mailbox.32
 .data          0x00000000c0026d54        0x0 krnl/main.32
 .data          0x00000000c0026d54        0x0 krnl/mutex.32
 .data          0x00000000c0026d54        0x0 krnl/panic.32
 .data          0x00000000c0026d54        0x4 krnl/physmgr.32
                0x00000000c0026d54                Phys::bitmap
 .data          0x00000000c0026d58        0x0 krnl/pipe.32
 .data          0x00000000c0026d58        0x0 krnl/powctrl.32
 .data          0x00000000c0026d58        0x0 krnl/random.32
 .data          0x00000000c0026d58        0x0 krnl/resolve.32
 .data          0x00000000c0026d58        0x0 krnl/semaphore.32
 *fill*         0x00000000c0026d58        0x8 
 .data          0x00000000c0026d60       0x4c krnl/signal.32
                0x00000000c0026d60                KiDefaultSignalHandlers
 *fill*         0x00000000c0026dac       0x14 
 .data          0x00000000c0026dc0      0x124 krnl/syscalls.32
                0x00000000c0026dc0                systemCallHandlers
 *fill*         0x00000000c0026ee4       0x1c 
 .data          0x00000000c0026f00       0x60 krnl/terminal.32
                0x00000000c0026f00                VgaText::hiddenOut
                0x00000000c0026f20                ansiToVGAMappings
 .data          0x00000000c0026f60        0x0 krnl/tss.32
 .data          0x00000000c0026f60        0x4 krnl/unixfile.32
                0x00000000c0026f60                UnixFile::nextFd
 .data          0x00000000c0026f64       0x15 krnl/virtmgr.32
                0x00000000c0026f64                Virt::pageAllocPtr
                0x00000000c0026f68                Virt::bitmap
                0x00000000c0026f6c                Virt::swapfileSectorsPerPage
                0x00000000c0026f70                Virt::swapfileLength
                0x00000000c0026f74                Virt::swapfileSector
                0x00000000c0026f78                Virt::swapfileDrive
 .data          0x00000000c0026f79        0x0 sys/alarm.32
 .data          0x00000000c0026f79        0x0 sys/eject.32
 .data          0x00000000c0026f79        0x0 sys/exit.32
 .data          0x00000000c0026f79        0x0 sys/getcwd.32
 .data          0x00000000c0026f79        0x0 sys/getpid.32
 .data          0x00000000c0026f79        0x0 sys/getramdata.32
 .data          0x00000000c0026f79        0x0 sys/getvgaptr.32
 .data          0x00000000c0026f79        0x0 sys/kill.32
 .data          0x00000000c0026f79        0x0 sys/loaddll.32
 .data          0x00000000c0026f79        0x0 sys/pause.32
 .data          0x00000000c0026f79        0x0 sys/pthread.32
 .data          0x00000000c0026f79        0x0 sys/read.32
 .data          0x00000000c0026f79        0x0 sys/registersignal.32
 .data          0x00000000c0026f79        0x0 sys/registry.32
 .data          0x00000000c0026f79        0x0 sys/sbrk.32
 .data          0x00000000c0026f79        0x0 sys/setcwd.32
 .data          0x00000000c0026f79        0x0 sys/settime.32
 .data          0x00000000c0026f79        0x0 sys/symlink.32
 .data          0x00000000c0026f79        0x0 sys/timezone.32
 .data          0x00000000c0026f79        0x0 sys/truncate.32
 .data          0x00000000c0026f79        0x0 sys/write.32
 .data          0x00000000c0026f79        0x0 sys/wsbe.32
 .data          0x00000000c0026f79        0x0 sys/yield.32
 .data          0x00000000c0026f79        0x0 thr/alarm.32
 .data          0x00000000c0026f79        0x0 thr/elf.32
 .data          0x00000000c0026f79        0x0 thr/elf2.32
 .data          0x00000000c0026f79        0x0 thr/exec.32
 *fill*         0x00000000c0026f79        0x3 
 .data          0x00000000c0026f7c        0x4 thr/prcssthr.32
                0x00000000c0026f7c                keNextPID
 .data          0x00000000c0026f80        0x0 vm86/vm8086.32
 .data          0x00000000c0026f80        0x0 arch/i386/apic.32
 .data          0x00000000c0026f80      0x2a4 arch/i386/hal.32
                0x00000000c0026f80                exceptionNames
                0x00000000c0027220                lastCode
 .data          0x00000000c0027224        0x0 arch/i386/intctrl.32
 .data          0x00000000c0027224        0x0 arch/i386/pic.32
 .data          0x00000000c0027224        0x0 arch/i386/rtc.32
 .data          0x00000000c0027224        0x0 arch/i386/vga.32
 .data          0x00000000c0027224        0x0 fs/fat/vfslink.32
 .data          0x00000000c0027224        0x0 fs/iso9660/helper.32
 .data          0x00000000c0027224        0x1 fs/iso9660/vfslink.32
                0x00000000c0027224                recentDriveletter
 .data          0x00000000c0027225        0x0 hal/sound/sndcard.32
 .data          0x00000000c0027225        0x0 hal/sound/sndport.32
 .data          0x00000000c0027225        0x0 hw/bus/pci.32
 .data          0x00000000c0027225        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0027225        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0027225        0x0 hw/diskphys/ata.32
 .data          0x00000000c0027225        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0027225        0x0 hw/diskphys/sata.32
 .data          0x00000000c0027225        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0027225        0x0 hw/timer/apictimer.32
 .data          0x00000000c0027225        0x0 hw/timer/pit.32
 .data          0x00000000c0027225        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0027225        0x0 crtn.32
 .data          0x00000000c0027225        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0027225        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0027225        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0027225        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0027228        0x0
 .got           0x00000000c0027228        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0027228        0x0
 .got.plt       0x00000000c0027228        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0027228        0x0
 .igot.plt      0x00000000c0027228        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0027228        0x0
 .tm_clone_table
                0x00000000c0027228        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0027228        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0027225      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0027225        0x3 
 .eh_frame      0x00000000c0027228        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0027228        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0027228       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0027280       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00272c0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002732c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0028000       0x7d
 *(userkernel)
 userkernel     0x00000000c0028000       0x52 krnl/signal.32
                0x00000000c0028000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002802c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0028052       0x2b krnl/syscalls.32
                0x00000000c0028052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0029000        0x1
 *(align_previous)
 align_previous
                0x00000000c0029000        0x1 krnl/signal.32
                0x00000000c0029000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0029004        0x0
 .rel.got       0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0029004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0029001     0x6dbb
                0x00000000c0029001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0029001       0x1f 
 COMMON         0x00000000c0029020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0029020                dcache
                0x00000000c0029060                cdDriveLetter
                0x00000000c0029080                icache
 *(.bss)
 .bss           0x00000000c00290c0        0x0 crti.32
 .bss           0x00000000c00290c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00290e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00290e4       0x1c 
 .bss           0x00000000c0029100      0x378 krnl/malloc.32
 .bss           0x00000000c0029478        0x0 libk/ctype.32
 .bss           0x00000000c0029478        0x0 libk/string.32
 .bss           0x00000000c0029478        0x0 arch/i386/cc.32
 .bss           0x00000000c0029478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0029478        0x8 
 .bss           0x00000000c0029480       0x88 fs/fat/ff.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0029508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0029508       0x18 
 .bss           0x00000000c0029520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0029eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0029eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0029eb8        0x8 
 .bss           0x00000000c0029ec0     0x2444 fs/symlink.32
                0x00000000c0029ec0                kiNumWaitingRoomSymlinks
                0x00000000c0029ee0                kiNewlyCreatedIDs
                0x00000000c0029f00                kiNewlyCreatedSymlinks
                0x00000000c002a300                kiSymlinkHashTable
                0x00000000c002c300                kiBaseSymlinkID
 .bss           0x00000000c002c304        0x4 fs/vfs.32
                0x00000000c002c304                installedFilesystems
 .bss           0x00000000c002c308        0x0 hal/bus.32
 .bss           0x00000000c002c308        0x0 hal/buzzer.32
 *fill*         0x00000000c002c308       0x18 
 .bss           0x00000000c002c320      0x348 hal/clock.32
                0x00000000c002c320                keLoadedTimezones
                0x00000000c002c324                keNumberOfTimezones
                0x00000000c002c340                keTimezoneStrings
                0x00000000c002c660                keDstOn
                0x00000000c002c661                keTimezoneHalfHourOffset
                0x00000000c002c664                keTimezoneHourOffset
 .bss           0x00000000c002c668        0x0 hal/device.32
 .bss           0x00000000c002c668        0x0 hal/diskctrl.32
 .bss           0x00000000c002c668        0x0 hal/diskphys.32
 .bss           0x00000000c002c668        0x0 hal/fpu.32
 *fill*         0x00000000c002c668       0x18 
 .bss           0x00000000c002c680      0x428 hal/keybrd.32
                0x00000000c002c680                keyboardWaitingTaskList
                0x00000000c002c684                keyboardSetupYet
                0x00000000c002c688                guiKeyboardHandler
                0x00000000c002c6a0                keystates
 *fill*         0x00000000c002caa8       0x18 
 .bss           0x00000000c002cac0       0x88 hal/logidisk.32
                0x00000000c002cac0                diskAssignments
                0x00000000c002cae0                disks
 .bss           0x00000000c002cb48        0x4 hal/mouse.32
                0x00000000c002cb48                guiMouseHandler
 .bss           0x00000000c002cb4c        0x0 hal/nic.32
 .bss           0x00000000c002cb4c        0x0 hal/partition.32
 .bss           0x00000000c002cb4c        0x0 hal/serial.32
 *fill*         0x00000000c002cb4c        0x4 
 .bss           0x00000000c002cb50        0x8 hal/timer.32
                0x00000000c002cb50                milliTenthsSinceBoot
 .bss           0x00000000c002cb58        0x0 hal/vcache.32
 .bss           0x00000000c002cb58        0x4 hal/video.32
                0x00000000c002cb58                screen
 *fill*         0x00000000c002cb5c        0x4 
 .bss           0x00000000c002cb60      0x480 hw/acpi.32
                0x00000000c002cb60                nextACPITable
                0x00000000c002cb80                acpiTables
                0x00000000c002cd80                usingXSDT
                0x00000000c002cd84                RSDTpointer
                0x00000000c002cd88                RSDPpointer
                0x00000000c002cd8c                nextAPICNMI
                0x00000000c002cda0                apicNMIInfo
                0x00000000c002ce20                legacyIRQFlags
                0x00000000c002ce40                ioapicDiscoveryNumber
                0x00000000c002ce60                ioapicFoundInMADT
                0x00000000c002ce80                ioapicAddresses
                0x00000000c002cf00                ioapicGSIBase
                0x00000000c002cf80                processorDiscoveryNumber
                0x00000000c002cfa0                matchingAPICID
                0x00000000c002cfc0                processorID
 .bss           0x00000000c002cfe0        0x0 krnl/assert.32
 .bss           0x00000000c002cfe0      0x120 krnl/atexit.32
                0x00000000c002cfe0                kiNextAtexitHandler
                0x00000000c002d000                kiAtexitContexts
                0x00000000c002d080                kiAtexitHandlers
 .bss           0x00000000c002d100        0x4 krnl/bootflags.32
                0x00000000c002d100                keBootSettings
 .bss           0x00000000c002d104        0x0 krnl/bootmsg.32
 .bss           0x00000000c002d104        0x0 krnl/c++.32
 .bss           0x00000000c002d104        0x0 krnl/cdefs.32
 .bss           0x00000000c002d104        0x4 krnl/cm.32
 .bss           0x00000000c002d108        0x6 krnl/computer.32
                0x00000000c002d108                computer
                0x00000000c002d10c                keIsPreemptionOn
                0x00000000c002d10d                keIsSchedulingOn
 .bss           0x00000000c002d10e        0x0 krnl/crc32.32
 *fill*         0x00000000c002d10e        0x2 
 .bss           0x00000000c002d110        0x8 krnl/env.32
                0x00000000c002d110                KeUserEnv
                0x00000000c002d114                KeSystemEnv
 .bss           0x00000000c002d118        0x0 krnl/fault.32
 .bss           0x00000000c002d118        0x6 krnl/gdt.32
                0x00000000c002d118                gdtDescr
 .bss           0x00000000c002d11e        0x0 krnl/idle.32
 *fill*         0x00000000c002d11e        0x2 
 .bss           0x00000000c002d120        0x6 krnl/idt.32
                0x00000000c002d120                idtDescr
 .bss           0x00000000c002d126        0x0 krnl/inlines.32
 *fill*         0x00000000c002d126       0x1a 
 .bss           0x00000000c002d140       0x24 krnl/intlformat.32
                0x00000000c002d140                keLocale
 .bss           0x00000000c002d164        0x0 krnl/intops.32
 .bss           0x00000000c002d164        0x0 krnl/kheap.32
 .bss           0x00000000c002d164        0x0 krnl/mailbox.32
 .bss           0x00000000c002d164        0x0 krnl/main.32
 .bss           0x00000000c002d164        0x0 krnl/mutex.32
 .bss           0x00000000c002d164        0x1 krnl/panic.32
                0x00000000c002d164                keKernelPanicHappening
 *fill*         0x00000000c002d165        0x3 
 .bss           0x00000000c002d168       0x28 krnl/physmgr.32
                0x00000000c002d168                Phys::forbidEvictions
                0x00000000c002d16c                Phys::currentPagePointer
                0x00000000c002d170                Phys::highestMem
                0x00000000c002d174                Phys::oldPercent
                0x00000000c002d178                Phys::usedPages
                0x00000000c002d17c                Phys::usablePages
                0x00000000c002d180                Phys::dmaUsage
 .bss           0x00000000c002d190        0x0 krnl/pipe.32
 *fill*         0x00000000c002d190       0x10 
 .bss           0x00000000c002d1a0       0x48 krnl/powctrl.32
                0x00000000c002d1a0                keSleepFunction
                0x00000000c002d1a4                keRestartFunction
                0x00000000c002d1a8                keShutdownFunction
                0x00000000c002d1ac                powCtrlOnBattery
                0x00000000c002d1c0                currentPowerSettings
                0x00000000c002d1e4                secondsSinceLastUserIO
 .bss           0x00000000c002d1e8        0x8 krnl/random.32
                0x00000000c002d1e8                kiRandSeed
 .bss           0x00000000c002d1f0        0x0 krnl/resolve.32
 .bss           0x00000000c002d1f0        0x0 krnl/semaphore.32
 .bss           0x00000000c002d1f0        0x0 krnl/signal.32
 .bss           0x00000000c002d1f0        0x0 krnl/syscalls.32
 .bss           0x00000000c002d1f0        0x9 krnl/terminal.32
                0x00000000c002d1f0                terminalCycle
                0x00000000c002d1f4                activeTerminal
                0x00000000c002d1f8                VgaText::graphicMode
 *fill*         0x00000000c002d1f9        0x1 
 .bss           0x00000000c002d1fa        0x2 krnl/tss.32
                0x00000000c002d1fa                doubleFaultSelector
 *fill*         0x00000000c002d1fc        0x4 
 .bss           0x00000000c002d200       0x84 krnl/unixfile.32
                0x00000000c002d200                sfileLpt
                0x00000000c002d240                sfileCom
                0x00000000c002d264                sfileNul
                0x00000000c002d268                sfilePnt
                0x00000000c002d26c                sfileAux
                0x00000000c002d270                sfileCon
                0x00000000c002d274                initialFilesAdded
                0x00000000c002d278                unixFileLinkedList
 .bss           0x00000000c002d284       0x10 krnl/virtmgr.32
                0x00000000c002d284                twswaps
                0x00000000c002d288                swapBalance
                0x00000000c002d28c                Virt::swapfileBitmap
                0x00000000c002d290                keFirstVAS
 .bss           0x00000000c002d294        0x0 sys/alarm.32
 .bss           0x00000000c002d294        0x0 sys/eject.32
 .bss           0x00000000c002d294        0x0 sys/exit.32
 .bss           0x00000000c002d294        0x0 sys/getcwd.32
 .bss           0x00000000c002d294        0x0 sys/getpid.32
 .bss           0x00000000c002d294        0x0 sys/getramdata.32
 .bss           0x00000000c002d294        0x0 sys/getvgaptr.32
 .bss           0x00000000c002d294        0x0 sys/kill.32
 .bss           0x00000000c002d294        0x0 sys/loaddll.32
 .bss           0x00000000c002d294        0x0 sys/pause.32
 .bss           0x00000000c002d294        0x0 sys/pthread.32
 .bss           0x00000000c002d294        0x0 sys/read.32
 .bss           0x00000000c002d294        0x0 sys/registersignal.32
 .bss           0x00000000c002d294        0x0 sys/registry.32
 .bss           0x00000000c002d294        0x0 sys/sbrk.32
 .bss           0x00000000c002d294        0x0 sys/setcwd.32
 .bss           0x00000000c002d294        0x0 sys/settime.32
 .bss           0x00000000c002d294        0x0 sys/symlink.32
 .bss           0x00000000c002d294        0x0 sys/timezone.32
 .bss           0x00000000c002d294        0x0 sys/truncate.32
 .bss           0x00000000c002d294        0x0 sys/write.32
 .bss           0x00000000c002d294        0x0 sys/wsbe.32
 .bss           0x00000000c002d294        0x0 sys/yield.32
 .bss           0x00000000c002d294        0x0 thr/alarm.32
 *fill*         0x00000000c002d294        0xc 
 .bss           0x00000000c002d2a0       0x64 thr/elf.32
                0x00000000c002d2a0                Thr::kernelSymbols
                0x00000000c002d2c0                Thr::kernelStringTable
                0x00000000c002d2e0                Thr::kernelSymbolTable
                0x00000000c002d300                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002d304        0x0 thr/elf2.32
 .bss           0x00000000c002d304        0x0 thr/exec.32
 *fill*         0x00000000c002d304        0x4 
 .bss           0x00000000c002d308       0x70 thr/prcssthr.32
                0x00000000c002d308                keRestorePreemptionValue
                0x00000000c002d30c                kePreemptionDisableCounter
                0x00000000c002d310                cleanerThread
                0x00000000c002d314                weNeedTheCleanerToNotBlock
                0x00000000c002d318                retValLockStuff
                0x00000000c002d31c                retValSchedLock
                0x00000000c002d320                lockStuffLock
                0x00000000c002d324                schedulerLock
                0x00000000c002d328                taskSwitchesPostponedFlag
                0x00000000c002d32c                postponeTaskSwitchesCounter
                0x00000000c002d330                irqDisableCounter
                0x00000000c002d334                terminatedTaskList
                0x00000000c002d340                sleepingTaskList
                0x00000000c002d34c                taskList
                0x00000000c002d358                kernelProcess
 *fill*         0x00000000c002d378        0x8 
 .bss           0x00000000c002d380       0x40 vm86/vm8086.32
                0x00000000c002d380                Vm::started8086Yet
                0x00000000c002d384                Vm::vmRetV
                0x00000000c002d388                Vm::vmDone
                0x00000000c002d389                Vm::vmReady
                0x00000000c002d38c                Vm::vm86Thread
                0x00000000c002d390                Vm::vmToHostCommsPtr
                0x00000000c002d3a0                Vm::vmToHostComms
 .bss           0x00000000c002d3c0       0x41 arch/i386/apic.32
                0x00000000c002d3c0                noOfIOAPICs
                0x00000000c002d3e0                ioapics
                0x00000000c002d400                IOAPICsSetupYet
 *fill*         0x00000000c002d401        0x3 
 .bss           0x00000000c002d404       0x50 arch/i386/hal.32
                0x00000000c002d404                guiPanicHandler
                0x00000000c002d408                fpuOwner
                0x00000000c002d40c                coproLoadFunc
                0x00000000c002d410                coproSaveFunc
                0x00000000c002d414                lastD
                0x00000000c002d418                lastC
                0x00000000c002d41c                lastB
                0x00000000c002d420                lastA
                0x00000000c002d424                HalPageWriteCombiningFlag
                0x00000000c002d428                HalPageGlobalFlag
                0x00000000c002d42c                keNMIEnabled
                0x00000000c002d430                vendorIDString
                0x00000000c002d43d                familyID
                0x00000000c002d43e                model
                0x00000000c002d43f                processorType
                0x00000000c002d440                steppingID
                0x00000000c002d444                vendor
                0x00000000c002d448                opcodeDetectionMode
                0x00000000c002d44c                features
 *fill*         0x00000000c002d454        0xc 
 .bss           0x00000000c002d460     0x2000 arch/i386/intctrl.32
                0x00000000c002d460                keInterruptContexts
                0x00000000c002e460                keInterruptHandlers
 .bss           0x00000000c002f460        0x0 arch/i386/pic.32
 .bss           0x00000000c002f460        0x2 arch/i386/rtc.32
 .bss           0x00000000c002f462        0x0 arch/i386/vga.32
 *fill*         0x00000000c002f462       0x1e 
 .bss           0x00000000c002f480       0xf0 fs/fat/vfslink.32
                0x00000000c002f480                FAT::fats
                0x00000000c002f4a0                FAT::vfsToFatRemaps
                0x00000000c002f520                fatToVFSRemaps
 .bss           0x00000000c002f570        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002f570       0x10 
 .bss           0x00000000c002f580      0x820 fs/iso9660/vfslink.32
                0x00000000c002f580                iso9660Owner
                0x00000000c002f584                recentSector
                0x00000000c002f5a0                recentBuffer
 .bss           0x00000000c002fda0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002fda0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002fda0        0xd hw/bus/pci.32
                0x00000000c002fda0                thePCI
 .bss           0x00000000c002fdad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002fdad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002fdad        0x3 
 .bss           0x00000000c002fdb0        0x8 hw/diskphys/ata.32
                0x00000000c002fdb0                ataSectorsWritten
                0x00000000c002fdb4                ataSectorsRead
 .bss           0x00000000c002fdb8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002fdb8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002fdb8        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c002fdb8        0x0 hw/timer/apictimer.32
 .bss           0x00000000c002fdb8        0x4 hw/timer/pit.32
                0x00000000c002fdb8                pitFreq
 .bss           0x00000000c002fdbc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002fdbc        0x0 crtn.32
 .bss           0x00000000c002fdbc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002fdbc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002fdbc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002fdbc        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002fdbc                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0036b77                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
