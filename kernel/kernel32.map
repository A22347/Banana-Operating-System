Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1fa8a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6f3 core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006cd9                Krnl::firstTask()
                0x00000000c0006e16                Computer::Computer()
                0x00000000c0006e16                Computer::Computer()
                0x00000000c0006ec6                Computer::setBootMessage(char const*)
                0x00000000c0006ec8                Computer::detectFeatures()
                0x00000000c00070ee                Computer::displayFeatures()
                0x00000000c00070f0                Computer::rdmsr(unsigned int)
                0x00000000c000711c                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007158                Computer::shutdown()
                0x00000000c0007170                Computer::restart()
                0x00000000c0007188                Computer::sleep()
                0x00000000c000719c                Computer::nmiEnabled()
                0x00000000c00071a8                Computer::readCMOS(unsigned char)
                0x00000000c00071c6                Computer::enableNMI(bool)
                0x00000000c00071de                Computer::open(int, int, void*)
                0x00000000c00072b2                Computer::disableNMI()
                0x00000000c00072c2                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072e6                Computer::handleNMI()
 *fill*         0x00000000c0007351        0x1 
 .text          0x00000000c0007352      0x1db core/gdt.32
                0x00000000c0007352                GDTEntry::setBase(unsigned int)
                0x00000000c000736e                GDTEntry::setLimit(unsigned int)
                0x00000000c000738c                GDT::GDT()
                0x00000000c000738c                GDT::GDT()
                0x00000000c00073a2                GDT::addEntry(GDTEntry)
                0x00000000c00073c4                GDT::getNumberOfEntries()
                0x00000000c00073cc                GDT::flush()
                0x00000000c00073ee                GDT::setup()
 .text          0x00000000c000752d       0x1d core/idle.32
                0x00000000c000752d                idleFunction(void*)
 *fill*         0x00000000c000754a        0x2 
 .text          0x00000000c000754c      0x46c core/idt.32
                0x00000000c000754c                IDTEntry::IDTEntry(bool)
                0x00000000c000754c                IDTEntry::IDTEntry(bool)
                0x00000000c00075c6                IDTEntry::setOffset(unsigned int)
                0x00000000c00075dc                IDT::IDT()
                0x00000000c00075dc                IDT::IDT()
                0x00000000c00075de                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075e6                IDT::addEntry(IDTEntry, int)
                0x00000000c0007600                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007638                IDT::flush()
                0x00000000c0007652                IDT::setup()
 .text          0x00000000c00079b8      0x188 core/kheap.32
                0x00000000c00079b8                sbrk
                0x00000000c0007a4f                mmap
                0x00000000c0007a65                munmap
                0x00000000c0007a7b                liballoc_lock()
                0x00000000c0007a89                liballoc_unlock()
                0x00000000c0007a9f                liballoc_alloc(int)
                0x00000000c0007ab7                liballoc_free(void*, int)
                0x00000000c0007ad2                realloc
                0x00000000c0007ae6                malloc
                0x00000000c0007af6                free
                0x00000000c0007b06                rfree
                0x00000000c0007b16                calloc
 .text          0x00000000c0007b40       0xc7 core/main.32
                0x00000000c0007b40                KeEntryPoint
 .text          0x00000000c0007c07      0x644 core/physmgr.32
                0x00000000c0007c07                Phys::allocateDMA(unsigned long)
                0x00000000c0007cef                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d2a                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d6a                Phys::getPageState(unsigned long)
                0x00000000c0007d86                Phys::freePage(unsigned long)
                0x00000000c0007def                Phys::allocatePage()
                0x00000000c0007ebe                Phys::allocateContiguousPages(int)
                0x00000000c0007f25                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f5d                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000824b        0x1 
 .text          0x00000000c000824c      0x273 core/pipe.32
                0x00000000c000824c                Pipe::isAtty()
                0x00000000c0008250                Pipe::~Pipe()
                0x00000000c0008250                Pipe::~Pipe()
                0x00000000c0008274                Pipe::~Pipe()
                0x00000000c000829c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000835c                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008458                Pipe::Pipe(int)
                0x00000000c0008458                Pipe::Pipe(int)
 *fill*         0x00000000c00084bf        0x1 
 .text          0x00000000c00084c0      0xab3 core/terminal.32
                0x00000000c00084c0                VgaText::isAtty()
                0x00000000c00084c4                VgaText::~VgaText()
                0x00000000c00084c4                VgaText::~VgaText()
                0x00000000c00084e8                VgaText::~VgaText()
                0x00000000c0008512                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008532                setTerminalScrollLock(bool)
                0x00000000c0008533                doTerminalCycle()
                0x00000000c0008534                addToTerminalCycle(VgaText*)
                0x00000000c0008535                scrollTerminalScrollLock(int)
                0x00000000c0008536                VgaText::updateTitle()
                0x00000000c0008538                VgaText::load()
                0x00000000c000853a                VgaText::updateCursor()
                0x00000000c0008550                VgaText::doANSI_SGR(int)
                0x00000000c00085c4                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085d4                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085e4                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0008604                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008610                VgaText::setTitleColour(VgaColour)
                0x00000000c000861c                VgaText::setTitle(char*)
                0x00000000c000861e                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008630                VgaText::scrollScreen()
                0x00000000c00086c2                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086d2                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008762                VgaText::getCursorX()
                0x00000000c000876a                VgaText::getCursorY()
                0x00000000c0008772                VgaText::setCursor(int, int)
                0x00000000c0008789                setActiveTerminal(VgaText*)
                0x00000000c00087d4                VgaText::clearScreen()
                0x00000000c0008822                VgaText::setCursorX(int)
                0x00000000c000883a                VgaText::setCursorY(int)
                0x00000000c0008852                VgaText::incrementCursor(bool)
                0x00000000c00088a6                VgaText::decrementCursor(bool)
                0x00000000c00088c8                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008998                VgaText::putchar(char)
                0x00000000c0008a90                VgaText::putx(unsigned int)
                0x00000000c0008ad6                VgaText::puts(char const*)
                0x00000000c0008afc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b48                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c96                VgaText::VgaText(char const*)
                0x00000000c0008c96                VgaText::VgaText(char const*)
                0x00000000c0008de6                VgaText::receiveKey(unsigned char)
                0x00000000c0008f72                VgaText::doUpdate()
 *fill*         0x00000000c0008f73        0x1 
 .text          0x00000000c0008f74      0x1a1 core/tss.32
                0x00000000c0008f74                TSS::TSS()
                0x00000000c0008f74                TSS::TSS()
                0x00000000c0008f84                TSS::setESP(unsigned long)
                0x00000000c0008f98                TSS::flush()
                0x00000000c0008fb8                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0009115        0x1 
 .text          0x00000000c0009116      0x4ca core/unixfile.32
                0x00000000c0009116                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000916c                ReservedFilename::isAtty()
                0x00000000c0009188                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091e6                UnixFile::getFileDescriptor()
                0x00000000c00091ee                UnixFile::UnixFile(int)
                0x00000000c00091ee                UnixFile::UnixFile(int)
                0x00000000c00093a2                ReservedFilename::ReservedFilename(int)
                0x00000000c00093a2                ReservedFilename::ReservedFilename(int)
                0x00000000c00093d4                UnixFile::~UnixFile()
                0x00000000c00093d4                UnixFile::~UnixFile()
                0x00000000c0009470                UnixFile::~UnixFile()
                0x00000000c0009498                ReservedFilename::~ReservedFilename()
                0x00000000c0009498                ReservedFilename::~ReservedFilename()
                0x00000000c00094bc                ReservedFilename::~ReservedFilename()
                0x00000000c00094e3                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095e0     0x1218 core/virtmgr.32
                0x00000000c00095e0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000961a                Virt::getPageState(unsigned long)
                0x00000000c000963d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009762                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009785                Virt::swapIDToSector(unsigned long)
                0x00000000c000979b                Virt::allocateSwapfilePage()
                0x00000000c000981b                Virt::virtualMemorySetup()
                0x00000000c000986c                Virt::setupPageSwapping(int)
                0x00000000c00098de                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098e0                VAS::VAS(VAS*)
                0x00000000c00098e0                VAS::VAS(VAS*)
                0x00000000c000990e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000993c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000995b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a98                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009abc                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009ad6                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009b18                VAS::VAS()
                0x00000000c0009b18                VAS::VAS()
                0x00000000c0009b82                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009bb6                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009be2                VAS::~VAS()
                0x00000000c0009be2                VAS::~VAS()
                0x00000000c0009d50                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e54                VAS::allocatePages(int, int)
                0x00000000c0009f4a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009fa2                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a098                VAS::VAS(bool)
                0x00000000c000a098                VAS::VAS(bool)
                0x00000000c000a2e2                VAS::evict(unsigned long)
                0x00000000c000a3c0                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a55a                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a5ce                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5fa                VAS::scanForEviction()
                0x00000000c000a6fd                mapVASFirstTime
 .text          0x00000000c000a7f8       0x5f coreobjs/c++.32
                0x00000000c000a7f8                __cxa_atexit
                0x00000000c000a7fb                __cxa_finalize
                0x00000000c000a7fc                __stack_chk_fail
                0x00000000c000a832                __cxa_pure_virtual
                0x00000000c000a843                operator new[](unsigned long)
                0x00000000c000a848                operator delete(void*, unsigned long)
                0x00000000c000a84d                operator delete[](void*)
                0x00000000c000a852                operator delete[](void*, unsigned long)
 .text          0x00000000c000a857      0x254 dbg/kconsole.32
                0x00000000c000a857                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8f7                Dbg::logc(char)
                0x00000000c000a917                Dbg::logs(char*)
                0x00000000c000a936                Dbg::logWriteInt(unsigned int)
                0x00000000c000a954                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a975                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aaab        0x1 
 .text          0x00000000c000aaac      0x2d4 dbg/usban.32
                0x00000000c000aaac                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000ab18                __ubsan_handle_type_mismatch_v1
                0x00000000c000abf4                __ubsan_handle_pointer_overflow
                0x00000000c000ac20                __ubsan_handle_out_of_bounds
                0x00000000c000ac4c                __ubsan_handle_add_overflow
                0x00000000c000ac78                __ubsan_handle_load_invalid_value
                0x00000000c000aca4                __ubsan_handle_divrem_overflow
                0x00000000c000acd0                __ubsan_handle_mul_overflow
                0x00000000c000acfc                __ubsan_handle_sub_overflow
                0x00000000c000ad28                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad54                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad80      0x86d fs/symlink.32
                0x00000000c000aecf                KiDeinitialiseSymlinks(void*)
                0x00000000c000af62                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c000aff4                KeInitialiseSymlinks()
                0x00000000c000b168                KiIsSymlinkRegistered(char const*)
                0x00000000c000b2ec                KeDereferenceSymlink(char const*, char*)
                0x00000000c000b493                KeCreateSymlink(char const*, char const*)
 *fill*         0x00000000c000b5ed        0x1 
 .text          0x00000000c000b5ee      0xd68 fs/vfs.32
                0x00000000c000b5ee                File::read(unsigned long long, void*, int*)
                0x00000000c000b646                File::write(unsigned long long, void*, int*)
                0x00000000c000b69e                Directory::read(unsigned long long, void*, int*)
                0x00000000c000b6f6                Directory::write(unsigned long long, void*, int*)
                0x00000000c000b724                File::isAtty()
                0x00000000c000b728                Directory::isAtty()
                0x00000000c000b72c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000b732                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000b738                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000b73e                File::~File()
                0x00000000c000b73e                File::~File()
                0x00000000c000b762                File::~File()
                0x00000000c000b78c                Directory::~Directory()
                0x00000000c000b78c                Directory::~Directory()
                0x00000000c000b7b0                Directory::~Directory()
                0x00000000c000b7da                Filesystem::Filesystem()
                0x00000000c000b7da                Filesystem::Filesystem()
                0x00000000c000b7fe                Filesystem::~Filesystem()
                0x00000000c000b7fe                Filesystem::~Filesystem()
                0x00000000c000b80c                Filesystem::~Filesystem()
                0x00000000c000b830                Fs::getcwd(Process*, char*, int)
                0x00000000c000b85a                Fs::initVFS()
                0x00000000c000b884                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c000ba9e                File::File(char const*, Process*, bool)
                0x00000000c000ba9e                File::File(char const*, Process*, bool)
                0x00000000c000bb7c                File::File(char const*, Process*)
                0x00000000c000bb7c                File::File(char const*, Process*)
                0x00000000c000bb9a                File::open(FileOpenMode)
                0x00000000c000bbf8                File::close()
                0x00000000c000bc58                File::seek(unsigned long long)
                0x00000000c000bcae                File::truncate(unsigned long long)
                0x00000000c000bd04                File::tell(unsigned long long*)
                0x00000000c000bd54                File::rewind()
                0x00000000c000bd68                File::unlink()
                0x00000000c000bdb4                File::rename(char const*)
                0x00000000c000be02                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000be5e                File::exists()
                0x00000000c000be9c                File::stat(unsigned long long*, bool*)
                0x00000000c000befd                Fs::setcwd(Process*, char*)
                0x00000000c000c05c                Directory::Directory(char const*, Process*)
                0x00000000c000c05c                Directory::Directory(char const*, Process*)
                0x00000000c000c124                Directory::open()
                0x00000000c000c180                Directory::close()
                0x00000000c000c1e0                Directory::unlink()
                0x00000000c000c22c                Directory::rename(char const*)
                0x00000000c000c27a                Directory::exists()
                0x00000000c000c2b8                Directory::read(dirent*)
                0x00000000c000c304                Directory::create()
                0x00000000c000c350                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000c356        0x2 
 .text          0x00000000c000c358       0x86 hal/bus.32
                0x00000000c000c358                Bus::Bus(char const*)
                0x00000000c000c358                Bus::Bus(char const*)
                0x00000000c000c390                Bus::~Bus()
                0x00000000c000c390                Bus::~Bus()
                0x00000000c000c3b4                Bus::~Bus()
 .text          0x00000000c000c3de       0x96 hal/buzzer.32
                0x00000000c000c3de                beepThread(void*)
                0x00000000c000c41b                Krnl::beep(int, int, bool)
 .text          0x00000000c000c474      0x45f hal/clock.32
                0x00000000c000c474                User::loadClockSettings(int)
                0x00000000c000c4c6                Clock::Clock(char const*)
                0x00000000c000c4c6                Clock::Clock(char const*)
                0x00000000c000c4fc                Clock::~Clock()
                0x00000000c000c4fc                Clock::~Clock()
                0x00000000c000c520                Clock::~Clock()
                0x00000000c000c54a                Clock::timeInSecondsLocal()
                0x00000000c000c592                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000c5eb                datetimeToSeconds(datetime_t)
                0x00000000c000c70a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000c76a                secondsToDatetime(unsigned long long)
                0x00000000c000c8ae                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000c8d3        0x1 
 .text          0x00000000c000c8d4      0x49e hal/device.32
                0x00000000c000c8d4                Device::hibernate()
                0x00000000c000c8d6                Device::wake()
                0x00000000c000c8d8                Device::detect()
                0x00000000c000c8da                Device::disableLegacy()
                0x00000000c000c8dc                Device::powerSaving(PowerSavingLevel)
                0x00000000c000c8de                DriverlessDevice::close(int, int, void*)
                0x00000000c000c8e2                DriverlessDevice::detect()
                0x00000000c000c8e4                DriverlessDevice::open(int, int, void*)
                0x00000000c000c8f8                Device::~Device()
                0x00000000c000c8f8                Device::~Device()
                0x00000000c000c906                Device::~Device()
                0x00000000c000c92e                Device::findAndLoadDriver()
                0x00000000c000c93c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c962                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c9a2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c9cc                Device::getParent()
                0x00000000c000c9d8                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c9f6                Device::addChild(Device*)
                0x00000000c000ca3a                Device::removeAllChildren()
                0x00000000c000ca80                Device::hibernateAll()
                0x00000000c000cab0                Device::wakeAll()
                0x00000000c000cae0                Device::detectAll()
                0x00000000c000cb10                Device::disableLegacyAll()
                0x00000000c000cb12                Device::loadDriversForAll()
                0x00000000c000cb14                Device::closeAll()
                0x00000000c000cb84                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000cbba                Device::setName(char const*)
                0x00000000c000cbc8                Device::Device(char const*)
                0x00000000c000cbc8                Device::Device(char const*)
                0x00000000c000ccc4                Device::getName()
                0x00000000c000ccce                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000ccce                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000cd04                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000cd48                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000cd72        0x2 
 .text          0x00000000c000cd74       0x86 hal/diskctrl.32
                0x00000000c000cd74                HardDiskController::HardDiskController(char const*)
                0x00000000c000cd74                HardDiskController::HardDiskController(char const*)
                0x00000000c000cdac                HardDiskController::~HardDiskController()
                0x00000000c000cdac                HardDiskController::~HardDiskController()
                0x00000000c000cdd0                HardDiskController::~HardDiskController()
 .text          0x00000000c000cdfa       0xe2 hal/diskphys.32
                0x00000000c000cdfa                PhysicalDisk::eject()
                0x00000000c000cdfe                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000cdfe                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000ce66                PhysicalDisk::startCache()
                0x00000000c000ce8e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ce8e                PhysicalDisk::~PhysicalDisk()
                0x00000000c000ceb2                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000cedc        0x0 hal/fpu.32
 .text          0x00000000c000cedc      0x359 hal/intctrl.32
                0x00000000c000cedc                int_handler
                0x00000000c000cf66                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000cfb0                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000d0e4                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000d118                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000d196                setupINTS()
                0x00000000c000d1f3                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000d235        0x1 
 .text          0x00000000c000d236      0x8be hal/keybrd.32
                0x00000000c000d236                startGUI(void*)
                0x00000000c000d2a4                startGUIVESA(void*)
                0x00000000c000d312                sendKeyToTerminal(unsigned char)
                0x00000000c000d3ed                sendKeyboardToken(KeyboardToken)
                0x00000000c000d8d7                clearInternalKeybuffer(VgaText*)
                0x00000000c000d90c                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000da6a                Keyboard::Keyboard(char const*)
                0x00000000c000da6a                Keyboard::Keyboard(char const*)
                0x00000000c000daa6                Keyboard::~Keyboard()
                0x00000000c000daa6                Keyboard::~Keyboard()
                0x00000000c000daca                Keyboard::~Keyboard()
 .text          0x00000000c000daf4      0x3f8 hal/logidisk.32
                0x00000000c000daf4                LogicalDisk::close(int, int, void*)
                0x00000000c000daf8                LogicalDisk::~LogicalDisk()
                0x00000000c000daf8                LogicalDisk::~LogicalDisk()
                0x00000000c000db1c                LogicalDisk::~LogicalDisk()
                0x00000000c000db46                LogicalDisk::open(int, int, void*)
                0x00000000c000db5a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000db92                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000dbd8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dbd8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000dc98                LogicalDisk::assignDriveLetter()
                0x00000000c000dd52                LogicalDisk::mount()
                0x00000000c000dd9a                LogicalDisk::unmount()
                0x00000000c000ddaa                LogicalDisk::eject()
                0x00000000c000ddbe                LogicalDisk::unassignDriveLetter()
                0x00000000c000de14                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000de80                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000deec       0x86 hal/mouse.32
                0x00000000c000deec                Mouse::Mouse(char const*)
                0x00000000c000deec                Mouse::Mouse(char const*)
                0x00000000c000df24                Mouse::~Mouse()
                0x00000000c000df24                Mouse::~Mouse()
                0x00000000c000df48                Mouse::~Mouse()
 .text          0x00000000c000df72       0x90 hal/nic.32
                0x00000000c000df72                NIC::getMAC()
                0x00000000c000df78                NIC::write(int, unsigned char*, int*)
                0x00000000c000df7e                NIC::NIC(char const*)
                0x00000000c000df7e                NIC::NIC(char const*)
                0x00000000c000dfb4                NIC::~NIC()
                0x00000000c000dfb4                NIC::~NIC()
                0x00000000c000dfd8                NIC::~NIC()
 .text          0x00000000c000e002      0x33b hal/partition.32
                0x00000000c000e002                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000e0aa                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000e33d        0x3 
 .text          0x00000000c000e340       0x86 hal/serial.32
                0x00000000c000e340                Serial::Serial(char const*)
                0x00000000c000e340                Serial::Serial(char const*)
                0x00000000c000e378                Serial::~Serial()
                0x00000000c000e378                Serial::~Serial()
                0x00000000c000e39c                Serial::~Serial()
 *fill*         0x00000000c000e3c6        0x2 
 .text          0x00000000c000e3c8      0x234 hal/timer.32
                0x00000000c000e3c8                Timer::Timer(char const*)
                0x00000000c000e3c8                Timer::Timer(char const*)
                0x00000000c000e400                Timer::~Timer()
                0x00000000c000e400                Timer::~Timer()
                0x00000000c000e424                Timer::~Timer()
                0x00000000c000e44e                Timer::read()
                0x00000000c000e459                setupTimer(int)
                0x00000000c000e494                timerHandler(unsigned int)
 .text          0x00000000c000e5fc      0x444 hal/vcache.32
                0x00000000c000e5fc                VCache::VCache(PhysicalDisk*)
                0x00000000c000e5fc                VCache::VCache(PhysicalDisk*)
                0x00000000c000e76c                VCache::invalidateReadBuffer()
                0x00000000c000e77c                VCache::writeWriteBuffer()
                0x00000000c000e7c8                VCache::~VCache()
                0x00000000c000e7c8                VCache::~VCache()
                0x00000000c000e820                VCache::~VCache()
                0x00000000c000e848                VCache::write(unsigned long long, int, void*)
                0x00000000c000e936                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000ea40      0x4c7 hal/video.32
                0x00000000c000ea40                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000ea8c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000eafc                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000eb7a                Video::clearScreen(unsigned int)
                0x00000000c000ebae                Video::putpixel(int, int, unsigned int)
                0x00000000c000ebbc                Video::readPixelApprox(int, int)
                0x00000000c000ebd0                Video::Video(char const*)
                0x00000000c000ebd0                Video::Video(char const*)
                0x00000000c000ec06                Video::~Video()
                0x00000000c000ec06                Video::~Video()
                0x00000000c000ec2a                Video::~Video()
                0x00000000c000ec54                Video::isMonochrome()
                0x00000000c000ec60                Video::getWidth()
                0x00000000c000ec6c                Video::getHeight()
                0x00000000c000ec78                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000ed34                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000ee9c                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000ef07        0x1 
 .text          0x00000000c000ef08     0x1413 hw/acpi.32
                0x00000000c000ef08                ACPI::close(int, int, void*)
                0x00000000c000f044                findRSDP()
                0x00000000c000f0dc                loadACPITables(unsigned char*)
                0x00000000c000f348                findRSDT(unsigned char*)
                0x00000000c000f4a0                findDataTable(unsigned char*, char*)
                0x00000000c000f520                scanMADT()
                0x00000000c000f9d8                ACPI::ACPI()
                0x00000000c000f9d8                ACPI::ACPI()
                0x00000000c000fa2c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000fb28                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000fbf4                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000fbfc                ACPI::detectPCI()
                0x00000000c000fe1c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000fe64                ACPI::sleep()
                0x00000000c000fe80                ACPI::open(int, int, void*)
 *fill*         0x00000000c001031b        0x1 
 .text          0x00000000c001031c      0xbc5 hw/cpu.32
                0x00000000c001031c                CPU::close(int, int, void*)
                0x00000000c0010320                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c001033c                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c0010354                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c00103c8                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c001044c                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c001047a                CPU::cpuidCheckECX(unsigned int)
                0x00000000c00104a8                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00104d6                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0010504                CPU::CPU()
                0x00000000c0010504                CPU::CPU()
                0x00000000c0010592                CPU::displayFeatures()
                0x00000000c0010594                CPU::detectFeatures()
                0x00000000c0010c68                CPU::setupSMEP()
                0x00000000c0010c74                CPU::setupUMIP()
                0x00000000c0010c7e                CPU::setupTSC()
                0x00000000c0010c88                CPU::setupLargePages()
                0x00000000c0010c92                CPU::setupPAT()
                0x00000000c0010cce                CPU::setupMTRR()
                0x00000000c0010cd0                CPU::setupGlobalPages()
                0x00000000c0010cda                CPU::allowUsermodeDataAccess()
                0x00000000c0010cec                CPU::prohibitUsermodeDataAccess()
                0x00000000c0010cfe                CPU::setupSMAP()
                0x00000000c0010d0c                CPU::setupFeatures()
                0x00000000c0010dd8                CPU::open(int, int, void*)
 .text          0x00000000c0010ee1       0xb6 krnl/atexit.32
                0x00000000c0010ee1                KeInitialiseAtexit()
                0x00000000c0010f00                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c0010f34                KeExecuteAtexit()
 .text          0x00000000c0010f97       0xdf krnl/bootmsg.32
                0x00000000c0010f97                KeDisplaySplashScreen()
                0x00000000c0011013                KeSetBootMessage(char const*)
 *fill*         0x00000000c0011076        0x2 
 .text          0x00000000c0011078       0x1d krnl/compat.32
                0x00000000c0011078                Krnl::handlePowerButton()
                0x00000000c0011088                Krnl::handleSleepButton()
 .text          0x00000000c0011095       0x2b krnl/crc32.32
                0x00000000c0011095                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c00110c0      0x5bf krnl/env.32
                0x00000000c00110c0                EnvVarContainer::getEnv(char const*)
                0x00000000c00110fe                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00111c0                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00111c2                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00113e6                EnvVarContainer::__loadSystem()
                0x00000000c0011400                EnvVarContainer::__loadUser()
                0x00000000c0011402                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011402                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0011424                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011424                EnvVarContainer::~EnvVarContainer()
                0x00000000c0011454                KeGetEnv(Process*, char const*)
                0x00000000c00114b9                KeSetEnvSystem(char const*, char const*)
                0x00000000c00114d3                KeSetEnvUser(char const*, char const*)
                0x00000000c00114f2                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0011505                KeDeleteEnvSystem(char const*)
                0x00000000c0011506                KeDeleteEnvUser(char const*)
                0x00000000c0011507                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0011508                KeNewProcessEnv(Process*)
                0x00000000c001152a                KeCopyProcessEnv(Process*, Process*)
                0x00000000c0011576                KeLoadSystemEnv()
                0x00000000c00115a4                KeLoadUserEnv()
                0x00000000c00115ca                KeFlushEnv()
                0x00000000c00115cb                KeGetProcessTotalEnvCount(Process*)
                0x00000000c00115eb                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c001167f       0x94 krnl/inlines.32
                0x00000000c001167f                CPU::current()
                0x00000000c001168b                operator new(unsigned long)
                0x00000000c0011690                operator delete(void*)
                0x00000000c0011695                disableIRQs()
                0x00000000c0011697                enableIRQs()
                0x00000000c0011699                lockScheduler()
                0x00000000c00116a1                unlockScheduler()
                0x00000000c00116b0                lockStuff()
                0x00000000c00116be                unlockStuff()
                0x00000000c00116f8                Virt::getAKernelVAS()
                0x00000000c00116fe                __not_memcpy
 .text          0x00000000c0011713        0xc krnl/panic.32
                0x00000000c0011713                KePanic(char const*)
 .text          0x00000000c001171f      0x142 krnl/powctrl.32
                0x00000000c001171f                KePowerThread(void*)
                0x00000000c001174d                KeChangePowerSettings(PowerSettings)
                0x00000000c0011763                KeUserIOReceived()
                0x00000000c001176e                KeHandlePowerButton()
                0x00000000c00117a3                KeHandleSleepButton()
                0x00000000c00117d8                KeSetupPowerManager()
 .text          0x00000000c0011861       0x9d krnl/random.32
                0x00000000c0011861                KeRand()
                0x00000000c00118a3                KeSeedRand(unsigned int)
                0x00000000c00118cc                KeInitRand()
 *fill*         0x00000000c00118fe        0x2 
 .text          0x00000000c0011900      0x1bc krnl/resolve.32
                0x00000000c0011900                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0011abc      0x322 krnl/signal.32
                0x00000000c0011abc                KiSigKill(int)
                0x00000000c0011ad0                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011ad1                KiDefaultSignalHandlerPause(int)
                0x00000000c0011afd                KiDefaultSignalHandlerResume(int)
                0x00000000c0011b29                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0011b2e                KeInitSignals()
                0x00000000c0011b80                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011bb6                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011c33                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011d2a                KiCheckSignalZ
                0x00000000c0011d6c                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0011da7                KiFinishSignalZ
 .text          0x00000000c0011dde      0xe10 krnl/syscalls.32
                0x00000000c0011dde                SysSeekDir(regs*)
                0x00000000c0011de3                SysTellDir(regs*)
                0x00000000c0011de8                SysVerify(regs*)
                0x00000000c0011df2                SysGetArgc(regs*)
                0x00000000c0011e06                SysTTYName(regs*)
                0x00000000c0011e0e                SysFormatDisk(regs*)
                0x00000000c0011e85                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011ed9                SysGetDiskVolumeLabel(regs*)
                0x00000000c0011f32                SysShutdown(regs*)
                0x00000000c0011f90                SysRealpath(regs*)
                0x00000000c0011fd4                SysReadDir(regs*)
                0x00000000c0012054                SysIsATTY(regs*)
                0x00000000c00120ae                SysSeek(regs*)
                0x00000000c0012105                SysTell(regs*)
                0x00000000c0012172                SysSize(regs*)
                0x00000000c00121e5                SysSizeFromFilename(regs*)
                0x00000000c0012316                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0012447                SysClose(regs*)
                0x00000000c00124a7                SysOpenDir(regs*)
                0x00000000c0012524                SysMakeDir(regs*)
                0x00000000c0012592                SysCloseDir(regs*)
                0x00000000c00125e6                SysWait(regs*)
                0x00000000c0012607                SysNotImpl(regs*)
                0x00000000c0012622                SysPanic(regs*)
                0x00000000c001263d                SysRmdir(regs*)
                0x00000000c00126a2                SysUnlink(regs*)
                0x00000000c0012707                SysGetArgv(regs*)
                0x00000000c0012754                SysUSleep(regs*)
                0x00000000c001277d                SysSpawn(regs*)
                0x00000000c00127f0                SysGetEnv(regs*)
                0x00000000c00128a1                SysSetFatAttrib(regs*)
                0x00000000c0012914                SysPipe(regs*)
                0x00000000c0012959                SysGetUnixTime(regs*)
                0x00000000c001296d                string_ends_with(char const*, char const*)
                0x00000000c00129b5                SysOpen(regs*)
                0x00000000c0012bac                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0012bee        0x2 
 .text          0x00000000c0012bf0      0x159 net/ethernet.32
                0x00000000c0012bf0                KeSwitchEndian16(unsigned short)
                0x00000000c0012c14                KeSwitchEndian32(unsigned int)
                0x00000000c0012c44                EthernetCRC32(unsigned char*, int)
                0x00000000c0012ce8                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012d49      0xd56 reg/cm.32
                0x00000000c0012d49                CmOpen(char const*)
                0x00000000c0012e67                CmClose(Reghive_Tag*)
                0x00000000c0012e7d                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012eb9                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0012f30                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0012f6f                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012fa1                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012fdd                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0013005                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0013026                CmExpand(Reghive_Tag*, int)
                0x00000000c00130a1                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0013127                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c001321b                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0013357                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c00133b8                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c00133e8                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c001341f                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0013449                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0013489                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c001352d                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c001355b                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00136f9                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0013746                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00137c0                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c0013813                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00138d7                zStrtok(char*, char const*)
                0x00000000c0013949                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00139ca                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0013a6d                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0013a9f      0x52a reg/registry.32
                0x00000000c0013a9f                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013c10                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013d65                Reg::getLine(char*, char*, char*)
                0x00000000c0013d9c                Reg::readInt(char*, char*, int*)
                0x00000000c0013e8a                Reg::readString(char*, char*, char*, int)
                0x00000000c0013f0b                Reg::readBool(char*, char*, bool*)
                0x00000000c0013f30                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0013f5c                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0013f88                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013fc9       0x36 sys/eject.32
                0x00000000c0013fc9                SysEject(regs*)
 .text          0x00000000c0013fff       0x18 sys/exit.32
                0x00000000c0013fff                SysExit(regs*)
 .text          0x00000000c0014017       0x1f sys/getcwd.32
                0x00000000c0014017                SysGetCwd(regs*)
 .text          0x00000000c0014036        0xc sys/getpid.32
                0x00000000c0014036                SysGetPID(regs*)
 .text          0x00000000c0014042       0x1a sys/getramdata.32
                0x00000000c0014042                SysGetRAMData(regs*)
 .text          0x00000000c001405c       0x82 sys/getvgaptr.32
                0x00000000c001405c                SysGetVGAPtr(regs*)
 *fill*         0x00000000c00140de        0x2 
 .text          0x00000000c00140e0       0xb9 sys/kill.32
                0x00000000c00140e0                SysKill(regs*)
 .text          0x00000000c0014199       0xa8 sys/loaddll.32
                0x00000000c0014199                SysLoadDLL(regs*)
 .text          0x00000000c0014241       0x68 sys/read.32
                0x00000000c0014241                SysRead(regs*)
 .text          0x00000000c00142a9       0x29 sys/registersignal.32
                0x00000000c00142a9                SysRegisterSignal(regs*)
 .text          0x00000000c00142d2      0x19c sys/registry.32
                0x00000000c00142d2                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014349                SysRegistryReadExtent(regs*)
                0x00000000c0014391                SysRegistryPathToExtentLookup(regs*)
                0x00000000c00143b9                SysRegistryEnterDirectory(regs*)
                0x00000000c00143e1                SysRegistryGetNext(regs*)
                0x00000000c0014409                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014443                SysRegistryOpen(regs*)
                0x00000000c0014457                SysRegistryClose(regs*)
 .text          0x00000000c001446e       0x55 sys/sbrk.32
                0x00000000c001446e                SysSbrk(regs*)
 .text          0x00000000c00144c3       0x1c sys/setcwd.32
                0x00000000c00144c3                SysSetCwd(regs*)
 .text          0x00000000c00144df       0x96 sys/settime.32
                0x00000000c00144df                SysSetTime(regs*)
 .text          0x00000000c0014575       0x73 sys/symlink.32
                0x00000000c0014575                SysSymlink(regs*)
 .text          0x00000000c00145e8       0x4a sys/timezone.32
                0x00000000c00145e8                SysTimezone(regs*)
 .text          0x00000000c0014632       0xfc sys/truncate.32
                0x00000000c0014632                SysTruncate(regs*)
 .text          0x00000000c001472e       0x68 sys/write.32
                0x00000000c001472e                SysWrite(regs*)
 .text          0x00000000c0014796       0x62 sys/wsbe.32
                0x00000000c0014796                SysWsbe(regs*)
 .text          0x00000000c00147f8       0x25 sys/yield.32
                0x00000000c00147f8                SysYield(regs*)
 .text          0x00000000c001481d     0x11e6 thr/elf.32
                0x00000000c001481d                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014aab                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014cbd                Thr::runtimeReferenceHelper()
                0x00000000c0014cd0                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014d1f                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0014fdd                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015716                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015748                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001577f                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015799                Thr::loadDLL(char const*, bool)
                0x00000000c00159ca                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0015a03        0x1 
 .text          0x00000000c0015a04     0x13d9 thr/prcssthr.32
                0x00000000c0015a04                userModeEntryPoint(void*)
                0x00000000c0015a2c                changeTSS
                0x00000000c0015a5c                switchToThread(ThreadControlBlock*)
                0x00000000c0015b0c                Process::addArgs(char**)
                0x00000000c0015b78                Process::Process(char const*, Process*, char**)
                0x00000000c0015b78                Process::Process(char const*, Process*, char**)
                0x00000000c0015d84                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015d84                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015f58                taskStartupFunction
                0x00000000c0015f64                Semaphore::Semaphore(int)
                0x00000000c0015f64                Semaphore::Semaphore(int)
                0x00000000c0015f94                Mutex::Mutex()
                0x00000000c0015f94                Mutex::Mutex()
                0x00000000c0015fa8                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00160b4                Process::createUserThread()
                0x00000000c00160d4                setupMultitasking(void (*)())
                0x00000000c00161f8                schedule()
                0x00000000c001628c                Semaphore::tryAcquire()
                0x00000000c0016360                Semaphore::assertLocked(char const*)
                0x00000000c00163e4                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001640c                blockTask(TaskState)
                0x00000000c0016444                waitTask(int, int*, int)
                0x00000000c0016488                milliTenthSleepUntil(unsigned int)
                0x00000000c0016528                milliTenthSleep(unsigned int)
                0x00000000c001653c                sleep(unsigned int)
                0x00000000c0016558                Semaphore::acquire()
                0x00000000c0016620                taskReturned
                0x00000000c0016664                Thr::processFromPID(int)
                0x00000000c0016710                unblockTask(ThreadControlBlock*)
                0x00000000c00167bc                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016a90                cleanerTaskFunction(void*)
                0x00000000c0016b98                terminateTask(int)
                0x00000000c0016c84                Thr::terminateFromIRQ(int)
                0x00000000c0016c94                Semaphore::release()
 .text          0x00000000c0016ddd      0xc27 vm86/vm8086.32
                0x00000000c0016ddd                Vm::inbv(unsigned short)
                0x00000000c0016df0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016e26                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016e36                Vm::getSegment(unsigned int)
                0x00000000c0016e3e                Vm::getOffset(unsigned int)
                0x00000000c0016e43                Vm::mainloop2()
                0x00000000c0016e7d                Vm::mainVm8086Loop(void*)
                0x00000000c0016e8d                Vm::mainloop3(unsigned long)
                0x00000000c0016eb3                Vm::initialise8086()
                0x00000000c0016ef6                Vm::finish8086()
                0x00000000c0016f57                Vm::getOutput8086(unsigned char*)
                0x00000000c0016f7c                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017035                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00171d3                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001726c                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001727d                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001728f                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00172a0                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00172b5                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00172cb                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00172e0                Vm::faultHandler(regs*)
 .text          0x00000000c0017a04      0xaf0 arch/i386/hal.32
                0x00000000c0017a04                noCopro(unsigned long)
                0x00000000c0017a05                nmiHandler(regs*, void*)
                0x00000000c0017a1e                doubleFault(regs*, void*)
                0x00000000c0017a37                displayDebugInfo(regs*)
                0x00000000c0017dbc                HalSystemIdle()
                0x00000000c0017e38                displayProgramFault(char const*)
                0x00000000c0017e84                gpFault(regs*, void*)
                0x00000000c0017eeb                pgFault(regs*, void*)
                0x00000000c0017f74                otherISRHandler(regs*, void*)
                0x00000000c0017fa8                opcodeFault(regs*, void*)
                0x00000000c001802b                i386SaveCoprocessor(void*)
                0x00000000c001803f                i386LoadCoprocessor(void*)
                0x00000000c0018053                x87EmulHandler(regs*, void*)
                0x00000000c00180f0                HalInitialiseCoprocessor()
                0x00000000c001819e                HalPanic(char const*)
                0x00000000c00182b2                HalQueryPerformanceCounter()
                0x00000000c00182cd                HalInitialise()
                0x00000000c0018483                HalMakeBeep(int)
                0x00000000c00184bd                HalGetRand()
                0x00000000c00184c0                HalEndOfInterrupt(int)
                0x00000000c00184f1                HalRestart()
                0x00000000c00184f2                HalShutdown()
                0x00000000c00184f3                HalSleep()
 .text          0x00000000c00184f4      0x2dc arch/i386/pic.32
                0x00000000c00184f4                picIoWait()
                0x00000000c00184fc                picDisable()
                0x00000000c0018530                picGetIRQReg(int)
                0x00000000c00185ac                picOpen()
                0x00000000c0018730                picEOI(int)
 .text          0x00000000c00187d0      0x674 arch/i386/rtc.32
                0x00000000c00187d0                RTC::open(int, int, void*)
                0x00000000c00187d4                RTC::close(int, int, void*)
                0x00000000c00187d8                RTC::timeInSecondsUTC()
                0x00000000c00187ea                RTC::timeInDatetimeUTC()
                0x00000000c0018810                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001884e                RTC::~RTC()
                0x00000000c001884e                RTC::~RTC()
                0x00000000c0018872                RTC::~RTC()
                0x00000000c001889c                RTC::get_update_in_progress_flag()
                0x00000000c00188b6                RTC::completeRTCRefresh()
                0x00000000c0018b96                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0018d44                rtcIRQHandler(regs*, void*)
                0x00000000c0018d8a                RTC::RTC()
                0x00000000c0018d8a                RTC::RTC()
 .text          0x00000000c0018e44      0x1f4 arch/i386/vga.32
                0x00000000c0018e44                HalConsoleScroll(int, int)
                0x00000000c0018f4c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018fb0                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0019038     0x14cf fs/fat/vfslink.32
                0x00000000c0019038                FAT::getName()
                0x00000000c0019040                FAT::tell(void*, unsigned long long*)
                0x00000000c001907c                FAT::stat(void*, unsigned long long*)
                0x00000000c00190b8                FAT::~FAT()
                0x00000000c00190b8                FAT::~FAT()
                0x00000000c00190dc                FAT::~FAT()
                0x00000000c0019104                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00191a8                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001926c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019450                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001966c                FAT::allocateSwapfile(char const*, int)
                0x00000000c001982c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001999c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00199fc                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019a5c                FAT::close(void*)
                0x00000000c0019ab0                FAT::closeDir(void*)
                0x00000000c0019b04                FAT::truncate(void*, unsigned long long)
                0x00000000c0019b70                FAT::seek(void*, unsigned long long)
                0x00000000c0019bc8                fatWrapperReadDisk
                0x00000000c0019c08                fatWrapperWriteDisk
                0x00000000c0019c48                fatWrapperIoctl
                0x00000000c0019d64                FAT::FAT()
                0x00000000c0019d64                FAT::FAT()
                0x00000000c0019dbc                FAT::fixFilepath(char*)
                0x00000000c0019dfc                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019f70                FAT::openDir(char const*, void**)
                0x00000000c001a020                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a118                FAT::unlink(char const*)
                0x00000000c001a198                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a34c                FAT::rename(char const*, char const*)
                0x00000000c001a418                FAT::mkdir(char const*)
                0x00000000c001a498                FAT::exists(char const*)
 *fill*         0x00000000c001a507        0x1 
 .text          0x00000000c001a508       0x94 fs/iso9660/helper.32
                0x00000000c001a508                isoReadDiscSectorHelper
                0x00000000c001a564                iso_kprintf
                0x00000000c001a580                iso_kprintfd
 .text          0x00000000c001a59c      0x71c fs/iso9660/vfslink.32
                0x00000000c001a59c                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a5a2                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001a5a8                ISO9660::getName()
                0x00000000c001a5ae                ISO9660::closeDir(void*)
                0x00000000c001a5b8                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a5be                ISO9660::unlink(char const*)
                0x00000000c001a5c4                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a5ca                ISO9660::rename(char const*, char const*)
                0x00000000c001a5d0                ISO9660::mkdir(char const*)
                0x00000000c001a5d6                ISO9660::~ISO9660()
                0x00000000c001a5d6                ISO9660::~ISO9660()
                0x00000000c001a5fa                ISO9660::~ISO9660()
                0x00000000c001a622                ISO9660::exists(char const*)
                0x00000000c001a636                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a71c                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a764                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a7a6                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a7e4                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a836                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a978                ISO9660::close(void*)
                0x00000000c001a9a8                ISO9660::openDir(char const*, void**)
                0x00000000c001aa82                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001ab9f                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001ac1e                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001ac90                ISO9660::ISO9660()
                0x00000000c001ac90                ISO9660::ISO9660()
 .text          0x00000000c001acb8      0x26c hal/sound/sndcard.32
                0x00000000c001acb8                SoundCard::beginPlayback()
                0x00000000c001acc6                SoundCard::stopPlayback()
                0x00000000c001acd4                SoundCard::SoundCard(char const*)
                0x00000000c001acd4                SoundCard::SoundCard(char const*)
                0x00000000c001ad72                SoundCard::~SoundCard()
                0x00000000c001ad72                SoundCard::~SoundCard()
                0x00000000c001ad96                SoundCard::~SoundCard()
                0x00000000c001adc0                SoundCard::configureRates(int, int, int)
                0x00000000c001adf0                SoundCard::getSamples16(int, short*)
                0x00000000c001ae4c                SoundCard::getSamples32(int, int*)
                0x00000000c001aed2                SoundCard::addChannel(SoundPort*)
                0x00000000c001af10                SoundCard::removeChannel(int)
 .text          0x00000000c001af24      0x38a hal/sound/sndport.32
                0x00000000c001af24                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001af24                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001afb0                SoundPort::~SoundPort()
                0x00000000c001afb0                SoundPort::~SoundPort()
                0x00000000c001afe4                SoundPort::unpause()
                0x00000000c001aff0                SoundPort::pause()
                0x00000000c001affc                SoundPort::getBufferUsed()
                0x00000000c001b004                SoundPort::getBufferSize()
                0x00000000c001b00c                SoundPort::buffer16(short*, int)
                0x00000000c001b098                SoundPort::buffer32(int*, int)
                0x00000000c001b124                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001b1f0                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001b2ae        0x0 hw/bus/isa.32
 .text          0x00000000c001b2ae      0xbb7 hw/bus/pci.32
                0x00000000c001b2ae                PCI::open(int, int, void*)
                0x00000000c001b2cc                PCI::close(int, int, void*)
                0x00000000c001b2d0                PCI::PCI()
                0x00000000c001b2d0                PCI::PCI()
                0x00000000c001b368                PCI::readBAR8(unsigned int, int)
                0x00000000c001b384                PCI::readBAR16(unsigned int, int)
                0x00000000c001b3a2                PCI::readBAR32(unsigned int, int)
                0x00000000c001b3be                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001b3de                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001b400                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001b420                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b496                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b540                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b564                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b58c                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5d6                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5fe                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b622                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b646                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b66e                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b6d2                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b7ba                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001ba80                PCI::checkBus(unsigned char)
                0x00000000c001baa4                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001bc1e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bd9a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001be0c                PCI::detect()
 *fill*         0x00000000c001be65        0x1 
 .text          0x00000000c001be66      0xb9a hw/diskctrl/ide.32
                0x00000000c001be66                IDE::close(int, int, void*)
                0x00000000c001be6a                IDE::IDE()
                0x00000000c001be6a                IDE::IDE()
                0x00000000c001be9e                IDE::prepareInterrupt(unsigned char)
                0x00000000c001beb0                selectDrive(unsigned char, unsigned char)
                0x00000000c001beb2                IDE::getBase(unsigned char)
                0x00000000c001bec4                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bf84                IDE::read(unsigned char, unsigned char)
                0x00000000c001c032                IDE::waitInterrupt(unsigned char)
                0x00000000c001c094                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c0b0                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c0cc                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c116                IDE::open(int, int, void*)
                0x00000000c001c554                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c624                IDE::detect()
                0x00000000c001c8f2                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c9ac                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001ca00      0x32a hw/diskctrl/satabus.32
                0x00000000c001ca00                SATABus::close(int, int, void*)
                0x00000000c001ca04                SATABus::detect()
                0x00000000c001ca06                SATABus::SATABus()
                0x00000000c001ca06                SATABus::SATABus()
                0x00000000c001ca8c                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cabe                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cb06                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cb26                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001cb50                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001cc60                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001cd0a                SATABus::open(int, int, void*)
 .text          0x00000000c001cd2a      0x93f hw/diskphys/ata.32
                0x00000000c001cd2a                ATA::close(int, int, void*)
                0x00000000c001cd4e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cd50                ATA::ATA()
                0x00000000c001cd50                ATA::ATA()
                0x00000000c001cd7e                ATA::flush(bool)
                0x00000000c001cdcc                ATA::readyForCommand()
                0x00000000c001ce18                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d1ae                ATA::detectCHS()
                0x00000000c001d1d8                ATA::open(int, int, void*)
                0x00000000c001d2a4                combineCharAndColour(char, unsigned char)
                0x00000000c001d2b5                combineColours(unsigned char, unsigned char)
                0x00000000c001d2c2                ATA::read(unsigned long long, int, void*)
                0x00000000c001d498                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d669        0x1 
 .text          0x00000000c001d66a      0x618 hw/diskphys/atapi.32
                0x00000000c001d66a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d670                ATAPI::close(int, int, void*)
                0x00000000c001d694                ATAPI::ATAPI()
                0x00000000c001d694                ATAPI::ATAPI()
                0x00000000c001d6c2                ATAPI::readyForCommand()
                0x00000000c001d714                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d9dc                ATAPI::diskRemoved()
                0x00000000c001da16                ATAPI::eject()
                0x00000000c001da5e                ATAPI::diskInserted()
                0x00000000c001da6a                ATAPI::detectMedia()
                0x00000000c001db28                ATAPI::open(int, int, void*)
                0x00000000c001dc08                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001dc82      0x807 hw/diskphys/sata.32
                0x00000000c001dc82                SATA::close(int, int, void*)
                0x00000000c001dca6                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001dca8                SATA::open(int, int, void*)
                0x00000000c001dd52                SATA::SATA()
                0x00000000c001dd52                SATA::SATA()
                0x00000000c001dd80                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001dfd4                SATA::read(unsigned long long, int, void*)
                0x00000000c001e224                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001e489        0x1 
 .text          0x00000000c001e48a      0x5d0 hw/diskphys/satapi.32
                0x00000000c001e48a                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001e490                SATAPI::close(int, int, void*)
                0x00000000c001e4b4                SATAPI::SATAPI()
                0x00000000c001e4b4                SATAPI::SATAPI()
                0x00000000c001e4e2                SATAPI::diskRemoved()
                0x00000000c001e4e4                SATAPI::diskInserted()
                0x00000000c001e500                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001e7de                SATAPI::eject()
                0x00000000c001e81a                SATAPI::detectMedia()
                0x00000000c001e870                SATAPI::open(int, int, void*)
                0x00000000c001e970                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ea5a      0x45b hw/intctrl/apic.32
                0x00000000c001ea5a                IOAPIC::close(int, int, void*)
                0x00000000c001ea60                apicGetBase()
                0x00000000c001eaa6                IOAPIC::IOAPIC()
                0x00000000c001eaa6                IOAPIC::IOAPIC()
                0x00000000c001eace                apicOpen()
                0x00000000c001ec4a                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001ec7c                IOAPIC::read(int)
                0x00000000c001eca4                IOAPIC::open(int, int, void*)
                0x00000000c001ed8a                IOAPIC::write(int, int)
                0x00000000c001edb6                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001eeb5        0x3 
 .text          0x00000000c001eeb8       0xf0 hw/timer/apictimer.32
                0x00000000c001eeb8                APICTimer::close(int, int, void*)
                0x00000000c001eec0                apicTimerHandler(regs*, void*)
                0x00000000c001eee8                APICTimer::open(int, int, void*)
                0x00000000c001ef58                APICTimer::write(int)
                0x00000000c001ef80                APICTimer::APICTimer()
                0x00000000c001ef80                APICTimer::APICTimer()
 .text          0x00000000c001efa8      0x1ad hw/timer/pit.32
                0x00000000c001efa8                PIT::write(int)
                0x00000000c001f02c                pitHandler(regs*, void*)
                0x00000000c001f054                PIT::open(int, int, void*)
                0x00000000c001f0a4                PIT::close(int, int, void*)
                0x00000000c001f0d4                PIT::PIT()
                0x00000000c001f0d4                PIT::PIT()
 *fill*         0x00000000c001f155        0xb 
 .text          0x00000000c001f160       0x83 arch/i386/avx.32
                0x00000000c001f160                avxDetect
                0x00000000c001f18a                avxSave
                0x00000000c001f19b                avxLoad
                0x00000000c001f1ac                avxInit
                0x00000000c001f1ce                avxClose
                0x00000000c001f1cf                wouldSheSayYes
 *fill*         0x00000000c001f1e3        0xd 
 .text          0x00000000c001f1f0      0x2ec arch/i386/interrupt.32
                0x00000000c001f1f0                isr0
                0x00000000c001f200                isr1
                0x00000000c001f20a                isr2
                0x00000000c001f214                isr3
                0x00000000c001f21e                isr4
                0x00000000c001f228                isr5
                0x00000000c001f232                isr6
                0x00000000c001f23c                isr7
                0x00000000c001f246                isr8
                0x00000000c001f24e                isr9
                0x00000000c001f258                isr10
                0x00000000c001f260                isr11
                0x00000000c001f268                isr12
                0x00000000c001f270                isr13
                0x00000000c001f28a                isr14
                0x00000000c001f292                isr15
                0x00000000c001f29c                isr16
                0x00000000c001f2a6                isr17
                0x00000000c001f2b0                isr18
                0x00000000c001f2ba                irq3
                0x00000000c001f2c4                irq4
                0x00000000c001f2ce                irq5
                0x00000000c001f2d8                irq6
                0x00000000c001f2e2                irq7
                0x00000000c001f2ec                irq8
                0x00000000c001f2f6                irq9
                0x00000000c001f300                irq10
                0x00000000c001f30a                irq11
                0x00000000c001f314                irq12
                0x00000000c001f31e                irq13
                0x00000000c001f328                irq14
                0x00000000c001f332                irq15
                0x00000000c001f33c                irq1
                0x00000000c001f343                irq2
                0x00000000c001f34a                isr96
                0x00000000c001f351                irq0
                0x00000000c001f356                int_common_stub
                0x00000000c001f388                syscall_common_stub
                0x00000000c001f48c                irq16
                0x00000000c001f496                irq17
                0x00000000c001f4a0                irq18
                0x00000000c001f4aa                irq19
                0x00000000c001f4b4                irq20
                0x00000000c001f4be                irq21
                0x00000000c001f4c8                irq22
                0x00000000c001f4d2                irq23
 *fill*         0x00000000c001f4dc        0x4 
 .text          0x00000000c001f4e0       0x10 arch/i386/rdrand.32
                0x00000000c001f4e0                i386GetRDRAND
 .text          0x00000000c001f4f0       0x39 arch/i386/sse.32
                0x00000000c001f4f0                absolutelyNoChanceInHell
                0x00000000c001f4f0                sseDetect
                0x00000000c001f508                sseSave
                0x00000000c001f510                sseLoad
                0x00000000c001f518                sseInit
                0x00000000c001f528                sseClose
 *fill*         0x00000000c001f529        0x7 
 .text          0x00000000c001f530       0x49 arch/i386/x87.32
                0x00000000c001f536                x87Detect
                0x00000000c001f551                x87Save
                0x00000000c001f558                x87Load
                0x00000000c001f55f                x87Init
                0x00000000c001f578                x87Close
 *fill*         0x00000000c001f579        0x3 
 .text          0x00000000c001f57c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f5a1        0x0 crtn.32
 *fill*         0x00000000c001f5a1        0x3 
 .text          0x00000000c001f5a4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001f5a4                __divdi3
 *fill*         0x00000000c001f6ef        0x1 
 .text          0x00000000c001f6f0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001f6f0                __moddi3
 *fill*         0x00000000c001f86e        0x2 
 .text          0x00000000c001f870       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001f870                __udivdi3
 *fill*         0x00000000c001f96f        0x1 
 .text          0x00000000c001f970      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001f970                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001fa90        0x0
 .iplt          0x00000000c001fa90        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001fa8a        0xf
 .init          0x00000000c001fa8a        0x3 crti.32
                0x00000000c001fa8a                _init
 .init          0x00000000c001fa8d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001fa92        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001fa97        0x2 crtn.32

.fini           0x00000000c001fa99        0xa
 .fini          0x00000000c001fa99        0x3 crti.32
                0x00000000c001fa99                _fini
 .fini          0x00000000c001fa9c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001faa1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001faa4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001faa4       0x23 core/computer.32
                0x00000000c001faa4                Computer::~Computer()
                0x00000000c001faa4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001fac8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001fac8       0x2a core/computer.32
                0x00000000c001fac8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001faf2       0x21
 .text._Z10idleCommonv
                0x00000000c001faf2       0x21 core/idle.32
                0x00000000c001faf2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fb14        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001fb14        0x2 core/unixfile.32
                0x00000000c001fb14                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001fb14                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fb16       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001fb16       0x42 core/unixfile.32
                0x00000000c001fb16                LinkedList<UnixFile>::LinkedList()
                0x00000000c001fb16                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fb58       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001fb58       0xd3 core/unixfile.32
                0x00000000c001fb58                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fc2c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001fc2c        0x7 core/unixfile.32
                0x00000000c001fc2c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fc34       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001fc34       0xa1 core/unixfile.32
                0x00000000c001fc34                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fcd6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001fcd6        0x8 core/unixfile.32
                0x00000000c001fcd6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fcde       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fcde       0x1a hal/device.32
                0x00000000c001fcde                DriverlessDevice::~DriverlessDevice()
                0x00000000c001fcde                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fcf8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fcf8       0x2a hal/device.32
                0x00000000c001fcf8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fd22       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001fd22       0xdc hal/device.32
                0x00000000c001fd22                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fdfe       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fdfe       0x42 hal/device.32
                0x00000000c001fdfe                LinkedList<Device>::LinkedList()
                0x00000000c001fdfe                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fe40       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fe40       0x1c hal/timer.32
                0x00000000c001fe40                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fe5c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fe5c        0x7 hal/timer.32
                0x00000000c001fe5c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fe64       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fe64       0xbc hal/timer.32
                0x00000000c001fe64                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ff20       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ff20       0xda hal/timer.32
                0x00000000c001ff20                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fffc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fffc       0x23 hw/acpi.32
                0x00000000c001fffc                ACPI::~ACPI()
                0x00000000c001fffc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0020020       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0020020       0x2a hw/acpi.32
                0x00000000c0020020                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c002004c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c002004c        0x2 hw/acpi.32
                0x00000000c002004c                LinkedList<Device>::~LinkedList()
                0x00000000c002004c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0020050       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0020050       0x1c hw/acpi.32
                0x00000000c0020050                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c002006c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c002006c        0x7 hw/acpi.32
                0x00000000c002006c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020074       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0020074       0xb8 hw/acpi.32
                0x00000000c0020074                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c002012c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002012c       0x23 hw/cpu.32
                0x00000000c002012c                CPU::~CPU()
                0x00000000c002012c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0020150       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0020150       0x2a hw/cpu.32
                0x00000000c0020150                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002017c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002017c        0x8 sys/kill.32
                0x00000000c002017c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020184        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0020184        0x2 thr/prcssthr.32
                0x00000000c0020184                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0020184                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020188       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0020188       0x49 thr/prcssthr.32
                0x00000000c0020188                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0020188                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00201d4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00201d4       0x42 thr/prcssthr.32
                0x00000000c00201d4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00201d4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c0020216       0x23
 .text._ZN3PCID2Ev
                0x00000000c0020216       0x23 hw/bus/pci.32
                0x00000000c0020216                PCI::~PCI()
                0x00000000c0020216                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c002023a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c002023a       0x2a hw/bus/pci.32
                0x00000000c002023a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0020264       0x23
 .text._ZN3IDED2Ev
                0x00000000c0020264       0x23 hw/diskctrl/ide.32
                0x00000000c0020264                IDE::~IDE()
                0x00000000c0020264                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0020288       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0020288       0x2a hw/diskctrl/ide.32
                0x00000000c0020288                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c00202b2       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c00202b2       0x23 hw/diskctrl/satabus.32
                0x00000000c00202b2                SATABus::~SATABus()
                0x00000000c00202b2                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c00202d6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c00202d6       0x2a hw/diskctrl/satabus.32
                0x00000000c00202d6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0020300       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0020300       0x23 hw/diskphys/ata.32
                0x00000000c0020300                ATA::~ATA()
                0x00000000c0020300                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0020324       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0020324       0x2a hw/diskphys/ata.32
                0x00000000c0020324                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c002034e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c002034e       0x23 hw/diskphys/atapi.32
                0x00000000c002034e                ATAPI::~ATAPI()
                0x00000000c002034e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0020372       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0020372       0x2a hw/diskphys/atapi.32
                0x00000000c0020372                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c002039c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c002039c       0x23 hw/diskphys/sata.32
                0x00000000c002039c                SATA::~SATA()
                0x00000000c002039c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c00203c0       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c00203c0       0x2a hw/diskphys/sata.32
                0x00000000c00203c0                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c00203ea       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c00203ea       0x23 hw/diskphys/satapi.32
                0x00000000c00203ea                SATAPI::~SATAPI()
                0x00000000c00203ea                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002040e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002040e       0x2a hw/diskphys/satapi.32
                0x00000000c002040e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c0020438       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020438       0x23 hw/intctrl/apic.32
                0x00000000c0020438                IOAPIC::~IOAPIC()
                0x00000000c0020438                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002045c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002045c       0x2a hw/intctrl/apic.32
                0x00000000c002045c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020488       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020488       0x23 hw/timer/apictimer.32
                0x00000000c0020488                APICTimer::~APICTimer()
                0x00000000c0020488                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00204ac       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00204ac       0x2a hw/timer/apictimer.32
                0x00000000c00204ac                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c00204d8       0x23
 .text._ZN3PITD2Ev
                0x00000000c00204d8       0x23 hw/timer/pit.32
                0x00000000c00204d8                PIT::~PIT()
                0x00000000c00204d8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00204fc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00204fc       0x2a hw/timer/pit.32
                0x00000000c00204fc                PIT::~PIT()

.rodata         0x00000000c0020526     0x3376
                0x00000000c0020526                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c0020526        0x2 
 .ctors         0x00000000c0020528        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c002052c        0x4 core/unixfile.32
 .ctors         0x00000000c0020530        0x4 thr/prcssthr.32
 .ctors         0x00000000c0020534        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020538                end_ctors = .
                0x00000000c0020538                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020538        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c002053c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002053c                __DTOR_END__
                0x00000000c0020540                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020540        0x0 
 .rodata        0x00000000c0020540      0x101 acpica/utclib.32
                0x00000000c0020540                AcpiGbl_Ctypes
 *fill*         0x00000000c0020641        0x3 
 .rodata        0x00000000c0020644       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c002065c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c00206a6       0x1a 
 .rodata        0x00000000c00206c0       0xed fs/fat/ff.32
 *fill*         0x00000000c00207ad       0x13 
 .rodata        0x00000000c00207c0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020bc0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0020c2f      0x155 core/computer.32
 .rodata.str1.4
                0x00000000c0020d84       0x90 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0020e14       0x2c core/computer.32
                0x00000000c0020e14                vtable for Computer
 .rodata.str1.4
                0x00000000c0020e40       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020e70        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020e7c       0x17 core/main.32
 *fill*         0x00000000c0020e93        0x1 
 .rodata.str1.4
                0x00000000c0020e94       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020f39       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020f91       0x39 core/pipe.32
 *fill*         0x00000000c0020fca        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020fcc       0x1c core/pipe.32
                0x00000000c0020fcc                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020fe8       0x2b core/terminal.32
 *fill*         0x00000000c0021013        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0021014       0x1c core/terminal.32
                0x00000000c0021014                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0021030       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0021052       0x15 core/unixfile.32
 *fill*         0x00000000c0021067        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0021068       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00210b3        0x8 core/unixfile.32
 *fill*         0x00000000c00210bb        0x1 
 .rodata.str1.4
                0x00000000c00210bc       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00210dc       0x1c core/unixfile.32
                0x00000000c00210dc                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00210f8       0x1c core/unixfile.32
                0x00000000c00210f8                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0021114      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00213a8      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00214ce       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0021501       0x11 dbg/kconsole.32
 *fill*         0x00000000c0021501        0x3 
 .rodata        0x00000000c0021504      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0021654      0x169 dbg/usban.32
 *fill*         0x00000000c00217bd        0x3 
 .rodata.str1.4
                0x00000000c00217c0      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00218f7      0x19b fs/symlink.32
 .rodata.str1.1
                0x00000000c0021a92       0x41 fs/vfs.32
                                         0x43 (size before relaxing)
 *fill*         0x00000000c0021ad3        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0021ad4       0x6c fs/vfs.32
                0x00000000c0021ad4                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021b40       0x1c fs/vfs.32
                0x00000000c0021b40                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021b5c       0x1c fs/vfs.32
                0x00000000c0021b5c                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021b78       0x2c hal/bus.32
                0x00000000c0021b78                vtable for Bus
 .rodata.str1.1
                0x00000000c0021ba4       0x1e hal/clock.32
 *fill*         0x00000000c0021bc2        0x2 
 .rodata._ZTV5Clock
                0x00000000c0021bc4       0x3c hal/clock.32
                0x00000000c0021bc4                vtable for Clock
 .rodata        0x00000000c0021c00       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021c30       0xbc hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021cec       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021cec       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0021cec       0x2c hal/device.32
                0x00000000c0021cec                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021d18       0x2c hal/device.32
                0x00000000c0021d18                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021d44       0x2c hal/diskctrl.32
                0x00000000c0021d44                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021d70       0x38 hal/diskphys.32
                0x00000000c0021d70                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021da8       0x3e hal/intctrl.32
 *fill*         0x00000000c0021de6        0x2 
 .rodata.str1.4
                0x00000000c0021de8       0x5d hal/intctrl.32
 .rodata        0x00000000c0021e45       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0021e98       0x34 hal/keybrd.32
                0x00000000c0021e98                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021ecc       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0021f10       0x2c hal/logidisk.32
                0x00000000c0021f10                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021f3c       0x2c hal/mouse.32
                0x00000000c0021f3c                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0021f68       0x34 hal/nic.32
                0x00000000c0021f68                vtable for NIC
 .rodata.str1.1
                0x00000000c0021f9c        0xb hal/partition.32
 *fill*         0x00000000c0021fa7        0x1 
 .rodata._ZTV6Serial
                0x00000000c0021fa8       0x44 hal/serial.32
                0x00000000c0021fa8                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021fec       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021fec        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021fec       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021fec       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021fec       0x30 hal/timer.32
                0x00000000c0021fec                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c002201c       0x10 hal/vcache.32
                0x00000000c002201c                vtable for VCache
 .rodata.str1.1
                0x00000000c002202c       0x93 hal/video.32
 *fill*         0x00000000c00220bf        0x1 
 .rodata._ZTV5Video
                0x00000000c00220c0       0x4c hal/video.32
                0x00000000c00220c0                vtable for Video
 .rodata.str1.1
                0x00000000c002210c      0x1fd hw/acpi.32
                                        0x217 (size before relaxing)
 *fill*         0x00000000c0022309        0x3 
 .rodata.str1.4
                0x00000000c002230c       0x9b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00223a7       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00223a7        0x8 hw/acpi.32
 *fill*         0x00000000c00223a7        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00223a8       0x2c hw/acpi.32
                0x00000000c00223a8                vtable for ACPI
 .rodata.str1.1
                0x00000000c00223d4      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c002254f        0x1 
 .rodata._ZTV3CPU
                0x00000000c0022550       0x2c hw/cpu.32
                0x00000000c0022550                vtable for CPU
 .rodata.str1.1
                0x00000000c002257c       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c00225bc       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00225f8       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0022689       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0022752       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002279a       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00227c5       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c002283b       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022880        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c002288a       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c00228ab       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0022941       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0022995       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00229c1      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0022b8d       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0022be4      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022cf4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022cf4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022cf4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022cf4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022cf4       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0022db6        0x2 
 .rodata        0x00000000c0022db8       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022de8      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0022f87        0x1 
 .rodata.str1.4
                0x00000000c0022f88       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0022ffb       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0023010       0x3c arch/i386/rtc.32
                0x00000000c0023010                vtable for RTC
 .rodata.str1.1
                0x00000000c002304c       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c002308d        0x3 
 .rodata._ZTV3FAT
                0x00000000c0023090       0x6c fs/fat/vfslink.32
                0x00000000c0023090                vtable for FAT
 .rodata.str1.1
                0x00000000c00230fc       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c00230fc      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0023234       0x6c fs/iso9660/vfslink.32
                0x00000000c0023234                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00232a0       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00232e4       0x34 hal/sound/sndcard.32
                0x00000000c00232e4                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0023318       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0023357       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002338f       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023430       0x2c hw/bus/pci.32
                0x00000000c0023430                vtable for PCI
 .rodata.str1.1
                0x00000000c002345c       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c00234e3        0x1 
 .rodata._ZTV3IDE
                0x00000000c00234e4       0x2c hw/diskctrl/ide.32
                0x00000000c00234e4                vtable for IDE
 .rodata.str1.4
                0x00000000c0023510       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0023534       0x2c hw/diskctrl/satabus.32
                0x00000000c0023534                vtable for SATABus
 .rodata.str1.1
                0x00000000c0023560       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0023572        0x2 
 .rodata._ZTV3ATA
                0x00000000c0023574       0x38 hw/diskphys/ata.32
                0x00000000c0023574                vtable for ATA
 .rodata.str1.1
                0x00000000c00235ac        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c00235b9        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c00235bc       0x38 hw/diskphys/atapi.32
                0x00000000c00235bc                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00235f4       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0023670       0x38 hw/diskphys/sata.32
                0x00000000c0023670                vtable for SATA
 .rodata.str1.1
                0x00000000c00236a8       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0023792        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0023794       0x38 hw/diskphys/satapi.32
                0x00000000c0023794                vtable for SATAPI
 .rodata        0x00000000c00237cc        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c00237d4       0x2c hw/intctrl/apic.32
                0x00000000c00237d4                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0023800       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002381b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002381c       0x30 hw/timer/apictimer.32
                0x00000000c002381c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002384c       0x1d hw/timer/pit.32
 *fill*         0x00000000c0023869        0x3 
 .rodata._ZTV3PIT
                0x00000000c002386c       0x30 hw/timer/pit.32
                0x00000000c002386c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002389c      0xbc5
 *(.data)
 .data          0x00000000c002389c        0x0 crti.32
 .data          0x00000000c002389c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002389c                __dso_handle
 .data          0x00000000c00238a0        0x0 acpica/utclib.32
 .data          0x00000000c00238a0        0x0 core/malloc.32
 .data          0x00000000c00238a0        0x0 libk/ctype.32
 .data          0x00000000c00238a0        0x0 libk/string.32
 .data          0x00000000c00238a0        0x0 fs/fat/diskio.32
 .data          0x00000000c00238a0        0x0 fs/fat/ff.32
 .data          0x00000000c00238a0        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00238a0        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00238a0        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00238a0        0x0 core/computer.32
 .data          0x00000000c00238a0        0x0 core/gdt.32
 .data          0x00000000c00238a0        0x0 core/idle.32
 .data          0x00000000c00238a0        0x0 core/idt.32
 .data          0x00000000c00238a0        0x4 core/kheap.32
 .data          0x00000000c00238a4        0x0 core/main.32
 .data          0x00000000c00238a4        0x4 core/physmgr.32
                0x00000000c00238a4                Phys::bitmap
 .data          0x00000000c00238a8        0x0 core/pipe.32
 *fill*         0x00000000c00238a8       0x18 
 .data          0x00000000c00238c0       0x60 core/terminal.32
                0x00000000c00238c0                VgaText::hiddenOut
                0x00000000c00238e0                ansiToVGAMappings
 .data          0x00000000c0023920        0x0 core/tss.32
 .data          0x00000000c0023920        0x4 core/unixfile.32
                0x00000000c0023920                UnixFile::nextFd
 .data          0x00000000c0023924       0x15 core/virtmgr.32
                0x00000000c0023924                Virt::pageAllocPtr
                0x00000000c0023928                Virt::bitmap
                0x00000000c002392c                Virt::swapfileSectorsPerPage
                0x00000000c0023930                Virt::swapfileLength
                0x00000000c0023934                Virt::swapfileSector
                0x00000000c0023938                Virt::swapfileDrive
 *fill*         0x00000000c0023939        0x3 
 .data          0x00000000c002393c        0x4 coreobjs/c++.32
                0x00000000c002393c                __stack_chk_guard
 .data          0x00000000c0023940        0x0 dbg/kconsole.32
 .data          0x00000000c0023940       0x28 dbg/usban.32
                0x00000000c0023940                KiUsbanTypeMismatchTypes
 .data          0x00000000c0023968        0x0 fs/symlink.32
 .data          0x00000000c0023968        0x0 fs/vfs.32
 .data          0x00000000c0023968        0x0 hal/bus.32
 .data          0x00000000c0023968        0x0 hal/buzzer.32
 .data          0x00000000c0023968        0x0 hal/clock.32
 .data          0x00000000c0023968        0x0 hal/device.32
 .data          0x00000000c0023968        0x0 hal/diskctrl.32
 .data          0x00000000c0023968        0x0 hal/diskphys.32
 .data          0x00000000c0023968        0x0 hal/fpu.32
 .data          0x00000000c0023968        0x0 hal/intctrl.32
 .data          0x00000000c0023968        0x0 hal/keybrd.32
 .data          0x00000000c0023968        0x0 hal/logidisk.32
 .data          0x00000000c0023968        0x0 hal/mouse.32
 .data          0x00000000c0023968        0x0 hal/nic.32
 .data          0x00000000c0023968        0x0 hal/partition.32
 .data          0x00000000c0023968        0x0 hal/serial.32
 .data          0x00000000c0023968        0x0 hal/timer.32
 .data          0x00000000c0023968        0x0 hal/vcache.32
 .data          0x00000000c0023968        0x0 hal/video.32
 .data          0x00000000c0023968       0x10 hw/acpi.32
                0x00000000c0023968                legacyIRQRemaps
 .data          0x00000000c0023978        0x4 hw/cpu.32
                0x00000000c0023978                lastCode
 .data          0x00000000c002397c        0x0 krnl/atexit.32
 *fill*         0x00000000c002397c        0x4 
 .data          0x00000000c0023980      0x142 krnl/bootmsg.32
                0x00000000c0023980                KiSplashScreen
 .data          0x00000000c0023ac2        0x0 krnl/compat.32
 *fill*         0x00000000c0023ac2       0x1e 
 .data          0x00000000c0023ae0      0x400 krnl/crc32.32
                0x00000000c0023ae0                KiPolyLookupCRC32
 .data          0x00000000c0023ee0       0x4d krnl/env.32
                0x00000000c0023ee0                defaultSysEnv
 .data          0x00000000c0023f2d        0x0 krnl/inlines.32
 .data          0x00000000c0023f2d        0x0 krnl/panic.32
 .data          0x00000000c0023f2d        0x0 krnl/powctrl.32
 .data          0x00000000c0023f2d        0x0 krnl/random.32
 .data          0x00000000c0023f2d        0x0 krnl/resolve.32
 *fill*         0x00000000c0023f2d       0x13 
 .data          0x00000000c0023f40       0x4c krnl/signal.32
                0x00000000c0023f40                KiDefaultSignalHandlers
 *fill*         0x00000000c0023f8c       0x14 
 .data          0x00000000c0023fa0       0xfc krnl/syscalls.32
                0x00000000c0023fa0                systemCallHandlers
 .data          0x00000000c002409c        0x0 net/ethernet.32
 *fill*         0x00000000c002409c        0x4 
 .data          0x00000000c00240a0      0x100 reg/cm.32
                0x00000000c00240a0                CmComponents
 .data          0x00000000c00241a0        0x0 reg/registry.32
 .data          0x00000000c00241a0        0x0 sys/eject.32
 .data          0x00000000c00241a0        0x0 sys/exit.32
 .data          0x00000000c00241a0        0x0 sys/getcwd.32
 .data          0x00000000c00241a0        0x0 sys/getpid.32
 .data          0x00000000c00241a0        0x0 sys/getramdata.32
 .data          0x00000000c00241a0        0x0 sys/getvgaptr.32
 .data          0x00000000c00241a0        0x0 sys/kill.32
 .data          0x00000000c00241a0        0x0 sys/loaddll.32
 .data          0x00000000c00241a0        0x0 sys/read.32
 .data          0x00000000c00241a0        0x0 sys/registersignal.32
 .data          0x00000000c00241a0        0x0 sys/registry.32
 .data          0x00000000c00241a0        0x0 sys/sbrk.32
 .data          0x00000000c00241a0        0x0 sys/setcwd.32
 .data          0x00000000c00241a0        0x0 sys/settime.32
 .data          0x00000000c00241a0        0x0 sys/symlink.32
 .data          0x00000000c00241a0        0x0 sys/timezone.32
 .data          0x00000000c00241a0        0x0 sys/truncate.32
 .data          0x00000000c00241a0        0x0 sys/write.32
 .data          0x00000000c00241a0        0x0 sys/wsbe.32
 .data          0x00000000c00241a0        0x0 sys/yield.32
 .data          0x00000000c00241a0        0x0 thr/elf.32
 .data          0x00000000c00241a0        0x4 thr/prcssthr.32
                0x00000000c00241a0                Thr::nextPID
 .data          0x00000000c00241a4        0x0 vm86/vm8086.32
 *fill*         0x00000000c00241a4       0x1c 
 .data          0x00000000c00241c0      0x2a0 arch/i386/hal.32
                0x00000000c00241c0                exceptionNames
 .data          0x00000000c0024460        0x0 arch/i386/pic.32
 .data          0x00000000c0024460        0x0 arch/i386/rtc.32
 .data          0x00000000c0024460        0x0 arch/i386/vga.32
 .data          0x00000000c0024460        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024460        0x0 fs/iso9660/helper.32
 .data          0x00000000c0024460        0x1 fs/iso9660/vfslink.32
                0x00000000c0024460                recentDriveletter
 .data          0x00000000c0024461        0x0 hal/sound/sndcard.32
 .data          0x00000000c0024461        0x0 hal/sound/sndport.32
 .data          0x00000000c0024461        0x0 hw/bus/isa.32
 .data          0x00000000c0024461        0x0 hw/bus/pci.32
 .data          0x00000000c0024461        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024461        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0024461        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024461        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024461        0x0 hw/diskphys/sata.32
 .data          0x00000000c0024461        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0024461        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024461        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024461        0x0 hw/timer/pit.32
 .data          0x00000000c0024461        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024461        0x0 crtn.32
 .data          0x00000000c0024461        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0024461        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0024461        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0024461        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0024464        0x0
 .got           0x00000000c0024464        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0024464        0x0
 .got.plt       0x00000000c0024464        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0024464        0x0
 .igot.plt      0x00000000c0024464        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0024464        0x0
 .tm_clone_table
                0x00000000c0024464        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0024464        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024461      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0024461        0x3 
 .eh_frame      0x00000000c0024464        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0024464        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0024464       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00244bc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00244fc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024568       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0025000       0x7d
 *(userkernel)
 userkernel     0x00000000c0025000       0x52 krnl/signal.32
                0x00000000c0025000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002502c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0025052       0x2b krnl/syscalls.32
                0x00000000c0025052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0026000        0x1
 *(align_previous)
 align_previous
                0x00000000c0026000        0x1 krnl/signal.32
                0x00000000c0026000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0026004        0x0
 .rel.got       0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0026004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0026001     0x7107
                0x00000000c0026001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0026001       0x1f 
 COMMON         0x00000000c0026020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0026020                dcache
                0x00000000c0026060                cdDriveLetter
                0x00000000c0026080                icache
 *(.bss)
 .bss           0x00000000c00260c0        0x0 crti.32
 .bss           0x00000000c00260c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00260e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00260e4       0x1c 
 .bss           0x00000000c0026100      0x378 core/malloc.32
 .bss           0x00000000c0026478        0x0 libk/ctype.32
 .bss           0x00000000c0026478        0x0 libk/string.32
 .bss           0x00000000c0026478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026478        0x8 
 .bss           0x00000000c0026480       0x88 fs/fat/ff.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0026508       0x18 
 .bss           0x00000000c0026520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0026eb8        0x6 core/computer.32
                0x00000000c0026eb8                Krnl::computer
                0x00000000c0026ebc                KeIsPreemptionOn
                0x00000000c0026ebd                KeIsSchedulingOn
 *fill*         0x00000000c0026ebe        0x2 
 .bss           0x00000000c0026ec0        0x6 core/gdt.32
                0x00000000c0026ec0                gdtDescr
 .bss           0x00000000c0026ec6        0x0 core/idle.32
 *fill*         0x00000000c0026ec6        0x2 
 .bss           0x00000000c0026ec8        0x6 core/idt.32
                0x00000000c0026ec8                idtDescr
 .bss           0x00000000c0026ece        0x0 core/kheap.32
 *fill*         0x00000000c0026ece        0x2 
 .bss           0x00000000c0026ed0        0x4 core/main.32
                0x00000000c0026ed0                sysBootSettings
 .bss           0x00000000c0026ed4       0x29 core/physmgr.32
                0x00000000c0026ed4                Phys::forbidEvictions
                0x00000000c0026ed8                Phys::currentPagePointer
                0x00000000c0026edc                Phys::highestMem
                0x00000000c0026ee0                Phys::oldPercent
                0x00000000c0026ee4                Phys::usedPages
                0x00000000c0026ee8                Phys::usablePages
                0x00000000c0026eec                Phys::dmaUsage
 .bss           0x00000000c0026efd        0x0 core/pipe.32
 *fill*         0x00000000c0026efd        0x3 
 .bss           0x00000000c0026f00        0x9 core/terminal.32
                0x00000000c0026f00                terminalCycle
                0x00000000c0026f04                activeTerminal
                0x00000000c0026f08                VgaText::graphicMode
 *fill*         0x00000000c0026f09        0x1 
 .bss           0x00000000c0026f0a        0x2 core/tss.32
                0x00000000c0026f0a                doubleFaultSelector
 *fill*         0x00000000c0026f0c       0x14 
 .bss           0x00000000c0026f20       0x84 core/unixfile.32
                0x00000000c0026f20                sfileLpt
                0x00000000c0026f60                sfileCom
                0x00000000c0026f84                sfileNul
                0x00000000c0026f88                sfilePnt
                0x00000000c0026f8c                sfileAux
                0x00000000c0026f90                sfileCon
                0x00000000c0026f94                initialFilesAdded
                0x00000000c0026f98                unixFileLinkedList
 .bss           0x00000000c0026fa4       0x10 core/virtmgr.32
                0x00000000c0026fa4                twswaps
                0x00000000c0026fa8                swapBalance
                0x00000000c0026fac                Virt::swapfileBitmap
                0x00000000c0026fb0                firstVAS
 .bss           0x00000000c0026fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0026fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0026fb4        0x0 dbg/usban.32
 *fill*         0x00000000c0026fb4        0xc 
 .bss           0x00000000c0026fc0     0x2444 fs/symlink.32
                0x00000000c0026fc0                KiNumWaitingRoomSymlinks
                0x00000000c0026fe0                KiNewlyCreatedIDs
                0x00000000c0027000                KiNewlyCreatedSymlinks
                0x00000000c0027400                KiSymlinkHashTable
                0x00000000c0029400                KiBaseSymlinkID
 .bss           0x00000000c0029404        0x4 fs/vfs.32
                0x00000000c0029404                installedFilesystems
 .bss           0x00000000c0029408        0x0 hal/bus.32
 .bss           0x00000000c0029408        0x0 hal/buzzer.32
 .bss           0x00000000c0029408        0x8 hal/clock.32
                0x00000000c0029408                User::dstOn
                0x00000000c0029409                User::timezoneHalfHourOffset
                0x00000000c002940c                User::timezoneHourOffset
 .bss           0x00000000c0029410        0x0 hal/device.32
 .bss           0x00000000c0029410        0x0 hal/diskctrl.32
 .bss           0x00000000c0029410        0x0 hal/diskphys.32
 .bss           0x00000000c0029410        0x0 hal/fpu.32
 *fill*         0x00000000c0029410       0x10 
 .bss           0x00000000c0029420     0x2000 hal/intctrl.32
                0x00000000c0029420                INT_contexts
                0x00000000c002a420                INT_handlers
 .bss           0x00000000c002b420      0x429 hal/keybrd.32
                0x00000000c002b420                keyboardWaitingTaskList
                0x00000000c002b424                keyboardSetupYet
                0x00000000c002b428                guiKeyboardHandler
                0x00000000c002b440                keystates
 *fill*         0x00000000c002b849       0x17 
 .bss           0x00000000c002b860       0x88 hal/logidisk.32
                0x00000000c002b860                diskAssignments
                0x00000000c002b880                disks
 .bss           0x00000000c002b8e8        0x4 hal/mouse.32
                0x00000000c002b8e8                guiMouseHandler
 .bss           0x00000000c002b8ec        0x0 hal/nic.32
 .bss           0x00000000c002b8ec        0x0 hal/partition.32
 .bss           0x00000000c002b8ec        0x0 hal/serial.32
 .bss           0x00000000c002b8ec        0x4 hal/timer.32
                0x00000000c002b8ec                milliTenthsSinceBoot
 .bss           0x00000000c002b8f0        0x0 hal/vcache.32
 .bss           0x00000000c002b8f0        0x4 hal/video.32
                0x00000000c002b8f0                screen
 *fill*         0x00000000c002b8f4        0xc 
 .bss           0x00000000c002b900      0x480 hw/acpi.32
                0x00000000c002b900                systemSleepFunction
                0x00000000c002b904                systemResetFunction
                0x00000000c002b908                systemShutdownFunction
                0x00000000c002b90c                nextACPITable
                0x00000000c002b920                acpiTables
                0x00000000c002bb20                usingXSDT
                0x00000000c002bb24                MADTpointer
                0x00000000c002bb28                RSDTpointer
                0x00000000c002bb2c                RSDPpointer
                0x00000000c002bb30                nextAPICNMI
                0x00000000c002bb40                apicNMIInfo
                0x00000000c002bbc0                legacyIRQFlags
                0x00000000c002bbe0                ioapicDiscoveryNumber
                0x00000000c002bc00                ioapicFoundInMADT
                0x00000000c002bc20                ioapicAddresses
                0x00000000c002bca0                ioapicGSIBase
                0x00000000c002bd20                processorDiscoveryNumber
                0x00000000c002bd40                matchingAPICID
                0x00000000c002bd60                processorID
 .bss           0x00000000c002bd80       0x10 hw/cpu.32
                0x00000000c002bd80                lastD
                0x00000000c002bd84                lastC
                0x00000000c002bd88                lastB
                0x00000000c002bd8c                lastA
 *fill*         0x00000000c002bd90       0x10 
 .bss           0x00000000c002bda0       0xe0 krnl/atexit.32
                0x00000000c002bda0                KiNextAtexitHandler
                0x00000000c002bdc0                KiAtexitContexts
                0x00000000c002be20                KiAtexitHandlers
 .bss           0x00000000c002be80        0x0 krnl/bootmsg.32
 .bss           0x00000000c002be80        0x0 krnl/compat.32
 .bss           0x00000000c002be80        0x0 krnl/crc32.32
 .bss           0x00000000c002be80        0x8 krnl/env.32
                0x00000000c002be80                KeUserEnv
                0x00000000c002be84                KeSystemEnv
 .bss           0x00000000c002be88        0x0 krnl/inlines.32
 .bss           0x00000000c002be88        0x1 krnl/panic.32
                0x00000000c002be88                KeIsKernelInPanic
 *fill*         0x00000000c002be89       0x17 
 .bss           0x00000000c002bea0       0x48 krnl/powctrl.32
                0x00000000c002bea0                powCtrlOnBattery
                0x00000000c002bec0                currentPowerSettings
                0x00000000c002bee4                secondsSinceLastUserIO
 .bss           0x00000000c002bee8        0x8 krnl/random.32
                0x00000000c002bee8                kiRandSeed
 .bss           0x00000000c002bef0        0x0 krnl/resolve.32
 .bss           0x00000000c002bef0        0x0 krnl/signal.32
 .bss           0x00000000c002bef0        0x0 krnl/syscalls.32
 .bss           0x00000000c002bef0        0x0 net/ethernet.32
 .bss           0x00000000c002bef0        0x4 reg/cm.32
 .bss           0x00000000c002bef4        0x0 reg/registry.32
 .bss           0x00000000c002bef4        0x0 sys/eject.32
 .bss           0x00000000c002bef4        0x0 sys/exit.32
 .bss           0x00000000c002bef4        0x0 sys/getcwd.32
 .bss           0x00000000c002bef4        0x0 sys/getpid.32
 .bss           0x00000000c002bef4        0x0 sys/getramdata.32
 .bss           0x00000000c002bef4        0x0 sys/getvgaptr.32
 .bss           0x00000000c002bef4        0x0 sys/kill.32
 .bss           0x00000000c002bef4        0x0 sys/loaddll.32
 .bss           0x00000000c002bef4        0x0 sys/read.32
 .bss           0x00000000c002bef4        0x0 sys/registersignal.32
 .bss           0x00000000c002bef4        0x0 sys/registry.32
 .bss           0x00000000c002bef4        0x0 sys/sbrk.32
 .bss           0x00000000c002bef4        0x0 sys/setcwd.32
 .bss           0x00000000c002bef4        0x0 sys/settime.32
 .bss           0x00000000c002bef4        0x0 sys/symlink.32
 .bss           0x00000000c002bef4        0x0 sys/timezone.32
 .bss           0x00000000c002bef4        0x0 sys/truncate.32
 .bss           0x00000000c002bef4        0x0 sys/write.32
 .bss           0x00000000c002bef4        0x0 sys/wsbe.32
 .bss           0x00000000c002bef4        0x0 sys/yield.32
 *fill*         0x00000000c002bef4        0xc 
 .bss           0x00000000c002bf00      0x7a4 thr/elf.32
                0x00000000c002bf00                Thr::driverLookupNext
                0x00000000c002bf20                Thr::driverLookupLen
                0x00000000c002c120                Thr::driverLookupAddr
                0x00000000c002c320                Thr::driverNameLookup
                0x00000000c002c520                Thr::kernelSymbols
                0x00000000c002c5a0                Thr::kernelStringTable
                0x00000000c002c620                Thr::kernelSymbolTable
                0x00000000c002c6a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c002c6a4        0x4 
 .bss           0x00000000c002c6a8       0x68 thr/prcssthr.32
                0x00000000c002c6a8                cleanerThread
                0x00000000c002c6ac                weNeedTheCleanerToNotBlock
                0x00000000c002c6b0                retValLockStuff
                0x00000000c002c6b4                retValSchedLock
                0x00000000c002c6b8                lockStuffLock
                0x00000000c002c6bc                schedulerLock
                0x00000000c002c6c0                taskSwitchesPostponedFlag
                0x00000000c002c6c4                postponeTaskSwitchesCounter
                0x00000000c002c6c8                irqDisableCounter
                0x00000000c002c6cc                terminatedTaskList
                0x00000000c002c6d8                sleepingTaskList
                0x00000000c002c6e4                taskList
                0x00000000c002c6f0                kernelProcess
 *fill*         0x00000000c002c710       0x10 
 .bss           0x00000000c002c720       0x40 vm86/vm8086.32
                0x00000000c002c720                Vm::vmRetV
                0x00000000c002c724                Vm::vmDone
                0x00000000c002c725                Vm::vmReady
                0x00000000c002c728                Vm::vm86Thread
                0x00000000c002c72c                Vm::vmToHostCommsPtr
                0x00000000c002c740                Vm::vmToHostComms
 .bss           0x00000000c002c760       0x18 arch/i386/hal.32
                0x00000000c002c760                apic
                0x00000000c002c764                guiPanicHandler
                0x00000000c002c768                fpuOwner
                0x00000000c002c76c                coproLoadFunc
                0x00000000c002c770                coproSaveFunc
                0x00000000c002c774                gpFaultIntercept
 .bss           0x00000000c002c778        0x0 arch/i386/pic.32
 .bss           0x00000000c002c778        0x2 arch/i386/rtc.32
 .bss           0x00000000c002c77a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002c77a        0x6 
 .bss           0x00000000c002c780       0xf0 fs/fat/vfslink.32
                0x00000000c002c780                FAT::fats
                0x00000000c002c7a0                FAT::vfsToFatRemaps
                0x00000000c002c820                fatToVFSRemaps
 .bss           0x00000000c002c870        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002c870       0x10 
 .bss           0x00000000c002c880      0x820 fs/iso9660/vfslink.32
                0x00000000c002c880                iso9660Owner
                0x00000000c002c884                recentSector
                0x00000000c002c8a0                recentBuffer
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002d0a0        0x0 hal/sound/sndport.32
 .bss           0x00000000c002d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c002d0a0        0xd hw/bus/pci.32
                0x00000000c002d0a0                thePCI
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002d0ad        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002d0ad        0x3 
 .bss           0x00000000c002d0b0        0x8 hw/diskphys/ata.32
                0x00000000c002d0b0                ataSectorsWritten
                0x00000000c002d0b4                ataSectorsRead
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002d0b8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002d0b8        0x8 
 .bss           0x00000000c002d0c0       0x41 hw/intctrl/apic.32
                0x00000000c002d0c0                noOfIOAPICs
                0x00000000c002d0e0                ioapics
                0x00000000c002d100                IOAPICsSetupYet
 .bss           0x00000000c002d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002d101        0x3 
 .bss           0x00000000c002d104        0x4 hw/timer/pit.32
                0x00000000c002d104                pitFreq
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002d108        0x0 crtn.32
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003420f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
