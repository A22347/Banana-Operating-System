Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x21afe
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x254 dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f06                Dbg::logs(char*)
                0x00000000c0006f25                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f43                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f64                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000709a        0x2 
 .text          0x00000000c000709c      0x2d4 dbg/usban.32
                0x00000000c000709c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007108                __ubsan_handle_type_mismatch_v1
                0x00000000c00071e4                __ubsan_handle_pointer_overflow
                0x00000000c0007210                __ubsan_handle_out_of_bounds
                0x00000000c000723c                __ubsan_handle_add_overflow
                0x00000000c0007268                __ubsan_handle_load_invalid_value
                0x00000000c0007294                __ubsan_handle_divrem_overflow
                0x00000000c00072c0                __ubsan_handle_mul_overflow
                0x00000000c00072ec                __ubsan_handle_sub_overflow
                0x00000000c0007318                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007344                __ubsan_handle_negate_overflow
 .text          0x00000000c0007370      0x814 fs/symlink.32
                0x00000000c00074bf                KiDeinitialiseSymlinks(void*)
                0x00000000c0007552                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075d5                KeInitialiseSymlinks()
                0x00000000c0007737                KiIsSymlinkRegistered(char const*)
                0x00000000c00078a1                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a48                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b84      0xd88 fs/vfs.32
                0x00000000c0007b84                File::read(unsigned long long, void*, int*)
                0x00000000c0007bdc                File::write(unsigned long long, void*, int*)
                0x00000000c0007c34                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c8c                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cba                File::isAtty()
                0x00000000c0007cbe                Directory::isAtty()
                0x00000000c0007cc2                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cc8                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cce                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cf8                File::~File()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d46                Directory::~Directory()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007da2                Filesystem::~Filesystem()
                0x00000000c0007dc6                Fs::getcwd(Process*, char*, int)
                0x00000000c0007df0                Fs::initVFS()
                0x00000000c0007e1a                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008150                File::open(FileOpenMode)
                0x00000000c00081ae                File::close()
                0x00000000c000820e                File::seek(unsigned long long)
                0x00000000c0008264                File::truncate(unsigned long long)
                0x00000000c00082ba                File::tell(unsigned long long*)
                0x00000000c000830a                File::rewind()
                0x00000000c000831e                File::unlink()
                0x00000000c000836a                File::rename(char const*)
                0x00000000c00083b8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0008414                File::exists()
                0x00000000c0008452                File::stat(unsigned long long*, bool*)
                0x00000000c00084b3                Fs::setcwd(Process*, char*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c00086da                Directory::open()
                0x00000000c0008736                Directory::close()
                0x00000000c0008796                Directory::unlink()
                0x00000000c00087e2                Directory::rename(char const*)
                0x00000000c0008830                Directory::exists()
                0x00000000c000886e                Directory::read(dirent*)
                0x00000000c00088ba                Directory::create()
                0x00000000c0008906                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000890c       0x86 hal/bus.32
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008968                Bus::~Bus()
 .text          0x00000000c0008992       0x9b hal/buzzer.32
                0x00000000c0008992                KeBeepThread(void*)
                0x00000000c00089d3                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a2d        0x1 
 .text          0x00000000c0008a2e      0xeac hal/clock.32
                0x00000000c0008a2e                KeLoadTimezoneStrings()
                0x00000000c0008dbd                KeGetTimezoneStringFromID(int)
                0x00000000c0008e5a                KeUpdateTimezone(char const*)
                0x00000000c0008f54                KeSetTimezone(char const*)
                0x00000000c0008fb1                KeSetTimezone(int)
                0x00000000c0008fe4                KeLoadTimezone()
                0x00000000c000905e                Clock::Clock(char const*)
                0x00000000c000905e                Clock::Clock(char const*)
                0x00000000c0009094                Clock::~Clock()
                0x00000000c0009094                Clock::~Clock()
                0x00000000c00090b8                Clock::~Clock()
                0x00000000c00090e2                Clock::timeInSecondsLocal()
                0x00000000c0009158                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c00091e4                KeDatetimeToSeconds(datetime_t)
                0x00000000c0009524                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c00095f2                KeSecondsToDatetime(unsigned long long)
                0x00000000c00098ae                Clock::timeInDatetimeLocal()
 .text          0x00000000c00098da      0x47a hal/device.32
                0x00000000c00098da                Device::hibernate()
                0x00000000c00098dc                Device::wake()
                0x00000000c00098de                Device::detect()
                0x00000000c00098e0                Device::disableLegacy()
                0x00000000c00098e2                Device::powerSaving(PowerSavingLevel)
                0x00000000c00098e4                DriverlessDevice::close(int, int, void*)
                0x00000000c00098e8                DriverlessDevice::detect()
                0x00000000c00098ea                DriverlessDevice::open(int, int, void*)
                0x00000000c00098fe                Device::~Device()
                0x00000000c00098fe                Device::~Device()
                0x00000000c000990c                Device::~Device()
                0x00000000c0009934                Device::findAndLoadDriver()
                0x00000000c0009942                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0009968                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00099a8                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00099d2                Device::getParent()
                0x00000000c00099de                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00099fc                Device::addChild(Device*)
                0x00000000c0009a40                Device::removeAllChildren()
                0x00000000c0009a86                Device::hibernateAll()
                0x00000000c0009ab6                Device::wakeAll()
                0x00000000c0009ae6                Device::detectAll()
                0x00000000c0009b16                Device::disableLegacyAll()
                0x00000000c0009b18                Device::loadDriversForAll()
                0x00000000c0009b1a                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009b50                Device::setName(char const*)
                0x00000000c0009b5e                Device::Device(char const*)
                0x00000000c0009b5e                Device::Device(char const*)
                0x00000000c0009c5a                Device::getName()
                0x00000000c0009c64                Device::closeAll()
                0x00000000c0009cb0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009cb0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009ce6                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d2a                getDevicesOfType(DeviceType)
 .text          0x00000000c0009d54       0x86 hal/diskctrl.32
                0x00000000c0009d54                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d54                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d8c                HardDiskController::~HardDiskController()
                0x00000000c0009d8c                HardDiskController::~HardDiskController()
                0x00000000c0009db0                HardDiskController::~HardDiskController()
 .text          0x00000000c0009dda       0xe2 hal/diskphys.32
                0x00000000c0009dda                PhysicalDisk::eject()
                0x00000000c0009dde                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009dde                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e46                PhysicalDisk::startCache()
                0x00000000c0009e6e                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e6e                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e92                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009ebc        0x0 hal/fpu.32
 .text          0x00000000c0009ebc        0x0 hal/intctrl.32
 .text          0x00000000c0009ebc      0x874 hal/keybrd.32
                0x00000000c0009ebc                startGUI(void*)
                0x00000000c0009f21                startGUIVESA(void*)
                0x00000000c0009f86                sendKeyToTerminal(unsigned char)
                0x00000000c000a05c                sendKeyboardToken(KeyboardToken)
                0x00000000c000a518                clearInternalKeybuffer(VgaText*)
                0x00000000c000a54d                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6a6                Keyboard::Keyboard(char const*)
                0x00000000c000a6a6                Keyboard::Keyboard(char const*)
                0x00000000c000a6e2                Keyboard::~Keyboard()
                0x00000000c000a6e2                Keyboard::~Keyboard()
                0x00000000c000a706                Keyboard::~Keyboard()
 .text          0x00000000c000a730      0x3f8 hal/logidisk.32
                0x00000000c000a730                LogicalDisk::close(int, int, void*)
                0x00000000c000a734                LogicalDisk::~LogicalDisk()
                0x00000000c000a734                LogicalDisk::~LogicalDisk()
                0x00000000c000a758                LogicalDisk::~LogicalDisk()
                0x00000000c000a782                LogicalDisk::open(int, int, void*)
                0x00000000c000a796                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a7ce                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a814                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a814                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a8d4                LogicalDisk::assignDriveLetter()
                0x00000000c000a98e                LogicalDisk::mount()
                0x00000000c000a9d6                LogicalDisk::unmount()
                0x00000000c000a9e6                LogicalDisk::eject()
                0x00000000c000a9fa                LogicalDisk::unassignDriveLetter()
                0x00000000c000aa50                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aabc                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab28       0x86 hal/mouse.32
                0x00000000c000ab28                Mouse::Mouse(char const*)
                0x00000000c000ab28                Mouse::Mouse(char const*)
                0x00000000c000ab60                Mouse::~Mouse()
                0x00000000c000ab60                Mouse::~Mouse()
                0x00000000c000ab84                Mouse::~Mouse()
 .text          0x00000000c000abae       0x90 hal/nic.32
                0x00000000c000abae                NIC::getMAC()
                0x00000000c000abb4                NIC::write(int, unsigned char*, int*)
                0x00000000c000abba                NIC::NIC(char const*)
                0x00000000c000abba                NIC::NIC(char const*)
                0x00000000c000abf0                NIC::~NIC()
                0x00000000c000abf0                NIC::~NIC()
                0x00000000c000ac14                NIC::~NIC()
 .text          0x00000000c000ac3e      0x33b hal/partition.32
                0x00000000c000ac3e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ace6                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000af79        0x3 
 .text          0x00000000c000af7c       0x86 hal/serial.32
                0x00000000c000af7c                Serial::Serial(char const*)
                0x00000000c000af7c                Serial::Serial(char const*)
                0x00000000c000afb4                Serial::~Serial()
                0x00000000c000afb4                Serial::~Serial()
                0x00000000c000afd8                Serial::~Serial()
 *fill*         0x00000000c000b002        0x2 
 .text          0x00000000c000b004      0x264 hal/timer.32
                0x00000000c000b004                Timer::Timer(char const*)
                0x00000000c000b004                Timer::Timer(char const*)
                0x00000000c000b03c                Timer::~Timer()
                0x00000000c000b03c                Timer::~Timer()
                0x00000000c000b060                Timer::~Timer()
                0x00000000c000b08a                Timer::read()
                0x00000000c000b095                setupTimer(int)
                0x00000000c000b0d0                timerHandler(unsigned int)
 .text          0x00000000c000b268      0x5fe hal/vcache.32
                0x00000000c000b268                VCache::VCache(PhysicalDisk*)
                0x00000000c000b268                VCache::VCache(PhysicalDisk*)
                0x00000000c000b3d8                VCache::invalidateReadBuffer()
                0x00000000c000b3e8                VCache::writeWriteBuffer()
                0x00000000c000b434                VCache::~VCache()
                0x00000000c000b434                VCache::~VCache()
                0x00000000c000b48c                VCache::~VCache()
                0x00000000c000b4b4                VCache::write(unsigned long long, int, void*)
                0x00000000c000b682                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b866      0x70e hal/video.32
                0x00000000c000b866                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b8b2                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b922                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b9a0                Video::clearScreen(unsigned int)
                0x00000000c000b9d4                Video::putpixel(int, int, unsigned int)
                0x00000000c000b9e2                Video::readPixelApprox(int, int)
                0x00000000c000b9f6                Video::Video(char const*)
                0x00000000c000b9f6                Video::Video(char const*)
                0x00000000c000ba2c                Video::~Video()
                0x00000000c000ba2c                Video::~Video()
                0x00000000c000ba50                Video::~Video()
                0x00000000c000ba7a                Video::isMonochrome()
                0x00000000c000ba86                Video::getWidth()
                0x00000000c000ba92                Video::getHeight()
                0x00000000c000ba9e                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb5a                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000bf04                Video::putTGA(int, int, unsigned char*, int)
 .text          0x00000000c000bf74     0x114f hw/acpi.32
                0x00000000c000bf74                ACPI::close(int, int, void*)
                0x00000000c000bf7c                loadACPITables(unsigned char*)
                0x00000000c000c1dc                findRSDT(unsigned char*)
                0x00000000c000c328                findDataTable(unsigned char*, char*)
                0x00000000c000c39c                scanMADT()
                0x00000000c000c7f4                ACPI::ACPI()
                0x00000000c000c7f4                ACPI::ACPI()
                0x00000000c000c848                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c944                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ca10                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ca18                ACPI::detectPCI()
                0x00000000c000cc24                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cc3c                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d0c3        0x1 
 .text          0x00000000c000d0c4       0xea krnl/assert.32
                0x00000000c000d0c4                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d1ae       0xb6 krnl/atexit.32
                0x00000000c000d1ae                KeInitialiseAtexit()
                0x00000000c000d1cd                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d201                KeExecuteAtexit()
 .text          0x00000000c000d264       0x9f krnl/bootmsg.32
                0x00000000c000d264                KeDisplaySplashScreen()
                0x00000000c000d293                KeSetBootMessage(char const*)
 .text          0x00000000c000d303       0x5f krnl/c++.32
                0x00000000c000d303                __cxa_atexit
                0x00000000c000d306                __cxa_finalize
                0x00000000c000d307                __stack_chk_fail
                0x00000000c000d33d                __cxa_pure_virtual
                0x00000000c000d34e                operator new[](unsigned long)
                0x00000000c000d353                operator delete(void*, unsigned long)
                0x00000000c000d358                operator delete[](void*)
                0x00000000c000d35d                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000d362        0x2 
 .text          0x00000000c000d364       0x44 krnl/cdefs.32
                0x00000000c000d364                CUnlockScheduler
                0x00000000c000d37c                CLockScheduler
                0x00000000c000d38c                CPrintf
 .text          0x00000000c000d3a8      0xd56 krnl/cm.32
                0x00000000c000d3a8                CmOpen(char const*)
                0x00000000c000d4c6                CmClose(Reghive_Tag*)
                0x00000000c000d4dc                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d518                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d58f                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d5ce                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d600                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d63c                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d664                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d685                CmExpand(Reghive_Tag*, int)
                0x00000000c000d700                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d786                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d87a                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d9b6                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000da17                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000da47                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000da7e                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000daa8                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000dae8                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000db8c                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000dbba                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dd58                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000dda5                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000de1f                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000de72                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000df36                zStrtok(char*, char const*)
                0x00000000c000dfa8                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000e029                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000e0cc                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000e0fe        0x2 
 .text          0x00000000c000e100       0x1d krnl/compat.32
                0x00000000c000e100                Krnl::handlePowerButton()
                0x00000000c000e110                Krnl::handleSleepButton()
 *fill*         0x00000000c000e11d        0x1 
 .text          0x00000000c000e11e      0x2c3 krnl/computer.32
                0x00000000c000e11e                Computer::close(int, int, void*)
                0x00000000c000e124                Computer::open(int, int, void*)
                0x00000000c000e20a                KeFirstTask()
                0x00000000c000e32c                Computer::Computer()
                0x00000000c000e32c                Computer::Computer()
                0x00000000c000e370                KePrepareShutdown()
                0x00000000c000e390                KeShutdown()
                0x00000000c000e3b4                KeSleep()
                0x00000000c000e3c0                KeRestart()
 .text          0x00000000c000e3e1       0x2b krnl/crc32.32
                0x00000000c000e3e1                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e40c      0x5bf krnl/env.32
                0x00000000c000e40c                EnvVarContainer::getEnv(char const*)
                0x00000000c000e44a                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e50c                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e50e                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e732                EnvVarContainer::__loadSystem()
                0x00000000c000e74c                EnvVarContainer::__loadUser()
                0x00000000c000e74e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e74e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e770                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e770                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e7a0                KeGetEnv(Process*, char const*)
                0x00000000c000e805                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e81f                KeSetEnvUser(char const*, char const*)
                0x00000000c000e83e                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e851                KeDeleteEnvSystem(char const*)
                0x00000000c000e852                KeDeleteEnvUser(char const*)
                0x00000000c000e853                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e854                KeNewProcessEnv(Process*)
                0x00000000c000e876                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e8c2                KeLoadSystemEnv()
                0x00000000c000e8f0                KeLoadUserEnv()
                0x00000000c000e916                KeFlushEnv()
                0x00000000c000e917                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e937                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e9cb        0x1 
 .text          0x00000000c000e9cc      0x361 krnl/fault.32
                0x00000000c000e9cc                KeSetupInterrupts()
                0x00000000c000ea44                int_handler
                0x00000000c000eb74                KeDisplayProgramFault(char const*)
                0x00000000c000ebc4                KeGeneralProtectionFault(void*, void*)
                0x00000000c000ec18                KePageFault(void*, void*)
                0x00000000c000ec7c                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000ec8c                KeOtherFault(void*, void*)
                0x00000000c000ecc0                KeOpcodeFault(void*, void*)
                0x00000000c000ed14                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000ed2d        0x1 
 .text          0x00000000c000ed2e      0x1db krnl/gdt.32
                0x00000000c000ed2e                GDTEntry::setBase(unsigned int)
                0x00000000c000ed4a                GDTEntry::setLimit(unsigned int)
                0x00000000c000ed68                GDT::GDT()
                0x00000000c000ed68                GDT::GDT()
                0x00000000c000ed7e                GDT::addEntry(GDTEntry)
                0x00000000c000eda0                GDT::getNumberOfEntries()
                0x00000000c000eda8                GDT::flush()
                0x00000000c000edca                GDT::setup()
 .text          0x00000000c000ef09       0x20 krnl/idle.32
                0x00000000c000ef09                idleFunction(void*)
 *fill*         0x00000000c000ef29        0x3 
 .text          0x00000000c000ef2c      0x46c krnl/idt.32
                0x00000000c000ef2c                IDTEntry::IDTEntry(bool)
                0x00000000c000ef2c                IDTEntry::IDTEntry(bool)
                0x00000000c000efa6                IDTEntry::setOffset(unsigned int)
                0x00000000c000efbc                IDT::IDT()
                0x00000000c000efbc                IDT::IDT()
                0x00000000c000efbe                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000efc6                IDT::addEntry(IDTEntry, int)
                0x00000000c000efe0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000f018                IDT::flush()
                0x00000000c000f032                IDT::setup()
 .text          0x00000000c000f398       0x9a krnl/inlines.32
                0x00000000c000f398                CPU::current()
                0x00000000c000f3a4                operator new(unsigned long)
                0x00000000c000f3a9                operator delete(void*)
                0x00000000c000f3ae                disableIRQs()
                0x00000000c000f3b0                enableIRQs()
                0x00000000c000f3b2                lockScheduler()
                0x00000000c000f3ba                unlockScheduler()
                0x00000000c000f3cc                lockStuff()
                0x00000000c000f3da                unlockStuff()
                0x00000000c000f417                Virt::getAKernelVAS()
                0x00000000c000f41d                __not_memcpy
 .text          0x00000000c000f432      0x2bc krnl/intlformat.32
                0x00000000c000f432                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f622                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f644                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f666                KeSetLocale(klocale_t)
                0x00000000c000f67c                KeInitialiseLocale()
                0x00000000c000f6ea                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f6eb                KeFormatCurrency(char*, int, double)
                0x00000000c000f6ec                KeFormatNumber(char*, long long, long long)
                0x00000000c000f6ed                KeFormatNumber(char*, double)
 *fill*         0x00000000c000f6ee        0x2 
 .text          0x00000000c000f6f0      0x42e krnl/intops.32
                0x00000000c000f6f0                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f878                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000fa24                KeGetDigitsInNumber(long long)
                0x00000000c000fa90                KeItoa(unsigned long long, char*)
                0x00000000c000fac0                KeItoa(long long, char*)
                0x00000000c000faf0                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000fb1e      0x207 krnl/kheap.32
                0x00000000c000fb1e                sbrk
                0x00000000c000fbb5                sbrk_thunk
                0x00000000c000fbeb                mmap
                0x00000000c000fc49                munmap
                0x00000000c000fc5e                liballoc_lock()
                0x00000000c000fc6c                liballoc_unlock()
                0x00000000c000fc84                liballoc_alloc(int)
                0x00000000c000fc9c                liballoc_free(void*, int)
                0x00000000c000fcb7                realloc
                0x00000000c000fccb                malloc
                0x00000000c000fcdb                free
                0x00000000c000fceb                rfree
                0x00000000c000fcfb                calloc
 *fill*         0x00000000c000fd25        0x3 
 .text          0x00000000c000fd28      0x1d3 krnl/mailbox.32
                0x00000000c000fd28                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000fd88                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000fde8                KeMailboxCreate()
                0x00000000c000fe1c                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fe80                KeMailboxGet(Mailbox*, void**)
                0x00000000c000fee4                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000fefb       0xfd krnl/main.32
                0x00000000c000fefb                KeEntryPoint
 .text          0x00000000c000fff8       0x1a krnl/mutex.32
                0x00000000c000fff8                Mutex::Mutex()
                0x00000000c000fff8                Mutex::Mutex()
 .text          0x00000000c0010012        0xc krnl/panic.32
                0x00000000c0010012                KePanic(char const*)
 .text          0x00000000c001001e      0x667 krnl/physmgr.32
                0x00000000c001001e                Phys::allocateDMA(unsigned long)
                0x00000000c0010106                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0010141                Phys::setPageState(unsigned long, bool)
                0x00000000c0010181                Phys::getPageState(unsigned long)
                0x00000000c001019d                Phys::freePage(unsigned long)
                0x00000000c0010206                Phys::allocatePage()
                0x00000000c00102e4                Phys::allocateContiguousPages(int)
                0x00000000c001035f                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0010397                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0010685        0x1 
 .text          0x00000000c0010686      0x275 krnl/pipe.32
                0x00000000c0010686                Pipe::isAtty()
                0x00000000c001068a                Pipe::~Pipe()
                0x00000000c001068a                Pipe::~Pipe()
                0x00000000c00106ae                Pipe::~Pipe()
                0x00000000c00106d6                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0010796                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0010894                Pipe::Pipe(int)
                0x00000000c0010894                Pipe::Pipe(int)
 .text          0x00000000c00108fb      0x10c krnl/powctrl.32
                0x00000000c00108fb                KePowerThread(void*)
                0x00000000c001092d                KeChangePowerSettings(PowerSettings)
                0x00000000c0010943                KeUserIOReceived()
                0x00000000c001094e                KeHandlePowerButton()
                0x00000000c0010966                KeHandleSleepButton()
                0x00000000c001097e                KeSetupPowerManager()
 .text          0x00000000c0010a07       0x9d krnl/random.32
                0x00000000c0010a07                KeRand()
                0x00000000c0010a49                KeSeedRand(unsigned int)
                0x00000000c0010a72                KeInitRand()
 .text          0x00000000c0010aa4      0x1bc krnl/resolve.32
                0x00000000c0010aa4                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010c60      0x415 krnl/semaphore.32
                0x00000000c0010c60                Semaphore::Semaphore(int)
                0x00000000c0010c60                Semaphore::Semaphore(int)
                0x00000000c0010c90                Semaphore::tryAcquire()
                0x00000000c0010d64                Semaphore::assertLocked(char const*)
                0x00000000c0010df0                Semaphore::acquire(int)
                0x00000000c0010fa8                Semaphore::acquire()
                0x00000000c0010fc4                Semaphore::release()
 .text          0x00000000c0011075      0x407 krnl/signal.32
                0x00000000c0011075                KiSigKill(int)
                0x00000000c0011089                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001108a                KiDefaultSignalHandlerPause(int)
                0x00000000c00110b6                KiDefaultSignalHandlerResume(int)
                0x00000000c00110e2                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00110e7                KeInitSignals()
                0x00000000c001114c                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0011182                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0011203                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011399                KiCheckSignalZ
                0x00000000c00113ef                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c001142a                KiFinishSignalZ
 .text          0x00000000c001147c      0xe18 krnl/syscalls.32
                0x00000000c001147c                SysSeekDir(regs*)
                0x00000000c0011481                SysTellDir(regs*)
                0x00000000c0011486                SysVerify(regs*)
                0x00000000c0011490                SysGetArgc(regs*)
                0x00000000c00114a4                SysTTYName(regs*)
                0x00000000c00114ac                SysFormatDisk(regs*)
                0x00000000c0011523                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011577                SysGetDiskVolumeLabel(regs*)
                0x00000000c00115d0                SysRealpath(regs*)
                0x00000000c0011614                SysReadDir(regs*)
                0x00000000c0011694                SysIsATTY(regs*)
                0x00000000c00116ee                SysSeek(regs*)
                0x00000000c001174c                SysTell(regs*)
                0x00000000c00117c1                SysSize(regs*)
                0x00000000c001183b                SysSizeFromFilename(regs*)
                0x00000000c0011965                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011a8f                SysClose(regs*)
                0x00000000c0011aef                SysOpenDir(regs*)
                0x00000000c0011b6c                SysMakeDir(regs*)
                0x00000000c0011bda                SysCloseDir(regs*)
                0x00000000c0011c2e                SysWait(regs*)
                0x00000000c0011c4f                SysNotImpl(regs*)
                0x00000000c0011c6a                SysPanic(regs*)
                0x00000000c0011c85                SysRmdir(regs*)
                0x00000000c0011cea                SysUnlink(regs*)
                0x00000000c0011d4f                SysGetArgv(regs*)
                0x00000000c0011d9c                SysUSleep(regs*)
                0x00000000c0011dc6                SysSpawn(regs*)
                0x00000000c0011e39                SysGetEnv(regs*)
                0x00000000c0011eea                SysSetFatAttrib(regs*)
                0x00000000c0011f5d                SysShutdown(regs*)
                0x00000000c0011fba                SysPipe(regs*)
                0x00000000c0011fff                SysGetUnixTime(regs*)
                0x00000000c0012013                string_ends_with(char const*, char const*)
                0x00000000c001205b                SysOpen(regs*)
                0x00000000c0012252                KeSystemCall(regs*, void*)
 .text          0x00000000c0012294      0xb0b krnl/terminal.32
                0x00000000c0012294                VgaText::isAtty()
                0x00000000c0012298                VgaText::~VgaText()
                0x00000000c0012298                VgaText::~VgaText()
                0x00000000c00122bc                VgaText::~VgaText()
                0x00000000c00122e6                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0012306                setTerminalScrollLock(bool)
                0x00000000c0012307                doTerminalCycle()
                0x00000000c0012308                addToTerminalCycle(VgaText*)
                0x00000000c0012309                scrollTerminalScrollLock(int)
                0x00000000c001230a                VgaText::updateTitle()
                0x00000000c001230c                VgaText::load()
                0x00000000c001230e                VgaText::updateCursor()
                0x00000000c0012324                VgaText::doANSI_SGR(int)
                0x00000000c0012398                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00123a8                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00123b8                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00123d8                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00123e4                VgaText::setTitleColour(VgaColour)
                0x00000000c00123f0                VgaText::setTitle(char*)
                0x00000000c00123f2                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0012404                VgaText::scrollScreen()
                0x00000000c0012496                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00124a6                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0012552                VgaText::getCursorX()
                0x00000000c001255a                VgaText::getCursorY()
                0x00000000c0012562                VgaText::setCursor(int, int)
                0x00000000c0012579                setActiveTerminal(VgaText*)
                0x00000000c00125c4                VgaText::clearScreen()
                0x00000000c0012612                VgaText::setCursorX(int)
                0x00000000c001262a                VgaText::setCursorY(int)
                0x00000000c0012642                VgaText::incrementCursor(bool)
                0x00000000c0012696                VgaText::decrementCursor(bool)
                0x00000000c00126b8                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0012788                VgaText::putchar(char)
                0x00000000c0012880                VgaText::putx(unsigned int)
                0x00000000c00128c6                VgaText::puts(char const*)
                0x00000000c00128ec                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0012938                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0012ab2                VgaText::VgaText(char const*)
                0x00000000c0012ab2                VgaText::VgaText(char const*)
                0x00000000c0012c12                VgaText::receiveKey(unsigned char)
                0x00000000c0012d9e                VgaText::doUpdate()
 *fill*         0x00000000c0012d9f        0x1 
 .text          0x00000000c0012da0      0x224 krnl/tss.32
                0x00000000c0012da0                TSS::TSS()
                0x00000000c0012da0                TSS::TSS()
                0x00000000c0012db0                TSS::setESP(unsigned long)
                0x00000000c0012dc4                TSS::flush()
                0x00000000c0012de4                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012fc4      0x4dc krnl/unixfile.32
                0x00000000c0012fc4                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c001301a                ReservedFilename::isAtty()
                0x00000000c0013036                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0013094                UnixFile::getFileDescriptor()
                0x00000000c001309c                UnixFile::UnixFile(int)
                0x00000000c001309c                UnixFile::UnixFile(int)
                0x00000000c0013250                ReservedFilename::ReservedFilename(int)
                0x00000000c0013250                ReservedFilename::ReservedFilename(int)
                0x00000000c0013282                UnixFile::~UnixFile()
                0x00000000c0013282                UnixFile::~UnixFile()
                0x00000000c001331e                UnixFile::~UnixFile()
                0x00000000c0013346                ReservedFilename::~ReservedFilename()
                0x00000000c0013346                ReservedFilename::~ReservedFilename()
                0x00000000c001336a                ReservedFilename::~ReservedFilename()
                0x00000000c0013391                KeGetFileFromDescriptor(int)
 .text          0x00000000c00134a0     0x14bc krnl/virtmgr.32
                0x00000000c00134a0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00134da                Virt::getPageState(unsigned long)
                0x00000000c00134fd                Virt::allocateKernelVirtualPages(int)
                0x00000000c0013622                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0013645                Virt::swapIDToSector(unsigned long)
                0x00000000c001365b                Virt::allocateSwapfilePage()
                0x00000000c00136db                Virt::virtualMemorySetup()
                0x00000000c001372c                Virt::setupPageSwapping(int)
                0x00000000c001379e                VAS::setCPUSpecific(unsigned long)
                0x00000000c00137a0                VAS::VAS(VAS*)
                0x00000000c00137a0                VAS::VAS(VAS*)
                0x00000000c00137b8                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00137e6                VAS::getPageTableEntry(unsigned long)
                0x00000000c0013805                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0013942                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0013966                VAS::virtualToPhysical(unsigned long)
                0x00000000c0013980                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c00139c2                VAS::VAS()
                0x00000000c00139c2                VAS::VAS()
                0x00000000c0013a2c                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0013a4c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0013a78                VAS::~VAS()
                0x00000000c0013a78                VAS::~VAS()
                0x00000000c0013be0                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013ce4                VAS::allocatePages(int, int)
                0x00000000c0013dca                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013e22                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013f18                VAS::VAS(bool)
                0x00000000c0013f18                VAS::VAS(bool)
                0x00000000c0014100                VAS::evict(unsigned long)
                0x00000000c0014204                VAS::canLockPage(unsigned long)
                0x00000000c001421e                VAS::unlockPage(unsigned long)
                0x00000000c0014252                VAS::canLockPages(unsigned long, int)
                0x00000000c001428e                VAS::unlockPages(unsigned long, int)
                0x00000000c00142ca                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c00145da                VAS::lockPage(unsigned long)
                0x00000000c001464c                VAS::lockPages(unsigned long, int)
                0x00000000c0014688                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c00146fc                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c0014728                VAS::scanForEviction()
                0x00000000c0014861                mapVASFirstTime
 .text          0x00000000c001495c       0x2f sys/alarm.32
                0x00000000c001495c                SysAlarm(regs*)
 .text          0x00000000c001498b       0x36 sys/eject.32
                0x00000000c001498b                SysEject(regs*)
 .text          0x00000000c00149c1       0x18 sys/exit.32
                0x00000000c00149c1                SysExit(regs*)
 .text          0x00000000c00149d9       0x1f sys/getcwd.32
                0x00000000c00149d9                SysGetCwd(regs*)
 .text          0x00000000c00149f8       0x26 sys/getpid.32
                0x00000000c00149f8                SysGetPID(regs*)
 .text          0x00000000c0014a1e       0x21 sys/getramdata.32
                0x00000000c0014a1e                SysGetRAMData(regs*)
 .text          0x00000000c0014a3f       0x97 sys/getvgaptr.32
                0x00000000c0014a3f                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014ad6        0x2 
 .text          0x00000000c0014ad8       0xb9 sys/kill.32
                0x00000000c0014ad8                SysKill(regs*)
 .text          0x00000000c0014b91       0xa8 sys/loaddll.32
                0x00000000c0014b91                SysLoadDLL(regs*)
 .text          0x00000000c0014c39       0x12 sys/pause.32
                0x00000000c0014c39                SysPause(regs*)
 .text          0x00000000c0014c4b       0x68 sys/read.32
                0x00000000c0014c4b                SysRead(regs*)
 .text          0x00000000c0014cb3       0x29 sys/registersignal.32
                0x00000000c0014cb3                SysRegisterSignal(regs*)
 .text          0x00000000c0014cdc      0x1cc sys/registry.32
                0x00000000c0014cdc                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014d20                SysRegistryReadExtent(regs*)
                0x00000000c0014d68                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014d7f                SysRegistryEnterDirectory(regs*)
                0x00000000c0014d96                SysRegistryGetNext(regs*)
                0x00000000c0014dad                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014de7                SysRegistryOpen(regs*)
                0x00000000c0014dfb                SysRegistryClose(regs*)
                0x00000000c0014e12                SysRegistryEasyReadString(regs*)
                0x00000000c0014e5e                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014ea8       0x55 sys/sbrk.32
                0x00000000c0014ea8                SysSbrk(regs*)
 .text          0x00000000c0014efd       0x1c sys/setcwd.32
                0x00000000c0014efd                SysSetCwd(regs*)
 .text          0x00000000c0014f19       0xd7 sys/settime.32
                0x00000000c0014f19                SysSetTime(regs*)
 .text          0x00000000c0014ff0       0x73 sys/symlink.32
                0x00000000c0014ff0                SysSymlink(regs*)
 .text          0x00000000c0015063       0x3e sys/timezone.32
                0x00000000c0015063                SysTimezone(regs*)
 .text          0x00000000c00150a1       0xfc sys/truncate.32
                0x00000000c00150a1                SysTruncate(regs*)
 .text          0x00000000c001519d       0x68 sys/write.32
                0x00000000c001519d                SysWrite(regs*)
 .text          0x00000000c0015205       0x9d sys/wsbe.32
                0x00000000c0015205                SysWsbe(regs*)
 .text          0x00000000c00152a2       0x28 sys/yield.32
                0x00000000c00152a2                SysYield(regs*)
 *fill*         0x00000000c00152ca        0x2 
 .text          0x00000000c00152cc      0x1a7 thr/alarm.32
                0x00000000c00152cc                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c00153c4                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c0015473     0x120b thr/elf.32
                0x00000000c0015473                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0015705                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0015917                Thr::runtimeReferenceHelper()
                0x00000000c001592a                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0015979                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0015c37                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0016370                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00163a2                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00163d9                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00163f3                Thr::loadDLL(char const*, bool)
                0x00000000c0016645                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c001667e       0x5a thr/exec.32
                0x00000000c001667e                KeProcessExec(Process*, char const*)
 .text          0x00000000c00166d8     0x1291 thr/prcssthr.32
                0x00000000c00166d8                userModeEntryPoint(void*)
                0x00000000c0016704                changeTSS
                0x00000000c0016734                switchToThread(ThreadControlBlock*)
                0x00000000c001681c                Process::addArgs(char**)
                0x00000000c0016888                Process::Process(char const*, Process*, char**)
                0x00000000c0016888                Process::Process(char const*, Process*, char**)
                0x00000000c0016ab0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016ab0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016c9c                taskStartupFunction
                0x00000000c0016ca8                KeDisablePreemption()
                0x00000000c0016cd0                KeRestorePreemption()
                0x00000000c0016cf0                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016e30                Process::createUserThread()
                0x00000000c0016e50                setupMultitasking(void (*)())
                0x00000000c0016f88                schedule()
                0x00000000c001701c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0017048                blockTask(TaskState)
                0x00000000c0017084                waitTask(int, int*, int)
                0x00000000c00170c8                milliTenthSleepUntil(unsigned long long)
                0x00000000c001717c                milliTenthSleep(unsigned long long)
                0x00000000c0017194                sleep(unsigned long long)
                0x00000000c00171b4                sleep(unsigned int)
                0x00000000c00171cc                milliTenthSleep(unsigned int)
                0x00000000c00171ec                taskReturned
                0x00000000c0017234                Thr::processFromPID(int)
                0x00000000c00172e4                unblockTask(ThreadControlBlock*)
                0x00000000c0017398                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0017674                cleanerTaskFunction(void*)
                0x00000000c001778c                terminateTask(int)
                0x00000000c001789c                Thr::terminateFromIRQ(int)
 .text          0x00000000c0017969      0xd10 vm86/vm8086.32
                0x00000000c0017969                Vm::inbv(unsigned short)
                0x00000000c001797c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00179b2                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00179c2                Vm::getSegment(unsigned int)
                0x00000000c00179ca                Vm::getOffset(unsigned int)
                0x00000000c00179cf                Vm::mainloop2()
                0x00000000c0017a09                Vm::mainVm8086Loop(void*)
                0x00000000c0017a1c                Vm::mainloop3(unsigned long)
                0x00000000c0017a42                Vm::initialise8086()
                0x00000000c0017a85                Vm::resetConventionalMemory8086()
                0x00000000c0017a86                Vm::finish8086()
                0x00000000c0017ae8                Vm::getOutput8086(unsigned char*)
                0x00000000c0017b0d                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017c3a                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017e48                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017ee1                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017ef2                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017f04                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017f15                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017f2a                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017f40                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017f55                Vm::faultHandler(regs*)
 *fill*         0x00000000c0018679        0x1 
 .text          0x00000000c001867a     0x1ee7 arch/i386/hal.32
                0x00000000c001867a                noCopro(unsigned long)
                0x00000000c001867c                CPU::close(int, int, void*)
                0x00000000c001867f                x86ReadCMOS(unsigned char)
                0x00000000c00186d3                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c0018733                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0018752                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c001876f                AMD_K6_writeback(int, int, int)
                0x00000000c001882f                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00188cd                cpuidCheckEDX(unsigned int)
                0x00000000c00188fa                cpuidCheckECX(unsigned int)
                0x00000000c0018928                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018956                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018984                HalDetectFeatures()
                0x00000000c001974f                HalEnableNMI()
                0x00000000c0019762                HalDisableNMI()
                0x00000000c0019775                HalGetNMIState()
                0x00000000c001977b                x86rdmsr(unsigned int)
                0x00000000c00197b9                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c00197fe                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c0019814                HalFindRSDP()
                0x00000000c00198a9                HalHandlePageFault(void*, void*)
                0x00000000c0019956                HalHandleOpcodeFault(void*, void*)
                0x00000000c0019998                HalDisplayDebugInfo(void*)
                0x00000000c0019d26                HalReceivedNMI()
                0x00000000c0019dc1                HalSystemIdle()
                0x00000000c0019e20                i386SaveCoprocessor(void*)
                0x00000000c0019e34                i386LoadCoprocessor(void*)
                0x00000000c0019e48                x87EmulHandler(regs*, void*)
                0x00000000c0019ee5                HalInitialiseCoprocessor()
                0x00000000c0019f69                HalPanic(char const*)
                0x00000000c001a07d                HalQueryPerformanceCounter()
                0x00000000c001a08d                HalInitialise()
                0x00000000c001a21f                HalMakeBeep(int)
                0x00000000c001a259                HalGetRand()
                0x00000000c001a25c                HalEndOfInterrupt(int)
                0x00000000c001a287                HalRestart()
                0x00000000c001a288                HalShutdown()
                0x00000000c001a289                HalSleep()
                0x00000000c001a28a                CPU::CPU()
                0x00000000c001a28a                CPU::CPU()
                0x00000000c001a30e                CPU::setupSMEP()
                0x00000000c001a31a                CPU::setupUMIP()
                0x00000000c001a324                CPU::setupTSC()
                0x00000000c001a32e                CPU::setupLargePages()
                0x00000000c001a338                CPU::setupPAT()
                0x00000000c001a36a                CPU::setupMTRR()
                0x00000000c001a36c                CPU::setupGlobalPages()
                0x00000000c001a376                CPU::allowUsermodeDataAccess()
                0x00000000c001a384                CPU::prohibitUsermodeDataAccess()
                0x00000000c001a392                CPU::setupSMAP()
                0x00000000c001a3a0                CPU::setupFeatures()
                0x00000000c001a46c                CPU::open(int, int, void*)
 .text          0x00000000c001a561      0x261 arch/i386/intctrl.32
                0x00000000c001a561                convertLegacyIRQNumber(int)
                0x00000000c001a59d                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001a5e7                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001a715                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001a749                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001a7c2        0x2 
 .text          0x00000000c001a7c4      0x2dc arch/i386/pic.32
                0x00000000c001a7c4                picIoWait()
                0x00000000c001a7cc                picDisable()
                0x00000000c001a800                picGetIRQReg(int)
                0x00000000c001a87c                picOpen()
                0x00000000c001aa00                picEOI(int)
 .text          0x00000000c001aaa0      0x5f3 arch/i386/rtc.32
                0x00000000c001aaa0                RTC::open(int, int, void*)
                0x00000000c001aaa4                RTC::close(int, int, void*)
                0x00000000c001aaa8                RTC::timeInSecondsUTC()
                0x00000000c001aaba                RTC::timeInDatetimeUTC()
                0x00000000c001aae0                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001ab1e                RTC::~RTC()
                0x00000000c001ab1e                RTC::~RTC()
                0x00000000c001ab42                RTC::~RTC()
                0x00000000c001ab6c                RTC::get_update_in_progress_flag()
                0x00000000c001ab80                RTC::completeRTCRefresh()
                0x00000000c001ae34                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001afaa                rtcIRQHandler(regs*, void*)
                0x00000000c001afea                RTC::RTC()
                0x00000000c001afea                RTC::RTC()
 *fill*         0x00000000c001b093        0x1 
 .text          0x00000000c001b094      0x1f4 arch/i386/vga.32
                0x00000000c001b094                HalConsoleScroll(int, int)
                0x00000000c001b19c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001b200                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001b288     0x14cf fs/fat/vfslink.32
                0x00000000c001b288                FAT::getName()
                0x00000000c001b290                FAT::tell(void*, unsigned long long*)
                0x00000000c001b2cc                FAT::stat(void*, unsigned long long*)
                0x00000000c001b308                FAT::~FAT()
                0x00000000c001b308                FAT::~FAT()
                0x00000000c001b32c                FAT::~FAT()
                0x00000000c001b354                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001b3f8                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001b4bc                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b6a0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001b8bc                FAT::allocateSwapfile(char const*, int)
                0x00000000c001ba7c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001bbec                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001bc4c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001bcac                FAT::close(void*)
                0x00000000c001bd00                FAT::closeDir(void*)
                0x00000000c001bd54                FAT::truncate(void*, unsigned long long)
                0x00000000c001bdc0                FAT::seek(void*, unsigned long long)
                0x00000000c001be18                fatWrapperReadDisk
                0x00000000c001be58                fatWrapperWriteDisk
                0x00000000c001be98                fatWrapperIoctl
                0x00000000c001bfb4                FAT::FAT()
                0x00000000c001bfb4                FAT::FAT()
                0x00000000c001c00c                FAT::fixFilepath(char*)
                0x00000000c001c04c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c1c0                FAT::openDir(char const*, void**)
                0x00000000c001c270                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c368                FAT::unlink(char const*)
                0x00000000c001c3e8                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c59c                FAT::rename(char const*, char const*)
                0x00000000c001c668                FAT::mkdir(char const*)
                0x00000000c001c6e8                FAT::exists(char const*)
 *fill*         0x00000000c001c757        0x1 
 .text          0x00000000c001c758       0x94 fs/iso9660/helper.32
                0x00000000c001c758                isoReadDiscSectorHelper
                0x00000000c001c7b4                iso_kprintf
                0x00000000c001c7d0                iso_kprintfd
 .text          0x00000000c001c7ec      0x71c fs/iso9660/vfslink.32
                0x00000000c001c7ec                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001c7f2                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001c7f8                ISO9660::getName()
                0x00000000c001c7fe                ISO9660::closeDir(void*)
                0x00000000c001c808                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c80e                ISO9660::unlink(char const*)
                0x00000000c001c814                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001c81a                ISO9660::rename(char const*, char const*)
                0x00000000c001c820                ISO9660::mkdir(char const*)
                0x00000000c001c826                ISO9660::~ISO9660()
                0x00000000c001c826                ISO9660::~ISO9660()
                0x00000000c001c84a                ISO9660::~ISO9660()
                0x00000000c001c872                ISO9660::exists(char const*)
                0x00000000c001c886                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001c96c                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001c9b4                ISO9660::seek(void*, unsigned long long)
                0x00000000c001c9f6                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001ca34                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001ca86                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001cbc8                ISO9660::close(void*)
                0x00000000c001cbf8                ISO9660::openDir(char const*, void**)
                0x00000000c001ccd2                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001cdef                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001ce6e                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001cee0                ISO9660::ISO9660()
                0x00000000c001cee0                ISO9660::ISO9660()
 .text          0x00000000c001cf08      0x26c hal/sound/sndcard.32
                0x00000000c001cf08                SoundCard::beginPlayback()
                0x00000000c001cf16                SoundCard::stopPlayback()
                0x00000000c001cf24                SoundCard::SoundCard(char const*)
                0x00000000c001cf24                SoundCard::SoundCard(char const*)
                0x00000000c001cfc2                SoundCard::~SoundCard()
                0x00000000c001cfc2                SoundCard::~SoundCard()
                0x00000000c001cfe6                SoundCard::~SoundCard()
                0x00000000c001d010                SoundCard::configureRates(int, int, int)
                0x00000000c001d040                SoundCard::getSamples16(int, short*)
                0x00000000c001d09c                SoundCard::getSamples32(int, int*)
                0x00000000c001d122                SoundCard::addChannel(SoundPort*)
                0x00000000c001d160                SoundCard::removeChannel(int)
 .text          0x00000000c001d174      0x426 hal/sound/sndport.32
                0x00000000c001d174                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d174                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d200                SoundPort::~SoundPort()
                0x00000000c001d200                SoundPort::~SoundPort()
                0x00000000c001d234                SoundPort::unpause()
                0x00000000c001d240                SoundPort::pause()
                0x00000000c001d24c                SoundPort::getBufferUsed()
                0x00000000c001d254                SoundPort::getBufferSize()
                0x00000000c001d25c                SoundPort::buffer8(signed char*, int)
                0x00000000c001d2f0                SoundPort::buffer16(short*, int)
                0x00000000c001d384                SoundPort::buffer32(int*, int)
                0x00000000c001d410                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001d4dc                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001d59a        0x0 hw/bus/isa.32
 .text          0x00000000c001d59a      0xc23 hw/bus/pci.32
                0x00000000c001d59a                PCI::open(int, int, void*)
                0x00000000c001d5b8                PCI::close(int, int, void*)
                0x00000000c001d5bc                PCI::PCI()
                0x00000000c001d5bc                PCI::PCI()
                0x00000000c001d654                PCI::readBAR8(unsigned int, int)
                0x00000000c001d670                PCI::readBAR16(unsigned int, int)
                0x00000000c001d68e                PCI::readBAR32(unsigned int, int)
                0x00000000c001d6aa                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001d6ca                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001d6ec                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001d70c                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d782                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d82c                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001d850                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001d878                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001d8c2                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001d8ea                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001d90e                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001d932                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001d95a                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d9be                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001daa6                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001dd6c                PCI::checkBus(unsigned char)
                0x00000000c001dd90                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001df76                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001e0f2                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001e164                PCI::detect()
 *fill*         0x00000000c001e1bd        0x1 
 .text          0x00000000c001e1be      0xe58 hw/diskctrl/ide.32
                0x00000000c001e1be                IDE::close(int, int, void*)
                0x00000000c001e1c2                IDE::IDE()
                0x00000000c001e1c2                IDE::IDE()
                0x00000000c001e1f6                IDE::prepareInterrupt(unsigned char)
                0x00000000c001e208                selectDrive(unsigned char, unsigned char)
                0x00000000c001e20a                IDE::getBase(unsigned char)
                0x00000000c001e21c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001e2dc                IDE::read(unsigned char, unsigned char)
                0x00000000c001e38a                IDE::waitInterrupt(unsigned char)
                0x00000000c001e3ed                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001e409                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001e426                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001e470                IDE::open(int, int, void*)
                0x00000000c001e9ca                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ea9a                IDE::detect()
                0x00000000c001ef08                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001efc2                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001f016      0x33d hw/diskctrl/satabus.32
                0x00000000c001f016                SATABus::close(int, int, void*)
                0x00000000c001f01a                SATABus::detect()
                0x00000000c001f01c                SATABus::SATABus()
                0x00000000c001f01c                SATABus::SATABus()
                0x00000000c001f0a2                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f0d4                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f11c                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f13c                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f166                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f276                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001f320                SATABus::open(int, int, void*)
 *fill*         0x00000000c001f353        0x1 
 .text          0x00000000c001f354      0x7a9 hw/diskphys/ata.32
                0x00000000c001f354                ATA::close(int, int, void*)
                0x00000000c001f378                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001f37a                ATA::ATA()
                0x00000000c001f37a                ATA::ATA()
                0x00000000c001f3a8                ATA::flush(bool)
                0x00000000c001f3f6                ATA::readyForCommand()
                0x00000000c001f442                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001f832                ATA::read(unsigned long long, int, void*)
                0x00000000c001f87e                ATA::write(unsigned long long, int, void*)
                0x00000000c001f8ca                ATA::detectCHS()
                0x00000000c001f8f4                ATA::open(int, int, void*)
                0x00000000c001fadf                combineCharAndColour(char, unsigned char)
                0x00000000c001faf0                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001fafd        0x1 
 .text          0x00000000c001fafe      0x618 hw/diskphys/atapi.32
                0x00000000c001fafe                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001fb04                ATAPI::close(int, int, void*)
                0x00000000c001fb28                ATAPI::ATAPI()
                0x00000000c001fb28                ATAPI::ATAPI()
                0x00000000c001fb56                ATAPI::readyForCommand()
                0x00000000c001fba8                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001fe70                ATAPI::diskRemoved()
                0x00000000c001feaa                ATAPI::eject()
                0x00000000c001fef2                ATAPI::diskInserted()
                0x00000000c001fefe                ATAPI::detectMedia()
                0x00000000c001ffbc                ATAPI::open(int, int, void*)
                0x00000000c002009c                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020116      0x44c hw/diskphys/sata.32
                0x00000000c0020116                SATA::close(int, int, void*)
                0x00000000c002013a                SATA::powerSaving(PowerSavingLevel)
                0x00000000c002013c                SATA::open(int, int, void*)
                0x00000000c00201f4                SATA::SATA()
                0x00000000c00201f4                SATA::SATA()
                0x00000000c0020222                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c00204aa                SATA::read(unsigned long long, int, void*)
                0x00000000c00204f6                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020562      0x5d4 hw/diskphys/satapi.32
                0x00000000c0020562                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0020568                SATAPI::close(int, int, void*)
                0x00000000c002058c                SATAPI::SATAPI()
                0x00000000c002058c                SATAPI::SATAPI()
                0x00000000c00205ba                SATAPI::diskRemoved()
                0x00000000c00205bc                SATAPI::diskInserted()
                0x00000000c00205d8                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c00208ba                SATAPI::eject()
                0x00000000c00208f6                SATAPI::detectMedia()
                0x00000000c002094c                SATAPI::open(int, int, void*)
                0x00000000c0020a4c                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020b36      0x443 hw/intctrl/apic.32
                0x00000000c0020b36                IOAPIC::close(int, int, void*)
                0x00000000c0020b3c                apicGetBase()
                0x00000000c0020b5a                IOAPIC::IOAPIC()
                0x00000000c0020b5a                IOAPIC::IOAPIC()
                0x00000000c0020b82                apicOpen()
                0x00000000c0020d0e                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0020d40                IOAPIC::read(int)
                0x00000000c0020d68                IOAPIC::open(int, int, void*)
                0x00000000c0020e4e                IOAPIC::write(int, int)
                0x00000000c0020e7a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0020f79        0x3 
 .text          0x00000000c0020f7c       0xf0 hw/timer/apictimer.32
                0x00000000c0020f7c                APICTimer::close(int, int, void*)
                0x00000000c0020f84                apicTimerHandler(regs*, void*)
                0x00000000c0020fac                APICTimer::open(int, int, void*)
                0x00000000c002101c                APICTimer::write(int)
                0x00000000c0021044                APICTimer::APICTimer()
                0x00000000c0021044                APICTimer::APICTimer()
 .text          0x00000000c002106c      0x1ad hw/timer/pit.32
                0x00000000c002106c                PIT::write(int)
                0x00000000c00210f0                pitHandler(regs*, void*)
                0x00000000c0021118                PIT::open(int, int, void*)
                0x00000000c0021168                PIT::close(int, int, void*)
                0x00000000c0021198                PIT::PIT()
                0x00000000c0021198                PIT::PIT()
 *fill*         0x00000000c0021219        0x7 
 .text          0x00000000c0021220       0x6f arch/i386/avx.32
                0x00000000c0021220                avxDetect
                0x00000000c002124a                avxSave
                0x00000000c002125b                avxLoad
                0x00000000c002126c                avxInit
                0x00000000c002128e                avxClose
 *fill*         0x00000000c002128f        0x1 
 .text          0x00000000c0021290      0x2b4 arch/i386/interrupt.32
                0x00000000c0021290                isr0
                0x00000000c00212a0                isr1
                0x00000000c00212aa                isr2
                0x00000000c00212b4                isr3
                0x00000000c00212be                isr4
                0x00000000c00212c8                isr5
                0x00000000c00212d2                isr6
                0x00000000c00212dc                isr7
                0x00000000c00212e6                isr8
                0x00000000c00212ee                isr9
                0x00000000c00212f8                isr10
                0x00000000c0021300                isr11
                0x00000000c0021308                isr12
                0x00000000c0021310                isr13
                0x00000000c002132a                isr14
                0x00000000c0021332                isr15
                0x00000000c002133c                isr16
                0x00000000c0021346                isr17
                0x00000000c0021350                isr18
                0x00000000c002135a                irq3
                0x00000000c0021364                irq4
                0x00000000c002136e                irq5
                0x00000000c0021378                irq6
                0x00000000c0021382                irq7
                0x00000000c002138c                irq8
                0x00000000c0021396                irq9
                0x00000000c00213a0                irq10
                0x00000000c00213aa                irq11
                0x00000000c00213b4                irq12
                0x00000000c00213be                irq13
                0x00000000c00213c8                irq14
                0x00000000c00213d2                irq15
                0x00000000c00213dc                irq1
                0x00000000c00213e3                irq2
                0x00000000c00213ea                isr96
                0x00000000c00213f1                irq0
                0x00000000c00213f6                int_common_stub
                0x00000000c00213f6                syscall_common_stub
                0x00000000c00214f4                irq16
                0x00000000c00214fe                irq17
                0x00000000c0021508                irq18
                0x00000000c0021512                irq19
                0x00000000c002151c                irq20
                0x00000000c0021526                irq21
                0x00000000c0021530                irq22
                0x00000000c002153a                irq23
 *fill*         0x00000000c0021544        0xc 
 .text          0x00000000c0021550       0x10 arch/i386/rdrand.32
                0x00000000c0021550                i386GetRDRAND
 .text          0x00000000c0021560       0x39 arch/i386/sse.32
                0x00000000c0021560                sseDetect
                0x00000000c0021578                sseSave
                0x00000000c0021580                sseLoad
                0x00000000c0021588                sseInit
                0x00000000c0021598                sseClose
 *fill*         0x00000000c0021599        0x7 
 .text          0x00000000c00215a0       0x4f arch/i386/x87.32
                0x00000000c00215a6                x87Detect
                0x00000000c00215c7                x87Save
                0x00000000c00215ce                x87Load
                0x00000000c00215d5                x87Init
                0x00000000c00215ee                x87Close
 *fill*         0x00000000c00215ef        0x1 
 .text          0x00000000c00215f0       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0021615        0x0 crtn.32
 *fill*         0x00000000c0021615        0x3 
 .text          0x00000000c0021618      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0021618                __divdi3
 *fill*         0x00000000c0021763        0x1 
 .text          0x00000000c0021764      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021764                __moddi3
 *fill*         0x00000000c00218e2        0x2 
 .text          0x00000000c00218e4       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c00218e4                __udivdi3
 *fill*         0x00000000c00219e3        0x1 
 .text          0x00000000c00219e4      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c00219e4                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021b00        0x0
 .iplt          0x00000000c0021b00        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0021afe        0xf
 .init          0x00000000c0021afe        0x3 crti.32
                0x00000000c0021afe                _init
 .init          0x00000000c0021b01        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021b06        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021b0b        0x2 crtn.32

.fini           0x00000000c0021b0d        0xa
 .fini          0x00000000c0021b0d        0x3 crti.32
                0x00000000c0021b0d                _fini
 .fini          0x00000000c0021b10        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021b15        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021b18       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021b18       0x1a hal/device.32
                0x00000000c0021b18                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021b18                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021b32       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021b32       0x2a hal/device.32
                0x00000000c0021b32                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021b5c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021b5c       0xdc hal/device.32
                0x00000000c0021b5c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021c38       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021c38       0x42 hal/device.32
                0x00000000c0021c38                LinkedList<Device>::LinkedList()
                0x00000000c0021c38                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021c7c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021c7c       0x1c hal/timer.32
                0x00000000c0021c7c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021c98        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021c98        0x7 hal/timer.32
                0x00000000c0021c98                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021ca0       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021ca0       0xbc hal/timer.32
                0x00000000c0021ca0                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021d5c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021d5c       0xda hal/timer.32
                0x00000000c0021d5c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021e38       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021e38       0x23 hw/acpi.32
                0x00000000c0021e38                ACPI::~ACPI()
                0x00000000c0021e38                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0021e5c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0021e5c       0x2a hw/acpi.32
                0x00000000c0021e5c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021e88        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021e88        0x2 hw/acpi.32
                0x00000000c0021e88                LinkedList<Device>::~LinkedList()
                0x00000000c0021e88                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021e8c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021e8c       0x1c hw/acpi.32
                0x00000000c0021e8c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021ea8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021ea8        0x7 hw/acpi.32
                0x00000000c0021ea8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021eb0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021eb0       0xb8 hw/acpi.32
                0x00000000c0021eb0                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0021f68       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0021f68       0x23 krnl/computer.32
                0x00000000c0021f68                Computer::~Computer()
                0x00000000c0021f68                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0021f8c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0021f8c       0x2a krnl/computer.32
                0x00000000c0021f8c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021fb6       0x24
 .text._Z10idleCommonv
                0x00000000c0021fb6       0x24 krnl/idle.32
                0x00000000c0021fb6                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021fda        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021fda        0x2 krnl/unixfile.32
                0x00000000c0021fda                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0021fda                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021fdc       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021fdc       0x42 krnl/unixfile.32
                0x00000000c0021fdc                LinkedList<UnixFile>::LinkedList()
                0x00000000c0021fdc                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002201e       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c002201e       0xd3 krnl/unixfile.32
                0x00000000c002201e                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00220f2        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00220f2        0x7 krnl/unixfile.32
                0x00000000c00220f2                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00220fa       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00220fa       0xa1 krnl/unixfile.32
                0x00000000c00220fa                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002219c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002219c        0x8 krnl/unixfile.32
                0x00000000c002219c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00221a4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c00221a4        0x8 sys/kill.32
                0x00000000c00221a4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00221ac        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c00221ac        0x2 thr/prcssthr.32
                0x00000000c00221ac                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c00221ac                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c00221b0       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c00221b0       0x49 thr/prcssthr.32
                0x00000000c00221b0                ThreadControlBlock::ThreadControlBlock()
                0x00000000c00221b0                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00221fc       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c00221fc       0x42 thr/prcssthr.32
                0x00000000c00221fc                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c00221fc                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c002223e       0x23
 .text._ZN3CPUD2Ev
                0x00000000c002223e       0x23 arch/i386/hal.32
                0x00000000c002223e                CPU::~CPU()
                0x00000000c002223e                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0022262       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0022262       0x2a arch/i386/hal.32
                0x00000000c0022262                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002228c       0x23
 .text._ZN3PCID2Ev
                0x00000000c002228c       0x23 hw/bus/pci.32
                0x00000000c002228c                PCI::~PCI()
                0x00000000c002228c                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00222b0       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00222b0       0x2a hw/bus/pci.32
                0x00000000c00222b0                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00222da       0x23
 .text._ZN3IDED2Ev
                0x00000000c00222da       0x23 hw/diskctrl/ide.32
                0x00000000c00222da                IDE::~IDE()
                0x00000000c00222da                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c00222fe       0x2a
 .text._ZN3IDED0Ev
                0x00000000c00222fe       0x2a hw/diskctrl/ide.32
                0x00000000c00222fe                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0022328       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0022328       0x23 hw/diskctrl/satabus.32
                0x00000000c0022328                SATABus::~SATABus()
                0x00000000c0022328                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c002234c       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c002234c       0x2a hw/diskctrl/satabus.32
                0x00000000c002234c                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0022376       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0022376       0x23 hw/diskphys/ata.32
                0x00000000c0022376                ATA::~ATA()
                0x00000000c0022376                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c002239a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c002239a       0x2a hw/diskphys/ata.32
                0x00000000c002239a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00223c4       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00223c4       0x23 hw/diskphys/atapi.32
                0x00000000c00223c4                ATAPI::~ATAPI()
                0x00000000c00223c4                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00223e8       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00223e8       0x2a hw/diskphys/atapi.32
                0x00000000c00223e8                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0022412       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0022412       0x23 hw/diskphys/sata.32
                0x00000000c0022412                SATA::~SATA()
                0x00000000c0022412                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0022436       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0022436       0x2a hw/diskphys/sata.32
                0x00000000c0022436                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0022460       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0022460       0x23 hw/diskphys/satapi.32
                0x00000000c0022460                SATAPI::~SATAPI()
                0x00000000c0022460                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0022484       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0022484       0x2a hw/diskphys/satapi.32
                0x00000000c0022484                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00224ae       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00224ae       0x23 hw/intctrl/apic.32
                0x00000000c00224ae                IOAPIC::~IOAPIC()
                0x00000000c00224ae                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00224d2       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00224d2       0x2a hw/intctrl/apic.32
                0x00000000c00224d2                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00224fc       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00224fc       0x23 hw/timer/apictimer.32
                0x00000000c00224fc                APICTimer::~APICTimer()
                0x00000000c00224fc                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0022520       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0022520       0x2a hw/timer/apictimer.32
                0x00000000c0022520                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c002254c       0x23
 .text._ZN3PITD2Ev
                0x00000000c002254c       0x23 hw/timer/pit.32
                0x00000000c002254c                PIT::~PIT()
                0x00000000c002254c                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022570       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022570       0x2a hw/timer/pit.32
                0x00000000c0022570                PIT::~PIT()

.rodata         0x00000000c002259a     0x3b3e
                0x00000000c002259a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002259a        0x2 
 .ctors         0x00000000c002259c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00225a0        0x4 krnl/unixfile.32
 .ctors         0x00000000c00225a4        0x4 thr/prcssthr.32
 .ctors         0x00000000c00225a8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00225ac                end_ctors = .
                0x00000000c00225ac                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00225ac        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00225b0        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00225b0                __DTOR_END__
                0x00000000c00225b4                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00225b4        0xc 
 .rodata        0x00000000c00225c0      0x101 acpica/utclib.32
                0x00000000c00225c0                AcpiGbl_Ctypes
 *fill*         0x00000000c00226c1        0x3 
 .rodata        0x00000000c00226c4       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c00226dc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c0022726       0x1a 
 .rodata        0x00000000c0022740       0xed fs/fat/ff.32
 *fill*         0x00000000c002282d       0x13 
 .rodata        0x00000000c0022840      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022c40       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0022caf       0x11 dbg/kconsole.32
 .rodata        0x00000000c0022cc0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0022e10      0x169 dbg/usban.32
 *fill*         0x00000000c0022f79        0x3 
 .rodata.str1.4
                0x00000000c0022f7c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c00230b3      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c00231d6       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c002322f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0023230       0x6c fs/vfs.32
                0x00000000c0023230                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002329c       0x1c fs/vfs.32
                0x00000000c002329c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00232b8       0x1c fs/vfs.32
                0x00000000c00232b8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00232d4       0x2c hal/bus.32
                0x00000000c00232d4                vtable for Bus
 .rodata        0x00000000c0023300      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c0023450       0x3c hal/clock.32
                0x00000000c0023450                vtable for Clock
 .rodata.str1.1
                0x00000000c002348c       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00234f0       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0023512       0x15 hal/device.32
 *fill*         0x00000000c0023527        0x1 
 .rodata._ZTV6Device
                0x00000000c0023528       0x2c hal/device.32
                0x00000000c0023528                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0023554       0x2c hal/device.32
                0x00000000c0023554                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023580       0x2c hal/diskctrl.32
                0x00000000c0023580                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00235ac       0x38 hal/diskphys.32
                0x00000000c00235ac                vtable for PhysicalDisk
 .rodata        0x00000000c00235e4       0x53 hal/keybrd.32
 *fill*         0x00000000c0023637        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c0023638       0x34 hal/keybrd.32
                0x00000000c0023638                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002366c       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00236b0       0x2c hal/logidisk.32
                0x00000000c00236b0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00236dc       0x2c hal/mouse.32
                0x00000000c00236dc                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0023708       0x34 hal/nic.32
                0x00000000c0023708                vtable for NIC
 .rodata.str1.1
                0x00000000c002373c        0xb hal/partition.32
 *fill*         0x00000000c0023747        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023748       0x44 hal/serial.32
                0x00000000c0023748                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002378c       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00237d7        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00237df       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00237df       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c00237df       0x6d hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c002384c       0x30 hal/timer.32
                0x00000000c002384c                vtable for Timer
 .rodata.str1.1
                0x00000000c002387c       0x3e hal/vcache.32
 *fill*         0x00000000c00238ba        0x2 
 .rodata._ZTV6VCache
                0x00000000c00238bc       0x10 hal/vcache.32
                0x00000000c00238bc                vtable for VCache
 .rodata.str1.1
                0x00000000c00238cc       0xba hal/video.32
 *fill*         0x00000000c0023986        0x2 
 .rodata._ZTV5Video
                0x00000000c0023988       0x4c hal/video.32
                0x00000000c0023988                vtable for Video
 .rodata.str1.1
                0x00000000c00239d4      0x17e hw/acpi.32
 *fill*         0x00000000c0023b52        0x2 
 .rodata.str1.4
                0x00000000c0023b54       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023bcb       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023bcb        0x8 hw/acpi.32
 *fill*         0x00000000c0023bcb        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023bcc       0x2c hw/acpi.32
                0x00000000c0023bcc                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023bf8       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0023c0b       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023c4b       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0023c6c       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0023c9f        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0023ca2       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.4
                0x00000000c0023d18       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c0023dd0       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0023e79        0x3 
 .rodata._ZTV8Computer
                0x00000000c0023e7c       0x2c krnl/computer.32
                0x00000000c0023e7c                vtable for Computer
 .rodata.str1.1
                0x00000000c0023ea8       0x3c krnl/env.32
 .rodata        0x00000000c0023ee4       0x76 krnl/fault.32
 .rodata.str1.1
                0x00000000c0023f5a        0x4 krnl/intlformat.32
 .rodata.str1.1
                0x00000000c0023f5e       0x11 krnl/intops.32
 *fill*         0x00000000c0023f5e        0x2 
 .rodata.str1.4
                0x00000000c0023f60       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023f90        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023f9f       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c0024000      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c0024105       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c002415d       0x39 krnl/pipe.32
 *fill*         0x00000000c0024196        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0024198       0x1c krnl/pipe.32
                0x00000000c0024198                vtable for Pipe
 .rodata.str1.1
                0x00000000c00241b4       0x91 krnl/resolve.32
 *fill*         0x00000000c0024245        0x3 
 .rodata.str1.4
                0x00000000c0024248       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c0024267      0x19b krnl/signal.32
 .rodata.str1.1
                0x00000000c0024402       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002444a       0x4d krnl/terminal.32
                                         0x5e (size before relaxing)
 *fill*         0x00000000c0024497        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0024498       0x1c krnl/terminal.32
                0x00000000c0024498                vtable for VgaText
 .rodata        0x00000000c00244b4       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00244ef       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00244ef       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00244ef       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00244ef        0x8 krnl/unixfile.32
 *fill*         0x00000000c00244ef        0x1 
 .rodata.str1.4
                0x00000000c00244f0       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c0024510       0x22 krnl/unixfile.32
 *fill*         0x00000000c0024532        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c0024534       0x1c krnl/unixfile.32
                0x00000000c0024534                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0024550       0x1c krnl/unixfile.32
                0x00000000c0024550                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002456c      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024aef      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024c50       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c0024c65        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0024c74        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0024c7e       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0024c9f       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0024ce3       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0024cf8       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0024d24       0x4d thr/alarm.32
 .rodata.str1.1
                0x00000000c0024d71      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024f7b       0x6e thr/prcssthr.32
 *fill*         0x00000000c0024fe9        0x3 
 .rodata.str1.4
                0x00000000c0024fec       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00250e4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00250e4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00250e4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00250e4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00250e4       0xdd vm86/vm8086.32
 *fill*         0x00000000c00251c1        0x3 
 .rodata        0x00000000c00251c4       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00251f4      0x34b arch/i386/hal.32
                                        0x35e (size before relaxing)
 *fill*         0x00000000c002553f        0x1 
 .rodata.str1.4
                0x00000000c0025540       0x57 arch/i386/hal.32
 *fill*         0x00000000c0025597        0x1 
 .rodata._ZTV3CPU
                0x00000000c0025598       0x2c arch/i386/hal.32
                0x00000000c0025598                vtable for CPU
 .rodata.str1.4
                0x00000000c00255c4       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025625       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025663       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0025678       0x3c arch/i386/rtc.32
                0x00000000c0025678                vtable for RTC
 .rodata.str1.1
                0x00000000c00256b4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00256f5        0x3 
 .rodata._ZTV3FAT
                0x00000000c00256f8       0x6c fs/fat/vfslink.32
                0x00000000c00256f8                vtable for FAT
 .rodata.str1.1
                0x00000000c0025764       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0025764      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c002589c       0x6c fs/iso9660/vfslink.32
                0x00000000c002589c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025908       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c002594c       0x34 hal/sound/sndcard.32
                0x00000000c002594c                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0025980       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00259bf       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00259f7       0xa1 hw/bus/pci.32
 .rodata        0x00000000c0025a98       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0025afc       0x2c hw/bus/pci.32
                0x00000000c0025afc                vtable for PCI
 .rodata.str1.1
                0x00000000c0025b28      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0025c4c       0x2c hw/diskctrl/ide.32
                0x00000000c0025c4c                vtable for IDE
 .rodata.str1.4
                0x00000000c0025c78       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0025c9c       0x2c hw/diskctrl/satabus.32
                0x00000000c0025c9c                vtable for SATABus
 .rodata.str1.1
                0x00000000c0025cc8       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0025d83        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025d84       0x38 hw/diskphys/ata.32
                0x00000000c0025d84                vtable for ATA
 .rodata.str1.1
                0x00000000c0025dbc        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0025dc9        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0025dcc       0x38 hw/diskphys/atapi.32
                0x00000000c0025dcc                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0025e04       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0025e8c       0x38 hw/diskphys/sata.32
                0x00000000c0025e8c                vtable for SATA
 .rodata.str1.1
                0x00000000c0025ec4       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0025fae        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0025fb0       0x38 hw/diskphys/satapi.32
                0x00000000c0025fb0                vtable for SATAPI
 .rodata        0x00000000c0025fe8       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c002600e        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c0026010       0x2c hw/intctrl/apic.32
                0x00000000c0026010                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c002603c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0026057        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0026058       0x30 hw/timer/apictimer.32
                0x00000000c0026058                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0026088       0x1d hw/timer/pit.32
 *fill*         0x00000000c00260a5        0x3 
 .rodata._ZTV3PIT
                0x00000000c00260a8       0x30 hw/timer/pit.32
                0x00000000c00260a8                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00260d8      0xa4d
 *(.data)
 .data          0x00000000c00260d8        0x0 crti.32
 .data          0x00000000c00260d8        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00260d8                __dso_handle
 .data          0x00000000c00260dc        0x0 acpica/utclib.32
 .data          0x00000000c00260dc        0x0 krnl/malloc.32
 .data          0x00000000c00260dc        0x0 libk/ctype.32
 .data          0x00000000c00260dc        0x0 libk/string.32
 .data          0x00000000c00260dc        0x0 arch/i386/cc.32
 .data          0x00000000c00260dc        0x0 fs/fat/diskio.32
 .data          0x00000000c00260dc        0x0 fs/fat/ff.32
 .data          0x00000000c00260dc        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00260dc        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00260dc        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c00260dc        0x0 dbg/kconsole.32
 *fill*         0x00000000c00260dc        0x4 
 .data          0x00000000c00260e0       0x28 dbg/usban.32
                0x00000000c00260e0                KiUsbanTypeMismatchTypes
 .data          0x00000000c0026108        0x0 fs/symlink.32
 .data          0x00000000c0026108        0x0 fs/vfs.32
 .data          0x00000000c0026108        0x0 hal/bus.32
 .data          0x00000000c0026108        0x0 hal/buzzer.32
 .data          0x00000000c0026108        0x0 hal/clock.32
 .data          0x00000000c0026108        0x0 hal/device.32
 .data          0x00000000c0026108        0x0 hal/diskctrl.32
 .data          0x00000000c0026108        0x0 hal/diskphys.32
 .data          0x00000000c0026108        0x0 hal/fpu.32
 .data          0x00000000c0026108        0x0 hal/intctrl.32
 .data          0x00000000c0026108        0x0 hal/keybrd.32
 .data          0x00000000c0026108        0x0 hal/logidisk.32
 .data          0x00000000c0026108        0x0 hal/mouse.32
 .data          0x00000000c0026108        0x0 hal/nic.32
 .data          0x00000000c0026108        0x0 hal/partition.32
 .data          0x00000000c0026108        0x0 hal/serial.32
 .data          0x00000000c0026108        0x0 hal/timer.32
 .data          0x00000000c0026108        0x0 hal/vcache.32
 .data          0x00000000c0026108        0x0 hal/video.32
 .data          0x00000000c0026108       0x10 hw/acpi.32
                0x00000000c0026108                legacyIRQRemaps
 .data          0x00000000c0026118        0x0 krnl/assert.32
 .data          0x00000000c0026118        0x0 krnl/atexit.32
 .data          0x00000000c0026118        0x0 krnl/bootmsg.32
 .data          0x00000000c0026118        0x4 krnl/c++.32
                0x00000000c0026118                __stack_chk_guard
 .data          0x00000000c002611c        0x0 krnl/cdefs.32
 *fill*         0x00000000c002611c        0x4 
 .data          0x00000000c0026120      0x100 krnl/cm.32
                0x00000000c0026120                CmComponents
 .data          0x00000000c0026220        0x0 krnl/compat.32
 .data          0x00000000c0026220        0x0 krnl/computer.32
 .data          0x00000000c0026220      0x400 krnl/crc32.32
                0x00000000c0026220                KiPolyLookupCRC32
 .data          0x00000000c0026620       0x4d krnl/env.32
                0x00000000c0026620                defaultSysEnv
 .data          0x00000000c002666d        0x0 krnl/fault.32
 .data          0x00000000c002666d        0x0 krnl/gdt.32
 .data          0x00000000c002666d        0x0 krnl/idle.32
 .data          0x00000000c002666d        0x0 krnl/idt.32
 .data          0x00000000c002666d        0x0 krnl/inlines.32
 .data          0x00000000c002666d        0x0 krnl/intlformat.32
 .data          0x00000000c002666d        0x0 krnl/intops.32
 *fill*         0x00000000c002666d        0x3 
 .data          0x00000000c0026670        0x4 krnl/kheap.32
 .data          0x00000000c0026674        0x0 krnl/mailbox.32
 .data          0x00000000c0026674        0x0 krnl/main.32
 .data          0x00000000c0026674        0x0 krnl/mutex.32
 .data          0x00000000c0026674        0x0 krnl/panic.32
 .data          0x00000000c0026674        0x4 krnl/physmgr.32
                0x00000000c0026674                Phys::bitmap
 .data          0x00000000c0026678        0x0 krnl/pipe.32
 .data          0x00000000c0026678        0x0 krnl/powctrl.32
 .data          0x00000000c0026678        0x0 krnl/random.32
 .data          0x00000000c0026678        0x0 krnl/resolve.32
 .data          0x00000000c0026678        0x0 krnl/semaphore.32
 *fill*         0x00000000c0026678        0x8 
 .data          0x00000000c0026680       0x4c krnl/signal.32
                0x00000000c0026680                KiDefaultSignalHandlers
 *fill*         0x00000000c00266cc       0x14 
 .data          0x00000000c00266e0      0x10c krnl/syscalls.32
                0x00000000c00266e0                systemCallHandlers
 *fill*         0x00000000c00267ec       0x14 
 .data          0x00000000c0026800       0x60 krnl/terminal.32
                0x00000000c0026800                VgaText::hiddenOut
                0x00000000c0026820                ansiToVGAMappings
 .data          0x00000000c0026860        0x0 krnl/tss.32
 .data          0x00000000c0026860        0x4 krnl/unixfile.32
                0x00000000c0026860                UnixFile::nextFd
 .data          0x00000000c0026864       0x15 krnl/virtmgr.32
                0x00000000c0026864                Virt::pageAllocPtr
                0x00000000c0026868                Virt::bitmap
                0x00000000c002686c                Virt::swapfileSectorsPerPage
                0x00000000c0026870                Virt::swapfileLength
                0x00000000c0026874                Virt::swapfileSector
                0x00000000c0026878                Virt::swapfileDrive
 .data          0x00000000c0026879        0x0 sys/alarm.32
 .data          0x00000000c0026879        0x0 sys/eject.32
 .data          0x00000000c0026879        0x0 sys/exit.32
 .data          0x00000000c0026879        0x0 sys/getcwd.32
 .data          0x00000000c0026879        0x0 sys/getpid.32
 .data          0x00000000c0026879        0x0 sys/getramdata.32
 .data          0x00000000c0026879        0x0 sys/getvgaptr.32
 .data          0x00000000c0026879        0x0 sys/kill.32
 .data          0x00000000c0026879        0x0 sys/loaddll.32
 .data          0x00000000c0026879        0x0 sys/pause.32
 .data          0x00000000c0026879        0x0 sys/read.32
 .data          0x00000000c0026879        0x0 sys/registersignal.32
 .data          0x00000000c0026879        0x0 sys/registry.32
 .data          0x00000000c0026879        0x0 sys/sbrk.32
 .data          0x00000000c0026879        0x0 sys/setcwd.32
 .data          0x00000000c0026879        0x0 sys/settime.32
 .data          0x00000000c0026879        0x0 sys/symlink.32
 .data          0x00000000c0026879        0x0 sys/timezone.32
 .data          0x00000000c0026879        0x0 sys/truncate.32
 .data          0x00000000c0026879        0x0 sys/write.32
 .data          0x00000000c0026879        0x0 sys/wsbe.32
 .data          0x00000000c0026879        0x0 sys/yield.32
 .data          0x00000000c0026879        0x0 thr/alarm.32
 .data          0x00000000c0026879        0x0 thr/elf.32
 .data          0x00000000c0026879        0x0 thr/exec.32
 *fill*         0x00000000c0026879        0x3 
 .data          0x00000000c002687c        0x4 thr/prcssthr.32
                0x00000000c002687c                Thr::nextPID
 .data          0x00000000c0026880        0x0 vm86/vm8086.32
 .data          0x00000000c0026880      0x2a4 arch/i386/hal.32
                0x00000000c0026880                exceptionNames
                0x00000000c0026b20                lastCode
 .data          0x00000000c0026b24        0x0 arch/i386/intctrl.32
 .data          0x00000000c0026b24        0x0 arch/i386/pic.32
 .data          0x00000000c0026b24        0x0 arch/i386/rtc.32
 .data          0x00000000c0026b24        0x0 arch/i386/vga.32
 .data          0x00000000c0026b24        0x0 fs/fat/vfslink.32
 .data          0x00000000c0026b24        0x0 fs/iso9660/helper.32
 .data          0x00000000c0026b24        0x1 fs/iso9660/vfslink.32
                0x00000000c0026b24                recentDriveletter
 .data          0x00000000c0026b25        0x0 hal/sound/sndcard.32
 .data          0x00000000c0026b25        0x0 hal/sound/sndport.32
 .data          0x00000000c0026b25        0x0 hw/bus/isa.32
 .data          0x00000000c0026b25        0x0 hw/bus/pci.32
 .data          0x00000000c0026b25        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0026b25        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0026b25        0x0 hw/diskphys/ata.32
 .data          0x00000000c0026b25        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0026b25        0x0 hw/diskphys/sata.32
 .data          0x00000000c0026b25        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0026b25        0x0 hw/intctrl/apic.32
 .data          0x00000000c0026b25        0x0 hw/timer/apictimer.32
 .data          0x00000000c0026b25        0x0 hw/timer/pit.32
 .data          0x00000000c0026b25        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0026b25        0x0 crtn.32
 .data          0x00000000c0026b25        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0026b25        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0026b25        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0026b25        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0026b28        0x0
 .got           0x00000000c0026b28        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0026b28        0x0
 .got.plt       0x00000000c0026b28        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0026b28        0x0
 .igot.plt      0x00000000c0026b28        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0026b28        0x0
 .tm_clone_table
                0x00000000c0026b28        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0026b28        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0026b25      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0026b25        0x3 
 .eh_frame      0x00000000c0026b28        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0026b28        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0026b28       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0026b80       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0026bc0       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0026c2c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0027000       0x7d
 *(userkernel)
 userkernel     0x00000000c0027000       0x52 krnl/signal.32
                0x00000000c0027000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002702c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0027052       0x2b krnl/syscalls.32
                0x00000000c0027052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0028000        0x1
 *(align_previous)
 align_previous
                0x00000000c0028000        0x1 krnl/signal.32
                0x00000000c0028000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0028004        0x0
 .rel.got       0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0028001     0x74a7
                0x00000000c0028001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0028001       0x1f 
 COMMON         0x00000000c0028020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0028020                dcache
                0x00000000c0028060                cdDriveLetter
                0x00000000c0028080                icache
 *(.bss)
 .bss           0x00000000c00280c0        0x0 crti.32
 .bss           0x00000000c00280c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00280e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00280e4       0x1c 
 .bss           0x00000000c0028100      0x378 krnl/malloc.32
 .bss           0x00000000c0028478        0x0 libk/ctype.32
 .bss           0x00000000c0028478        0x0 libk/string.32
 .bss           0x00000000c0028478        0x0 arch/i386/cc.32
 .bss           0x00000000c0028478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028478        0x8 
 .bss           0x00000000c0028480       0x88 fs/fat/ff.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0028508       0x18 
 .bss           0x00000000c0028520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0028eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0028eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0028eb8        0x8 
 .bss           0x00000000c0028ec0     0x2444 fs/symlink.32
                0x00000000c0028ec0                kiNumWaitingRoomSymlinks
                0x00000000c0028ee0                kiNewlyCreatedIDs
                0x00000000c0028f00                kiNewlyCreatedSymlinks
                0x00000000c0029300                kiSymlinkHashTable
                0x00000000c002b300                kiBaseSymlinkID
 .bss           0x00000000c002b304        0x4 fs/vfs.32
                0x00000000c002b304                installedFilesystems
 .bss           0x00000000c002b308        0x0 hal/bus.32
 .bss           0x00000000c002b308        0x0 hal/buzzer.32
 *fill*         0x00000000c002b308       0x18 
 .bss           0x00000000c002b320      0x348 hal/clock.32
                0x00000000c002b320                keLoadedTimezones
                0x00000000c002b324                keNumberOfTimezones
                0x00000000c002b340                keTimezoneStrings
                0x00000000c002b660                keDstOn
                0x00000000c002b661                keTimezoneHalfHourOffset
                0x00000000c002b664                keTimezoneHourOffset
 .bss           0x00000000c002b668        0x0 hal/device.32
 .bss           0x00000000c002b668        0x0 hal/diskctrl.32
 .bss           0x00000000c002b668        0x0 hal/diskphys.32
 .bss           0x00000000c002b668        0x0 hal/fpu.32
 .bss           0x00000000c002b668        0x0 hal/intctrl.32
 *fill*         0x00000000c002b668       0x18 
 .bss           0x00000000c002b680      0x428 hal/keybrd.32
                0x00000000c002b680                keyboardWaitingTaskList
                0x00000000c002b684                keyboardSetupYet
                0x00000000c002b688                guiKeyboardHandler
                0x00000000c002b6a0                keystates
 *fill*         0x00000000c002baa8       0x18 
 .bss           0x00000000c002bac0       0x88 hal/logidisk.32
                0x00000000c002bac0                diskAssignments
                0x00000000c002bae0                disks
 .bss           0x00000000c002bb48        0x4 hal/mouse.32
                0x00000000c002bb48                guiMouseHandler
 .bss           0x00000000c002bb4c        0x0 hal/nic.32
 .bss           0x00000000c002bb4c        0x0 hal/partition.32
 .bss           0x00000000c002bb4c        0x0 hal/serial.32
 *fill*         0x00000000c002bb4c        0x4 
 .bss           0x00000000c002bb50        0x8 hal/timer.32
                0x00000000c002bb50                milliTenthsSinceBoot
 .bss           0x00000000c002bb58        0x0 hal/vcache.32
 .bss           0x00000000c002bb58        0x4 hal/video.32
                0x00000000c002bb58                screen
 *fill*         0x00000000c002bb5c        0x4 
 .bss           0x00000000c002bb60      0x480 hw/acpi.32
                0x00000000c002bb60                nextACPITable
                0x00000000c002bb80                acpiTables
                0x00000000c002bd80                usingXSDT
                0x00000000c002bd84                RSDTpointer
                0x00000000c002bd88                RSDPpointer
                0x00000000c002bd8c                nextAPICNMI
                0x00000000c002bda0                apicNMIInfo
                0x00000000c002be20                legacyIRQFlags
                0x00000000c002be40                ioapicDiscoveryNumber
                0x00000000c002be60                ioapicFoundInMADT
                0x00000000c002be80                ioapicAddresses
                0x00000000c002bf00                ioapicGSIBase
                0x00000000c002bf80                processorDiscoveryNumber
                0x00000000c002bfa0                matchingAPICID
                0x00000000c002bfc0                processorID
 .bss           0x00000000c002bfe0        0x0 krnl/assert.32
 .bss           0x00000000c002bfe0       0xe0 krnl/atexit.32
                0x00000000c002bfe0                KiNextAtexitHandler
                0x00000000c002c000                KiAtexitContexts
                0x00000000c002c060                KiAtexitHandlers
 .bss           0x00000000c002c0c0        0x0 krnl/bootmsg.32
 .bss           0x00000000c002c0c0        0x0 krnl/c++.32
 .bss           0x00000000c002c0c0        0x0 krnl/cdefs.32
 .bss           0x00000000c002c0c0        0x4 krnl/cm.32
 .bss           0x00000000c002c0c4        0x0 krnl/compat.32
 .bss           0x00000000c002c0c4       0x12 krnl/computer.32
                0x00000000c002c0c4                systemSleepFunction
                0x00000000c002c0c8                systemResetFunction
                0x00000000c002c0cc                systemShutdownFunction
                0x00000000c002c0d0                Krnl::computer
                0x00000000c002c0d4                KeIsPreemptionOn
                0x00000000c002c0d5                KeIsSchedulingOn
 .bss           0x00000000c002c0d6        0x0 krnl/crc32.32
 *fill*         0x00000000c002c0d6        0x2 
 .bss           0x00000000c002c0d8        0x8 krnl/env.32
                0x00000000c002c0d8                KeUserEnv
                0x00000000c002c0dc                KeSystemEnv
 .bss           0x00000000c002c0e0     0x2000 krnl/fault.32
                0x00000000c002c0e0                keInterruptContexts
                0x00000000c002d0e0                keInterruptHandlers
 .bss           0x00000000c002e0e0        0x6 krnl/gdt.32
                0x00000000c002e0e0                gdtDescr
 .bss           0x00000000c002e0e6        0x0 krnl/idle.32
 *fill*         0x00000000c002e0e6        0x2 
 .bss           0x00000000c002e0e8        0x6 krnl/idt.32
                0x00000000c002e0e8                idtDescr
 .bss           0x00000000c002e0ee        0x0 krnl/inlines.32
 *fill*         0x00000000c002e0ee       0x12 
 .bss           0x00000000c002e100       0x24 krnl/intlformat.32
                0x00000000c002e100                keLocale
 .bss           0x00000000c002e124        0x0 krnl/intops.32
 .bss           0x00000000c002e124        0x0 krnl/kheap.32
 .bss           0x00000000c002e124        0x0 krnl/mailbox.32
 .bss           0x00000000c002e124        0x4 krnl/main.32
                0x00000000c002e124                keBootSettings
 .bss           0x00000000c002e128        0x0 krnl/mutex.32
 .bss           0x00000000c002e128        0x1 krnl/panic.32
                0x00000000c002e128                KeIsKernelInPanic
 *fill*         0x00000000c002e129        0x3 
 .bss           0x00000000c002e12c       0x29 krnl/physmgr.32
                0x00000000c002e12c                Phys::forbidEvictions
                0x00000000c002e130                Phys::currentPagePointer
                0x00000000c002e134                Phys::highestMem
                0x00000000c002e138                Phys::oldPercent
                0x00000000c002e13c                Phys::usedPages
                0x00000000c002e140                Phys::usablePages
                0x00000000c002e144                Phys::dmaUsage
 .bss           0x00000000c002e155        0x0 krnl/pipe.32
 *fill*         0x00000000c002e155        0xb 
 .bss           0x00000000c002e160       0x48 krnl/powctrl.32
                0x00000000c002e160                powCtrlOnBattery
                0x00000000c002e180                currentPowerSettings
                0x00000000c002e1a4                secondsSinceLastUserIO
 .bss           0x00000000c002e1a8        0x8 krnl/random.32
                0x00000000c002e1a8                kiRandSeed
 .bss           0x00000000c002e1b0        0x0 krnl/resolve.32
 .bss           0x00000000c002e1b0        0x0 krnl/semaphore.32
 .bss           0x00000000c002e1b0        0x0 krnl/signal.32
 .bss           0x00000000c002e1b0        0x0 krnl/syscalls.32
 .bss           0x00000000c002e1b0        0x9 krnl/terminal.32
                0x00000000c002e1b0                terminalCycle
                0x00000000c002e1b4                activeTerminal
                0x00000000c002e1b8                VgaText::graphicMode
 *fill*         0x00000000c002e1b9        0x1 
 .bss           0x00000000c002e1ba        0x2 krnl/tss.32
                0x00000000c002e1ba                doubleFaultSelector
 *fill*         0x00000000c002e1bc        0x4 
 .bss           0x00000000c002e1c0       0x84 krnl/unixfile.32
                0x00000000c002e1c0                sfileLpt
                0x00000000c002e200                sfileCom
                0x00000000c002e224                sfileNul
                0x00000000c002e228                sfilePnt
                0x00000000c002e22c                sfileAux
                0x00000000c002e230                sfileCon
                0x00000000c002e234                initialFilesAdded
                0x00000000c002e238                unixFileLinkedList
 .bss           0x00000000c002e244       0x10 krnl/virtmgr.32
                0x00000000c002e244                twswaps
                0x00000000c002e248                swapBalance
                0x00000000c002e24c                Virt::swapfileBitmap
                0x00000000c002e250                keFirstVAS
 .bss           0x00000000c002e254        0x0 sys/alarm.32
 .bss           0x00000000c002e254        0x0 sys/eject.32
 .bss           0x00000000c002e254        0x0 sys/exit.32
 .bss           0x00000000c002e254        0x0 sys/getcwd.32
 .bss           0x00000000c002e254        0x0 sys/getpid.32
 .bss           0x00000000c002e254        0x0 sys/getramdata.32
 .bss           0x00000000c002e254        0x0 sys/getvgaptr.32
 .bss           0x00000000c002e254        0x0 sys/kill.32
 .bss           0x00000000c002e254        0x0 sys/loaddll.32
 .bss           0x00000000c002e254        0x0 sys/pause.32
 .bss           0x00000000c002e254        0x0 sys/read.32
 .bss           0x00000000c002e254        0x0 sys/registersignal.32
 .bss           0x00000000c002e254        0x0 sys/registry.32
 .bss           0x00000000c002e254        0x0 sys/sbrk.32
 .bss           0x00000000c002e254        0x0 sys/setcwd.32
 .bss           0x00000000c002e254        0x0 sys/settime.32
 .bss           0x00000000c002e254        0x0 sys/symlink.32
 .bss           0x00000000c002e254        0x0 sys/timezone.32
 .bss           0x00000000c002e254        0x0 sys/truncate.32
 .bss           0x00000000c002e254        0x0 sys/write.32
 .bss           0x00000000c002e254        0x0 sys/wsbe.32
 .bss           0x00000000c002e254        0x0 sys/yield.32
 .bss           0x00000000c002e254        0x0 thr/alarm.32
 *fill*         0x00000000c002e254        0xc 
 .bss           0x00000000c002e260      0x7a4 thr/elf.32
                0x00000000c002e260                Thr::driverLookupNext
                0x00000000c002e280                Thr::driverLookupLen
                0x00000000c002e480                Thr::driverLookupAddr
                0x00000000c002e680                Thr::driverNameLookup
                0x00000000c002e880                Thr::kernelSymbols
                0x00000000c002e900                Thr::kernelStringTable
                0x00000000c002e980                Thr::kernelSymbolTable
                0x00000000c002ea00                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002ea04        0x0 thr/exec.32
 *fill*         0x00000000c002ea04        0x4 
 .bss           0x00000000c002ea08       0x70 thr/prcssthr.32
                0x00000000c002ea08                KiRestorePreemptionValue
                0x00000000c002ea0c                KiPreemptionDisableCounter
                0x00000000c002ea10                cleanerThread
                0x00000000c002ea14                weNeedTheCleanerToNotBlock
                0x00000000c002ea18                retValLockStuff
                0x00000000c002ea1c                retValSchedLock
                0x00000000c002ea20                lockStuffLock
                0x00000000c002ea24                schedulerLock
                0x00000000c002ea28                taskSwitchesPostponedFlag
                0x00000000c002ea2c                postponeTaskSwitchesCounter
                0x00000000c002ea30                irqDisableCounter
                0x00000000c002ea34                terminatedTaskList
                0x00000000c002ea40                sleepingTaskList
                0x00000000c002ea4c                taskList
                0x00000000c002ea58                kernelProcess
 *fill*         0x00000000c002ea78        0x8 
 .bss           0x00000000c002ea80       0x40 vm86/vm8086.32
                0x00000000c002ea80                Vm::started8086Yet
                0x00000000c002ea84                Vm::vmRetV
                0x00000000c002ea88                Vm::vmDone
                0x00000000c002ea89                Vm::vmReady
                0x00000000c002ea8c                Vm::vm86Thread
                0x00000000c002ea90                Vm::vmToHostCommsPtr
                0x00000000c002eaa0                Vm::vmToHostComms
 .bss           0x00000000c002eac0       0x54 arch/i386/hal.32
                0x00000000c002eac0                apic
                0x00000000c002eac4                guiPanicHandler
                0x00000000c002eac8                fpuOwner
                0x00000000c002eacc                coproLoadFunc
                0x00000000c002ead0                coproSaveFunc
                0x00000000c002ead4                lastD
                0x00000000c002ead8                lastC
                0x00000000c002eadc                lastB
                0x00000000c002eae0                lastA
                0x00000000c002eae4                HalPageWriteCombiningFlag
                0x00000000c002eae8                HalPageGlobalFlag
                0x00000000c002eaec                nmi
                0x00000000c002eaf0                vendorIDString
                0x00000000c002eafd                familyID
                0x00000000c002eafe                model
                0x00000000c002eaff                processorType
                0x00000000c002eb00                steppingID
                0x00000000c002eb04                vendor
                0x00000000c002eb08                opcodeDetectionMode
                0x00000000c002eb0c                features
 .bss           0x00000000c002eb14        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002eb14        0x0 arch/i386/pic.32
 .bss           0x00000000c002eb14        0x2 arch/i386/rtc.32
 .bss           0x00000000c002eb16        0x0 arch/i386/vga.32
 *fill*         0x00000000c002eb16        0xa 
 .bss           0x00000000c002eb20       0xf0 fs/fat/vfslink.32
                0x00000000c002eb20                FAT::fats
                0x00000000c002eb40                FAT::vfsToFatRemaps
                0x00000000c002ebc0                fatToVFSRemaps
 .bss           0x00000000c002ec10        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002ec10       0x10 
 .bss           0x00000000c002ec20      0x820 fs/iso9660/vfslink.32
                0x00000000c002ec20                iso9660Owner
                0x00000000c002ec24                recentSector
                0x00000000c002ec40                recentBuffer
 .bss           0x00000000c002f440        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002f440        0x0 hal/sound/sndport.32
 .bss           0x00000000c002f440        0x0 hw/bus/isa.32
 .bss           0x00000000c002f440        0xd hw/bus/pci.32
                0x00000000c002f440                thePCI
 .bss           0x00000000c002f44d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002f44d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002f44d        0x3 
 .bss           0x00000000c002f450        0x8 hw/diskphys/ata.32
                0x00000000c002f450                ataSectorsWritten
                0x00000000c002f454                ataSectorsRead
 .bss           0x00000000c002f458        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002f458        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002f458        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002f458        0x8 
 .bss           0x00000000c002f460       0x41 hw/intctrl/apic.32
                0x00000000c002f460                noOfIOAPICs
                0x00000000c002f480                ioapics
                0x00000000c002f4a0                IOAPICsSetupYet
 .bss           0x00000000c002f4a1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002f4a1        0x3 
 .bss           0x00000000c002f4a4        0x4 hw/timer/pit.32
                0x00000000c002f4a4                pitFreq
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002f4a8        0x0 crtn.32
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002f4a8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003694f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
