Archive member included to satisfy reference by file (symbol)

/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/intops.32 (__divdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/intops.32 (__moddi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              hal/clock.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 krnl/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 arch/i386/cc.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .comment       0x0000000000000000       0x12 fs/symlink.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .comment       0x0000000000000000       0x12 krnl/assert.32
 .comment       0x0000000000000000       0x12 krnl/atexit.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/c++.32
 .comment       0x0000000000000000       0x12 krnl/cdefs.32
 .comment       0x0000000000000000       0x12 krnl/cm.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .group         0x0000000000000000       0x14 krnl/computer.32
 .group         0x0000000000000000        0xc krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/computer.32
 .comment       0x0000000000000000       0x12 krnl/crc32.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/fault.32
 .comment       0x0000000000000000       0x12 krnl/gdt.32
 .group         0x0000000000000000        0xc krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idle.32
 .comment       0x0000000000000000       0x12 krnl/idt.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/intlformat.32
 .comment       0x0000000000000000       0x12 krnl/intops.32
 .comment       0x0000000000000000       0x12 krnl/kheap.32
 .comment       0x0000000000000000       0x12 krnl/mailbox.32
 .comment       0x0000000000000000       0x12 krnl/main.32
 .comment       0x0000000000000000       0x12 krnl/mutex.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/physmgr.32
 .group         0x0000000000000000        0xc krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/pipe.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/semaphore.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .group         0x0000000000000000        0xc krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/terminal.32
 .comment       0x0000000000000000       0x12 krnl/tss.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0x8 krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .group         0x0000000000000000        0xc krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/unixfile.32
 .comment       0x0000000000000000       0x12 krnl/virtmgr.32
 .comment       0x0000000000000000       0x12 sys/alarm.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/pause.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/symlink.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/alarm.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .comment       0x0000000000000000       0x12 thr/exec.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000       0x14 arch/i386/hal.32
 .group         0x0000000000000000        0xc arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/intctrl.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD C:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD krnl/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD arch/i386/cc.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/symlink.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD krnl/assert.32
LOAD krnl/atexit.32
LOAD krnl/bootmsg.32
LOAD krnl/c++.32
LOAD krnl/cdefs.32
LOAD krnl/cm.32
LOAD krnl/compat.32
LOAD krnl/computer.32
LOAD krnl/crc32.32
LOAD krnl/env.32
LOAD krnl/fault.32
LOAD krnl/gdt.32
LOAD krnl/idle.32
LOAD krnl/idt.32
LOAD krnl/inlines.32
LOAD krnl/intlformat.32
LOAD krnl/intops.32
LOAD krnl/kheap.32
LOAD krnl/mailbox.32
LOAD krnl/main.32
LOAD krnl/mutex.32
LOAD krnl/panic.32
LOAD krnl/physmgr.32
LOAD krnl/pipe.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/semaphore.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD krnl/terminal.32
LOAD krnl/tss.32
LOAD krnl/unixfile.32
LOAD krnl/virtmgr.32
LOAD sys/alarm.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/pause.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/symlink.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/alarm.32
LOAD thr/elf.32
LOAD thr/exec.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/intctrl.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD C:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x21a9e
 *(.text)
 .text          0x00000000c0000000       0x20 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f C:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8     0x1140 krnl/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c000121a                dlmalloc
                0x00000000c0001757                dlrealloc
                0x00000000c0001934                dlmemalign
                0x00000000c0001a57                dlcalloc
                0x00000000c0001ae8                dlcfree
                0x00000000c0001aed                dlindependent_calloc
                0x00000000c0001b12                dlindependent_comalloc
                0x00000000c0001b29                dlvalloc
                0x00000000c0001b54                dlpvalloc
                0x00000000c0001b8a                dlmalloc_trim
                0x00000000c0001b97                dlmalloc_usable_size
                0x00000000c0001bc8                dlmallinfo
                0x00000000c0001c97                dlmalloc_stats
                0x00000000c0001ca8                dlmallopt
 .text          0x00000000c0001d28      0x1f2 libk/ctype.32
                0x00000000c0001d28                isblank
                0x00000000c0001d48                iscntrl
                0x00000000c0001d68                isdigit
                0x00000000c0001d84                islower
                0x00000000c0001da0                isspace
                0x00000000c0001dc8                isupper
                0x00000000c0001de4                isalpha
                0x00000000c0001e14                isalnum
                0x00000000c0001e44                ispunct
                0x00000000c0001e84                isgraph
                0x00000000c0001eb4                isprint
                0x00000000c0001edc                isxdigit
 .text          0x00000000c0001f1a        0x0 libk/string.32
 *fill*         0x00000000c0001f1a        0x2 
 .text          0x00000000c0001f1c       0x53 arch/i386/cc.32
                0x00000000c0001f1c                LWIP_PLATFORM_HTONS
                0x00000000c0001f40                LWIP_PLATFORM_HTONL
 .text          0x00000000c0001f6f       0x51 fs/fat/diskio.32
                0x00000000c0001f6f                disk_status
                0x00000000c0001f72                disk_initialize
                0x00000000c0001f75                disk_read
                0x00000000c0001f8b                disk_write
                0x00000000c0001fa1                disk_ioctl
 .text          0x00000000c0001fc0     0x3e46 fs/fat/ff.32
                0x00000000c0003de1                f_mount
                0x00000000c0003e43                f_open
                0x00000000c0004106                f_read
                0x00000000c0004305                f_write
                0x00000000c000454d                f_sync
                0x00000000c0004612                f_close
                0x00000000c0004641                f_lseek
                0x00000000c00047f2                f_opendir
                0x00000000c00048bd                f_closedir
                0x00000000c00048df                f_readdir
                0x00000000c0004971                f_stat
                0x00000000c00049f0                f_getfree
                0x00000000c0004af9                f_truncate
                0x00000000c0004be3                f_unlink
                0x00000000c0004d05                f_mkdir
                0x00000000c0004ea0                f_rename
                0x00000000c0005058                f_chmod
                0x00000000c0005108                f_utime
                0x00000000c00051b8                f_getlabel
                0x00000000c0005309                f_setlabel
                0x00000000c0005499                f_expand
                0x00000000c0005606                f_mkfs
 *fill*         0x00000000c0005e06        0x2 
 .text          0x00000000c0005e08       0x2f fs/fat/ffsystem.32
                0x00000000c0005e08                ff_memalloc
                0x00000000c0005e20                ff_memfree
 *fill*         0x00000000c0005e37        0x1 
 .text          0x00000000c0005e38      0x2dc fs/fat/ffunicode.32
                0x00000000c0005e38                ff_uni2oem
                0x00000000c0005ed8                ff_oem2uni
                0x00000000c0005f50                ff_wtoupper
 .text          0x00000000c0006114      0xd32 fs/iso9660/iso9660.32
                0x00000000c000635f                isoReadDiscSector
                0x00000000c00063fa                strnicmp
                0x00000000c00066a9                stricmp
                0x00000000c00066f5                iso_open
                0x00000000c000677f                iso_close
                0x00000000c000679d                iso_read
                0x00000000c00068b3                iso_seek
                0x00000000c0006937                iso_tell
                0x00000000c0006968                iso_total
                0x00000000c0006993                fn_postprocess
                0x00000000c00069ba                iso_readdir
                0x00000000c0006c11                iso_reset
                0x00000000c0006c2e                init_percd
                0x00000000c0006d28                iso_ioctl
                0x00000000c0006d40                fs_iso9660_init
                0x00000000c0006dd6                fs_iso9660_shutdown
 .text          0x00000000c0006e46      0x254 dbg/kconsole.32
                0x00000000c0006e46                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0006ee6                Dbg::logc(char)
                0x00000000c0006f06                Dbg::logs(char*)
                0x00000000c0006f25                Dbg::logWriteInt(unsigned int)
                0x00000000c0006f43                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0006f64                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000709a        0x2 
 .text          0x00000000c000709c      0x2d4 dbg/usban.32
                0x00000000c000709c                KiUbsanPrintDetails(char const*, void*)
                0x00000000c0007108                __ubsan_handle_type_mismatch_v1
                0x00000000c00071e4                __ubsan_handle_pointer_overflow
                0x00000000c0007210                __ubsan_handle_out_of_bounds
                0x00000000c000723c                __ubsan_handle_add_overflow
                0x00000000c0007268                __ubsan_handle_load_invalid_value
                0x00000000c0007294                __ubsan_handle_divrem_overflow
                0x00000000c00072c0                __ubsan_handle_mul_overflow
                0x00000000c00072ec                __ubsan_handle_sub_overflow
                0x00000000c0007318                __ubsan_handle_shift_out_of_bounds
                0x00000000c0007344                __ubsan_handle_negate_overflow
 .text          0x00000000c0007370      0x814 fs/symlink.32
                0x00000000c00074bf                KiDeinitialiseSymlinks(void*)
                0x00000000c0007552                KeRegisterSymlink(char const*, unsigned long long)
                0x00000000c00075d5                KeInitialiseSymlinks()
                0x00000000c0007737                KiIsSymlinkRegistered(char const*)
                0x00000000c00078a1                KeDereferenceSymlink(char const*, char*)
                0x00000000c0007a48                KeCreateSymlink(char const*, char const*)
 .text          0x00000000c0007b84      0xd88 fs/vfs.32
                0x00000000c0007b84                File::read(unsigned long long, void*, int*)
                0x00000000c0007bdc                File::write(unsigned long long, void*, int*)
                0x00000000c0007c34                Directory::read(unsigned long long, void*, int*)
                0x00000000c0007c8c                Directory::write(unsigned long long, void*, int*)
                0x00000000c0007cba                File::isAtty()
                0x00000000c0007cbe                Directory::isAtty()
                0x00000000c0007cc2                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0007cc8                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0007cce                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cd4                File::~File()
                0x00000000c0007cf8                File::~File()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d22                Directory::~Directory()
                0x00000000c0007d46                Directory::~Directory()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d70                Filesystem::Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007d94                Filesystem::~Filesystem()
                0x00000000c0007da2                Filesystem::~Filesystem()
                0x00000000c0007dc6                Fs::getcwd(Process*, char*, int)
                0x00000000c0007df0                Fs::initVFS()
                0x00000000c0007e1a                Fs::standardiseFiles(char*, char const*, char const*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008034                File::File(char const*, Process*, bool)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008132                File::File(char const*, Process*)
                0x00000000c0008150                File::open(FileOpenMode)
                0x00000000c00081ae                File::close()
                0x00000000c000820e                File::seek(unsigned long long)
                0x00000000c0008264                File::truncate(unsigned long long)
                0x00000000c00082ba                File::tell(unsigned long long*)
                0x00000000c000830a                File::rewind()
                0x00000000c000831e                File::unlink()
                0x00000000c000836a                File::rename(char const*)
                0x00000000c00083b8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0008414                File::exists()
                0x00000000c0008452                File::stat(unsigned long long*, bool*)
                0x00000000c00084b3                Fs::setcwd(Process*, char*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c0008612                Directory::Directory(char const*, Process*)
                0x00000000c00086da                Directory::open()
                0x00000000c0008736                Directory::close()
                0x00000000c0008796                Directory::unlink()
                0x00000000c00087e2                Directory::rename(char const*)
                0x00000000c0008830                Directory::exists()
                0x00000000c000886e                Directory::read(dirent*)
                0x00000000c00088ba                Directory::create()
                0x00000000c0008906                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000890c       0x86 hal/bus.32
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c000890c                Bus::Bus(char const*)
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008944                Bus::~Bus()
                0x00000000c0008968                Bus::~Bus()
 .text          0x00000000c0008992       0x9b hal/buzzer.32
                0x00000000c0008992                KeBeepThread(void*)
                0x00000000c00089d3                KeBeep(int, int, bool)
 *fill*         0x00000000c0008a2d        0x1 
 .text          0x00000000c0008a2e      0xeac hal/clock.32
                0x00000000c0008a2e                KeLoadTimezoneStrings()
                0x00000000c0008dbd                KeGetTimezoneStringFromID(int)
                0x00000000c0008e5a                KeUpdateTimezone(char const*)
                0x00000000c0008f54                KeSetTimezone(char const*)
                0x00000000c0008fb1                KeSetTimezone(int)
                0x00000000c0008fe4                KeLoadTimezone()
                0x00000000c000905e                Clock::Clock(char const*)
                0x00000000c000905e                Clock::Clock(char const*)
                0x00000000c0009094                Clock::~Clock()
                0x00000000c0009094                Clock::~Clock()
                0x00000000c00090b8                Clock::~Clock()
                0x00000000c00090e2                Clock::timeInSecondsLocal()
                0x00000000c0009158                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c00091e4                KeDatetimeToSeconds(datetime_t)
                0x00000000c0009524                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c00095f2                KeSecondsToDatetime(unsigned long long)
                0x00000000c00098ae                Clock::timeInDatetimeLocal()
 .text          0x00000000c00098da      0x47a hal/device.32
                0x00000000c00098da                Device::hibernate()
                0x00000000c00098dc                Device::wake()
                0x00000000c00098de                Device::detect()
                0x00000000c00098e0                Device::disableLegacy()
                0x00000000c00098e2                Device::powerSaving(PowerSavingLevel)
                0x00000000c00098e4                DriverlessDevice::close(int, int, void*)
                0x00000000c00098e8                DriverlessDevice::detect()
                0x00000000c00098ea                DriverlessDevice::open(int, int, void*)
                0x00000000c00098fe                Device::~Device()
                0x00000000c00098fe                Device::~Device()
                0x00000000c000990c                Device::~Device()
                0x00000000c0009934                Device::findAndLoadDriver()
                0x00000000c0009942                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0009968                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00099a8                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00099d2                Device::getParent()
                0x00000000c00099de                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00099fc                Device::addChild(Device*)
                0x00000000c0009a40                Device::removeAllChildren()
                0x00000000c0009a86                Device::hibernateAll()
                0x00000000c0009ab6                Device::wakeAll()
                0x00000000c0009ae6                Device::detectAll()
                0x00000000c0009b16                Device::disableLegacyAll()
                0x00000000c0009b18                Device::loadDriversForAll()
                0x00000000c0009b1a                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0009b50                Device::setName(char const*)
                0x00000000c0009b5e                Device::Device(char const*)
                0x00000000c0009b5e                Device::Device(char const*)
                0x00000000c0009c5a                Device::getName()
                0x00000000c0009c64                Device::closeAll()
                0x00000000c0009cb0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009cb0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0009ce6                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0009d2a                getDevicesOfType(DeviceType)
 .text          0x00000000c0009d54       0x86 hal/diskctrl.32
                0x00000000c0009d54                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d54                HardDiskController::HardDiskController(char const*)
                0x00000000c0009d8c                HardDiskController::~HardDiskController()
                0x00000000c0009d8c                HardDiskController::~HardDiskController()
                0x00000000c0009db0                HardDiskController::~HardDiskController()
 .text          0x00000000c0009dda       0xe2 hal/diskphys.32
                0x00000000c0009dda                PhysicalDisk::eject()
                0x00000000c0009dde                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009dde                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0009e46                PhysicalDisk::startCache()
                0x00000000c0009e6e                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e6e                PhysicalDisk::~PhysicalDisk()
                0x00000000c0009e92                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0009ebc        0x0 hal/fpu.32
 .text          0x00000000c0009ebc        0x0 hal/intctrl.32
 .text          0x00000000c0009ebc      0x874 hal/keybrd.32
                0x00000000c0009ebc                startGUI(void*)
                0x00000000c0009f21                startGUIVESA(void*)
                0x00000000c0009f86                sendKeyToTerminal(unsigned char)
                0x00000000c000a05c                sendKeyboardToken(KeyboardToken)
                0x00000000c000a518                clearInternalKeybuffer(VgaText*)
                0x00000000c000a54d                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000a6a6                Keyboard::Keyboard(char const*)
                0x00000000c000a6a6                Keyboard::Keyboard(char const*)
                0x00000000c000a6e2                Keyboard::~Keyboard()
                0x00000000c000a6e2                Keyboard::~Keyboard()
                0x00000000c000a706                Keyboard::~Keyboard()
 .text          0x00000000c000a730      0x3f8 hal/logidisk.32
                0x00000000c000a730                LogicalDisk::close(int, int, void*)
                0x00000000c000a734                LogicalDisk::~LogicalDisk()
                0x00000000c000a734                LogicalDisk::~LogicalDisk()
                0x00000000c000a758                LogicalDisk::~LogicalDisk()
                0x00000000c000a782                LogicalDisk::open(int, int, void*)
                0x00000000c000a796                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000a7ce                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000a814                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a814                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000a8d4                LogicalDisk::assignDriveLetter()
                0x00000000c000a98e                LogicalDisk::mount()
                0x00000000c000a9d6                LogicalDisk::unmount()
                0x00000000c000a9e6                LogicalDisk::eject()
                0x00000000c000a9fa                LogicalDisk::unassignDriveLetter()
                0x00000000c000aa50                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000aabc                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ab28       0x86 hal/mouse.32
                0x00000000c000ab28                Mouse::Mouse(char const*)
                0x00000000c000ab28                Mouse::Mouse(char const*)
                0x00000000c000ab60                Mouse::~Mouse()
                0x00000000c000ab60                Mouse::~Mouse()
                0x00000000c000ab84                Mouse::~Mouse()
 .text          0x00000000c000abae       0x90 hal/nic.32
                0x00000000c000abae                NIC::getMAC()
                0x00000000c000abb4                NIC::write(int, unsigned char*, int*)
                0x00000000c000abba                NIC::NIC(char const*)
                0x00000000c000abba                NIC::NIC(char const*)
                0x00000000c000abf0                NIC::~NIC()
                0x00000000c000abf0                NIC::~NIC()
                0x00000000c000ac14                NIC::~NIC()
 .text          0x00000000c000ac3e      0x33b hal/partition.32
                0x00000000c000ac3e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ace6                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000af79        0x3 
 .text          0x00000000c000af7c       0x86 hal/serial.32
                0x00000000c000af7c                Serial::Serial(char const*)
                0x00000000c000af7c                Serial::Serial(char const*)
                0x00000000c000afb4                Serial::~Serial()
                0x00000000c000afb4                Serial::~Serial()
                0x00000000c000afd8                Serial::~Serial()
 *fill*         0x00000000c000b002        0x2 
 .text          0x00000000c000b004      0x230 hal/timer.32
                0x00000000c000b004                Timer::Timer(char const*)
                0x00000000c000b004                Timer::Timer(char const*)
                0x00000000c000b03c                Timer::~Timer()
                0x00000000c000b03c                Timer::~Timer()
                0x00000000c000b060                Timer::~Timer()
                0x00000000c000b08a                Timer::read()
                0x00000000c000b095                setupTimer(int)
                0x00000000c000b0d0                timerHandler(unsigned int)
 .text          0x00000000c000b234      0x5fe hal/vcache.32
                0x00000000c000b234                VCache::VCache(PhysicalDisk*)
                0x00000000c000b234                VCache::VCache(PhysicalDisk*)
                0x00000000c000b3a4                VCache::invalidateReadBuffer()
                0x00000000c000b3b4                VCache::writeWriteBuffer()
                0x00000000c000b400                VCache::~VCache()
                0x00000000c000b400                VCache::~VCache()
                0x00000000c000b458                VCache::~VCache()
                0x00000000c000b480                VCache::write(unsigned long long, int, void*)
                0x00000000c000b64e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000b832      0x70e hal/video.32
                0x00000000c000b832                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000b87e                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000b8ee                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000b96c                Video::clearScreen(unsigned int)
                0x00000000c000b9a0                Video::putpixel(int, int, unsigned int)
                0x00000000c000b9ae                Video::readPixelApprox(int, int)
                0x00000000c000b9c2                Video::Video(char const*)
                0x00000000c000b9c2                Video::Video(char const*)
                0x00000000c000b9f8                Video::~Video()
                0x00000000c000b9f8                Video::~Video()
                0x00000000c000ba1c                Video::~Video()
                0x00000000c000ba46                Video::isMonochrome()
                0x00000000c000ba52                Video::getWidth()
                0x00000000c000ba5e                Video::getHeight()
                0x00000000c000ba6a                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000bb26                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000bed0                Video::putTGA(int, int, unsigned char*, int)
 .text          0x00000000c000bf40     0x114f hw/acpi.32
                0x00000000c000bf40                ACPI::close(int, int, void*)
                0x00000000c000bf48                loadACPITables(unsigned char*)
                0x00000000c000c1a8                findRSDT(unsigned char*)
                0x00000000c000c2f4                findDataTable(unsigned char*, char*)
                0x00000000c000c368                scanMADT()
                0x00000000c000c7c0                ACPI::ACPI()
                0x00000000c000c7c0                ACPI::ACPI()
                0x00000000c000c814                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000c910                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000c9dc                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000c9e4                ACPI::detectPCI()
                0x00000000c000cbf0                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000cc08                ACPI::open(int, int, void*)
 *fill*         0x00000000c000d08f        0x1 
 .text          0x00000000c000d090       0xea krnl/assert.32
                0x00000000c000d090                KeAssertionFailed(char*, char const*, char const*, int)
 .text          0x00000000c000d17a       0xb6 krnl/atexit.32
                0x00000000c000d17a                KeInitialiseAtexit()
                0x00000000c000d199                KeRegisterAtexit(void (*)(void*), void*)
                0x00000000c000d1cd                KeExecuteAtexit()
 .text          0x00000000c000d230       0x9f krnl/bootmsg.32
                0x00000000c000d230                KeDisplaySplashScreen()
                0x00000000c000d25f                KeSetBootMessage(char const*)
 .text          0x00000000c000d2cf       0x5f krnl/c++.32
                0x00000000c000d2cf                __cxa_atexit
                0x00000000c000d2d2                __cxa_finalize
                0x00000000c000d2d3                __stack_chk_fail
                0x00000000c000d309                __cxa_pure_virtual
                0x00000000c000d31a                operator new[](unsigned long)
                0x00000000c000d31f                operator delete(void*, unsigned long)
                0x00000000c000d324                operator delete[](void*)
                0x00000000c000d329                operator delete[](void*, unsigned long)
 *fill*         0x00000000c000d32e        0x2 
 .text          0x00000000c000d330       0x44 krnl/cdefs.32
                0x00000000c000d330                CUnlockScheduler
                0x00000000c000d348                CLockScheduler
                0x00000000c000d358                CPrintf
 .text          0x00000000c000d374      0xd56 krnl/cm.32
                0x00000000c000d374                CmOpen(char const*)
                0x00000000c000d492                CmClose(Reghive_Tag*)
                0x00000000c000d4a8                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d4e4                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c000d55b                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c000d59a                CmGetNext(Reghive_Tag*, int)
                0x00000000c000d5cc                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c000d608                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c000d630                CmUpdateHeader(Reghive_Tag*)
                0x00000000c000d651                CmExpand(Reghive_Tag*, int)
                0x00000000c000d6cc                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c000d752                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c000d846                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c000d982                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c000d9e3                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c000da13                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c000da4a                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c000da74                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c000dab4                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c000db58                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c000db86                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c000dd24                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c000dd71                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000ddeb                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c000de3e                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c000df02                zStrtok(char*, char const*)
                0x00000000c000df74                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c000dff5                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c000e098                CmSplitFinalSlashInPlace(char*)
 *fill*         0x00000000c000e0ca        0x2 
 .text          0x00000000c000e0cc       0x1d krnl/compat.32
                0x00000000c000e0cc                Krnl::handlePowerButton()
                0x00000000c000e0dc                Krnl::handleSleepButton()
 *fill*         0x00000000c000e0e9        0x1 
 .text          0x00000000c000e0ea      0x2c3 krnl/computer.32
                0x00000000c000e0ea                Computer::close(int, int, void*)
                0x00000000c000e0f0                Computer::open(int, int, void*)
                0x00000000c000e1d6                KeFirstTask()
                0x00000000c000e2f8                Computer::Computer()
                0x00000000c000e2f8                Computer::Computer()
                0x00000000c000e33c                KePrepareShutdown()
                0x00000000c000e35c                KeShutdown()
                0x00000000c000e380                KeSleep()
                0x00000000c000e38c                KeRestart()
 .text          0x00000000c000e3ad       0x2b krnl/crc32.32
                0x00000000c000e3ad                KeCalculateCRC32(unsigned char*, int)
 .text          0x00000000c000e3d8      0x5bf krnl/env.32
                0x00000000c000e3d8                EnvVarContainer::getEnv(char const*)
                0x00000000c000e416                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000e4d8                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000e4da                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000e6fe                EnvVarContainer::__loadSystem()
                0x00000000c000e718                EnvVarContainer::__loadUser()
                0x00000000c000e71a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e71a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000e73c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e73c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000e76c                KeGetEnv(Process*, char const*)
                0x00000000c000e7d1                KeSetEnvSystem(char const*, char const*)
                0x00000000c000e7eb                KeSetEnvUser(char const*, char const*)
                0x00000000c000e80a                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c000e81d                KeDeleteEnvSystem(char const*)
                0x00000000c000e81e                KeDeleteEnvUser(char const*)
                0x00000000c000e81f                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c000e820                KeNewProcessEnv(Process*)
                0x00000000c000e842                KeCopyProcessEnv(Process*, Process*)
                0x00000000c000e88e                KeLoadSystemEnv()
                0x00000000c000e8bc                KeLoadUserEnv()
                0x00000000c000e8e2                KeFlushEnv()
                0x00000000c000e8e3                KeGetProcessTotalEnvCount(Process*)
                0x00000000c000e903                KeGetProcessEnvPair(Process*, int)
 *fill*         0x00000000c000e997        0x1 
 .text          0x00000000c000e998      0x361 krnl/fault.32
                0x00000000c000e998                KeSetupInterrupts()
                0x00000000c000ea10                int_handler
                0x00000000c000eb40                KeDisplayProgramFault(char const*)
                0x00000000c000eb90                KeGeneralProtectionFault(void*, void*)
                0x00000000c000ebe4                KePageFault(void*, void*)
                0x00000000c000ec48                KeNonMaskableInterrupt(void*, void*)
                0x00000000c000ec58                KeOtherFault(void*, void*)
                0x00000000c000ec8c                KeOpcodeFault(void*, void*)
                0x00000000c000ece0                KeDoubleFault(void*, void*)
 *fill*         0x00000000c000ecf9        0x1 
 .text          0x00000000c000ecfa      0x1db krnl/gdt.32
                0x00000000c000ecfa                GDTEntry::setBase(unsigned int)
                0x00000000c000ed16                GDTEntry::setLimit(unsigned int)
                0x00000000c000ed34                GDT::GDT()
                0x00000000c000ed34                GDT::GDT()
                0x00000000c000ed4a                GDT::addEntry(GDTEntry)
                0x00000000c000ed6c                GDT::getNumberOfEntries()
                0x00000000c000ed74                GDT::flush()
                0x00000000c000ed96                GDT::setup()
 .text          0x00000000c000eed5       0x20 krnl/idle.32
                0x00000000c000eed5                idleFunction(void*)
 *fill*         0x00000000c000eef5        0x3 
 .text          0x00000000c000eef8      0x46c krnl/idt.32
                0x00000000c000eef8                IDTEntry::IDTEntry(bool)
                0x00000000c000eef8                IDTEntry::IDTEntry(bool)
                0x00000000c000ef72                IDTEntry::setOffset(unsigned int)
                0x00000000c000ef88                IDT::IDT()
                0x00000000c000ef88                IDT::IDT()
                0x00000000c000ef8a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ef92                IDT::addEntry(IDTEntry, int)
                0x00000000c000efac                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000efe4                IDT::flush()
                0x00000000c000effe                IDT::setup()
 .text          0x00000000c000f364       0x9a krnl/inlines.32
                0x00000000c000f364                CPU::current()
                0x00000000c000f370                operator new(unsigned long)
                0x00000000c000f375                operator delete(void*)
                0x00000000c000f37a                disableIRQs()
                0x00000000c000f37c                enableIRQs()
                0x00000000c000f37e                lockScheduler()
                0x00000000c000f386                unlockScheduler()
                0x00000000c000f398                lockStuff()
                0x00000000c000f3a6                unlockStuff()
                0x00000000c000f3e3                Virt::getAKernelVAS()
                0x00000000c000f3e9                __not_memcpy
 .text          0x00000000c000f3fe      0x2bc krnl/intlformat.32
                0x00000000c000f3fe                KeFormatDate(char*, int, int, int, int, bool)
                0x00000000c000f5ee                KeFormatShortDate(char*, int, int, int, int)
                0x00000000c000f610                KeFormatLongDate(char*, int, int, int, int)
                0x00000000c000f632                KeSetLocale(klocale_t)
                0x00000000c000f648                KeInitialiseLocale()
                0x00000000c000f6b6                KeFormatCurrency(char*, int, long long, long long)
                0x00000000c000f6b7                KeFormatCurrency(char*, int, double)
                0x00000000c000f6b8                KeFormatNumber(char*, long long, long long)
                0x00000000c000f6b9                KeFormatNumber(char*, double)
 *fill*         0x00000000c000f6ba        0x2 
 .text          0x00000000c000f6bc      0x42e krnl/intops.32
                0x00000000c000f6bc                KeBasedUnsignedIntegerToString(unsigned long long, char*, int)
                0x00000000c000f844                KeBasedSignedIntegerToString(long long, char*, int)
                0x00000000c000f9f0                KeGetDigitsInNumber(long long)
                0x00000000c000fa5c                KeItoa(unsigned long long, char*)
                0x00000000c000fa8c                KeItoa(long long, char*)
                0x00000000c000fabc                KeXtoa(unsigned long long, char*)
 .text          0x00000000c000faea      0x207 krnl/kheap.32
                0x00000000c000faea                sbrk
                0x00000000c000fb81                sbrk_thunk
                0x00000000c000fbb7                mmap
                0x00000000c000fc15                munmap
                0x00000000c000fc2a                liballoc_lock()
                0x00000000c000fc38                liballoc_unlock()
                0x00000000c000fc50                liballoc_alloc(int)
                0x00000000c000fc68                liballoc_free(void*, int)
                0x00000000c000fc83                realloc
                0x00000000c000fc97                malloc
                0x00000000c000fca7                free
                0x00000000c000fcb7                rfree
                0x00000000c000fcc7                calloc
 *fill*         0x00000000c000fcf1        0x3 
 .text          0x00000000c000fcf4      0x1d3 krnl/mailbox.32
                0x00000000c000fcf4                KeMailboxTryPost(Mailbox*, void*)
                0x00000000c000fd54                KeMailboxTryGet(Mailbox*, void**)
                0x00000000c000fdb4                KeMailboxCreate()
                0x00000000c000fde8                KeMailboxPost(Mailbox*, void*)
                0x00000000c000fe4c                KeMailboxGet(Mailbox*, void**)
                0x00000000c000feb0                KeMailboxDestroy(Mailbox*)
 .text          0x00000000c000fec7       0xfd krnl/main.32
                0x00000000c000fec7                KeEntryPoint
 .text          0x00000000c000ffc4       0x1a krnl/mutex.32
                0x00000000c000ffc4                Mutex::Mutex()
                0x00000000c000ffc4                Mutex::Mutex()
 .text          0x00000000c000ffde        0xc krnl/panic.32
                0x00000000c000ffde                KePanic(char const*)
 .text          0x00000000c000ffea      0x667 krnl/physmgr.32
                0x00000000c000ffea                Phys::allocateDMA(unsigned long)
                0x00000000c00100d2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c001010d                Phys::setPageState(unsigned long, bool)
                0x00000000c001014d                Phys::getPageState(unsigned long)
                0x00000000c0010169                Phys::freePage(unsigned long)
                0x00000000c00101d2                Phys::allocatePage()
                0x00000000c00102b0                Phys::allocateContiguousPages(int)
                0x00000000c001032b                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0010363                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0010651        0x1 
 .text          0x00000000c0010652      0x275 krnl/pipe.32
                0x00000000c0010652                Pipe::isAtty()
                0x00000000c0010656                Pipe::~Pipe()
                0x00000000c0010656                Pipe::~Pipe()
                0x00000000c001067a                Pipe::~Pipe()
                0x00000000c00106a2                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0010762                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0010860                Pipe::Pipe(int)
                0x00000000c0010860                Pipe::Pipe(int)
 .text          0x00000000c00108c7      0x10c krnl/powctrl.32
                0x00000000c00108c7                KePowerThread(void*)
                0x00000000c00108f9                KeChangePowerSettings(PowerSettings)
                0x00000000c001090f                KeUserIOReceived()
                0x00000000c001091a                KeHandlePowerButton()
                0x00000000c0010932                KeHandleSleepButton()
                0x00000000c001094a                KeSetupPowerManager()
 .text          0x00000000c00109d3       0x9d krnl/random.32
                0x00000000c00109d3                KeRand()
                0x00000000c0010a15                KeSeedRand(unsigned int)
                0x00000000c0010a3e                KeInitRand()
 .text          0x00000000c0010a70      0x1bc krnl/resolve.32
                0x00000000c0010a70                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010c2c      0x415 krnl/semaphore.32
                0x00000000c0010c2c                Semaphore::Semaphore(int)
                0x00000000c0010c2c                Semaphore::Semaphore(int)
                0x00000000c0010c5c                Semaphore::tryAcquire()
                0x00000000c0010d30                Semaphore::assertLocked(char const*)
                0x00000000c0010dbc                Semaphore::acquire(int)
                0x00000000c0010f74                Semaphore::acquire()
                0x00000000c0010f90                Semaphore::release()
 .text          0x00000000c0011041      0x407 krnl/signal.32
                0x00000000c0011041                KiSigKill(int)
                0x00000000c0011055                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0011056                KiDefaultSignalHandlerPause(int)
                0x00000000c0011082                KiDefaultSignalHandlerResume(int)
                0x00000000c00110ae                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00110b3                KeInitSignals()
                0x00000000c0011118                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c001114e                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00111cf                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011365                KiCheckSignalZ
                0x00000000c00113bb                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00113f6                KiFinishSignalZ
 .text          0x00000000c0011448      0xe18 krnl/syscalls.32
                0x00000000c0011448                SysSeekDir(regs*)
                0x00000000c001144d                SysTellDir(regs*)
                0x00000000c0011452                SysVerify(regs*)
                0x00000000c001145c                SysGetArgc(regs*)
                0x00000000c0011470                SysTTYName(regs*)
                0x00000000c0011478                SysFormatDisk(regs*)
                0x00000000c00114ef                SysSetDiskVolumeLabel(regs*)
                0x00000000c0011543                SysGetDiskVolumeLabel(regs*)
                0x00000000c001159c                SysRealpath(regs*)
                0x00000000c00115e0                SysReadDir(regs*)
                0x00000000c0011660                SysIsATTY(regs*)
                0x00000000c00116ba                SysSeek(regs*)
                0x00000000c0011718                SysTell(regs*)
                0x00000000c001178d                SysSize(regs*)
                0x00000000c0011807                SysSizeFromFilename(regs*)
                0x00000000c0011931                SysSizeFromFilenameNoSymlink(regs*)
                0x00000000c0011a5b                SysClose(regs*)
                0x00000000c0011abb                SysOpenDir(regs*)
                0x00000000c0011b38                SysMakeDir(regs*)
                0x00000000c0011ba6                SysCloseDir(regs*)
                0x00000000c0011bfa                SysWait(regs*)
                0x00000000c0011c1b                SysNotImpl(regs*)
                0x00000000c0011c36                SysPanic(regs*)
                0x00000000c0011c51                SysRmdir(regs*)
                0x00000000c0011cb6                SysUnlink(regs*)
                0x00000000c0011d1b                SysGetArgv(regs*)
                0x00000000c0011d68                SysUSleep(regs*)
                0x00000000c0011d92                SysSpawn(regs*)
                0x00000000c0011e05                SysGetEnv(regs*)
                0x00000000c0011eb6                SysSetFatAttrib(regs*)
                0x00000000c0011f29                SysShutdown(regs*)
                0x00000000c0011f86                SysPipe(regs*)
                0x00000000c0011fcb                SysGetUnixTime(regs*)
                0x00000000c0011fdf                string_ends_with(char const*, char const*)
                0x00000000c0012027                SysOpen(regs*)
                0x00000000c001221e                KeSystemCall(regs*, void*)
 .text          0x00000000c0012260      0xb0b krnl/terminal.32
                0x00000000c0012260                VgaText::isAtty()
                0x00000000c0012264                VgaText::~VgaText()
                0x00000000c0012264                VgaText::~VgaText()
                0x00000000c0012288                VgaText::~VgaText()
                0x00000000c00122b2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00122d2                setTerminalScrollLock(bool)
                0x00000000c00122d3                doTerminalCycle()
                0x00000000c00122d4                addToTerminalCycle(VgaText*)
                0x00000000c00122d5                scrollTerminalScrollLock(int)
                0x00000000c00122d6                VgaText::updateTitle()
                0x00000000c00122d8                VgaText::load()
                0x00000000c00122da                VgaText::updateCursor()
                0x00000000c00122f0                VgaText::doANSI_SGR(int)
                0x00000000c0012364                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0012374                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0012384                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00123a4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00123b0                VgaText::setTitleColour(VgaColour)
                0x00000000c00123bc                VgaText::setTitle(char*)
                0x00000000c00123be                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00123d0                VgaText::scrollScreen()
                0x00000000c0012462                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0012472                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c001251e                VgaText::getCursorX()
                0x00000000c0012526                VgaText::getCursorY()
                0x00000000c001252e                VgaText::setCursor(int, int)
                0x00000000c0012545                setActiveTerminal(VgaText*)
                0x00000000c0012590                VgaText::clearScreen()
                0x00000000c00125de                VgaText::setCursorX(int)
                0x00000000c00125f6                VgaText::setCursorY(int)
                0x00000000c001260e                VgaText::incrementCursor(bool)
                0x00000000c0012662                VgaText::decrementCursor(bool)
                0x00000000c0012684                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0012754                VgaText::putchar(char)
                0x00000000c001284c                VgaText::putx(unsigned int)
                0x00000000c0012892                VgaText::puts(char const*)
                0x00000000c00128b8                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0012904                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0012a7e                VgaText::VgaText(char const*)
                0x00000000c0012a7e                VgaText::VgaText(char const*)
                0x00000000c0012bde                VgaText::receiveKey(unsigned char)
                0x00000000c0012d6a                VgaText::doUpdate()
 *fill*         0x00000000c0012d6b        0x1 
 .text          0x00000000c0012d6c      0x224 krnl/tss.32
                0x00000000c0012d6c                TSS::TSS()
                0x00000000c0012d6c                TSS::TSS()
                0x00000000c0012d7c                TSS::setESP(unsigned long)
                0x00000000c0012d90                TSS::flush()
                0x00000000c0012db0                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0012f90      0x4dc krnl/unixfile.32
                0x00000000c0012f90                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0012fe6                ReservedFilename::isAtty()
                0x00000000c0013002                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0013060                UnixFile::getFileDescriptor()
                0x00000000c0013068                UnixFile::UnixFile(int)
                0x00000000c0013068                UnixFile::UnixFile(int)
                0x00000000c001321c                ReservedFilename::ReservedFilename(int)
                0x00000000c001321c                ReservedFilename::ReservedFilename(int)
                0x00000000c001324e                UnixFile::~UnixFile()
                0x00000000c001324e                UnixFile::~UnixFile()
                0x00000000c00132ea                UnixFile::~UnixFile()
                0x00000000c0013312                ReservedFilename::~ReservedFilename()
                0x00000000c0013312                ReservedFilename::~ReservedFilename()
                0x00000000c0013336                ReservedFilename::~ReservedFilename()
                0x00000000c001335d                KeGetFileFromDescriptor(int)
 .text          0x00000000c001346c     0x14bc krnl/virtmgr.32
                0x00000000c001346c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00134a6                Virt::getPageState(unsigned long)
                0x00000000c00134c9                Virt::allocateKernelVirtualPages(int)
                0x00000000c00135ee                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0013611                Virt::swapIDToSector(unsigned long)
                0x00000000c0013627                Virt::allocateSwapfilePage()
                0x00000000c00136a7                Virt::virtualMemorySetup()
                0x00000000c00136f8                Virt::setupPageSwapping(int)
                0x00000000c001376a                VAS::setCPUSpecific(unsigned long)
                0x00000000c001376c                VAS::VAS(VAS*)
                0x00000000c001376c                VAS::VAS(VAS*)
                0x00000000c0013784                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00137b2                VAS::getPageTableEntry(unsigned long)
                0x00000000c00137d1                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c001390e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0013932                VAS::virtualToPhysical(unsigned long)
                0x00000000c001394c                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c001398e                VAS::VAS()
                0x00000000c001398e                VAS::VAS()
                0x00000000c00139f8                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0013a18                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0013a44                VAS::~VAS()
                0x00000000c0013a44                VAS::~VAS()
                0x00000000c0013bac                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0013cb0                VAS::allocatePages(int, int)
                0x00000000c0013d96                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0013dee                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0013ee4                VAS::VAS(bool)
                0x00000000c0013ee4                VAS::VAS(bool)
                0x00000000c00140cc                VAS::evict(unsigned long)
                0x00000000c00141d0                VAS::canLockPage(unsigned long)
                0x00000000c00141ea                VAS::unlockPage(unsigned long)
                0x00000000c001421e                VAS::canLockPages(unsigned long, int)
                0x00000000c001425a                VAS::unlockPages(unsigned long, int)
                0x00000000c0014296                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c00145a6                VAS::lockPage(unsigned long)
                0x00000000c0014618                VAS::lockPages(unsigned long, int)
                0x00000000c0014654                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c00146c8                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c00146f4                VAS::scanForEviction()
                0x00000000c001482d                mapVASFirstTime
 .text          0x00000000c0014928       0x2f sys/alarm.32
                0x00000000c0014928                SysAlarm(regs*)
 .text          0x00000000c0014957       0x36 sys/eject.32
                0x00000000c0014957                SysEject(regs*)
 .text          0x00000000c001498d       0x18 sys/exit.32
                0x00000000c001498d                SysExit(regs*)
 .text          0x00000000c00149a5       0x1f sys/getcwd.32
                0x00000000c00149a5                SysGetCwd(regs*)
 .text          0x00000000c00149c4       0x26 sys/getpid.32
                0x00000000c00149c4                SysGetPID(regs*)
 .text          0x00000000c00149ea       0x21 sys/getramdata.32
                0x00000000c00149ea                SysGetRAMData(regs*)
 .text          0x00000000c0014a0b       0x97 sys/getvgaptr.32
                0x00000000c0014a0b                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0014aa2        0x2 
 .text          0x00000000c0014aa4       0xb9 sys/kill.32
                0x00000000c0014aa4                SysKill(regs*)
 .text          0x00000000c0014b5d       0xa8 sys/loaddll.32
                0x00000000c0014b5d                SysLoadDLL(regs*)
 .text          0x00000000c0014c05       0x12 sys/pause.32
                0x00000000c0014c05                SysPause(regs*)
 .text          0x00000000c0014c17       0x68 sys/read.32
                0x00000000c0014c17                SysRead(regs*)
 .text          0x00000000c0014c7f       0x29 sys/registersignal.32
                0x00000000c0014c7f                SysRegisterSignal(regs*)
 .text          0x00000000c0014ca8      0x1cc sys/registry.32
                0x00000000c0014ca8                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0014cec                SysRegistryReadExtent(regs*)
                0x00000000c0014d34                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0014d4b                SysRegistryEnterDirectory(regs*)
                0x00000000c0014d62                SysRegistryGetNext(regs*)
                0x00000000c0014d79                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0014db3                SysRegistryOpen(regs*)
                0x00000000c0014dc7                SysRegistryClose(regs*)
                0x00000000c0014dde                SysRegistryEasyReadString(regs*)
                0x00000000c0014e2a                SysRegistryEasyReadInteger(regs*)
 .text          0x00000000c0014e74       0x55 sys/sbrk.32
                0x00000000c0014e74                SysSbrk(regs*)
 .text          0x00000000c0014ec9       0x1c sys/setcwd.32
                0x00000000c0014ec9                SysSetCwd(regs*)
 .text          0x00000000c0014ee5       0xd7 sys/settime.32
                0x00000000c0014ee5                SysSetTime(regs*)
 .text          0x00000000c0014fbc       0x73 sys/symlink.32
                0x00000000c0014fbc                SysSymlink(regs*)
 .text          0x00000000c001502f       0x3e sys/timezone.32
                0x00000000c001502f                SysTimezone(regs*)
 .text          0x00000000c001506d       0xfc sys/truncate.32
                0x00000000c001506d                SysTruncate(regs*)
 .text          0x00000000c0015169       0x68 sys/write.32
                0x00000000c0015169                SysWrite(regs*)
 .text          0x00000000c00151d1       0x9d sys/wsbe.32
                0x00000000c00151d1                SysWsbe(regs*)
 .text          0x00000000c001526e       0x28 sys/yield.32
                0x00000000c001526e                SysYield(regs*)
 *fill*         0x00000000c0015296        0x2 
 .text          0x00000000c0015298      0x1a7 thr/alarm.32
                0x00000000c0015298                KeAlarm(ThreadControlBlock*, unsigned long long)
                0x00000000c0015390                KeCheckAlarm(ThreadControlBlock*)
 .text          0x00000000c001543f     0x120b thr/elf.32
                0x00000000c001543f                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00156d1                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00158e3                Thr::runtimeReferenceHelper()
                0x00000000c00158f6                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0015945                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0015c03                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001633c                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001636e                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00163a5                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00163bf                Thr::loadDLL(char const*, bool)
                0x00000000c0016611                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c001664a       0x5a thr/exec.32
                0x00000000c001664a                KeProcessExec(Process*, char const*)
 .text          0x00000000c00166a4     0x1269 thr/prcssthr.32
                0x00000000c00166a4                userModeEntryPoint(void*)
                0x00000000c00166d0                changeTSS
                0x00000000c0016700                switchToThread(ThreadControlBlock*)
                0x00000000c00167c0                Process::addArgs(char**)
                0x00000000c001682c                Process::Process(char const*, Process*, char**)
                0x00000000c001682c                Process::Process(char const*, Process*, char**)
                0x00000000c0016a54                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016a54                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0016c40                taskStartupFunction
                0x00000000c0016c4c                KeDisablePreemption()
                0x00000000c0016c74                KeRestorePreemption()
                0x00000000c0016c94                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016dd4                Process::createUserThread()
                0x00000000c0016df4                setupMultitasking(void (*)())
                0x00000000c0016f2c                schedule()
                0x00000000c0016fc0                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016fec                blockTask(TaskState)
                0x00000000c0017028                waitTask(int, int*, int)
                0x00000000c001706c                milliTenthSleepUntil(unsigned long long)
                0x00000000c0017120                milliTenthSleep(unsigned long long)
                0x00000000c0017138                sleep(unsigned long long)
                0x00000000c0017158                sleep(unsigned int)
                0x00000000c0017170                milliTenthSleep(unsigned int)
                0x00000000c0017190                taskReturned
                0x00000000c00171d8                Thr::processFromPID(int)
                0x00000000c0017288                unblockTask(ThreadControlBlock*)
                0x00000000c001733c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0017618                cleanerTaskFunction(void*)
                0x00000000c0017730                terminateTask(int)
                0x00000000c0017840                Thr::terminateFromIRQ(int)
 .text          0x00000000c001790d      0xd10 vm86/vm8086.32
                0x00000000c001790d                Vm::inbv(unsigned short)
                0x00000000c0017920                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0017956                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0017966                Vm::getSegment(unsigned int)
                0x00000000c001796e                Vm::getOffset(unsigned int)
                0x00000000c0017973                Vm::mainloop2()
                0x00000000c00179ad                Vm::mainVm8086Loop(void*)
                0x00000000c00179c0                Vm::mainloop3(unsigned long)
                0x00000000c00179e6                Vm::initialise8086()
                0x00000000c0017a29                Vm::resetConventionalMemory8086()
                0x00000000c0017a2a                Vm::finish8086()
                0x00000000c0017a8c                Vm::getOutput8086(unsigned char*)
                0x00000000c0017ab1                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017bde                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017dec                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0017e85                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017e96                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017ea8                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017eb9                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017ece                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0017ee4                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017ef9                Vm::faultHandler(regs*)
 *fill*         0x00000000c001861d        0x1 
 .text          0x00000000c001861e     0x1ee7 arch/i386/hal.32
                0x00000000c001861e                noCopro(unsigned long)
                0x00000000c0018620                CPU::close(int, int, void*)
                0x00000000c0018623                x86ReadCMOS(unsigned char)
                0x00000000c0018677                x86WriteCMOS(unsigned char, unsigned char)
                0x00000000c00186d7                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c00186f6                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0018713                AMD_K6_writeback(int, int, int)
                0x00000000c00187d3                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018871                cpuidCheckEDX(unsigned int)
                0x00000000c001889e                cpuidCheckECX(unsigned int)
                0x00000000c00188cc                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00188fa                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018928                HalDetectFeatures()
                0x00000000c00196f3                HalEnableNMI()
                0x00000000c0019706                HalDisableNMI()
                0x00000000c0019719                HalGetNMIState()
                0x00000000c001971f                x86rdmsr(unsigned int)
                0x00000000c001975d                x86wrmsr(unsigned int, unsigned long long)
                0x00000000c00197a2                HalHandleGeneralProtectionFault(void*, void*)
                0x00000000c00197b8                HalFindRSDP()
                0x00000000c001984d                HalHandlePageFault(void*, void*)
                0x00000000c00198fa                HalHandleOpcodeFault(void*, void*)
                0x00000000c001993c                HalDisplayDebugInfo(void*)
                0x00000000c0019cca                HalReceivedNMI()
                0x00000000c0019d65                HalSystemIdle()
                0x00000000c0019dc4                i386SaveCoprocessor(void*)
                0x00000000c0019dd8                i386LoadCoprocessor(void*)
                0x00000000c0019dec                x87EmulHandler(regs*, void*)
                0x00000000c0019e89                HalInitialiseCoprocessor()
                0x00000000c0019f0d                HalPanic(char const*)
                0x00000000c001a021                HalQueryPerformanceCounter()
                0x00000000c001a031                HalInitialise()
                0x00000000c001a1c3                HalMakeBeep(int)
                0x00000000c001a1fd                HalGetRand()
                0x00000000c001a200                HalEndOfInterrupt(int)
                0x00000000c001a22b                HalRestart()
                0x00000000c001a22c                HalShutdown()
                0x00000000c001a22d                HalSleep()
                0x00000000c001a22e                CPU::CPU()
                0x00000000c001a22e                CPU::CPU()
                0x00000000c001a2b2                CPU::setupSMEP()
                0x00000000c001a2be                CPU::setupUMIP()
                0x00000000c001a2c8                CPU::setupTSC()
                0x00000000c001a2d2                CPU::setupLargePages()
                0x00000000c001a2dc                CPU::setupPAT()
                0x00000000c001a30e                CPU::setupMTRR()
                0x00000000c001a310                CPU::setupGlobalPages()
                0x00000000c001a31a                CPU::allowUsermodeDataAccess()
                0x00000000c001a328                CPU::prohibitUsermodeDataAccess()
                0x00000000c001a336                CPU::setupSMAP()
                0x00000000c001a344                CPU::setupFeatures()
                0x00000000c001a410                CPU::open(int, int, void*)
 .text          0x00000000c001a505      0x261 arch/i386/intctrl.32
                0x00000000c001a505                convertLegacyIRQNumber(int)
                0x00000000c001a541                HalInstallISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001a58b                HalInstallIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001a6b9                HalUninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001a6ed                HalUninstallIRQHandler(int, void (*)(regs*, void*), bool)
 *fill*         0x00000000c001a766        0x2 
 .text          0x00000000c001a768      0x2dc arch/i386/pic.32
                0x00000000c001a768                picIoWait()
                0x00000000c001a770                picDisable()
                0x00000000c001a7a4                picGetIRQReg(int)
                0x00000000c001a820                picOpen()
                0x00000000c001a9a4                picEOI(int)
 .text          0x00000000c001aa44      0x5f3 arch/i386/rtc.32
                0x00000000c001aa44                RTC::open(int, int, void*)
                0x00000000c001aa48                RTC::close(int, int, void*)
                0x00000000c001aa4c                RTC::timeInSecondsUTC()
                0x00000000c001aa5e                RTC::timeInDatetimeUTC()
                0x00000000c001aa84                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001aac2                RTC::~RTC()
                0x00000000c001aac2                RTC::~RTC()
                0x00000000c001aae6                RTC::~RTC()
                0x00000000c001ab10                RTC::get_update_in_progress_flag()
                0x00000000c001ab24                RTC::completeRTCRefresh()
                0x00000000c001add8                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001af4e                rtcIRQHandler(regs*, void*)
                0x00000000c001af8e                RTC::RTC()
                0x00000000c001af8e                RTC::RTC()
 *fill*         0x00000000c001b037        0x1 
 .text          0x00000000c001b038      0x1f4 arch/i386/vga.32
                0x00000000c001b038                HalConsoleScroll(int, int)
                0x00000000c001b140                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c001b1a4                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c001b22c     0x14cf fs/fat/vfslink.32
                0x00000000c001b22c                FAT::getName()
                0x00000000c001b234                FAT::tell(void*, unsigned long long*)
                0x00000000c001b270                FAT::stat(void*, unsigned long long*)
                0x00000000c001b2ac                FAT::~FAT()
                0x00000000c001b2ac                FAT::~FAT()
                0x00000000c001b2d0                FAT::~FAT()
                0x00000000c001b2f8                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001b39c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001b460                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b644                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001b860                FAT::allocateSwapfile(char const*, int)
                0x00000000c001ba20                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001bb90                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001bbf0                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001bc50                FAT::close(void*)
                0x00000000c001bca4                FAT::closeDir(void*)
                0x00000000c001bcf8                FAT::truncate(void*, unsigned long long)
                0x00000000c001bd64                FAT::seek(void*, unsigned long long)
                0x00000000c001bdbc                fatWrapperReadDisk
                0x00000000c001bdfc                fatWrapperWriteDisk
                0x00000000c001be3c                fatWrapperIoctl
                0x00000000c001bf58                FAT::FAT()
                0x00000000c001bf58                FAT::FAT()
                0x00000000c001bfb0                FAT::fixFilepath(char*)
                0x00000000c001bff0                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001c164                FAT::openDir(char const*, void**)
                0x00000000c001c214                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c30c                FAT::unlink(char const*)
                0x00000000c001c38c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c540                FAT::rename(char const*, char const*)
                0x00000000c001c60c                FAT::mkdir(char const*)
                0x00000000c001c68c                FAT::exists(char const*)
 *fill*         0x00000000c001c6fb        0x1 
 .text          0x00000000c001c6fc       0x94 fs/iso9660/helper.32
                0x00000000c001c6fc                isoReadDiscSectorHelper
                0x00000000c001c758                iso_kprintf
                0x00000000c001c774                iso_kprintfd
 .text          0x00000000c001c790      0x71c fs/iso9660/vfslink.32
                0x00000000c001c790                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001c796                ISO9660::truncate(void*, unsigned long long)
                0x00000000c001c79c                ISO9660::getName()
                0x00000000c001c7a2                ISO9660::closeDir(void*)
                0x00000000c001c7ac                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001c7b2                ISO9660::unlink(char const*)
                0x00000000c001c7b8                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001c7be                ISO9660::rename(char const*, char const*)
                0x00000000c001c7c4                ISO9660::mkdir(char const*)
                0x00000000c001c7ca                ISO9660::~ISO9660()
                0x00000000c001c7ca                ISO9660::~ISO9660()
                0x00000000c001c7ee                ISO9660::~ISO9660()
                0x00000000c001c816                ISO9660::exists(char const*)
                0x00000000c001c82a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001c910                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001c958                ISO9660::seek(void*, unsigned long long)
                0x00000000c001c99a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001c9d8                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001ca2a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001cb6c                ISO9660::close(void*)
                0x00000000c001cb9c                ISO9660::openDir(char const*, void**)
                0x00000000c001cc76                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001cd93                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001ce12                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001ce84                ISO9660::ISO9660()
                0x00000000c001ce84                ISO9660::ISO9660()
 .text          0x00000000c001ceac      0x26c hal/sound/sndcard.32
                0x00000000c001ceac                SoundCard::beginPlayback()
                0x00000000c001ceba                SoundCard::stopPlayback()
                0x00000000c001cec8                SoundCard::SoundCard(char const*)
                0x00000000c001cec8                SoundCard::SoundCard(char const*)
                0x00000000c001cf66                SoundCard::~SoundCard()
                0x00000000c001cf66                SoundCard::~SoundCard()
                0x00000000c001cf8a                SoundCard::~SoundCard()
                0x00000000c001cfb4                SoundCard::configureRates(int, int, int)
                0x00000000c001cfe4                SoundCard::getSamples16(int, short*)
                0x00000000c001d040                SoundCard::getSamples32(int, int*)
                0x00000000c001d0c6                SoundCard::addChannel(SoundPort*)
                0x00000000c001d104                SoundCard::removeChannel(int)
 .text          0x00000000c001d118      0x426 hal/sound/sndport.32
                0x00000000c001d118                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d118                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001d1a4                SoundPort::~SoundPort()
                0x00000000c001d1a4                SoundPort::~SoundPort()
                0x00000000c001d1d8                SoundPort::unpause()
                0x00000000c001d1e4                SoundPort::pause()
                0x00000000c001d1f0                SoundPort::getBufferUsed()
                0x00000000c001d1f8                SoundPort::getBufferSize()
                0x00000000c001d200                SoundPort::buffer8(signed char*, int)
                0x00000000c001d294                SoundPort::buffer16(short*, int)
                0x00000000c001d328                SoundPort::buffer32(int*, int)
                0x00000000c001d3b4                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001d480                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001d53e        0x0 hw/bus/isa.32
 .text          0x00000000c001d53e      0xc23 hw/bus/pci.32
                0x00000000c001d53e                PCI::open(int, int, void*)
                0x00000000c001d55c                PCI::close(int, int, void*)
                0x00000000c001d560                PCI::PCI()
                0x00000000c001d560                PCI::PCI()
                0x00000000c001d5f8                PCI::readBAR8(unsigned int, int)
                0x00000000c001d614                PCI::readBAR16(unsigned int, int)
                0x00000000c001d632                PCI::readBAR32(unsigned int, int)
                0x00000000c001d64e                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001d66e                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001d690                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001d6b0                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d726                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d7d0                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001d7f4                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001d81c                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001d866                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001d88e                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001d8b2                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001d8d6                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001d8fe                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001d962                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001da4a                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001dd10                PCI::checkBus(unsigned char)
                0x00000000c001dd34                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001df1a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001e096                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001e108                PCI::detect()
 *fill*         0x00000000c001e161        0x1 
 .text          0x00000000c001e162      0xe58 hw/diskctrl/ide.32
                0x00000000c001e162                IDE::close(int, int, void*)
                0x00000000c001e166                IDE::IDE()
                0x00000000c001e166                IDE::IDE()
                0x00000000c001e19a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001e1ac                selectDrive(unsigned char, unsigned char)
                0x00000000c001e1ae                IDE::getBase(unsigned char)
                0x00000000c001e1c0                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001e280                IDE::read(unsigned char, unsigned char)
                0x00000000c001e32e                IDE::waitInterrupt(unsigned char)
                0x00000000c001e391                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001e3ad                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001e3ca                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001e414                IDE::open(int, int, void*)
                0x00000000c001e96e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ea3e                IDE::detect()
                0x00000000c001eeac                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001ef66                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001efba      0x33d hw/diskctrl/satabus.32
                0x00000000c001efba                SATABus::close(int, int, void*)
                0x00000000c001efbe                SATABus::detect()
                0x00000000c001efc0                SATABus::SATABus()
                0x00000000c001efc0                SATABus::SATABus()
                0x00000000c001f046                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f078                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f0c0                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f0e0                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001f10a                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001f21a                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001f2c4                SATABus::open(int, int, void*)
 *fill*         0x00000000c001f2f7        0x1 
 .text          0x00000000c001f2f8      0x7a9 hw/diskphys/ata.32
                0x00000000c001f2f8                ATA::close(int, int, void*)
                0x00000000c001f31c                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001f31e                ATA::ATA()
                0x00000000c001f31e                ATA::ATA()
                0x00000000c001f34c                ATA::flush(bool)
                0x00000000c001f39a                ATA::readyForCommand()
                0x00000000c001f3e6                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001f7d6                ATA::read(unsigned long long, int, void*)
                0x00000000c001f822                ATA::write(unsigned long long, int, void*)
                0x00000000c001f86e                ATA::detectCHS()
                0x00000000c001f898                ATA::open(int, int, void*)
                0x00000000c001fa83                combineCharAndColour(char, unsigned char)
                0x00000000c001fa94                combineColours(unsigned char, unsigned char)
 *fill*         0x00000000c001faa1        0x1 
 .text          0x00000000c001faa2      0x618 hw/diskphys/atapi.32
                0x00000000c001faa2                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001faa8                ATAPI::close(int, int, void*)
                0x00000000c001facc                ATAPI::ATAPI()
                0x00000000c001facc                ATAPI::ATAPI()
                0x00000000c001fafa                ATAPI::readyForCommand()
                0x00000000c001fb4c                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001fe14                ATAPI::diskRemoved()
                0x00000000c001fe4e                ATAPI::eject()
                0x00000000c001fe96                ATAPI::diskInserted()
                0x00000000c001fea2                ATAPI::detectMedia()
                0x00000000c001ff60                ATAPI::open(int, int, void*)
                0x00000000c0020040                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c00200ba      0x44c hw/diskphys/sata.32
                0x00000000c00200ba                SATA::close(int, int, void*)
                0x00000000c00200de                SATA::powerSaving(PowerSavingLevel)
                0x00000000c00200e0                SATA::open(int, int, void*)
                0x00000000c0020198                SATA::SATA()
                0x00000000c0020198                SATA::SATA()
                0x00000000c00201c6                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c002044e                SATA::read(unsigned long long, int, void*)
                0x00000000c002049a                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c0020506      0x5d4 hw/diskphys/satapi.32
                0x00000000c0020506                SATAPI::write(unsigned long long, int, void*)
                0x00000000c002050c                SATAPI::close(int, int, void*)
                0x00000000c0020530                SATAPI::SATAPI()
                0x00000000c0020530                SATAPI::SATAPI()
                0x00000000c002055e                SATAPI::diskRemoved()
                0x00000000c0020560                SATAPI::diskInserted()
                0x00000000c002057c                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c002085e                SATAPI::eject()
                0x00000000c002089a                SATAPI::detectMedia()
                0x00000000c00208f0                SATAPI::open(int, int, void*)
                0x00000000c00209f0                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020ada      0x443 hw/intctrl/apic.32
                0x00000000c0020ada                IOAPIC::close(int, int, void*)
                0x00000000c0020ae0                apicGetBase()
                0x00000000c0020afe                IOAPIC::IOAPIC()
                0x00000000c0020afe                IOAPIC::IOAPIC()
                0x00000000c0020b26                apicOpen()
                0x00000000c0020cb2                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0020ce4                IOAPIC::read(int)
                0x00000000c0020d0c                IOAPIC::open(int, int, void*)
                0x00000000c0020df2                IOAPIC::write(int, int)
                0x00000000c0020e1e                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0020f1d        0x3 
 .text          0x00000000c0020f20       0xf0 hw/timer/apictimer.32
                0x00000000c0020f20                APICTimer::close(int, int, void*)
                0x00000000c0020f28                apicTimerHandler(regs*, void*)
                0x00000000c0020f50                APICTimer::open(int, int, void*)
                0x00000000c0020fc0                APICTimer::write(int)
                0x00000000c0020fe8                APICTimer::APICTimer()
                0x00000000c0020fe8                APICTimer::APICTimer()
 .text          0x00000000c0021010      0x1ad hw/timer/pit.32
                0x00000000c0021010                PIT::write(int)
                0x00000000c0021094                pitHandler(regs*, void*)
                0x00000000c00210bc                PIT::open(int, int, void*)
                0x00000000c002110c                PIT::close(int, int, void*)
                0x00000000c002113c                PIT::PIT()
                0x00000000c002113c                PIT::PIT()
 *fill*         0x00000000c00211bd        0x3 
 .text          0x00000000c00211c0       0x6f arch/i386/avx.32
                0x00000000c00211c0                avxDetect
                0x00000000c00211ea                avxSave
                0x00000000c00211fb                avxLoad
                0x00000000c002120c                avxInit
                0x00000000c002122e                avxClose
 *fill*         0x00000000c002122f        0x1 
 .text          0x00000000c0021230      0x2b4 arch/i386/interrupt.32
                0x00000000c0021230                isr0
                0x00000000c0021240                isr1
                0x00000000c002124a                isr2
                0x00000000c0021254                isr3
                0x00000000c002125e                isr4
                0x00000000c0021268                isr5
                0x00000000c0021272                isr6
                0x00000000c002127c                isr7
                0x00000000c0021286                isr8
                0x00000000c002128e                isr9
                0x00000000c0021298                isr10
                0x00000000c00212a0                isr11
                0x00000000c00212a8                isr12
                0x00000000c00212b0                isr13
                0x00000000c00212ca                isr14
                0x00000000c00212d2                isr15
                0x00000000c00212dc                isr16
                0x00000000c00212e6                isr17
                0x00000000c00212f0                isr18
                0x00000000c00212fa                irq3
                0x00000000c0021304                irq4
                0x00000000c002130e                irq5
                0x00000000c0021318                irq6
                0x00000000c0021322                irq7
                0x00000000c002132c                irq8
                0x00000000c0021336                irq9
                0x00000000c0021340                irq10
                0x00000000c002134a                irq11
                0x00000000c0021354                irq12
                0x00000000c002135e                irq13
                0x00000000c0021368                irq14
                0x00000000c0021372                irq15
                0x00000000c002137c                irq1
                0x00000000c0021383                irq2
                0x00000000c002138a                isr96
                0x00000000c0021391                irq0
                0x00000000c0021396                int_common_stub
                0x00000000c0021396                syscall_common_stub
                0x00000000c0021494                irq16
                0x00000000c002149e                irq17
                0x00000000c00214a8                irq18
                0x00000000c00214b2                irq19
                0x00000000c00214bc                irq20
                0x00000000c00214c6                irq21
                0x00000000c00214d0                irq22
                0x00000000c00214da                irq23
 *fill*         0x00000000c00214e4        0xc 
 .text          0x00000000c00214f0       0x10 arch/i386/rdrand.32
                0x00000000c00214f0                i386GetRDRAND
 .text          0x00000000c0021500       0x39 arch/i386/sse.32
                0x00000000c0021500                sseDetect
                0x00000000c0021518                sseSave
                0x00000000c0021520                sseLoad
                0x00000000c0021528                sseInit
                0x00000000c0021538                sseClose
 *fill*         0x00000000c0021539        0x7 
 .text          0x00000000c0021540       0x4f arch/i386/x87.32
                0x00000000c0021546                x87Detect
                0x00000000c0021567                x87Save
                0x00000000c002156e                x87Load
                0x00000000c0021575                x87Init
                0x00000000c002158e                x87Close
 *fill*         0x00000000c002158f        0x1 
 .text          0x00000000c0021590       0x25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00215b5        0x0 crtn.32
 *fill*         0x00000000c00215b5        0x3 
 .text          0x00000000c00215b8      0x14b /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00215b8                __divdi3
 *fill*         0x00000000c0021703        0x1 
 .text          0x00000000c0021704      0x17e /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021704                __moddi3
 *fill*         0x00000000c0021882        0x2 
 .text          0x00000000c0021884       0xff /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c0021884                __udivdi3
 *fill*         0x00000000c0021983        0x1 
 .text          0x00000000c0021984      0x11a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0021984                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021aa0        0x0
 .iplt          0x00000000c0021aa0        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0021a9e        0xf
 .init          0x00000000c0021a9e        0x3 crti.32
                0x00000000c0021a9e                _init
 .init          0x00000000c0021aa1        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021aa6        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021aab        0x2 crtn.32

.fini           0x00000000c0021aad        0xa
 .fini          0x00000000c0021aad        0x3 crti.32
                0x00000000c0021aad                _fini
 .fini          0x00000000c0021ab0        0x5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021ab5        0x2 crtn.32

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021ab8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021ab8       0x1a hal/device.32
                0x00000000c0021ab8                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021ab8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021ad2       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021ad2       0x2a hal/device.32
                0x00000000c0021ad2                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021afc       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021afc       0xdc hal/device.32
                0x00000000c0021afc                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021bd8       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021bd8       0x42 hal/device.32
                0x00000000c0021bd8                LinkedList<Device>::LinkedList()
                0x00000000c0021bd8                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021c1c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021c1c       0x1c hal/timer.32
                0x00000000c0021c1c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021c38        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021c38        0x7 hal/timer.32
                0x00000000c0021c38                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021c40       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021c40       0xbc hal/timer.32
                0x00000000c0021c40                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021cfc       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021cfc       0xda hal/timer.32
                0x00000000c0021cfc                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021dd8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021dd8       0x23 hw/acpi.32
                0x00000000c0021dd8                ACPI::~ACPI()
                0x00000000c0021dd8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0021dfc       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0021dfc       0x2a hw/acpi.32
                0x00000000c0021dfc                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021e28        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021e28        0x2 hw/acpi.32
                0x00000000c0021e28                LinkedList<Device>::~LinkedList()
                0x00000000c0021e28                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021e2c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021e2c       0x1c hw/acpi.32
                0x00000000c0021e2c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021e48        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021e48        0x7 hw/acpi.32
                0x00000000c0021e48                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021e50       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021e50       0xb8 hw/acpi.32
                0x00000000c0021e50                LinkedList<Device>::removeFirst()

.text._ZN8ComputerD2Ev
                0x00000000c0021f08       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0021f08       0x23 krnl/computer.32
                0x00000000c0021f08                Computer::~Computer()
                0x00000000c0021f08                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0021f2c       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0021f2c       0x2a krnl/computer.32
                0x00000000c0021f2c                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021f56       0x24
 .text._Z10idleCommonv
                0x00000000c0021f56       0x24 krnl/idle.32
                0x00000000c0021f56                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021f7a        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021f7a        0x2 krnl/unixfile.32
                0x00000000c0021f7a                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0021f7a                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021f7c       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021f7c       0x42 krnl/unixfile.32
                0x00000000c0021f7c                LinkedList<UnixFile>::LinkedList()
                0x00000000c0021f7c                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021fbe       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0021fbe       0xd3 krnl/unixfile.32
                0x00000000c0021fbe                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022092        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0022092        0x7 krnl/unixfile.32
                0x00000000c0022092                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002209a       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c002209a       0xa1 krnl/unixfile.32
                0x00000000c002209a                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002213c        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002213c        0x8 krnl/unixfile.32
                0x00000000c002213c                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022144        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0022144        0x8 sys/kill.32
                0x00000000c0022144                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002214c        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c002214c        0x2 thr/prcssthr.32
                0x00000000c002214c                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c002214c                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022150       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0022150       0x49 thr/prcssthr.32
                0x00000000c0022150                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0022150                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002219c       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c002219c       0x42 thr/prcssthr.32
                0x00000000c002219c                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c002219c                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3CPUD2Ev
                0x00000000c00221de       0x23
 .text._ZN3CPUD2Ev
                0x00000000c00221de       0x23 arch/i386/hal.32
                0x00000000c00221de                CPU::~CPU()
                0x00000000c00221de                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0022202       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0022202       0x2a arch/i386/hal.32
                0x00000000c0022202                CPU::~CPU()

.text._ZN3PCID2Ev
                0x00000000c002222c       0x23
 .text._ZN3PCID2Ev
                0x00000000c002222c       0x23 hw/bus/pci.32
                0x00000000c002222c                PCI::~PCI()
                0x00000000c002222c                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0022250       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0022250       0x2a hw/bus/pci.32
                0x00000000c0022250                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c002227a       0x23
 .text._ZN3IDED2Ev
                0x00000000c002227a       0x23 hw/diskctrl/ide.32
                0x00000000c002227a                IDE::~IDE()
                0x00000000c002227a                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c002229e       0x2a
 .text._ZN3IDED0Ev
                0x00000000c002229e       0x2a hw/diskctrl/ide.32
                0x00000000c002229e                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c00222c8       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c00222c8       0x23 hw/diskctrl/satabus.32
                0x00000000c00222c8                SATABus::~SATABus()
                0x00000000c00222c8                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c00222ec       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c00222ec       0x2a hw/diskctrl/satabus.32
                0x00000000c00222ec                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0022316       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0022316       0x23 hw/diskphys/ata.32
                0x00000000c0022316                ATA::~ATA()
                0x00000000c0022316                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c002233a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c002233a       0x2a hw/diskphys/ata.32
                0x00000000c002233a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0022364       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0022364       0x23 hw/diskphys/atapi.32
                0x00000000c0022364                ATAPI::~ATAPI()
                0x00000000c0022364                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0022388       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0022388       0x2a hw/diskphys/atapi.32
                0x00000000c0022388                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c00223b2       0x23
 .text._ZN4SATAD2Ev
                0x00000000c00223b2       0x23 hw/diskphys/sata.32
                0x00000000c00223b2                SATA::~SATA()
                0x00000000c00223b2                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c00223d6       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c00223d6       0x2a hw/diskphys/sata.32
                0x00000000c00223d6                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0022400       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0022400       0x23 hw/diskphys/satapi.32
                0x00000000c0022400                SATAPI::~SATAPI()
                0x00000000c0022400                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0022424       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0022424       0x2a hw/diskphys/satapi.32
                0x00000000c0022424                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c002244e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c002244e       0x23 hw/intctrl/apic.32
                0x00000000c002244e                IOAPIC::~IOAPIC()
                0x00000000c002244e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c0022472       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c0022472       0x2a hw/intctrl/apic.32
                0x00000000c0022472                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c002249c       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c002249c       0x23 hw/timer/apictimer.32
                0x00000000c002249c                APICTimer::~APICTimer()
                0x00000000c002249c                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c00224c0       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c00224c0       0x2a hw/timer/apictimer.32
                0x00000000c00224c0                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c00224ec       0x23
 .text._ZN3PITD2Ev
                0x00000000c00224ec       0x23 hw/timer/pit.32
                0x00000000c00224ec                PIT::~PIT()
                0x00000000c00224ec                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022510       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022510       0x2a hw/timer/pit.32
                0x00000000c0022510                PIT::~PIT()

.rodata         0x00000000c002253a     0x3afe
                0x00000000c002253a                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002253a        0x2 
 .ctors         0x00000000c002253c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0022540        0x4 krnl/unixfile.32
 .ctors         0x00000000c0022544        0x4 thr/prcssthr.32
 .ctors         0x00000000c0022548        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c002254c                end_ctors = .
                0x00000000c002254c                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c002254c        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0022550        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0022550                __DTOR_END__
                0x00000000c0022554                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0022554        0xc 
 .rodata        0x00000000c0022560      0x101 acpica/utclib.32
                0x00000000c0022560                AcpiGbl_Ctypes
 *fill*         0x00000000c0022661        0x3 
 .rodata        0x00000000c0022664       0x18 krnl/malloc.32
 .rodata.str1.1
                0x00000000c002267c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c00226c6       0x1a 
 .rodata        0x00000000c00226e0       0xed fs/fat/ff.32
 *fill*         0x00000000c00227cd       0x13 
 .rodata        0x00000000c00227e0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022be0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c0022c4f       0x11 dbg/kconsole.32
 .rodata        0x00000000c0022c60      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0022db0      0x169 dbg/usban.32
 *fill*         0x00000000c0022f19        0x3 
 .rodata.str1.4
                0x00000000c0022f1c      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0023053      0x123 fs/symlink.32
 .rodata.str1.1
                0x00000000c0023176       0x59 fs/vfs.32
                                         0x5b (size before relaxing)
 *fill*         0x00000000c00231cf        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c00231d0       0x6c fs/vfs.32
                0x00000000c00231d0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002323c       0x1c fs/vfs.32
                0x00000000c002323c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0023258       0x1c fs/vfs.32
                0x00000000c0023258                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0023274       0x2c hal/bus.32
                0x00000000c0023274                vtable for Bus
 .rodata        0x00000000c00232a0      0x150 hal/clock.32
 .rodata._ZTV5Clock
                0x00000000c00233f0       0x3c hal/clock.32
                0x00000000c00233f0                vtable for Clock
 .rodata.str1.1
                0x00000000c002342c       0x64 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0023490       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00234b2       0x15 hal/device.32
 *fill*         0x00000000c00234c7        0x1 
 .rodata._ZTV6Device
                0x00000000c00234c8       0x2c hal/device.32
                0x00000000c00234c8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00234f4       0x2c hal/device.32
                0x00000000c00234f4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023520       0x2c hal/diskctrl.32
                0x00000000c0023520                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002354c       0x38 hal/diskphys.32
                0x00000000c002354c                vtable for PhysicalDisk
 .rodata        0x00000000c0023584       0x53 hal/keybrd.32
 *fill*         0x00000000c00235d7        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c00235d8       0x34 hal/keybrd.32
                0x00000000c00235d8                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002360c       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0023650       0x2c hal/logidisk.32
                0x00000000c0023650                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c002367c       0x2c hal/mouse.32
                0x00000000c002367c                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c00236a8       0x34 hal/nic.32
                0x00000000c00236a8                vtable for NIC
 .rodata.str1.1
                0x00000000c00236dc        0xb hal/partition.32
 *fill*         0x00000000c00236e7        0x1 
 .rodata._ZTV6Serial
                0x00000000c00236e8       0x44 hal/serial.32
                0x00000000c00236e8                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002372c       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023777        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002377f       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002377f       0x15 hal/timer.32
 .rodata.str1.1
                0x00000000c002377f       0x45 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c00237c4       0x30 hal/timer.32
                0x00000000c00237c4                vtable for Timer
 .rodata.str1.1
                0x00000000c00237f4       0x3e hal/vcache.32
 *fill*         0x00000000c0023832        0x2 
 .rodata._ZTV6VCache
                0x00000000c0023834       0x10 hal/vcache.32
                0x00000000c0023834                vtable for VCache
 .rodata.str1.1
                0x00000000c0023844       0xba hal/video.32
 *fill*         0x00000000c00238fe        0x2 
 .rodata._ZTV5Video
                0x00000000c0023900       0x4c hal/video.32
                0x00000000c0023900                vtable for Video
 .rodata.str1.1
                0x00000000c002394c      0x17e hw/acpi.32
 *fill*         0x00000000c0023aca        0x2 
 .rodata.str1.4
                0x00000000c0023acc       0x77 hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0023b43       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0023b43        0x8 hw/acpi.32
 *fill*         0x00000000c0023b43        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0023b44       0x2c hw/acpi.32
                0x00000000c0023b44                vtable for ACPI
 .rodata.str1.1
                0x00000000c0023b70       0x13 krnl/assert.32
 .rodata.str1.1
                0x00000000c0023b83       0x40 krnl/atexit.32
                                         0x43 (size before relaxing)
 .rodata.str1.1
                0x00000000c0023bc3       0x21 krnl/bootmsg.32
 .rodata.str1.1
                0x00000000c0023be4       0x33 krnl/c++.32
 .rodata.str1.1
                0x00000000c0023c17        0x3 krnl/cdefs.32
 .rodata.str1.1
                0x00000000c0023c1a       0x76 krnl/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.4
                0x00000000c0023c90       0xb8 krnl/computer.32
 .rodata.str1.1
                0x00000000c0023d48       0xa9 krnl/computer.32
                                         0xc3 (size before relaxing)
 *fill*         0x00000000c0023df1        0x3 
 .rodata._ZTV8Computer
                0x00000000c0023df4       0x2c krnl/computer.32
                0x00000000c0023df4                vtable for Computer
 .rodata.str1.1
                0x00000000c0023e20       0x3c krnl/env.32
 .rodata        0x00000000c0023e5c       0x76 krnl/fault.32
 .rodata.str1.1
                0x00000000c0023ed2        0x4 krnl/intlformat.32
 .rodata.str1.1
                0x00000000c0023ed6       0x11 krnl/intops.32
 *fill*         0x00000000c0023ed6        0x2 
 .rodata.str1.4
                0x00000000c0023ed8       0x30 krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023f08        0xf krnl/kheap.32
 .rodata.str1.1
                0x00000000c0023f17       0x61 krnl/main.32
 .rodata.str1.4
                0x00000000c0023f78      0x105 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c002407d       0x58 krnl/physmgr.32
 .rodata.str1.1
                0x00000000c00240d5       0x39 krnl/pipe.32
 *fill*         0x00000000c002410e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0024110       0x1c krnl/pipe.32
                0x00000000c0024110                vtable for Pipe
 .rodata.str1.1
                0x00000000c002412c       0x91 krnl/resolve.32
 *fill*         0x00000000c00241bd        0x3 
 .rodata.str1.4
                0x00000000c00241c0       0x1f krnl/semaphore.32
 .rodata.str1.1
                0x00000000c00241df      0x19b krnl/signal.32
 .rodata.str1.1
                0x00000000c002437a       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00243c2       0x4d krnl/terminal.32
                                         0x5e (size before relaxing)
 *fill*         0x00000000c002440f        0x1 
 .rodata._ZTV7VgaText
                0x00000000c0024410       0x1c krnl/terminal.32
                0x00000000c0024410                vtable for VgaText
 .rodata        0x00000000c002442c       0x3b krnl/tss.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0024467       0x22 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0024467       0x15 krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0024467       0x4b krnl/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0024467        0x8 krnl/unixfile.32
 *fill*         0x00000000c0024467        0x1 
 .rodata.str1.4
                0x00000000c0024468       0x20 krnl/unixfile.32
 .rodata.str1.1
                0x00000000c0024488       0x22 krnl/unixfile.32
 *fill*         0x00000000c00244aa        0x2 
 .rodata._ZTV8UnixFile
                0x00000000c00244ac       0x1c krnl/unixfile.32
                0x00000000c00244ac                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00244c8       0x1c krnl/unixfile.32
                0x00000000c00244c8                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00244e4      0x583 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024a67      0x161 krnl/virtmgr.32
 .rodata.str1.1
                0x00000000c0024bc8       0x15 sys/alarm.32
 .rodata.str1.1
                0x00000000c0024bdd        0xf sys/getpid.32
 .rodata.str1.1
                0x00000000c0024bec        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0024bf6       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0024c17       0x44 sys/settime.32
 .rodata.str1.1
                0x00000000c0024c5b       0x15 sys/timezone.32
 .rodata.str1.1
                0x00000000c0024c70       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0024c9c       0x4d thr/alarm.32
 .rodata.str1.1
                0x00000000c0024ce9      0x20a thr/elf.32
                                        0x219 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024ef3       0x57 thr/prcssthr.32
 *fill*         0x00000000c0024f4a        0x2 
 .rodata.str1.4
                0x00000000c0024f4c       0xf8 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0025044       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0025044       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0025044       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0025044        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0025044       0xdd vm86/vm8086.32
 *fill*         0x00000000c0025121        0x3 
 .rodata        0x00000000c0025124       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0025154      0x34b arch/i386/hal.32
                                        0x35e (size before relaxing)
 *fill*         0x00000000c002549f        0x1 
 .rodata.str1.4
                0x00000000c00254a0       0x57 arch/i386/hal.32
 *fill*         0x00000000c00254f7        0x1 
 .rodata._ZTV3CPU
                0x00000000c00254f8       0x2c arch/i386/hal.32
                0x00000000c00254f8                vtable for CPU
 .rodata.str1.4
                0x00000000c0025524       0x61 arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c0025585       0x3e arch/i386/intctrl.32
 .rodata.str1.1
                0x00000000c00255c3       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c00255d8       0x3c arch/i386/rtc.32
                0x00000000c00255d8                vtable for RTC
 .rodata.str1.1
                0x00000000c0025614       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0025655        0x3 
 .rodata._ZTV3FAT
                0x00000000c0025658       0x6c fs/fat/vfslink.32
                0x00000000c0025658                vtable for FAT
 .rodata.str1.1
                0x00000000c00256c4       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c00256c4      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00257fc       0x6c fs/iso9660/vfslink.32
                0x00000000c00257fc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025868       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c00258ac       0x34 hal/sound/sndcard.32
                0x00000000c00258ac                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00258e0       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002591f       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0025957       0xa1 hw/bus/pci.32
 .rodata        0x00000000c00259f8       0x64 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0025a5c       0x2c hw/bus/pci.32
                0x00000000c0025a5c                vtable for PCI
 .rodata.str1.1
                0x00000000c0025a88      0x124 hw/diskctrl/ide.32
                                        0x138 (size before relaxing)
 .rodata._ZTV3IDE
                0x00000000c0025bac       0x2c hw/diskctrl/ide.32
                0x00000000c0025bac                vtable for IDE
 .rodata.str1.4
                0x00000000c0025bd8       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0025bfc       0x2c hw/diskctrl/satabus.32
                0x00000000c0025bfc                vtable for SATABus
 .rodata.str1.1
                0x00000000c0025c28       0xbb hw/diskphys/ata.32
                                         0xca (size before relaxing)
 *fill*         0x00000000c0025ce3        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025ce4       0x38 hw/diskphys/ata.32
                0x00000000c0025ce4                vtable for ATA
 .rodata.str1.1
                0x00000000c0025d1c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0025d29        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0025d2c       0x38 hw/diskphys/atapi.32
                0x00000000c0025d2c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0025d64       0x88 hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0025dec       0x38 hw/diskphys/sata.32
                0x00000000c0025dec                vtable for SATA
 .rodata.str1.1
                0x00000000c0025e24       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0025f0e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0025f10       0x38 hw/diskphys/satapi.32
                0x00000000c0025f10                vtable for SATAPI
 .rodata        0x00000000c0025f48       0x26 hw/intctrl/apic.32
 *fill*         0x00000000c0025f6e        0x2 
 .rodata._ZTV6IOAPIC
                0x00000000c0025f70       0x2c hw/intctrl/apic.32
                0x00000000c0025f70                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0025f9c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0025fb7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0025fb8       0x30 hw/timer/apictimer.32
                0x00000000c0025fb8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0025fe8       0x1d hw/timer/pit.32
 *fill*         0x00000000c0026005        0x3 
 .rodata._ZTV3PIT
                0x00000000c0026008       0x30 hw/timer/pit.32
                0x00000000c0026008                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0026038      0xa4d
 *(.data)
 .data          0x00000000c0026038        0x0 crti.32
 .data          0x00000000c0026038        0x4 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0026038                __dso_handle
 .data          0x00000000c002603c        0x0 acpica/utclib.32
 .data          0x00000000c002603c        0x0 krnl/malloc.32
 .data          0x00000000c002603c        0x0 libk/ctype.32
 .data          0x00000000c002603c        0x0 libk/string.32
 .data          0x00000000c002603c        0x0 arch/i386/cc.32
 .data          0x00000000c002603c        0x0 fs/fat/diskio.32
 .data          0x00000000c002603c        0x0 fs/fat/ff.32
 .data          0x00000000c002603c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c002603c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c002603c        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c002603c        0x0 dbg/kconsole.32
 *fill*         0x00000000c002603c        0x4 
 .data          0x00000000c0026040       0x28 dbg/usban.32
                0x00000000c0026040                KiUsbanTypeMismatchTypes
 .data          0x00000000c0026068        0x0 fs/symlink.32
 .data          0x00000000c0026068        0x0 fs/vfs.32
 .data          0x00000000c0026068        0x0 hal/bus.32
 .data          0x00000000c0026068        0x0 hal/buzzer.32
 .data          0x00000000c0026068        0x0 hal/clock.32
 .data          0x00000000c0026068        0x0 hal/device.32
 .data          0x00000000c0026068        0x0 hal/diskctrl.32
 .data          0x00000000c0026068        0x0 hal/diskphys.32
 .data          0x00000000c0026068        0x0 hal/fpu.32
 .data          0x00000000c0026068        0x0 hal/intctrl.32
 .data          0x00000000c0026068        0x0 hal/keybrd.32
 .data          0x00000000c0026068        0x0 hal/logidisk.32
 .data          0x00000000c0026068        0x0 hal/mouse.32
 .data          0x00000000c0026068        0x0 hal/nic.32
 .data          0x00000000c0026068        0x0 hal/partition.32
 .data          0x00000000c0026068        0x0 hal/serial.32
 .data          0x00000000c0026068        0x0 hal/timer.32
 .data          0x00000000c0026068        0x0 hal/vcache.32
 .data          0x00000000c0026068        0x0 hal/video.32
 .data          0x00000000c0026068       0x10 hw/acpi.32
                0x00000000c0026068                legacyIRQRemaps
 .data          0x00000000c0026078        0x0 krnl/assert.32
 .data          0x00000000c0026078        0x0 krnl/atexit.32
 .data          0x00000000c0026078        0x0 krnl/bootmsg.32
 .data          0x00000000c0026078        0x4 krnl/c++.32
                0x00000000c0026078                __stack_chk_guard
 .data          0x00000000c002607c        0x0 krnl/cdefs.32
 *fill*         0x00000000c002607c        0x4 
 .data          0x00000000c0026080      0x100 krnl/cm.32
                0x00000000c0026080                CmComponents
 .data          0x00000000c0026180        0x0 krnl/compat.32
 .data          0x00000000c0026180        0x0 krnl/computer.32
 .data          0x00000000c0026180      0x400 krnl/crc32.32
                0x00000000c0026180                KiPolyLookupCRC32
 .data          0x00000000c0026580       0x4d krnl/env.32
                0x00000000c0026580                defaultSysEnv
 .data          0x00000000c00265cd        0x0 krnl/fault.32
 .data          0x00000000c00265cd        0x0 krnl/gdt.32
 .data          0x00000000c00265cd        0x0 krnl/idle.32
 .data          0x00000000c00265cd        0x0 krnl/idt.32
 .data          0x00000000c00265cd        0x0 krnl/inlines.32
 .data          0x00000000c00265cd        0x0 krnl/intlformat.32
 .data          0x00000000c00265cd        0x0 krnl/intops.32
 *fill*         0x00000000c00265cd        0x3 
 .data          0x00000000c00265d0        0x4 krnl/kheap.32
 .data          0x00000000c00265d4        0x0 krnl/mailbox.32
 .data          0x00000000c00265d4        0x0 krnl/main.32
 .data          0x00000000c00265d4        0x0 krnl/mutex.32
 .data          0x00000000c00265d4        0x0 krnl/panic.32
 .data          0x00000000c00265d4        0x4 krnl/physmgr.32
                0x00000000c00265d4                Phys::bitmap
 .data          0x00000000c00265d8        0x0 krnl/pipe.32
 .data          0x00000000c00265d8        0x0 krnl/powctrl.32
 .data          0x00000000c00265d8        0x0 krnl/random.32
 .data          0x00000000c00265d8        0x0 krnl/resolve.32
 .data          0x00000000c00265d8        0x0 krnl/semaphore.32
 *fill*         0x00000000c00265d8        0x8 
 .data          0x00000000c00265e0       0x4c krnl/signal.32
                0x00000000c00265e0                KiDefaultSignalHandlers
 *fill*         0x00000000c002662c       0x14 
 .data          0x00000000c0026640      0x10c krnl/syscalls.32
                0x00000000c0026640                systemCallHandlers
 *fill*         0x00000000c002674c       0x14 
 .data          0x00000000c0026760       0x60 krnl/terminal.32
                0x00000000c0026760                VgaText::hiddenOut
                0x00000000c0026780                ansiToVGAMappings
 .data          0x00000000c00267c0        0x0 krnl/tss.32
 .data          0x00000000c00267c0        0x4 krnl/unixfile.32
                0x00000000c00267c0                UnixFile::nextFd
 .data          0x00000000c00267c4       0x15 krnl/virtmgr.32
                0x00000000c00267c4                Virt::pageAllocPtr
                0x00000000c00267c8                Virt::bitmap
                0x00000000c00267cc                Virt::swapfileSectorsPerPage
                0x00000000c00267d0                Virt::swapfileLength
                0x00000000c00267d4                Virt::swapfileSector
                0x00000000c00267d8                Virt::swapfileDrive
 .data          0x00000000c00267d9        0x0 sys/alarm.32
 .data          0x00000000c00267d9        0x0 sys/eject.32
 .data          0x00000000c00267d9        0x0 sys/exit.32
 .data          0x00000000c00267d9        0x0 sys/getcwd.32
 .data          0x00000000c00267d9        0x0 sys/getpid.32
 .data          0x00000000c00267d9        0x0 sys/getramdata.32
 .data          0x00000000c00267d9        0x0 sys/getvgaptr.32
 .data          0x00000000c00267d9        0x0 sys/kill.32
 .data          0x00000000c00267d9        0x0 sys/loaddll.32
 .data          0x00000000c00267d9        0x0 sys/pause.32
 .data          0x00000000c00267d9        0x0 sys/read.32
 .data          0x00000000c00267d9        0x0 sys/registersignal.32
 .data          0x00000000c00267d9        0x0 sys/registry.32
 .data          0x00000000c00267d9        0x0 sys/sbrk.32
 .data          0x00000000c00267d9        0x0 sys/setcwd.32
 .data          0x00000000c00267d9        0x0 sys/settime.32
 .data          0x00000000c00267d9        0x0 sys/symlink.32
 .data          0x00000000c00267d9        0x0 sys/timezone.32
 .data          0x00000000c00267d9        0x0 sys/truncate.32
 .data          0x00000000c00267d9        0x0 sys/write.32
 .data          0x00000000c00267d9        0x0 sys/wsbe.32
 .data          0x00000000c00267d9        0x0 sys/yield.32
 .data          0x00000000c00267d9        0x0 thr/alarm.32
 .data          0x00000000c00267d9        0x0 thr/elf.32
 .data          0x00000000c00267d9        0x0 thr/exec.32
 *fill*         0x00000000c00267d9        0x3 
 .data          0x00000000c00267dc        0x4 thr/prcssthr.32
                0x00000000c00267dc                Thr::nextPID
 .data          0x00000000c00267e0        0x0 vm86/vm8086.32
 .data          0x00000000c00267e0      0x2a4 arch/i386/hal.32
                0x00000000c00267e0                exceptionNames
                0x00000000c0026a80                lastCode
 .data          0x00000000c0026a84        0x0 arch/i386/intctrl.32
 .data          0x00000000c0026a84        0x0 arch/i386/pic.32
 .data          0x00000000c0026a84        0x0 arch/i386/rtc.32
 .data          0x00000000c0026a84        0x0 arch/i386/vga.32
 .data          0x00000000c0026a84        0x0 fs/fat/vfslink.32
 .data          0x00000000c0026a84        0x0 fs/iso9660/helper.32
 .data          0x00000000c0026a84        0x1 fs/iso9660/vfslink.32
                0x00000000c0026a84                recentDriveletter
 .data          0x00000000c0026a85        0x0 hal/sound/sndcard.32
 .data          0x00000000c0026a85        0x0 hal/sound/sndport.32
 .data          0x00000000c0026a85        0x0 hw/bus/isa.32
 .data          0x00000000c0026a85        0x0 hw/bus/pci.32
 .data          0x00000000c0026a85        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0026a85        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0026a85        0x0 hw/diskphys/ata.32
 .data          0x00000000c0026a85        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0026a85        0x0 hw/diskphys/sata.32
 .data          0x00000000c0026a85        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0026a85        0x0 hw/intctrl/apic.32
 .data          0x00000000c0026a85        0x0 hw/timer/apictimer.32
 .data          0x00000000c0026a85        0x0 hw/timer/pit.32
 .data          0x00000000c0026a85        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0026a85        0x0 crtn.32
 .data          0x00000000c0026a85        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0026a85        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0026a85        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0026a85        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0026a88        0x0
 .got           0x00000000c0026a88        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0026a88        0x0
 .got.plt       0x00000000c0026a88        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0026a88        0x0
 .igot.plt      0x00000000c0026a88        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0026a88        0x0
 .tm_clone_table
                0x00000000c0026a88        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0026a88        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0026a85      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0026a85        0x3 
 .eh_frame      0x00000000c0026a88        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0026a88        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0026a88       0x58 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0026ae0       0x40 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0026b20       0x6c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0026b8c       0x84 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0027000       0x7d
 *(userkernel)
 userkernel     0x00000000c0027000       0x52 krnl/signal.32
                0x00000000c0027000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002702c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0027052       0x2b krnl/syscalls.32
                0x00000000c0027052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0028000        0x1
 *(align_previous)
 align_previous
                0x00000000c0028000        0x1 krnl/signal.32
                0x00000000c0028000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0028004        0x0
 .rel.got       0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0028004        0x0 C:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0028001     0x74a7
                0x00000000c0028001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0028001       0x1f 
 COMMON         0x00000000c0028020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0028020                dcache
                0x00000000c0028060                cdDriveLetter
                0x00000000c0028080                icache
 *(.bss)
 .bss           0x00000000c00280c0        0x0 crti.32
 .bss           0x00000000c00280c0       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00280e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00280e4       0x1c 
 .bss           0x00000000c0028100      0x378 krnl/malloc.32
 .bss           0x00000000c0028478        0x0 libk/ctype.32
 .bss           0x00000000c0028478        0x0 libk/string.32
 .bss           0x00000000c0028478        0x0 arch/i386/cc.32
 .bss           0x00000000c0028478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0028478        0x8 
 .bss           0x00000000c0028480       0x88 fs/fat/ff.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0028508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0028508       0x18 
 .bss           0x00000000c0028520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0028eb8        0x0 dbg/kconsole.32
 .bss           0x00000000c0028eb8        0x0 dbg/usban.32
 *fill*         0x00000000c0028eb8        0x8 
 .bss           0x00000000c0028ec0     0x2444 fs/symlink.32
                0x00000000c0028ec0                kiNumWaitingRoomSymlinks
                0x00000000c0028ee0                kiNewlyCreatedIDs
                0x00000000c0028f00                kiNewlyCreatedSymlinks
                0x00000000c0029300                kiSymlinkHashTable
                0x00000000c002b300                kiBaseSymlinkID
 .bss           0x00000000c002b304        0x4 fs/vfs.32
                0x00000000c002b304                installedFilesystems
 .bss           0x00000000c002b308        0x0 hal/bus.32
 .bss           0x00000000c002b308        0x0 hal/buzzer.32
 *fill*         0x00000000c002b308       0x18 
 .bss           0x00000000c002b320      0x348 hal/clock.32
                0x00000000c002b320                keLoadedTimezones
                0x00000000c002b324                keNumberOfTimezones
                0x00000000c002b340                keTimezoneStrings
                0x00000000c002b660                keDstOn
                0x00000000c002b661                keTimezoneHalfHourOffset
                0x00000000c002b664                keTimezoneHourOffset
 .bss           0x00000000c002b668        0x0 hal/device.32
 .bss           0x00000000c002b668        0x0 hal/diskctrl.32
 .bss           0x00000000c002b668        0x0 hal/diskphys.32
 .bss           0x00000000c002b668        0x0 hal/fpu.32
 .bss           0x00000000c002b668        0x0 hal/intctrl.32
 *fill*         0x00000000c002b668       0x18 
 .bss           0x00000000c002b680      0x428 hal/keybrd.32
                0x00000000c002b680                keyboardWaitingTaskList
                0x00000000c002b684                keyboardSetupYet
                0x00000000c002b688                guiKeyboardHandler
                0x00000000c002b6a0                keystates
 *fill*         0x00000000c002baa8       0x18 
 .bss           0x00000000c002bac0       0x88 hal/logidisk.32
                0x00000000c002bac0                diskAssignments
                0x00000000c002bae0                disks
 .bss           0x00000000c002bb48        0x4 hal/mouse.32
                0x00000000c002bb48                guiMouseHandler
 .bss           0x00000000c002bb4c        0x0 hal/nic.32
 .bss           0x00000000c002bb4c        0x0 hal/partition.32
 .bss           0x00000000c002bb4c        0x0 hal/serial.32
 *fill*         0x00000000c002bb4c        0x4 
 .bss           0x00000000c002bb50        0x8 hal/timer.32
                0x00000000c002bb50                milliTenthsSinceBoot
 .bss           0x00000000c002bb58        0x0 hal/vcache.32
 .bss           0x00000000c002bb58        0x4 hal/video.32
                0x00000000c002bb58                screen
 *fill*         0x00000000c002bb5c        0x4 
 .bss           0x00000000c002bb60      0x480 hw/acpi.32
                0x00000000c002bb60                nextACPITable
                0x00000000c002bb80                acpiTables
                0x00000000c002bd80                usingXSDT
                0x00000000c002bd84                RSDTpointer
                0x00000000c002bd88                RSDPpointer
                0x00000000c002bd8c                nextAPICNMI
                0x00000000c002bda0                apicNMIInfo
                0x00000000c002be20                legacyIRQFlags
                0x00000000c002be40                ioapicDiscoveryNumber
                0x00000000c002be60                ioapicFoundInMADT
                0x00000000c002be80                ioapicAddresses
                0x00000000c002bf00                ioapicGSIBase
                0x00000000c002bf80                processorDiscoveryNumber
                0x00000000c002bfa0                matchingAPICID
                0x00000000c002bfc0                processorID
 .bss           0x00000000c002bfe0        0x0 krnl/assert.32
 .bss           0x00000000c002bfe0       0xe0 krnl/atexit.32
                0x00000000c002bfe0                KiNextAtexitHandler
                0x00000000c002c000                KiAtexitContexts
                0x00000000c002c060                KiAtexitHandlers
 .bss           0x00000000c002c0c0        0x0 krnl/bootmsg.32
 .bss           0x00000000c002c0c0        0x0 krnl/c++.32
 .bss           0x00000000c002c0c0        0x0 krnl/cdefs.32
 .bss           0x00000000c002c0c0        0x4 krnl/cm.32
 .bss           0x00000000c002c0c4        0x0 krnl/compat.32
 .bss           0x00000000c002c0c4       0x12 krnl/computer.32
                0x00000000c002c0c4                systemSleepFunction
                0x00000000c002c0c8                systemResetFunction
                0x00000000c002c0cc                systemShutdownFunction
                0x00000000c002c0d0                Krnl::computer
                0x00000000c002c0d4                KeIsPreemptionOn
                0x00000000c002c0d5                KeIsSchedulingOn
 .bss           0x00000000c002c0d6        0x0 krnl/crc32.32
 *fill*         0x00000000c002c0d6        0x2 
 .bss           0x00000000c002c0d8        0x8 krnl/env.32
                0x00000000c002c0d8                KeUserEnv
                0x00000000c002c0dc                KeSystemEnv
 .bss           0x00000000c002c0e0     0x2000 krnl/fault.32
                0x00000000c002c0e0                keInterruptContexts
                0x00000000c002d0e0                keInterruptHandlers
 .bss           0x00000000c002e0e0        0x6 krnl/gdt.32
                0x00000000c002e0e0                gdtDescr
 .bss           0x00000000c002e0e6        0x0 krnl/idle.32
 *fill*         0x00000000c002e0e6        0x2 
 .bss           0x00000000c002e0e8        0x6 krnl/idt.32
                0x00000000c002e0e8                idtDescr
 .bss           0x00000000c002e0ee        0x0 krnl/inlines.32
 *fill*         0x00000000c002e0ee       0x12 
 .bss           0x00000000c002e100       0x24 krnl/intlformat.32
                0x00000000c002e100                keLocale
 .bss           0x00000000c002e124        0x0 krnl/intops.32
 .bss           0x00000000c002e124        0x0 krnl/kheap.32
 .bss           0x00000000c002e124        0x0 krnl/mailbox.32
 .bss           0x00000000c002e124        0x4 krnl/main.32
                0x00000000c002e124                keBootSettings
 .bss           0x00000000c002e128        0x0 krnl/mutex.32
 .bss           0x00000000c002e128        0x1 krnl/panic.32
                0x00000000c002e128                KeIsKernelInPanic
 *fill*         0x00000000c002e129        0x3 
 .bss           0x00000000c002e12c       0x29 krnl/physmgr.32
                0x00000000c002e12c                Phys::forbidEvictions
                0x00000000c002e130                Phys::currentPagePointer
                0x00000000c002e134                Phys::highestMem
                0x00000000c002e138                Phys::oldPercent
                0x00000000c002e13c                Phys::usedPages
                0x00000000c002e140                Phys::usablePages
                0x00000000c002e144                Phys::dmaUsage
 .bss           0x00000000c002e155        0x0 krnl/pipe.32
 *fill*         0x00000000c002e155        0xb 
 .bss           0x00000000c002e160       0x48 krnl/powctrl.32
                0x00000000c002e160                powCtrlOnBattery
                0x00000000c002e180                currentPowerSettings
                0x00000000c002e1a4                secondsSinceLastUserIO
 .bss           0x00000000c002e1a8        0x8 krnl/random.32
                0x00000000c002e1a8                kiRandSeed
 .bss           0x00000000c002e1b0        0x0 krnl/resolve.32
 .bss           0x00000000c002e1b0        0x0 krnl/semaphore.32
 .bss           0x00000000c002e1b0        0x0 krnl/signal.32
 .bss           0x00000000c002e1b0        0x0 krnl/syscalls.32
 .bss           0x00000000c002e1b0        0x9 krnl/terminal.32
                0x00000000c002e1b0                terminalCycle
                0x00000000c002e1b4                activeTerminal
                0x00000000c002e1b8                VgaText::graphicMode
 *fill*         0x00000000c002e1b9        0x1 
 .bss           0x00000000c002e1ba        0x2 krnl/tss.32
                0x00000000c002e1ba                doubleFaultSelector
 *fill*         0x00000000c002e1bc        0x4 
 .bss           0x00000000c002e1c0       0x84 krnl/unixfile.32
                0x00000000c002e1c0                sfileLpt
                0x00000000c002e200                sfileCom
                0x00000000c002e224                sfileNul
                0x00000000c002e228                sfilePnt
                0x00000000c002e22c                sfileAux
                0x00000000c002e230                sfileCon
                0x00000000c002e234                initialFilesAdded
                0x00000000c002e238                unixFileLinkedList
 .bss           0x00000000c002e244       0x10 krnl/virtmgr.32
                0x00000000c002e244                twswaps
                0x00000000c002e248                swapBalance
                0x00000000c002e24c                Virt::swapfileBitmap
                0x00000000c002e250                keFirstVAS
 .bss           0x00000000c002e254        0x0 sys/alarm.32
 .bss           0x00000000c002e254        0x0 sys/eject.32
 .bss           0x00000000c002e254        0x0 sys/exit.32
 .bss           0x00000000c002e254        0x0 sys/getcwd.32
 .bss           0x00000000c002e254        0x0 sys/getpid.32
 .bss           0x00000000c002e254        0x0 sys/getramdata.32
 .bss           0x00000000c002e254        0x0 sys/getvgaptr.32
 .bss           0x00000000c002e254        0x0 sys/kill.32
 .bss           0x00000000c002e254        0x0 sys/loaddll.32
 .bss           0x00000000c002e254        0x0 sys/pause.32
 .bss           0x00000000c002e254        0x0 sys/read.32
 .bss           0x00000000c002e254        0x0 sys/registersignal.32
 .bss           0x00000000c002e254        0x0 sys/registry.32
 .bss           0x00000000c002e254        0x0 sys/sbrk.32
 .bss           0x00000000c002e254        0x0 sys/setcwd.32
 .bss           0x00000000c002e254        0x0 sys/settime.32
 .bss           0x00000000c002e254        0x0 sys/symlink.32
 .bss           0x00000000c002e254        0x0 sys/timezone.32
 .bss           0x00000000c002e254        0x0 sys/truncate.32
 .bss           0x00000000c002e254        0x0 sys/write.32
 .bss           0x00000000c002e254        0x0 sys/wsbe.32
 .bss           0x00000000c002e254        0x0 sys/yield.32
 .bss           0x00000000c002e254        0x0 thr/alarm.32
 *fill*         0x00000000c002e254        0xc 
 .bss           0x00000000c002e260      0x7a4 thr/elf.32
                0x00000000c002e260                Thr::driverLookupNext
                0x00000000c002e280                Thr::driverLookupLen
                0x00000000c002e480                Thr::driverLookupAddr
                0x00000000c002e680                Thr::driverNameLookup
                0x00000000c002e880                Thr::kernelSymbols
                0x00000000c002e900                Thr::kernelStringTable
                0x00000000c002e980                Thr::kernelSymbolTable
                0x00000000c002ea00                Thr::nextDLLSymbolIndex
 .bss           0x00000000c002ea04        0x0 thr/exec.32
 *fill*         0x00000000c002ea04        0x4 
 .bss           0x00000000c002ea08       0x70 thr/prcssthr.32
                0x00000000c002ea08                KiRestorePreemptionValue
                0x00000000c002ea0c                KiPreemptionDisableCounter
                0x00000000c002ea10                cleanerThread
                0x00000000c002ea14                weNeedTheCleanerToNotBlock
                0x00000000c002ea18                retValLockStuff
                0x00000000c002ea1c                retValSchedLock
                0x00000000c002ea20                lockStuffLock
                0x00000000c002ea24                schedulerLock
                0x00000000c002ea28                taskSwitchesPostponedFlag
                0x00000000c002ea2c                postponeTaskSwitchesCounter
                0x00000000c002ea30                irqDisableCounter
                0x00000000c002ea34                terminatedTaskList
                0x00000000c002ea40                sleepingTaskList
                0x00000000c002ea4c                taskList
                0x00000000c002ea58                kernelProcess
 *fill*         0x00000000c002ea78        0x8 
 .bss           0x00000000c002ea80       0x40 vm86/vm8086.32
                0x00000000c002ea80                Vm::started8086Yet
                0x00000000c002ea84                Vm::vmRetV
                0x00000000c002ea88                Vm::vmDone
                0x00000000c002ea89                Vm::vmReady
                0x00000000c002ea8c                Vm::vm86Thread
                0x00000000c002ea90                Vm::vmToHostCommsPtr
                0x00000000c002eaa0                Vm::vmToHostComms
 .bss           0x00000000c002eac0       0x54 arch/i386/hal.32
                0x00000000c002eac0                apic
                0x00000000c002eac4                guiPanicHandler
                0x00000000c002eac8                fpuOwner
                0x00000000c002eacc                coproLoadFunc
                0x00000000c002ead0                coproSaveFunc
                0x00000000c002ead4                lastD
                0x00000000c002ead8                lastC
                0x00000000c002eadc                lastB
                0x00000000c002eae0                lastA
                0x00000000c002eae4                HalPageWriteCombiningFlag
                0x00000000c002eae8                HalPageGlobalFlag
                0x00000000c002eaec                nmi
                0x00000000c002eaf0                vendorIDString
                0x00000000c002eafd                familyID
                0x00000000c002eafe                model
                0x00000000c002eaff                processorType
                0x00000000c002eb00                steppingID
                0x00000000c002eb04                vendor
                0x00000000c002eb08                opcodeDetectionMode
                0x00000000c002eb0c                features
 .bss           0x00000000c002eb14        0x0 arch/i386/intctrl.32
 .bss           0x00000000c002eb14        0x0 arch/i386/pic.32
 .bss           0x00000000c002eb14        0x2 arch/i386/rtc.32
 .bss           0x00000000c002eb16        0x0 arch/i386/vga.32
 *fill*         0x00000000c002eb16        0xa 
 .bss           0x00000000c002eb20       0xf0 fs/fat/vfslink.32
                0x00000000c002eb20                FAT::fats
                0x00000000c002eb40                FAT::vfsToFatRemaps
                0x00000000c002ebc0                fatToVFSRemaps
 .bss           0x00000000c002ec10        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c002ec10       0x10 
 .bss           0x00000000c002ec20      0x820 fs/iso9660/vfslink.32
                0x00000000c002ec20                iso9660Owner
                0x00000000c002ec24                recentSector
                0x00000000c002ec40                recentBuffer
 .bss           0x00000000c002f440        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002f440        0x0 hal/sound/sndport.32
 .bss           0x00000000c002f440        0x0 hw/bus/isa.32
 .bss           0x00000000c002f440        0xd hw/bus/pci.32
                0x00000000c002f440                thePCI
 .bss           0x00000000c002f44d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002f44d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002f44d        0x3 
 .bss           0x00000000c002f450        0x8 hw/diskphys/ata.32
                0x00000000c002f450                ataSectorsWritten
                0x00000000c002f454                ataSectorsRead
 .bss           0x00000000c002f458        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002f458        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002f458        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002f458        0x8 
 .bss           0x00000000c002f460       0x41 hw/intctrl/apic.32
                0x00000000c002f460                noOfIOAPICs
                0x00000000c002f480                ioapics
                0x00000000c002f4a0                IOAPICsSetupYet
 .bss           0x00000000c002f4a1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002f4a1        0x3 
 .bss           0x00000000c002f4a4        0x4 hw/timer/pit.32
                0x00000000c002f4a4                pitFreq
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002f4a8        0x0 crtn.32
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002f4a8        0x0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002f4a8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003694f                . = (. + SIZEOF (.bss))
OUTPUT(C:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/c/Users/Alex/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
