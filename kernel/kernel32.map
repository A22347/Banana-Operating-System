Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/resolve.32
LOAD krnl/syscalls.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c47a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002ff                asmQuickAcquireLock
                0x00000000c000031d                asmQuickReleaseLock
                0x00000000c0000329                asmAcquireLock
                0x00000000c000034a                asmReleaseLock
                0x00000000c000035d                loadGDT
                0x00000000c000037d                memcpy
 *fill*         0x00000000c0000382        0xe 
 .text          0x00000000c0000390      0x79e acpica/utclib.32
                0x00000000c0000390                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004d0                memset
                0x00000000c0000540                strlen
                0x00000000c0000570                strpbrk
                0x00000000c00005b0                strtok
                0x00000000c0000600                strcpy
                0x00000000c0000630                strncpy
                0x00000000c00006e0                strcmp
                0x00000000c0000730                strchr
                0x00000000c0000760                strncmp
                0x00000000c00007c0                strcat
                0x00000000c00007f0                strncat
                0x00000000c0000850                strstr
                0x00000000c00008b0                toupper
                0x00000000c00008d0                tolower
                0x00000000c00008f0                simple_strtoul
 .text          0x00000000c0000b2e      0xfad core/malloc.32
                0x00000000c0000c99                dlfree
                0x00000000c0000ff4                dlmalloc
                0x00000000c0001531                dlrealloc
                0x00000000c00016d4                dlmemalign
                0x00000000c00017f7                dlcalloc
                0x00000000c0001891                dlcfree
                0x00000000c0001896                dlindependent_calloc
                0x00000000c00018bb                dlindependent_comalloc
                0x00000000c00018d2                dlvalloc
                0x00000000c00018fd                dlpvalloc
                0x00000000c0001933                dlmalloc_trim
                0x00000000c0001940                dlmalloc_usable_size
                0x00000000c0001971                dlmallinfo
                0x00000000c0001a40                dlmalloc_stats
                0x00000000c0001a51                dlmallopt
 *fill*         0x00000000c0001adb        0x1 
 .text          0x00000000c0001adc      0x1f2 libk/ctype.32
                0x00000000c0001adc                isblank
                0x00000000c0001afc                iscntrl
                0x00000000c0001b1c                isdigit
                0x00000000c0001b38                islower
                0x00000000c0001b54                isspace
                0x00000000c0001b7c                isupper
                0x00000000c0001b98                isalpha
                0x00000000c0001bc8                isalnum
                0x00000000c0001bf8                ispunct
                0x00000000c0001c38                isgraph
                0x00000000c0001c68                isprint
                0x00000000c0001c90                isxdigit
 .text          0x00000000c0001cce        0x0 libk/string.32
 .text          0x00000000c0001cce       0x51 fs/fat/diskio.32
                0x00000000c0001cce                disk_status
                0x00000000c0001cd1                disk_initialize
                0x00000000c0001cd4                disk_read
                0x00000000c0001cea                disk_write
                0x00000000c0001d00                disk_ioctl
 .text          0x00000000c0001d1f     0x3d4b fs/fat/ff.32
                0x00000000c0003abb                f_mount
                0x00000000c0003b1d                f_open
                0x00000000c0003de8                f_read
                0x00000000c0003fe7                f_write
                0x00000000c000421b                f_sync
                0x00000000c00042d0                f_close
                0x00000000c00042ff                f_lseek
                0x00000000c00044a6                f_opendir
                0x00000000c0004571                f_closedir
                0x00000000c0004593                f_readdir
                0x00000000c0004625                f_stat
                0x00000000c00046a4                f_getfree
                0x00000000c00047a6                f_truncate
                0x00000000c000488a                f_unlink
                0x00000000c00049ac                f_mkdir
                0x00000000c0004b47                f_rename
                0x00000000c0004cfd                f_chmod
                0x00000000c0004da6                f_utime
                0x00000000c0004e54                f_getlabel
                0x00000000c0004fa5                f_setlabel
                0x00000000c0005135                f_expand
                0x00000000c0005295                f_mkfs
 *fill*         0x00000000c0005a6a        0x2 
 .text          0x00000000c0005a6c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a6c                ff_memalloc
                0x00000000c0005a84                ff_memfree
 *fill*         0x00000000c0005a9b        0x1 
 .text          0x00000000c0005a9c      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005a9c                ff_uni2oem
                0x00000000c0005b3c                ff_oem2uni
                0x00000000c0005bb4                ff_wtoupper
 .text          0x00000000c0005d44     0x1145 fs/iso9660/iso9660.32
                0x00000000c0006044                isoReadDiscSector
                0x00000000c0006125                strnicmp
                0x00000000c0006488                stricmp
                0x00000000c00064e2                iso_open
                0x00000000c00065c2                iso_close
                0x00000000c00065e2                iso_read
                0x00000000c00067e0                iso_seek
                0x00000000c00068be                iso_tell
                0x00000000c000691b                iso_total
                0x00000000c0006964                fn_postprocess
                0x00000000c0006998                iso_readdir
                0x00000000c0006c62                iso_reset
                0x00000000c0006c72                init_percd
                0x00000000c0006d77                iso_ioctl
                0x00000000c0006d82                fs_iso9660_init
                0x00000000c0006e11                fs_iso9660_shutdown
 *fill*         0x00000000c0006e89        0x1 
 .text          0x00000000c0006e8a      0x68b core/computer.32
                0x00000000c0006e8a                Computer::close(int, int, void*)
                0x00000000c0006ecf                Krnl::firstTask()
                0x00000000c0007008                Computer::Computer()
                0x00000000c0007008                Computer::Computer()
                0x00000000c00070ba                Computer::setBootMessage(char const*)
                0x00000000c00070bc                Computer::detectFeatures()
                0x00000000c00072c6                Computer::displayFeatures()
                0x00000000c00072c8                Computer::rdmsr(unsigned int)
                0x00000000c00072f4                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000732c                Computer::shutdown()
                0x00000000c0007344                Computer::restart()
                0x00000000c000735c                Computer::sleep()
                0x00000000c0007370                Computer::nmiEnabled()
                0x00000000c000737c                Computer::readCMOS(unsigned char)
                0x00000000c0007396                Computer::enableNMI(bool)
                0x00000000c00073ae                Computer::open(int, int, void*)
                0x00000000c0007482                Computer::disableNMI()
                0x00000000c0007492                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00074b0                Computer::handleNMI()
 *fill*         0x00000000c0007515        0x1 
 .text          0x00000000c0007516      0x1cf core/gdt.32
                0x00000000c0007516                GDTEntry::setBase(unsigned int)
                0x00000000c0007532                GDTEntry::setLimit(unsigned int)
                0x00000000c0007550                GDT::GDT()
                0x00000000c0007550                GDT::GDT()
                0x00000000c0007566                GDT::addEntry(GDTEntry)
                0x00000000c0007588                GDT::getNumberOfEntries()
                0x00000000c0007590                GDT::flush()
                0x00000000c00075b2                GDT::setup()
 .text          0x00000000c00076e5       0x1d core/idle.32
                0x00000000c00076e5                idleFunction(void*)
 *fill*         0x00000000c0007702        0x2 
 .text          0x00000000c0007704      0x464 core/idt.32
                0x00000000c0007704                IDTEntry::IDTEntry(bool)
                0x00000000c0007704                IDTEntry::IDTEntry(bool)
                0x00000000c0007776                IDTEntry::setOffset(unsigned int)
                0x00000000c000778c                IDT::IDT()
                0x00000000c000778c                IDT::IDT()
                0x00000000c000778e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0007796                IDT::addEntry(IDTEntry, int)
                0x00000000c00077b0                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00077e8                IDT::flush()
                0x00000000c0007802                IDT::setup()
 .text          0x00000000c0007b68      0x183 core/kheap.32
                0x00000000c0007b68                sbrk
                0x00000000c0007bfd                mmap
                0x00000000c0007c13                munmap
                0x00000000c0007c29                liballoc_lock()
                0x00000000c0007c36                liballoc_unlock()
                0x00000000c0007c4a                liballoc_alloc(int)
                0x00000000c0007c62                liballoc_free(void*, int)
                0x00000000c0007c7d                realloc
                0x00000000c0007c91                malloc
                0x00000000c0007ca1                free
                0x00000000c0007cb1                rfree
                0x00000000c0007cc1                calloc
 .text          0x00000000c0007ceb       0xc3 core/main.32
                0x00000000c0007ceb                KeEntryPoint
 .text          0x00000000c0007dae      0x5dc core/physmgr.32
                0x00000000c0007dae                Phys::allocateDMA(unsigned long)
                0x00000000c0007e85                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007eb8                Phys::setPageState(unsigned long, bool)
                0x00000000c0007eea                Phys::getPageState(unsigned long)
                0x00000000c0007f0b                Phys::freePage(unsigned long)
                0x00000000c0007f6d                Phys::allocatePage()
                0x00000000c000802b                Phys::allocateContiguousPages(int)
                0x00000000c0008087                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c00080bf                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000838a      0x273 core/pipe.32
                0x00000000c000838a                Pipe::isAtty()
                0x00000000c000838e                Pipe::~Pipe()
                0x00000000c000838e                Pipe::~Pipe()
                0x00000000c00083b2                Pipe::~Pipe()
                0x00000000c00083da                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000849a                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008596                Pipe::Pipe(int)
                0x00000000c0008596                Pipe::Pipe(int)
 *fill*         0x00000000c00085fd        0x1 
 .text          0x00000000c00085fe      0xa1e core/terminal.32
                0x00000000c00085fe                VgaText::isAtty()
                0x00000000c0008602                VgaText::~VgaText()
                0x00000000c0008602                VgaText::~VgaText()
                0x00000000c0008626                VgaText::~VgaText()
                0x00000000c0008650                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008670                setTerminalScrollLock(bool)
                0x00000000c0008671                doTerminalCycle()
                0x00000000c0008672                addToTerminalCycle(VgaText*)
                0x00000000c0008673                scrollTerminalScrollLock(int)
                0x00000000c0008674                VgaText::updateTitle()
                0x00000000c0008676                VgaText::load()
                0x00000000c0008678                VgaText::updateCursor()
                0x00000000c000868e                VgaText::doANSI_SGR(int)
                0x00000000c0008702                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0008712                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0008722                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0008742                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000874e                VgaText::setTitleColour(VgaColour)
                0x00000000c000875a                VgaText::setTitle(char*)
                0x00000000c000875c                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000876e                VgaText::scrollScreen()
                0x00000000c0008806                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008818                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00088a8                VgaText::getCursorX()
                0x00000000c00088b0                VgaText::getCursorY()
                0x00000000c00088b8                VgaText::setCursor(int, int)
                0x00000000c00088cf                setActiveTerminal(VgaText*)
                0x00000000c000891a                VgaText::clearScreen()
                0x00000000c0008968                VgaText::setCursorX(int)
                0x00000000c0008980                VgaText::setCursorY(int)
                0x00000000c0008998                VgaText::incrementCursor(bool)
                0x00000000c00089ec                VgaText::decrementCursor(bool)
                0x00000000c0008a0e                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008adc                VgaText::putchar(char)
                0x00000000c0008bc8                VgaText::putx(unsigned int)
                0x00000000c0008c0e                VgaText::puts(char const*)
                0x00000000c0008c34                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008c80                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008dd2                VgaText::VgaText(char const*)
                0x00000000c0008dd2                VgaText::VgaText(char const*)
                0x00000000c0008f1e                VgaText::receiveKey(unsigned char)
                0x00000000c0008ff6                VgaText::doUpdate()
                0x00000000c0008ff7                newTerminal(char*)
 .text          0x00000000c000901c      0x1a1 core/tss.32
                0x00000000c000901c                TSS::TSS()
                0x00000000c000901c                TSS::TSS()
                0x00000000c000902c                TSS::setESP(unsigned long)
                0x00000000c0009040                TSS::flush()
                0x00000000c0009060                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00091bd        0x1 
 .text          0x00000000c00091be      0x4c2 core/unixfile.32
                0x00000000c00091be                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009214                ReservedFilename::isAtty()
                0x00000000c0009230                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000928e                UnixFile::getFileDescriptor()
                0x00000000c0009296                UnixFile::UnixFile(int)
                0x00000000c0009296                UnixFile::UnixFile(int)
                0x00000000c0009446                ReservedFilename::ReservedFilename(int)
                0x00000000c0009446                ReservedFilename::ReservedFilename(int)
                0x00000000c0009478                UnixFile::~UnixFile()
                0x00000000c0009478                UnixFile::~UnixFile()
                0x00000000c0009510                UnixFile::~UnixFile()
                0x00000000c0009538                ReservedFilename::~ReservedFilename()
                0x00000000c0009538                ReservedFilename::~ReservedFilename()
                0x00000000c000955c                ReservedFilename::~ReservedFilename()
                0x00000000c0009583                getFromFileDescriptor(int)
 .text          0x00000000c0009680     0x1166 core/virtmgr.32
                0x00000000c0009680                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00096b5                Virt::getPageState(unsigned long)
                0x00000000c00096d9                Virt::allocateKernelVirtualPages(int)
                0x00000000c00097ea                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009808                Virt::swapIDToSector(unsigned long)
                0x00000000c000981a                Virt::allocateSwapfilePage()
                0x00000000c0009898                Virt::virtualMemorySetup()
                0x00000000c00098e3                Virt::setupPageSwapping(int)
                0x00000000c0009954                VAS::VAS()
                0x00000000c0009954                VAS::VAS()
                0x00000000c0009990                VAS::VAS(VAS*)
                0x00000000c0009990                VAS::VAS(VAS*)
                0x00000000c00099be                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00099ea                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009a09                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009b2e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009b52                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009b6c                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009bac                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009be0                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009c0a                VAS::~VAS()
                0x00000000c0009c0a                VAS::~VAS()
                0x00000000c0009d6e                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e72                VAS::allocatePages(int, int)
                0x00000000c000a04a                VAS::setCPUSpecific(unsigned long)
                0x00000000c000a068                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a12e                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a21c                VAS::VAS(bool)
                0x00000000c000a21c                VAS::VAS(bool)
                0x00000000c000a49c                VAS::evict(unsigned long)
                0x00000000c000a55e                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a64c                VAS::scanForEviction()
                0x00000000c000a72c                mapVASFirstTime
 .text          0x00000000c000a7e6       0x5f coreobjs/c++.32
                0x00000000c000a7e6                __cxa_atexit
                0x00000000c000a7e9                __cxa_finalize
                0x00000000c000a7ea                __stack_chk_fail
                0x00000000c000a820                __cxa_pure_virtual
                0x00000000c000a831                operator new[](unsigned long)
                0x00000000c000a836                operator delete(void*, unsigned long)
                0x00000000c000a83b                operator delete[](void*)
                0x00000000c000a840                operator delete[](void*, unsigned long)
 .text          0x00000000c000a845      0x21c dbg/kconsole.32
                0x00000000c000a845                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8b0                Dbg::logc(char)
                0x00000000c000a8d0                Dbg::logs(char*)
                0x00000000c000a8ed                Dbg::logWriteInt(unsigned int)
                0x00000000c000a90b                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a92c                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa61        0x1 
 .text          0x00000000c000aa62      0xc5c fs/vfs.32
                0x00000000c000aa62                File::read(unsigned long long, void*, int*)
                0x00000000c000aaba                File::write(unsigned long long, void*, int*)
                0x00000000c000ab12                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ab6a                Directory::write(unsigned long long, void*, int*)
                0x00000000c000ab98                File::isAtty()
                0x00000000c000ab9c                Directory::isAtty()
                0x00000000c000aba0                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000aba6                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000abac                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000abb2                File::~File()
                0x00000000c000abb2                File::~File()
                0x00000000c000abd6                File::~File()
                0x00000000c000ac00                Directory::~Directory()
                0x00000000c000ac00                Directory::~Directory()
                0x00000000c000ac24                Directory::~Directory()
                0x00000000c000ac4e                Filesystem::Filesystem()
                0x00000000c000ac4e                Filesystem::Filesystem()
                0x00000000c000ac72                Filesystem::~Filesystem()
                0x00000000c000ac72                Filesystem::~Filesystem()
                0x00000000c000ac80                Filesystem::~Filesystem()
                0x00000000c000aca4                Fs::getcwd(Process*, char*, int)
                0x00000000c000acce                Fs::initVFS()
                0x00000000c000acf8                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aea2                File::File(char const*, Process*)
                0x00000000c000aea2                File::File(char const*, Process*)
                0x00000000c000af62                File::open(FileOpenMode)
                0x00000000c000afc0                File::close()
                0x00000000c000b020                File::seek(unsigned long long)
                0x00000000c000b076                File::tell(unsigned long long*)
                0x00000000c000b0c6                File::rewind()
                0x00000000c000b0da                File::unlink()
                0x00000000c000b126                File::rename(char const*)
                0x00000000c000b174                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b1d0                File::exists()
                0x00000000c000b20e                File::stat(unsigned long long*, bool*)
                0x00000000c000b26f                Fs::setcwd(Process*, char*)
                0x00000000c000b3cc                Directory::Directory(char const*, Process*)
                0x00000000c000b3cc                Directory::Directory(char const*, Process*)
                0x00000000c000b48c                Directory::open()
                0x00000000c000b4e8                Directory::close()
                0x00000000c000b548                Directory::unlink()
                0x00000000c000b594                Directory::rename(char const*)
                0x00000000c000b5e2                Directory::exists()
                0x00000000c000b620                Directory::read(dirent*)
                0x00000000c000b66c                Directory::create()
                0x00000000c000b6b8                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b6be        0x2 
 .text          0x00000000c000b6c0       0x86 hal/bus.32
                0x00000000c000b6c0                Bus::Bus(char const*)
                0x00000000c000b6c0                Bus::Bus(char const*)
                0x00000000c000b6f8                Bus::~Bus()
                0x00000000c000b6f8                Bus::~Bus()
                0x00000000c000b71c                Bus::~Bus()
 .text          0x00000000c000b746       0x96 hal/buzzer.32
                0x00000000c000b746                beepThread(void*)
                0x00000000c000b783                Krnl::beep(int, int, bool)
 .text          0x00000000c000b7dc      0x46d hal/clock.32
                0x00000000c000b7dc                User::loadClockSettings(int)
                0x00000000c000b82e                Clock::Clock(char const*)
                0x00000000c000b82e                Clock::Clock(char const*)
                0x00000000c000b864                Clock::~Clock()
                0x00000000c000b864                Clock::~Clock()
                0x00000000c000b888                Clock::~Clock()
                0x00000000c000b8b2                Clock::timeInSecondsLocal()
                0x00000000c000b8fa                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b953                datetimeToSeconds(datetime_t)
                0x00000000c000ba80                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bae0                secondsToDatetime(unsigned long long)
                0x00000000c000bc24                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bc49        0x1 
 .text          0x00000000c000bc4a      0x464 hal/device.32
                0x00000000c000bc4a                Device::hibernate()
                0x00000000c000bc4c                Device::wake()
                0x00000000c000bc4e                Device::detect()
                0x00000000c000bc50                Device::disableLegacy()
                0x00000000c000bc52                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bc54                DriverlessDevice::close(int, int, void*)
                0x00000000c000bc58                DriverlessDevice::detect()
                0x00000000c000bc5a                DriverlessDevice::open(int, int, void*)
                0x00000000c000bc6e                Device::~Device()
                0x00000000c000bc6e                Device::~Device()
                0x00000000c000bc7c                Device::~Device()
                0x00000000c000bca4                Device::findAndLoadDriver()
                0x00000000c000bcb2                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bcd8                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bd18                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bd42                Device::getParent()
                0x00000000c000bd4e                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000bd6c                Device::addChild(Device*)
                0x00000000c000bdb0                Device::removeAllChildren()
                0x00000000c000bdf6                Device::hibernateAll()
                0x00000000c000be26                Device::wakeAll()
                0x00000000c000be56                Device::detectAll()
                0x00000000c000be86                Device::disableLegacyAll()
                0x00000000c000be88                Device::loadDriversForAll()
                0x00000000c000be8a                Device::closeAll()
                0x00000000c000bec0                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bef6                Device::setName(char const*)
                0x00000000c000bf04                Device::Device(char const*)
                0x00000000c000bf04                Device::Device(char const*)
                0x00000000c000c000                Device::getName()
                0x00000000c000c00a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c00a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c040                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c084                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c0ae        0x2 
 .text          0x00000000c000c0b0       0x86 hal/diskctrl.32
                0x00000000c000c0b0                HardDiskController::HardDiskController(char const*)
                0x00000000c000c0b0                HardDiskController::HardDiskController(char const*)
                0x00000000c000c0e8                HardDiskController::~HardDiskController()
                0x00000000c000c0e8                HardDiskController::~HardDiskController()
                0x00000000c000c10c                HardDiskController::~HardDiskController()
 .text          0x00000000c000c136       0xe2 hal/diskphys.32
                0x00000000c000c136                PhysicalDisk::eject()
                0x00000000c000c13a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c13a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c1a2                PhysicalDisk::startCache()
                0x00000000c000c1ca                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c1ca                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c1ee                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c218        0x0 hal/fpu.32
 .text          0x00000000c000c218      0x35d hal/intctrl.32
                0x00000000c000c218                int_handler
                0x00000000c000c2a0                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c2e8                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c420                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c454                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c4d3                setupINTS()
                0x00000000c000c530                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c575        0x1 
 .text          0x00000000c000c576      0x78c hal/keybrd.32
                0x00000000c000c576                startGUI(void*)
                0x00000000c000c5e2                startGUIVESA(void*)
                0x00000000c000c64e                sendKeyToTerminal(unsigned char)
                0x00000000c000c711                sendKeyboardToken(KeyboardToken)
                0x00000000c000cb51                clearInternalKeybuffer(VgaText*)
                0x00000000c000cb86                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000cc78                Keyboard::Keyboard(char const*)
                0x00000000c000cc78                Keyboard::Keyboard(char const*)
                0x00000000c000ccb4                Keyboard::~Keyboard()
                0x00000000c000ccb4                Keyboard::~Keyboard()
                0x00000000c000ccd8                Keyboard::~Keyboard()
 .text          0x00000000c000cd02      0x3ea hal/logidisk.32
                0x00000000c000cd02                LogicalDisk::close(int, int, void*)
                0x00000000c000cd06                LogicalDisk::~LogicalDisk()
                0x00000000c000cd06                LogicalDisk::~LogicalDisk()
                0x00000000c000cd2a                LogicalDisk::~LogicalDisk()
                0x00000000c000cd54                LogicalDisk::open(int, int, void*)
                0x00000000c000cd68                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cda0                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cde6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cde6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ce9c                LogicalDisk::assignDriveLetter()
                0x00000000c000cf52                LogicalDisk::mount()
                0x00000000c000cf9a                LogicalDisk::unmount()
                0x00000000c000cfaa                LogicalDisk::eject()
                0x00000000c000cfbe                LogicalDisk::unassignDriveLetter()
                0x00000000c000d014                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d080                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000d0ec       0x86 hal/mouse.32
                0x00000000c000d0ec                Mouse::Mouse(char const*)
                0x00000000c000d0ec                Mouse::Mouse(char const*)
                0x00000000c000d124                Mouse::~Mouse()
                0x00000000c000d124                Mouse::~Mouse()
                0x00000000c000d148                Mouse::~Mouse()
 .text          0x00000000c000d172      0x339 hal/partition.32
                0x00000000c000d172                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d21a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d4ab        0x1 
 .text          0x00000000c000d4ac       0x86 hal/serial.32
                0x00000000c000d4ac                Serial::Serial(char const*)
                0x00000000c000d4ac                Serial::Serial(char const*)
                0x00000000c000d4e4                Serial::~Serial()
                0x00000000c000d4e4                Serial::~Serial()
                0x00000000c000d508                Serial::~Serial()
 *fill*         0x00000000c000d532        0x2 
 .text          0x00000000c000d534      0x234 hal/timer.32
                0x00000000c000d534                Timer::Timer(char const*)
                0x00000000c000d534                Timer::Timer(char const*)
                0x00000000c000d56c                Timer::~Timer()
                0x00000000c000d56c                Timer::~Timer()
                0x00000000c000d590                Timer::~Timer()
                0x00000000c000d5ba                Timer::read()
                0x00000000c000d5c5                setupTimer(int)
                0x00000000c000d600                timerHandler(unsigned int)
 .text          0x00000000c000d768      0x3ee hal/vcache.32
                0x00000000c000d768                VCache::VCache(PhysicalDisk*)
                0x00000000c000d768                VCache::VCache(PhysicalDisk*)
                0x00000000c000d8d0                VCache::invalidateReadBuffer()
                0x00000000c000d8e0                VCache::writeWriteBuffer()
                0x00000000c000d92c                VCache::~VCache()
                0x00000000c000d92c                VCache::~VCache()
                0x00000000c000d980                VCache::~VCache()
                0x00000000c000d9a8                VCache::write(unsigned long long, int, void*)
                0x00000000c000dabe                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000db56      0x4b3 hal/video.32
                0x00000000c000db56                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000dba2                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000dc12                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000dc90                Video::clearScreen(unsigned int)
                0x00000000c000dcc4                Video::putpixel(int, int, unsigned int)
                0x00000000c000dcd2                Video::Video(char const*)
                0x00000000c000dcd2                Video::Video(char const*)
                0x00000000c000dd08                Video::~Video()
                0x00000000c000dd08                Video::~Video()
                0x00000000c000dd2c                Video::~Video()
                0x00000000c000dd56                Video::isMonochrome()
                0x00000000c000dd62                Video::getWidth()
                0x00000000c000dd6e                Video::getHeight()
                0x00000000c000dd7a                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000de36                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000df9e                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e009        0x3 
 .text          0x00000000c000e00c     0x1307 hw/acpi.32
                0x00000000c000e00c                ACPI::close(int, int, void*)
                0x00000000c000e0c4                findRSDP()
                0x00000000c000e154                loadACPITables(unsigned char*)
                0x00000000c000e3b8                findRSDT(unsigned char*)
                0x00000000c000e508                findDataTable(unsigned char*, char*)
                0x00000000c000e580                scanMADT()
                0x00000000c000ea54                ACPI::ACPI()
                0x00000000c000ea54                ACPI::ACPI()
                0x00000000c000eaa8                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000eb90                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ec58                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ec60                ACPI::detectPCI()
                0x00000000c000ee68                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000eebc                ACPI::sleep()
                0x00000000c000eed8                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f313        0x1 
 .text          0x00000000c000f314      0xb95 hw/cpu.32
                0x00000000c000f314                CPU::close(int, int, void*)
                0x00000000c000f318                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f334                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f34c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f3c0                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f444                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f472                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f4a0                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f4ce                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f4fc                CPU::CPU()
                0x00000000c000f4fc                CPU::CPU()
                0x00000000c000f58a                CPU::displayFeatures()
                0x00000000c000f58c                CPU::detectFeatures()
                0x00000000c000fc50                CPU::setupSMEP()
                0x00000000c000fc5c                CPU::setupUMIP()
                0x00000000c000fc66                CPU::setupTSC()
                0x00000000c000fc70                CPU::setupLargePages()
                0x00000000c000fc7a                CPU::setupPAT()
                0x00000000c000fcb6                CPU::setupMTRR()
                0x00000000c000fcb8                CPU::setupGlobalPages()
                0x00000000c000fcc2                CPU::allowUsermodeDataAccess()
                0x00000000c000fcd4                CPU::prohibitUsermodeDataAccess()
                0x00000000c000fce6                CPU::setupSMAP()
                0x00000000c000fcf4                CPU::setupFeatures()
                0x00000000c000fdc0                CPU::open(int, int, void*)
 .text          0x00000000c000fea9       0xd1 krnl/bootmsg.32
                0x00000000c000fea9                KeDisplaySplashScreen()
                0x00000000c000ff17                KeSetBootMessage(char const*)
 .text          0x00000000c000ff7a      0x581 krnl/env.32
                0x00000000c000ff7a                EnvVarContainer::getEnv(char const*)
                0x00000000c000ffb8                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001007a                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001007c                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010262                EnvVarContainer::__loadSystem()
                0x00000000c001027c                EnvVarContainer::__loadUser()
                0x00000000c001027e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001027e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00102a0                EnvVarContainer::~EnvVarContainer()
                0x00000000c00102a0                EnvVarContainer::~EnvVarContainer()
                0x00000000c00102d0                Krnl::getEnv(Process*, char const*)
                0x00000000c0010335                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c001034f                Krnl::setEnvUser(char const*, char const*)
                0x00000000c001036e                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0010381                Krnl::deleteEnvSystem(char const*)
                0x00000000c0010382                Krnl::deleteEnvUser(char const*)
                0x00000000c0010383                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0010384                Krnl::newProcessEnv(Process*)
                0x00000000c00103a6                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c00103f2                Krnl::loadSystemEnv()
                0x00000000c0010420                Krnl::loadUserEnv()
                0x00000000c0010446                Krnl::flushEnv()
                0x00000000c0010447                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0010467                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00104fb       0x94 krnl/inlines.32
                0x00000000c00104fb                CPU::current()
                0x00000000c0010507                operator new(unsigned long)
                0x00000000c001050c                operator delete(void*)
                0x00000000c0010511                disableIRQs()
                0x00000000c0010513                enableIRQs()
                0x00000000c0010515                lockScheduler()
                0x00000000c001051d                unlockScheduler()
                0x00000000c001052c                lockStuff()
                0x00000000c001053a                unlockStuff()
                0x00000000c0010574                Virt::getAKernelVAS()
                0x00000000c001057a                __not_memcpy
 .text          0x00000000c001058f        0xc krnl/panic.32
                0x00000000c001058f                KePanic(char const*)
 .text          0x00000000c001059b      0x142 krnl/powctrl.32
                0x00000000c001059b                Krnl::powerThread(void*)
                0x00000000c00105c9                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c00105df                Krnl::userIOReceived()
                0x00000000c00105ea                Krnl::handlePowerButton()
                0x00000000c001061f                Krnl::handleSleepButton()
                0x00000000c0010654                Krnl::setupPowerManager()
 *fill*         0x00000000c00106dd        0x3 
 .text          0x00000000c00106e0      0x190 krnl/resolve.32
                0x00000000c00106e0                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010870      0xe2c krnl/syscalls.32
                0x00000000c0010870                SysSeekDir(regs*)
                0x00000000c0010875                SysTellDir(regs*)
                0x00000000c001087a                SysVerify(regs*)
                0x00000000c0010884                SysGetArgc(regs*)
                0x00000000c0010894                SysTTYName(regs*)
                0x00000000c001089c                SysFormatDisk(regs*)
                0x00000000c0010909                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010953                SysGetDiskVolumeLabel(regs*)
                0x00000000c00109a8                SysShutdown(regs*)
                0x00000000c0010a06                SysRealpath(regs*)
                0x00000000c0010a49                SysReadDir(regs*)
                0x00000000c0010ac9                SysIsATTY(regs*)
                0x00000000c0010b25                SysSeek(regs*)
                0x00000000c0010b7e                SysTell(regs*)
                0x00000000c0010bed                SysSize(regs*)
                0x00000000c0010c62                SysSizeFromFilename(regs*)
                0x00000000c0010d15                SysClose(regs*)
                0x00000000c0010d75                SysOpenDir(regs*)
                0x00000000c0010dec                SysCloseDir(regs*)
                0x00000000c0010e40                SysMakeDir(regs*)
                0x00000000c0010eb2                SysWait(regs*)
                0x00000000c0010ecf                SysNotImpl(regs*)
                0x00000000c0010eea                SysPanic(regs*)
                0x00000000c0010f05                SysRmdir(regs*)
                0x00000000c0010f6c                SysUnlink(regs*)
                0x00000000c0010fd3                SysGetArgv(regs*)
                0x00000000c0011020                SysUSleep(regs*)
                0x00000000c0011049                SysSpawn(regs*)
                0x00000000c00110b2                SysGetEnv(regs*)
                0x00000000c0011161                SysSetFatAttrib(regs*)
                0x00000000c00111d8                SysPipe(regs*)
                0x00000000c001121d                SysGetUnixTime(regs*)
                0x00000000c0011231                string_ends_with(char const*, char const*)
                0x00000000c001127b                SysOpen(regs*)
                0x00000000c001146f                KeLoadSystemCalls()
                0x00000000c001165a                KeSystemCall(regs*, void*)
 .text          0x00000000c001169c      0x50e reg/registry.32
                0x00000000c001169c                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00117f4                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0011949                Reg::getLine(char*, char*, char*)
                0x00000000c0011980                Reg::readInt(char*, char*, int*)
                0x00000000c0011a6b                Reg::readString(char*, char*, char*, int)
                0x00000000c0011aec                Reg::readBool(char*, char*, bool*)
                0x00000000c0011b11                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0011b3d                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0011b69                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0011baa       0x36 sys/eject.32
                0x00000000c0011baa                SysEject(regs*)
 .text          0x00000000c0011be0       0x18 sys/exit.32
                0x00000000c0011be0                SysExit(regs*)
 .text          0x00000000c0011bf8       0x1f sys/getcwd.32
                0x00000000c0011bf8                SysGetCwd(regs*)
 .text          0x00000000c0011c17        0xc sys/getpid.32
                0x00000000c0011c17                SysGetPID(regs*)
 .text          0x00000000c0011c23       0x1a sys/getramdata.32
                0x00000000c0011c23                SysGetRAMData(regs*)
 .text          0x00000000c0011c3d       0x82 sys/getvgaptr.32
                0x00000000c0011c3d                SysGetVGAPtr(regs*)
 .text          0x00000000c0011cbf       0xa8 sys/loaddll.32
                0x00000000c0011cbf                SysLoadDLL(regs*)
 .text          0x00000000c0011d67       0x68 sys/read.32
                0x00000000c0011d67                SysRead(regs*)
 .text          0x00000000c0011dcf       0x55 sys/sbrk.32
                0x00000000c0011dcf                SysSbrk(regs*)
 .text          0x00000000c0011e24       0x1c sys/setcwd.32
                0x00000000c0011e24                SysSetCwd(regs*)
 .text          0x00000000c0011e40       0x95 sys/settime.32
                0x00000000c0011e40                SysSetTime(regs*)
 .text          0x00000000c0011ed5       0x4a sys/timezone.32
                0x00000000c0011ed5                SysTimezone(regs*)
 .text          0x00000000c0011f1f       0x68 sys/write.32
                0x00000000c0011f1f                SysWrite(regs*)
 .text          0x00000000c0011f87       0x62 sys/wsbe.32
                0x00000000c0011f87                SysWsbe(regs*)
 .text          0x00000000c0011fe9       0x25 sys/yield.32
                0x00000000c0011fe9                SysYield(regs*)
 .text          0x00000000c001200e     0x11e5 thr/elf.32
                0x00000000c001200e                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001229a                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00124b0                Thr::runtimeReferenceHelper()
                0x00000000c00124c3                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0012512                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00127d0                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012f06                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012f38                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012f6f                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012f89                Thr::loadDLL(char const*, bool)
                0x00000000c00131ba                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00131f3        0x1 
 .text          0x00000000c00131f4     0x12c5 thr/prcssthr.32
                0x00000000c00131f4                userModeEntryPoint(void*)
                0x00000000c001321c                changeTSS
                0x00000000c001324c                switchToThread(ThreadControlBlock*)
                0x00000000c0013300                Process::addArgs(char**)
                0x00000000c0013360                Process::Process(char const*, Process*, char**)
                0x00000000c0013360                Process::Process(char const*, Process*, char**)
                0x00000000c0013550                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013550                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001370c                taskStartupFunction
                0x00000000c0013718                Semaphore::Semaphore(int)
                0x00000000c0013718                Semaphore::Semaphore(int)
                0x00000000c0013748                Mutex::Mutex()
                0x00000000c0013748                Mutex::Mutex()
                0x00000000c001375c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0013854                Process::createUserThread()
                0x00000000c0013874                setupMultitasking(void (*)())
                0x00000000c001397c                schedule()
                0x00000000c0013a0c                Semaphore::tryAcquire()
                0x00000000c0013ad8                Semaphore::assertLocked(char const*)
                0x00000000c0013b50                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0013b78                blockTask(TaskState)
                0x00000000c0013ba8                waitTask(int, int*, int)
                0x00000000c0013bec                milliTenthSleepUntil(unsigned int)
                0x00000000c0013c7c                milliTenthSleep(unsigned int)
                0x00000000c0013c8c                sleep(unsigned int)
                0x00000000c0013ca8                Semaphore::acquire()
                0x00000000c0013d64                taskReturned
                0x00000000c0013da0                Thr::processFromPID(int)
                0x00000000c0013e40                unblockTask(ThreadControlBlock*)
                0x00000000c0013ee4                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00141b0                cleanerTaskFunction(void*)
                0x00000000c00142a0                terminateTask(int)
                0x00000000c001436c                Thr::terminateFromIRQ(int)
                0x00000000c001437c                Semaphore::release()
 .text          0x00000000c00144b9      0xb93 vm86/vm8086.32
                0x00000000c00144b9                Vm::inbv(unsigned short)
                0x00000000c00144cc                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0014502                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0014512                Vm::getSegment(unsigned int)
                0x00000000c001451a                Vm::getOffset(unsigned int)
                0x00000000c001451f                Vm::mainloop2()
                0x00000000c0014559                Vm::mainVm8086Loop(void*)
                0x00000000c0014569                Vm::mainloop3(unsigned long)
                0x00000000c001458f                Vm::initialise8086()
                0x00000000c00145d2                Vm::finish8086()
                0x00000000c0014633                Vm::getOutput8086(unsigned char*)
                0x00000000c0014658                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014711                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014879                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0014903                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0014914                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0014926                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0014937                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001494c                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0014962                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0014977                Vm::faultHandler(regs*)
 .text          0x00000000c001504c      0xa53 arch/i386/hal.32
                0x00000000c001504c                noCopro(unsigned long)
                0x00000000c001504d                nmiHandler(regs*, void*)
                0x00000000c0015066                doubleFault(regs*, void*)
                0x00000000c001507f                displayDebugInfo(regs*)
                0x00000000c00153a0                HalSystemIdle()
                0x00000000c0015416                displayProgramFault(char const*)
                0x00000000c0015462                gpFault(regs*, void*)
                0x00000000c00154c7                pgFault(regs*, void*)
                0x00000000c001554d                otherISRHandler(regs*, void*)
                0x00000000c0015581                opcodeFault(regs*, void*)
                0x00000000c0015601                i386SaveCoprocessor(void*)
                0x00000000c0015615                i386LoadCoprocessor(void*)
                0x00000000c0015629                x87EmulHandler(regs*, void*)
                0x00000000c00156c6                HalInitialiseCoprocessor()
                0x00000000c0015774                HalPanic(char const*)
                0x00000000c001586d                HalQueryPerformanceCounter()
                0x00000000c0015888                HalInitialise()
                0x00000000c0015a2e                HalMakeBeep(int)
                0x00000000c0015a68                HalGetRand()
                0x00000000c0015a6b                HalEndOfInterrupt(int)
                0x00000000c0015a9c                HalRestart()
                0x00000000c0015a9d                HalShutdown()
                0x00000000c0015a9e                HalSleep()
 *fill*         0x00000000c0015a9f        0x1 
 .text          0x00000000c0015aa0      0x2f4 arch/i386/pic.32
                0x00000000c0015aa0                picIoWait()
                0x00000000c0015aa8                picDisable()
                0x00000000c0015adc                picGetIRQReg(int)
                0x00000000c0015b60                picOpen()
                0x00000000c0015cf0                picEOI(int)
 .text          0x00000000c0015d94      0x64d arch/i386/rtc.32
                0x00000000c0015d94                RTC::open(int, int, void*)
                0x00000000c0015d98                RTC::close(int, int, void*)
                0x00000000c0015d9c                RTC::timeInSecondsUTC()
                0x00000000c0015dae                RTC::timeInDatetimeUTC()
                0x00000000c0015dd4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015e12                RTC::~RTC()
                0x00000000c0015e12                RTC::~RTC()
                0x00000000c0015e36                RTC::~RTC()
                0x00000000c0015e60                RTC::get_update_in_progress_flag()
                0x00000000c0015e78                RTC::completeRTCRefresh()
                0x00000000c0016130                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00162e3                rtcIRQHandler(regs*, void*)
                0x00000000c0016328                RTC::RTC()
                0x00000000c0016328                RTC::RTC()
 *fill*         0x00000000c00163e1        0x3 
 .text          0x00000000c00163e4      0x203 arch/i386/vga.32
                0x00000000c00163e4                HalConsoleScroll(int, int)
                0x00000000c00164ec                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0016558                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c00165e7        0x1 
 .text          0x00000000c00165e8     0x13e7 fs/fat/vfslink.32
                0x00000000c00165e8                FAT::getName()
                0x00000000c00165f0                FAT::tell(void*, unsigned long long*)
                0x00000000c001662c                FAT::stat(void*, unsigned long long*)
                0x00000000c0016668                FAT::~FAT()
                0x00000000c0016668                FAT::~FAT()
                0x00000000c001668c                FAT::~FAT()
                0x00000000c00166b4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0016758                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001681c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00169f0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016c08                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016dc8                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016f34                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016f94                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016ff4                FAT::close(void*)
                0x00000000c0017048                FAT::closeDir(void*)
                0x00000000c001709c                FAT::seek(void*, unsigned long long)
                0x00000000c00170f4                fatWrapperReadDisk
                0x00000000c0017138                fatWrapperWriteDisk
                0x00000000c001717c                fatWrapperIoctl
                0x00000000c0017298                FAT::FAT()
                0x00000000c0017298                FAT::FAT()
                0x00000000c00172ec                FAT::fixFilepath(char*)
                0x00000000c0017328                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0017460                FAT::openDir(char const*, void**)
                0x00000000c0017510                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017608                FAT::unlink(char const*)
                0x00000000c0017688                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017814                FAT::rename(char const*, char const*)
                0x00000000c00178e0                FAT::mkdir(char const*)
                0x00000000c0017960                FAT::exists(char const*)
 *fill*         0x00000000c00179cf        0x1 
 .text          0x00000000c00179d0       0x5c fs/iso9660/helper.32
                0x00000000c00179d0                isoReadDiscSectorHelper
 .text          0x00000000c0017a2c      0x58c fs/iso9660/vfslink.32
                0x00000000c0017a2c                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017a32                ISO9660::getName()
                0x00000000c0017a38                ISO9660::closeDir(void*)
                0x00000000c0017a42                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017a48                ISO9660::unlink(char const*)
                0x00000000c0017a4e                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0017a54                ISO9660::rename(char const*, char const*)
                0x00000000c0017a5a                ISO9660::mkdir(char const*)
                0x00000000c0017a60                ISO9660::~ISO9660()
                0x00000000c0017a60                ISO9660::~ISO9660()
                0x00000000c0017a84                ISO9660::~ISO9660()
                0x00000000c0017aac                ISO9660::exists(char const*)
                0x00000000c0017ac0                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017b4c                ISO9660::openDir(char const*, void**)
                0x00000000c0017bcc                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017c0c                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017c44                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017c7a                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017cb4                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017da0                ISO9660::close(void*)
                0x00000000c0017dc6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017e93                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017f1e                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017f90                ISO9660::ISO9660()
                0x00000000c0017f90                ISO9660::ISO9660()
 .text          0x00000000c0017fb8      0x26c hal/sound/sndcard.32
                0x00000000c0017fb8                SoundCard::beginPlayback()
                0x00000000c0017fc6                SoundCard::stopPlayback()
                0x00000000c0017fd4                SoundCard::SoundCard(char const*)
                0x00000000c0017fd4                SoundCard::SoundCard(char const*)
                0x00000000c0018072                SoundCard::~SoundCard()
                0x00000000c0018072                SoundCard::~SoundCard()
                0x00000000c0018096                SoundCard::~SoundCard()
                0x00000000c00180c0                SoundCard::configureRates(int, int, int)
                0x00000000c00180f0                SoundCard::getSamples16(int, short*)
                0x00000000c001814c                SoundCard::getSamples32(int, int*)
                0x00000000c00181d2                SoundCard::addChannel(SoundPort*)
                0x00000000c0018210                SoundCard::removeChannel(int)
 .text          0x00000000c0018224      0x377 hal/sound/sndport.32
                0x00000000c0018224                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018224                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00182b0                SoundPort::~SoundPort()
                0x00000000c00182b0                SoundPort::~SoundPort()
                0x00000000c00182e4                SoundPort::unpause()
                0x00000000c00182f0                SoundPort::pause()
                0x00000000c00182fc                SoundPort::getBufferUsed()
                0x00000000c0018304                SoundPort::getBufferSize()
                0x00000000c001830c                SoundPort::buffer16(short*, int)
                0x00000000c0018398                SoundPort::buffer32(int*, int)
                0x00000000c0018420                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c00184e4                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001859b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001859b        0x1 
 .text          0x00000000c001859c      0xb49 hw/bus/pci.32
                0x00000000c001859c                PCI::open(int, int, void*)
                0x00000000c00185ba                PCI::close(int, int, void*)
                0x00000000c00185be                PCI::PCI()
                0x00000000c00185be                PCI::PCI()
                0x00000000c0018658                PCI::readBAR8(unsigned int, int)
                0x00000000c0018674                PCI::readBAR16(unsigned int, int)
                0x00000000c0018692                PCI::readBAR32(unsigned int, int)
                0x00000000c00186ae                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c00186ce                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c00186f0                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0018710                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001877e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018826                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001884a                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0018872                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c00188bc                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c00188e4                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018908                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001892c                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0018954                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00189b8                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018aa0                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018d1a                PCI::checkBus(unsigned char)
                0x00000000c0018d40                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018eb2                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0019026                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0019092                PCI::detect()
 *fill*         0x00000000c00190e5        0x1 
 .text          0x00000000c00190e6      0xb5a hw/diskctrl/ide.32
                0x00000000c00190e6                IDE::close(int, int, void*)
                0x00000000c00190ea                IDE::IDE()
                0x00000000c00190ea                IDE::IDE()
                0x00000000c001911e                IDE::prepareInterrupt(unsigned char)
                0x00000000c0019130                selectDrive(unsigned char, unsigned char)
                0x00000000c0019132                IDE::getBase(unsigned char)
                0x00000000c0019144                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0019204                IDE::read(unsigned char, unsigned char)
                0x00000000c00192b2                IDE::waitInterrupt(unsigned char)
                0x00000000c001931a                ideChannel0IRQHandler(regs*, void*)
                0x00000000c0019336                ideChannel1IRQHandler(regs*, void*)
                0x00000000c0019352                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0019398                IDE::open(int, int, void*)
                0x00000000c00197a6                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0019872                IDE::detect()
                0x00000000c0019b32                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019be2                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019c40      0x32a hw/diskctrl/satabus.32
                0x00000000c0019c40                SATABus::close(int, int, void*)
                0x00000000c0019c44                SATABus::detect()
                0x00000000c0019c46                SATABus::SATABus()
                0x00000000c0019c46                SATABus::SATABus()
                0x00000000c0019ccc                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019cfe                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d46                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d66                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d90                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019ea0                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019f4a                SATABus::open(int, int, void*)
 .text          0x00000000c0019f6a      0x5f4 hw/diskphys/ata.32
                0x00000000c0019f6a                ATA::close(int, int, void*)
                0x00000000c0019f8e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019f90                ATA::ATA()
                0x00000000c0019f90                ATA::ATA()
                0x00000000c0019fbe                ATA::flush(bool)
                0x00000000c001a008                ATA::readyForCommand()
                0x00000000c001a054                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a3d0                ATA::read(unsigned long long, int, void*)
                0x00000000c001a41c                ATA::write(unsigned long long, int, void*)
                0x00000000c001a468                ATA::detectCHS()
                0x00000000c001a492                ATA::open(int, int, void*)
 .text          0x00000000c001a55e      0x60e hw/diskphys/atapi.32
                0x00000000c001a55e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a564                ATAPI::close(int, int, void*)
                0x00000000c001a588                ATAPI::ATAPI()
                0x00000000c001a588                ATAPI::ATAPI()
                0x00000000c001a5b6                ATAPI::readyForCommand()
                0x00000000c001a608                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a8c8                ATAPI::diskRemoved()
                0x00000000c001a902                ATAPI::eject()
                0x00000000c001a94a                ATAPI::diskInserted()
                0x00000000c001a956                ATAPI::detectMedia()
                0x00000000c001aa12                ATAPI::open(int, int, void*)
                0x00000000c001aaf2                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ab6c      0x402 hw/diskphys/sata.32
                0x00000000c001ab6c                SATA::close(int, int, void*)
                0x00000000c001ab90                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ab92                SATA::open(int, int, void*)
                0x00000000c001ac3c                SATA::SATA()
                0x00000000c001ac3c                SATA::SATA()
                0x00000000c001ac6a                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001aeb6                SATA::read(unsigned long long, int, void*)
                0x00000000c001af02                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001af6e      0x5f5 hw/diskphys/satapi.32
                0x00000000c001af6e                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001af74                SATAPI::close(int, int, void*)
                0x00000000c001af98                SATAPI::SATAPI()
                0x00000000c001af98                SATAPI::SATAPI()
                0x00000000c001afc6                SATAPI::diskRemoved()
                0x00000000c001afc8                SATAPI::diskInserted()
                0x00000000c001afe4                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b2c0                SATAPI::eject()
                0x00000000c001b2fc                SATAPI::detectMedia()
                0x00000000c001b322                SATAPI::open(int, int, void*)
                0x00000000c001b422                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001b563        0x1 
 .text          0x00000000c001b564      0x455 hw/intctrl/apic.32
                0x00000000c001b564                IOAPIC::close(int, int, void*)
                0x00000000c001b56a                apicGetBase()
                0x00000000c001b5ac                IOAPIC::IOAPIC()
                0x00000000c001b5ac                IOAPIC::IOAPIC()
                0x00000000c001b5d4                apicOpen()
                0x00000000c001b73a                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b76c                IOAPIC::read(int)
                0x00000000c001b794                IOAPIC::open(int, int, void*)
                0x00000000c001b888                IOAPIC::write(int, int)
                0x00000000c001b8b4                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b9b9        0x3 
 .text          0x00000000c001b9bc       0xf0 hw/timer/apictimer.32
                0x00000000c001b9bc                APICTimer::close(int, int, void*)
                0x00000000c001b9c4                apicTimerHandler(regs*, void*)
                0x00000000c001b9ec                APICTimer::open(int, int, void*)
                0x00000000c001ba5c                APICTimer::write(int)
                0x00000000c001ba84                APICTimer::APICTimer()
                0x00000000c001ba84                APICTimer::APICTimer()
 .text          0x00000000c001baac      0x1aa hw/timer/pit.32
                0x00000000c001baac                PIT::write(int)
                0x00000000c001bb30                pitHandler(regs*, void*)
                0x00000000c001bb54                PIT::open(int, int, void*)
                0x00000000c001bba4                PIT::close(int, int, void*)
                0x00000000c001bbd4                PIT::PIT()
                0x00000000c001bbd4                PIT::PIT()
 *fill*         0x00000000c001bc56        0xa 
 .text          0x00000000c001bc60       0x83 arch/i386/avx.32
                0x00000000c001bc60                avxDetect
                0x00000000c001bc8a                avxSave
                0x00000000c001bc9b                avxLoad
                0x00000000c001bcac                avxInit
                0x00000000c001bcce                avxClose
                0x00000000c001bccf                wouldSheSayYes
 *fill*         0x00000000c001bce3        0xd 
 .text          0x00000000c001bcf0      0x1d6 arch/i386/interrupt.32
                0x00000000c001bcf0                isr0
                0x00000000c001bd00                isr1
                0x00000000c001bd0a                isr2
                0x00000000c001bd14                isr3
                0x00000000c001bd1e                isr4
                0x00000000c001bd28                isr5
                0x00000000c001bd32                isr6
                0x00000000c001bd3c                isr7
                0x00000000c001bd46                isr8
                0x00000000c001bd4e                isr9
                0x00000000c001bd58                isr10
                0x00000000c001bd60                isr11
                0x00000000c001bd68                isr12
                0x00000000c001bd70                isr13
                0x00000000c001bd78                isr14
                0x00000000c001bd80                isr15
                0x00000000c001bd8a                isr16
                0x00000000c001bd94                isr17
                0x00000000c001bd9e                isr18
                0x00000000c001bda8                irq3
                0x00000000c001bdb2                irq4
                0x00000000c001bdbc                irq5
                0x00000000c001bdc6                irq6
                0x00000000c001bdd0                irq7
                0x00000000c001bdda                irq8
                0x00000000c001bde4                irq9
                0x00000000c001bdee                irq10
                0x00000000c001bdf8                irq11
                0x00000000c001be02                irq12
                0x00000000c001be0c                irq13
                0x00000000c001be16                irq14
                0x00000000c001be20                irq15
                0x00000000c001be2a                irq1
                0x00000000c001be31                irq2
                0x00000000c001be38                isr96
                0x00000000c001be3f                irq0
                0x00000000c001be44                int_common_stub
                0x00000000c001be44                syscall_common_stub
                0x00000000c001be76                irq16
                0x00000000c001be80                irq17
                0x00000000c001be8a                irq18
                0x00000000c001be94                irq19
                0x00000000c001be9e                irq20
                0x00000000c001bea8                irq21
                0x00000000c001beb2                irq22
                0x00000000c001bebc                irq23
 *fill*         0x00000000c001bec6        0xa 
 .text          0x00000000c001bed0       0x10 arch/i386/rdrand.32
                0x00000000c001bed0                i386GetRDRAND
 .text          0x00000000c001bee0       0x39 arch/i386/sse.32
                0x00000000c001bee0                absolutelyNoChanceInHell
                0x00000000c001bee0                sseDetect
                0x00000000c001bef8                sseSave
                0x00000000c001bf00                sseLoad
                0x00000000c001bf08                sseInit
                0x00000000c001bf18                sseClose
 *fill*         0x00000000c001bf19        0x7 
 .text          0x00000000c001bf20       0x49 arch/i386/x87.32
                0x00000000c001bf26                x87Detect
                0x00000000c001bf41                x87Save
                0x00000000c001bf48                x87Load
                0x00000000c001bf4f                x87Init
                0x00000000c001bf68                x87Close
 *fill*         0x00000000c001bf69        0x3 
 .text          0x00000000c001bf6c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001bf91        0x0 crtn.32
 *fill*         0x00000000c001bf91        0x3 
 .text          0x00000000c001bf94      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001bf94                __divdi3
 *fill*         0x00000000c001c0df        0x1 
 .text          0x00000000c001c0e0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001c0e0                __moddi3
 *fill*         0x00000000c001c25e        0x2 
 .text          0x00000000c001c260       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c260                __udivdi3
 *fill*         0x00000000c001c35f        0x1 
 .text          0x00000000c001c360      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c360                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c480        0x0
 .iplt          0x00000000c001c480        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c47a        0xf
 .init          0x00000000c001c47a        0x3 crti.32
                0x00000000c001c47a                _init
 .init          0x00000000c001c47d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c482        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c487        0x2 crtn.32

.fini           0x00000000c001c489        0xa
 .fini          0x00000000c001c489        0x3 crti.32
                0x00000000c001c489                _fini
 .fini          0x00000000c001c48c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c491        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c494       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c494       0x23 core/computer.32
                0x00000000c001c494                Computer::~Computer()
                0x00000000c001c494                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c4b8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c4b8       0x2a core/computer.32
                0x00000000c001c4b8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c4e2       0x21
 .text._Z10idleCommonv
                0x00000000c001c4e2       0x21 core/idle.32
                0x00000000c001c4e2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c504        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c504        0x2 core/unixfile.32
                0x00000000c001c504                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c504                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c506       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c506       0x42 core/unixfile.32
                0x00000000c001c506                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c506                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c548       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c548       0xd3 core/unixfile.32
                0x00000000c001c548                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c61c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c61c        0x7 core/unixfile.32
                0x00000000c001c61c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c624       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c624       0xa1 core/unixfile.32
                0x00000000c001c624                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c6c6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c6c6        0x8 core/unixfile.32
                0x00000000c001c6c6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c6ce       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c6ce       0x1a hal/device.32
                0x00000000c001c6ce                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c6ce                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c6e8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c6e8       0x2a hal/device.32
                0x00000000c001c6e8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c712       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c712       0xdc hal/device.32
                0x00000000c001c712                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c7ee       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c7ee       0x42 hal/device.32
                0x00000000c001c7ee                LinkedList<Device>::LinkedList()
                0x00000000c001c7ee                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c830       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c830       0x1c hal/timer.32
                0x00000000c001c830                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c84c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c84c        0x7 hal/timer.32
                0x00000000c001c84c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c854       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c854       0xb8 hal/timer.32
                0x00000000c001c854                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c90c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c90c       0xda hal/timer.32
                0x00000000c001c90c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c9e8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c9e8       0x23 hw/acpi.32
                0x00000000c001c9e8                ACPI::~ACPI()
                0x00000000c001c9e8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ca0c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ca0c       0x2a hw/acpi.32
                0x00000000c001ca0c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ca38        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ca38        0x2 hw/acpi.32
                0x00000000c001ca38                LinkedList<Device>::~LinkedList()
                0x00000000c001ca38                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ca3c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ca3c       0x1c hw/acpi.32
                0x00000000c001ca3c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ca58        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ca58        0x7 hw/acpi.32
                0x00000000c001ca58                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ca60       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ca60       0xb8 hw/acpi.32
                0x00000000c001ca60                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001cb18       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001cb18       0x23 hw/cpu.32
                0x00000000c001cb18                CPU::~CPU()
                0x00000000c001cb18                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001cb3c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001cb3c       0x2a hw/cpu.32
                0x00000000c001cb3c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cb68        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cb68        0x2 thr/prcssthr.32
                0x00000000c001cb68                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001cb68                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cb6c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cb6c       0x49 thr/prcssthr.32
                0x00000000c001cb6c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001cb6c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cbb8       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cbb8       0x42 thr/prcssthr.32
                0x00000000c001cbb8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001cbb8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cbfc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cbfc        0x8 thr/prcssthr.32
                0x00000000c001cbfc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001cc04       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cc04       0x23 hw/bus/pci.32
                0x00000000c001cc04                PCI::~PCI()
                0x00000000c001cc04                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cc28       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cc28       0x2a hw/bus/pci.32
                0x00000000c001cc28                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cc52       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cc52       0x23 hw/diskctrl/ide.32
                0x00000000c001cc52                IDE::~IDE()
                0x00000000c001cc52                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cc76       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cc76       0x2a hw/diskctrl/ide.32
                0x00000000c001cc76                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cca0       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cca0       0x23 hw/diskctrl/satabus.32
                0x00000000c001cca0                SATABus::~SATABus()
                0x00000000c001cca0                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001ccc4       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001ccc4       0x2a hw/diskctrl/satabus.32
                0x00000000c001ccc4                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001ccee       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001ccee       0x23 hw/diskphys/ata.32
                0x00000000c001ccee                ATA::~ATA()
                0x00000000c001ccee                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001cd12       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001cd12       0x2a hw/diskphys/ata.32
                0x00000000c001cd12                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cd3c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cd3c       0x23 hw/diskphys/atapi.32
                0x00000000c001cd3c                ATAPI::~ATAPI()
                0x00000000c001cd3c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001cd60       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001cd60       0x2a hw/diskphys/atapi.32
                0x00000000c001cd60                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cd8a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cd8a       0x23 hw/diskphys/sata.32
                0x00000000c001cd8a                SATA::~SATA()
                0x00000000c001cd8a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cdae       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cdae       0x2a hw/diskphys/sata.32
                0x00000000c001cdae                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cdd8       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cdd8       0x23 hw/diskphys/satapi.32
                0x00000000c001cdd8                SATAPI::~SATAPI()
                0x00000000c001cdd8                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001cdfc       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001cdfc       0x2a hw/diskphys/satapi.32
                0x00000000c001cdfc                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001ce26       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001ce26       0x23 hw/intctrl/apic.32
                0x00000000c001ce26                IOAPIC::~IOAPIC()
                0x00000000c001ce26                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001ce4a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001ce4a       0x2a hw/intctrl/apic.32
                0x00000000c001ce4a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ce74       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ce74       0x23 hw/timer/apictimer.32
                0x00000000c001ce74                APICTimer::~APICTimer()
                0x00000000c001ce74                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ce98       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ce98       0x2a hw/timer/apictimer.32
                0x00000000c001ce98                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001cec4       0x23
 .text._ZN3PITD2Ev
                0x00000000c001cec4       0x23 hw/timer/pit.32
                0x00000000c001cec4                PIT::~PIT()
                0x00000000c001cec4                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001cee8       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001cee8       0x2a hw/timer/pit.32
                0x00000000c001cee8                PIT::~PIT()

.rodata         0x00000000c001cf12     0x28b2
                0x00000000c001cf12                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001cf12        0x2 
 .ctors         0x00000000c001cf14        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001cf18        0x4 core/unixfile.32
 .ctors         0x00000000c001cf1c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001cf20        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cf24                end_ctors = .
                0x00000000c001cf24                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001cf24        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001cf28        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cf28                __DTOR_END__
                0x00000000c001cf2c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001cf2c       0x14 
 .rodata        0x00000000c001cf40      0x101 acpica/utclib.32
                0x00000000c001cf40                AcpiGbl_Ctypes
 *fill*         0x00000000c001d041        0x3 
 .rodata        0x00000000c001d044       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001d05c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001d0a6       0x1a 
 .rodata        0x00000000c001d0c0       0xed fs/fat/ff.32
 *fill*         0x00000000c001d1ad       0x13 
 .rodata        0x00000000c001d1c0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d5c0       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d5d1      0x115 core/computer.32
 *fill*         0x00000000c001d6e6        0x2 
 .rodata.str1.4
                0x00000000c001d6e8       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d750       0x2c core/computer.32
                0x00000000c001d750                vtable for Computer
 .rodata.str1.4
                0x00000000c001d77c       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d7ac        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d7b8       0x17 core/main.32
 *fill*         0x00000000c001d7cf        0x1 
 .rodata.str1.4
                0x00000000c001d7d0       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d875       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d8cd       0x39 core/pipe.32
 *fill*         0x00000000c001d906        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d908       0x1c core/pipe.32
                0x00000000c001d908                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d924       0x69 core/terminal.32
 *fill*         0x00000000c001d98d        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d990       0x1c core/terminal.32
                0x00000000c001d990                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d9ac       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d9ce       0x15 core/unixfile.32
 *fill*         0x00000000c001d9e3        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d9e4       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001da2f        0x8 core/unixfile.32
 *fill*         0x00000000c001da37        0x1 
 .rodata.str1.4
                0x00000000c001da38       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001da58       0x1c core/unixfile.32
                0x00000000c001da58                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001da74       0x1c core/unixfile.32
                0x00000000c001da74                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001da90      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dbf7      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dcfe       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001dd31       0x11 dbg/kconsole.32
 *fill*         0x00000000c001dd31        0x3 
 .rodata        0x00000000c001dd34      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001de84       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001de84       0x68 fs/vfs.32
                0x00000000c001de84                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001deec       0x1c fs/vfs.32
                0x00000000c001deec                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001df08       0x1c fs/vfs.32
                0x00000000c001df08                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001df24       0x2c hal/bus.32
                0x00000000c001df24                vtable for Bus
 .rodata.str1.1
                0x00000000c001df50       0x1e hal/clock.32
 *fill*         0x00000000c001df6e        0x2 
 .rodata._ZTV5Clock
                0x00000000c001df70       0x3c hal/clock.32
                0x00000000c001df70                vtable for Clock
 *fill*         0x00000000c001dfac       0x14 
 .rodata        0x00000000c001dfc0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001dff0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001e048       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001e048       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001e048       0x2c hal/device.32
                0x00000000c001e048                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001e074       0x2c hal/device.32
                0x00000000c001e074                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001e0a0       0x2c hal/diskctrl.32
                0x00000000c001e0a0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001e0cc       0x38 hal/diskphys.32
                0x00000000c001e0cc                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e104       0x3e hal/intctrl.32
 *fill*         0x00000000c001e142        0x2 
 .rodata.str1.4
                0x00000000c001e144       0x5d hal/intctrl.32
 .rodata        0x00000000c001e1a1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e1f4       0x34 hal/keybrd.32
                0x00000000c001e1f4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e228       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e26c       0x2c hal/logidisk.32
                0x00000000c001e26c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e298       0x2c hal/mouse.32
                0x00000000c001e298                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e2c4        0xb hal/partition.32
 *fill*         0x00000000c001e2cf        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e2d0       0x44 hal/serial.32
                0x00000000c001e2d0                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e314       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e314        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e314       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e314       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e314       0x30 hal/timer.32
                0x00000000c001e314                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e344       0x10 hal/vcache.32
                0x00000000c001e344                vtable for VCache
 .rodata.str1.1
                0x00000000c001e354       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e3bc       0x48 hal/video.32
                0x00000000c001e3bc                vtable for Video
 .rodata.str1.4
                0x00000000c001e404       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e49f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e5db       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e5db        0x8 hw/acpi.32
 *fill*         0x00000000c001e5db        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e5dc       0x2c hw/acpi.32
                0x00000000c001e5dc                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e608      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e775        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e778       0x2c hw/cpu.32
                0x00000000c001e778                vtable for CPU
 .rodata.str1.1
                0x00000000c001e7a4       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e7e0       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c001e871       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e8b9       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e8fe        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c001e908       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c001e95c       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c001e988      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001eb54       0x57 thr/prcssthr.32
 *fill*         0x00000000c001ebab        0x1 
 .rodata.str1.4
                0x00000000c001ebac      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001ecb8       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001ecb8       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001ecb8       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001ecb8        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001ecb8       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001ed58       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001ed88      0x182 arch/i386/hal.32
                                        0x191 (size before relaxing)
 *fill*         0x00000000c001ef0a        0x2 
 .rodata.str1.4
                0x00000000c001ef0c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001ef7f       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001ef94       0x3c arch/i386/rtc.32
                0x00000000c001ef94                vtable for RTC
 .rodata.str1.1
                0x00000000c001efd0       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f011        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f014       0x68 fs/fat/vfslink.32
                0x00000000c001f014                vtable for FAT
 .rodata.str1.1
                0x00000000c001f07c       0x76 fs/iso9660/vfslink.32
 *fill*         0x00000000c001f0f2        0x2 
 .rodata._ZTV7ISO9660
                0x00000000c001f0f4       0x68 fs/iso9660/vfslink.32
                0x00000000c001f0f4                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f15c       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f1a0       0x34 hal/sound/sndcard.32
                0x00000000c001f1a0                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f1d4       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f213       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f24b       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f2ec       0x2c hw/bus/pci.32
                0x00000000c001f2ec                vtable for PCI
 .rodata.str1.1
                0x00000000c001f318       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f39f        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f3a0       0x2c hw/diskctrl/ide.32
                0x00000000c001f3a0                vtable for IDE
 .rodata.str1.4
                0x00000000c001f3cc       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f3f0       0x2c hw/diskctrl/satabus.32
                0x00000000c001f3f0                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f41c       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f42e        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f430       0x38 hw/diskphys/ata.32
                0x00000000c001f430                vtable for ATA
 .rodata.str1.1
                0x00000000c001f468        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f475        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f478       0x38 hw/diskphys/atapi.32
                0x00000000c001f478                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f4b0       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f52c       0x38 hw/diskphys/sata.32
                0x00000000c001f52c                vtable for SATA
 .rodata.str1.1
                0x00000000c001f564      0x158 hw/diskphys/satapi.32
                                        0x165 (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f6bc       0x38 hw/diskphys/satapi.32
                0x00000000c001f6bc                vtable for SATAPI
 .rodata        0x00000000c001f6f4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f6fc       0x2c hw/intctrl/apic.32
                0x00000000c001f6fc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f728       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f743        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f744       0x30 hw/timer/apictimer.32
                0x00000000c001f744                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f774       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f791        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f794       0x30 hw/timer/pit.32
                0x00000000c001f794                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f7c4      0x271
 *(.data)
 .data          0x00000000c001f7c4        0x0 crti.32
 .data          0x00000000c001f7c4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f7c4                __dso_handle
 .data          0x00000000c001f7c8        0x0 acpica/utclib.32
 .data          0x00000000c001f7c8        0x0 core/malloc.32
 .data          0x00000000c001f7c8        0x0 libk/ctype.32
 .data          0x00000000c001f7c8        0x0 libk/string.32
 .data          0x00000000c001f7c8        0x0 fs/fat/diskio.32
 .data          0x00000000c001f7c8        0x0 fs/fat/ff.32
 .data          0x00000000c001f7c8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f7c8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f7c8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f7c8        0x0 core/computer.32
 .data          0x00000000c001f7c8        0x0 core/gdt.32
 .data          0x00000000c001f7c8        0x0 core/idle.32
 .data          0x00000000c001f7c8        0x0 core/idt.32
 .data          0x00000000c001f7c8        0x4 core/kheap.32
 .data          0x00000000c001f7cc        0x0 core/main.32
 .data          0x00000000c001f7cc        0x4 core/physmgr.32
                0x00000000c001f7cc                Phys::bitmap
 .data          0x00000000c001f7d0        0x0 core/pipe.32
 *fill*         0x00000000c001f7d0       0x10 
 .data          0x00000000c001f7e0       0x60 core/terminal.32
                0x00000000c001f7e0                VgaText::hiddenOut
                0x00000000c001f800                ansiToVGAMappings
 .data          0x00000000c001f840        0x0 core/tss.32
 .data          0x00000000c001f840        0x4 core/unixfile.32
                0x00000000c001f840                UnixFile::nextFd
 .data          0x00000000c001f844       0x15 core/virtmgr.32
                0x00000000c001f844                Virt::pageAllocPtr
                0x00000000c001f848                Virt::bitmap
                0x00000000c001f84c                Virt::swapfileSectorsPerPage
                0x00000000c001f850                Virt::swapfileLength
                0x00000000c001f854                Virt::swapfileSector
                0x00000000c001f858                Virt::swapfileDrive
 *fill*         0x00000000c001f859        0x3 
 .data          0x00000000c001f85c        0x4 coreobjs/c++.32
                0x00000000c001f85c                __stack_chk_guard
 .data          0x00000000c001f860        0x0 dbg/kconsole.32
 .data          0x00000000c001f860        0x0 fs/vfs.32
 .data          0x00000000c001f860        0x0 hal/bus.32
 .data          0x00000000c001f860        0x0 hal/buzzer.32
 .data          0x00000000c001f860        0x0 hal/clock.32
 .data          0x00000000c001f860        0x0 hal/device.32
 .data          0x00000000c001f860        0x0 hal/diskctrl.32
 .data          0x00000000c001f860        0x0 hal/diskphys.32
 .data          0x00000000c001f860        0x0 hal/fpu.32
 .data          0x00000000c001f860        0x0 hal/intctrl.32
 .data          0x00000000c001f860        0x0 hal/keybrd.32
 .data          0x00000000c001f860        0x0 hal/logidisk.32
 .data          0x00000000c001f860        0x0 hal/mouse.32
 .data          0x00000000c001f860        0x0 hal/partition.32
 .data          0x00000000c001f860        0x0 hal/serial.32
 .data          0x00000000c001f860        0x0 hal/timer.32
 .data          0x00000000c001f860        0x0 hal/vcache.32
 .data          0x00000000c001f860        0x0 hal/video.32
 .data          0x00000000c001f860       0x10 hw/acpi.32
                0x00000000c001f860                legacyIRQRemaps
 .data          0x00000000c001f870        0x4 hw/cpu.32
                0x00000000c001f870                lastCode
 *fill*         0x00000000c001f874        0xc 
 .data          0x00000000c001f880      0x142 krnl/bootmsg.32
                0x00000000c001f880                KiSplashScreen
 *fill*         0x00000000c001f9c2       0x1e 
 .data          0x00000000c001f9e0       0x4d krnl/env.32
                0x00000000c001f9e0                defaultSysEnv
 .data          0x00000000c001fa2d        0x0 krnl/inlines.32
 .data          0x00000000c001fa2d        0x0 krnl/panic.32
 .data          0x00000000c001fa2d        0x0 krnl/powctrl.32
 .data          0x00000000c001fa2d        0x0 krnl/resolve.32
 .data          0x00000000c001fa2d        0x0 krnl/syscalls.32
 .data          0x00000000c001fa2d        0x0 reg/registry.32
 .data          0x00000000c001fa2d        0x0 sys/eject.32
 .data          0x00000000c001fa2d        0x0 sys/exit.32
 .data          0x00000000c001fa2d        0x0 sys/getcwd.32
 .data          0x00000000c001fa2d        0x0 sys/getpid.32
 .data          0x00000000c001fa2d        0x0 sys/getramdata.32
 .data          0x00000000c001fa2d        0x0 sys/getvgaptr.32
 .data          0x00000000c001fa2d        0x0 sys/loaddll.32
 .data          0x00000000c001fa2d        0x0 sys/read.32
 .data          0x00000000c001fa2d        0x0 sys/sbrk.32
 .data          0x00000000c001fa2d        0x0 sys/setcwd.32
 .data          0x00000000c001fa2d        0x0 sys/settime.32
 .data          0x00000000c001fa2d        0x0 sys/timezone.32
 .data          0x00000000c001fa2d        0x0 sys/write.32
 .data          0x00000000c001fa2d        0x0 sys/wsbe.32
 .data          0x00000000c001fa2d        0x0 sys/yield.32
 .data          0x00000000c001fa2d        0x0 thr/elf.32
 *fill*         0x00000000c001fa2d        0x3 
 .data          0x00000000c001fa30        0x4 thr/prcssthr.32
                0x00000000c001fa30                Thr::nextPID
 .data          0x00000000c001fa34        0x0 vm86/vm8086.32
 .data          0x00000000c001fa34        0x0 arch/i386/hal.32
 .data          0x00000000c001fa34        0x0 arch/i386/pic.32
 .data          0x00000000c001fa34        0x0 arch/i386/rtc.32
 .data          0x00000000c001fa34        0x0 arch/i386/vga.32
 .data          0x00000000c001fa34        0x0 fs/fat/vfslink.32
 .data          0x00000000c001fa34        0x0 fs/iso9660/helper.32
 .data          0x00000000c001fa34        0x1 fs/iso9660/vfslink.32
                0x00000000c001fa34                recentDriveletter
 .data          0x00000000c001fa35        0x0 hal/sound/sndcard.32
 .data          0x00000000c001fa35        0x0 hal/sound/sndport.32
 .data          0x00000000c001fa35        0x0 hw/bus/isa.32
 .data          0x00000000c001fa35        0x0 hw/bus/pci.32
 .data          0x00000000c001fa35        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001fa35        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001fa35        0x0 hw/diskphys/ata.32
 .data          0x00000000c001fa35        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001fa35        0x0 hw/diskphys/sata.32
 .data          0x00000000c001fa35        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001fa35        0x0 hw/intctrl/apic.32
 .data          0x00000000c001fa35        0x0 hw/timer/apictimer.32
 .data          0x00000000c001fa35        0x0 hw/timer/pit.32
 .data          0x00000000c001fa35        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001fa35        0x0 crtn.32
 .data          0x00000000c001fa35        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001fa35        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001fa35        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001fa35        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001fa38        0x0
 .got           0x00000000c001fa38        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001fa38        0x0
 .got.plt       0x00000000c001fa38        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001fa38        0x0
 .igot.plt      0x00000000c001fa38        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001fa38        0x0
 .tm_clone_table
                0x00000000c001fa38        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001fa38        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001fa35      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001fa35        0x3 
 .eh_frame      0x00000000c001fa38        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001fa38        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001fa38       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001fa90       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fad0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fb3c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001fbc0        0x0
 .rel.got       0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001fbc0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001fbc0     0x4d88
                0x00000000c001fbc0                sbss = .
 *(COMMON)
 *fill*         0x00000000c001fbc0        0x0 
 COMMON         0x00000000c001fbc0       0xa0 fs/iso9660/iso9660.32
                0x00000000c001fbc0                dcache
                0x00000000c001fc00                cdDriveLetter
                0x00000000c001fc20                icache
 *(.bss)
 .bss           0x00000000c001fc60        0x0 crti.32
 .bss           0x00000000c001fc60       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001fc80        0x4 acpica/utclib.32
 *fill*         0x00000000c001fc84       0x1c 
 .bss           0x00000000c001fca0      0x378 core/malloc.32
 .bss           0x00000000c0020018        0x0 libk/ctype.32
 .bss           0x00000000c0020018        0x0 libk/string.32
 .bss           0x00000000c0020018        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0020018        0x8 
 .bss           0x00000000c0020020       0x88 fs/fat/ff.32
 .bss           0x00000000c00200a8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c00200a8        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c00200a8       0x18 
 .bss           0x00000000c00200c0      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0020a58        0x6 core/computer.32
                0x00000000c0020a58                Krnl::computer
                0x00000000c0020a5c                KeIsPreemptionOn
                0x00000000c0020a5d                KeIsSchedulingOn
 *fill*         0x00000000c0020a5e        0x2 
 .bss           0x00000000c0020a60        0x6 core/gdt.32
                0x00000000c0020a60                gdtDescr
 .bss           0x00000000c0020a66        0x0 core/idle.32
 *fill*         0x00000000c0020a66        0x2 
 .bss           0x00000000c0020a68        0x6 core/idt.32
                0x00000000c0020a68                idtDescr
 .bss           0x00000000c0020a6e        0x0 core/kheap.32
 *fill*         0x00000000c0020a6e        0x2 
 .bss           0x00000000c0020a70        0x4 core/main.32
                0x00000000c0020a70                sysBootSettings
 .bss           0x00000000c0020a74       0x29 core/physmgr.32
                0x00000000c0020a74                Phys::forbidEvictions
                0x00000000c0020a78                Phys::currentPagePointer
                0x00000000c0020a7c                Phys::highestMem
                0x00000000c0020a80                Phys::oldPercent
                0x00000000c0020a84                Phys::usedPages
                0x00000000c0020a88                Phys::usablePages
                0x00000000c0020a8c                Phys::dmaUsage
 .bss           0x00000000c0020a9d        0x0 core/pipe.32
 *fill*         0x00000000c0020a9d        0x3 
 .bss           0x00000000c0020aa0        0x9 core/terminal.32
                0x00000000c0020aa0                terminalCycle
                0x00000000c0020aa4                activeTerminal
                0x00000000c0020aa8                VgaText::graphicMode
 *fill*         0x00000000c0020aa9        0x1 
 .bss           0x00000000c0020aaa        0x2 core/tss.32
                0x00000000c0020aaa                doubleFaultSelector
 *fill*         0x00000000c0020aac       0x14 
 .bss           0x00000000c0020ac0       0x84 core/unixfile.32
                0x00000000c0020ac0                sfileLpt
                0x00000000c0020b00                sfileCom
                0x00000000c0020b24                sfileNul
                0x00000000c0020b28                sfilePnt
                0x00000000c0020b2c                sfileAux
                0x00000000c0020b30                sfileCon
                0x00000000c0020b34                initialFilesAdded
                0x00000000c0020b38                unixFileLinkedList
 .bss           0x00000000c0020b44       0x10 core/virtmgr.32
                0x00000000c0020b44                twswaps
                0x00000000c0020b48                swapBalance
                0x00000000c0020b4c                Virt::swapfileBitmap
                0x00000000c0020b50                firstVAS
 .bss           0x00000000c0020b54        0x0 coreobjs/c++.32
 .bss           0x00000000c0020b54        0x0 dbg/kconsole.32
 .bss           0x00000000c0020b54        0x4 fs/vfs.32
                0x00000000c0020b54                installedFilesystems
 .bss           0x00000000c0020b58        0x0 hal/bus.32
 .bss           0x00000000c0020b58        0x0 hal/buzzer.32
 .bss           0x00000000c0020b58        0x8 hal/clock.32
                0x00000000c0020b58                User::dstOn
                0x00000000c0020b59                User::timezoneHalfHourOffset
                0x00000000c0020b5c                User::timezoneHourOffset
 .bss           0x00000000c0020b60        0x0 hal/device.32
 .bss           0x00000000c0020b60        0x0 hal/diskctrl.32
 .bss           0x00000000c0020b60        0x0 hal/diskphys.32
 .bss           0x00000000c0020b60        0x0 hal/fpu.32
 .bss           0x00000000c0020b60     0x2000 hal/intctrl.32
                0x00000000c0020b60                INT_contexts
                0x00000000c0021b60                INT_handlers
 .bss           0x00000000c0022b60      0x429 hal/keybrd.32
                0x00000000c0022b60                keyboardWaitingTaskList
                0x00000000c0022b64                keyboardSetupYet
                0x00000000c0022b68                guiKeyboardHandler
                0x00000000c0022b80                keystates
 *fill*         0x00000000c0022f89       0x17 
 .bss           0x00000000c0022fa0       0x88 hal/logidisk.32
                0x00000000c0022fa0                diskAssignments
                0x00000000c0022fc0                disks
 .bss           0x00000000c0023028        0x4 hal/mouse.32
                0x00000000c0023028                guiMouseHandler
 .bss           0x00000000c002302c        0x0 hal/partition.32
 .bss           0x00000000c002302c        0x0 hal/serial.32
 .bss           0x00000000c002302c        0x4 hal/timer.32
                0x00000000c002302c                milliTenthsSinceBoot
 .bss           0x00000000c0023030        0x0 hal/vcache.32
 .bss           0x00000000c0023030        0x4 hal/video.32
                0x00000000c0023030                screen
 *fill*         0x00000000c0023034        0xc 
 .bss           0x00000000c0023040      0x480 hw/acpi.32
                0x00000000c0023040                systemSleepFunction
                0x00000000c0023044                systemResetFunction
                0x00000000c0023048                systemShutdownFunction
                0x00000000c002304c                nextACPITable
                0x00000000c0023060                acpiTables
                0x00000000c0023260                usingXSDT
                0x00000000c0023264                MADTpointer
                0x00000000c0023268                RSDTpointer
                0x00000000c002326c                RSDPpointer
                0x00000000c0023270                nextAPICNMI
                0x00000000c0023280                apicNMIInfo
                0x00000000c0023300                legacyIRQFlags
                0x00000000c0023320                ioapicDiscoveryNumber
                0x00000000c0023340                ioapicFoundInMADT
                0x00000000c0023360                ioapicAddresses
                0x00000000c00233e0                ioapicGSIBase
                0x00000000c0023460                processorDiscoveryNumber
                0x00000000c0023480                matchingAPICID
                0x00000000c00234a0                processorID
 .bss           0x00000000c00234c0       0x10 hw/cpu.32
                0x00000000c00234c0                lastD
                0x00000000c00234c4                lastC
                0x00000000c00234c8                lastB
                0x00000000c00234cc                lastA
 .bss           0x00000000c00234d0        0x0 krnl/bootmsg.32
 .bss           0x00000000c00234d0        0x8 krnl/env.32
                0x00000000c00234d0                Krnl::userEnv
                0x00000000c00234d4                Krnl::systemEnv
 .bss           0x00000000c00234d8        0x0 krnl/inlines.32
 .bss           0x00000000c00234d8        0x1 krnl/panic.32
                0x00000000c00234d8                KeIsKernelInPanic
 *fill*         0x00000000c00234d9        0x7 
 .bss           0x00000000c00234e0       0x48 krnl/powctrl.32
                0x00000000c00234e0                Krnl::powCtrlOnBattery
                0x00000000c0023500                Krnl::currentPowerSettings
                0x00000000c0023524                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0023528        0x0 krnl/resolve.32
 *fill*         0x00000000c0023528       0x18 
 .bss           0x00000000c0023540      0x200 krnl/syscalls.32
                0x00000000c0023540                systemCallHandlers
 .bss           0x00000000c0023740        0x0 reg/registry.32
 .bss           0x00000000c0023740        0x0 sys/eject.32
 .bss           0x00000000c0023740        0x0 sys/exit.32
 .bss           0x00000000c0023740        0x0 sys/getcwd.32
 .bss           0x00000000c0023740        0x0 sys/getpid.32
 .bss           0x00000000c0023740        0x0 sys/getramdata.32
 .bss           0x00000000c0023740        0x0 sys/getvgaptr.32
 .bss           0x00000000c0023740        0x0 sys/loaddll.32
 .bss           0x00000000c0023740        0x0 sys/read.32
 .bss           0x00000000c0023740        0x0 sys/sbrk.32
 .bss           0x00000000c0023740        0x0 sys/setcwd.32
 .bss           0x00000000c0023740        0x0 sys/settime.32
 .bss           0x00000000c0023740        0x0 sys/timezone.32
 .bss           0x00000000c0023740        0x0 sys/write.32
 .bss           0x00000000c0023740        0x0 sys/wsbe.32
 .bss           0x00000000c0023740        0x0 sys/yield.32
 .bss           0x00000000c0023740      0x7a4 thr/elf.32
                0x00000000c0023740                Thr::driverLookupNext
                0x00000000c0023760                Thr::driverLookupLen
                0x00000000c0023960                Thr::driverLookupAddr
                0x00000000c0023b60                Thr::driverNameLookup
                0x00000000c0023d60                Thr::kernelSymbols
                0x00000000c0023de0                Thr::kernelStringTable
                0x00000000c0023e60                Thr::kernelSymbolTable
                0x00000000c0023ee0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023ee4        0x4 
 .bss           0x00000000c0023ee8       0x68 thr/prcssthr.32
                0x00000000c0023ee8                cleanerThread
                0x00000000c0023eec                weNeedTheCleanerToNotBlock
                0x00000000c0023ef0                retValLockStuff
                0x00000000c0023ef4                retValSchedLock
                0x00000000c0023ef8                lockStuffLock
                0x00000000c0023efc                schedulerLock
                0x00000000c0023f00                taskSwitchesPostponedFlag
                0x00000000c0023f04                postponeTaskSwitchesCounter
                0x00000000c0023f08                irqDisableCounter
                0x00000000c0023f0c                terminatedTaskList
                0x00000000c0023f18                sleepingTaskList
                0x00000000c0023f24                taskList
                0x00000000c0023f30                kernelProcess
 *fill*         0x00000000c0023f50       0x10 
 .bss           0x00000000c0023f60       0x40 vm86/vm8086.32
                0x00000000c0023f60                Vm::vmRetV
                0x00000000c0023f64                Vm::vmDone
                0x00000000c0023f65                Vm::vmReady
                0x00000000c0023f68                Vm::vm86Thread
                0x00000000c0023f6c                Vm::vmToHostCommsPtr
                0x00000000c0023f80                Vm::vmToHostComms
 .bss           0x00000000c0023fa0       0x14 arch/i386/hal.32
                0x00000000c0023fa0                apic
                0x00000000c0023fa4                fpuOwner
                0x00000000c0023fa8                coproLoadFunc
                0x00000000c0023fac                coproSaveFunc
                0x00000000c0023fb0                gpFaultIntercept
 .bss           0x00000000c0023fb4        0x0 arch/i386/pic.32
 .bss           0x00000000c0023fb4        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023fb6        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023fb6        0xa 
 .bss           0x00000000c0023fc0       0xf0 fs/fat/vfslink.32
                0x00000000c0023fc0                FAT::fats
                0x00000000c0023fe0                FAT::vfsToFatRemaps
                0x00000000c0024060                fatToVFSRemaps
 .bss           0x00000000c00240b0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c00240b0       0x10 
 .bss           0x00000000c00240c0      0x820 fs/iso9660/vfslink.32
                0x00000000c00240c0                iso9660Owner
                0x00000000c00240c4                recentSector
                0x00000000c00240e0                recentBuffer
 .bss           0x00000000c00248e0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c00248e0        0x0 hal/sound/sndport.32
 .bss           0x00000000c00248e0        0x0 hw/bus/isa.32
 .bss           0x00000000c00248e0        0xd hw/bus/pci.32
                0x00000000c00248e0                thePCI
 .bss           0x00000000c00248ed        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00248ed        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00248ed        0x3 
 .bss           0x00000000c00248f0        0x8 hw/diskphys/ata.32
                0x00000000c00248f0                ataSectorsWritten
                0x00000000c00248f4                ataSectorsRead
 .bss           0x00000000c00248f8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00248f8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00248f8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c00248f8        0x8 
 .bss           0x00000000c0024900       0x41 hw/intctrl/apic.32
                0x00000000c0024900                noOfIOAPICs
                0x00000000c0024920                ioapics
                0x00000000c0024940                IOAPICsSetupYet
 .bss           0x00000000c0024941        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024941        0x3 
 .bss           0x00000000c0024944        0x4 hw/timer/pit.32
                0x00000000c0024944                pitFreq
 .bss           0x00000000c0024948        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024948        0x0 crtn.32
 .bss           0x00000000c0024948        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0024948        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0024948        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0024948        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024948                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00296d0                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
