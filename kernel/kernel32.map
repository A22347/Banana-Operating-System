Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e0fa
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x7b7 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004c0                memset
                0x00000000c0000530                strlen
                0x00000000c0000560                strpbrk
                0x00000000c00005a0                strtok
                0x00000000c00005f0                strcpy
                0x00000000c0000620                strncpy
                0x00000000c00006e0                strcmp
                0x00000000c0000730                strchr
                0x00000000c0000760                strncmp
                0x00000000c00007c0                strcat
                0x00000000c00007f0                strncat
                0x00000000c0000850                strstr
                0x00000000c00008b0                toupper
                0x00000000c00008d0                tolower
                0x00000000c00008f0                simple_strtoul
 .text          0x00000000c0000b37      0xfb0 core/malloc.32
                0x00000000c0000ca2                dlfree
                0x00000000c0001000                dlmalloc
                0x00000000c000153d                dlrealloc
                0x00000000c00016e0                dlmemalign
                0x00000000c0001803                dlcalloc
                0x00000000c000189d                dlcfree
                0x00000000c00018a2                dlindependent_calloc
                0x00000000c00018c7                dlindependent_comalloc
                0x00000000c00018de                dlvalloc
                0x00000000c0001909                dlpvalloc
                0x00000000c000193f                dlmalloc_trim
                0x00000000c000194c                dlmalloc_usable_size
                0x00000000c000197d                dlmallinfo
                0x00000000c0001a4c                dlmalloc_stats
                0x00000000c0001a5d                dlmallopt
 *fill*         0x00000000c0001ae7        0x1 
 .text          0x00000000c0001ae8      0x1f2 libk/ctype.32
                0x00000000c0001ae8                isblank
                0x00000000c0001b08                iscntrl
                0x00000000c0001b28                isdigit
                0x00000000c0001b44                islower
                0x00000000c0001b60                isspace
                0x00000000c0001b88                isupper
                0x00000000c0001ba4                isalpha
                0x00000000c0001bd4                isalnum
                0x00000000c0001c04                ispunct
                0x00000000c0001c44                isgraph
                0x00000000c0001c74                isprint
                0x00000000c0001c9c                isxdigit
 .text          0x00000000c0001cda        0x0 libk/string.32
 .text          0x00000000c0001cda       0x51 fs/fat/diskio.32
                0x00000000c0001cda                disk_status
                0x00000000c0001cdd                disk_initialize
                0x00000000c0001ce0                disk_read
                0x00000000c0001cf6                disk_write
                0x00000000c0001d0c                disk_ioctl
 .text          0x00000000c0001d2b     0x3d32 fs/fat/ff.32
                0x00000000c0003aaa                f_mount
                0x00000000c0003b0c                f_open
                0x00000000c0003dd7                f_read
                0x00000000c0003fd6                f_write
                0x00000000c000420a                f_sync
                0x00000000c00042bf                f_close
                0x00000000c00042ee                f_lseek
                0x00000000c0004495                f_opendir
                0x00000000c0004560                f_closedir
                0x00000000c0004582                f_readdir
                0x00000000c0004614                f_stat
                0x00000000c0004693                f_getfree
                0x00000000c0004795                f_truncate
                0x00000000c0004879                f_unlink
                0x00000000c0004999                f_mkdir
                0x00000000c0004b34                f_rename
                0x00000000c0004cea                f_chmod
                0x00000000c0004d93                f_utime
                0x00000000c0004e41                f_getlabel
                0x00000000c0004f98                f_setlabel
                0x00000000c0005128                f_expand
                0x00000000c0005288                f_mkfs
 *fill*         0x00000000c0005a5d        0x3 
 .text          0x00000000c0005a60       0x2f fs/fat/ffsystem.32
                0x00000000c0005a60                ff_memalloc
                0x00000000c0005a78                ff_memfree
 *fill*         0x00000000c0005a8f        0x1 
 .text          0x00000000c0005a90      0x2a4 fs/fat/ffunicode.32
                0x00000000c0005a90                ff_uni2oem
                0x00000000c0005b30                ff_oem2uni
                0x00000000c0005ba4                ff_wtoupper
 .text          0x00000000c0005d34      0xd20 fs/iso9660/iso9660.32
                0x00000000c0005f79                isoReadDiscSector
                0x00000000c0006014                strnicmp
                0x00000000c00062b8                stricmp
                0x00000000c0006304                iso_open
                0x00000000c000638e                iso_close
                0x00000000c00063ac                iso_read
                0x00000000c00064c2                iso_seek
                0x00000000c0006546                iso_tell
                0x00000000c0006577                iso_total
                0x00000000c00065a2                fn_postprocess
                0x00000000c00065c8                iso_readdir
                0x00000000c000681f                iso_reset
                0x00000000c000683c                init_percd
                0x00000000c0006936                iso_ioctl
                0x00000000c000694e                fs_iso9660_init
                0x00000000c00069e4                fs_iso9660_shutdown
 .text          0x00000000c0006a54      0x6a7 core/computer.32
                0x00000000c0006a54                Computer::close(int, int, void*)
                0x00000000c0006a99                Krnl::firstTask()
                0x00000000c0006bd4                Computer::Computer()
                0x00000000c0006bd4                Computer::Computer()
                0x00000000c0006c86                Computer::setBootMessage(char const*)
                0x00000000c0006c88                Computer::detectFeatures()
                0x00000000c0006eaa                Computer::displayFeatures()
                0x00000000c0006eac                Computer::rdmsr(unsigned int)
                0x00000000c0006ed8                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006f10                Computer::shutdown()
                0x00000000c0006f28                Computer::restart()
                0x00000000c0006f40                Computer::sleep()
                0x00000000c0006f54                Computer::nmiEnabled()
                0x00000000c0006f60                Computer::readCMOS(unsigned char)
                0x00000000c0006f7c                Computer::enableNMI(bool)
                0x00000000c0006f94                Computer::open(int, int, void*)
                0x00000000c0007066                Computer::disableNMI()
                0x00000000c0007076                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0007096                Computer::handleNMI()
 *fill*         0x00000000c00070fb        0x1 
 .text          0x00000000c00070fc      0x1cf core/gdt.32
                0x00000000c00070fc                GDTEntry::setBase(unsigned int)
                0x00000000c0007118                GDTEntry::setLimit(unsigned int)
                0x00000000c0007136                GDT::GDT()
                0x00000000c0007136                GDT::GDT()
                0x00000000c000714c                GDT::addEntry(GDTEntry)
                0x00000000c000716e                GDT::getNumberOfEntries()
                0x00000000c0007176                GDT::flush()
                0x00000000c0007198                GDT::setup()
 .text          0x00000000c00072cb       0x1d core/idle.32
                0x00000000c00072cb                idleFunction(void*)
 .text          0x00000000c00072e8      0x464 core/idt.32
                0x00000000c00072e8                IDTEntry::IDTEntry(bool)
                0x00000000c00072e8                IDTEntry::IDTEntry(bool)
                0x00000000c000735a                IDTEntry::setOffset(unsigned int)
                0x00000000c0007370                IDT::IDT()
                0x00000000c0007370                IDT::IDT()
                0x00000000c0007372                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000737a                IDT::addEntry(IDTEntry, int)
                0x00000000c0007394                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00073cc                IDT::flush()
                0x00000000c00073e6                IDT::setup()
 .text          0x00000000c000774c      0x181 core/kheap.32
                0x00000000c000774c                sbrk
                0x00000000c00077df                mmap
                0x00000000c00077f5                munmap
                0x00000000c000780b                liballoc_lock()
                0x00000000c0007818                liballoc_unlock()
                0x00000000c000782c                liballoc_alloc(int)
                0x00000000c0007844                liballoc_free(void*, int)
                0x00000000c000785f                realloc
                0x00000000c0007873                malloc
                0x00000000c0007883                free
                0x00000000c0007893                rfree
                0x00000000c00078a3                calloc
 .text          0x00000000c00078cd       0xc3 core/main.32
                0x00000000c00078cd                KeEntryPoint
 .text          0x00000000c0007990      0x608 core/physmgr.32
                0x00000000c0007990                Phys::allocateDMA(unsigned long)
                0x00000000c0007a6f                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007aa8                Phys::setPageState(unsigned long, bool)
                0x00000000c0007ae1                Phys::getPageState(unsigned long)
                0x00000000c0007b02                Phys::freePage(unsigned long)
                0x00000000c0007b6a                Phys::allocatePage()
                0x00000000c0007c36                Phys::allocateContiguousPages(int)
                0x00000000c0007c97                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007ccf                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007f98      0x273 core/pipe.32
                0x00000000c0007f98                Pipe::isAtty()
                0x00000000c0007f9c                Pipe::~Pipe()
                0x00000000c0007f9c                Pipe::~Pipe()
                0x00000000c0007fc0                Pipe::~Pipe()
                0x00000000c0007fe8                Pipe::write(unsigned long long, void*, int*)
                0x00000000c00080a8                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00081a4                Pipe::Pipe(int)
                0x00000000c00081a4                Pipe::Pipe(int)
 *fill*         0x00000000c000820b        0x1 
 .text          0x00000000c000820c      0xaa4 core/terminal.32
                0x00000000c000820c                VgaText::isAtty()
                0x00000000c0008210                VgaText::~VgaText()
                0x00000000c0008210                VgaText::~VgaText()
                0x00000000c0008234                VgaText::~VgaText()
                0x00000000c000825e                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000827e                setTerminalScrollLock(bool)
                0x00000000c000827f                doTerminalCycle()
                0x00000000c0008280                addToTerminalCycle(VgaText*)
                0x00000000c0008281                scrollTerminalScrollLock(int)
                0x00000000c0008282                VgaText::updateTitle()
                0x00000000c0008284                VgaText::load()
                0x00000000c0008286                VgaText::updateCursor()
                0x00000000c000829c                VgaText::doANSI_SGR(int)
                0x00000000c0008310                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0008320                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0008330                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0008350                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000835c                VgaText::setTitleColour(VgaColour)
                0x00000000c0008368                VgaText::setTitle(char*)
                0x00000000c000836a                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000837c                VgaText::scrollScreen()
                0x00000000c000840e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008420                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00084b0                VgaText::getCursorX()
                0x00000000c00084b8                VgaText::getCursorY()
                0x00000000c00084c0                VgaText::setCursor(int, int)
                0x00000000c00084d7                setActiveTerminal(VgaText*)
                0x00000000c0008522                VgaText::clearScreen()
                0x00000000c0008570                VgaText::setCursorX(int)
                0x00000000c0008588                VgaText::setCursorY(int)
                0x00000000c00085a0                VgaText::incrementCursor(bool)
                0x00000000c00085f4                VgaText::decrementCursor(bool)
                0x00000000c0008616                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00086e4                VgaText::putchar(char)
                0x00000000c00087d0                VgaText::putx(unsigned int)
                0x00000000c0008816                VgaText::puts(char const*)
                0x00000000c000883c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008888                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00089da                VgaText::VgaText(char const*)
                0x00000000c00089da                VgaText::VgaText(char const*)
                0x00000000c0008b2a                VgaText::receiveKey(unsigned char)
                0x00000000c0008c8a                VgaText::doUpdate()
                0x00000000c0008c8b                newTerminal(char*)
 .text          0x00000000c0008cb0      0x1a1 core/tss.32
                0x00000000c0008cb0                TSS::TSS()
                0x00000000c0008cb0                TSS::TSS()
                0x00000000c0008cc0                TSS::setESP(unsigned long)
                0x00000000c0008cd4                TSS::flush()
                0x00000000c0008cf4                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008e51        0x1 
 .text          0x00000000c0008e52      0x4c2 core/unixfile.32
                0x00000000c0008e52                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008ea8                ReservedFilename::isAtty()
                0x00000000c0008ec4                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008f22                UnixFile::getFileDescriptor()
                0x00000000c0008f2a                UnixFile::UnixFile(int)
                0x00000000c0008f2a                UnixFile::UnixFile(int)
                0x00000000c00090da                ReservedFilename::ReservedFilename(int)
                0x00000000c00090da                ReservedFilename::ReservedFilename(int)
                0x00000000c000910c                UnixFile::~UnixFile()
                0x00000000c000910c                UnixFile::~UnixFile()
                0x00000000c00091a4                UnixFile::~UnixFile()
                0x00000000c00091cc                ReservedFilename::~ReservedFilename()
                0x00000000c00091cc                ReservedFilename::~ReservedFilename()
                0x00000000c00091f0                ReservedFilename::~ReservedFilename()
                0x00000000c0009217                getFromFileDescriptor(int)
 .text          0x00000000c0009314     0x1209 core/virtmgr.32
                0x00000000c0009314                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000934b                Virt::getPageState(unsigned long)
                0x00000000c0009372                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009483                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00094a7                Virt::swapIDToSector(unsigned long)
                0x00000000c00094bd                Virt::allocateSwapfilePage()
                0x00000000c000953b                Virt::virtualMemorySetup()
                0x00000000c0009586                Virt::setupPageSwapping(int)
                0x00000000c00095f8                VAS::VAS(VAS*)
                0x00000000c00095f8                VAS::VAS(VAS*)
                0x00000000c0009626                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009652                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009671                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009794                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00097b8                VAS::virtualToPhysical(unsigned long)
                0x00000000c00097d2                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009816                VAS::VAS()
                0x00000000c0009816                VAS::VAS()
                0x00000000c0009880                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00098b4                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00098de                VAS::~VAS()
                0x00000000c00098de                VAS::~VAS()
                0x00000000c0009a42                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009b48                VAS::allocatePages(int, int)
                0x00000000c0009d22                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009d40                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009e06                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009ef8                VAS::VAS(bool)
                0x00000000c0009ef8                VAS::VAS(bool)
                0x00000000c000a178                VAS::evict(unsigned long)
                0x00000000c000a23e                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a344                VAS::scanForEviction()
                0x00000000c000a427                mapVASFirstTime
 .text          0x00000000c000a51d       0x5f coreobjs/c++.32
                0x00000000c000a51d                __cxa_atexit
                0x00000000c000a520                __cxa_finalize
                0x00000000c000a521                __stack_chk_fail
                0x00000000c000a557                __cxa_pure_virtual
                0x00000000c000a568                operator new[](unsigned long)
                0x00000000c000a56d                operator delete(void*, unsigned long)
                0x00000000c000a572                operator delete[](void*)
                0x00000000c000a577                operator delete[](void*, unsigned long)
 .text          0x00000000c000a57c      0x21c dbg/kconsole.32
                0x00000000c000a57c                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a5e7                Dbg::logc(char)
                0x00000000c000a607                Dbg::logs(char*)
                0x00000000c000a624                Dbg::logWriteInt(unsigned int)
                0x00000000c000a642                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a663                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000a798      0xc5c fs/vfs.32
                0x00000000c000a798                File::read(unsigned long long, void*, int*)
                0x00000000c000a7f0                File::write(unsigned long long, void*, int*)
                0x00000000c000a848                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a8a0                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a8ce                File::isAtty()
                0x00000000c000a8d2                Directory::isAtty()
                0x00000000c000a8d6                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a8dc                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a8e2                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a8e8                File::~File()
                0x00000000c000a8e8                File::~File()
                0x00000000c000a90c                File::~File()
                0x00000000c000a936                Directory::~Directory()
                0x00000000c000a936                Directory::~Directory()
                0x00000000c000a95a                Directory::~Directory()
                0x00000000c000a984                Filesystem::Filesystem()
                0x00000000c000a984                Filesystem::Filesystem()
                0x00000000c000a9a8                Filesystem::~Filesystem()
                0x00000000c000a9a8                Filesystem::~Filesystem()
                0x00000000c000a9b6                Filesystem::~Filesystem()
                0x00000000c000a9da                Fs::getcwd(Process*, char*, int)
                0x00000000c000aa04                Fs::initVFS()
                0x00000000c000aa2e                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000abd8                File::File(char const*, Process*)
                0x00000000c000abd8                File::File(char const*, Process*)
                0x00000000c000ac98                File::open(FileOpenMode)
                0x00000000c000acf6                File::close()
                0x00000000c000ad56                File::seek(unsigned long long)
                0x00000000c000adac                File::tell(unsigned long long*)
                0x00000000c000adfc                File::rewind()
                0x00000000c000ae10                File::unlink()
                0x00000000c000ae5c                File::rename(char const*)
                0x00000000c000aeaa                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000af06                File::exists()
                0x00000000c000af44                File::stat(unsigned long long*, bool*)
                0x00000000c000afa5                Fs::setcwd(Process*, char*)
                0x00000000c000b102                Directory::Directory(char const*, Process*)
                0x00000000c000b102                Directory::Directory(char const*, Process*)
                0x00000000c000b1c2                Directory::open()
                0x00000000c000b21e                Directory::close()
                0x00000000c000b27e                Directory::unlink()
                0x00000000c000b2ca                Directory::rename(char const*)
                0x00000000c000b318                Directory::exists()
                0x00000000c000b356                Directory::read(dirent*)
                0x00000000c000b3a2                Directory::create()
                0x00000000c000b3ee                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000b3f4       0x86 hal/bus.32
                0x00000000c000b3f4                Bus::Bus(char const*)
                0x00000000c000b3f4                Bus::Bus(char const*)
                0x00000000c000b42c                Bus::~Bus()
                0x00000000c000b42c                Bus::~Bus()
                0x00000000c000b450                Bus::~Bus()
 .text          0x00000000c000b47a       0x96 hal/buzzer.32
                0x00000000c000b47a                beepThread(void*)
                0x00000000c000b4b7                Krnl::beep(int, int, bool)
 .text          0x00000000c000b510      0x46d hal/clock.32
                0x00000000c000b510                User::loadClockSettings(int)
                0x00000000c000b562                Clock::Clock(char const*)
                0x00000000c000b562                Clock::Clock(char const*)
                0x00000000c000b598                Clock::~Clock()
                0x00000000c000b598                Clock::~Clock()
                0x00000000c000b5bc                Clock::~Clock()
                0x00000000c000b5e6                Clock::timeInSecondsLocal()
                0x00000000c000b62e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b687                datetimeToSeconds(datetime_t)
                0x00000000c000b7b4                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b814                secondsToDatetime(unsigned long long)
                0x00000000c000b958                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b97d        0x1 
 .text          0x00000000c000b97e      0x460 hal/device.32
                0x00000000c000b97e                Device::hibernate()
                0x00000000c000b980                Device::wake()
                0x00000000c000b982                Device::detect()
                0x00000000c000b984                Device::disableLegacy()
                0x00000000c000b986                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b988                DriverlessDevice::close(int, int, void*)
                0x00000000c000b98c                DriverlessDevice::detect()
                0x00000000c000b98e                DriverlessDevice::open(int, int, void*)
                0x00000000c000b9a2                Device::~Device()
                0x00000000c000b9a2                Device::~Device()
                0x00000000c000b9b0                Device::~Device()
                0x00000000c000b9d8                Device::findAndLoadDriver()
                0x00000000c000b9e6                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000ba08                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000ba48                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ba72                Device::getParent()
                0x00000000c000ba7e                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000ba9c                Device::addChild(Device*)
                0x00000000c000bae0                Device::removeAllChildren()
                0x00000000c000bb26                Device::hibernateAll()
                0x00000000c000bb56                Device::wakeAll()
                0x00000000c000bb86                Device::detectAll()
                0x00000000c000bbb6                Device::disableLegacyAll()
                0x00000000c000bbb8                Device::loadDriversForAll()
                0x00000000c000bbba                Device::closeAll()
                0x00000000c000bbf0                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bc26                Device::setName(char const*)
                0x00000000c000bc34                Device::Device(char const*)
                0x00000000c000bc34                Device::Device(char const*)
                0x00000000c000bd30                Device::getName()
                0x00000000c000bd3a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bd3a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bd70                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bdb4                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bdde        0x2 
 .text          0x00000000c000bde0       0x86 hal/diskctrl.32
                0x00000000c000bde0                HardDiskController::HardDiskController(char const*)
                0x00000000c000bde0                HardDiskController::HardDiskController(char const*)
                0x00000000c000be18                HardDiskController::~HardDiskController()
                0x00000000c000be18                HardDiskController::~HardDiskController()
                0x00000000c000be3c                HardDiskController::~HardDiskController()
 .text          0x00000000c000be66       0xe2 hal/diskphys.32
                0x00000000c000be66                PhysicalDisk::eject()
                0x00000000c000be6a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000be6a                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bed2                PhysicalDisk::startCache()
                0x00000000c000befa                PhysicalDisk::~PhysicalDisk()
                0x00000000c000befa                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bf1e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000bf48        0x0 hal/fpu.32
 .text          0x00000000c000bf48      0x358 hal/intctrl.32
                0x00000000c000bf48                int_handler
                0x00000000c000bfce                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c016                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c14b                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c17f                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c1fe                setupINTS()
                0x00000000c000c25b                convertLegacyIRQNumber(int)
 .text          0x00000000c000c2a0      0x7ec hal/keybrd.32
                0x00000000c000c2a0                startGUI(void*)
                0x00000000c000c30c                startGUIVESA(void*)
                0x00000000c000c378                sendKeyToTerminal(unsigned char)
                0x00000000c000c447                sendKeyboardToken(KeyboardToken)
                0x00000000c000c887                clearInternalKeybuffer(VgaText*)
                0x00000000c000c8bc                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000ca02                Keyboard::Keyboard(char const*)
                0x00000000c000ca02                Keyboard::Keyboard(char const*)
                0x00000000c000ca3e                Keyboard::~Keyboard()
                0x00000000c000ca3e                Keyboard::~Keyboard()
                0x00000000c000ca62                Keyboard::~Keyboard()
 .text          0x00000000c000ca8c      0x3f4 hal/logidisk.32
                0x00000000c000ca8c                LogicalDisk::close(int, int, void*)
                0x00000000c000ca90                LogicalDisk::~LogicalDisk()
                0x00000000c000ca90                LogicalDisk::~LogicalDisk()
                0x00000000c000cab4                LogicalDisk::~LogicalDisk()
                0x00000000c000cade                LogicalDisk::open(int, int, void*)
                0x00000000c000caf2                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cb2a                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cb70                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cb70                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cc30                LogicalDisk::assignDriveLetter()
                0x00000000c000cce6                LogicalDisk::mount()
                0x00000000c000cd2e                LogicalDisk::unmount()
                0x00000000c000cd3e                LogicalDisk::eject()
                0x00000000c000cd52                LogicalDisk::unassignDriveLetter()
                0x00000000c000cda8                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ce14                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ce80       0x86 hal/mouse.32
                0x00000000c000ce80                Mouse::Mouse(char const*)
                0x00000000c000ce80                Mouse::Mouse(char const*)
                0x00000000c000ceb8                Mouse::~Mouse()
                0x00000000c000ceb8                Mouse::~Mouse()
                0x00000000c000cedc                Mouse::~Mouse()
 .text          0x00000000c000cf06       0x90 hal/nic.32
                0x00000000c000cf06                NIC::getMAC()
                0x00000000c000cf0c                NIC::write(int, unsigned char*, int*)
                0x00000000c000cf12                NIC::NIC(char const*)
                0x00000000c000cf12                NIC::NIC(char const*)
                0x00000000c000cf48                NIC::~NIC()
                0x00000000c000cf48                NIC::~NIC()
                0x00000000c000cf6c                NIC::~NIC()
 .text          0x00000000c000cf96      0x339 hal/partition.32
                0x00000000c000cf96                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d03e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d2cf        0x1 
 .text          0x00000000c000d2d0       0x86 hal/serial.32
                0x00000000c000d2d0                Serial::Serial(char const*)
                0x00000000c000d2d0                Serial::Serial(char const*)
                0x00000000c000d308                Serial::~Serial()
                0x00000000c000d308                Serial::~Serial()
                0x00000000c000d32c                Serial::~Serial()
 *fill*         0x00000000c000d356        0x2 
 .text          0x00000000c000d358      0x234 hal/timer.32
                0x00000000c000d358                Timer::Timer(char const*)
                0x00000000c000d358                Timer::Timer(char const*)
                0x00000000c000d390                Timer::~Timer()
                0x00000000c000d390                Timer::~Timer()
                0x00000000c000d3b4                Timer::~Timer()
                0x00000000c000d3de                Timer::read()
                0x00000000c000d3e9                setupTimer(int)
                0x00000000c000d424                timerHandler(unsigned int)
 .text          0x00000000c000d58c      0x440 hal/vcache.32
                0x00000000c000d58c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d58c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d6fc                VCache::invalidateReadBuffer()
                0x00000000c000d70c                VCache::writeWriteBuffer()
                0x00000000c000d758                VCache::~VCache()
                0x00000000c000d758                VCache::~VCache()
                0x00000000c000d7ac                VCache::~VCache()
                0x00000000c000d7d4                VCache::write(unsigned long long, int, void*)
                0x00000000c000d8c2                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d9cc      0x4c7 hal/video.32
                0x00000000c000d9cc                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000da18                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000da88                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000db06                Video::clearScreen(unsigned int)
                0x00000000c000db3a                Video::putpixel(int, int, unsigned int)
                0x00000000c000db48                Video::readPixelApprox(int, int)
                0x00000000c000db5c                Video::Video(char const*)
                0x00000000c000db5c                Video::Video(char const*)
                0x00000000c000db92                Video::~Video()
                0x00000000c000db92                Video::~Video()
                0x00000000c000dbb6                Video::~Video()
                0x00000000c000dbe0                Video::isMonochrome()
                0x00000000c000dbec                Video::getWidth()
                0x00000000c000dbf8                Video::getHeight()
                0x00000000c000dc04                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000dcc0                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000de28                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000de93        0x1 
 .text          0x00000000c000de94     0x1307 hw/acpi.32
                0x00000000c000de94                ACPI::close(int, int, void*)
                0x00000000c000df4c                findRSDP()
                0x00000000c000dfdc                loadACPITables(unsigned char*)
                0x00000000c000e240                findRSDT(unsigned char*)
                0x00000000c000e390                findDataTable(unsigned char*, char*)
                0x00000000c000e408                scanMADT()
                0x00000000c000e8dc                ACPI::ACPI()
                0x00000000c000e8dc                ACPI::ACPI()
                0x00000000c000e930                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ea18                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000eae0                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000eae8                ACPI::detectPCI()
                0x00000000c000ecf0                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ed44                ACPI::sleep()
                0x00000000c000ed60                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f19b        0x1 
 .text          0x00000000c000f19c      0xb95 hw/cpu.32
                0x00000000c000f19c                CPU::close(int, int, void*)
                0x00000000c000f1a0                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f1bc                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f1d4                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f248                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f2cc                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f2fa                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f328                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f356                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f384                CPU::CPU()
                0x00000000c000f384                CPU::CPU()
                0x00000000c000f412                CPU::displayFeatures()
                0x00000000c000f414                CPU::detectFeatures()
                0x00000000c000fad8                CPU::setupSMEP()
                0x00000000c000fae4                CPU::setupUMIP()
                0x00000000c000faee                CPU::setupTSC()
                0x00000000c000faf8                CPU::setupLargePages()
                0x00000000c000fb02                CPU::setupPAT()
                0x00000000c000fb3e                CPU::setupMTRR()
                0x00000000c000fb40                CPU::setupGlobalPages()
                0x00000000c000fb4a                CPU::allowUsermodeDataAccess()
                0x00000000c000fb5c                CPU::prohibitUsermodeDataAccess()
                0x00000000c000fb6e                CPU::setupSMAP()
                0x00000000c000fb7c                CPU::setupFeatures()
                0x00000000c000fc48                CPU::open(int, int, void*)
 .text          0x00000000c000fd31       0xd1 krnl/bootmsg.32
                0x00000000c000fd31                KeDisplaySplashScreen()
                0x00000000c000fd9f                KeSetBootMessage(char const*)
 .text          0x00000000c000fe02      0x581 krnl/env.32
                0x00000000c000fe02                EnvVarContainer::getEnv(char const*)
                0x00000000c000fe40                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000ff02                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000ff04                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00100ea                EnvVarContainer::__loadSystem()
                0x00000000c0010104                EnvVarContainer::__loadUser()
                0x00000000c0010106                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010106                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010128                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010128                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010158                Krnl::getEnv(Process*, char const*)
                0x00000000c00101bd                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00101d7                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00101f6                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0010209                Krnl::deleteEnvSystem(char const*)
                0x00000000c001020a                Krnl::deleteEnvUser(char const*)
                0x00000000c001020b                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c001020c                Krnl::newProcessEnv(Process*)
                0x00000000c001022e                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c001027a                Krnl::loadSystemEnv()
                0x00000000c00102a8                Krnl::loadUserEnv()
                0x00000000c00102ce                Krnl::flushEnv()
                0x00000000c00102cf                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00102ef                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0010383       0x94 krnl/inlines.32
                0x00000000c0010383                CPU::current()
                0x00000000c001038f                operator new(unsigned long)
                0x00000000c0010394                operator delete(void*)
                0x00000000c0010399                disableIRQs()
                0x00000000c001039b                enableIRQs()
                0x00000000c001039d                lockScheduler()
                0x00000000c00103a5                unlockScheduler()
                0x00000000c00103b4                lockStuff()
                0x00000000c00103c2                unlockStuff()
                0x00000000c00103fc                Virt::getAKernelVAS()
                0x00000000c0010402                __not_memcpy
 .text          0x00000000c0010417        0xc krnl/panic.32
                0x00000000c0010417                KePanic(char const*)
 .text          0x00000000c0010423      0x142 krnl/powctrl.32
                0x00000000c0010423                Krnl::powerThread(void*)
                0x00000000c0010451                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010467                Krnl::userIOReceived()
                0x00000000c0010472                Krnl::handlePowerButton()
                0x00000000c00104a7                Krnl::handleSleepButton()
                0x00000000c00104dc                Krnl::setupPowerManager()
 .text          0x00000000c0010565       0x9d krnl/random.32
                0x00000000c0010565                KeRand()
                0x00000000c00105a7                KeSeedRand(unsigned int)
                0x00000000c00105d0                KeInitRand()
 *fill*         0x00000000c0010602        0x2 
 .text          0x00000000c0010604      0x190 krnl/resolve.32
                0x00000000c0010604                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010794      0x313 krnl/signal.32
                0x00000000c0010794                KiSigKill(int)
                0x00000000c00107a8                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00107a9                KiDefaultSignalHandlerPause(int)
                0x00000000c00107d5                KiDefaultSignalHandlerResume(int)
                0x00000000c0010801                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010806                KeInitSignals()
                0x00000000c0010851                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010887                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010904                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c00109f3                KiCheckSignalZ
                0x00000000c0010a35                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010a70                KiFinishSignalZ
 .text          0x00000000c0010aa7      0xc2d krnl/syscalls.32
                0x00000000c0010aa7                SysSeekDir(regs*)
                0x00000000c0010aac                SysTellDir(regs*)
                0x00000000c0010ab1                SysVerify(regs*)
                0x00000000c0010abb                SysGetArgc(regs*)
                0x00000000c0010acf                SysTTYName(regs*)
                0x00000000c0010ad7                SysFormatDisk(regs*)
                0x00000000c0010b3a                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010b86                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010bdd                SysShutdown(regs*)
                0x00000000c0010c58                SysRealpath(regs*)
                0x00000000c0010ca5                SysReadDir(regs*)
                0x00000000c0010d21                SysIsATTY(regs*)
                0x00000000c0010d79                SysSeek(regs*)
                0x00000000c0010dcb                SysTell(regs*)
                0x00000000c0010e36                SysSize(regs*)
                0x00000000c0010ea7                SysSizeFromFilename(regs*)
                0x00000000c0010f56                SysClose(regs*)
                0x00000000c0010fb2                SysOpenDir(regs*)
                0x00000000c0011025                SysMakeDir(regs*)
                0x00000000c001108b                SysCloseDir(regs*)
                0x00000000c00110d6                SysWait(regs*)
                0x00000000c00110f7                SysNotImpl(regs*)
                0x00000000c001110e                SysPanic(regs*)
                0x00000000c0011129                SysRmdir(regs*)
                0x00000000c0011190                SysUnlink(regs*)
                0x00000000c00111f7                SysGetArgv(regs*)
                0x00000000c0011243                SysUSleep(regs*)
                0x00000000c001126c                SysSpawn(regs*)
                0x00000000c00112d7                SysGetEnv(regs*)
                0x00000000c0011389                SysSetFatAttrib(regs*)
                0x00000000c0011400                SysPipe(regs*)
                0x00000000c0011445                SysGetUnixTime(regs*)
                0x00000000c0011459                string_ends_with(char const*, char const*)
                0x00000000c00114a3                SysOpen(regs*)
                0x00000000c0011692                KeSystemCall(regs*, void*)
 .text          0x00000000c00116d4      0x159 net/ethernet.32
                0x00000000c00116d4                KeSwitchEndian16(unsigned short)
                0x00000000c0011700                KeSwitchEndian32(unsigned int)
                0x00000000c0011730                EthernetCRC32(unsigned char*, int)
                0x00000000c00117d4                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c001182d      0xd4d reg/cm.32
                0x00000000c001182d                CmOpen(char const*)
                0x00000000c001194b                CmClose(Reghive_Tag*)
                0x00000000c0011961                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c001199d                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0011a14                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0011a53                CmGetNext(Reghive_Tag*, int)
                0x00000000c0011a85                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011ac1                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0011ae9                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0011b0a                CmExpand(Reghive_Tag*, int)
                0x00000000c0011b85                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0011c0b                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0011cff                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c0011e3b                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0011e9c                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0011ecc                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0011f03                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0011f2d                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c0011f6d                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012011                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c001203f                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c00121dd                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c001222a                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00122a4                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c00122f7                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00123bb                zStrtok(char*, char const*)
                0x00000000c0012424                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00124a5                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0012548                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c001257a      0x51c reg/registry.32
                0x00000000c001257a                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00126e1                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0012836                Reg::getLine(char*, char*, char*)
                0x00000000c001286d                Reg::readInt(char*, char*, int*)
                0x00000000c0012957                Reg::readString(char*, char*, char*, int)
                0x00000000c00129d8                Reg::readBool(char*, char*, bool*)
                0x00000000c00129fd                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0012a29                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0012a55                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0012a96       0x36 sys/eject.32
                0x00000000c0012a96                SysEject(regs*)
 .text          0x00000000c0012acc       0x18 sys/exit.32
                0x00000000c0012acc                SysExit(regs*)
 .text          0x00000000c0012ae4       0x1f sys/getcwd.32
                0x00000000c0012ae4                SysGetCwd(regs*)
 .text          0x00000000c0012b03        0xc sys/getpid.32
                0x00000000c0012b03                SysGetPID(regs*)
 .text          0x00000000c0012b0f       0x1a sys/getramdata.32
                0x00000000c0012b0f                SysGetRAMData(regs*)
 .text          0x00000000c0012b29       0x82 sys/getvgaptr.32
                0x00000000c0012b29                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0012bab        0x1 
 .text          0x00000000c0012bac       0xb9 sys/kill.32
                0x00000000c0012bac                SysKill(regs*)
 .text          0x00000000c0012c65       0xa8 sys/loaddll.32
                0x00000000c0012c65                SysLoadDLL(regs*)
 .text          0x00000000c0012d0d       0x68 sys/read.32
                0x00000000c0012d0d                SysRead(regs*)
 .text          0x00000000c0012d75       0x29 sys/registersignal.32
                0x00000000c0012d75                SysRegisterSignal(regs*)
 .text          0x00000000c0012d9e      0x19c sys/registry.32
                0x00000000c0012d9e                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0012e15                SysRegistryReadExtent(regs*)
                0x00000000c0012e5d                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0012e85                SysRegistryEnterDirectory(regs*)
                0x00000000c0012ead                SysRegistryGetNext(regs*)
                0x00000000c0012ed5                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c0012f0f                SysRegistryOpen(regs*)
                0x00000000c0012f23                SysRegistryClose(regs*)
 .text          0x00000000c0012f3a       0x55 sys/sbrk.32
                0x00000000c0012f3a                SysSbrk(regs*)
 .text          0x00000000c0012f8f       0x1c sys/setcwd.32
                0x00000000c0012f8f                SysSetCwd(regs*)
 .text          0x00000000c0012fab       0x95 sys/settime.32
                0x00000000c0012fab                SysSetTime(regs*)
 .text          0x00000000c0013040       0x4a sys/timezone.32
                0x00000000c0013040                SysTimezone(regs*)
 .text          0x00000000c001308a       0x68 sys/write.32
                0x00000000c001308a                SysWrite(regs*)
 .text          0x00000000c00130f2       0x62 sys/wsbe.32
                0x00000000c00130f2                SysWsbe(regs*)
 .text          0x00000000c0013154       0x25 sys/yield.32
                0x00000000c0013154                SysYield(regs*)
 .text          0x00000000c0013179     0x11ed thr/elf.32
                0x00000000c0013179                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00133ff                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013615                Thr::runtimeReferenceHelper()
                0x00000000c0013628                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013677                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0013935                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0014075                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00140a7                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00140de                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00140f8                Thr::loadDLL(char const*, bool)
                0x00000000c001432d                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0014366        0x2 
 .text          0x00000000c0014368     0x1381 thr/prcssthr.32
                0x00000000c0014368                userModeEntryPoint(void*)
                0x00000000c0014390                changeTSS
                0x00000000c00143c0                switchToThread(ThreadControlBlock*)
                0x00000000c0014478                Process::addArgs(char**)
                0x00000000c00144e0                Process::Process(char const*, Process*, char**)
                0x00000000c00144e0                Process::Process(char const*, Process*, char**)
                0x00000000c00146ec                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00146ec                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00148c4                taskStartupFunction
                0x00000000c00148d0                Semaphore::Semaphore(int)
                0x00000000c00148d0                Semaphore::Semaphore(int)
                0x00000000c0014900                Mutex::Mutex()
                0x00000000c0014900                Mutex::Mutex()
                0x00000000c0014914                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0014a1c                Process::createUserThread()
                0x00000000c0014a3c                setupMultitasking(void (*)())
                0x00000000c0014b60                schedule()
                0x00000000c0014bec                Semaphore::tryAcquire()
                0x00000000c0014cac                Semaphore::assertLocked(char const*)
                0x00000000c0014d2c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0014d54                blockTask(TaskState)
                0x00000000c0014d88                waitTask(int, int*, int)
                0x00000000c0014dcc                milliTenthSleepUntil(unsigned int)
                0x00000000c0014e68                milliTenthSleep(unsigned int)
                0x00000000c0014e7c                sleep(unsigned int)
                0x00000000c0014e98                Semaphore::acquire()
                0x00000000c0014f58                taskReturned
                0x00000000c0014f98                Thr::processFromPID(int)
                0x00000000c0015040                unblockTask(ThreadControlBlock*)
                0x00000000c00150e4                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00153b0                cleanerTaskFunction(void*)
                0x00000000c00154b4                terminateTask(int)
                0x00000000c0015594                Thr::terminateFromIRQ(int)
                0x00000000c00155a4                Semaphore::release()
 .text          0x00000000c00156e9      0xb93 vm86/vm8086.32
                0x00000000c00156e9                Vm::inbv(unsigned short)
                0x00000000c00156fc                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015732                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015742                Vm::getSegment(unsigned int)
                0x00000000c001574a                Vm::getOffset(unsigned int)
                0x00000000c001574f                Vm::mainloop2()
                0x00000000c0015789                Vm::mainVm8086Loop(void*)
                0x00000000c0015799                Vm::mainloop3(unsigned long)
                0x00000000c00157bf                Vm::initialise8086()
                0x00000000c0015802                Vm::finish8086()
                0x00000000c0015863                Vm::getOutput8086(unsigned char*)
                0x00000000c0015888                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015941                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015aa9                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0015b33                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0015b44                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0015b56                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0015b67                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0015b7c                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0015b92                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0015ba7                Vm::faultHandler(regs*)
 .text          0x00000000c001627c      0xa8e arch/i386/hal.32
                0x00000000c001627c                noCopro(unsigned long)
                0x00000000c001627d                nmiHandler(regs*, void*)
                0x00000000c0016296                doubleFault(regs*, void*)
                0x00000000c00162af                displayDebugInfo(regs*)
                0x00000000c001660b                HalSystemIdle()
                0x00000000c0016681                displayProgramFault(char const*)
                0x00000000c00166cd                gpFault(regs*, void*)
                0x00000000c0016732                pgFault(regs*, void*)
                0x00000000c00167b8                otherISRHandler(regs*, void*)
                0x00000000c00167ec                opcodeFault(regs*, void*)
                0x00000000c001686c                i386SaveCoprocessor(void*)
                0x00000000c0016880                i386LoadCoprocessor(void*)
                0x00000000c0016894                x87EmulHandler(regs*, void*)
                0x00000000c0016931                HalInitialiseCoprocessor()
                0x00000000c00169df                HalPanic(char const*)
                0x00000000c0016ad8                HalQueryPerformanceCounter()
                0x00000000c0016af3                HalInitialise()
                0x00000000c0016c99                HalMakeBeep(int)
                0x00000000c0016cd3                HalGetRand()
                0x00000000c0016cd6                HalEndOfInterrupt(int)
                0x00000000c0016d07                HalRestart()
                0x00000000c0016d08                HalShutdown()
                0x00000000c0016d09                HalSleep()
 *fill*         0x00000000c0016d0a        0x2 
 .text          0x00000000c0016d0c      0x2f4 arch/i386/pic.32
                0x00000000c0016d0c                picIoWait()
                0x00000000c0016d14                picDisable()
                0x00000000c0016d48                picGetIRQReg(int)
                0x00000000c0016dcc                picOpen()
                0x00000000c0016f5c                picEOI(int)
 .text          0x00000000c0017000      0x64b arch/i386/rtc.32
                0x00000000c0017000                RTC::open(int, int, void*)
                0x00000000c0017004                RTC::close(int, int, void*)
                0x00000000c0017008                RTC::timeInSecondsUTC()
                0x00000000c001701a                RTC::timeInDatetimeUTC()
                0x00000000c0017040                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001707e                RTC::~RTC()
                0x00000000c001707e                RTC::~RTC()
                0x00000000c00170a2                RTC::~RTC()
                0x00000000c00170cc                RTC::get_update_in_progress_flag()
                0x00000000c00170e4                RTC::completeRTCRefresh()
                0x00000000c001739a                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001754d                rtcIRQHandler(regs*, void*)
                0x00000000c0017592                RTC::RTC()
                0x00000000c0017592                RTC::RTC()
 *fill*         0x00000000c001764b        0x1 
 .text          0x00000000c001764c      0x203 arch/i386/vga.32
                0x00000000c001764c                HalConsoleScroll(int, int)
                0x00000000c0017754                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00177c0                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c001784f        0x1 
 .text          0x00000000c0017850     0x13e7 fs/fat/vfslink.32
                0x00000000c0017850                FAT::getName()
                0x00000000c0017858                FAT::tell(void*, unsigned long long*)
                0x00000000c0017894                FAT::stat(void*, unsigned long long*)
                0x00000000c00178d0                FAT::~FAT()
                0x00000000c00178d0                FAT::~FAT()
                0x00000000c00178f4                FAT::~FAT()
                0x00000000c001791c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00179c0                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0017a84                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017c58                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0017e70                FAT::allocateSwapfile(char const*, int)
                0x00000000c0018030                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001819c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00181fc                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001825c                FAT::close(void*)
                0x00000000c00182b0                FAT::closeDir(void*)
                0x00000000c0018304                FAT::seek(void*, unsigned long long)
                0x00000000c001835c                fatWrapperReadDisk
                0x00000000c00183a0                fatWrapperWriteDisk
                0x00000000c00183e4                fatWrapperIoctl
                0x00000000c0018500                FAT::FAT()
                0x00000000c0018500                FAT::FAT()
                0x00000000c0018554                FAT::fixFilepath(char*)
                0x00000000c0018590                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00186c8                FAT::openDir(char const*, void**)
                0x00000000c0018778                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018870                FAT::unlink(char const*)
                0x00000000c00188f0                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0018a7c                FAT::rename(char const*, char const*)
                0x00000000c0018b48                FAT::mkdir(char const*)
                0x00000000c0018bc8                FAT::exists(char const*)
 *fill*         0x00000000c0018c37        0x1 
 .text          0x00000000c0018c38       0x94 fs/iso9660/helper.32
                0x00000000c0018c38                isoReadDiscSectorHelper
                0x00000000c0018c94                iso_kprintf
                0x00000000c0018cb0                iso_kprintfd
 .text          0x00000000c0018ccc      0x6f8 fs/iso9660/vfslink.32
                0x00000000c0018ccc                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018cd2                ISO9660::getName()
                0x00000000c0018cd8                ISO9660::closeDir(void*)
                0x00000000c0018ce2                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0018ce8                ISO9660::unlink(char const*)
                0x00000000c0018cee                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0018cf4                ISO9660::rename(char const*, char const*)
                0x00000000c0018cfa                ISO9660::mkdir(char const*)
                0x00000000c0018d00                ISO9660::~ISO9660()
                0x00000000c0018d00                ISO9660::~ISO9660()
                0x00000000c0018d24                ISO9660::~ISO9660()
                0x00000000c0018d4c                ISO9660::exists(char const*)
                0x00000000c0018d60                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0018e3e                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0018e86                ISO9660::seek(void*, unsigned long long)
                0x00000000c0018ec8                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0018f06                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0018f58                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019090                ISO9660::close(void*)
                0x00000000c00190c0                ISO9660::openDir(char const*, void**)
                0x00000000c0019192                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c00192af                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001932a                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001939c                ISO9660::ISO9660()
                0x00000000c001939c                ISO9660::ISO9660()
 .text          0x00000000c00193c4      0x26c hal/sound/sndcard.32
                0x00000000c00193c4                SoundCard::beginPlayback()
                0x00000000c00193d2                SoundCard::stopPlayback()
                0x00000000c00193e0                SoundCard::SoundCard(char const*)
                0x00000000c00193e0                SoundCard::SoundCard(char const*)
                0x00000000c001947e                SoundCard::~SoundCard()
                0x00000000c001947e                SoundCard::~SoundCard()
                0x00000000c00194a2                SoundCard::~SoundCard()
                0x00000000c00194cc                SoundCard::configureRates(int, int, int)
                0x00000000c00194fc                SoundCard::getSamples16(int, short*)
                0x00000000c0019558                SoundCard::getSamples32(int, int*)
                0x00000000c00195de                SoundCard::addChannel(SoundPort*)
                0x00000000c001961c                SoundCard::removeChannel(int)
 .text          0x00000000c0019630      0x380 hal/sound/sndport.32
                0x00000000c0019630                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019630                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00196bc                SoundPort::~SoundPort()
                0x00000000c00196bc                SoundPort::~SoundPort()
                0x00000000c00196f0                SoundPort::unpause()
                0x00000000c00196fc                SoundPort::pause()
                0x00000000c0019708                SoundPort::getBufferUsed()
                0x00000000c0019710                SoundPort::getBufferSize()
                0x00000000c0019718                SoundPort::buffer16(short*, int)
                0x00000000c00197a4                SoundPort::buffer32(int*, int)
                0x00000000c001982c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c00198f4                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c00199b0        0x0 hw/bus/isa.32
 .text          0x00000000c00199b0      0xb83 hw/bus/pci.32
                0x00000000c00199b0                PCI::open(int, int, void*)
                0x00000000c00199ce                PCI::close(int, int, void*)
                0x00000000c00199d2                PCI::PCI()
                0x00000000c00199d2                PCI::PCI()
                0x00000000c0019a6c                PCI::readBAR8(unsigned int, int)
                0x00000000c0019a88                PCI::readBAR16(unsigned int, int)
                0x00000000c0019aa6                PCI::readBAR32(unsigned int, int)
                0x00000000c0019ac2                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0019ae2                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0019b04                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0019b24                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0019b92                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0019c3a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0019c5e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0019c86                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0019cd0                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0019cf8                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0019d1c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0019d40                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0019d68                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0019dcc                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0019eb4                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a168                PCI::checkBus(unsigned char)
                0x00000000c001a18e                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a300                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001a474                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001a4e0                PCI::detect()
 *fill*         0x00000000c001a533        0x1 
 .text          0x00000000c001a534      0xb5e hw/diskctrl/ide.32
                0x00000000c001a534                IDE::close(int, int, void*)
                0x00000000c001a538                IDE::IDE()
                0x00000000c001a538                IDE::IDE()
                0x00000000c001a56c                IDE::prepareInterrupt(unsigned char)
                0x00000000c001a57e                selectDrive(unsigned char, unsigned char)
                0x00000000c001a580                IDE::getBase(unsigned char)
                0x00000000c001a592                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001a652                IDE::read(unsigned char, unsigned char)
                0x00000000c001a700                IDE::waitInterrupt(unsigned char)
                0x00000000c001a768                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001a784                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001a7a0                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001a7e6                IDE::open(int, int, void*)
                0x00000000c001abf6                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001acc2                IDE::detect()
                0x00000000c001af84                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001b034                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001b092      0x32a hw/diskctrl/satabus.32
                0x00000000c001b092                SATABus::close(int, int, void*)
                0x00000000c001b096                SATABus::detect()
                0x00000000c001b098                SATABus::SATABus()
                0x00000000c001b098                SATABus::SATABus()
                0x00000000c001b11e                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b150                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b198                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b1b8                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b1e2                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001b2f2                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001b39c                SATABus::open(int, int, void*)
 .text          0x00000000c001b3bc      0x945 hw/diskphys/ata.32
                0x00000000c001b3bc                ATA::close(int, int, void*)
                0x00000000c001b3e0                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001b3e2                ATA::ATA()
                0x00000000c001b3e2                ATA::ATA()
                0x00000000c001b410                ATA::flush(bool)
                0x00000000c001b45a                ATA::readyForCommand()
                0x00000000c001b4a6                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001b846                ATA::detectCHS()
                0x00000000c001b870                ATA::open(int, int, void*)
                0x00000000c001b93c                combineCharAndColour(char, unsigned char)
                0x00000000c001b94d                combineColours(unsigned char, unsigned char)
                0x00000000c001b95a                ATA::read(unsigned long long, int, void*)
                0x00000000c001bb30                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001bd01        0x1 
 .text          0x00000000c001bd02      0x60e hw/diskphys/atapi.32
                0x00000000c001bd02                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001bd08                ATAPI::close(int, int, void*)
                0x00000000c001bd2c                ATAPI::ATAPI()
                0x00000000c001bd2c                ATAPI::ATAPI()
                0x00000000c001bd5a                ATAPI::readyForCommand()
                0x00000000c001bdac                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c06c                ATAPI::diskRemoved()
                0x00000000c001c0a6                ATAPI::eject()
                0x00000000c001c0ee                ATAPI::diskInserted()
                0x00000000c001c0fa                ATAPI::detectMedia()
                0x00000000c001c1b6                ATAPI::open(int, int, void*)
                0x00000000c001c296                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001c310      0x7ff hw/diskphys/sata.32
                0x00000000c001c310                SATA::close(int, int, void*)
                0x00000000c001c334                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001c336                SATA::open(int, int, void*)
                0x00000000c001c3e0                SATA::SATA()
                0x00000000c001c3e0                SATA::SATA()
                0x00000000c001c40e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001c65a                SATA::read(unsigned long long, int, void*)
                0x00000000c001c8aa                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001cb0f        0x1 
 .text          0x00000000c001cb10      0x5c6 hw/diskphys/satapi.32
                0x00000000c001cb10                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001cb16                SATAPI::close(int, int, void*)
                0x00000000c001cb3a                SATAPI::SATAPI()
                0x00000000c001cb3a                SATAPI::SATAPI()
                0x00000000c001cb68                SATAPI::diskRemoved()
                0x00000000c001cb6a                SATAPI::diskInserted()
                0x00000000c001cb86                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001ce5a                SATAPI::eject()
                0x00000000c001ce96                SATAPI::detectMedia()
                0x00000000c001ceec                SATAPI::open(int, int, void*)
                0x00000000c001cfec                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d0d6      0x455 hw/intctrl/apic.32
                0x00000000c001d0d6                IOAPIC::close(int, int, void*)
                0x00000000c001d0dc                apicGetBase()
                0x00000000c001d11e                IOAPIC::IOAPIC()
                0x00000000c001d11e                IOAPIC::IOAPIC()
                0x00000000c001d146                apicOpen()
                0x00000000c001d2ac                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d2de                IOAPIC::read(int)
                0x00000000c001d306                IOAPIC::open(int, int, void*)
                0x00000000c001d3fa                IOAPIC::write(int, int)
                0x00000000c001d426                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001d52b        0x1 
 .text          0x00000000c001d52c       0xf0 hw/timer/apictimer.32
                0x00000000c001d52c                APICTimer::close(int, int, void*)
                0x00000000c001d534                apicTimerHandler(regs*, void*)
                0x00000000c001d55c                APICTimer::open(int, int, void*)
                0x00000000c001d5cc                APICTimer::write(int)
                0x00000000c001d5f4                APICTimer::APICTimer()
                0x00000000c001d5f4                APICTimer::APICTimer()
 .text          0x00000000c001d61c      0x1b2 hw/timer/pit.32
                0x00000000c001d61c                PIT::write(int)
                0x00000000c001d6a4                pitHandler(regs*, void*)
                0x00000000c001d6cc                PIT::open(int, int, void*)
                0x00000000c001d71c                PIT::close(int, int, void*)
                0x00000000c001d74c                PIT::PIT()
                0x00000000c001d74c                PIT::PIT()
 *fill*         0x00000000c001d7ce        0x2 
 .text          0x00000000c001d7d0       0x83 arch/i386/avx.32
                0x00000000c001d7d0                avxDetect
                0x00000000c001d7fa                avxSave
                0x00000000c001d80b                avxLoad
                0x00000000c001d81c                avxInit
                0x00000000c001d83e                avxClose
                0x00000000c001d83f                wouldSheSayYes
 *fill*         0x00000000c001d853        0xd 
 .text          0x00000000c001d860      0x2ec arch/i386/interrupt.32
                0x00000000c001d860                isr0
                0x00000000c001d870                isr1
                0x00000000c001d87a                isr2
                0x00000000c001d884                isr3
                0x00000000c001d88e                isr4
                0x00000000c001d898                isr5
                0x00000000c001d8a2                isr6
                0x00000000c001d8ac                isr7
                0x00000000c001d8b6                isr8
                0x00000000c001d8be                isr9
                0x00000000c001d8c8                isr10
                0x00000000c001d8d0                isr11
                0x00000000c001d8d8                isr12
                0x00000000c001d8e0                isr13
                0x00000000c001d8fa                isr14
                0x00000000c001d902                isr15
                0x00000000c001d90c                isr16
                0x00000000c001d916                isr17
                0x00000000c001d920                isr18
                0x00000000c001d92a                irq3
                0x00000000c001d934                irq4
                0x00000000c001d93e                irq5
                0x00000000c001d948                irq6
                0x00000000c001d952                irq7
                0x00000000c001d95c                irq8
                0x00000000c001d966                irq9
                0x00000000c001d970                irq10
                0x00000000c001d97a                irq11
                0x00000000c001d984                irq12
                0x00000000c001d98e                irq13
                0x00000000c001d998                irq14
                0x00000000c001d9a2                irq15
                0x00000000c001d9ac                irq1
                0x00000000c001d9b3                irq2
                0x00000000c001d9ba                isr96
                0x00000000c001d9c1                irq0
                0x00000000c001d9c6                int_common_stub
                0x00000000c001d9f8                syscall_common_stub
                0x00000000c001dafc                irq16
                0x00000000c001db06                irq17
                0x00000000c001db10                irq18
                0x00000000c001db1a                irq19
                0x00000000c001db24                irq20
                0x00000000c001db2e                irq21
                0x00000000c001db38                irq22
                0x00000000c001db42                irq23
 *fill*         0x00000000c001db4c        0x4 
 .text          0x00000000c001db50       0x10 arch/i386/rdrand.32
                0x00000000c001db50                i386GetRDRAND
 .text          0x00000000c001db60       0x39 arch/i386/sse.32
                0x00000000c001db60                absolutelyNoChanceInHell
                0x00000000c001db60                sseDetect
                0x00000000c001db78                sseSave
                0x00000000c001db80                sseLoad
                0x00000000c001db88                sseInit
                0x00000000c001db98                sseClose
 *fill*         0x00000000c001db99        0x7 
 .text          0x00000000c001dba0       0x49 arch/i386/x87.32
                0x00000000c001dba6                x87Detect
                0x00000000c001dbc1                x87Save
                0x00000000c001dbc8                x87Load
                0x00000000c001dbcf                x87Init
                0x00000000c001dbe8                x87Close
 *fill*         0x00000000c001dbe9        0x3 
 .text          0x00000000c001dbec       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001dc11        0x0 crtn.32
 *fill*         0x00000000c001dc11        0x3 
 .text          0x00000000c001dc14      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001dc14                __divdi3
 *fill*         0x00000000c001dd5f        0x1 
 .text          0x00000000c001dd60      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001dd60                __moddi3
 *fill*         0x00000000c001dede        0x2 
 .text          0x00000000c001dee0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001dee0                __udivdi3
 *fill*         0x00000000c001dfdf        0x1 
 .text          0x00000000c001dfe0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001dfe0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e100        0x0
 .iplt          0x00000000c001e100        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e0fa        0xf
 .init          0x00000000c001e0fa        0x3 crti.32
                0x00000000c001e0fa                _init
 .init          0x00000000c001e0fd        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e102        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e107        0x2 crtn.32

.fini           0x00000000c001e109        0xa
 .fini          0x00000000c001e109        0x3 crti.32
                0x00000000c001e109                _fini
 .fini          0x00000000c001e10c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e111        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e114       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e114       0x23 core/computer.32
                0x00000000c001e114                Computer::~Computer()
                0x00000000c001e114                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e138       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e138       0x2a core/computer.32
                0x00000000c001e138                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e162       0x21
 .text._Z10idleCommonv
                0x00000000c001e162       0x21 core/idle.32
                0x00000000c001e162                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e184        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e184        0x2 core/unixfile.32
                0x00000000c001e184                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e184                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e186       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e186       0x42 core/unixfile.32
                0x00000000c001e186                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e186                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e1c8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e1c8       0xd3 core/unixfile.32
                0x00000000c001e1c8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e29c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e29c        0x7 core/unixfile.32
                0x00000000c001e29c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e2a4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e2a4       0xa1 core/unixfile.32
                0x00000000c001e2a4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e346        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e346        0x8 core/unixfile.32
                0x00000000c001e346                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e34e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e34e       0x1a hal/device.32
                0x00000000c001e34e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e34e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e368       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e368       0x2a hal/device.32
                0x00000000c001e368                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e392       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e392       0xdc hal/device.32
                0x00000000c001e392                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e46e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e46e       0x42 hal/device.32
                0x00000000c001e46e                LinkedList<Device>::LinkedList()
                0x00000000c001e46e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e4b0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e4b0       0x1c hal/timer.32
                0x00000000c001e4b0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e4cc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e4cc        0x7 hal/timer.32
                0x00000000c001e4cc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e4d4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e4d4       0xb8 hal/timer.32
                0x00000000c001e4d4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e58c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e58c       0xda hal/timer.32
                0x00000000c001e58c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001e668       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001e668       0x23 hw/acpi.32
                0x00000000c001e668                ACPI::~ACPI()
                0x00000000c001e668                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001e68c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001e68c       0x2a hw/acpi.32
                0x00000000c001e68c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001e6b8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001e6b8        0x2 hw/acpi.32
                0x00000000c001e6b8                LinkedList<Device>::~LinkedList()
                0x00000000c001e6b8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001e6bc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001e6bc       0x1c hw/acpi.32
                0x00000000c001e6bc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001e6d8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001e6d8        0x7 hw/acpi.32
                0x00000000c001e6d8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001e6e0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001e6e0       0xb8 hw/acpi.32
                0x00000000c001e6e0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001e798       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001e798       0x23 hw/cpu.32
                0x00000000c001e798                CPU::~CPU()
                0x00000000c001e798                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001e7bc       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001e7bc       0x2a hw/cpu.32
                0x00000000c001e7bc                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001e7e8        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001e7e8        0x8 sys/kill.32
                0x00000000c001e7e8                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e7f0        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e7f0        0x2 thr/prcssthr.32
                0x00000000c001e7f0                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001e7f0                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e7f4       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e7f4       0x49 thr/prcssthr.32
                0x00000000c001e7f4                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001e7f4                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001e840       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001e840       0x42 thr/prcssthr.32
                0x00000000c001e840                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001e840                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001e882       0x23
 .text._ZN3PCID2Ev
                0x00000000c001e882       0x23 hw/bus/pci.32
                0x00000000c001e882                PCI::~PCI()
                0x00000000c001e882                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001e8a6       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001e8a6       0x2a hw/bus/pci.32
                0x00000000c001e8a6                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001e8d0       0x23
 .text._ZN3IDED2Ev
                0x00000000c001e8d0       0x23 hw/diskctrl/ide.32
                0x00000000c001e8d0                IDE::~IDE()
                0x00000000c001e8d0                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001e8f4       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001e8f4       0x2a hw/diskctrl/ide.32
                0x00000000c001e8f4                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001e91e       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001e91e       0x23 hw/diskctrl/satabus.32
                0x00000000c001e91e                SATABus::~SATABus()
                0x00000000c001e91e                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001e942       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001e942       0x2a hw/diskctrl/satabus.32
                0x00000000c001e942                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001e96c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001e96c       0x23 hw/diskphys/ata.32
                0x00000000c001e96c                ATA::~ATA()
                0x00000000c001e96c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001e990       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001e990       0x2a hw/diskphys/ata.32
                0x00000000c001e990                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001e9ba       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001e9ba       0x23 hw/diskphys/atapi.32
                0x00000000c001e9ba                ATAPI::~ATAPI()
                0x00000000c001e9ba                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001e9de       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001e9de       0x2a hw/diskphys/atapi.32
                0x00000000c001e9de                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001ea08       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001ea08       0x23 hw/diskphys/sata.32
                0x00000000c001ea08                SATA::~SATA()
                0x00000000c001ea08                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001ea2c       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001ea2c       0x2a hw/diskphys/sata.32
                0x00000000c001ea2c                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001ea56       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001ea56       0x23 hw/diskphys/satapi.32
                0x00000000c001ea56                SATAPI::~SATAPI()
                0x00000000c001ea56                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001ea7a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001ea7a       0x2a hw/diskphys/satapi.32
                0x00000000c001ea7a                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001eaa4       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001eaa4       0x23 hw/intctrl/apic.32
                0x00000000c001eaa4                IOAPIC::~IOAPIC()
                0x00000000c001eaa4                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001eac8       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001eac8       0x2a hw/intctrl/apic.32
                0x00000000c001eac8                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001eaf4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001eaf4       0x23 hw/timer/apictimer.32
                0x00000000c001eaf4                APICTimer::~APICTimer()
                0x00000000c001eaf4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001eb18       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001eb18       0x2a hw/timer/apictimer.32
                0x00000000c001eb18                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001eb44       0x23
 .text._ZN3PITD2Ev
                0x00000000c001eb44       0x23 hw/timer/pit.32
                0x00000000c001eb44                PIT::~PIT()
                0x00000000c001eb44                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001eb68       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001eb68       0x2a hw/timer/pit.32
                0x00000000c001eb68                PIT::~PIT()

.rodata         0x00000000c001eb92     0x2bb6
                0x00000000c001eb92                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001eb92        0x2 
 .ctors         0x00000000c001eb94        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001eb98        0x4 core/unixfile.32
 .ctors         0x00000000c001eb9c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001eba0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001eba4                end_ctors = .
                0x00000000c001eba4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001eba4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001eba8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001eba8                __DTOR_END__
                0x00000000c001ebac                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001ebac       0x14 
 .rodata        0x00000000c001ebc0      0x101 acpica/utclib.32
                0x00000000c001ebc0                AcpiGbl_Ctypes
 *fill*         0x00000000c001ecc1        0x3 
 .rodata        0x00000000c001ecc4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001ecdc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001ed26       0x1a 
 .rodata        0x00000000c001ed40       0xed fs/fat/ff.32
 *fill*         0x00000000c001ee2d       0x13 
 .rodata        0x00000000c001ee40      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f240       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001f2af      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001f3c4       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001f42c       0x2c core/computer.32
                0x00000000c001f42c                vtable for Computer
 .rodata.str1.4
                0x00000000c001f458       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001f488        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001f494       0x17 core/main.32
 *fill*         0x00000000c001f4ab        0x1 
 .rodata.str1.4
                0x00000000c001f4ac       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001f551       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001f5a9       0x39 core/pipe.32
 *fill*         0x00000000c001f5e2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001f5e4       0x1c core/pipe.32
                0x00000000c001f5e4                vtable for Pipe
 .rodata.str1.1
                0x00000000c001f600       0x2b core/terminal.32
 *fill*         0x00000000c001f62b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001f62c       0x1c core/terminal.32
                0x00000000c001f62c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001f648       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001f66a       0x15 core/unixfile.32
 *fill*         0x00000000c001f67f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001f680       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001f6cb        0x8 core/unixfile.32
 *fill*         0x00000000c001f6d3        0x1 
 .rodata.str1.4
                0x00000000c001f6d4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001f6f4       0x1c core/unixfile.32
                0x00000000c001f6f4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001f710       0x1c core/unixfile.32
                0x00000000c001f710                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001f72c      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001f893      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001f99a       0x33 coreobjs/c++.32
 *fill*         0x00000000c001f9cd        0x3 
 .rodata        0x00000000c001f9d0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001fb20       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001fb20       0x68 fs/vfs.32
                0x00000000c001fb20                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001fb88       0x1c fs/vfs.32
                0x00000000c001fb88                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001fba4       0x1c fs/vfs.32
                0x00000000c001fba4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001fbc0       0x2c hal/bus.32
                0x00000000c001fbc0                vtable for Bus
 .rodata.str1.1
                0x00000000c001fbec       0x1e hal/clock.32
 *fill*         0x00000000c001fc0a        0x2 
 .rodata._ZTV5Clock
                0x00000000c001fc0c       0x3c hal/clock.32
                0x00000000c001fc0c                vtable for Clock
 *fill*         0x00000000c001fc48       0x18 
 .rodata        0x00000000c001fc60       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001fc90       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001fce8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001fce8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001fce8       0x2c hal/device.32
                0x00000000c001fce8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001fd14       0x2c hal/device.32
                0x00000000c001fd14                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001fd40       0x2c hal/diskctrl.32
                0x00000000c001fd40                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001fd6c       0x38 hal/diskphys.32
                0x00000000c001fd6c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001fda4       0x3e hal/intctrl.32
 *fill*         0x00000000c001fde2        0x2 
 .rodata.str1.4
                0x00000000c001fde4       0x5d hal/intctrl.32
 .rodata        0x00000000c001fe41       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001fe94       0x34 hal/keybrd.32
                0x00000000c001fe94                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001fec8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001ff0c       0x2c hal/logidisk.32
                0x00000000c001ff0c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001ff38       0x2c hal/mouse.32
                0x00000000c001ff38                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c001ff64       0x34 hal/nic.32
                0x00000000c001ff64                vtable for NIC
 .rodata.str1.1
                0x00000000c001ff98        0xb hal/partition.32
 *fill*         0x00000000c001ffa3        0x1 
 .rodata._ZTV6Serial
                0x00000000c001ffa4       0x44 hal/serial.32
                0x00000000c001ffa4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001ffe8       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001ffe8        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001ffe8       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001ffe8       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001ffe8       0x30 hal/timer.32
                0x00000000c001ffe8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020018       0x10 hal/vcache.32
                0x00000000c0020018                vtable for VCache
 .rodata.str1.1
                0x00000000c0020028       0x93 hal/video.32
 *fill*         0x00000000c00200bb        0x1 
 .rodata._ZTV5Video
                0x00000000c00200bc       0x4c hal/video.32
                0x00000000c00200bc                vtable for Video
 .rodata.str1.4
                0x00000000c0020108       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c00201a3      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c00202df       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c00202df        0x8 hw/acpi.32
 *fill*         0x00000000c00202df        0x1 
 .rodata._ZTV4ACPI
                0x00000000c00202e0       0x2c hw/acpi.32
                0x00000000c00202e0                vtable for ACPI
 .rodata.str1.1
                0x00000000c002030c      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c0020479        0x3 
 .rodata._ZTV3CPU
                0x00000000c002047c       0x2c hw/cpu.32
                0x00000000c002047c                vtable for CPU
 .rodata.str1.1
                0x00000000c00204a8       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00204e4       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0020575       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c002063e       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020686       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c00206b1       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0020727       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c002076c        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0020776       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0020797       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c002082d       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0020881       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c00208ad      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0020a79       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0020ad0      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020bdc       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020bdc       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020bdc       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020bdc        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0020bdc       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0020c7c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0020cac      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c0020e3c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0020eaf       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0020ec4       0x3c arch/i386/rtc.32
                0x00000000c0020ec4                vtable for RTC
 .rodata.str1.1
                0x00000000c0020f00       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0020f41        0x3 
 .rodata._ZTV3FAT
                0x00000000c0020f44       0x68 fs/fat/vfslink.32
                0x00000000c0020f44                vtable for FAT
 .rodata.str1.1
                0x00000000c0020fac       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0020fac      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00210e4       0x68 fs/iso9660/vfslink.32
                0x00000000c00210e4                vtable for ISO9660
 .rodata.str1.1
                0x00000000c002114c       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0021190       0x34 hal/sound/sndcard.32
                0x00000000c0021190                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00211c4       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0021203       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002123b       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00212dc       0x2c hw/bus/pci.32
                0x00000000c00212dc                vtable for PCI
 .rodata.str1.1
                0x00000000c0021308       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c002138f        0x1 
 .rodata._ZTV3IDE
                0x00000000c0021390       0x2c hw/diskctrl/ide.32
                0x00000000c0021390                vtable for IDE
 .rodata.str1.4
                0x00000000c00213bc       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00213e0       0x2c hw/diskctrl/satabus.32
                0x00000000c00213e0                vtable for SATABus
 .rodata.str1.1
                0x00000000c002140c       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c002141e        0x2 
 .rodata._ZTV3ATA
                0x00000000c0021420       0x38 hw/diskphys/ata.32
                0x00000000c0021420                vtable for ATA
 .rodata.str1.1
                0x00000000c0021458        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0021465        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0021468       0x38 hw/diskphys/atapi.32
                0x00000000c0021468                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00214a0       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c002151c       0x38 hw/diskphys/sata.32
                0x00000000c002151c                vtable for SATA
 .rodata.str1.1
                0x00000000c0021554       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c002163e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0021640       0x38 hw/diskphys/satapi.32
                0x00000000c0021640                vtable for SATAPI
 .rodata        0x00000000c0021678        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0021680       0x2c hw/intctrl/apic.32
                0x00000000c0021680                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c00216ac       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c00216c7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00216c8       0x30 hw/timer/apictimer.32
                0x00000000c00216c8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00216f8       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021715        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021718       0x30 hw/timer/pit.32
                0x00000000c0021718                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021748      0x4dd
 *(.data)
 .data          0x00000000c0021748        0x0 crti.32
 .data          0x00000000c0021748        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021748                __dso_handle
 .data          0x00000000c002174c        0x0 acpica/utclib.32
 .data          0x00000000c002174c        0x0 core/malloc.32
 .data          0x00000000c002174c        0x0 libk/ctype.32
 .data          0x00000000c002174c        0x0 libk/string.32
 .data          0x00000000c002174c        0x0 fs/fat/diskio.32
 .data          0x00000000c002174c        0x0 fs/fat/ff.32
 .data          0x00000000c002174c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c002174c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c002174c        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c002174c        0x0 core/computer.32
 .data          0x00000000c002174c        0x0 core/gdt.32
 .data          0x00000000c002174c        0x0 core/idle.32
 .data          0x00000000c002174c        0x0 core/idt.32
 .data          0x00000000c002174c        0x4 core/kheap.32
 .data          0x00000000c0021750        0x0 core/main.32
 .data          0x00000000c0021750        0x4 core/physmgr.32
                0x00000000c0021750                Phys::bitmap
 .data          0x00000000c0021754        0x0 core/pipe.32
 *fill*         0x00000000c0021754        0xc 
 .data          0x00000000c0021760       0x60 core/terminal.32
                0x00000000c0021760                VgaText::hiddenOut
                0x00000000c0021780                ansiToVGAMappings
 .data          0x00000000c00217c0        0x0 core/tss.32
 .data          0x00000000c00217c0        0x4 core/unixfile.32
                0x00000000c00217c0                UnixFile::nextFd
 .data          0x00000000c00217c4       0x15 core/virtmgr.32
                0x00000000c00217c4                Virt::pageAllocPtr
                0x00000000c00217c8                Virt::bitmap
                0x00000000c00217cc                Virt::swapfileSectorsPerPage
                0x00000000c00217d0                Virt::swapfileLength
                0x00000000c00217d4                Virt::swapfileSector
                0x00000000c00217d8                Virt::swapfileDrive
 *fill*         0x00000000c00217d9        0x3 
 .data          0x00000000c00217dc        0x4 coreobjs/c++.32
                0x00000000c00217dc                __stack_chk_guard
 .data          0x00000000c00217e0        0x0 dbg/kconsole.32
 .data          0x00000000c00217e0        0x0 fs/vfs.32
 .data          0x00000000c00217e0        0x0 hal/bus.32
 .data          0x00000000c00217e0        0x0 hal/buzzer.32
 .data          0x00000000c00217e0        0x0 hal/clock.32
 .data          0x00000000c00217e0        0x0 hal/device.32
 .data          0x00000000c00217e0        0x0 hal/diskctrl.32
 .data          0x00000000c00217e0        0x0 hal/diskphys.32
 .data          0x00000000c00217e0        0x0 hal/fpu.32
 .data          0x00000000c00217e0        0x0 hal/intctrl.32
 .data          0x00000000c00217e0        0x0 hal/keybrd.32
 .data          0x00000000c00217e0        0x0 hal/logidisk.32
 .data          0x00000000c00217e0        0x0 hal/mouse.32
 .data          0x00000000c00217e0        0x0 hal/nic.32
 .data          0x00000000c00217e0        0x0 hal/partition.32
 .data          0x00000000c00217e0        0x0 hal/serial.32
 .data          0x00000000c00217e0        0x0 hal/timer.32
 .data          0x00000000c00217e0        0x0 hal/vcache.32
 .data          0x00000000c00217e0        0x0 hal/video.32
 .data          0x00000000c00217e0       0x10 hw/acpi.32
                0x00000000c00217e0                legacyIRQRemaps
 .data          0x00000000c00217f0        0x4 hw/cpu.32
                0x00000000c00217f0                lastCode
 *fill*         0x00000000c00217f4        0xc 
 .data          0x00000000c0021800      0x142 krnl/bootmsg.32
                0x00000000c0021800                KiSplashScreen
 *fill*         0x00000000c0021942       0x1e 
 .data          0x00000000c0021960       0x4d krnl/env.32
                0x00000000c0021960                defaultSysEnv
 .data          0x00000000c00219ad        0x0 krnl/inlines.32
 .data          0x00000000c00219ad        0x0 krnl/panic.32
 .data          0x00000000c00219ad        0x0 krnl/powctrl.32
 .data          0x00000000c00219ad        0x0 krnl/random.32
 .data          0x00000000c00219ad        0x0 krnl/resolve.32
 *fill*         0x00000000c00219ad       0x13 
 .data          0x00000000c00219c0       0x4c krnl/signal.32
                0x00000000c00219c0                KiDefaultSignalHandlers
 *fill*         0x00000000c0021a0c       0x14 
 .data          0x00000000c0021a20       0xf0 krnl/syscalls.32
                0x00000000c0021a20                systemCallHandlers
 .data          0x00000000c0021b10        0x0 net/ethernet.32
 *fill*         0x00000000c0021b10       0x10 
 .data          0x00000000c0021b20      0x100 reg/cm.32
                0x00000000c0021b20                CmComponents
 .data          0x00000000c0021c20        0x0 reg/registry.32
 .data          0x00000000c0021c20        0x0 sys/eject.32
 .data          0x00000000c0021c20        0x0 sys/exit.32
 .data          0x00000000c0021c20        0x0 sys/getcwd.32
 .data          0x00000000c0021c20        0x0 sys/getpid.32
 .data          0x00000000c0021c20        0x0 sys/getramdata.32
 .data          0x00000000c0021c20        0x0 sys/getvgaptr.32
 .data          0x00000000c0021c20        0x0 sys/kill.32
 .data          0x00000000c0021c20        0x0 sys/loaddll.32
 .data          0x00000000c0021c20        0x0 sys/read.32
 .data          0x00000000c0021c20        0x0 sys/registersignal.32
 .data          0x00000000c0021c20        0x0 sys/registry.32
 .data          0x00000000c0021c20        0x0 sys/sbrk.32
 .data          0x00000000c0021c20        0x0 sys/setcwd.32
 .data          0x00000000c0021c20        0x0 sys/settime.32
 .data          0x00000000c0021c20        0x0 sys/timezone.32
 .data          0x00000000c0021c20        0x0 sys/write.32
 .data          0x00000000c0021c20        0x0 sys/wsbe.32
 .data          0x00000000c0021c20        0x0 sys/yield.32
 .data          0x00000000c0021c20        0x0 thr/elf.32
 .data          0x00000000c0021c20        0x4 thr/prcssthr.32
                0x00000000c0021c20                Thr::nextPID
 .data          0x00000000c0021c24        0x0 vm86/vm8086.32
 .data          0x00000000c0021c24        0x0 arch/i386/hal.32
 .data          0x00000000c0021c24        0x0 arch/i386/pic.32
 .data          0x00000000c0021c24        0x0 arch/i386/rtc.32
 .data          0x00000000c0021c24        0x0 arch/i386/vga.32
 .data          0x00000000c0021c24        0x0 fs/fat/vfslink.32
 .data          0x00000000c0021c24        0x0 fs/iso9660/helper.32
 .data          0x00000000c0021c24        0x1 fs/iso9660/vfslink.32
                0x00000000c0021c24                recentDriveletter
 .data          0x00000000c0021c25        0x0 hal/sound/sndcard.32
 .data          0x00000000c0021c25        0x0 hal/sound/sndport.32
 .data          0x00000000c0021c25        0x0 hw/bus/isa.32
 .data          0x00000000c0021c25        0x0 hw/bus/pci.32
 .data          0x00000000c0021c25        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0021c25        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0021c25        0x0 hw/diskphys/ata.32
 .data          0x00000000c0021c25        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0021c25        0x0 hw/diskphys/sata.32
 .data          0x00000000c0021c25        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0021c25        0x0 hw/intctrl/apic.32
 .data          0x00000000c0021c25        0x0 hw/timer/apictimer.32
 .data          0x00000000c0021c25        0x0 hw/timer/pit.32
 .data          0x00000000c0021c25        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0021c25        0x0 crtn.32
 .data          0x00000000c0021c25        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0021c25        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0021c25        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0021c25        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0021c28        0x0
 .got           0x00000000c0021c28        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0021c28        0x0
 .got.plt       0x00000000c0021c28        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0021c28        0x0
 .igot.plt      0x00000000c0021c28        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0021c28        0x0
 .tm_clone_table
                0x00000000c0021c28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0021c28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0021c25      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0021c25        0x3 
 .eh_frame      0x00000000c0021c28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0021c28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0021c28       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0021c80       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0021cc0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0021d2c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0022000       0x7d
 *(userkernel)
 userkernel     0x00000000c0022000       0x52 krnl/signal.32
                0x00000000c0022000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002202c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0022052       0x2b krnl/syscalls.32
                0x00000000c0022052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0023000        0x1
 *(align_previous)
 align_previous
                0x00000000c0023000        0x1 krnl/signal.32
                0x00000000c0023000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0023004        0x0
 .rel.got       0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0023004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0023001     0x4ba7
                0x00000000c0023001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0023001       0x1f 
 COMMON         0x00000000c0023020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0023020                dcache
                0x00000000c0023060                cdDriveLetter
                0x00000000c0023080                icache
 *(.bss)
 .bss           0x00000000c00230c0        0x0 crti.32
 .bss           0x00000000c00230c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00230e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00230e4       0x1c 
 .bss           0x00000000c0023100      0x378 core/malloc.32
 .bss           0x00000000c0023478        0x0 libk/ctype.32
 .bss           0x00000000c0023478        0x0 libk/string.32
 .bss           0x00000000c0023478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0023478        0x8 
 .bss           0x00000000c0023480       0x88 fs/fat/ff.32
 .bss           0x00000000c0023508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0023508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0023508       0x18 
 .bss           0x00000000c0023520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0023eb8        0x6 core/computer.32
                0x00000000c0023eb8                Krnl::computer
                0x00000000c0023ebc                KeIsPreemptionOn
                0x00000000c0023ebd                KeIsSchedulingOn
 *fill*         0x00000000c0023ebe        0x2 
 .bss           0x00000000c0023ec0        0x6 core/gdt.32
                0x00000000c0023ec0                gdtDescr
 .bss           0x00000000c0023ec6        0x0 core/idle.32
 *fill*         0x00000000c0023ec6        0x2 
 .bss           0x00000000c0023ec8        0x6 core/idt.32
                0x00000000c0023ec8                idtDescr
 .bss           0x00000000c0023ece        0x0 core/kheap.32
 *fill*         0x00000000c0023ece        0x2 
 .bss           0x00000000c0023ed0        0x4 core/main.32
                0x00000000c0023ed0                sysBootSettings
 .bss           0x00000000c0023ed4       0x29 core/physmgr.32
                0x00000000c0023ed4                Phys::forbidEvictions
                0x00000000c0023ed8                Phys::currentPagePointer
                0x00000000c0023edc                Phys::highestMem
                0x00000000c0023ee0                Phys::oldPercent
                0x00000000c0023ee4                Phys::usedPages
                0x00000000c0023ee8                Phys::usablePages
                0x00000000c0023eec                Phys::dmaUsage
 .bss           0x00000000c0023efd        0x0 core/pipe.32
 *fill*         0x00000000c0023efd        0x3 
 .bss           0x00000000c0023f00        0x9 core/terminal.32
                0x00000000c0023f00                terminalCycle
                0x00000000c0023f04                activeTerminal
                0x00000000c0023f08                VgaText::graphicMode
 *fill*         0x00000000c0023f09        0x1 
 .bss           0x00000000c0023f0a        0x2 core/tss.32
                0x00000000c0023f0a                doubleFaultSelector
 *fill*         0x00000000c0023f0c       0x14 
 .bss           0x00000000c0023f20       0x84 core/unixfile.32
                0x00000000c0023f20                sfileLpt
                0x00000000c0023f60                sfileCom
                0x00000000c0023f84                sfileNul
                0x00000000c0023f88                sfilePnt
                0x00000000c0023f8c                sfileAux
                0x00000000c0023f90                sfileCon
                0x00000000c0023f94                initialFilesAdded
                0x00000000c0023f98                unixFileLinkedList
 .bss           0x00000000c0023fa4       0x10 core/virtmgr.32
                0x00000000c0023fa4                twswaps
                0x00000000c0023fa8                swapBalance
                0x00000000c0023fac                Virt::swapfileBitmap
                0x00000000c0023fb0                firstVAS
 .bss           0x00000000c0023fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0023fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0023fb4        0x4 fs/vfs.32
                0x00000000c0023fb4                installedFilesystems
 .bss           0x00000000c0023fb8        0x0 hal/bus.32
 .bss           0x00000000c0023fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0023fb8        0x8 hal/clock.32
                0x00000000c0023fb8                User::dstOn
                0x00000000c0023fb9                User::timezoneHalfHourOffset
                0x00000000c0023fbc                User::timezoneHourOffset
 .bss           0x00000000c0023fc0        0x0 hal/device.32
 .bss           0x00000000c0023fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0023fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0023fc0        0x0 hal/fpu.32
 .bss           0x00000000c0023fc0     0x2000 hal/intctrl.32
                0x00000000c0023fc0                INT_contexts
                0x00000000c0024fc0                INT_handlers
 .bss           0x00000000c0025fc0      0x429 hal/keybrd.32
                0x00000000c0025fc0                keyboardWaitingTaskList
                0x00000000c0025fc4                keyboardSetupYet
                0x00000000c0025fc8                guiKeyboardHandler
                0x00000000c0025fe0                keystates
 *fill*         0x00000000c00263e9       0x17 
 .bss           0x00000000c0026400       0x88 hal/logidisk.32
                0x00000000c0026400                diskAssignments
                0x00000000c0026420                disks
 .bss           0x00000000c0026488        0x4 hal/mouse.32
                0x00000000c0026488                guiMouseHandler
 .bss           0x00000000c002648c        0x0 hal/nic.32
 .bss           0x00000000c002648c        0x0 hal/partition.32
 .bss           0x00000000c002648c        0x0 hal/serial.32
 .bss           0x00000000c002648c        0x4 hal/timer.32
                0x00000000c002648c                milliTenthsSinceBoot
 .bss           0x00000000c0026490        0x0 hal/vcache.32
 .bss           0x00000000c0026490        0x4 hal/video.32
                0x00000000c0026490                screen
 *fill*         0x00000000c0026494        0xc 
 .bss           0x00000000c00264a0      0x480 hw/acpi.32
                0x00000000c00264a0                systemSleepFunction
                0x00000000c00264a4                systemResetFunction
                0x00000000c00264a8                systemShutdownFunction
                0x00000000c00264ac                nextACPITable
                0x00000000c00264c0                acpiTables
                0x00000000c00266c0                usingXSDT
                0x00000000c00266c4                MADTpointer
                0x00000000c00266c8                RSDTpointer
                0x00000000c00266cc                RSDPpointer
                0x00000000c00266d0                nextAPICNMI
                0x00000000c00266e0                apicNMIInfo
                0x00000000c0026760                legacyIRQFlags
                0x00000000c0026780                ioapicDiscoveryNumber
                0x00000000c00267a0                ioapicFoundInMADT
                0x00000000c00267c0                ioapicAddresses
                0x00000000c0026840                ioapicGSIBase
                0x00000000c00268c0                processorDiscoveryNumber
                0x00000000c00268e0                matchingAPICID
                0x00000000c0026900                processorID
 .bss           0x00000000c0026920       0x10 hw/cpu.32
                0x00000000c0026920                lastD
                0x00000000c0026924                lastC
                0x00000000c0026928                lastB
                0x00000000c002692c                lastA
 .bss           0x00000000c0026930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0026930        0x8 krnl/env.32
                0x00000000c0026930                Krnl::userEnv
                0x00000000c0026934                Krnl::systemEnv
 .bss           0x00000000c0026938        0x0 krnl/inlines.32
 .bss           0x00000000c0026938        0x1 krnl/panic.32
                0x00000000c0026938                KeIsKernelInPanic
 *fill*         0x00000000c0026939        0x7 
 .bss           0x00000000c0026940       0x48 krnl/powctrl.32
                0x00000000c0026940                Krnl::powCtrlOnBattery
                0x00000000c0026960                Krnl::currentPowerSettings
                0x00000000c0026984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0026988        0x8 krnl/random.32
                0x00000000c0026988                kiRandSeed
 .bss           0x00000000c0026990        0x0 krnl/resolve.32
 .bss           0x00000000c0026990        0x0 krnl/signal.32
 .bss           0x00000000c0026990        0x0 krnl/syscalls.32
 .bss           0x00000000c0026990        0x0 net/ethernet.32
 .bss           0x00000000c0026990        0x4 reg/cm.32
 .bss           0x00000000c0026994        0x0 reg/registry.32
 .bss           0x00000000c0026994        0x0 sys/eject.32
 .bss           0x00000000c0026994        0x0 sys/exit.32
 .bss           0x00000000c0026994        0x0 sys/getcwd.32
 .bss           0x00000000c0026994        0x0 sys/getpid.32
 .bss           0x00000000c0026994        0x0 sys/getramdata.32
 .bss           0x00000000c0026994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0026994        0x0 sys/kill.32
 .bss           0x00000000c0026994        0x0 sys/loaddll.32
 .bss           0x00000000c0026994        0x0 sys/read.32
 .bss           0x00000000c0026994        0x0 sys/registersignal.32
 .bss           0x00000000c0026994        0x0 sys/registry.32
 .bss           0x00000000c0026994        0x0 sys/sbrk.32
 .bss           0x00000000c0026994        0x0 sys/setcwd.32
 .bss           0x00000000c0026994        0x0 sys/settime.32
 .bss           0x00000000c0026994        0x0 sys/timezone.32
 .bss           0x00000000c0026994        0x0 sys/write.32
 .bss           0x00000000c0026994        0x0 sys/wsbe.32
 .bss           0x00000000c0026994        0x0 sys/yield.32
 *fill*         0x00000000c0026994        0xc 
 .bss           0x00000000c00269a0      0x7a4 thr/elf.32
                0x00000000c00269a0                Thr::driverLookupNext
                0x00000000c00269c0                Thr::driverLookupLen
                0x00000000c0026bc0                Thr::driverLookupAddr
                0x00000000c0026dc0                Thr::driverNameLookup
                0x00000000c0026fc0                Thr::kernelSymbols
                0x00000000c0027040                Thr::kernelStringTable
                0x00000000c00270c0                Thr::kernelSymbolTable
                0x00000000c0027140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0027144        0x4 
 .bss           0x00000000c0027148       0x68 thr/prcssthr.32
                0x00000000c0027148                cleanerThread
                0x00000000c002714c                weNeedTheCleanerToNotBlock
                0x00000000c0027150                retValLockStuff
                0x00000000c0027154                retValSchedLock
                0x00000000c0027158                lockStuffLock
                0x00000000c002715c                schedulerLock
                0x00000000c0027160                taskSwitchesPostponedFlag
                0x00000000c0027164                postponeTaskSwitchesCounter
                0x00000000c0027168                irqDisableCounter
                0x00000000c002716c                terminatedTaskList
                0x00000000c0027178                sleepingTaskList
                0x00000000c0027184                taskList
                0x00000000c0027190                kernelProcess
 *fill*         0x00000000c00271b0       0x10 
 .bss           0x00000000c00271c0       0x40 vm86/vm8086.32
                0x00000000c00271c0                Vm::vmRetV
                0x00000000c00271c4                Vm::vmDone
                0x00000000c00271c5                Vm::vmReady
                0x00000000c00271c8                Vm::vm86Thread
                0x00000000c00271cc                Vm::vmToHostCommsPtr
                0x00000000c00271e0                Vm::vmToHostComms
 .bss           0x00000000c0027200       0x14 arch/i386/hal.32
                0x00000000c0027200                apic
                0x00000000c0027204                fpuOwner
                0x00000000c0027208                coproLoadFunc
                0x00000000c002720c                coproSaveFunc
                0x00000000c0027210                gpFaultIntercept
 .bss           0x00000000c0027214        0x0 arch/i386/pic.32
 .bss           0x00000000c0027214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0027216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0027216        0xa 
 .bss           0x00000000c0027220       0xf0 fs/fat/vfslink.32
                0x00000000c0027220                FAT::fats
                0x00000000c0027240                FAT::vfsToFatRemaps
                0x00000000c00272c0                fatToVFSRemaps
 .bss           0x00000000c0027310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0027310       0x10 
 .bss           0x00000000c0027320      0x820 fs/iso9660/vfslink.32
                0x00000000c0027320                iso9660Owner
                0x00000000c0027324                recentSector
                0x00000000c0027340                recentBuffer
 .bss           0x00000000c0027b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0027b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0027b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0027b40        0xd hw/bus/pci.32
                0x00000000c0027b40                thePCI
 .bss           0x00000000c0027b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0027b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0027b4d        0x3 
 .bss           0x00000000c0027b50        0x8 hw/diskphys/ata.32
                0x00000000c0027b50                ataSectorsWritten
                0x00000000c0027b54                ataSectorsRead
 .bss           0x00000000c0027b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0027b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0027b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0027b58        0x8 
 .bss           0x00000000c0027b60       0x41 hw/intctrl/apic.32
                0x00000000c0027b60                noOfIOAPICs
                0x00000000c0027b80                ioapics
                0x00000000c0027ba0                IOAPICsSetupYet
 .bss           0x00000000c0027ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0027ba1        0x3 
 .bss           0x00000000c0027ba4        0x4 hw/timer/pit.32
                0x00000000c0027ba4                pitFreq
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0027ba8        0x0 crtn.32
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0027ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0027ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002c74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
