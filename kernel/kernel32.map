Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .comment       0x0000000000000000       0x12 dbg/usban.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/compat.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/truncate.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD dbg/usban.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/compat.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/truncate.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1ed5a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x868 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000570                strlen
                0x00000000c00005a0                strpbrk
                0x00000000c00005f0                strtok
                0x00000000c0000640                strcpy
                0x00000000c0000680                strncpy
                0x00000000c0000750                strcmp
                0x00000000c00007a0                strchr
                0x00000000c00007e0                strncmp
                0x00000000c0000840                strcat
                0x00000000c0000870                strncat
                0x00000000c00008d0                strstr
                0x00000000c0000930                toupper
                0x00000000c0000950                tolower
                0x00000000c0000970                simple_strtoul
 .text          0x00000000c0000be8      0xfaa core/malloc.32
                0x00000000c0000d53                dlfree
                0x00000000c00010ab                dlmalloc
                0x00000000c00015e8                dlrealloc
                0x00000000c000178b                dlmemalign
                0x00000000c00018ae                dlcalloc
                0x00000000c0001948                dlcfree
                0x00000000c000194d                dlindependent_calloc
                0x00000000c0001972                dlindependent_comalloc
                0x00000000c0001989                dlvalloc
                0x00000000c00019b4                dlpvalloc
                0x00000000c00019ea                dlmalloc_trim
                0x00000000c00019f7                dlmalloc_usable_size
                0x00000000c0001a28                dlmallinfo
                0x00000000c0001af7                dlmalloc_stats
                0x00000000c0001b08                dlmallopt
 *fill*         0x00000000c0001b92        0x2 
 .text          0x00000000c0001b94      0x1f2 libk/ctype.32
                0x00000000c0001b94                isblank
                0x00000000c0001bb4                iscntrl
                0x00000000c0001bd4                isdigit
                0x00000000c0001bf0                islower
                0x00000000c0001c0c                isspace
                0x00000000c0001c34                isupper
                0x00000000c0001c50                isalpha
                0x00000000c0001c80                isalnum
                0x00000000c0001cb0                ispunct
                0x00000000c0001cf0                isgraph
                0x00000000c0001d20                isprint
                0x00000000c0001d48                isxdigit
 .text          0x00000000c0001d86        0x0 libk/string.32
 .text          0x00000000c0001d86       0x51 fs/fat/diskio.32
                0x00000000c0001d86                disk_status
                0x00000000c0001d89                disk_initialize
                0x00000000c0001d8c                disk_read
                0x00000000c0001da2                disk_write
                0x00000000c0001db8                disk_ioctl
 .text          0x00000000c0001dd7     0x3e46 fs/fat/ff.32
                0x00000000c0003bf8                f_mount
                0x00000000c0003c5a                f_open
                0x00000000c0003f1d                f_read
                0x00000000c000411c                f_write
                0x00000000c0004364                f_sync
                0x00000000c0004429                f_close
                0x00000000c0004458                f_lseek
                0x00000000c0004609                f_opendir
                0x00000000c00046d4                f_closedir
                0x00000000c00046f6                f_readdir
                0x00000000c0004788                f_stat
                0x00000000c0004807                f_getfree
                0x00000000c0004910                f_truncate
                0x00000000c00049fa                f_unlink
                0x00000000c0004b1c                f_mkdir
                0x00000000c0004cb7                f_rename
                0x00000000c0004e6f                f_chmod
                0x00000000c0004f1f                f_utime
                0x00000000c0004fcf                f_getlabel
                0x00000000c0005120                f_setlabel
                0x00000000c00052b0                f_expand
                0x00000000c000541d                f_mkfs
 *fill*         0x00000000c0005c1d        0x3 
 .text          0x00000000c0005c20       0x2f fs/fat/ffsystem.32
                0x00000000c0005c20                ff_memalloc
                0x00000000c0005c38                ff_memfree
 *fill*         0x00000000c0005c4f        0x1 
 .text          0x00000000c0005c50      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c50                ff_uni2oem
                0x00000000c0005cf0                ff_oem2uni
                0x00000000c0005d68                ff_wtoupper
 .text          0x00000000c0005f2c      0xd32 fs/iso9660/iso9660.32
                0x00000000c0006177                isoReadDiscSector
                0x00000000c0006212                strnicmp
                0x00000000c00064c1                stricmp
                0x00000000c000650d                iso_open
                0x00000000c0006597                iso_close
                0x00000000c00065b5                iso_read
                0x00000000c00066cb                iso_seek
                0x00000000c000674f                iso_tell
                0x00000000c0006780                iso_total
                0x00000000c00067ab                fn_postprocess
                0x00000000c00067d2                iso_readdir
                0x00000000c0006a29                iso_reset
                0x00000000c0006a46                init_percd
                0x00000000c0006b40                iso_ioctl
                0x00000000c0006b58                fs_iso9660_init
                0x00000000c0006bee                fs_iso9660_shutdown
 .text          0x00000000c0006c5e      0x6bb core/computer.32
                0x00000000c0006c5e                Computer::close(int, int, void*)
                0x00000000c0006ca3                Krnl::firstTask()
                0x00000000c0006dde                Computer::Computer()
                0x00000000c0006dde                Computer::Computer()
                0x00000000c0006e8e                Computer::setBootMessage(char const*)
                0x00000000c0006e90                Computer::detectFeatures()
                0x00000000c00070b6                Computer::displayFeatures()
                0x00000000c00070b8                Computer::rdmsr(unsigned int)
                0x00000000c00070e4                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0007120                Computer::shutdown()
                0x00000000c0007138                Computer::restart()
                0x00000000c0007150                Computer::sleep()
                0x00000000c0007164                Computer::nmiEnabled()
                0x00000000c0007170                Computer::readCMOS(unsigned char)
                0x00000000c000718e                Computer::enableNMI(bool)
                0x00000000c00071a6                Computer::open(int, int, void*)
                0x00000000c000727a                Computer::disableNMI()
                0x00000000c000728a                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072ae                Computer::handleNMI()
 *fill*         0x00000000c0007319        0x1 
 .text          0x00000000c000731a      0x1db core/gdt.32
                0x00000000c000731a                GDTEntry::setBase(unsigned int)
                0x00000000c0007336                GDTEntry::setLimit(unsigned int)
                0x00000000c0007354                GDT::GDT()
                0x00000000c0007354                GDT::GDT()
                0x00000000c000736a                GDT::addEntry(GDTEntry)
                0x00000000c000738c                GDT::getNumberOfEntries()
                0x00000000c0007394                GDT::flush()
                0x00000000c00073b6                GDT::setup()
 .text          0x00000000c00074f5       0x1d core/idle.32
                0x00000000c00074f5                idleFunction(void*)
 *fill*         0x00000000c0007512        0x2 
 .text          0x00000000c0007514      0x46c core/idt.32
                0x00000000c0007514                IDTEntry::IDTEntry(bool)
                0x00000000c0007514                IDTEntry::IDTEntry(bool)
                0x00000000c000758e                IDTEntry::setOffset(unsigned int)
                0x00000000c00075a4                IDT::IDT()
                0x00000000c00075a4                IDT::IDT()
                0x00000000c00075a6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075ae                IDT::addEntry(IDTEntry, int)
                0x00000000c00075c8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007600                IDT::flush()
                0x00000000c000761a                IDT::setup()
 .text          0x00000000c0007980      0x188 core/kheap.32
                0x00000000c0007980                sbrk
                0x00000000c0007a17                mmap
                0x00000000c0007a2d                munmap
                0x00000000c0007a43                liballoc_lock()
                0x00000000c0007a51                liballoc_unlock()
                0x00000000c0007a67                liballoc_alloc(int)
                0x00000000c0007a7f                liballoc_free(void*, int)
                0x00000000c0007a9a                realloc
                0x00000000c0007aae                malloc
                0x00000000c0007abe                free
                0x00000000c0007ace                rfree
                0x00000000c0007ade                calloc
 .text          0x00000000c0007b08       0xc2 core/main.32
                0x00000000c0007b08                KeEntryPoint
 .text          0x00000000c0007bca      0x644 core/physmgr.32
                0x00000000c0007bca                Phys::allocateDMA(unsigned long)
                0x00000000c0007cb2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007ced                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d2d                Phys::getPageState(unsigned long)
                0x00000000c0007d49                Phys::freePage(unsigned long)
                0x00000000c0007db2                Phys::allocatePage()
                0x00000000c0007e81                Phys::allocateContiguousPages(int)
                0x00000000c0007ee8                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f20                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000820e      0x273 core/pipe.32
                0x00000000c000820e                Pipe::isAtty()
                0x00000000c0008212                Pipe::~Pipe()
                0x00000000c0008212                Pipe::~Pipe()
                0x00000000c0008236                Pipe::~Pipe()
                0x00000000c000825e                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000831e                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000841a                Pipe::Pipe(int)
                0x00000000c000841a                Pipe::Pipe(int)
 *fill*         0x00000000c0008481        0x1 
 .text          0x00000000c0008482      0xab3 core/terminal.32
                0x00000000c0008482                VgaText::isAtty()
                0x00000000c0008486                VgaText::~VgaText()
                0x00000000c0008486                VgaText::~VgaText()
                0x00000000c00084aa                VgaText::~VgaText()
                0x00000000c00084d4                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00084f4                setTerminalScrollLock(bool)
                0x00000000c00084f5                doTerminalCycle()
                0x00000000c00084f6                addToTerminalCycle(VgaText*)
                0x00000000c00084f7                scrollTerminalScrollLock(int)
                0x00000000c00084f8                VgaText::updateTitle()
                0x00000000c00084fa                VgaText::load()
                0x00000000c00084fc                VgaText::updateCursor()
                0x00000000c0008512                VgaText::doANSI_SGR(int)
                0x00000000c0008586                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0008596                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085a6                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085c6                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085d2                VgaText::setTitleColour(VgaColour)
                0x00000000c00085de                VgaText::setTitle(char*)
                0x00000000c00085e0                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00085f2                VgaText::scrollScreen()
                0x00000000c0008684                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008694                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008724                VgaText::getCursorX()
                0x00000000c000872c                VgaText::getCursorY()
                0x00000000c0008734                VgaText::setCursor(int, int)
                0x00000000c000874b                setActiveTerminal(VgaText*)
                0x00000000c0008796                VgaText::clearScreen()
                0x00000000c00087e4                VgaText::setCursorX(int)
                0x00000000c00087fc                VgaText::setCursorY(int)
                0x00000000c0008814                VgaText::incrementCursor(bool)
                0x00000000c0008868                VgaText::decrementCursor(bool)
                0x00000000c000888a                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000895a                VgaText::putchar(char)
                0x00000000c0008a52                VgaText::putx(unsigned int)
                0x00000000c0008a98                VgaText::puts(char const*)
                0x00000000c0008abe                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b0a                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c58                VgaText::VgaText(char const*)
                0x00000000c0008c58                VgaText::VgaText(char const*)
                0x00000000c0008da8                VgaText::receiveKey(unsigned char)
                0x00000000c0008f34                VgaText::doUpdate()
 *fill*         0x00000000c0008f35        0x3 
 .text          0x00000000c0008f38      0x1a1 core/tss.32
                0x00000000c0008f38                TSS::TSS()
                0x00000000c0008f38                TSS::TSS()
                0x00000000c0008f48                TSS::setESP(unsigned long)
                0x00000000c0008f5c                TSS::flush()
                0x00000000c0008f7c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c00090d9        0x1 
 .text          0x00000000c00090da      0x4ca core/unixfile.32
                0x00000000c00090da                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0009130                ReservedFilename::isAtty()
                0x00000000c000914c                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091aa                UnixFile::getFileDescriptor()
                0x00000000c00091b2                UnixFile::UnixFile(int)
                0x00000000c00091b2                UnixFile::UnixFile(int)
                0x00000000c0009366                ReservedFilename::ReservedFilename(int)
                0x00000000c0009366                ReservedFilename::ReservedFilename(int)
                0x00000000c0009398                UnixFile::~UnixFile()
                0x00000000c0009398                UnixFile::~UnixFile()
                0x00000000c0009434                UnixFile::~UnixFile()
                0x00000000c000945c                ReservedFilename::~ReservedFilename()
                0x00000000c000945c                ReservedFilename::~ReservedFilename()
                0x00000000c0009480                ReservedFilename::~ReservedFilename()
                0x00000000c00094a7                KeGetFileFromDescriptor(int)
 .text          0x00000000c00095a4     0x1218 core/virtmgr.32
                0x00000000c00095a4                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095de                Virt::getPageState(unsigned long)
                0x00000000c0009601                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009726                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009749                Virt::swapIDToSector(unsigned long)
                0x00000000c000975f                Virt::allocateSwapfilePage()
                0x00000000c00097df                Virt::virtualMemorySetup()
                0x00000000c0009830                Virt::setupPageSwapping(int)
                0x00000000c00098a2                VAS::setCPUSpecific(unsigned long)
                0x00000000c00098a4                VAS::VAS(VAS*)
                0x00000000c00098a4                VAS::VAS(VAS*)
                0x00000000c00098d2                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009900                VAS::getPageTableEntry(unsigned long)
                0x00000000c000991f                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a5c                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a80                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a9a                VAS::reflagRange(unsigned long, int, unsigned long, unsigned long)
                0x00000000c0009adc                VAS::VAS()
                0x00000000c0009adc                VAS::VAS()
                0x00000000c0009b46                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b7a                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009ba6                VAS::~VAS()
                0x00000000c0009ba6                VAS::~VAS()
                0x00000000c0009d14                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e18                VAS::allocatePages(int, int)
                0x00000000c0009f0e                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009f66                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a05c                VAS::VAS(bool)
                0x00000000c000a05c                VAS::VAS(bool)
                0x00000000c000a2a6                VAS::evict(unsigned long)
                0x00000000c000a384                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a51e                VAS::allocateSharedMemoryWithKernel(unsigned long, unsigned long*)
                0x00000000c000a592                VAS::freeSharedMemoryWithKernel(unsigned long, unsigned long)
                0x00000000c000a5be                VAS::scanForEviction()
                0x00000000c000a6c1                mapVASFirstTime
 .text          0x00000000c000a7bc       0x5f coreobjs/c++.32
                0x00000000c000a7bc                __cxa_atexit
                0x00000000c000a7bf                __cxa_finalize
                0x00000000c000a7c0                __stack_chk_fail
                0x00000000c000a7f6                __cxa_pure_virtual
                0x00000000c000a807                operator new[](unsigned long)
                0x00000000c000a80c                operator delete(void*, unsigned long)
                0x00000000c000a811                operator delete[](void*)
                0x00000000c000a816                operator delete[](void*, unsigned long)
 .text          0x00000000c000a81b      0x254 dbg/kconsole.32
                0x00000000c000a81b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a8bb                Dbg::logc(char)
                0x00000000c000a8db                Dbg::logs(char*)
                0x00000000c000a8fa                Dbg::logWriteInt(unsigned int)
                0x00000000c000a918                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a939                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000aa6f        0x1 
 .text          0x00000000c000aa70      0x2d4 dbg/usban.32
                0x00000000c000aa70                KiUbsanPrintDetails(char const*, void*)
                0x00000000c000aadc                __ubsan_handle_type_mismatch_v1
                0x00000000c000abb8                __ubsan_handle_pointer_overflow
                0x00000000c000abe4                __ubsan_handle_out_of_bounds
                0x00000000c000ac10                __ubsan_handle_add_overflow
                0x00000000c000ac3c                __ubsan_handle_load_invalid_value
                0x00000000c000ac68                __ubsan_handle_divrem_overflow
                0x00000000c000ac94                __ubsan_handle_mul_overflow
                0x00000000c000acc0                __ubsan_handle_sub_overflow
                0x00000000c000acec                __ubsan_handle_shift_out_of_bounds
                0x00000000c000ad18                __ubsan_handle_negate_overflow
 .text          0x00000000c000ad44      0xcb6 fs/vfs.32
                0x00000000c000ad44                File::read(unsigned long long, void*, int*)
                0x00000000c000ad9c                File::write(unsigned long long, void*, int*)
                0x00000000c000adf4                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ae4c                Directory::write(unsigned long long, void*, int*)
                0x00000000c000ae7a                File::isAtty()
                0x00000000c000ae7e                Directory::isAtty()
                0x00000000c000ae82                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ae88                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ae8e                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ae94                File::~File()
                0x00000000c000ae94                File::~File()
                0x00000000c000aeb8                File::~File()
                0x00000000c000aee2                Directory::~Directory()
                0x00000000c000aee2                Directory::~Directory()
                0x00000000c000af06                Directory::~Directory()
                0x00000000c000af30                Filesystem::Filesystem()
                0x00000000c000af30                Filesystem::Filesystem()
                0x00000000c000af54                Filesystem::~Filesystem()
                0x00000000c000af54                Filesystem::~Filesystem()
                0x00000000c000af62                Filesystem::~Filesystem()
                0x00000000c000af86                Fs::getcwd(Process*, char*, int)
                0x00000000c000afb0                Fs::initVFS()
                0x00000000c000afda                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b190                File::File(char const*, Process*)
                0x00000000c000b190                File::File(char const*, Process*)
                0x00000000c000b24c                File::open(FileOpenMode)
                0x00000000c000b2aa                File::close()
                0x00000000c000b30a                File::seek(unsigned long long)
                0x00000000c000b360                File::truncate(unsigned long long)
                0x00000000c000b3b6                File::tell(unsigned long long*)
                0x00000000c000b406                File::rewind()
                0x00000000c000b41a                File::unlink()
                0x00000000c000b466                File::rename(char const*)
                0x00000000c000b4b4                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b510                File::exists()
                0x00000000c000b54e                File::stat(unsigned long long*, bool*)
                0x00000000c000b5af                Fs::setcwd(Process*, char*)
                0x00000000c000b70c                Directory::Directory(char const*, Process*)
                0x00000000c000b70c                Directory::Directory(char const*, Process*)
                0x00000000c000b7c8                Directory::open()
                0x00000000c000b824                Directory::close()
                0x00000000c000b884                Directory::unlink()
                0x00000000c000b8d0                Directory::rename(char const*)
                0x00000000c000b91e                Directory::exists()
                0x00000000c000b95c                Directory::read(dirent*)
                0x00000000c000b9a8                Directory::create()
                0x00000000c000b9f4                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b9fa        0x2 
 .text          0x00000000c000b9fc       0x86 hal/bus.32
                0x00000000c000b9fc                Bus::Bus(char const*)
                0x00000000c000b9fc                Bus::Bus(char const*)
                0x00000000c000ba34                Bus::~Bus()
                0x00000000c000ba34                Bus::~Bus()
                0x00000000c000ba58                Bus::~Bus()
 .text          0x00000000c000ba82       0x96 hal/buzzer.32
                0x00000000c000ba82                beepThread(void*)
                0x00000000c000babf                Krnl::beep(int, int, bool)
 .text          0x00000000c000bb18      0x45f hal/clock.32
                0x00000000c000bb18                User::loadClockSettings(int)
                0x00000000c000bb6a                Clock::Clock(char const*)
                0x00000000c000bb6a                Clock::Clock(char const*)
                0x00000000c000bba0                Clock::~Clock()
                0x00000000c000bba0                Clock::~Clock()
                0x00000000c000bbc4                Clock::~Clock()
                0x00000000c000bbee                Clock::timeInSecondsLocal()
                0x00000000c000bc36                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000bc8f                datetimeToSeconds(datetime_t)
                0x00000000c000bdae                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000be0e                secondsToDatetime(unsigned long long)
                0x00000000c000bf52                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bf77        0x1 
 .text          0x00000000c000bf78      0x464 hal/device.32
                0x00000000c000bf78                Device::hibernate()
                0x00000000c000bf7a                Device::wake()
                0x00000000c000bf7c                Device::detect()
                0x00000000c000bf7e                Device::disableLegacy()
                0x00000000c000bf80                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bf82                DriverlessDevice::close(int, int, void*)
                0x00000000c000bf86                DriverlessDevice::detect()
                0x00000000c000bf88                DriverlessDevice::open(int, int, void*)
                0x00000000c000bf9c                Device::~Device()
                0x00000000c000bf9c                Device::~Device()
                0x00000000c000bfaa                Device::~Device()
                0x00000000c000bfd2                Device::findAndLoadDriver()
                0x00000000c000bfe0                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000c006                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000c046                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c070                Device::getParent()
                0x00000000c000c07c                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c09a                Device::addChild(Device*)
                0x00000000c000c0de                Device::removeAllChildren()
                0x00000000c000c124                Device::hibernateAll()
                0x00000000c000c154                Device::wakeAll()
                0x00000000c000c184                Device::detectAll()
                0x00000000c000c1b4                Device::disableLegacyAll()
                0x00000000c000c1b6                Device::loadDriversForAll()
                0x00000000c000c1b8                Device::closeAll()
                0x00000000c000c1ee                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c224                Device::setName(char const*)
                0x00000000c000c232                Device::Device(char const*)
                0x00000000c000c232                Device::Device(char const*)
                0x00000000c000c32e                Device::getName()
                0x00000000c000c338                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c338                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c36e                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c3b2                getDevicesOfType(DeviceType)
 .text          0x00000000c000c3dc       0x86 hal/diskctrl.32
                0x00000000c000c3dc                HardDiskController::HardDiskController(char const*)
                0x00000000c000c3dc                HardDiskController::HardDiskController(char const*)
                0x00000000c000c414                HardDiskController::~HardDiskController()
                0x00000000c000c414                HardDiskController::~HardDiskController()
                0x00000000c000c438                HardDiskController::~HardDiskController()
 .text          0x00000000c000c462       0xe2 hal/diskphys.32
                0x00000000c000c462                PhysicalDisk::eject()
                0x00000000c000c466                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c466                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c4ce                PhysicalDisk::startCache()
                0x00000000c000c4f6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c4f6                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c51a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c544        0x0 hal/fpu.32
 .text          0x00000000c000c544      0x359 hal/intctrl.32
                0x00000000c000c544                int_handler
                0x00000000c000c5ce                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c618                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c74c                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c780                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c7fe                setupINTS()
                0x00000000c000c85b                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c89d        0x1 
 .text          0x00000000c000c89e      0x8be hal/keybrd.32
                0x00000000c000c89e                startGUI(void*)
                0x00000000c000c90c                startGUIVESA(void*)
                0x00000000c000c97a                sendKeyToTerminal(unsigned char)
                0x00000000c000ca55                sendKeyboardToken(KeyboardToken)
                0x00000000c000cf3f                clearInternalKeybuffer(VgaText*)
                0x00000000c000cf74                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000d0d2                Keyboard::Keyboard(char const*)
                0x00000000c000d0d2                Keyboard::Keyboard(char const*)
                0x00000000c000d10e                Keyboard::~Keyboard()
                0x00000000c000d10e                Keyboard::~Keyboard()
                0x00000000c000d132                Keyboard::~Keyboard()
 .text          0x00000000c000d15c      0x3f8 hal/logidisk.32
                0x00000000c000d15c                LogicalDisk::close(int, int, void*)
                0x00000000c000d160                LogicalDisk::~LogicalDisk()
                0x00000000c000d160                LogicalDisk::~LogicalDisk()
                0x00000000c000d184                LogicalDisk::~LogicalDisk()
                0x00000000c000d1ae                LogicalDisk::open(int, int, void*)
                0x00000000c000d1c2                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d1fa                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d240                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d240                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d300                LogicalDisk::assignDriveLetter()
                0x00000000c000d3ba                LogicalDisk::mount()
                0x00000000c000d402                LogicalDisk::unmount()
                0x00000000c000d412                LogicalDisk::eject()
                0x00000000c000d426                LogicalDisk::unassignDriveLetter()
                0x00000000c000d47c                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d4e8                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000d554       0x86 hal/mouse.32
                0x00000000c000d554                Mouse::Mouse(char const*)
                0x00000000c000d554                Mouse::Mouse(char const*)
                0x00000000c000d58c                Mouse::~Mouse()
                0x00000000c000d58c                Mouse::~Mouse()
                0x00000000c000d5b0                Mouse::~Mouse()
 .text          0x00000000c000d5da       0x90 hal/nic.32
                0x00000000c000d5da                NIC::getMAC()
                0x00000000c000d5e0                NIC::write(int, unsigned char*, int*)
                0x00000000c000d5e6                NIC::NIC(char const*)
                0x00000000c000d5e6                NIC::NIC(char const*)
                0x00000000c000d61c                NIC::~NIC()
                0x00000000c000d61c                NIC::~NIC()
                0x00000000c000d640                NIC::~NIC()
 .text          0x00000000c000d66a      0x33b hal/partition.32
                0x00000000c000d66a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d712                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d9a5        0x3 
 .text          0x00000000c000d9a8       0x86 hal/serial.32
                0x00000000c000d9a8                Serial::Serial(char const*)
                0x00000000c000d9a8                Serial::Serial(char const*)
                0x00000000c000d9e0                Serial::~Serial()
                0x00000000c000d9e0                Serial::~Serial()
                0x00000000c000da04                Serial::~Serial()
 *fill*         0x00000000c000da2e        0x2 
 .text          0x00000000c000da30      0x234 hal/timer.32
                0x00000000c000da30                Timer::Timer(char const*)
                0x00000000c000da30                Timer::Timer(char const*)
                0x00000000c000da68                Timer::~Timer()
                0x00000000c000da68                Timer::~Timer()
                0x00000000c000da8c                Timer::~Timer()
                0x00000000c000dab6                Timer::read()
                0x00000000c000dac1                setupTimer(int)
                0x00000000c000dafc                timerHandler(unsigned int)
 .text          0x00000000c000dc64      0x444 hal/vcache.32
                0x00000000c000dc64                VCache::VCache(PhysicalDisk*)
                0x00000000c000dc64                VCache::VCache(PhysicalDisk*)
                0x00000000c000ddd4                VCache::invalidateReadBuffer()
                0x00000000c000dde4                VCache::writeWriteBuffer()
                0x00000000c000de30                VCache::~VCache()
                0x00000000c000de30                VCache::~VCache()
                0x00000000c000de88                VCache::~VCache()
                0x00000000c000deb0                VCache::write(unsigned long long, int, void*)
                0x00000000c000df9e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000e0a8      0x4c7 hal/video.32
                0x00000000c000e0a8                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000e0f4                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000e164                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000e1e2                Video::clearScreen(unsigned int)
                0x00000000c000e216                Video::putpixel(int, int, unsigned int)
                0x00000000c000e224                Video::readPixelApprox(int, int)
                0x00000000c000e238                Video::Video(char const*)
                0x00000000c000e238                Video::Video(char const*)
                0x00000000c000e26e                Video::~Video()
                0x00000000c000e26e                Video::~Video()
                0x00000000c000e292                Video::~Video()
                0x00000000c000e2bc                Video::isMonochrome()
                0x00000000c000e2c8                Video::getWidth()
                0x00000000c000e2d4                Video::getHeight()
                0x00000000c000e2e0                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e39c                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e504                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e56f        0x1 
 .text          0x00000000c000e570     0x138b hw/acpi.32
                0x00000000c000e570                ACPI::close(int, int, void*)
                0x00000000c000e624                findRSDP()
                0x00000000c000e6bc                loadACPITables(unsigned char*)
                0x00000000c000e928                findRSDT(unsigned char*)
                0x00000000c000ea80                findDataTable(unsigned char*, char*)
                0x00000000c000eb00                scanMADT()
                0x00000000c000efb8                ACPI::ACPI()
                0x00000000c000efb8                ACPI::ACPI()
                0x00000000c000f00c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000f108                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000f1d4                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000f1dc                ACPI::detectPCI()
                0x00000000c000f3fc                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f444                ACPI::sleep()
                0x00000000c000f460                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f8fb        0x1 
 .text          0x00000000c000f8fc      0xbc5 hw/cpu.32
                0x00000000c000f8fc                CPU::close(int, int, void*)
                0x00000000c000f900                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f91c                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f934                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f9a8                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000fa2c                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000fa5a                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000fa88                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000fab6                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000fae4                CPU::CPU()
                0x00000000c000fae4                CPU::CPU()
                0x00000000c000fb72                CPU::displayFeatures()
                0x00000000c000fb74                CPU::detectFeatures()
                0x00000000c0010248                CPU::setupSMEP()
                0x00000000c0010254                CPU::setupUMIP()
                0x00000000c001025e                CPU::setupTSC()
                0x00000000c0010268                CPU::setupLargePages()
                0x00000000c0010272                CPU::setupPAT()
                0x00000000c00102ae                CPU::setupMTRR()
                0x00000000c00102b0                CPU::setupGlobalPages()
                0x00000000c00102ba                CPU::allowUsermodeDataAccess()
                0x00000000c00102cc                CPU::prohibitUsermodeDataAccess()
                0x00000000c00102de                CPU::setupSMAP()
                0x00000000c00102ec                CPU::setupFeatures()
                0x00000000c00103b8                CPU::open(int, int, void*)
 .text          0x00000000c00104c1       0xdf krnl/bootmsg.32
                0x00000000c00104c1                KeDisplaySplashScreen()
                0x00000000c001053d                KeSetBootMessage(char const*)
 .text          0x00000000c00105a0       0x1d krnl/compat.32
                0x00000000c00105a0                Krnl::handlePowerButton()
                0x00000000c00105b0                Krnl::handleSleepButton()
 *fill*         0x00000000c00105bd        0x1 
 .text          0x00000000c00105be      0x5bf krnl/env.32
                0x00000000c00105be                EnvVarContainer::getEnv(char const*)
                0x00000000c00105fc                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00106be                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00106c0                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00108e4                EnvVarContainer::__loadSystem()
                0x00000000c00108fe                EnvVarContainer::__loadUser()
                0x00000000c0010900                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010900                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010922                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010922                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010952                KeGetEnv(Process*, char const*)
                0x00000000c00109b7                KeSetEnvSystem(char const*, char const*)
                0x00000000c00109d1                KeSetEnvUser(char const*, char const*)
                0x00000000c00109f0                KeSetEnvProcess(Process*, char const*, char const*)
                0x00000000c0010a03                KeDeleteEnvSystem(char const*)
                0x00000000c0010a04                KeDeleteEnvUser(char const*)
                0x00000000c0010a05                KeDeleteEnvProcess(Process*, char const*)
                0x00000000c0010a06                KeNewProcessEnv(Process*)
                0x00000000c0010a28                KeCopyProcessEnv(Process*, Process*)
                0x00000000c0010a74                KeLoadSystemEnv()
                0x00000000c0010aa2                KeLoadUserEnv()
                0x00000000c0010ac8                KeFlushEnv()
                0x00000000c0010ac9                KeGetProcessTotalEnvCount(Process*)
                0x00000000c0010ae9                KeGetProcessEnvPair(Process*, int)
 .text          0x00000000c0010b7d       0x94 krnl/inlines.32
                0x00000000c0010b7d                CPU::current()
                0x00000000c0010b89                operator new(unsigned long)
                0x00000000c0010b8e                operator delete(void*)
                0x00000000c0010b93                disableIRQs()
                0x00000000c0010b95                enableIRQs()
                0x00000000c0010b97                lockScheduler()
                0x00000000c0010b9f                unlockScheduler()
                0x00000000c0010bae                lockStuff()
                0x00000000c0010bbc                unlockStuff()
                0x00000000c0010bf6                Virt::getAKernelVAS()
                0x00000000c0010bfc                __not_memcpy
 .text          0x00000000c0010c11        0xc krnl/panic.32
                0x00000000c0010c11                KePanic(char const*)
 .text          0x00000000c0010c1d      0x142 krnl/powctrl.32
                0x00000000c0010c1d                KePowerThread(void*)
                0x00000000c0010c4b                KeChangePowerSettings(PowerSettings)
                0x00000000c0010c61                KeUserIOReceived()
                0x00000000c0010c6c                KeHandlePowerButton()
                0x00000000c0010ca1                KeHandleSleepButton()
                0x00000000c0010cd6                KeSetupPowerManager()
 .text          0x00000000c0010d5f       0x9d krnl/random.32
                0x00000000c0010d5f                KeRand()
                0x00000000c0010da1                KeSeedRand(unsigned int)
                0x00000000c0010dca                KeInitRand()
 .text          0x00000000c0010dfc      0x1bc krnl/resolve.32
                0x00000000c0010dfc                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010fb8      0x322 krnl/signal.32
                0x00000000c0010fb8                KiSigKill(int)
                0x00000000c0010fcc                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010fcd                KiDefaultSignalHandlerPause(int)
                0x00000000c0010ff9                KiDefaultSignalHandlerResume(int)
                0x00000000c0011025                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001102a                KeInitSignals()
                0x00000000c001107c                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00110b2                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c001112f                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0011226                KiCheckSignalZ
                0x00000000c0011268                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c00112a3                KiFinishSignalZ
 .text          0x00000000c00112da      0xc61 krnl/syscalls.32
                0x00000000c00112da                SysSeekDir(regs*)
                0x00000000c00112df                SysTellDir(regs*)
                0x00000000c00112e4                SysVerify(regs*)
                0x00000000c00112ee                SysGetArgc(regs*)
                0x00000000c0011302                SysTTYName(regs*)
                0x00000000c001130a                SysFormatDisk(regs*)
                0x00000000c0011381                SysSetDiskVolumeLabel(regs*)
                0x00000000c00113d5                SysGetDiskVolumeLabel(regs*)
                0x00000000c001142e                SysShutdown(regs*)
                0x00000000c001148c                SysRealpath(regs*)
                0x00000000c00114d1                SysReadDir(regs*)
                0x00000000c0011551                SysIsATTY(regs*)
                0x00000000c00115ab                SysSeek(regs*)
                0x00000000c0011602                SysTell(regs*)
                0x00000000c001166f                SysSize(regs*)
                0x00000000c00116e2                SysSizeFromFilename(regs*)
                0x00000000c0011793                SysClose(regs*)
                0x00000000c00117f3                SysOpenDir(regs*)
                0x00000000c0011870                SysMakeDir(regs*)
                0x00000000c00118de                SysCloseDir(regs*)
                0x00000000c0011932                SysWait(regs*)
                0x00000000c0011953                SysNotImpl(regs*)
                0x00000000c001196e                SysPanic(regs*)
                0x00000000c0011989                SysRmdir(regs*)
                0x00000000c00119ee                SysUnlink(regs*)
                0x00000000c0011a53                SysGetArgv(regs*)
                0x00000000c0011aa0                SysUSleep(regs*)
                0x00000000c0011ac9                SysSpawn(regs*)
                0x00000000c0011b3c                SysGetEnv(regs*)
                0x00000000c0011bed                SysSetFatAttrib(regs*)
                0x00000000c0011c60                SysPipe(regs*)
                0x00000000c0011ca5                SysGetUnixTime(regs*)
                0x00000000c0011cb9                string_ends_with(char const*, char const*)
                0x00000000c0011d01                SysOpen(regs*)
                0x00000000c0011ef9                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011f3b        0x1 
 .text          0x00000000c0011f3c      0x159 net/ethernet.32
                0x00000000c0011f3c                KeSwitchEndian16(unsigned short)
                0x00000000c0011f60                KeSwitchEndian32(unsigned int)
                0x00000000c0011f90                EthernetCRC32(unsigned char*, int)
                0x00000000c0012034                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0012095      0xd56 reg/cm.32
                0x00000000c0012095                CmOpen(char const*)
                0x00000000c00121b3                CmClose(Reghive_Tag*)
                0x00000000c00121c9                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012205                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c001227c                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c00122bb                CmGetNext(Reghive_Tag*, int)
                0x00000000c00122ed                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012329                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0012351                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0012372                CmExpand(Reghive_Tag*, int)
                0x00000000c00123ed                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012473                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012567                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c00126a3                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012704                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012734                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c001276b                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012795                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c00127d5                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012879                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c00128a7                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0012a45                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c0012a92                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012b0c                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c0012b5f                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012c23                zStrtok(char*, char const*)
                0x00000000c0012c95                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0012d16                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0012db9                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0012deb      0x52a reg/registry.32
                0x00000000c0012deb                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012f5c                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00130b1                Reg::getLine(char*, char*, char*)
                0x00000000c00130e8                Reg::readInt(char*, char*, int*)
                0x00000000c00131d6                Reg::readString(char*, char*, char*, int)
                0x00000000c0013257                Reg::readBool(char*, char*, bool*)
                0x00000000c001327c                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00132a8                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00132d4                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0013315       0x36 sys/eject.32
                0x00000000c0013315                SysEject(regs*)
 .text          0x00000000c001334b       0x18 sys/exit.32
                0x00000000c001334b                SysExit(regs*)
 .text          0x00000000c0013363       0x1f sys/getcwd.32
                0x00000000c0013363                SysGetCwd(regs*)
 .text          0x00000000c0013382        0xc sys/getpid.32
                0x00000000c0013382                SysGetPID(regs*)
 .text          0x00000000c001338e       0x1a sys/getramdata.32
                0x00000000c001338e                SysGetRAMData(regs*)
 .text          0x00000000c00133a8       0x82 sys/getvgaptr.32
                0x00000000c00133a8                SysGetVGAPtr(regs*)
 *fill*         0x00000000c001342a        0x2 
 .text          0x00000000c001342c       0xb9 sys/kill.32
                0x00000000c001342c                SysKill(regs*)
 .text          0x00000000c00134e5       0xa8 sys/loaddll.32
                0x00000000c00134e5                SysLoadDLL(regs*)
 .text          0x00000000c001358d       0x68 sys/read.32
                0x00000000c001358d                SysRead(regs*)
 .text          0x00000000c00135f5       0x29 sys/registersignal.32
                0x00000000c00135f5                SysRegisterSignal(regs*)
 .text          0x00000000c001361e      0x19c sys/registry.32
                0x00000000c001361e                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013695                SysRegistryReadExtent(regs*)
                0x00000000c00136dd                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013705                SysRegistryEnterDirectory(regs*)
                0x00000000c001372d                SysRegistryGetNext(regs*)
                0x00000000c0013755                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001378f                SysRegistryOpen(regs*)
                0x00000000c00137a3                SysRegistryClose(regs*)
 .text          0x00000000c00137ba       0x55 sys/sbrk.32
                0x00000000c00137ba                SysSbrk(regs*)
 .text          0x00000000c001380f       0x1c sys/setcwd.32
                0x00000000c001380f                SysSetCwd(regs*)
 .text          0x00000000c001382b       0x96 sys/settime.32
                0x00000000c001382b                SysSetTime(regs*)
 .text          0x00000000c00138c1       0x4a sys/timezone.32
                0x00000000c00138c1                SysTimezone(regs*)
 .text          0x00000000c001390b       0xfc sys/truncate.32
                0x00000000c001390b                SysTruncate(regs*)
 .text          0x00000000c0013a07       0x68 sys/write.32
                0x00000000c0013a07                SysWrite(regs*)
 .text          0x00000000c0013a6f       0x62 sys/wsbe.32
                0x00000000c0013a6f                SysWsbe(regs*)
 .text          0x00000000c0013ad1       0x25 sys/yield.32
                0x00000000c0013ad1                SysYield(regs*)
 .text          0x00000000c0013af6     0x11e6 thr/elf.32
                0x00000000c0013af6                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0013d84                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013f96                Thr::runtimeReferenceHelper()
                0x00000000c0013fa9                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013ff8                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00142b6                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00149ef                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0014a21                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0014a58                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0014a72                Thr::loadDLL(char const*, bool)
                0x00000000c0014ca3                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0014cdc     0x13d9 thr/prcssthr.32
                0x00000000c0014cdc                userModeEntryPoint(void*)
                0x00000000c0014d04                changeTSS
                0x00000000c0014d34                switchToThread(ThreadControlBlock*)
                0x00000000c0014de4                Process::addArgs(char**)
                0x00000000c0014e50                Process::Process(char const*, Process*, char**)
                0x00000000c0014e50                Process::Process(char const*, Process*, char**)
                0x00000000c001505c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001505c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015230                taskStartupFunction
                0x00000000c001523c                Semaphore::Semaphore(int)
                0x00000000c001523c                Semaphore::Semaphore(int)
                0x00000000c001526c                Mutex::Mutex()
                0x00000000c001526c                Mutex::Mutex()
                0x00000000c0015280                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001538c                Process::createUserThread()
                0x00000000c00153ac                setupMultitasking(void (*)())
                0x00000000c00154d0                schedule()
                0x00000000c0015564                Semaphore::tryAcquire()
                0x00000000c0015638                Semaphore::assertLocked(char const*)
                0x00000000c00156bc                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00156e4                blockTask(TaskState)
                0x00000000c001571c                waitTask(int, int*, int)
                0x00000000c0015760                milliTenthSleepUntil(unsigned int)
                0x00000000c0015800                milliTenthSleep(unsigned int)
                0x00000000c0015814                sleep(unsigned int)
                0x00000000c0015830                Semaphore::acquire()
                0x00000000c00158f8                taskReturned
                0x00000000c001593c                Thr::processFromPID(int)
                0x00000000c00159e8                unblockTask(ThreadControlBlock*)
                0x00000000c0015a94                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015d68                cleanerTaskFunction(void*)
                0x00000000c0015e70                terminateTask(int)
                0x00000000c0015f5c                Thr::terminateFromIRQ(int)
                0x00000000c0015f6c                Semaphore::release()
 .text          0x00000000c00160b5      0xc27 vm86/vm8086.32
                0x00000000c00160b5                Vm::inbv(unsigned short)
                0x00000000c00160c8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00160fe                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001610e                Vm::getSegment(unsigned int)
                0x00000000c0016116                Vm::getOffset(unsigned int)
                0x00000000c001611b                Vm::mainloop2()
                0x00000000c0016155                Vm::mainVm8086Loop(void*)
                0x00000000c0016165                Vm::mainloop3(unsigned long)
                0x00000000c001618b                Vm::initialise8086()
                0x00000000c00161ce                Vm::finish8086()
                0x00000000c001622f                Vm::getOutput8086(unsigned char*)
                0x00000000c0016254                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001630d                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00164ab                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016544                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016555                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016567                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016578                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001658d                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00165a3                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00165b8                Vm::faultHandler(regs*)
 .text          0x00000000c0016cdc      0xaf0 arch/i386/hal.32
                0x00000000c0016cdc                noCopro(unsigned long)
                0x00000000c0016cdd                nmiHandler(regs*, void*)
                0x00000000c0016cf6                doubleFault(regs*, void*)
                0x00000000c0016d0f                displayDebugInfo(regs*)
                0x00000000c0017094                HalSystemIdle()
                0x00000000c0017110                displayProgramFault(char const*)
                0x00000000c001715c                gpFault(regs*, void*)
                0x00000000c00171c3                pgFault(regs*, void*)
                0x00000000c001724c                otherISRHandler(regs*, void*)
                0x00000000c0017280                opcodeFault(regs*, void*)
                0x00000000c0017303                i386SaveCoprocessor(void*)
                0x00000000c0017317                i386LoadCoprocessor(void*)
                0x00000000c001732b                x87EmulHandler(regs*, void*)
                0x00000000c00173c8                HalInitialiseCoprocessor()
                0x00000000c0017476                HalPanic(char const*)
                0x00000000c001758a                HalQueryPerformanceCounter()
                0x00000000c00175a5                HalInitialise()
                0x00000000c001775b                HalMakeBeep(int)
                0x00000000c0017795                HalGetRand()
                0x00000000c0017798                HalEndOfInterrupt(int)
                0x00000000c00177c9                HalRestart()
                0x00000000c00177ca                HalShutdown()
                0x00000000c00177cb                HalSleep()
 .text          0x00000000c00177cc      0x2dc arch/i386/pic.32
                0x00000000c00177cc                picIoWait()
                0x00000000c00177d4                picDisable()
                0x00000000c0017808                picGetIRQReg(int)
                0x00000000c0017884                picOpen()
                0x00000000c0017a08                picEOI(int)
 .text          0x00000000c0017aa8      0x674 arch/i386/rtc.32
                0x00000000c0017aa8                RTC::open(int, int, void*)
                0x00000000c0017aac                RTC::close(int, int, void*)
                0x00000000c0017ab0                RTC::timeInSecondsUTC()
                0x00000000c0017ac2                RTC::timeInDatetimeUTC()
                0x00000000c0017ae8                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0017b26                RTC::~RTC()
                0x00000000c0017b26                RTC::~RTC()
                0x00000000c0017b4a                RTC::~RTC()
                0x00000000c0017b74                RTC::get_update_in_progress_flag()
                0x00000000c0017b8e                RTC::completeRTCRefresh()
                0x00000000c0017e6e                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001801c                rtcIRQHandler(regs*, void*)
                0x00000000c0018062                RTC::RTC()
                0x00000000c0018062                RTC::RTC()
 .text          0x00000000c001811c      0x1f4 arch/i386/vga.32
                0x00000000c001811c                HalConsoleScroll(int, int)
                0x00000000c0018224                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0018288                HalConsoleCursorUpdate(int, int)
 .text          0x00000000c0018310     0x14cf fs/fat/vfslink.32
                0x00000000c0018310                FAT::getName()
                0x00000000c0018318                FAT::tell(void*, unsigned long long*)
                0x00000000c0018354                FAT::stat(void*, unsigned long long*)
                0x00000000c0018390                FAT::~FAT()
                0x00000000c0018390                FAT::~FAT()
                0x00000000c00183b4                FAT::~FAT()
                0x00000000c00183dc                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018480                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018544                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018728                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018944                FAT::allocateSwapfile(char const*, int)
                0x00000000c0018b04                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0018c74                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0018cd4                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0018d34                FAT::close(void*)
                0x00000000c0018d88                FAT::closeDir(void*)
                0x00000000c0018ddc                FAT::truncate(void*, unsigned long long)
                0x00000000c0018e48                FAT::seek(void*, unsigned long long)
                0x00000000c0018ea0                fatWrapperReadDisk
                0x00000000c0018ee0                fatWrapperWriteDisk
                0x00000000c0018f20                fatWrapperIoctl
                0x00000000c001903c                FAT::FAT()
                0x00000000c001903c                FAT::FAT()
                0x00000000c0019094                FAT::fixFilepath(char*)
                0x00000000c00190d4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019248                FAT::openDir(char const*, void**)
                0x00000000c00192f8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00193f0                FAT::unlink(char const*)
                0x00000000c0019470                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019624                FAT::rename(char const*, char const*)
                0x00000000c00196f0                FAT::mkdir(char const*)
                0x00000000c0019770                FAT::exists(char const*)
 *fill*         0x00000000c00197df        0x1 
 .text          0x00000000c00197e0       0x94 fs/iso9660/helper.32
                0x00000000c00197e0                isoReadDiscSectorHelper
                0x00000000c001983c                iso_kprintf
                0x00000000c0019858                iso_kprintfd
 .text          0x00000000c0019874      0x71c fs/iso9660/vfslink.32
                0x00000000c0019874                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001987a                ISO9660::truncate(void*, unsigned long long)
                0x00000000c0019880                ISO9660::getName()
                0x00000000c0019886                ISO9660::closeDir(void*)
                0x00000000c0019890                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019896                ISO9660::unlink(char const*)
                0x00000000c001989c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c00198a2                ISO9660::rename(char const*, char const*)
                0x00000000c00198a8                ISO9660::mkdir(char const*)
                0x00000000c00198ae                ISO9660::~ISO9660()
                0x00000000c00198ae                ISO9660::~ISO9660()
                0x00000000c00198d2                ISO9660::~ISO9660()
                0x00000000c00198fa                ISO9660::exists(char const*)
                0x00000000c001990e                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00199f4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0019a3c                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019a7e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019abc                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019b0e                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019c50                ISO9660::close(void*)
                0x00000000c0019c80                ISO9660::openDir(char const*, void**)
                0x00000000c0019d5a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019e77                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0019ef6                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0019f68                ISO9660::ISO9660()
                0x00000000c0019f68                ISO9660::ISO9660()
 .text          0x00000000c0019f90      0x26c hal/sound/sndcard.32
                0x00000000c0019f90                SoundCard::beginPlayback()
                0x00000000c0019f9e                SoundCard::stopPlayback()
                0x00000000c0019fac                SoundCard::SoundCard(char const*)
                0x00000000c0019fac                SoundCard::SoundCard(char const*)
                0x00000000c001a04a                SoundCard::~SoundCard()
                0x00000000c001a04a                SoundCard::~SoundCard()
                0x00000000c001a06e                SoundCard::~SoundCard()
                0x00000000c001a098                SoundCard::configureRates(int, int, int)
                0x00000000c001a0c8                SoundCard::getSamples16(int, short*)
                0x00000000c001a124                SoundCard::getSamples32(int, int*)
                0x00000000c001a1aa                SoundCard::addChannel(SoundPort*)
                0x00000000c001a1e8                SoundCard::removeChannel(int)
 .text          0x00000000c001a1fc      0x38a hal/sound/sndport.32
                0x00000000c001a1fc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a1fc                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001a288                SoundPort::~SoundPort()
                0x00000000c001a288                SoundPort::~SoundPort()
                0x00000000c001a2bc                SoundPort::unpause()
                0x00000000c001a2c8                SoundPort::pause()
                0x00000000c001a2d4                SoundPort::getBufferUsed()
                0x00000000c001a2dc                SoundPort::getBufferSize()
                0x00000000c001a2e4                SoundPort::buffer16(short*, int)
                0x00000000c001a370                SoundPort::buffer32(int*, int)
                0x00000000c001a3fc                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001a4c8                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001a586        0x0 hw/bus/isa.32
 .text          0x00000000c001a586      0xbb7 hw/bus/pci.32
                0x00000000c001a586                PCI::open(int, int, void*)
                0x00000000c001a5a4                PCI::close(int, int, void*)
                0x00000000c001a5a8                PCI::PCI()
                0x00000000c001a5a8                PCI::PCI()
                0x00000000c001a640                PCI::readBAR8(unsigned int, int)
                0x00000000c001a65c                PCI::readBAR16(unsigned int, int)
                0x00000000c001a67a                PCI::readBAR32(unsigned int, int)
                0x00000000c001a696                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001a6b6                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001a6d8                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001a6f8                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a76e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a818                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a83c                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001a864                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001a8ae                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001a8d6                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a8fa                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001a91e                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001a946                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a9aa                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001aa92                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001ad58                PCI::checkBus(unsigned char)
                0x00000000c001ad7c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001aef6                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b072                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b0e4                PCI::detect()
 *fill*         0x00000000c001b13d        0x1 
 .text          0x00000000c001b13e      0xb9a hw/diskctrl/ide.32
                0x00000000c001b13e                IDE::close(int, int, void*)
                0x00000000c001b142                IDE::IDE()
                0x00000000c001b142                IDE::IDE()
                0x00000000c001b176                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b188                selectDrive(unsigned char, unsigned char)
                0x00000000c001b18a                IDE::getBase(unsigned char)
                0x00000000c001b19c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b25c                IDE::read(unsigned char, unsigned char)
                0x00000000c001b30a                IDE::waitInterrupt(unsigned char)
                0x00000000c001b36c                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001b388                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001b3a4                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001b3ee                IDE::open(int, int, void*)
                0x00000000c001b82c                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001b8fc                IDE::detect()
                0x00000000c001bbca                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc84                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001bcd8      0x32a hw/diskctrl/satabus.32
                0x00000000c001bcd8                SATABus::close(int, int, void*)
                0x00000000c001bcdc                SATABus::detect()
                0x00000000c001bcde                SATABus::SATABus()
                0x00000000c001bcde                SATABus::SATABus()
                0x00000000c001bd64                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001bd96                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001bdde                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001bdfe                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001be28                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001bf38                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001bfe2                SATABus::open(int, int, void*)
 .text          0x00000000c001c002      0x93f hw/diskphys/ata.32
                0x00000000c001c002                ATA::close(int, int, void*)
                0x00000000c001c026                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c028                ATA::ATA()
                0x00000000c001c028                ATA::ATA()
                0x00000000c001c056                ATA::flush(bool)
                0x00000000c001c0a4                ATA::readyForCommand()
                0x00000000c001c0f0                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001c486                ATA::detectCHS()
                0x00000000c001c4b0                ATA::open(int, int, void*)
                0x00000000c001c57c                combineCharAndColour(char, unsigned char)
                0x00000000c001c58d                combineColours(unsigned char, unsigned char)
                0x00000000c001c59a                ATA::read(unsigned long long, int, void*)
                0x00000000c001c770                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001c941        0x1 
 .text          0x00000000c001c942      0x618 hw/diskphys/atapi.32
                0x00000000c001c942                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c948                ATAPI::close(int, int, void*)
                0x00000000c001c96c                ATAPI::ATAPI()
                0x00000000c001c96c                ATAPI::ATAPI()
                0x00000000c001c99a                ATAPI::readyForCommand()
                0x00000000c001c9ec                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001ccb4                ATAPI::diskRemoved()
                0x00000000c001ccee                ATAPI::eject()
                0x00000000c001cd36                ATAPI::diskInserted()
                0x00000000c001cd42                ATAPI::detectMedia()
                0x00000000c001ce00                ATAPI::open(int, int, void*)
                0x00000000c001cee0                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001cf5a      0x807 hw/diskphys/sata.32
                0x00000000c001cf5a                SATA::close(int, int, void*)
                0x00000000c001cf7e                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001cf80                SATA::open(int, int, void*)
                0x00000000c001d02a                SATA::SATA()
                0x00000000c001d02a                SATA::SATA()
                0x00000000c001d058                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d2ac                SATA::read(unsigned long long, int, void*)
                0x00000000c001d4fc                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d761        0x1 
 .text          0x00000000c001d762      0x5d0 hw/diskphys/satapi.32
                0x00000000c001d762                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001d768                SATAPI::close(int, int, void*)
                0x00000000c001d78c                SATAPI::SATAPI()
                0x00000000c001d78c                SATAPI::SATAPI()
                0x00000000c001d7ba                SATAPI::diskRemoved()
                0x00000000c001d7bc                SATAPI::diskInserted()
                0x00000000c001d7d8                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001dab6                SATAPI::eject()
                0x00000000c001daf2                SATAPI::detectMedia()
                0x00000000c001db48                SATAPI::open(int, int, void*)
                0x00000000c001dc48                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001dd32      0x45b hw/intctrl/apic.32
                0x00000000c001dd32                IOAPIC::close(int, int, void*)
                0x00000000c001dd38                apicGetBase()
                0x00000000c001dd7e                IOAPIC::IOAPIC()
                0x00000000c001dd7e                IOAPIC::IOAPIC()
                0x00000000c001dda6                apicOpen()
                0x00000000c001df22                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001df54                IOAPIC::read(int)
                0x00000000c001df7c                IOAPIC::open(int, int, void*)
                0x00000000c001e062                IOAPIC::write(int, int)
                0x00000000c001e08e                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001e18d        0x3 
 .text          0x00000000c001e190       0xf0 hw/timer/apictimer.32
                0x00000000c001e190                APICTimer::close(int, int, void*)
                0x00000000c001e198                apicTimerHandler(regs*, void*)
                0x00000000c001e1c0                APICTimer::open(int, int, void*)
                0x00000000c001e230                APICTimer::write(int)
                0x00000000c001e258                APICTimer::APICTimer()
                0x00000000c001e258                APICTimer::APICTimer()
 .text          0x00000000c001e280      0x1ad hw/timer/pit.32
                0x00000000c001e280                PIT::write(int)
                0x00000000c001e304                pitHandler(regs*, void*)
                0x00000000c001e32c                PIT::open(int, int, void*)
                0x00000000c001e37c                PIT::close(int, int, void*)
                0x00000000c001e3ac                PIT::PIT()
                0x00000000c001e3ac                PIT::PIT()
 *fill*         0x00000000c001e42d        0x3 
 .text          0x00000000c001e430       0x83 arch/i386/avx.32
                0x00000000c001e430                avxDetect
                0x00000000c001e45a                avxSave
                0x00000000c001e46b                avxLoad
                0x00000000c001e47c                avxInit
                0x00000000c001e49e                avxClose
                0x00000000c001e49f                wouldSheSayYes
 *fill*         0x00000000c001e4b3        0xd 
 .text          0x00000000c001e4c0      0x2ec arch/i386/interrupt.32
                0x00000000c001e4c0                isr0
                0x00000000c001e4d0                isr1
                0x00000000c001e4da                isr2
                0x00000000c001e4e4                isr3
                0x00000000c001e4ee                isr4
                0x00000000c001e4f8                isr5
                0x00000000c001e502                isr6
                0x00000000c001e50c                isr7
                0x00000000c001e516                isr8
                0x00000000c001e51e                isr9
                0x00000000c001e528                isr10
                0x00000000c001e530                isr11
                0x00000000c001e538                isr12
                0x00000000c001e540                isr13
                0x00000000c001e55a                isr14
                0x00000000c001e562                isr15
                0x00000000c001e56c                isr16
                0x00000000c001e576                isr17
                0x00000000c001e580                isr18
                0x00000000c001e58a                irq3
                0x00000000c001e594                irq4
                0x00000000c001e59e                irq5
                0x00000000c001e5a8                irq6
                0x00000000c001e5b2                irq7
                0x00000000c001e5bc                irq8
                0x00000000c001e5c6                irq9
                0x00000000c001e5d0                irq10
                0x00000000c001e5da                irq11
                0x00000000c001e5e4                irq12
                0x00000000c001e5ee                irq13
                0x00000000c001e5f8                irq14
                0x00000000c001e602                irq15
                0x00000000c001e60c                irq1
                0x00000000c001e613                irq2
                0x00000000c001e61a                isr96
                0x00000000c001e621                irq0
                0x00000000c001e626                int_common_stub
                0x00000000c001e658                syscall_common_stub
                0x00000000c001e75c                irq16
                0x00000000c001e766                irq17
                0x00000000c001e770                irq18
                0x00000000c001e77a                irq19
                0x00000000c001e784                irq20
                0x00000000c001e78e                irq21
                0x00000000c001e798                irq22
                0x00000000c001e7a2                irq23
 *fill*         0x00000000c001e7ac        0x4 
 .text          0x00000000c001e7b0       0x10 arch/i386/rdrand.32
                0x00000000c001e7b0                i386GetRDRAND
 .text          0x00000000c001e7c0       0x39 arch/i386/sse.32
                0x00000000c001e7c0                absolutelyNoChanceInHell
                0x00000000c001e7c0                sseDetect
                0x00000000c001e7d8                sseSave
                0x00000000c001e7e0                sseLoad
                0x00000000c001e7e8                sseInit
                0x00000000c001e7f8                sseClose
 *fill*         0x00000000c001e7f9        0x7 
 .text          0x00000000c001e800       0x49 arch/i386/x87.32
                0x00000000c001e806                x87Detect
                0x00000000c001e821                x87Save
                0x00000000c001e828                x87Load
                0x00000000c001e82f                x87Init
                0x00000000c001e848                x87Close
 *fill*         0x00000000c001e849        0x3 
 .text          0x00000000c001e84c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e871        0x0 crtn.32
 *fill*         0x00000000c001e871        0x3 
 .text          0x00000000c001e874      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001e874                __divdi3
 *fill*         0x00000000c001e9bf        0x1 
 .text          0x00000000c001e9c0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001e9c0                __moddi3
 *fill*         0x00000000c001eb3e        0x2 
 .text          0x00000000c001eb40       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001eb40                __udivdi3
 *fill*         0x00000000c001ec3f        0x1 
 .text          0x00000000c001ec40      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001ec40                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001ed60        0x0
 .iplt          0x00000000c001ed60        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001ed5a        0xf
 .init          0x00000000c001ed5a        0x3 crti.32
                0x00000000c001ed5a                _init
 .init          0x00000000c001ed5d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001ed62        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001ed67        0x2 crtn.32

.fini           0x00000000c001ed69        0xa
 .fini          0x00000000c001ed69        0x3 crti.32
                0x00000000c001ed69                _fini
 .fini          0x00000000c001ed6c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001ed71        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001ed74       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001ed74       0x23 core/computer.32
                0x00000000c001ed74                Computer::~Computer()
                0x00000000c001ed74                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001ed98       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001ed98       0x2a core/computer.32
                0x00000000c001ed98                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001edc2       0x21
 .text._Z10idleCommonv
                0x00000000c001edc2       0x21 core/idle.32
                0x00000000c001edc2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ede4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ede4        0x2 core/unixfile.32
                0x00000000c001ede4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001ede4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ede6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ede6       0x42 core/unixfile.32
                0x00000000c001ede6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001ede6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ee28       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ee28       0xd3 core/unixfile.32
                0x00000000c001ee28                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001eefc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001eefc        0x7 core/unixfile.32
                0x00000000c001eefc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ef04       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ef04       0xa1 core/unixfile.32
                0x00000000c001ef04                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001efa6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001efa6        0x8 core/unixfile.32
                0x00000000c001efa6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001efae       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001efae       0x1a hal/device.32
                0x00000000c001efae                DriverlessDevice::~DriverlessDevice()
                0x00000000c001efae                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001efc8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001efc8       0x2a hal/device.32
                0x00000000c001efc8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eff2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eff2       0xdc hal/device.32
                0x00000000c001eff2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f0ce       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f0ce       0x42 hal/device.32
                0x00000000c001f0ce                LinkedList<Device>::LinkedList()
                0x00000000c001f0ce                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f110       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f110       0x1c hal/timer.32
                0x00000000c001f110                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f12c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f12c        0x7 hal/timer.32
                0x00000000c001f12c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f134       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f134       0xbc hal/timer.32
                0x00000000c001f134                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f1f0       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f1f0       0xda hal/timer.32
                0x00000000c001f1f0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001f2cc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f2cc       0x23 hw/acpi.32
                0x00000000c001f2cc                ACPI::~ACPI()
                0x00000000c001f2cc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f2f0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f2f0       0x2a hw/acpi.32
                0x00000000c001f2f0                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f31c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001f31c        0x2 hw/acpi.32
                0x00000000c001f31c                LinkedList<Device>::~LinkedList()
                0x00000000c001f31c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f320       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001f320       0x1c hw/acpi.32
                0x00000000c001f320                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f33c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001f33c        0x7 hw/acpi.32
                0x00000000c001f33c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f344       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001f344       0xb8 hw/acpi.32
                0x00000000c001f344                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001f3fc       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001f3fc       0x23 hw/cpu.32
                0x00000000c001f3fc                CPU::~CPU()
                0x00000000c001f3fc                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001f420       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001f420       0x2a hw/cpu.32
                0x00000000c001f420                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001f44c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001f44c        0x8 sys/kill.32
                0x00000000c001f44c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001f454        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001f454        0x2 thr/prcssthr.32
                0x00000000c001f454                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001f454                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001f458       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001f458       0x49 thr/prcssthr.32
                0x00000000c001f458                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001f458                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001f4a4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001f4a4       0x42 thr/prcssthr.32
                0x00000000c001f4a4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001f4a4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001f4e6       0x23
 .text._ZN3PCID2Ev
                0x00000000c001f4e6       0x23 hw/bus/pci.32
                0x00000000c001f4e6                PCI::~PCI()
                0x00000000c001f4e6                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001f50a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001f50a       0x2a hw/bus/pci.32
                0x00000000c001f50a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001f534       0x23
 .text._ZN3IDED2Ev
                0x00000000c001f534       0x23 hw/diskctrl/ide.32
                0x00000000c001f534                IDE::~IDE()
                0x00000000c001f534                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f558       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f558       0x2a hw/diskctrl/ide.32
                0x00000000c001f558                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001f582       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001f582       0x23 hw/diskctrl/satabus.32
                0x00000000c001f582                SATABus::~SATABus()
                0x00000000c001f582                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001f5a6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001f5a6       0x2a hw/diskctrl/satabus.32
                0x00000000c001f5a6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001f5d0       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f5d0       0x23 hw/diskphys/ata.32
                0x00000000c001f5d0                ATA::~ATA()
                0x00000000c001f5d0                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f5f4       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f5f4       0x2a hw/diskphys/ata.32
                0x00000000c001f5f4                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f61e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f61e       0x23 hw/diskphys/atapi.32
                0x00000000c001f61e                ATAPI::~ATAPI()
                0x00000000c001f61e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f642       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f642       0x2a hw/diskphys/atapi.32
                0x00000000c001f642                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001f66c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001f66c       0x23 hw/diskphys/sata.32
                0x00000000c001f66c                SATA::~SATA()
                0x00000000c001f66c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001f690       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001f690       0x2a hw/diskphys/sata.32
                0x00000000c001f690                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001f6ba       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001f6ba       0x23 hw/diskphys/satapi.32
                0x00000000c001f6ba                SATAPI::~SATAPI()
                0x00000000c001f6ba                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001f6de       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001f6de       0x2a hw/diskphys/satapi.32
                0x00000000c001f6de                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001f708       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f708       0x23 hw/intctrl/apic.32
                0x00000000c001f708                IOAPIC::~IOAPIC()
                0x00000000c001f708                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f72c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f72c       0x2a hw/intctrl/apic.32
                0x00000000c001f72c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f758       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f758       0x23 hw/timer/apictimer.32
                0x00000000c001f758                APICTimer::~APICTimer()
                0x00000000c001f758                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f77c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f77c       0x2a hw/timer/apictimer.32
                0x00000000c001f77c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f7a8       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f7a8       0x23 hw/timer/pit.32
                0x00000000c001f7a8                PIT::~PIT()
                0x00000000c001f7a8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f7cc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f7cc       0x2a hw/timer/pit.32
                0x00000000c001f7cc                PIT::~PIT()

.rodata         0x00000000c001f7f6     0x3016
                0x00000000c001f7f6                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f7f6        0x2 
 .ctors         0x00000000c001f7f8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f7fc        0x4 core/unixfile.32
 .ctors         0x00000000c001f800        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f804        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f808                end_ctors = .
                0x00000000c001f808                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f808        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f80c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f80c                __DTOR_END__
                0x00000000c001f810                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f810       0x10 
 .rodata        0x00000000c001f820      0x101 acpica/utclib.32
                0x00000000c001f820                AcpiGbl_Ctypes
 *fill*         0x00000000c001f921        0x3 
 .rodata        0x00000000c001f924       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001f93c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001f986       0x1a 
 .rodata        0x00000000c001f9a0       0xed fs/fat/ff.32
 *fill*         0x00000000c001fa8d       0x13 
 .rodata        0x00000000c001faa0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001fea0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001ff0f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c0020024       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c002008c       0x2c core/computer.32
                0x00000000c002008c                vtable for Computer
 .rodata.str1.4
                0x00000000c00200b8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00200e8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c00200f4       0x17 core/main.32
 *fill*         0x00000000c002010b        0x1 
 .rodata.str1.4
                0x00000000c002010c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c00201b1       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c0020209       0x39 core/pipe.32
 *fill*         0x00000000c0020242        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020244       0x1c core/pipe.32
                0x00000000c0020244                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020260       0x2b core/terminal.32
 *fill*         0x00000000c002028b        0x1 
 .rodata._ZTV7VgaText
                0x00000000c002028c       0x1c core/terminal.32
                0x00000000c002028c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00202a8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00202ca       0x15 core/unixfile.32
 *fill*         0x00000000c00202df        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00202e0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002032b        0x8 core/unixfile.32
 *fill*         0x00000000c0020333        0x1 
 .rodata.str1.4
                0x00000000c0020334       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020354       0x1c core/unixfile.32
                0x00000000c0020354                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020370       0x1c core/unixfile.32
                0x00000000c0020370                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002038c      0x294 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020620      0x126 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020746       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0020779       0x11 dbg/kconsole.32
 *fill*         0x00000000c0020779        0x3 
 .rodata        0x00000000c002077c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00208cc      0x169 dbg/usban.32
 *fill*         0x00000000c0020a35        0x3 
 .rodata.str1.4
                0x00000000c0020a38      0x137 dbg/usban.32
 .rodata.str1.1
                0x00000000c0020b6f      0x169 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c0020b6f        0x1 
 .rodata._ZTV10Filesystem
                0x00000000c0020b70       0x6c fs/vfs.32
                0x00000000c0020b70                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020bdc       0x1c fs/vfs.32
                0x00000000c0020bdc                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020bf8       0x1c fs/vfs.32
                0x00000000c0020bf8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0020c14       0x2c hal/bus.32
                0x00000000c0020c14                vtable for Bus
 .rodata.str1.1
                0x00000000c0020c40       0x1e hal/clock.32
 *fill*         0x00000000c0020c5e        0x2 
 .rodata._ZTV5Clock
                0x00000000c0020c60       0x3c hal/clock.32
                0x00000000c0020c60                vtable for Clock
 *fill*         0x00000000c0020c9c        0x4 
 .rodata        0x00000000c0020ca0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020cd0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020d28       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020d28       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0020d28       0x2c hal/device.32
                0x00000000c0020d28                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020d54       0x2c hal/device.32
                0x00000000c0020d54                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0020d80       0x2c hal/diskctrl.32
                0x00000000c0020d80                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0020dac       0x38 hal/diskphys.32
                0x00000000c0020dac                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020de4       0x3e hal/intctrl.32
 *fill*         0x00000000c0020e22        0x2 
 .rodata.str1.4
                0x00000000c0020e24       0x5d hal/intctrl.32
 .rodata        0x00000000c0020e81       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0020ed4       0x34 hal/keybrd.32
                0x00000000c0020ed4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020f08       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c0020f4c       0x2c hal/logidisk.32
                0x00000000c0020f4c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0020f78       0x2c hal/mouse.32
                0x00000000c0020f78                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0020fa4       0x34 hal/nic.32
                0x00000000c0020fa4                vtable for NIC
 .rodata.str1.1
                0x00000000c0020fd8        0xb hal/partition.32
 *fill*         0x00000000c0020fe3        0x1 
 .rodata._ZTV6Serial
                0x00000000c0020fe4       0x44 hal/serial.32
                0x00000000c0020fe4                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021028       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021028        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021028       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021028       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0021028       0x30 hal/timer.32
                0x00000000c0021028                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021058       0x10 hal/vcache.32
                0x00000000c0021058                vtable for VCache
 .rodata.str1.1
                0x00000000c0021068       0x93 hal/video.32
 *fill*         0x00000000c00210fb        0x1 
 .rodata._ZTV5Video
                0x00000000c00210fc       0x4c hal/video.32
                0x00000000c00210fc                vtable for Video
 .rodata.str1.4
                0x00000000c0021148       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c00211e3      0x174 hw/acpi.32
                                        0x18e (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0021357       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0021357        0x8 hw/acpi.32
 *fill*         0x00000000c0021357        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0021358       0x2c hw/acpi.32
                0x00000000c0021358                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021384      0x17b hw/cpu.32
                                        0x17f (size before relaxing)
 *fill*         0x00000000c00214ff        0x1 
 .rodata._ZTV3CPU
                0x00000000c0021500       0x2c hw/cpu.32
                0x00000000c0021500                vtable for CPU
 .rodata.str1.1
                0x00000000c002152c       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0021568       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c00215f9       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c00216c2       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c002170a       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0021735       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c00217ab       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00217f0        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c00217fa       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c002181b       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c00218b1       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0021905       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0021931      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0021afd       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0021b54      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021c64       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021c64       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021c64       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021c64        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0021c64       0xc2 vm86/vm8086.32
 *fill*         0x00000000c0021d26        0x2 
 .rodata        0x00000000c0021d28       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0021d58      0x19f arch/i386/hal.32
                                        0x1ae (size before relaxing)
 *fill*         0x00000000c0021ef7        0x1 
 .rodata.str1.4
                0x00000000c0021ef8       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0021f6b       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0021f80       0x3c arch/i386/rtc.32
                0x00000000c0021f80                vtable for RTC
 .rodata.str1.1
                0x00000000c0021fbc       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0021ffd        0x3 
 .rodata._ZTV3FAT
                0x00000000c0022000       0x6c fs/fat/vfslink.32
                0x00000000c0022000                vtable for FAT
 .rodata.str1.1
                0x00000000c002206c       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c002206c      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00221a4       0x6c fs/iso9660/vfslink.32
                0x00000000c00221a4                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022210       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0022254       0x34 hal/sound/sndcard.32
                0x00000000c0022254                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0022288       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00222c7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00222ff       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00223a0       0x2c hw/bus/pci.32
                0x00000000c00223a0                vtable for PCI
 .rodata.str1.1
                0x00000000c00223cc       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0022453        0x1 
 .rodata._ZTV3IDE
                0x00000000c0022454       0x2c hw/diskctrl/ide.32
                0x00000000c0022454                vtable for IDE
 .rodata.str1.4
                0x00000000c0022480       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00224a4       0x2c hw/diskctrl/satabus.32
                0x00000000c00224a4                vtable for SATABus
 .rodata.str1.1
                0x00000000c00224d0       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c00224e2        0x2 
 .rodata._ZTV3ATA
                0x00000000c00224e4       0x38 hw/diskphys/ata.32
                0x00000000c00224e4                vtable for ATA
 .rodata.str1.1
                0x00000000c002251c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0022529        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c002252c       0x38 hw/diskphys/atapi.32
                0x00000000c002252c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022564       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c00225e0       0x38 hw/diskphys/sata.32
                0x00000000c00225e0                vtable for SATA
 .rodata.str1.1
                0x00000000c0022618       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0022702        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0022704       0x38 hw/diskphys/satapi.32
                0x00000000c0022704                vtable for SATAPI
 .rodata        0x00000000c002273c        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0022744       0x2c hw/intctrl/apic.32
                0x00000000c0022744                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0022770       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c002278b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002278c       0x30 hw/timer/apictimer.32
                0x00000000c002278c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00227bc       0x1d hw/timer/pit.32
 *fill*         0x00000000c00227d9        0x3 
 .rodata._ZTV3PIT
                0x00000000c00227dc       0x30 hw/timer/pit.32
                0x00000000c00227dc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002280c      0x7b5
 *(.data)
 .data          0x00000000c002280c        0x0 crti.32
 .data          0x00000000c002280c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002280c                __dso_handle
 .data          0x00000000c0022810        0x0 acpica/utclib.32
 .data          0x00000000c0022810        0x0 core/malloc.32
 .data          0x00000000c0022810        0x0 libk/ctype.32
 .data          0x00000000c0022810        0x0 libk/string.32
 .data          0x00000000c0022810        0x0 fs/fat/diskio.32
 .data          0x00000000c0022810        0x0 fs/fat/ff.32
 .data          0x00000000c0022810        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0022810        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0022810        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0022810        0x0 core/computer.32
 .data          0x00000000c0022810        0x0 core/gdt.32
 .data          0x00000000c0022810        0x0 core/idle.32
 .data          0x00000000c0022810        0x0 core/idt.32
 .data          0x00000000c0022810        0x4 core/kheap.32
 .data          0x00000000c0022814        0x0 core/main.32
 .data          0x00000000c0022814        0x4 core/physmgr.32
                0x00000000c0022814                Phys::bitmap
 .data          0x00000000c0022818        0x0 core/pipe.32
 *fill*         0x00000000c0022818        0x8 
 .data          0x00000000c0022820       0x60 core/terminal.32
                0x00000000c0022820                VgaText::hiddenOut
                0x00000000c0022840                ansiToVGAMappings
 .data          0x00000000c0022880        0x0 core/tss.32
 .data          0x00000000c0022880        0x4 core/unixfile.32
                0x00000000c0022880                UnixFile::nextFd
 .data          0x00000000c0022884       0x15 core/virtmgr.32
                0x00000000c0022884                Virt::pageAllocPtr
                0x00000000c0022888                Virt::bitmap
                0x00000000c002288c                Virt::swapfileSectorsPerPage
                0x00000000c0022890                Virt::swapfileLength
                0x00000000c0022894                Virt::swapfileSector
                0x00000000c0022898                Virt::swapfileDrive
 *fill*         0x00000000c0022899        0x3 
 .data          0x00000000c002289c        0x4 coreobjs/c++.32
                0x00000000c002289c                __stack_chk_guard
 .data          0x00000000c00228a0        0x0 dbg/kconsole.32
 .data          0x00000000c00228a0       0x28 dbg/usban.32
                0x00000000c00228a0                KiUsbanTypeMismatchTypes
 .data          0x00000000c00228c8        0x0 fs/vfs.32
 .data          0x00000000c00228c8        0x0 hal/bus.32
 .data          0x00000000c00228c8        0x0 hal/buzzer.32
 .data          0x00000000c00228c8        0x0 hal/clock.32
 .data          0x00000000c00228c8        0x0 hal/device.32
 .data          0x00000000c00228c8        0x0 hal/diskctrl.32
 .data          0x00000000c00228c8        0x0 hal/diskphys.32
 .data          0x00000000c00228c8        0x0 hal/fpu.32
 .data          0x00000000c00228c8        0x0 hal/intctrl.32
 .data          0x00000000c00228c8        0x0 hal/keybrd.32
 .data          0x00000000c00228c8        0x0 hal/logidisk.32
 .data          0x00000000c00228c8        0x0 hal/mouse.32
 .data          0x00000000c00228c8        0x0 hal/nic.32
 .data          0x00000000c00228c8        0x0 hal/partition.32
 .data          0x00000000c00228c8        0x0 hal/serial.32
 .data          0x00000000c00228c8        0x0 hal/timer.32
 .data          0x00000000c00228c8        0x0 hal/vcache.32
 .data          0x00000000c00228c8        0x0 hal/video.32
 .data          0x00000000c00228c8       0x10 hw/acpi.32
                0x00000000c00228c8                legacyIRQRemaps
 .data          0x00000000c00228d8        0x4 hw/cpu.32
                0x00000000c00228d8                lastCode
 *fill*         0x00000000c00228dc        0x4 
 .data          0x00000000c00228e0      0x142 krnl/bootmsg.32
                0x00000000c00228e0                KiSplashScreen
 .data          0x00000000c0022a22        0x0 krnl/compat.32
 *fill*         0x00000000c0022a22       0x1e 
 .data          0x00000000c0022a40       0x4d krnl/env.32
                0x00000000c0022a40                defaultSysEnv
 .data          0x00000000c0022a8d        0x0 krnl/inlines.32
 .data          0x00000000c0022a8d        0x0 krnl/panic.32
 .data          0x00000000c0022a8d        0x0 krnl/powctrl.32
 .data          0x00000000c0022a8d        0x0 krnl/random.32
 .data          0x00000000c0022a8d        0x0 krnl/resolve.32
 *fill*         0x00000000c0022a8d       0x13 
 .data          0x00000000c0022aa0       0x4c krnl/signal.32
                0x00000000c0022aa0                KiDefaultSignalHandlers
 *fill*         0x00000000c0022aec       0x14 
 .data          0x00000000c0022b00       0xf0 krnl/syscalls.32
                0x00000000c0022b00                systemCallHandlers
 .data          0x00000000c0022bf0        0x0 net/ethernet.32
 *fill*         0x00000000c0022bf0       0x10 
 .data          0x00000000c0022c00      0x100 reg/cm.32
                0x00000000c0022c00                CmComponents
 .data          0x00000000c0022d00        0x0 reg/registry.32
 .data          0x00000000c0022d00        0x0 sys/eject.32
 .data          0x00000000c0022d00        0x0 sys/exit.32
 .data          0x00000000c0022d00        0x0 sys/getcwd.32
 .data          0x00000000c0022d00        0x0 sys/getpid.32
 .data          0x00000000c0022d00        0x0 sys/getramdata.32
 .data          0x00000000c0022d00        0x0 sys/getvgaptr.32
 .data          0x00000000c0022d00        0x0 sys/kill.32
 .data          0x00000000c0022d00        0x0 sys/loaddll.32
 .data          0x00000000c0022d00        0x0 sys/read.32
 .data          0x00000000c0022d00        0x0 sys/registersignal.32
 .data          0x00000000c0022d00        0x0 sys/registry.32
 .data          0x00000000c0022d00        0x0 sys/sbrk.32
 .data          0x00000000c0022d00        0x0 sys/setcwd.32
 .data          0x00000000c0022d00        0x0 sys/settime.32
 .data          0x00000000c0022d00        0x0 sys/timezone.32
 .data          0x00000000c0022d00        0x0 sys/truncate.32
 .data          0x00000000c0022d00        0x0 sys/write.32
 .data          0x00000000c0022d00        0x0 sys/wsbe.32
 .data          0x00000000c0022d00        0x0 sys/yield.32
 .data          0x00000000c0022d00        0x0 thr/elf.32
 .data          0x00000000c0022d00        0x4 thr/prcssthr.32
                0x00000000c0022d00                Thr::nextPID
 .data          0x00000000c0022d04        0x0 vm86/vm8086.32
 *fill*         0x00000000c0022d04       0x1c 
 .data          0x00000000c0022d20      0x2a0 arch/i386/hal.32
                0x00000000c0022d20                exceptionNames
 .data          0x00000000c0022fc0        0x0 arch/i386/pic.32
 .data          0x00000000c0022fc0        0x0 arch/i386/rtc.32
 .data          0x00000000c0022fc0        0x0 arch/i386/vga.32
 .data          0x00000000c0022fc0        0x0 fs/fat/vfslink.32
 .data          0x00000000c0022fc0        0x0 fs/iso9660/helper.32
 .data          0x00000000c0022fc0        0x1 fs/iso9660/vfslink.32
                0x00000000c0022fc0                recentDriveletter
 .data          0x00000000c0022fc1        0x0 hal/sound/sndcard.32
 .data          0x00000000c0022fc1        0x0 hal/sound/sndport.32
 .data          0x00000000c0022fc1        0x0 hw/bus/isa.32
 .data          0x00000000c0022fc1        0x0 hw/bus/pci.32
 .data          0x00000000c0022fc1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0022fc1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0022fc1        0x0 hw/diskphys/ata.32
 .data          0x00000000c0022fc1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0022fc1        0x0 hw/diskphys/sata.32
 .data          0x00000000c0022fc1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0022fc1        0x0 hw/intctrl/apic.32
 .data          0x00000000c0022fc1        0x0 hw/timer/apictimer.32
 .data          0x00000000c0022fc1        0x0 hw/timer/pit.32
 .data          0x00000000c0022fc1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0022fc1        0x0 crtn.32
 .data          0x00000000c0022fc1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0022fc1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0022fc1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0022fc1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0022fc4        0x0
 .got           0x00000000c0022fc4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0022fc4        0x0
 .got.plt       0x00000000c0022fc4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0022fc4        0x0
 .igot.plt      0x00000000c0022fc4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0022fc4        0x0
 .tm_clone_table
                0x00000000c0022fc4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0022fc4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0022fc1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0022fc1        0x3 
 .eh_frame      0x00000000c0022fc4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0022fc4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0022fc4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002301c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002305c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00230c8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0024000       0x7d
 *(userkernel)
 userkernel     0x00000000c0024000       0x52 krnl/signal.32
                0x00000000c0024000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002402c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0024052       0x2b krnl/syscalls.32
                0x00000000c0024052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0025000        0x1
 *(align_previous)
 align_previous
                0x00000000c0025000        0x1 krnl/signal.32
                0x00000000c0025000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0025004        0x0
 .rel.got       0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0025004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0025001     0x4ba7
                0x00000000c0025001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0025001       0x1f 
 COMMON         0x00000000c0025020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0025020                dcache
                0x00000000c0025060                cdDriveLetter
                0x00000000c0025080                icache
 *(.bss)
 .bss           0x00000000c00250c0        0x0 crti.32
 .bss           0x00000000c00250c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00250e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00250e4       0x1c 
 .bss           0x00000000c0025100      0x378 core/malloc.32
 .bss           0x00000000c0025478        0x0 libk/ctype.32
 .bss           0x00000000c0025478        0x0 libk/string.32
 .bss           0x00000000c0025478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0025478        0x8 
 .bss           0x00000000c0025480       0x88 fs/fat/ff.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0025508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0025508       0x18 
 .bss           0x00000000c0025520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0025eb8        0x6 core/computer.32
                0x00000000c0025eb8                Krnl::computer
                0x00000000c0025ebc                KeIsPreemptionOn
                0x00000000c0025ebd                KeIsSchedulingOn
 *fill*         0x00000000c0025ebe        0x2 
 .bss           0x00000000c0025ec0        0x6 core/gdt.32
                0x00000000c0025ec0                gdtDescr
 .bss           0x00000000c0025ec6        0x0 core/idle.32
 *fill*         0x00000000c0025ec6        0x2 
 .bss           0x00000000c0025ec8        0x6 core/idt.32
                0x00000000c0025ec8                idtDescr
 .bss           0x00000000c0025ece        0x0 core/kheap.32
 *fill*         0x00000000c0025ece        0x2 
 .bss           0x00000000c0025ed0        0x4 core/main.32
                0x00000000c0025ed0                sysBootSettings
 .bss           0x00000000c0025ed4       0x29 core/physmgr.32
                0x00000000c0025ed4                Phys::forbidEvictions
                0x00000000c0025ed8                Phys::currentPagePointer
                0x00000000c0025edc                Phys::highestMem
                0x00000000c0025ee0                Phys::oldPercent
                0x00000000c0025ee4                Phys::usedPages
                0x00000000c0025ee8                Phys::usablePages
                0x00000000c0025eec                Phys::dmaUsage
 .bss           0x00000000c0025efd        0x0 core/pipe.32
 *fill*         0x00000000c0025efd        0x3 
 .bss           0x00000000c0025f00        0x9 core/terminal.32
                0x00000000c0025f00                terminalCycle
                0x00000000c0025f04                activeTerminal
                0x00000000c0025f08                VgaText::graphicMode
 *fill*         0x00000000c0025f09        0x1 
 .bss           0x00000000c0025f0a        0x2 core/tss.32
                0x00000000c0025f0a                doubleFaultSelector
 *fill*         0x00000000c0025f0c       0x14 
 .bss           0x00000000c0025f20       0x84 core/unixfile.32
                0x00000000c0025f20                sfileLpt
                0x00000000c0025f60                sfileCom
                0x00000000c0025f84                sfileNul
                0x00000000c0025f88                sfilePnt
                0x00000000c0025f8c                sfileAux
                0x00000000c0025f90                sfileCon
                0x00000000c0025f94                initialFilesAdded
                0x00000000c0025f98                unixFileLinkedList
 .bss           0x00000000c0025fa4       0x10 core/virtmgr.32
                0x00000000c0025fa4                twswaps
                0x00000000c0025fa8                swapBalance
                0x00000000c0025fac                Virt::swapfileBitmap
                0x00000000c0025fb0                firstVAS
 .bss           0x00000000c0025fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0025fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0025fb4        0x0 dbg/usban.32
 .bss           0x00000000c0025fb4        0x4 fs/vfs.32
                0x00000000c0025fb4                installedFilesystems
 .bss           0x00000000c0025fb8        0x0 hal/bus.32
 .bss           0x00000000c0025fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0025fb8        0x8 hal/clock.32
                0x00000000c0025fb8                User::dstOn
                0x00000000c0025fb9                User::timezoneHalfHourOffset
                0x00000000c0025fbc                User::timezoneHourOffset
 .bss           0x00000000c0025fc0        0x0 hal/device.32
 .bss           0x00000000c0025fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0025fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0025fc0        0x0 hal/fpu.32
 .bss           0x00000000c0025fc0     0x2000 hal/intctrl.32
                0x00000000c0025fc0                INT_contexts
                0x00000000c0026fc0                INT_handlers
 .bss           0x00000000c0027fc0      0x429 hal/keybrd.32
                0x00000000c0027fc0                keyboardWaitingTaskList
                0x00000000c0027fc4                keyboardSetupYet
                0x00000000c0027fc8                guiKeyboardHandler
                0x00000000c0027fe0                keystates
 *fill*         0x00000000c00283e9       0x17 
 .bss           0x00000000c0028400       0x88 hal/logidisk.32
                0x00000000c0028400                diskAssignments
                0x00000000c0028420                disks
 .bss           0x00000000c0028488        0x4 hal/mouse.32
                0x00000000c0028488                guiMouseHandler
 .bss           0x00000000c002848c        0x0 hal/nic.32
 .bss           0x00000000c002848c        0x0 hal/partition.32
 .bss           0x00000000c002848c        0x0 hal/serial.32
 .bss           0x00000000c002848c        0x4 hal/timer.32
                0x00000000c002848c                milliTenthsSinceBoot
 .bss           0x00000000c0028490        0x0 hal/vcache.32
 .bss           0x00000000c0028490        0x4 hal/video.32
                0x00000000c0028490                screen
 *fill*         0x00000000c0028494        0xc 
 .bss           0x00000000c00284a0      0x480 hw/acpi.32
                0x00000000c00284a0                systemSleepFunction
                0x00000000c00284a4                systemResetFunction
                0x00000000c00284a8                systemShutdownFunction
                0x00000000c00284ac                nextACPITable
                0x00000000c00284c0                acpiTables
                0x00000000c00286c0                usingXSDT
                0x00000000c00286c4                MADTpointer
                0x00000000c00286c8                RSDTpointer
                0x00000000c00286cc                RSDPpointer
                0x00000000c00286d0                nextAPICNMI
                0x00000000c00286e0                apicNMIInfo
                0x00000000c0028760                legacyIRQFlags
                0x00000000c0028780                ioapicDiscoveryNumber
                0x00000000c00287a0                ioapicFoundInMADT
                0x00000000c00287c0                ioapicAddresses
                0x00000000c0028840                ioapicGSIBase
                0x00000000c00288c0                processorDiscoveryNumber
                0x00000000c00288e0                matchingAPICID
                0x00000000c0028900                processorID
 .bss           0x00000000c0028920       0x10 hw/cpu.32
                0x00000000c0028920                lastD
                0x00000000c0028924                lastC
                0x00000000c0028928                lastB
                0x00000000c002892c                lastA
 .bss           0x00000000c0028930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0028930        0x0 krnl/compat.32
 .bss           0x00000000c0028930        0x8 krnl/env.32
                0x00000000c0028930                KeUserEnv
                0x00000000c0028934                KeSystemEnv
 .bss           0x00000000c0028938        0x0 krnl/inlines.32
 .bss           0x00000000c0028938        0x1 krnl/panic.32
                0x00000000c0028938                KeIsKernelInPanic
 *fill*         0x00000000c0028939        0x7 
 .bss           0x00000000c0028940       0x48 krnl/powctrl.32
                0x00000000c0028940                powCtrlOnBattery
                0x00000000c0028960                currentPowerSettings
                0x00000000c0028984                secondsSinceLastUserIO
 .bss           0x00000000c0028988        0x8 krnl/random.32
                0x00000000c0028988                kiRandSeed
 .bss           0x00000000c0028990        0x0 krnl/resolve.32
 .bss           0x00000000c0028990        0x0 krnl/signal.32
 .bss           0x00000000c0028990        0x0 krnl/syscalls.32
 .bss           0x00000000c0028990        0x0 net/ethernet.32
 .bss           0x00000000c0028990        0x4 reg/cm.32
 .bss           0x00000000c0028994        0x0 reg/registry.32
 .bss           0x00000000c0028994        0x0 sys/eject.32
 .bss           0x00000000c0028994        0x0 sys/exit.32
 .bss           0x00000000c0028994        0x0 sys/getcwd.32
 .bss           0x00000000c0028994        0x0 sys/getpid.32
 .bss           0x00000000c0028994        0x0 sys/getramdata.32
 .bss           0x00000000c0028994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0028994        0x0 sys/kill.32
 .bss           0x00000000c0028994        0x0 sys/loaddll.32
 .bss           0x00000000c0028994        0x0 sys/read.32
 .bss           0x00000000c0028994        0x0 sys/registersignal.32
 .bss           0x00000000c0028994        0x0 sys/registry.32
 .bss           0x00000000c0028994        0x0 sys/sbrk.32
 .bss           0x00000000c0028994        0x0 sys/setcwd.32
 .bss           0x00000000c0028994        0x0 sys/settime.32
 .bss           0x00000000c0028994        0x0 sys/timezone.32
 .bss           0x00000000c0028994        0x0 sys/truncate.32
 .bss           0x00000000c0028994        0x0 sys/write.32
 .bss           0x00000000c0028994        0x0 sys/wsbe.32
 .bss           0x00000000c0028994        0x0 sys/yield.32
 *fill*         0x00000000c0028994        0xc 
 .bss           0x00000000c00289a0      0x7a4 thr/elf.32
                0x00000000c00289a0                Thr::driverLookupNext
                0x00000000c00289c0                Thr::driverLookupLen
                0x00000000c0028bc0                Thr::driverLookupAddr
                0x00000000c0028dc0                Thr::driverNameLookup
                0x00000000c0028fc0                Thr::kernelSymbols
                0x00000000c0029040                Thr::kernelStringTable
                0x00000000c00290c0                Thr::kernelSymbolTable
                0x00000000c0029140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0029144        0x4 
 .bss           0x00000000c0029148       0x68 thr/prcssthr.32
                0x00000000c0029148                cleanerThread
                0x00000000c002914c                weNeedTheCleanerToNotBlock
                0x00000000c0029150                retValLockStuff
                0x00000000c0029154                retValSchedLock
                0x00000000c0029158                lockStuffLock
                0x00000000c002915c                schedulerLock
                0x00000000c0029160                taskSwitchesPostponedFlag
                0x00000000c0029164                postponeTaskSwitchesCounter
                0x00000000c0029168                irqDisableCounter
                0x00000000c002916c                terminatedTaskList
                0x00000000c0029178                sleepingTaskList
                0x00000000c0029184                taskList
                0x00000000c0029190                kernelProcess
 *fill*         0x00000000c00291b0       0x10 
 .bss           0x00000000c00291c0       0x40 vm86/vm8086.32
                0x00000000c00291c0                Vm::vmRetV
                0x00000000c00291c4                Vm::vmDone
                0x00000000c00291c5                Vm::vmReady
                0x00000000c00291c8                Vm::vm86Thread
                0x00000000c00291cc                Vm::vmToHostCommsPtr
                0x00000000c00291e0                Vm::vmToHostComms
 .bss           0x00000000c0029200       0x18 arch/i386/hal.32
                0x00000000c0029200                apic
                0x00000000c0029204                guiPanicHandler
                0x00000000c0029208                fpuOwner
                0x00000000c002920c                coproLoadFunc
                0x00000000c0029210                coproSaveFunc
                0x00000000c0029214                gpFaultIntercept
 .bss           0x00000000c0029218        0x0 arch/i386/pic.32
 .bss           0x00000000c0029218        0x2 arch/i386/rtc.32
 .bss           0x00000000c002921a        0x0 arch/i386/vga.32
 *fill*         0x00000000c002921a        0x6 
 .bss           0x00000000c0029220       0xf0 fs/fat/vfslink.32
                0x00000000c0029220                FAT::fats
                0x00000000c0029240                FAT::vfsToFatRemaps
                0x00000000c00292c0                fatToVFSRemaps
 .bss           0x00000000c0029310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0029310       0x10 
 .bss           0x00000000c0029320      0x820 fs/iso9660/vfslink.32
                0x00000000c0029320                iso9660Owner
                0x00000000c0029324                recentSector
                0x00000000c0029340                recentBuffer
 .bss           0x00000000c0029b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0029b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0029b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0029b40        0xd hw/bus/pci.32
                0x00000000c0029b40                thePCI
 .bss           0x00000000c0029b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0029b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0029b4d        0x3 
 .bss           0x00000000c0029b50        0x8 hw/diskphys/ata.32
                0x00000000c0029b50                ataSectorsWritten
                0x00000000c0029b54                ataSectorsRead
 .bss           0x00000000c0029b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0029b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0029b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0029b58        0x8 
 .bss           0x00000000c0029b60       0x41 hw/intctrl/apic.32
                0x00000000c0029b60                noOfIOAPICs
                0x00000000c0029b80                ioapics
                0x00000000c0029ba0                IOAPICsSetupYet
 .bss           0x00000000c0029ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0029ba1        0x3 
 .bss           0x00000000c0029ba4        0x4 hw/timer/pit.32
                0x00000000c0029ba4                pitFreq
 .bss           0x00000000c0029ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0029ba8        0x0 crtn.32
 .bss           0x00000000c0029ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0029ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0029ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0029ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0029ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002e74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
