Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xbc thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e78a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x810 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c00004f0                memset
                0x00000000c0000520                strlen
                0x00000000c0000550                strpbrk
                0x00000000c00005a0                strtok
                0x00000000c00005f0                strcpy
                0x00000000c0000630                strncpy
                0x00000000c00006d0                strcmp
                0x00000000c0000720                strchr
                0x00000000c0000760                strncmp
                0x00000000c00007c0                strcat
                0x00000000c00007f0                strncat
                0x00000000c0000850                strstr
                0x00000000c00008b0                toupper
                0x00000000c00008d0                tolower
                0x00000000c00008f0                simple_strtoul
 .text          0x00000000c0000b90      0xfa5 core/malloc.32
                0x00000000c0000cfb                dlfree
                0x00000000c0001059                dlmalloc
                0x00000000c000158a                dlrealloc
                0x00000000c000172e                dlmemalign
                0x00000000c0001851                dlcalloc
                0x00000000c00018eb                dlcfree
                0x00000000c00018f0                dlindependent_calloc
                0x00000000c0001915                dlindependent_comalloc
                0x00000000c000192c                dlvalloc
                0x00000000c0001957                dlpvalloc
                0x00000000c000198d                dlmalloc_trim
                0x00000000c000199a                dlmalloc_usable_size
                0x00000000c00019cb                dlmallinfo
                0x00000000c0001a9a                dlmalloc_stats
                0x00000000c0001aab                dlmallopt
 *fill*         0x00000000c0001b35        0x3 
 .text          0x00000000c0001b38      0x1f2 libk/ctype.32
                0x00000000c0001b38                isblank
                0x00000000c0001b58                iscntrl
                0x00000000c0001b78                isdigit
                0x00000000c0001b94                islower
                0x00000000c0001bb0                isspace
                0x00000000c0001bd8                isupper
                0x00000000c0001bf4                isalpha
                0x00000000c0001c24                isalnum
                0x00000000c0001c54                ispunct
                0x00000000c0001c94                isgraph
                0x00000000c0001cc4                isprint
                0x00000000c0001cec                isxdigit
 .text          0x00000000c0001d2a        0x0 libk/string.32
 .text          0x00000000c0001d2a       0x51 fs/fat/diskio.32
                0x00000000c0001d2a                disk_status
                0x00000000c0001d2d                disk_initialize
                0x00000000c0001d30                disk_read
                0x00000000c0001d46                disk_write
                0x00000000c0001d5c                disk_ioctl
 .text          0x00000000c0001d7b     0x3e3b fs/fat/ff.32
                0x00000000c0003bb7                f_mount
                0x00000000c0003c19                f_open
                0x00000000c0003edc                f_read
                0x00000000c00040bd                f_write
                0x00000000c0004307                f_sync
                0x00000000c00043cc                f_close
                0x00000000c00043fb                f_lseek
                0x00000000c00045ab                f_opendir
                0x00000000c0004676                f_closedir
                0x00000000c0004698                f_readdir
                0x00000000c000472a                f_stat
                0x00000000c00047a9                f_getfree
                0x00000000c00048b2                f_truncate
                0x00000000c000499c                f_unlink
                0x00000000c0004abc                f_mkdir
                0x00000000c0004c57                f_rename
                0x00000000c0004e0f                f_chmod
                0x00000000c0004ebf                f_utime
                0x00000000c0004f6f                f_getlabel
                0x00000000c00050c4                f_setlabel
                0x00000000c0005254                f_expand
                0x00000000c00053c1                f_mkfs
 *fill*         0x00000000c0005bb6        0x2 
 .text          0x00000000c0005bb8       0x2f fs/fat/ffsystem.32
                0x00000000c0005bb8                ff_memalloc
                0x00000000c0005bd0                ff_memfree
 *fill*         0x00000000c0005be7        0x1 
 .text          0x00000000c0005be8      0x2d4 fs/fat/ffunicode.32
                0x00000000c0005be8                ff_uni2oem
                0x00000000c0005c84                ff_oem2uni
                0x00000000c0005cfc                ff_wtoupper
 .text          0x00000000c0005ebc      0xd28 fs/iso9660/iso9660.32
                0x00000000c0006108                isoReadDiscSector
                0x00000000c00061a3                strnicmp
                0x00000000c0006443                stricmp
                0x00000000c000648f                iso_open
                0x00000000c0006519                iso_close
                0x00000000c0006537                iso_read
                0x00000000c000664d                iso_seek
                0x00000000c00066d1                iso_tell
                0x00000000c0006702                iso_total
                0x00000000c000672d                fn_postprocess
                0x00000000c0006754                iso_readdir
                0x00000000c00069af                iso_reset
                0x00000000c00069cc                init_percd
                0x00000000c0006ac6                iso_ioctl
                0x00000000c0006ade                fs_iso9660_init
                0x00000000c0006b74                fs_iso9660_shutdown
 .text          0x00000000c0006be4      0x6b9 core/computer.32
                0x00000000c0006be4                Computer::close(int, int, void*)
                0x00000000c0006c29                Krnl::firstTask()
                0x00000000c0006d64                Computer::Computer()
                0x00000000c0006d64                Computer::Computer()
                0x00000000c0006e14                Computer::setBootMessage(char const*)
                0x00000000c0006e16                Computer::detectFeatures()
                0x00000000c000703c                Computer::displayFeatures()
                0x00000000c000703e                Computer::rdmsr(unsigned int)
                0x00000000c000706a                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00070a6                Computer::shutdown()
                0x00000000c00070be                Computer::restart()
                0x00000000c00070d6                Computer::sleep()
                0x00000000c00070ea                Computer::nmiEnabled()
                0x00000000c00070f6                Computer::readCMOS(unsigned char)
                0x00000000c0007112                Computer::enableNMI(bool)
                0x00000000c000712a                Computer::open(int, int, void*)
                0x00000000c00071fe                Computer::disableNMI()
                0x00000000c000720e                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0007232                Computer::handleNMI()
 *fill*         0x00000000c000729d        0x1 
 .text          0x00000000c000729e      0x1db core/gdt.32
                0x00000000c000729e                GDTEntry::setBase(unsigned int)
                0x00000000c00072ba                GDTEntry::setLimit(unsigned int)
                0x00000000c00072d8                GDT::GDT()
                0x00000000c00072d8                GDT::GDT()
                0x00000000c00072ee                GDT::addEntry(GDTEntry)
                0x00000000c0007310                GDT::getNumberOfEntries()
                0x00000000c0007318                GDT::flush()
                0x00000000c000733a                GDT::setup()
 .text          0x00000000c0007479       0x1d core/idle.32
                0x00000000c0007479                idleFunction(void*)
 *fill*         0x00000000c0007496        0x2 
 .text          0x00000000c0007498      0x46c core/idt.32
                0x00000000c0007498                IDTEntry::IDTEntry(bool)
                0x00000000c0007498                IDTEntry::IDTEntry(bool)
                0x00000000c0007512                IDTEntry::setOffset(unsigned int)
                0x00000000c0007528                IDT::IDT()
                0x00000000c0007528                IDT::IDT()
                0x00000000c000752a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0007532                IDT::addEntry(IDTEntry, int)
                0x00000000c000754c                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007584                IDT::flush()
                0x00000000c000759e                IDT::setup()
 .text          0x00000000c0007904      0x185 core/kheap.32
                0x00000000c0007904                sbrk
                0x00000000c0007998                mmap
                0x00000000c00079ae                munmap
                0x00000000c00079c4                liballoc_lock()
                0x00000000c00079d2                liballoc_unlock()
                0x00000000c00079e8                liballoc_alloc(int)
                0x00000000c0007a00                liballoc_free(void*, int)
                0x00000000c0007a1b                realloc
                0x00000000c0007a2f                malloc
                0x00000000c0007a3f                free
                0x00000000c0007a4f                rfree
                0x00000000c0007a5f                calloc
 .text          0x00000000c0007a89       0xc3 core/main.32
                0x00000000c0007a89                KeEntryPoint
 .text          0x00000000c0007b4c      0x639 core/physmgr.32
                0x00000000c0007b4c                Phys::allocateDMA(unsigned long)
                0x00000000c0007c3a                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007c75                Phys::setPageState(unsigned long, bool)
                0x00000000c0007cb5                Phys::getPageState(unsigned long)
                0x00000000c0007cd1                Phys::freePage(unsigned long)
                0x00000000c0007d3a                Phys::allocatePage()
                0x00000000c0007e09                Phys::allocateContiguousPages(int)
                0x00000000c0007e70                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007ea8                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008185        0x1 
 .text          0x00000000c0008186      0x263 core/pipe.32
                0x00000000c0008186                Pipe::isAtty()
                0x00000000c000818a                Pipe::~Pipe()
                0x00000000c000818a                Pipe::~Pipe()
                0x00000000c00081ae                Pipe::~Pipe()
                0x00000000c00081d6                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008290                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008382                Pipe::Pipe(int)
                0x00000000c0008382                Pipe::Pipe(int)
 *fill*         0x00000000c00083e9        0x1 
 .text          0x00000000c00083ea      0xab8 core/terminal.32
                0x00000000c00083ea                VgaText::isAtty()
                0x00000000c00083ee                VgaText::~VgaText()
                0x00000000c00083ee                VgaText::~VgaText()
                0x00000000c0008412                VgaText::~VgaText()
                0x00000000c000843c                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000845c                setTerminalScrollLock(bool)
                0x00000000c000845d                doTerminalCycle()
                0x00000000c000845e                addToTerminalCycle(VgaText*)
                0x00000000c000845f                scrollTerminalScrollLock(int)
                0x00000000c0008460                VgaText::updateTitle()
                0x00000000c0008462                VgaText::load()
                0x00000000c0008464                VgaText::updateCursor()
                0x00000000c000847a                VgaText::doANSI_SGR(int)
                0x00000000c00084ee                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00084fe                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000850e                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000852e                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000853a                VgaText::setTitleColour(VgaColour)
                0x00000000c0008546                VgaText::setTitle(char*)
                0x00000000c0008548                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000855a                VgaText::scrollScreen()
                0x00000000c00085ec                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00085fc                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008694                VgaText::getCursorX()
                0x00000000c000869c                VgaText::getCursorY()
                0x00000000c00086a4                VgaText::setCursor(int, int)
                0x00000000c00086bb                setActiveTerminal(VgaText*)
                0x00000000c0008706                VgaText::clearScreen()
                0x00000000c0008754                VgaText::setCursorX(int)
                0x00000000c000876c                VgaText::setCursorY(int)
                0x00000000c0008784                VgaText::incrementCursor(bool)
                0x00000000c00087d8                VgaText::decrementCursor(bool)
                0x00000000c00087fa                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00088ca                VgaText::putchar(char)
                0x00000000c00089b2                VgaText::putx(unsigned int)
                0x00000000c00089f8                VgaText::puts(char const*)
                0x00000000c0008a1e                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008a6a                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008bc0                VgaText::VgaText(char const*)
                0x00000000c0008bc0                VgaText::VgaText(char const*)
                0x00000000c0008d10                VgaText::receiveKey(unsigned char)
                0x00000000c0008e7e                VgaText::doUpdate()
                0x00000000c0008e7f                newTerminal(char*)
 *fill*         0x00000000c0008ea2        0x2 
 .text          0x00000000c0008ea4      0x1a1 core/tss.32
                0x00000000c0008ea4                TSS::TSS()
                0x00000000c0008ea4                TSS::TSS()
                0x00000000c0008eb4                TSS::setESP(unsigned long)
                0x00000000c0008ec8                TSS::flush()
                0x00000000c0008ee8                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0009045        0x1 
 .text          0x00000000c0009046      0x4ca core/unixfile.32
                0x00000000c0009046                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000909c                ReservedFilename::isAtty()
                0x00000000c00090b8                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0009116                UnixFile::getFileDescriptor()
                0x00000000c000911e                UnixFile::UnixFile(int)
                0x00000000c000911e                UnixFile::UnixFile(int)
                0x00000000c00092d2                ReservedFilename::ReservedFilename(int)
                0x00000000c00092d2                ReservedFilename::ReservedFilename(int)
                0x00000000c0009304                UnixFile::~UnixFile()
                0x00000000c0009304                UnixFile::~UnixFile()
                0x00000000c00093a0                UnixFile::~UnixFile()
                0x00000000c00093c8                ReservedFilename::~ReservedFilename()
                0x00000000c00093c8                ReservedFilename::~ReservedFilename()
                0x00000000c00093ec                ReservedFilename::~ReservedFilename()
                0x00000000c0009413                getFromFileDescriptor(int)
 .text          0x00000000c0009510     0x1243 core/virtmgr.32
                0x00000000c0009510                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000954a                Virt::getPageState(unsigned long)
                0x00000000c000956d                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009691                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00096b4                Virt::swapIDToSector(unsigned long)
                0x00000000c00096ca                Virt::allocateSwapfilePage()
                0x00000000c0009749                Virt::virtualMemorySetup()
                0x00000000c000979a                Virt::setupPageSwapping(int)
                0x00000000c000980c                VAS::VAS(VAS*)
                0x00000000c000980c                VAS::VAS(VAS*)
                0x00000000c000983a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009868                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009887                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000999a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00099be                VAS::virtualToPhysical(unsigned long)
                0x00000000c00099d8                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009a1c                VAS::VAS()
                0x00000000c0009a1c                VAS::VAS()
                0x00000000c0009a86                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009aba                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009ae6                VAS::~VAS()
                0x00000000c0009ae6                VAS::~VAS()
                0x00000000c0009c54                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009d5c                VAS::allocatePages(int, int)
                0x00000000c0009f44                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009f62                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a022                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a116                VAS::VAS(bool)
                0x00000000c000a116                VAS::VAS(bool)
                0x00000000c000a3a4                VAS::evict(unsigned long)
                0x00000000c000a470                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a57e                VAS::scanForEviction()
                0x00000000c000a658                mapVASFirstTime
 .text          0x00000000c000a753       0x5f coreobjs/c++.32
                0x00000000c000a753                __cxa_atexit
                0x00000000c000a756                __cxa_finalize
                0x00000000c000a757                __stack_chk_fail
                0x00000000c000a78d                __cxa_pure_virtual
                0x00000000c000a79e                operator new[](unsigned long)
                0x00000000c000a7a3                operator delete(void*, unsigned long)
                0x00000000c000a7a8                operator delete[](void*)
                0x00000000c000a7ad                operator delete[](void*, unsigned long)
 .text          0x00000000c000a7b2      0x225 dbg/kconsole.32
                0x00000000c000a7b2                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a823                Dbg::logc(char)
                0x00000000c000a843                Dbg::logs(char*)
                0x00000000c000a862                Dbg::logWriteInt(unsigned int)
                0x00000000c000a880                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a8a1                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000a9d7        0x1 
 .text          0x00000000c000a9d8      0xc86 fs/vfs.32
                0x00000000c000a9d8                File::read(unsigned long long, void*, int*)
                0x00000000c000aa30                File::write(unsigned long long, void*, int*)
                0x00000000c000aa88                Directory::read(unsigned long long, void*, int*)
                0x00000000c000aae0                Directory::write(unsigned long long, void*, int*)
                0x00000000c000ab0e                File::isAtty()
                0x00000000c000ab12                Directory::isAtty()
                0x00000000c000ab16                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ab1c                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ab22                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ab28                File::~File()
                0x00000000c000ab28                File::~File()
                0x00000000c000ab4c                File::~File()
                0x00000000c000ab76                Directory::~Directory()
                0x00000000c000ab76                Directory::~Directory()
                0x00000000c000ab9a                Directory::~Directory()
                0x00000000c000abc4                Filesystem::Filesystem()
                0x00000000c000abc4                Filesystem::Filesystem()
                0x00000000c000abe8                Filesystem::~Filesystem()
                0x00000000c000abe8                Filesystem::~Filesystem()
                0x00000000c000abf6                Filesystem::~Filesystem()
                0x00000000c000ac1a                Fs::getcwd(Process*, char*, int)
                0x00000000c000ac44                Fs::initVFS()
                0x00000000c000ac6e                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000ae4a                File::File(char const*, Process*)
                0x00000000c000ae4a                File::File(char const*, Process*)
                0x00000000c000af06                File::open(FileOpenMode)
                0x00000000c000af64                File::close()
                0x00000000c000afc4                File::seek(unsigned long long)
                0x00000000c000b01a                File::tell(unsigned long long*)
                0x00000000c000b06a                File::rewind()
                0x00000000c000b07e                File::unlink()
                0x00000000c000b0ca                File::rename(char const*)
                0x00000000c000b118                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b174                File::exists()
                0x00000000c000b1b2                File::stat(unsigned long long*, bool*)
                0x00000000c000b213                Fs::setcwd(Process*, char*)
                0x00000000c000b370                Directory::Directory(char const*, Process*)
                0x00000000c000b370                Directory::Directory(char const*, Process*)
                0x00000000c000b42c                Directory::open()
                0x00000000c000b488                Directory::close()
                0x00000000c000b4e8                Directory::unlink()
                0x00000000c000b534                Directory::rename(char const*)
                0x00000000c000b582                Directory::exists()
                0x00000000c000b5c0                Directory::read(dirent*)
                0x00000000c000b60c                Directory::create()
                0x00000000c000b658                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b65e        0x2 
 .text          0x00000000c000b660       0x86 hal/bus.32
                0x00000000c000b660                Bus::Bus(char const*)
                0x00000000c000b660                Bus::Bus(char const*)
                0x00000000c000b698                Bus::~Bus()
                0x00000000c000b698                Bus::~Bus()
                0x00000000c000b6bc                Bus::~Bus()
 .text          0x00000000c000b6e6       0x96 hal/buzzer.32
                0x00000000c000b6e6                beepThread(void*)
                0x00000000c000b723                Krnl::beep(int, int, bool)
 .text          0x00000000c000b77c      0x467 hal/clock.32
                0x00000000c000b77c                User::loadClockSettings(int)
                0x00000000c000b7ce                Clock::Clock(char const*)
                0x00000000c000b7ce                Clock::Clock(char const*)
                0x00000000c000b804                Clock::~Clock()
                0x00000000c000b804                Clock::~Clock()
                0x00000000c000b828                Clock::~Clock()
                0x00000000c000b852                Clock::timeInSecondsLocal()
                0x00000000c000b89a                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b8f3                datetimeToSeconds(datetime_t)
                0x00000000c000ba1a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000ba7a                secondsToDatetime(unsigned long long)
                0x00000000c000bbbe                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bbe3        0x1 
 .text          0x00000000c000bbe4      0x464 hal/device.32
                0x00000000c000bbe4                Device::hibernate()
                0x00000000c000bbe6                Device::wake()
                0x00000000c000bbe8                Device::detect()
                0x00000000c000bbea                Device::disableLegacy()
                0x00000000c000bbec                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bbee                DriverlessDevice::close(int, int, void*)
                0x00000000c000bbf2                DriverlessDevice::detect()
                0x00000000c000bbf4                DriverlessDevice::open(int, int, void*)
                0x00000000c000bc08                Device::~Device()
                0x00000000c000bc08                Device::~Device()
                0x00000000c000bc16                Device::~Device()
                0x00000000c000bc3e                Device::findAndLoadDriver()
                0x00000000c000bc4c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bc72                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bcb2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bcdc                Device::getParent()
                0x00000000c000bce8                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000bd06                Device::addChild(Device*)
                0x00000000c000bd4a                Device::removeAllChildren()
                0x00000000c000bd90                Device::hibernateAll()
                0x00000000c000bdc0                Device::wakeAll()
                0x00000000c000bdf0                Device::detectAll()
                0x00000000c000be20                Device::disableLegacyAll()
                0x00000000c000be22                Device::loadDriversForAll()
                0x00000000c000be24                Device::closeAll()
                0x00000000c000be5a                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000be90                Device::setName(char const*)
                0x00000000c000be9e                Device::Device(char const*)
                0x00000000c000be9e                Device::Device(char const*)
                0x00000000c000bf9a                Device::getName()
                0x00000000c000bfa4                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bfa4                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bfda                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c01e                getDevicesOfType(DeviceType)
 .text          0x00000000c000c048       0x86 hal/diskctrl.32
                0x00000000c000c048                HardDiskController::HardDiskController(char const*)
                0x00000000c000c048                HardDiskController::HardDiskController(char const*)
                0x00000000c000c080                HardDiskController::~HardDiskController()
                0x00000000c000c080                HardDiskController::~HardDiskController()
                0x00000000c000c0a4                HardDiskController::~HardDiskController()
 .text          0x00000000c000c0ce       0xe2 hal/diskphys.32
                0x00000000c000c0ce                PhysicalDisk::eject()
                0x00000000c000c0d2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c0d2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c13a                PhysicalDisk::startCache()
                0x00000000c000c162                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c162                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c186                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c1b0        0x0 hal/fpu.32
 .text          0x00000000c000c1b0      0x360 hal/intctrl.32
                0x00000000c000c1b0                int_handler
                0x00000000c000c23a                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c284                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c3c7                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c3fb                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c471                setupINTS()
                0x00000000c000c4ce                convertLegacyIRQNumber(int)
 .text          0x00000000c000c510      0x8be hal/keybrd.32
                0x00000000c000c510                startGUI(void*)
                0x00000000c000c57e                startGUIVESA(void*)
                0x00000000c000c5ec                sendKeyToTerminal(unsigned char)
                0x00000000c000c6c8                sendKeyboardToken(KeyboardToken)
                0x00000000c000cbb1                clearInternalKeybuffer(VgaText*)
                0x00000000c000cbe7                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000cd44                Keyboard::Keyboard(char const*)
                0x00000000c000cd44                Keyboard::Keyboard(char const*)
                0x00000000c000cd80                Keyboard::~Keyboard()
                0x00000000c000cd80                Keyboard::~Keyboard()
                0x00000000c000cda4                Keyboard::~Keyboard()
 .text          0x00000000c000cdce      0x3f8 hal/logidisk.32
                0x00000000c000cdce                LogicalDisk::close(int, int, void*)
                0x00000000c000cdd2                LogicalDisk::~LogicalDisk()
                0x00000000c000cdd2                LogicalDisk::~LogicalDisk()
                0x00000000c000cdf6                LogicalDisk::~LogicalDisk()
                0x00000000c000ce20                LogicalDisk::open(int, int, void*)
                0x00000000c000ce34                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000ce6c                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000ceb2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ceb2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cf72                LogicalDisk::assignDriveLetter()
                0x00000000c000d02c                LogicalDisk::mount()
                0x00000000c000d074                LogicalDisk::unmount()
                0x00000000c000d084                LogicalDisk::eject()
                0x00000000c000d098                LogicalDisk::unassignDriveLetter()
                0x00000000c000d0ee                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d15a                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000d1c6        0x2 
 .text          0x00000000c000d1c8       0x86 hal/mouse.32
                0x00000000c000d1c8                Mouse::Mouse(char const*)
                0x00000000c000d1c8                Mouse::Mouse(char const*)
                0x00000000c000d200                Mouse::~Mouse()
                0x00000000c000d200                Mouse::~Mouse()
                0x00000000c000d224                Mouse::~Mouse()
 .text          0x00000000c000d24e       0x90 hal/nic.32
                0x00000000c000d24e                NIC::getMAC()
                0x00000000c000d254                NIC::write(int, unsigned char*, int*)
                0x00000000c000d25a                NIC::NIC(char const*)
                0x00000000c000d25a                NIC::NIC(char const*)
                0x00000000c000d290                NIC::~NIC()
                0x00000000c000d290                NIC::~NIC()
                0x00000000c000d2b4                NIC::~NIC()
 .text          0x00000000c000d2de      0x33b hal/partition.32
                0x00000000c000d2de                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d386                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d619        0x3 
 .text          0x00000000c000d61c       0x86 hal/serial.32
                0x00000000c000d61c                Serial::Serial(char const*)
                0x00000000c000d61c                Serial::Serial(char const*)
                0x00000000c000d654                Serial::~Serial()
                0x00000000c000d654                Serial::~Serial()
                0x00000000c000d678                Serial::~Serial()
 *fill*         0x00000000c000d6a2        0x2 
 .text          0x00000000c000d6a4      0x234 hal/timer.32
                0x00000000c000d6a4                Timer::Timer(char const*)
                0x00000000c000d6a4                Timer::Timer(char const*)
                0x00000000c000d6dc                Timer::~Timer()
                0x00000000c000d6dc                Timer::~Timer()
                0x00000000c000d700                Timer::~Timer()
                0x00000000c000d72a                Timer::read()
                0x00000000c000d735                setupTimer(int)
                0x00000000c000d770                timerHandler(unsigned int)
 .text          0x00000000c000d8d8      0x444 hal/vcache.32
                0x00000000c000d8d8                VCache::VCache(PhysicalDisk*)
                0x00000000c000d8d8                VCache::VCache(PhysicalDisk*)
                0x00000000c000da48                VCache::invalidateReadBuffer()
                0x00000000c000da58                VCache::writeWriteBuffer()
                0x00000000c000daa4                VCache::~VCache()
                0x00000000c000daa4                VCache::~VCache()
                0x00000000c000dafc                VCache::~VCache()
                0x00000000c000db24                VCache::write(unsigned long long, int, void*)
                0x00000000c000dc12                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000dd1c      0x4c7 hal/video.32
                0x00000000c000dd1c                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000dd66                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ddd0                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000de56                Video::clearScreen(unsigned int)
                0x00000000c000de8a                Video::putpixel(int, int, unsigned int)
                0x00000000c000de98                Video::readPixelApprox(int, int)
                0x00000000c000deac                Video::Video(char const*)
                0x00000000c000deac                Video::Video(char const*)
                0x00000000c000dee2                Video::~Video()
                0x00000000c000dee2                Video::~Video()
                0x00000000c000df06                Video::~Video()
                0x00000000c000df30                Video::isMonochrome()
                0x00000000c000df3c                Video::getWidth()
                0x00000000c000df48                Video::getHeight()
                0x00000000c000df54                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e010                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e178                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e1e3        0x1 
 .text          0x00000000c000e1e4     0x138d hw/acpi.32
                0x00000000c000e1e4                ACPI::close(int, int, void*)
                0x00000000c000e298                findRSDP()
                0x00000000c000e330                loadACPITables(unsigned char*)
                0x00000000c000e59c                findRSDT(unsigned char*)
                0x00000000c000e6f8                findDataTable(unsigned char*, char*)
                0x00000000c000e778                scanMADT()
                0x00000000c000ec30                ACPI::ACPI()
                0x00000000c000ec30                ACPI::ACPI()
                0x00000000c000ec84                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ed80                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ee4c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ee54                ACPI::detectPCI()
                0x00000000c000f074                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f0c0                ACPI::sleep()
                0x00000000c000f0dc                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f571        0x1 
 .text          0x00000000c000f572      0xba5 hw/cpu.32
                0x00000000c000f572                CPU::close(int, int, void*)
                0x00000000c000f576                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f592                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f5aa                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f61e                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f6a2                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f6d0                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f6fe                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f72c                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f75a                CPU::CPU()
                0x00000000c000f75a                CPU::CPU()
                0x00000000c000f7e8                CPU::displayFeatures()
                0x00000000c000f7ea                CPU::detectFeatures()
                0x00000000c000febe                CPU::setupSMEP()
                0x00000000c000feca                CPU::setupUMIP()
                0x00000000c000fed4                CPU::setupTSC()
                0x00000000c000fede                CPU::setupLargePages()
                0x00000000c000fee8                CPU::setupPAT()
                0x00000000c000ff24                CPU::setupMTRR()
                0x00000000c000ff26                CPU::setupGlobalPages()
                0x00000000c000ff30                CPU::allowUsermodeDataAccess()
                0x00000000c000ff42                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ff54                CPU::setupSMAP()
                0x00000000c000ff62                CPU::setupFeatures()
                0x00000000c001002e                CPU::open(int, int, void*)
 .text          0x00000000c0010117       0xd8 krnl/bootmsg.32
                0x00000000c0010117                KeDisplaySplashScreen()
                0x00000000c001018c                KeSetBootMessage(char const*)
 *fill*         0x00000000c00101ef        0x1 
 .text          0x00000000c00101f0      0x583 krnl/env.32
                0x00000000c00101f0                EnvVarContainer::getEnv(char const*)
                0x00000000c001022e                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00102f0                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00102f2                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00104dc                EnvVarContainer::__loadSystem()
                0x00000000c00104f6                EnvVarContainer::__loadUser()
                0x00000000c00104f8                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104f8                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001051a                EnvVarContainer::~EnvVarContainer()
                0x00000000c001051a                EnvVarContainer::~EnvVarContainer()
                0x00000000c001054a                Krnl::getEnv(Process*, char const*)
                0x00000000c00105af                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00105c9                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00105e8                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00105fb                Krnl::deleteEnvSystem(char const*)
                0x00000000c00105fc                Krnl::deleteEnvUser(char const*)
                0x00000000c00105fd                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c00105fe                Krnl::newProcessEnv(Process*)
                0x00000000c001061e                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c001066a                Krnl::loadSystemEnv()
                0x00000000c0010698                Krnl::loadUserEnv()
                0x00000000c00106be                Krnl::flushEnv()
                0x00000000c00106bf                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00106df                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0010773       0x94 krnl/inlines.32
                0x00000000c0010773                CPU::current()
                0x00000000c001077f                operator new(unsigned long)
                0x00000000c0010784                operator delete(void*)
                0x00000000c0010789                disableIRQs()
                0x00000000c001078b                enableIRQs()
                0x00000000c001078d                lockScheduler()
                0x00000000c0010795                unlockScheduler()
                0x00000000c00107a4                lockStuff()
                0x00000000c00107b2                unlockStuff()
                0x00000000c00107ec                Virt::getAKernelVAS()
                0x00000000c00107f2                __not_memcpy
 .text          0x00000000c0010807        0xc krnl/panic.32
                0x00000000c0010807                KePanic(char const*)
 .text          0x00000000c0010813      0x142 krnl/powctrl.32
                0x00000000c0010813                Krnl::powerThread(void*)
                0x00000000c0010841                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010857                Krnl::userIOReceived()
                0x00000000c0010862                Krnl::handlePowerButton()
                0x00000000c0010897                Krnl::handleSleepButton()
                0x00000000c00108cc                Krnl::setupPowerManager()
 .text          0x00000000c0010955       0x9b krnl/random.32
                0x00000000c0010955                KeRand()
                0x00000000c0010995                KeSeedRand(unsigned int)
                0x00000000c00109be                KeInitRand()
 .text          0x00000000c00109f0      0x1bc krnl/resolve.32
                0x00000000c00109f0                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010bac      0x313 krnl/signal.32
                0x00000000c0010bac                KiSigKill(int)
                0x00000000c0010bc0                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010bc1                KiDefaultSignalHandlerPause(int)
                0x00000000c0010bed                KiDefaultSignalHandlerResume(int)
                0x00000000c0010c19                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010c1e                KeInitSignals()
                0x00000000c0010c69                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010c9f                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010d1c                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010e0b                KiCheckSignalZ
                0x00000000c0010e4d                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010e88                KiFinishSignalZ
 .text          0x00000000c0010ebf      0xc5d krnl/syscalls.32
                0x00000000c0010ebf                SysSeekDir(regs*)
                0x00000000c0010ec4                SysTellDir(regs*)
                0x00000000c0010ec9                SysVerify(regs*)
                0x00000000c0010ed3                SysGetArgc(regs*)
                0x00000000c0010ee7                SysTTYName(regs*)
                0x00000000c0010eef                SysFormatDisk(regs*)
                0x00000000c0010f56                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010fa0                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010ffd                SysShutdown(regs*)
                0x00000000c001108a                SysRealpath(regs*)
                0x00000000c00110d5                SysReadDir(regs*)
                0x00000000c0011153                SysIsATTY(regs*)
                0x00000000c00111ad                SysSeek(regs*)
                0x00000000c0011207                SysTell(regs*)
                0x00000000c0011270                SysSize(regs*)
                0x00000000c00112df                SysSizeFromFilename(regs*)
                0x00000000c001137e                SysClose(regs*)
                0x00000000c00113da                SysOpenDir(regs*)
                0x00000000c0011457                SysMakeDir(regs*)
                0x00000000c00114c5                SysCloseDir(regs*)
                0x00000000c0011524                SysWait(regs*)
                0x00000000c0011545                SysNotImpl(regs*)
                0x00000000c0011560                SysPanic(regs*)
                0x00000000c001157b                SysRmdir(regs*)
                0x00000000c00115d9                SysUnlink(regs*)
                0x00000000c0011637                SysGetArgv(regs*)
                0x00000000c0011688                SysUSleep(regs*)
                0x00000000c00116b1                SysSpawn(regs*)
                0x00000000c0011722                SysGetEnv(regs*)
                0x00000000c00117d7                SysSetFatAttrib(regs*)
                0x00000000c0011840                SysPipe(regs*)
                0x00000000c0011885                SysGetUnixTime(regs*)
                0x00000000c0011899                string_ends_with(char const*, char const*)
                0x00000000c00118e4                SysOpen(regs*)
                0x00000000c0011ada                KeSystemCall(regs*, void*)
 .text          0x00000000c0011b1c      0x159 net/ethernet.32
                0x00000000c0011b1c                KeSwitchEndian16(unsigned short)
                0x00000000c0011b40                KeSwitchEndian32(unsigned int)
                0x00000000c0011b70                EthernetCRC32(unsigned char*, int)
                0x00000000c0011c14                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0011c75      0xd51 reg/cm.32
                0x00000000c0011c75                CmOpen(char const*)
                0x00000000c0011d93                CmClose(Reghive_Tag*)
                0x00000000c0011da9                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011de5                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0011e5c                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0011e9b                CmGetNext(Reghive_Tag*, int)
                0x00000000c0011ecd                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011f09                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c0011f31                CmUpdateHeader(Reghive_Tag*)
                0x00000000c0011f52                CmExpand(Reghive_Tag*, int)
                0x00000000c0011fcd                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c0012053                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012147                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c001227f                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c00122e0                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012310                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012347                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c0012371                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c00123b1                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012455                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c0012483                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c0012620                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c001266d                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00126e7                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c001273a                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c00127fe                zStrtok(char*, char const*)
                0x00000000c0012870                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c00128f1                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0012994                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c00129c6      0x54e reg/registry.32
                0x00000000c00129c6                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012b52                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0012ca3                Reg::getLine(char*, char*, char*)
                0x00000000c0012cda                Reg::readInt(char*, char*, int*)
                0x00000000c0012dd5                Reg::readString(char*, char*, char*, int)
                0x00000000c0012e56                Reg::readBool(char*, char*, bool*)
                0x00000000c0012e7b                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0012ea7                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0012ed3                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0012f14       0x36 sys/eject.32
                0x00000000c0012f14                SysEject(regs*)
 .text          0x00000000c0012f4a       0x18 sys/exit.32
                0x00000000c0012f4a                SysExit(regs*)
 .text          0x00000000c0012f62       0x1f sys/getcwd.32
                0x00000000c0012f62                SysGetCwd(regs*)
 .text          0x00000000c0012f81        0xc sys/getpid.32
                0x00000000c0012f81                SysGetPID(regs*)
 .text          0x00000000c0012f8d       0x1a sys/getramdata.32
                0x00000000c0012f8d                SysGetRAMData(regs*)
 .text          0x00000000c0012fa7       0x82 sys/getvgaptr.32
                0x00000000c0012fa7                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013029        0x3 
 .text          0x00000000c001302c       0xb9 sys/kill.32
                0x00000000c001302c                SysKill(regs*)
 .text          0x00000000c00130e5       0xa8 sys/loaddll.32
                0x00000000c00130e5                SysLoadDLL(regs*)
 .text          0x00000000c001318d       0x68 sys/read.32
                0x00000000c001318d                SysRead(regs*)
 .text          0x00000000c00131f5       0x29 sys/registersignal.32
                0x00000000c00131f5                SysRegisterSignal(regs*)
 .text          0x00000000c001321e      0x19c sys/registry.32
                0x00000000c001321e                SysRegistryGetTypeFromPath(regs*)
                0x00000000c0013295                SysRegistryReadExtent(regs*)
                0x00000000c00132dd                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013305                SysRegistryEnterDirectory(regs*)
                0x00000000c001332d                SysRegistryGetNext(regs*)
                0x00000000c0013355                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001338f                SysRegistryOpen(regs*)
                0x00000000c00133a3                SysRegistryClose(regs*)
 .text          0x00000000c00133ba       0x55 sys/sbrk.32
                0x00000000c00133ba                SysSbrk(regs*)
 .text          0x00000000c001340f       0x1c sys/setcwd.32
                0x00000000c001340f                SysSetCwd(regs*)
 .text          0x00000000c001342b       0x96 sys/settime.32
                0x00000000c001342b                SysSetTime(regs*)
 .text          0x00000000c00134c1       0x4a sys/timezone.32
                0x00000000c00134c1                SysTimezone(regs*)
 .text          0x00000000c001350b       0x68 sys/write.32
                0x00000000c001350b                SysWrite(regs*)
 .text          0x00000000c0013573       0x62 sys/wsbe.32
                0x00000000c0013573                SysWsbe(regs*)
 .text          0x00000000c00135d5       0x25 sys/yield.32
                0x00000000c00135d5                SysYield(regs*)
 .text          0x00000000c00135fa     0x11f0 thr/elf.32
                0x00000000c00135fa                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0013881                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013aa0                Thr::runtimeReferenceHelper()
                0x00000000c0013ab3                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013b02                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0013dc0                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00144f2                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0014524                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001455b                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0014575                Thr::loadDLL(char const*, bool)
                0x00000000c00147b1                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00147ea        0x2 
 .text          0x00000000c00147ec     0x13a5 thr/prcssthr.32
                0x00000000c00147ec                userModeEntryPoint(void*)
                0x00000000c0014814                changeTSS
                0x00000000c0014844                switchToThread(ThreadControlBlock*)
                0x00000000c00148f4                Process::addArgs(char**)
                0x00000000c0014960                Process::Process(char const*, Process*, char**)
                0x00000000c0014960                Process::Process(char const*, Process*, char**)
                0x00000000c0014b6c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014b6c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014d40                taskStartupFunction
                0x00000000c0014d4c                Semaphore::Semaphore(int)
                0x00000000c0014d4c                Semaphore::Semaphore(int)
                0x00000000c0014d7c                Mutex::Mutex()
                0x00000000c0014d7c                Mutex::Mutex()
                0x00000000c0014d90                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0014e8c                Process::createUserThread()
                0x00000000c0014eac                setupMultitasking(void (*)())
                0x00000000c0014fd0                schedule()
                0x00000000c0015064                Semaphore::tryAcquire()
                0x00000000c0015124                Semaphore::assertLocked(char const*)
                0x00000000c00151a8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00151d0                blockTask(TaskState)
                0x00000000c0015208                waitTask(int, int*, int)
                0x00000000c001524c                milliTenthSleepUntil(unsigned int)
                0x00000000c00152ec                milliTenthSleep(unsigned int)
                0x00000000c0015300                sleep(unsigned int)
                0x00000000c0015310                Semaphore::acquire()
                0x00000000c00153d8                taskReturned
                0x00000000c001541c                Thr::processFromPID(int)
                0x00000000c00154c8                unblockTask(ThreadControlBlock*)
                0x00000000c0015574                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015844                cleanerTaskFunction(void*)
                0x00000000c001594c                terminateTask(int)
                0x00000000c0015a38                Thr::terminateFromIRQ(int)
                0x00000000c0015a48                Semaphore::release()
 .text          0x00000000c0015b91      0xbea vm86/vm8086.32
                0x00000000c0015b91                Vm::inbv(unsigned short)
                0x00000000c0015ba4                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015bda                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015bea                Vm::getSegment(unsigned int)
                0x00000000c0015bf2                Vm::getOffset(unsigned int)
                0x00000000c0015bf7                Vm::mainloop2()
                0x00000000c0015c31                Vm::mainVm8086Loop(void*)
                0x00000000c0015c41                Vm::mainloop3(unsigned long)
                0x00000000c0015c67                Vm::initialise8086()
                0x00000000c0015caa                Vm::finish8086()
                0x00000000c0015d0b                Vm::getOutput8086(unsigned char*)
                0x00000000c0015d30                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015de9                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015f74                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0015ffd                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001600e                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016020                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016031                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0016046                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001605c                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0016071                Vm::faultHandler(regs*)
 .text          0x00000000c001677b      0xaac arch/i386/hal.32
                0x00000000c001677b                noCopro(unsigned long)
                0x00000000c001677c                nmiHandler(regs*, void*)
                0x00000000c0016795                doubleFault(regs*, void*)
                0x00000000c00167ae                displayDebugInfo(regs*)
                0x00000000c0016b0a                HalSystemIdle()
                0x00000000c0016b86                displayProgramFault(char const*)
                0x00000000c0016bd2                gpFault(regs*, void*)
                0x00000000c0016c39                pgFault(regs*, void*)
                0x00000000c0016cc2                otherISRHandler(regs*, void*)
                0x00000000c0016cf6                opcodeFault(regs*, void*)
                0x00000000c0016d79                i386SaveCoprocessor(void*)
                0x00000000c0016d8d                i386LoadCoprocessor(void*)
                0x00000000c0016da1                x87EmulHandler(regs*, void*)
                0x00000000c0016e3e                HalInitialiseCoprocessor()
                0x00000000c0016eec                HalPanic(char const*)
                0x00000000c0016fe5                HalQueryPerformanceCounter()
                0x00000000c0017000                HalInitialise()
                0x00000000c00171b6                HalMakeBeep(int)
                0x00000000c00171f0                HalGetRand()
                0x00000000c00171f3                HalEndOfInterrupt(int)
                0x00000000c0017224                HalRestart()
                0x00000000c0017225                HalShutdown()
                0x00000000c0017226                HalSleep()
 *fill*         0x00000000c0017227        0x1 
 .text          0x00000000c0017228      0x2dc arch/i386/pic.32
                0x00000000c0017228                picIoWait()
                0x00000000c0017230                picDisable()
                0x00000000c0017264                picGetIRQReg(int)
                0x00000000c00172e0                picOpen()
                0x00000000c0017464                picEOI(int)
 .text          0x00000000c0017504      0x66d arch/i386/rtc.32
                0x00000000c0017504                RTC::open(int, int, void*)
                0x00000000c0017508                RTC::close(int, int, void*)
                0x00000000c001750c                RTC::timeInSecondsUTC()
                0x00000000c001751e                RTC::timeInDatetimeUTC()
                0x00000000c0017544                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0017582                RTC::~RTC()
                0x00000000c0017582                RTC::~RTC()
                0x00000000c00175a6                RTC::~RTC()
                0x00000000c00175d0                RTC::get_update_in_progress_flag()
                0x00000000c00175ea                RTC::completeRTCRefresh()
                0x00000000c00178c4                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0017a71                rtcIRQHandler(regs*, void*)
                0x00000000c0017ab6                RTC::RTC()
                0x00000000c0017ab6                RTC::RTC()
 *fill*         0x00000000c0017b71        0x3 
 .text          0x00000000c0017b74      0x1f6 arch/i386/vga.32
                0x00000000c0017b74                HalConsoleScroll(int, int)
                0x00000000c0017c7c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0017ce0                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c0017d6a        0x2 
 .text          0x00000000c0017d6c     0x1463 fs/fat/vfslink.32
                0x00000000c0017d6c                FAT::getName()
                0x00000000c0017d74                FAT::tell(void*, unsigned long long*)
                0x00000000c0017db0                FAT::stat(void*, unsigned long long*)
                0x00000000c0017dec                FAT::~FAT()
                0x00000000c0017dec                FAT::~FAT()
                0x00000000c0017e10                FAT::~FAT()
                0x00000000c0017e38                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017edc                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0017fa0                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018184                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00183a0                FAT::allocateSwapfile(char const*, int)
                0x00000000c001855c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00186cc                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001872c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001878c                FAT::close(void*)
                0x00000000c00187e0                FAT::closeDir(void*)
                0x00000000c0018834                FAT::seek(void*, unsigned long long)
                0x00000000c001888c                fatWrapperReadDisk
                0x00000000c00188cc                fatWrapperWriteDisk
                0x00000000c001890c                fatWrapperIoctl
                0x00000000c0018a2c                FAT::FAT()
                0x00000000c0018a2c                FAT::FAT()
                0x00000000c0018a84                FAT::fixFilepath(char*)
                0x00000000c0018ac4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0018c38                FAT::openDir(char const*, void**)
                0x00000000c0018ce8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018de0                FAT::unlink(char const*)
                0x00000000c0018e60                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019014                FAT::rename(char const*, char const*)
                0x00000000c00190e0                FAT::mkdir(char const*)
                0x00000000c0019160                FAT::exists(char const*)
 *fill*         0x00000000c00191cf        0x1 
 .text          0x00000000c00191d0       0x94 fs/iso9660/helper.32
                0x00000000c00191d0                isoReadDiscSectorHelper
                0x00000000c001922c                iso_kprintf
                0x00000000c0019248                iso_kprintfd
 .text          0x00000000c0019264      0x714 fs/iso9660/vfslink.32
                0x00000000c0019264                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001926a                ISO9660::getName()
                0x00000000c0019270                ISO9660::closeDir(void*)
                0x00000000c001927a                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019280                ISO9660::unlink(char const*)
                0x00000000c0019286                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001928c                ISO9660::rename(char const*, char const*)
                0x00000000c0019292                ISO9660::mkdir(char const*)
                0x00000000c0019298                ISO9660::~ISO9660()
                0x00000000c0019298                ISO9660::~ISO9660()
                0x00000000c00192bc                ISO9660::~ISO9660()
                0x00000000c00192e4                ISO9660::exists(char const*)
                0x00000000c00192f8                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00193de                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0019426                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019468                ISO9660::tell(void*, unsigned long long*)
                0x00000000c00194a6                ISO9660::stat(void*, unsigned long long*)
                0x00000000c00194f8                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001963a                ISO9660::close(void*)
                0x00000000c001966a                ISO9660::openDir(char const*, void**)
                0x00000000c0019744                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001985f                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c00198de                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0019950                ISO9660::ISO9660()
                0x00000000c0019950                ISO9660::ISO9660()
 .text          0x00000000c0019978      0x26c hal/sound/sndcard.32
                0x00000000c0019978                SoundCard::beginPlayback()
                0x00000000c0019986                SoundCard::stopPlayback()
                0x00000000c0019994                SoundCard::SoundCard(char const*)
                0x00000000c0019994                SoundCard::SoundCard(char const*)
                0x00000000c0019a32                SoundCard::~SoundCard()
                0x00000000c0019a32                SoundCard::~SoundCard()
                0x00000000c0019a56                SoundCard::~SoundCard()
                0x00000000c0019a80                SoundCard::configureRates(int, int, int)
                0x00000000c0019ab0                SoundCard::getSamples16(int, short*)
                0x00000000c0019b0c                SoundCard::getSamples32(int, int*)
                0x00000000c0019b92                SoundCard::addChannel(SoundPort*)
                0x00000000c0019bd0                SoundCard::removeChannel(int)
 .text          0x00000000c0019be4      0x387 hal/sound/sndport.32
                0x00000000c0019be4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019be4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019c70                SoundPort::~SoundPort()
                0x00000000c0019c70                SoundPort::~SoundPort()
                0x00000000c0019ca4                SoundPort::unpause()
                0x00000000c0019cb0                SoundPort::pause()
                0x00000000c0019cbc                SoundPort::getBufferUsed()
                0x00000000c0019cc4                SoundPort::getBufferSize()
                0x00000000c0019ccc                SoundPort::buffer16(short*, int)
                0x00000000c0019d54                SoundPort::buffer32(int*, int)
                0x00000000c0019dd8                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0019ea8                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0019f6b        0x0 hw/bus/isa.32
 *fill*         0x00000000c0019f6b        0x1 
 .text          0x00000000c0019f6c      0xbd1 hw/bus/pci.32
                0x00000000c0019f6c                PCI::open(int, int, void*)
                0x00000000c0019f8a                PCI::close(int, int, void*)
                0x00000000c0019f8e                PCI::PCI()
                0x00000000c0019f8e                PCI::PCI()
                0x00000000c001a026                PCI::readBAR8(unsigned int, int)
                0x00000000c001a042                PCI::readBAR16(unsigned int, int)
                0x00000000c001a060                PCI::readBAR32(unsigned int, int)
                0x00000000c001a07c                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001a09c                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001a0be                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001a0de                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a154                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a1fe                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a222                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001a24a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001a294                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001a2bc                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a2e0                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001a304                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001a32c                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a390                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001a476                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a740                PCI::checkBus(unsigned char)
                0x00000000c001a764                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a8da                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001aa72                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001aae4                PCI::detect()
 *fill*         0x00000000c001ab3d        0x1 
 .text          0x00000000c001ab3e      0xb9a hw/diskctrl/ide.32
                0x00000000c001ab3e                IDE::close(int, int, void*)
                0x00000000c001ab42                IDE::IDE()
                0x00000000c001ab42                IDE::IDE()
                0x00000000c001ab76                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ab88                selectDrive(unsigned char, unsigned char)
                0x00000000c001ab8a                IDE::getBase(unsigned char)
                0x00000000c001ab9c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ac5e                IDE::read(unsigned char, unsigned char)
                0x00000000c001ad14                IDE::waitInterrupt(unsigned char)
                0x00000000c001ad76                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ad92                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001adae                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001adf8                IDE::open(int, int, void*)
                0x00000000c001b232                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001b302                IDE::detect()
                0x00000000c001b5ca                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001b684                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001b6d8      0x328 hw/diskctrl/satabus.32
                0x00000000c001b6d8                SATABus::close(int, int, void*)
                0x00000000c001b6dc                SATABus::detect()
                0x00000000c001b6de                SATABus::SATABus()
                0x00000000c001b6de                SATABus::SATABus()
                0x00000000c001b764                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b796                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b7de                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b7fe                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b828                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001b936                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001b9e0                SATABus::open(int, int, void*)
 .text          0x00000000c001ba00      0x96d hw/diskphys/ata.32
                0x00000000c001ba00                ATA::close(int, int, void*)
                0x00000000c001ba24                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001ba26                ATA::ATA()
                0x00000000c001ba26                ATA::ATA()
                0x00000000c001ba54                ATA::flush(bool)
                0x00000000c001baa2                ATA::readyForCommand()
                0x00000000c001baee                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001beb2                ATA::detectCHS()
                0x00000000c001bedc                ATA::open(int, int, void*)
                0x00000000c001bfa8                combineCharAndColour(char, unsigned char)
                0x00000000c001bfb9                combineColours(unsigned char, unsigned char)
                0x00000000c001bfc6                ATA::read(unsigned long long, int, void*)
                0x00000000c001c19c                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001c36d        0x1 
 .text          0x00000000c001c36e      0x612 hw/diskphys/atapi.32
                0x00000000c001c36e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c374                ATAPI::close(int, int, void*)
                0x00000000c001c398                ATAPI::ATAPI()
                0x00000000c001c398                ATAPI::ATAPI()
                0x00000000c001c3c6                ATAPI::readyForCommand()
                0x00000000c001c418                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c6d8                ATAPI::diskRemoved()
                0x00000000c001c712                ATAPI::eject()
                0x00000000c001c75a                ATAPI::diskInserted()
                0x00000000c001c766                ATAPI::detectMedia()
                0x00000000c001c826                ATAPI::open(int, int, void*)
                0x00000000c001c906                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001c980      0x800 hw/diskphys/sata.32
                0x00000000c001c980                SATA::close(int, int, void*)
                0x00000000c001c9a4                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001c9a6                SATA::open(int, int, void*)
                0x00000000c001ca50                SATA::SATA()
                0x00000000c001ca50                SATA::SATA()
                0x00000000c001ca7e                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ccd0                SATA::read(unsigned long long, int, void*)
                0x00000000c001cf20                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001d180      0x5d6 hw/diskphys/satapi.32
                0x00000000c001d180                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001d186                SATAPI::close(int, int, void*)
                0x00000000c001d1aa                SATAPI::SATAPI()
                0x00000000c001d1aa                SATAPI::SATAPI()
                0x00000000c001d1d8                SATAPI::diskRemoved()
                0x00000000c001d1da                SATAPI::diskInserted()
                0x00000000c001d1f6                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001d4da                SATAPI::eject()
                0x00000000c001d516                SATAPI::detectMedia()
                0x00000000c001d56c                SATAPI::open(int, int, void*)
                0x00000000c001d66c                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d756      0x45d hw/intctrl/apic.32
                0x00000000c001d756                IOAPIC::close(int, int, void*)
                0x00000000c001d75c                apicGetBase()
                0x00000000c001d7a2                IOAPIC::IOAPIC()
                0x00000000c001d7a2                IOAPIC::IOAPIC()
                0x00000000c001d7ca                apicOpen()
                0x00000000c001d948                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d97a                IOAPIC::read(int)
                0x00000000c001d9a2                IOAPIC::open(int, int, void*)
                0x00000000c001da88                IOAPIC::write(int, int)
                0x00000000c001dab4                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001dbb3        0x1 
 .text          0x00000000c001dbb4       0xf0 hw/timer/apictimer.32
                0x00000000c001dbb4                APICTimer::close(int, int, void*)
                0x00000000c001dbbc                apicTimerHandler(regs*, void*)
                0x00000000c001dbe4                APICTimer::open(int, int, void*)
                0x00000000c001dc54                APICTimer::write(int)
                0x00000000c001dc7c                APICTimer::APICTimer()
                0x00000000c001dc7c                APICTimer::APICTimer()
 .text          0x00000000c001dca4      0x1ad hw/timer/pit.32
                0x00000000c001dca4                PIT::write(int)
                0x00000000c001dd28                pitHandler(regs*, void*)
                0x00000000c001dd50                PIT::open(int, int, void*)
                0x00000000c001dda0                PIT::close(int, int, void*)
                0x00000000c001ddd0                PIT::PIT()
                0x00000000c001ddd0                PIT::PIT()
 *fill*         0x00000000c001de51        0xf 
 .text          0x00000000c001de60       0x83 arch/i386/avx.32
                0x00000000c001de60                avxDetect
                0x00000000c001de8a                avxSave
                0x00000000c001de9b                avxLoad
                0x00000000c001deac                avxInit
                0x00000000c001dece                avxClose
                0x00000000c001decf                wouldSheSayYes
 *fill*         0x00000000c001dee3        0xd 
 .text          0x00000000c001def0      0x2ec arch/i386/interrupt.32
                0x00000000c001def0                isr0
                0x00000000c001df00                isr1
                0x00000000c001df0a                isr2
                0x00000000c001df14                isr3
                0x00000000c001df1e                isr4
                0x00000000c001df28                isr5
                0x00000000c001df32                isr6
                0x00000000c001df3c                isr7
                0x00000000c001df46                isr8
                0x00000000c001df4e                isr9
                0x00000000c001df58                isr10
                0x00000000c001df60                isr11
                0x00000000c001df68                isr12
                0x00000000c001df70                isr13
                0x00000000c001df8a                isr14
                0x00000000c001df92                isr15
                0x00000000c001df9c                isr16
                0x00000000c001dfa6                isr17
                0x00000000c001dfb0                isr18
                0x00000000c001dfba                irq3
                0x00000000c001dfc4                irq4
                0x00000000c001dfce                irq5
                0x00000000c001dfd8                irq6
                0x00000000c001dfe2                irq7
                0x00000000c001dfec                irq8
                0x00000000c001dff6                irq9
                0x00000000c001e000                irq10
                0x00000000c001e00a                irq11
                0x00000000c001e014                irq12
                0x00000000c001e01e                irq13
                0x00000000c001e028                irq14
                0x00000000c001e032                irq15
                0x00000000c001e03c                irq1
                0x00000000c001e043                irq2
                0x00000000c001e04a                isr96
                0x00000000c001e051                irq0
                0x00000000c001e056                int_common_stub
                0x00000000c001e088                syscall_common_stub
                0x00000000c001e18c                irq16
                0x00000000c001e196                irq17
                0x00000000c001e1a0                irq18
                0x00000000c001e1aa                irq19
                0x00000000c001e1b4                irq20
                0x00000000c001e1be                irq21
                0x00000000c001e1c8                irq22
                0x00000000c001e1d2                irq23
 *fill*         0x00000000c001e1dc        0x4 
 .text          0x00000000c001e1e0       0x10 arch/i386/rdrand.32
                0x00000000c001e1e0                i386GetRDRAND
 .text          0x00000000c001e1f0       0x39 arch/i386/sse.32
                0x00000000c001e1f0                absolutelyNoChanceInHell
                0x00000000c001e1f0                sseDetect
                0x00000000c001e208                sseSave
                0x00000000c001e210                sseLoad
                0x00000000c001e218                sseInit
                0x00000000c001e228                sseClose
 *fill*         0x00000000c001e229        0x7 
 .text          0x00000000c001e230       0x49 arch/i386/x87.32
                0x00000000c001e236                x87Detect
                0x00000000c001e251                x87Save
                0x00000000c001e258                x87Load
                0x00000000c001e25f                x87Init
                0x00000000c001e278                x87Close
 *fill*         0x00000000c001e279        0x3 
 .text          0x00000000c001e27c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e2a1        0x0 crtn.32
 *fill*         0x00000000c001e2a1        0x3 
 .text          0x00000000c001e2a4      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001e2a4                __divdi3
 *fill*         0x00000000c001e3ef        0x1 
 .text          0x00000000c001e3f0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001e3f0                __moddi3
 *fill*         0x00000000c001e56e        0x2 
 .text          0x00000000c001e570       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001e570                __udivdi3
 *fill*         0x00000000c001e66f        0x1 
 .text          0x00000000c001e670      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001e670                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e790        0x0
 .iplt          0x00000000c001e790        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e78a        0xf
 .init          0x00000000c001e78a        0x3 crti.32
                0x00000000c001e78a                _init
 .init          0x00000000c001e78d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e792        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e797        0x2 crtn.32

.fini           0x00000000c001e799        0xa
 .fini          0x00000000c001e799        0x3 crti.32
                0x00000000c001e799                _fini
 .fini          0x00000000c001e79c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e7a1        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e7a4       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e7a4       0x23 core/computer.32
                0x00000000c001e7a4                Computer::~Computer()
                0x00000000c001e7a4                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e7c8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e7c8       0x2a core/computer.32
                0x00000000c001e7c8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e7f2       0x21
 .text._Z10idleCommonv
                0x00000000c001e7f2       0x21 core/idle.32
                0x00000000c001e7f2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e814        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e814        0x2 core/unixfile.32
                0x00000000c001e814                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e814                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e816       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e816       0x42 core/unixfile.32
                0x00000000c001e816                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e816                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e858       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e858       0xd3 core/unixfile.32
                0x00000000c001e858                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e92c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e92c        0x7 core/unixfile.32
                0x00000000c001e92c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e934       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e934       0xa1 core/unixfile.32
                0x00000000c001e934                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e9d6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e9d6        0x8 core/unixfile.32
                0x00000000c001e9d6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e9de       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e9de       0x1a hal/device.32
                0x00000000c001e9de                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e9de                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e9f8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e9f8       0x2a hal/device.32
                0x00000000c001e9f8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ea22       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ea22       0xdc hal/device.32
                0x00000000c001ea22                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001eafe       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001eafe       0x42 hal/device.32
                0x00000000c001eafe                LinkedList<Device>::LinkedList()
                0x00000000c001eafe                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eb40       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eb40       0x1c hal/timer.32
                0x00000000c001eb40                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001eb5c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001eb5c        0x7 hal/timer.32
                0x00000000c001eb5c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001eb64       0xbc
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001eb64       0xbc hal/timer.32
                0x00000000c001eb64                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ec20       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ec20       0xda hal/timer.32
                0x00000000c001ec20                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ecfc       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ecfc       0x23 hw/acpi.32
                0x00000000c001ecfc                ACPI::~ACPI()
                0x00000000c001ecfc                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ed20       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ed20       0x2a hw/acpi.32
                0x00000000c001ed20                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ed4c        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ed4c        0x2 hw/acpi.32
                0x00000000c001ed4c                LinkedList<Device>::~LinkedList()
                0x00000000c001ed4c                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ed50       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ed50       0x1c hw/acpi.32
                0x00000000c001ed50                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ed6c        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ed6c        0x7 hw/acpi.32
                0x00000000c001ed6c                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ed74       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ed74       0xb8 hw/acpi.32
                0x00000000c001ed74                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001ee2c       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ee2c       0x23 hw/cpu.32
                0x00000000c001ee2c                CPU::~CPU()
                0x00000000c001ee2c                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ee50       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ee50       0x2a hw/cpu.32
                0x00000000c001ee50                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ee7c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ee7c        0x8 sys/kill.32
                0x00000000c001ee7c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ee84        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ee84        0x2 thr/prcssthr.32
                0x00000000c001ee84                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ee84                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ee88       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ee88       0x49 thr/prcssthr.32
                0x00000000c001ee88                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ee88                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001eed4       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001eed4       0x42 thr/prcssthr.32
                0x00000000c001eed4                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001eed4                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001ef16       0x23
 .text._ZN3PCID2Ev
                0x00000000c001ef16       0x23 hw/bus/pci.32
                0x00000000c001ef16                PCI::~PCI()
                0x00000000c001ef16                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001ef3a       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001ef3a       0x2a hw/bus/pci.32
                0x00000000c001ef3a                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001ef64       0x23
 .text._ZN3IDED2Ev
                0x00000000c001ef64       0x23 hw/diskctrl/ide.32
                0x00000000c001ef64                IDE::~IDE()
                0x00000000c001ef64                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001ef88       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001ef88       0x2a hw/diskctrl/ide.32
                0x00000000c001ef88                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001efb2       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001efb2       0x23 hw/diskctrl/satabus.32
                0x00000000c001efb2                SATABus::~SATABus()
                0x00000000c001efb2                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001efd6       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001efd6       0x2a hw/diskctrl/satabus.32
                0x00000000c001efd6                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001f000       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f000       0x23 hw/diskphys/ata.32
                0x00000000c001f000                ATA::~ATA()
                0x00000000c001f000                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f024       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f024       0x2a hw/diskphys/ata.32
                0x00000000c001f024                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f04e       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f04e       0x23 hw/diskphys/atapi.32
                0x00000000c001f04e                ATAPI::~ATAPI()
                0x00000000c001f04e                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f072       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f072       0x2a hw/diskphys/atapi.32
                0x00000000c001f072                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001f09c       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001f09c       0x23 hw/diskphys/sata.32
                0x00000000c001f09c                SATA::~SATA()
                0x00000000c001f09c                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001f0c0       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001f0c0       0x2a hw/diskphys/sata.32
                0x00000000c001f0c0                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001f0ea       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001f0ea       0x23 hw/diskphys/satapi.32
                0x00000000c001f0ea                SATAPI::~SATAPI()
                0x00000000c001f0ea                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001f10e       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001f10e       0x2a hw/diskphys/satapi.32
                0x00000000c001f10e                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001f138       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f138       0x23 hw/intctrl/apic.32
                0x00000000c001f138                IOAPIC::~IOAPIC()
                0x00000000c001f138                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f15c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f15c       0x2a hw/intctrl/apic.32
                0x00000000c001f15c                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f188       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f188       0x23 hw/timer/apictimer.32
                0x00000000c001f188                APICTimer::~APICTimer()
                0x00000000c001f188                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f1ac       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f1ac       0x2a hw/timer/apictimer.32
                0x00000000c001f1ac                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f1d8       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f1d8       0x23 hw/timer/pit.32
                0x00000000c001f1d8                PIT::~PIT()
                0x00000000c001f1d8                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f1fc       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f1fc       0x2a hw/timer/pit.32
                0x00000000c001f1fc                PIT::~PIT()

.rodata         0x00000000c001f226     0x2ba6
                0x00000000c001f226                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f226        0x2 
 .ctors         0x00000000c001f228        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f22c        0x4 core/unixfile.32
 .ctors         0x00000000c001f230        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f234        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f238                end_ctors = .
                0x00000000c001f238                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f238        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f23c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f23c                __DTOR_END__
                0x00000000c001f240                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f240        0x0 
 .rodata        0x00000000c001f240      0x101 acpica/utclib.32
                0x00000000c001f240                AcpiGbl_Ctypes
 *fill*         0x00000000c001f341        0x3 
 .rodata        0x00000000c001f344       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001f35c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001f3a6       0x1a 
 .rodata        0x00000000c001f3c0       0xed fs/fat/ff.32
 *fill*         0x00000000c001f4ad       0x13 
 .rodata        0x00000000c001f4c0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f8c0       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001f92f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001fa44       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001faac       0x2c core/computer.32
                0x00000000c001faac                vtable for Computer
 .rodata.str1.4
                0x00000000c001fad8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001fb08        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001fb14       0x17 core/main.32
 *fill*         0x00000000c001fb2b        0x1 
 .rodata.str1.4
                0x00000000c001fb2c       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fbd1       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fc29       0x39 core/pipe.32
 *fill*         0x00000000c001fc62        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001fc64       0x1c core/pipe.32
                0x00000000c001fc64                vtable for Pipe
 .rodata.str1.1
                0x00000000c001fc80       0x2b core/terminal.32
 *fill*         0x00000000c001fcab        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001fcac       0x1c core/terminal.32
                0x00000000c001fcac                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001fcc8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001fcea       0x15 core/unixfile.32
 *fill*         0x00000000c001fcff        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001fd00       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001fd4b        0x8 core/unixfile.32
 *fill*         0x00000000c001fd53        0x1 
 .rodata.str1.4
                0x00000000c001fd54       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001fd74       0x1c core/unixfile.32
                0x00000000c001fd74                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001fd90       0x1c core/unixfile.32
                0x00000000c001fd90                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001fdac      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001ff13      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002001a       0x33 coreobjs/c++.32
 *fill*         0x00000000c002004d        0x3 
 .rodata        0x00000000c0020050      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00201a0       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c00201a0       0x68 fs/vfs.32
                0x00000000c00201a0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020208       0x1c fs/vfs.32
                0x00000000c0020208                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020224       0x1c fs/vfs.32
                0x00000000c0020224                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0020240       0x2c hal/bus.32
                0x00000000c0020240                vtable for Bus
 .rodata.str1.1
                0x00000000c002026c       0x1e hal/clock.32
 *fill*         0x00000000c002028a        0x2 
 .rodata._ZTV5Clock
                0x00000000c002028c       0x3c hal/clock.32
                0x00000000c002028c                vtable for Clock
 *fill*         0x00000000c00202c8       0x18 
 .rodata        0x00000000c00202e0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020310       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020368       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020368       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0020368       0x2c hal/device.32
                0x00000000c0020368                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020394       0x2c hal/device.32
                0x00000000c0020394                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00203c0       0x2c hal/diskctrl.32
                0x00000000c00203c0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00203ec       0x38 hal/diskphys.32
                0x00000000c00203ec                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020424       0x3e hal/intctrl.32
 *fill*         0x00000000c0020462        0x2 
 .rodata.str1.4
                0x00000000c0020464       0x5d hal/intctrl.32
 .rodata        0x00000000c00204c1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0020514       0x34 hal/keybrd.32
                0x00000000c0020514                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020548       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c002058c       0x2c hal/logidisk.32
                0x00000000c002058c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00205b8       0x2c hal/mouse.32
                0x00000000c00205b8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c00205e4       0x34 hal/nic.32
                0x00000000c00205e4                vtable for NIC
 .rodata.str1.1
                0x00000000c0020618        0xb hal/partition.32
 *fill*         0x00000000c0020623        0x1 
 .rodata._ZTV6Serial
                0x00000000c0020624       0x44 hal/serial.32
                0x00000000c0020624                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020668       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020668        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020668       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020668       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0020668       0x30 hal/timer.32
                0x00000000c0020668                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020698       0x10 hal/vcache.32
                0x00000000c0020698                vtable for VCache
 .rodata.str1.1
                0x00000000c00206a8       0x93 hal/video.32
 *fill*         0x00000000c002073b        0x1 
 .rodata._ZTV5Video
                0x00000000c002073c       0x4c hal/video.32
                0x00000000c002073c                vtable for Video
 .rodata.str1.4
                0x00000000c0020788       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0020823      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c002095f       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c002095f        0x8 hw/acpi.32
 *fill*         0x00000000c002095f        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0020960       0x2c hw/acpi.32
                0x00000000c0020960                vtable for ACPI
 .rodata.str1.1
                0x00000000c002098c      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c0020af9        0x3 
 .rodata._ZTV3CPU
                0x00000000c0020afc       0x2c hw/cpu.32
                0x00000000c0020afc                vtable for CPU
 .rodata.str1.1
                0x00000000c0020b28       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0020b64       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0020bf5       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0020cbe       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020d06       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0020d31       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0020da7       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020dec        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0020df6       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0020e17       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0020ead       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0020f01       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0020f2d      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c00210f9       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0021150      0x110 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021260       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021260       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021260       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021260        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0021260       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0021300       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0021330      0x190 arch/i386/hal.32
                                        0x19f (size before relaxing)
 .rodata.str1.4
                0x00000000c00214c0       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0021533       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c0021548       0x3c arch/i386/rtc.32
                0x00000000c0021548                vtable for RTC
 .rodata.str1.1
                0x00000000c0021584       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c00215c5        0x3 
 .rodata._ZTV3FAT
                0x00000000c00215c8       0x68 fs/fat/vfslink.32
                0x00000000c00215c8                vtable for FAT
 .rodata.str1.1
                0x00000000c0021630       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0021630      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c0021768       0x68 fs/iso9660/vfslink.32
                0x00000000c0021768                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00217d0       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0021814       0x34 hal/sound/sndcard.32
                0x00000000c0021814                vtable for SoundCard
 .rodata.str1.4
                0x00000000c0021848       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c0021887       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00218bf       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0021960       0x2c hw/bus/pci.32
                0x00000000c0021960                vtable for PCI
 .rodata.str1.1
                0x00000000c002198c       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0021a13        0x1 
 .rodata._ZTV3IDE
                0x00000000c0021a14       0x2c hw/diskctrl/ide.32
                0x00000000c0021a14                vtable for IDE
 .rodata.str1.4
                0x00000000c0021a40       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c0021a64       0x2c hw/diskctrl/satabus.32
                0x00000000c0021a64                vtable for SATABus
 .rodata.str1.1
                0x00000000c0021a90       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0021aa2        0x2 
 .rodata._ZTV3ATA
                0x00000000c0021aa4       0x38 hw/diskphys/ata.32
                0x00000000c0021aa4                vtable for ATA
 .rodata.str1.1
                0x00000000c0021adc        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0021ae9        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c0021aec       0x38 hw/diskphys/atapi.32
                0x00000000c0021aec                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0021b24       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0021ba0       0x38 hw/diskphys/sata.32
                0x00000000c0021ba0                vtable for SATA
 .rodata.str1.1
                0x00000000c0021bd8       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0021cc2        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0021cc4       0x38 hw/diskphys/satapi.32
                0x00000000c0021cc4                vtable for SATAPI
 .rodata        0x00000000c0021cfc        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0021d04       0x2c hw/intctrl/apic.32
                0x00000000c0021d04                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0021d30       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0021d4b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0021d4c       0x30 hw/timer/apictimer.32
                0x00000000c0021d4c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021d7c       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021d99        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021d9c       0x30 hw/timer/pit.32
                0x00000000c0021d9c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021dcc      0x4d9
 *(.data)
 .data          0x00000000c0021dcc        0x0 crti.32
 .data          0x00000000c0021dcc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021dcc                __dso_handle
 .data          0x00000000c0021dd0        0x0 acpica/utclib.32
 .data          0x00000000c0021dd0        0x0 core/malloc.32
 .data          0x00000000c0021dd0        0x0 libk/ctype.32
 .data          0x00000000c0021dd0        0x0 libk/string.32
 .data          0x00000000c0021dd0        0x0 fs/fat/diskio.32
 .data          0x00000000c0021dd0        0x0 fs/fat/ff.32
 .data          0x00000000c0021dd0        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0021dd0        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0021dd0        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0021dd0        0x0 core/computer.32
 .data          0x00000000c0021dd0        0x0 core/gdt.32
 .data          0x00000000c0021dd0        0x0 core/idle.32
 .data          0x00000000c0021dd0        0x0 core/idt.32
 .data          0x00000000c0021dd0        0x4 core/kheap.32
 .data          0x00000000c0021dd4        0x0 core/main.32
 .data          0x00000000c0021dd4        0x4 core/physmgr.32
                0x00000000c0021dd4                Phys::bitmap
 .data          0x00000000c0021dd8        0x0 core/pipe.32
 *fill*         0x00000000c0021dd8        0x8 
 .data          0x00000000c0021de0       0x60 core/terminal.32
                0x00000000c0021de0                VgaText::hiddenOut
                0x00000000c0021e00                ansiToVGAMappings
 .data          0x00000000c0021e40        0x0 core/tss.32
 .data          0x00000000c0021e40        0x4 core/unixfile.32
                0x00000000c0021e40                UnixFile::nextFd
 .data          0x00000000c0021e44       0x15 core/virtmgr.32
                0x00000000c0021e44                Virt::pageAllocPtr
                0x00000000c0021e48                Virt::bitmap
                0x00000000c0021e4c                Virt::swapfileSectorsPerPage
                0x00000000c0021e50                Virt::swapfileLength
                0x00000000c0021e54                Virt::swapfileSector
                0x00000000c0021e58                Virt::swapfileDrive
 *fill*         0x00000000c0021e59        0x3 
 .data          0x00000000c0021e5c        0x4 coreobjs/c++.32
                0x00000000c0021e5c                __stack_chk_guard
 .data          0x00000000c0021e60        0x0 dbg/kconsole.32
 .data          0x00000000c0021e60        0x0 fs/vfs.32
 .data          0x00000000c0021e60        0x0 hal/bus.32
 .data          0x00000000c0021e60        0x0 hal/buzzer.32
 .data          0x00000000c0021e60        0x0 hal/clock.32
 .data          0x00000000c0021e60        0x0 hal/device.32
 .data          0x00000000c0021e60        0x0 hal/diskctrl.32
 .data          0x00000000c0021e60        0x0 hal/diskphys.32
 .data          0x00000000c0021e60        0x0 hal/fpu.32
 .data          0x00000000c0021e60        0x0 hal/intctrl.32
 .data          0x00000000c0021e60        0x0 hal/keybrd.32
 .data          0x00000000c0021e60        0x0 hal/logidisk.32
 .data          0x00000000c0021e60        0x0 hal/mouse.32
 .data          0x00000000c0021e60        0x0 hal/nic.32
 .data          0x00000000c0021e60        0x0 hal/partition.32
 .data          0x00000000c0021e60        0x0 hal/serial.32
 .data          0x00000000c0021e60        0x0 hal/timer.32
 .data          0x00000000c0021e60        0x0 hal/vcache.32
 .data          0x00000000c0021e60        0x0 hal/video.32
 .data          0x00000000c0021e60       0x10 hw/acpi.32
                0x00000000c0021e60                legacyIRQRemaps
 .data          0x00000000c0021e70        0x4 hw/cpu.32
                0x00000000c0021e70                lastCode
 *fill*         0x00000000c0021e74        0xc 
 .data          0x00000000c0021e80      0x142 krnl/bootmsg.32
                0x00000000c0021e80                KiSplashScreen
 *fill*         0x00000000c0021fc2       0x1e 
 .data          0x00000000c0021fe0       0x4d krnl/env.32
                0x00000000c0021fe0                defaultSysEnv
 .data          0x00000000c002202d        0x0 krnl/inlines.32
 .data          0x00000000c002202d        0x0 krnl/panic.32
 .data          0x00000000c002202d        0x0 krnl/powctrl.32
 .data          0x00000000c002202d        0x0 krnl/random.32
 .data          0x00000000c002202d        0x0 krnl/resolve.32
 *fill*         0x00000000c002202d       0x13 
 .data          0x00000000c0022040       0x4c krnl/signal.32
                0x00000000c0022040                KiDefaultSignalHandlers
 *fill*         0x00000000c002208c       0x14 
 .data          0x00000000c00220a0       0xf0 krnl/syscalls.32
                0x00000000c00220a0                systemCallHandlers
 .data          0x00000000c0022190        0x0 net/ethernet.32
 *fill*         0x00000000c0022190       0x10 
 .data          0x00000000c00221a0      0x100 reg/cm.32
                0x00000000c00221a0                CmComponents
 .data          0x00000000c00222a0        0x0 reg/registry.32
 .data          0x00000000c00222a0        0x0 sys/eject.32
 .data          0x00000000c00222a0        0x0 sys/exit.32
 .data          0x00000000c00222a0        0x0 sys/getcwd.32
 .data          0x00000000c00222a0        0x0 sys/getpid.32
 .data          0x00000000c00222a0        0x0 sys/getramdata.32
 .data          0x00000000c00222a0        0x0 sys/getvgaptr.32
 .data          0x00000000c00222a0        0x0 sys/kill.32
 .data          0x00000000c00222a0        0x0 sys/loaddll.32
 .data          0x00000000c00222a0        0x0 sys/read.32
 .data          0x00000000c00222a0        0x0 sys/registersignal.32
 .data          0x00000000c00222a0        0x0 sys/registry.32
 .data          0x00000000c00222a0        0x0 sys/sbrk.32
 .data          0x00000000c00222a0        0x0 sys/setcwd.32
 .data          0x00000000c00222a0        0x0 sys/settime.32
 .data          0x00000000c00222a0        0x0 sys/timezone.32
 .data          0x00000000c00222a0        0x0 sys/write.32
 .data          0x00000000c00222a0        0x0 sys/wsbe.32
 .data          0x00000000c00222a0        0x0 sys/yield.32
 .data          0x00000000c00222a0        0x0 thr/elf.32
 .data          0x00000000c00222a0        0x4 thr/prcssthr.32
                0x00000000c00222a0                Thr::nextPID
 .data          0x00000000c00222a4        0x0 vm86/vm8086.32
 .data          0x00000000c00222a4        0x0 arch/i386/hal.32
 .data          0x00000000c00222a4        0x0 arch/i386/pic.32
 .data          0x00000000c00222a4        0x0 arch/i386/rtc.32
 .data          0x00000000c00222a4        0x0 arch/i386/vga.32
 .data          0x00000000c00222a4        0x0 fs/fat/vfslink.32
 .data          0x00000000c00222a4        0x0 fs/iso9660/helper.32
 .data          0x00000000c00222a4        0x1 fs/iso9660/vfslink.32
                0x00000000c00222a4                recentDriveletter
 .data          0x00000000c00222a5        0x0 hal/sound/sndcard.32
 .data          0x00000000c00222a5        0x0 hal/sound/sndport.32
 .data          0x00000000c00222a5        0x0 hw/bus/isa.32
 .data          0x00000000c00222a5        0x0 hw/bus/pci.32
 .data          0x00000000c00222a5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00222a5        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c00222a5        0x0 hw/diskphys/ata.32
 .data          0x00000000c00222a5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00222a5        0x0 hw/diskphys/sata.32
 .data          0x00000000c00222a5        0x0 hw/diskphys/satapi.32
 .data          0x00000000c00222a5        0x0 hw/intctrl/apic.32
 .data          0x00000000c00222a5        0x0 hw/timer/apictimer.32
 .data          0x00000000c00222a5        0x0 hw/timer/pit.32
 .data          0x00000000c00222a5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00222a5        0x0 crtn.32
 .data          0x00000000c00222a5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c00222a5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c00222a5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c00222a5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00222a8        0x0
 .got           0x00000000c00222a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00222a8        0x0
 .got.plt       0x00000000c00222a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00222a8        0x0
 .igot.plt      0x00000000c00222a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00222a8        0x0
 .tm_clone_table
                0x00000000c00222a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00222a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00222a5      0x18b
 *(.eh_frame)
 *fill*         0x00000000c00222a5        0x3 
 .eh_frame      0x00000000c00222a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00222a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00222a8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0022300       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0022340       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00223ac       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0023000       0x7d
 *(userkernel)
 userkernel     0x00000000c0023000       0x52 krnl/signal.32
                0x00000000c0023000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002302c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0023052       0x2b krnl/syscalls.32
                0x00000000c0023052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0024000        0x1
 *(align_previous)
 align_previous
                0x00000000c0024000        0x1 krnl/signal.32
                0x00000000c0024000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0024004        0x0
 .rel.got       0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0024001     0x4ba7
                0x00000000c0024001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0024001       0x1f 
 COMMON         0x00000000c0024020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0024020                dcache
                0x00000000c0024060                cdDriveLetter
                0x00000000c0024080                icache
 *(.bss)
 .bss           0x00000000c00240c0        0x0 crti.32
 .bss           0x00000000c00240c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00240e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00240e4       0x1c 
 .bss           0x00000000c0024100      0x378 core/malloc.32
 .bss           0x00000000c0024478        0x0 libk/ctype.32
 .bss           0x00000000c0024478        0x0 libk/string.32
 .bss           0x00000000c0024478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024478        0x8 
 .bss           0x00000000c0024480       0x88 fs/fat/ff.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0024508       0x18 
 .bss           0x00000000c0024520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0024eb8        0x6 core/computer.32
                0x00000000c0024eb8                Krnl::computer
                0x00000000c0024ebc                KeIsPreemptionOn
                0x00000000c0024ebd                KeIsSchedulingOn
 *fill*         0x00000000c0024ebe        0x2 
 .bss           0x00000000c0024ec0        0x6 core/gdt.32
                0x00000000c0024ec0                gdtDescr
 .bss           0x00000000c0024ec6        0x0 core/idle.32
 *fill*         0x00000000c0024ec6        0x2 
 .bss           0x00000000c0024ec8        0x6 core/idt.32
                0x00000000c0024ec8                idtDescr
 .bss           0x00000000c0024ece        0x0 core/kheap.32
 *fill*         0x00000000c0024ece        0x2 
 .bss           0x00000000c0024ed0        0x4 core/main.32
                0x00000000c0024ed0                sysBootSettings
 .bss           0x00000000c0024ed4       0x29 core/physmgr.32
                0x00000000c0024ed4                Phys::forbidEvictions
                0x00000000c0024ed8                Phys::currentPagePointer
                0x00000000c0024edc                Phys::highestMem
                0x00000000c0024ee0                Phys::oldPercent
                0x00000000c0024ee4                Phys::usedPages
                0x00000000c0024ee8                Phys::usablePages
                0x00000000c0024eec                Phys::dmaUsage
 .bss           0x00000000c0024efd        0x0 core/pipe.32
 *fill*         0x00000000c0024efd        0x3 
 .bss           0x00000000c0024f00        0x9 core/terminal.32
                0x00000000c0024f00                terminalCycle
                0x00000000c0024f04                activeTerminal
                0x00000000c0024f08                VgaText::graphicMode
 *fill*         0x00000000c0024f09        0x1 
 .bss           0x00000000c0024f0a        0x2 core/tss.32
                0x00000000c0024f0a                doubleFaultSelector
 *fill*         0x00000000c0024f0c       0x14 
 .bss           0x00000000c0024f20       0x84 core/unixfile.32
                0x00000000c0024f20                sfileLpt
                0x00000000c0024f60                sfileCom
                0x00000000c0024f84                sfileNul
                0x00000000c0024f88                sfilePnt
                0x00000000c0024f8c                sfileAux
                0x00000000c0024f90                sfileCon
                0x00000000c0024f94                initialFilesAdded
                0x00000000c0024f98                unixFileLinkedList
 .bss           0x00000000c0024fa4       0x10 core/virtmgr.32
                0x00000000c0024fa4                twswaps
                0x00000000c0024fa8                swapBalance
                0x00000000c0024fac                Virt::swapfileBitmap
                0x00000000c0024fb0                firstVAS
 .bss           0x00000000c0024fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0024fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0024fb4        0x4 fs/vfs.32
                0x00000000c0024fb4                installedFilesystems
 .bss           0x00000000c0024fb8        0x0 hal/bus.32
 .bss           0x00000000c0024fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0024fb8        0x8 hal/clock.32
                0x00000000c0024fb8                User::dstOn
                0x00000000c0024fb9                User::timezoneHalfHourOffset
                0x00000000c0024fbc                User::timezoneHourOffset
 .bss           0x00000000c0024fc0        0x0 hal/device.32
 .bss           0x00000000c0024fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0024fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0024fc0        0x0 hal/fpu.32
 .bss           0x00000000c0024fc0     0x2000 hal/intctrl.32
                0x00000000c0024fc0                INT_contexts
                0x00000000c0025fc0                INT_handlers
 .bss           0x00000000c0026fc0      0x429 hal/keybrd.32
                0x00000000c0026fc0                keyboardWaitingTaskList
                0x00000000c0026fc4                keyboardSetupYet
                0x00000000c0026fc8                guiKeyboardHandler
                0x00000000c0026fe0                keystates
 *fill*         0x00000000c00273e9       0x17 
 .bss           0x00000000c0027400       0x88 hal/logidisk.32
                0x00000000c0027400                diskAssignments
                0x00000000c0027420                disks
 .bss           0x00000000c0027488        0x4 hal/mouse.32
                0x00000000c0027488                guiMouseHandler
 .bss           0x00000000c002748c        0x0 hal/nic.32
 .bss           0x00000000c002748c        0x0 hal/partition.32
 .bss           0x00000000c002748c        0x0 hal/serial.32
 .bss           0x00000000c002748c        0x4 hal/timer.32
                0x00000000c002748c                milliTenthsSinceBoot
 .bss           0x00000000c0027490        0x0 hal/vcache.32
 .bss           0x00000000c0027490        0x4 hal/video.32
                0x00000000c0027490                screen
 *fill*         0x00000000c0027494        0xc 
 .bss           0x00000000c00274a0      0x480 hw/acpi.32
                0x00000000c00274a0                systemSleepFunction
                0x00000000c00274a4                systemResetFunction
                0x00000000c00274a8                systemShutdownFunction
                0x00000000c00274ac                nextACPITable
                0x00000000c00274c0                acpiTables
                0x00000000c00276c0                usingXSDT
                0x00000000c00276c4                MADTpointer
                0x00000000c00276c8                RSDTpointer
                0x00000000c00276cc                RSDPpointer
                0x00000000c00276d0                nextAPICNMI
                0x00000000c00276e0                apicNMIInfo
                0x00000000c0027760                legacyIRQFlags
                0x00000000c0027780                ioapicDiscoveryNumber
                0x00000000c00277a0                ioapicFoundInMADT
                0x00000000c00277c0                ioapicAddresses
                0x00000000c0027840                ioapicGSIBase
                0x00000000c00278c0                processorDiscoveryNumber
                0x00000000c00278e0                matchingAPICID
                0x00000000c0027900                processorID
 .bss           0x00000000c0027920       0x10 hw/cpu.32
                0x00000000c0027920                lastD
                0x00000000c0027924                lastC
                0x00000000c0027928                lastB
                0x00000000c002792c                lastA
 .bss           0x00000000c0027930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0027930        0x8 krnl/env.32
                0x00000000c0027930                Krnl::userEnv
                0x00000000c0027934                Krnl::systemEnv
 .bss           0x00000000c0027938        0x0 krnl/inlines.32
 .bss           0x00000000c0027938        0x1 krnl/panic.32
                0x00000000c0027938                KeIsKernelInPanic
 *fill*         0x00000000c0027939        0x7 
 .bss           0x00000000c0027940       0x48 krnl/powctrl.32
                0x00000000c0027940                Krnl::powCtrlOnBattery
                0x00000000c0027960                Krnl::currentPowerSettings
                0x00000000c0027984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0027988        0x8 krnl/random.32
                0x00000000c0027988                kiRandSeed
 .bss           0x00000000c0027990        0x0 krnl/resolve.32
 .bss           0x00000000c0027990        0x0 krnl/signal.32
 .bss           0x00000000c0027990        0x0 krnl/syscalls.32
 .bss           0x00000000c0027990        0x0 net/ethernet.32
 .bss           0x00000000c0027990        0x4 reg/cm.32
 .bss           0x00000000c0027994        0x0 reg/registry.32
 .bss           0x00000000c0027994        0x0 sys/eject.32
 .bss           0x00000000c0027994        0x0 sys/exit.32
 .bss           0x00000000c0027994        0x0 sys/getcwd.32
 .bss           0x00000000c0027994        0x0 sys/getpid.32
 .bss           0x00000000c0027994        0x0 sys/getramdata.32
 .bss           0x00000000c0027994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0027994        0x0 sys/kill.32
 .bss           0x00000000c0027994        0x0 sys/loaddll.32
 .bss           0x00000000c0027994        0x0 sys/read.32
 .bss           0x00000000c0027994        0x0 sys/registersignal.32
 .bss           0x00000000c0027994        0x0 sys/registry.32
 .bss           0x00000000c0027994        0x0 sys/sbrk.32
 .bss           0x00000000c0027994        0x0 sys/setcwd.32
 .bss           0x00000000c0027994        0x0 sys/settime.32
 .bss           0x00000000c0027994        0x0 sys/timezone.32
 .bss           0x00000000c0027994        0x0 sys/write.32
 .bss           0x00000000c0027994        0x0 sys/wsbe.32
 .bss           0x00000000c0027994        0x0 sys/yield.32
 *fill*         0x00000000c0027994        0xc 
 .bss           0x00000000c00279a0      0x7a4 thr/elf.32
                0x00000000c00279a0                Thr::driverLookupNext
                0x00000000c00279c0                Thr::driverLookupLen
                0x00000000c0027bc0                Thr::driverLookupAddr
                0x00000000c0027dc0                Thr::driverNameLookup
                0x00000000c0027fc0                Thr::kernelSymbols
                0x00000000c0028040                Thr::kernelStringTable
                0x00000000c00280c0                Thr::kernelSymbolTable
                0x00000000c0028140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0028144        0x4 
 .bss           0x00000000c0028148       0x68 thr/prcssthr.32
                0x00000000c0028148                cleanerThread
                0x00000000c002814c                weNeedTheCleanerToNotBlock
                0x00000000c0028150                retValLockStuff
                0x00000000c0028154                retValSchedLock
                0x00000000c0028158                lockStuffLock
                0x00000000c002815c                schedulerLock
                0x00000000c0028160                taskSwitchesPostponedFlag
                0x00000000c0028164                postponeTaskSwitchesCounter
                0x00000000c0028168                irqDisableCounter
                0x00000000c002816c                terminatedTaskList
                0x00000000c0028178                sleepingTaskList
                0x00000000c0028184                taskList
                0x00000000c0028190                kernelProcess
 *fill*         0x00000000c00281b0       0x10 
 .bss           0x00000000c00281c0       0x40 vm86/vm8086.32
                0x00000000c00281c0                Vm::vmRetV
                0x00000000c00281c4                Vm::vmDone
                0x00000000c00281c5                Vm::vmReady
                0x00000000c00281c8                Vm::vm86Thread
                0x00000000c00281cc                Vm::vmToHostCommsPtr
                0x00000000c00281e0                Vm::vmToHostComms
 .bss           0x00000000c0028200       0x14 arch/i386/hal.32
                0x00000000c0028200                apic
                0x00000000c0028204                fpuOwner
                0x00000000c0028208                coproLoadFunc
                0x00000000c002820c                coproSaveFunc
                0x00000000c0028210                gpFaultIntercept
 .bss           0x00000000c0028214        0x0 arch/i386/pic.32
 .bss           0x00000000c0028214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0028216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0028216        0xa 
 .bss           0x00000000c0028220       0xf0 fs/fat/vfslink.32
                0x00000000c0028220                FAT::fats
                0x00000000c0028240                FAT::vfsToFatRemaps
                0x00000000c00282c0                fatToVFSRemaps
 .bss           0x00000000c0028310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0028310       0x10 
 .bss           0x00000000c0028320      0x820 fs/iso9660/vfslink.32
                0x00000000c0028320                iso9660Owner
                0x00000000c0028324                recentSector
                0x00000000c0028340                recentBuffer
 .bss           0x00000000c0028b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0028b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0028b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0028b40        0xd hw/bus/pci.32
                0x00000000c0028b40                thePCI
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0028b4d        0x3 
 .bss           0x00000000c0028b50        0x8 hw/diskphys/ata.32
                0x00000000c0028b50                ataSectorsWritten
                0x00000000c0028b54                ataSectorsRead
 .bss           0x00000000c0028b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0028b58        0x8 
 .bss           0x00000000c0028b60       0x41 hw/intctrl/apic.32
                0x00000000c0028b60                noOfIOAPICs
                0x00000000c0028b80                ioapics
                0x00000000c0028ba0                IOAPICsSetupYet
 .bss           0x00000000c0028ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0028ba1        0x3 
 .bss           0x00000000c0028ba4        0x4 hw/timer/pit.32
                0x00000000c0028ba4                pitFreq
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0028ba8        0x0 crtn.32
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0028ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002d74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
