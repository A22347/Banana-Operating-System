Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c57a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002ff                asmQuickAcquireLock
                0x00000000c000031d                asmQuickReleaseLock
                0x00000000c0000329                asmAcquireLock
                0x00000000c000034a                asmReleaseLock
                0x00000000c000035d                loadGDT
                0x00000000c000037d                memcpy
 *fill*         0x00000000c0000382        0xe 
 .text          0x00000000c0000390      0x79e acpica/utclib.32
                0x00000000c0000390                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004d0                memset
                0x00000000c0000540                strlen
                0x00000000c0000570                strpbrk
                0x00000000c00005b0                strtok
                0x00000000c0000600                strcpy
                0x00000000c0000630                strncpy
                0x00000000c00006e0                strcmp
                0x00000000c0000730                strchr
                0x00000000c0000760                strncmp
                0x00000000c00007c0                strcat
                0x00000000c00007f0                strncat
                0x00000000c0000850                strstr
                0x00000000c00008b0                toupper
                0x00000000c00008d0                tolower
                0x00000000c00008f0                simple_strtoul
 .text          0x00000000c0000b2e      0xfad core/malloc.32
                0x00000000c0000c99                dlfree
                0x00000000c0000ff4                dlmalloc
                0x00000000c0001531                dlrealloc
                0x00000000c00016d4                dlmemalign
                0x00000000c00017f7                dlcalloc
                0x00000000c0001891                dlcfree
                0x00000000c0001896                dlindependent_calloc
                0x00000000c00018bb                dlindependent_comalloc
                0x00000000c00018d2                dlvalloc
                0x00000000c00018fd                dlpvalloc
                0x00000000c0001933                dlmalloc_trim
                0x00000000c0001940                dlmalloc_usable_size
                0x00000000c0001971                dlmallinfo
                0x00000000c0001a40                dlmalloc_stats
                0x00000000c0001a51                dlmallopt
 *fill*         0x00000000c0001adb        0x1 
 .text          0x00000000c0001adc      0x1f2 libk/ctype.32
                0x00000000c0001adc                isblank
                0x00000000c0001afc                iscntrl
                0x00000000c0001b1c                isdigit
                0x00000000c0001b38                islower
                0x00000000c0001b54                isspace
                0x00000000c0001b7c                isupper
                0x00000000c0001b98                isalpha
                0x00000000c0001bc8                isalnum
                0x00000000c0001bf8                ispunct
                0x00000000c0001c38                isgraph
                0x00000000c0001c68                isprint
                0x00000000c0001c90                isxdigit
 .text          0x00000000c0001cce        0x0 libk/string.32
 .text          0x00000000c0001cce       0x51 fs/fat/diskio.32
                0x00000000c0001cce                disk_status
                0x00000000c0001cd1                disk_initialize
                0x00000000c0001cd4                disk_read
                0x00000000c0001cea                disk_write
                0x00000000c0001d00                disk_ioctl
 .text          0x00000000c0001d1f     0x3d4b fs/fat/ff.32
                0x00000000c0003abb                f_mount
                0x00000000c0003b1d                f_open
                0x00000000c0003de8                f_read
                0x00000000c0003fe7                f_write
                0x00000000c000421b                f_sync
                0x00000000c00042d0                f_close
                0x00000000c00042ff                f_lseek
                0x00000000c00044a6                f_opendir
                0x00000000c0004571                f_closedir
                0x00000000c0004593                f_readdir
                0x00000000c0004625                f_stat
                0x00000000c00046a4                f_getfree
                0x00000000c00047a6                f_truncate
                0x00000000c000488a                f_unlink
                0x00000000c00049ac                f_mkdir
                0x00000000c0004b47                f_rename
                0x00000000c0004cfd                f_chmod
                0x00000000c0004da6                f_utime
                0x00000000c0004e54                f_getlabel
                0x00000000c0004fa5                f_setlabel
                0x00000000c0005135                f_expand
                0x00000000c0005295                f_mkfs
 *fill*         0x00000000c0005a6a        0x2 
 .text          0x00000000c0005a6c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a6c                ff_memalloc
                0x00000000c0005a84                ff_memfree
 *fill*         0x00000000c0005a9b        0x1 
 .text          0x00000000c0005a9c      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005a9c                ff_uni2oem
                0x00000000c0005b3c                ff_oem2uni
                0x00000000c0005bb4                ff_wtoupper
 .text          0x00000000c0005d44      0xc76 fs/iso9660/iso9660.32
                0x00000000c0005f63                isoReadDiscSector
                0x00000000c0005ffe                strnicmp
                0x00000000c00062b1                stricmp
                0x00000000c00062fd                iso_open
                0x00000000c0006387                iso_close
                0x00000000c00063a5                iso_read
                0x00000000c00064bb                iso_seek
                0x00000000c000653f                iso_tell
                0x00000000c0006570                iso_total
                0x00000000c000659b                fn_postprocess
                0x00000000c00065c1                iso_readdir
                0x00000000c00067b2                iso_reset
                0x00000000c00067bf                init_percd
                0x00000000c00068b9                iso_ioctl
                0x00000000c00068c1                fs_iso9660_init
                0x00000000c000694a                fs_iso9660_shutdown
 .text          0x00000000c00069ba      0x685 core/computer.32
                0x00000000c00069ba                Computer::close(int, int, void*)
                0x00000000c00069ff                Krnl::firstTask()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006be4                Computer::setBootMessage(char const*)
                0x00000000c0006be6                Computer::detectFeatures()
                0x00000000c0006df0                Computer::displayFeatures()
                0x00000000c0006df2                Computer::rdmsr(unsigned int)
                0x00000000c0006e1e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006e56                Computer::shutdown()
                0x00000000c0006e6e                Computer::restart()
                0x00000000c0006e86                Computer::sleep()
                0x00000000c0006e9a                Computer::nmiEnabled()
                0x00000000c0006ea6                Computer::readCMOS(unsigned char)
                0x00000000c0006ec0                Computer::enableNMI(bool)
                0x00000000c0006ed8                Computer::open(int, int, void*)
                0x00000000c0006fac                Computer::disableNMI()
                0x00000000c0006fbc                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006fda                Computer::handleNMI()
 *fill*         0x00000000c000703f        0x1 
 .text          0x00000000c0007040      0x1cf core/gdt.32
                0x00000000c0007040                GDTEntry::setBase(unsigned int)
                0x00000000c000705c                GDTEntry::setLimit(unsigned int)
                0x00000000c000707a                GDT::GDT()
                0x00000000c000707a                GDT::GDT()
                0x00000000c0007090                GDT::addEntry(GDTEntry)
                0x00000000c00070b2                GDT::getNumberOfEntries()
                0x00000000c00070ba                GDT::flush()
                0x00000000c00070dc                GDT::setup()
 .text          0x00000000c000720f       0x1d core/idle.32
                0x00000000c000720f                idleFunction(void*)
 .text          0x00000000c000722c      0x464 core/idt.32
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000729e                IDTEntry::setOffset(unsigned int)
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00072be                IDT::addEntry(IDTEntry, int)
                0x00000000c00072d8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007310                IDT::flush()
                0x00000000c000732a                IDT::setup()
 .text          0x00000000c0007690      0x183 core/kheap.32
                0x00000000c0007690                sbrk
                0x00000000c0007725                mmap
                0x00000000c000773b                munmap
                0x00000000c0007751                liballoc_lock()
                0x00000000c000775e                liballoc_unlock()
                0x00000000c0007772                liballoc_alloc(int)
                0x00000000c000778a                liballoc_free(void*, int)
                0x00000000c00077a5                realloc
                0x00000000c00077b9                malloc
                0x00000000c00077c9                free
                0x00000000c00077d9                rfree
                0x00000000c00077e9                calloc
 .text          0x00000000c0007813       0xc3 core/main.32
                0x00000000c0007813                KeEntryPoint
 .text          0x00000000c00078d6      0x5dc core/physmgr.32
                0x00000000c00078d6                Phys::allocateDMA(unsigned long)
                0x00000000c00079ad                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c00079e0                Phys::setPageState(unsigned long, bool)
                0x00000000c0007a12                Phys::getPageState(unsigned long)
                0x00000000c0007a33                Phys::freePage(unsigned long)
                0x00000000c0007a95                Phys::allocatePage()
                0x00000000c0007b53                Phys::allocateContiguousPages(int)
                0x00000000c0007baf                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007be7                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007eb2      0x273 core/pipe.32
                0x00000000c0007eb2                Pipe::isAtty()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eda                Pipe::~Pipe()
                0x00000000c0007f02                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007fc2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00080be                Pipe::Pipe(int)
                0x00000000c00080be                Pipe::Pipe(int)
 *fill*         0x00000000c0008125        0x1 
 .text          0x00000000c0008126      0xab2 core/terminal.32
                0x00000000c0008126                VgaText::isAtty()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000814e                VgaText::~VgaText()
                0x00000000c0008178                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008198                setTerminalScrollLock(bool)
                0x00000000c0008199                doTerminalCycle()
                0x00000000c000819a                addToTerminalCycle(VgaText*)
                0x00000000c000819b                scrollTerminalScrollLock(int)
                0x00000000c000819c                VgaText::updateTitle()
                0x00000000c000819e                VgaText::load()
                0x00000000c00081a0                VgaText::updateCursor()
                0x00000000c00081b6                VgaText::doANSI_SGR(int)
                0x00000000c000822a                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000823a                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000824a                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000826a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008276                VgaText::setTitleColour(VgaColour)
                0x00000000c0008282                VgaText::setTitle(char*)
                0x00000000c0008284                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008296                VgaText::scrollScreen()
                0x00000000c000832e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008340                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00083d0                VgaText::getCursorX()
                0x00000000c00083d8                VgaText::getCursorY()
                0x00000000c00083e0                VgaText::setCursor(int, int)
                0x00000000c00083f7                setActiveTerminal(VgaText*)
                0x00000000c0008442                VgaText::clearScreen()
                0x00000000c0008490                VgaText::setCursorX(int)
                0x00000000c00084a8                VgaText::setCursorY(int)
                0x00000000c00084c0                VgaText::incrementCursor(bool)
                0x00000000c0008514                VgaText::decrementCursor(bool)
                0x00000000c0008536                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008604                VgaText::putchar(char)
                0x00000000c00086f0                VgaText::putx(unsigned int)
                0x00000000c0008736                VgaText::puts(char const*)
                0x00000000c000875c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00087a8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c0008a4a                VgaText::receiveKey(unsigned char)
                0x00000000c0008bb2                VgaText::doUpdate()
                0x00000000c0008bb3                newTerminal(char*)
 .text          0x00000000c0008bd8      0x1a1 core/tss.32
                0x00000000c0008bd8                TSS::TSS()
                0x00000000c0008bd8                TSS::TSS()
                0x00000000c0008be8                TSS::setESP(unsigned long)
                0x00000000c0008bfc                TSS::flush()
                0x00000000c0008c1c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008d79        0x1 
 .text          0x00000000c0008d7a      0x4c2 core/unixfile.32
                0x00000000c0008d7a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008dd0                ReservedFilename::isAtty()
                0x00000000c0008dec                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008e4a                UnixFile::getFileDescriptor()
                0x00000000c0008e52                UnixFile::UnixFile(int)
                0x00000000c0008e52                UnixFile::UnixFile(int)
                0x00000000c0009002                ReservedFilename::ReservedFilename(int)
                0x00000000c0009002                ReservedFilename::ReservedFilename(int)
                0x00000000c0009034                UnixFile::~UnixFile()
                0x00000000c0009034                UnixFile::~UnixFile()
                0x00000000c00090cc                UnixFile::~UnixFile()
                0x00000000c00090f4                ReservedFilename::~ReservedFilename()
                0x00000000c00090f4                ReservedFilename::~ReservedFilename()
                0x00000000c0009118                ReservedFilename::~ReservedFilename()
                0x00000000c000913f                getFromFileDescriptor(int)
 .text          0x00000000c000923c     0x11d0 core/virtmgr.32
                0x00000000c000923c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009271                Virt::getPageState(unsigned long)
                0x00000000c0009295                Virt::allocateKernelVirtualPages(int)
                0x00000000c00093a6                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00093c4                Virt::swapIDToSector(unsigned long)
                0x00000000c00093d6                Virt::allocateSwapfilePage()
                0x00000000c0009454                Virt::virtualMemorySetup()
                0x00000000c000949f                Virt::setupPageSwapping(int)
                0x00000000c0009510                VAS::VAS(VAS*)
                0x00000000c0009510                VAS::VAS(VAS*)
                0x00000000c000953e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000956a                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009589                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00096ae                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00096d2                VAS::virtualToPhysical(unsigned long)
                0x00000000c00096ec                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000972c                VAS::VAS()
                0x00000000c000972c                VAS::VAS()
                0x00000000c0009796                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00097ca                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00097f4                VAS::~VAS()
                0x00000000c00097f4                VAS::~VAS()
                0x00000000c0009958                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009a5c                VAS::allocatePages(int, int)
                0x00000000c0009c34                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009c52                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009d18                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009e06                VAS::VAS(bool)
                0x00000000c0009e06                VAS::VAS(bool)
                0x00000000c000a086                VAS::evict(unsigned long)
                0x00000000c000a148                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a236                VAS::scanForEviction()
                0x00000000c000a316                mapVASFirstTime
 .text          0x00000000c000a40c       0x5f coreobjs/c++.32
                0x00000000c000a40c                __cxa_atexit
                0x00000000c000a40f                __cxa_finalize
                0x00000000c000a410                __stack_chk_fail
                0x00000000c000a446                __cxa_pure_virtual
                0x00000000c000a457                operator new[](unsigned long)
                0x00000000c000a45c                operator delete(void*, unsigned long)
                0x00000000c000a461                operator delete[](void*)
                0x00000000c000a466                operator delete[](void*, unsigned long)
 .text          0x00000000c000a46b      0x21c dbg/kconsole.32
                0x00000000c000a46b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a4d6                Dbg::logc(char)
                0x00000000c000a4f6                Dbg::logs(char*)
                0x00000000c000a513                Dbg::logWriteInt(unsigned int)
                0x00000000c000a531                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a552                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000a687        0x1 
 .text          0x00000000c000a688      0xc5c fs/vfs.32
                0x00000000c000a688                File::read(unsigned long long, void*, int*)
                0x00000000c000a6e0                File::write(unsigned long long, void*, int*)
                0x00000000c000a738                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a790                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a7be                File::isAtty()
                0x00000000c000a7c2                Directory::isAtty()
                0x00000000c000a7c6                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a7cc                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a7d2                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a7d8                File::~File()
                0x00000000c000a7d8                File::~File()
                0x00000000c000a7fc                File::~File()
                0x00000000c000a826                Directory::~Directory()
                0x00000000c000a826                Directory::~Directory()
                0x00000000c000a84a                Directory::~Directory()
                0x00000000c000a874                Filesystem::Filesystem()
                0x00000000c000a874                Filesystem::Filesystem()
                0x00000000c000a898                Filesystem::~Filesystem()
                0x00000000c000a898                Filesystem::~Filesystem()
                0x00000000c000a8a6                Filesystem::~Filesystem()
                0x00000000c000a8ca                Fs::getcwd(Process*, char*, int)
                0x00000000c000a8f4                Fs::initVFS()
                0x00000000c000a91e                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aac8                File::File(char const*, Process*)
                0x00000000c000aac8                File::File(char const*, Process*)
                0x00000000c000ab88                File::open(FileOpenMode)
                0x00000000c000abe6                File::close()
                0x00000000c000ac46                File::seek(unsigned long long)
                0x00000000c000ac9c                File::tell(unsigned long long*)
                0x00000000c000acec                File::rewind()
                0x00000000c000ad00                File::unlink()
                0x00000000c000ad4c                File::rename(char const*)
                0x00000000c000ad9a                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000adf6                File::exists()
                0x00000000c000ae34                File::stat(unsigned long long*, bool*)
                0x00000000c000ae95                Fs::setcwd(Process*, char*)
                0x00000000c000aff2                Directory::Directory(char const*, Process*)
                0x00000000c000aff2                Directory::Directory(char const*, Process*)
                0x00000000c000b0b2                Directory::open()
                0x00000000c000b10e                Directory::close()
                0x00000000c000b16e                Directory::unlink()
                0x00000000c000b1ba                Directory::rename(char const*)
                0x00000000c000b208                Directory::exists()
                0x00000000c000b246                Directory::read(dirent*)
                0x00000000c000b292                Directory::create()
                0x00000000c000b2de                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000b2e4       0x86 hal/bus.32
                0x00000000c000b2e4                Bus::Bus(char const*)
                0x00000000c000b2e4                Bus::Bus(char const*)
                0x00000000c000b31c                Bus::~Bus()
                0x00000000c000b31c                Bus::~Bus()
                0x00000000c000b340                Bus::~Bus()
 .text          0x00000000c000b36a       0x96 hal/buzzer.32
                0x00000000c000b36a                beepThread(void*)
                0x00000000c000b3a7                Krnl::beep(int, int, bool)
 .text          0x00000000c000b400      0x46d hal/clock.32
                0x00000000c000b400                User::loadClockSettings(int)
                0x00000000c000b452                Clock::Clock(char const*)
                0x00000000c000b452                Clock::Clock(char const*)
                0x00000000c000b488                Clock::~Clock()
                0x00000000c000b488                Clock::~Clock()
                0x00000000c000b4ac                Clock::~Clock()
                0x00000000c000b4d6                Clock::timeInSecondsLocal()
                0x00000000c000b51e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b577                datetimeToSeconds(datetime_t)
                0x00000000c000b6a4                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b704                secondsToDatetime(unsigned long long)
                0x00000000c000b848                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b86d        0x1 
 .text          0x00000000c000b86e      0x464 hal/device.32
                0x00000000c000b86e                Device::hibernate()
                0x00000000c000b870                Device::wake()
                0x00000000c000b872                Device::detect()
                0x00000000c000b874                Device::disableLegacy()
                0x00000000c000b876                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b878                DriverlessDevice::close(int, int, void*)
                0x00000000c000b87c                DriverlessDevice::detect()
                0x00000000c000b87e                DriverlessDevice::open(int, int, void*)
                0x00000000c000b892                Device::~Device()
                0x00000000c000b892                Device::~Device()
                0x00000000c000b8a0                Device::~Device()
                0x00000000c000b8c8                Device::findAndLoadDriver()
                0x00000000c000b8d6                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000b8fc                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000b93c                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b966                Device::getParent()
                0x00000000c000b972                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b990                Device::addChild(Device*)
                0x00000000c000b9d4                Device::removeAllChildren()
                0x00000000c000ba1a                Device::hibernateAll()
                0x00000000c000ba4a                Device::wakeAll()
                0x00000000c000ba7a                Device::detectAll()
                0x00000000c000baaa                Device::disableLegacyAll()
                0x00000000c000baac                Device::loadDriversForAll()
                0x00000000c000baae                Device::closeAll()
                0x00000000c000bae4                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000bb1a                Device::setName(char const*)
                0x00000000c000bb28                Device::Device(char const*)
                0x00000000c000bb28                Device::Device(char const*)
                0x00000000c000bc24                Device::getName()
                0x00000000c000bc2e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bc2e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bc64                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bca8                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bcd2        0x2 
 .text          0x00000000c000bcd4       0x86 hal/diskctrl.32
                0x00000000c000bcd4                HardDiskController::HardDiskController(char const*)
                0x00000000c000bcd4                HardDiskController::HardDiskController(char const*)
                0x00000000c000bd0c                HardDiskController::~HardDiskController()
                0x00000000c000bd0c                HardDiskController::~HardDiskController()
                0x00000000c000bd30                HardDiskController::~HardDiskController()
 .text          0x00000000c000bd5a       0xe2 hal/diskphys.32
                0x00000000c000bd5a                PhysicalDisk::eject()
                0x00000000c000bd5e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bd5e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bdc6                PhysicalDisk::startCache()
                0x00000000c000bdee                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bdee                PhysicalDisk::~PhysicalDisk()
                0x00000000c000be12                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000be3c        0x0 hal/fpu.32
 .text          0x00000000c000be3c      0x35d hal/intctrl.32
                0x00000000c000be3c                int_handler
                0x00000000c000bec4                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000bf0c                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c044                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c078                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c0f7                setupINTS()
                0x00000000c000c154                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c199        0x1 
 .text          0x00000000c000c19a      0x7bc hal/keybrd.32
                0x00000000c000c19a                startGUI(void*)
                0x00000000c000c206                startGUIVESA(void*)
                0x00000000c000c272                sendKeyToTerminal(unsigned char)
                0x00000000c000c33b                sendKeyboardToken(KeyboardToken)
                0x00000000c000c77b                clearInternalKeybuffer(VgaText*)
                0x00000000c000c7b0                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000c8cc                Keyboard::Keyboard(char const*)
                0x00000000c000c8cc                Keyboard::Keyboard(char const*)
                0x00000000c000c908                Keyboard::~Keyboard()
                0x00000000c000c908                Keyboard::~Keyboard()
                0x00000000c000c92c                Keyboard::~Keyboard()
 .text          0x00000000c000c956      0x3ea hal/logidisk.32
                0x00000000c000c956                LogicalDisk::close(int, int, void*)
                0x00000000c000c95a                LogicalDisk::~LogicalDisk()
                0x00000000c000c95a                LogicalDisk::~LogicalDisk()
                0x00000000c000c97e                LogicalDisk::~LogicalDisk()
                0x00000000c000c9a8                LogicalDisk::open(int, int, void*)
                0x00000000c000c9bc                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000c9f4                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000ca3a                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ca3a                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000caf0                LogicalDisk::assignDriveLetter()
                0x00000000c000cba6                LogicalDisk::mount()
                0x00000000c000cbee                LogicalDisk::unmount()
                0x00000000c000cbfe                LogicalDisk::eject()
                0x00000000c000cc12                LogicalDisk::unassignDriveLetter()
                0x00000000c000cc68                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000ccd4                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000cd40       0x86 hal/mouse.32
                0x00000000c000cd40                Mouse::Mouse(char const*)
                0x00000000c000cd40                Mouse::Mouse(char const*)
                0x00000000c000cd78                Mouse::~Mouse()
                0x00000000c000cd78                Mouse::~Mouse()
                0x00000000c000cd9c                Mouse::~Mouse()
 .text          0x00000000c000cdc6      0x339 hal/partition.32
                0x00000000c000cdc6                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ce6e                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d0ff        0x1 
 .text          0x00000000c000d100       0x86 hal/serial.32
                0x00000000c000d100                Serial::Serial(char const*)
                0x00000000c000d100                Serial::Serial(char const*)
                0x00000000c000d138                Serial::~Serial()
                0x00000000c000d138                Serial::~Serial()
                0x00000000c000d15c                Serial::~Serial()
 *fill*         0x00000000c000d186        0x2 
 .text          0x00000000c000d188      0x234 hal/timer.32
                0x00000000c000d188                Timer::Timer(char const*)
                0x00000000c000d188                Timer::Timer(char const*)
                0x00000000c000d1c0                Timer::~Timer()
                0x00000000c000d1c0                Timer::~Timer()
                0x00000000c000d1e4                Timer::~Timer()
                0x00000000c000d20e                Timer::read()
                0x00000000c000d219                setupTimer(int)
                0x00000000c000d254                timerHandler(unsigned int)
 .text          0x00000000c000d3bc      0x3ce hal/vcache.32
                0x00000000c000d3bc                VCache::VCache(PhysicalDisk*)
                0x00000000c000d3bc                VCache::VCache(PhysicalDisk*)
                0x00000000c000d524                VCache::invalidateReadBuffer()
                0x00000000c000d534                VCache::writeWriteBuffer()
                0x00000000c000d580                VCache::~VCache()
                0x00000000c000d580                VCache::~VCache()
                0x00000000c000d5d4                VCache::~VCache()
                0x00000000c000d5fc                VCache::write(unsigned long long, int, void*)
                0x00000000c000d712                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d78a      0x4b3 hal/video.32
                0x00000000c000d78a                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000d7d6                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000d846                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000d8c4                Video::clearScreen(unsigned int)
                0x00000000c000d8f8                Video::putpixel(int, int, unsigned int)
                0x00000000c000d906                Video::Video(char const*)
                0x00000000c000d906                Video::Video(char const*)
                0x00000000c000d93c                Video::~Video()
                0x00000000c000d93c                Video::~Video()
                0x00000000c000d960                Video::~Video()
                0x00000000c000d98a                Video::isMonochrome()
                0x00000000c000d996                Video::getWidth()
                0x00000000c000d9a2                Video::getHeight()
                0x00000000c000d9ae                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000da6a                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000dbd2                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000dc3d        0x3 
 .text          0x00000000c000dc40     0x1307 hw/acpi.32
                0x00000000c000dc40                ACPI::close(int, int, void*)
                0x00000000c000dcf8                findRSDP()
                0x00000000c000dd88                loadACPITables(unsigned char*)
                0x00000000c000dfec                findRSDT(unsigned char*)
                0x00000000c000e13c                findDataTable(unsigned char*, char*)
                0x00000000c000e1b4                scanMADT()
                0x00000000c000e688                ACPI::ACPI()
                0x00000000c000e688                ACPI::ACPI()
                0x00000000c000e6dc                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000e7c4                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000e88c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000e894                ACPI::detectPCI()
                0x00000000c000ea9c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000eaf0                ACPI::sleep()
                0x00000000c000eb0c                ACPI::open(int, int, void*)
 *fill*         0x00000000c000ef47        0x1 
 .text          0x00000000c000ef48      0xb95 hw/cpu.32
                0x00000000c000ef48                CPU::close(int, int, void*)
                0x00000000c000ef4c                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000ef68                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000ef80                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000eff4                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f078                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f0a6                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f0d4                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f102                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f130                CPU::CPU()
                0x00000000c000f130                CPU::CPU()
                0x00000000c000f1be                CPU::displayFeatures()
                0x00000000c000f1c0                CPU::detectFeatures()
                0x00000000c000f884                CPU::setupSMEP()
                0x00000000c000f890                CPU::setupUMIP()
                0x00000000c000f89a                CPU::setupTSC()
                0x00000000c000f8a4                CPU::setupLargePages()
                0x00000000c000f8ae                CPU::setupPAT()
                0x00000000c000f8ea                CPU::setupMTRR()
                0x00000000c000f8ec                CPU::setupGlobalPages()
                0x00000000c000f8f6                CPU::allowUsermodeDataAccess()
                0x00000000c000f908                CPU::prohibitUsermodeDataAccess()
                0x00000000c000f91a                CPU::setupSMAP()
                0x00000000c000f928                CPU::setupFeatures()
                0x00000000c000f9f4                CPU::open(int, int, void*)
 .text          0x00000000c000fadd       0xd1 krnl/bootmsg.32
                0x00000000c000fadd                KeDisplaySplashScreen()
                0x00000000c000fb4b                KeSetBootMessage(char const*)
 .text          0x00000000c000fbae      0x581 krnl/env.32
                0x00000000c000fbae                EnvVarContainer::getEnv(char const*)
                0x00000000c000fbec                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000fcae                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000fcb0                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000fe96                EnvVarContainer::__loadSystem()
                0x00000000c000feb0                EnvVarContainer::__loadUser()
                0x00000000c000feb2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000feb2                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fed4                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fed4                EnvVarContainer::~EnvVarContainer()
                0x00000000c000ff04                Krnl::getEnv(Process*, char const*)
                0x00000000c000ff69                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000ff83                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000ffa2                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000ffb5                Krnl::deleteEnvSystem(char const*)
                0x00000000c000ffb6                Krnl::deleteEnvUser(char const*)
                0x00000000c000ffb7                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000ffb8                Krnl::newProcessEnv(Process*)
                0x00000000c000ffda                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010026                Krnl::loadSystemEnv()
                0x00000000c0010054                Krnl::loadUserEnv()
                0x00000000c001007a                Krnl::flushEnv()
                0x00000000c001007b                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001009b                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001012f       0x94 krnl/inlines.32
                0x00000000c001012f                CPU::current()
                0x00000000c001013b                operator new(unsigned long)
                0x00000000c0010140                operator delete(void*)
                0x00000000c0010145                disableIRQs()
                0x00000000c0010147                enableIRQs()
                0x00000000c0010149                lockScheduler()
                0x00000000c0010151                unlockScheduler()
                0x00000000c0010160                lockStuff()
                0x00000000c001016e                unlockStuff()
                0x00000000c00101a8                Virt::getAKernelVAS()
                0x00000000c00101ae                __not_memcpy
 .text          0x00000000c00101c3        0xc krnl/panic.32
                0x00000000c00101c3                KePanic(char const*)
 .text          0x00000000c00101cf      0x142 krnl/powctrl.32
                0x00000000c00101cf                Krnl::powerThread(void*)
                0x00000000c00101fd                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010213                Krnl::userIOReceived()
                0x00000000c001021e                Krnl::handlePowerButton()
                0x00000000c0010253                Krnl::handleSleepButton()
                0x00000000c0010288                Krnl::setupPowerManager()
 *fill*         0x00000000c0010311        0x3 
 .text          0x00000000c0010314      0x190 krnl/resolve.32
                0x00000000c0010314                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c00104a4      0x2c3 krnl/signal.32
                0x00000000c00104a4                KiSigKill(int)
                0x00000000c00104d0                KiDefaultSignalHandlerIgnore(int)
                0x00000000c00104d1                KiDefaultSignalHandlerPause(int)
                0x00000000c00104fd                KiDefaultSignalHandlerResume(int)
                0x00000000c0010529                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c001052e                KeInitSignals()
                0x00000000c0010579                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c00105af                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c001062c                KeCheckSignal(SigHandlerBlock*)
                0x00000000c0010717                KiCheckSignalZ
                0x00000000c001072c                KeCompleteSignal(SigHandlerBlock*, int)
 .text          0x00000000c0010767      0xc41 krnl/syscalls.32
                0x00000000c0010767                SysSeekDir(regs*)
                0x00000000c001076c                SysTellDir(regs*)
                0x00000000c0010771                SysVerify(regs*)
                0x00000000c001077b                SysGetArgc(regs*)
                0x00000000c001078b                SysTTYName(regs*)
                0x00000000c0010793                SysFormatDisk(regs*)
                0x00000000c0010800                SysSetDiskVolumeLabel(regs*)
                0x00000000c001084a                SysGetDiskVolumeLabel(regs*)
                0x00000000c001089f                SysShutdown(regs*)
                0x00000000c00108fd                SysRealpath(regs*)
                0x00000000c0010940                SysReadDir(regs*)
                0x00000000c00109c0                SysIsATTY(regs*)
                0x00000000c0010a1c                SysSeek(regs*)
                0x00000000c0010a75                SysTell(regs*)
                0x00000000c0010ae4                SysSize(regs*)
                0x00000000c0010b59                SysSizeFromFilename(regs*)
                0x00000000c0010c0c                SysClose(regs*)
                0x00000000c0010c6c                SysOpenDir(regs*)
                0x00000000c0010ce3                SysCloseDir(regs*)
                0x00000000c0010d37                SysMakeDir(regs*)
                0x00000000c0010da9                SysWait(regs*)
                0x00000000c0010dc6                SysNotImpl(regs*)
                0x00000000c0010de1                SysPanic(regs*)
                0x00000000c0010dfc                SysRmdir(regs*)
                0x00000000c0010e63                SysUnlink(regs*)
                0x00000000c0010eca                SysGetArgv(regs*)
                0x00000000c0010f17                SysUSleep(regs*)
                0x00000000c0010f40                SysSpawn(regs*)
                0x00000000c0010fa9                SysGetEnv(regs*)
                0x00000000c0011058                SysSetFatAttrib(regs*)
                0x00000000c00110cf                SysPipe(regs*)
                0x00000000c0011114                SysGetUnixTime(regs*)
                0x00000000c0011128                string_ends_with(char const*, char const*)
                0x00000000c0011172                SysOpen(regs*)
                0x00000000c0011366                KeSystemCall(regs*, void*)
 .text          0x00000000c00113a8      0x50e reg/registry.32
                0x00000000c00113a8                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0011500                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0011655                Reg::getLine(char*, char*, char*)
                0x00000000c001168c                Reg::readInt(char*, char*, int*)
                0x00000000c0011777                Reg::readString(char*, char*, char*, int)
                0x00000000c00117f8                Reg::readBool(char*, char*, bool*)
                0x00000000c001181d                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0011849                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0011875                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00118b6       0x36 sys/eject.32
                0x00000000c00118b6                SysEject(regs*)
 .text          0x00000000c00118ec       0x18 sys/exit.32
                0x00000000c00118ec                SysExit(regs*)
 .text          0x00000000c0011904       0x1f sys/getcwd.32
                0x00000000c0011904                SysGetCwd(regs*)
 .text          0x00000000c0011923        0xc sys/getpid.32
                0x00000000c0011923                SysGetPID(regs*)
 .text          0x00000000c001192f       0x1a sys/getramdata.32
                0x00000000c001192f                SysGetRAMData(regs*)
 .text          0x00000000c0011949       0x82 sys/getvgaptr.32
                0x00000000c0011949                SysGetVGAPtr(regs*)
 .text          0x00000000c00119cb       0xa8 sys/loaddll.32
                0x00000000c00119cb                SysLoadDLL(regs*)
 .text          0x00000000c0011a73       0x68 sys/read.32
                0x00000000c0011a73                SysRead(regs*)
 .text          0x00000000c0011adb       0x29 sys/registersignal.32
                0x00000000c0011adb                SysRegisterSignal(regs*)
 .text          0x00000000c0011b04       0x55 sys/sbrk.32
                0x00000000c0011b04                SysSbrk(regs*)
 .text          0x00000000c0011b59       0x1c sys/setcwd.32
                0x00000000c0011b59                SysSetCwd(regs*)
 .text          0x00000000c0011b75       0x95 sys/settime.32
                0x00000000c0011b75                SysSetTime(regs*)
 .text          0x00000000c0011c0a       0x4a sys/timezone.32
                0x00000000c0011c0a                SysTimezone(regs*)
 .text          0x00000000c0011c54       0x68 sys/write.32
                0x00000000c0011c54                SysWrite(regs*)
 .text          0x00000000c0011cbc       0x62 sys/wsbe.32
                0x00000000c0011cbc                SysWsbe(regs*)
 .text          0x00000000c0011d1e       0x25 sys/yield.32
                0x00000000c0011d1e                SysYield(regs*)
 .text          0x00000000c0011d43     0x11e5 thr/elf.32
                0x00000000c0011d43                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0011fcf                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00121e5                Thr::runtimeReferenceHelper()
                0x00000000c00121f8                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0012247                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0012505                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012c3b                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012c6d                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012ca4                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012cbe                Thr::loadDLL(char const*, bool)
                0x00000000c0012eef                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0012f28     0x12fd thr/prcssthr.32
                0x00000000c0012f28                userModeEntryPoint(void*)
                0x00000000c0012f50                changeTSS
                0x00000000c0012f80                switchToThread(ThreadControlBlock*)
                0x00000000c0013034                Process::addArgs(char**)
                0x00000000c0013094                Process::Process(char const*, Process*, char**)
                0x00000000c0013094                Process::Process(char const*, Process*, char**)
                0x00000000c00132a0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00132a0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013478                taskStartupFunction
                0x00000000c0013484                Semaphore::Semaphore(int)
                0x00000000c0013484                Semaphore::Semaphore(int)
                0x00000000c00134b4                Mutex::Mutex()
                0x00000000c00134b4                Mutex::Mutex()
                0x00000000c00134c8                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00135c0                Process::createUserThread()
                0x00000000c00135e0                setupMultitasking(void (*)())
                0x00000000c00136e8                schedule()
                0x00000000c0013778                Semaphore::tryAcquire()
                0x00000000c0013844                Semaphore::assertLocked(char const*)
                0x00000000c00138bc                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00138e4                blockTask(TaskState)
                0x00000000c0013914                waitTask(int, int*, int)
                0x00000000c0013958                milliTenthSleepUntil(unsigned int)
                0x00000000c00139e8                milliTenthSleep(unsigned int)
                0x00000000c00139f8                sleep(unsigned int)
                0x00000000c0013a14                Semaphore::acquire()
                0x00000000c0013ad0                taskReturned
                0x00000000c0013b0c                Thr::processFromPID(int)
                0x00000000c0013bac                unblockTask(ThreadControlBlock*)
                0x00000000c0013c50                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0013f1c                cleanerTaskFunction(void*)
                0x00000000c001400c                terminateTask(int)
                0x00000000c00140d8                Thr::terminateFromIRQ(int)
                0x00000000c00140e8                Semaphore::release()
 .text          0x00000000c0014225      0xb93 vm86/vm8086.32
                0x00000000c0014225                Vm::inbv(unsigned short)
                0x00000000c0014238                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001426e                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001427e                Vm::getSegment(unsigned int)
                0x00000000c0014286                Vm::getOffset(unsigned int)
                0x00000000c001428b                Vm::mainloop2()
                0x00000000c00142c5                Vm::mainVm8086Loop(void*)
                0x00000000c00142d5                Vm::mainloop3(unsigned long)
                0x00000000c00142fb                Vm::initialise8086()
                0x00000000c001433e                Vm::finish8086()
                0x00000000c001439f                Vm::getOutput8086(unsigned char*)
                0x00000000c00143c4                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001447d                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00145e5                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001466f                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0014680                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0014692                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00146a3                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00146b8                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00146ce                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00146e3                Vm::faultHandler(regs*)
 .text          0x00000000c0014db8      0xa53 arch/i386/hal.32
                0x00000000c0014db8                noCopro(unsigned long)
                0x00000000c0014db9                nmiHandler(regs*, void*)
                0x00000000c0014dd2                doubleFault(regs*, void*)
                0x00000000c0014deb                displayDebugInfo(regs*)
                0x00000000c001510c                HalSystemIdle()
                0x00000000c0015182                displayProgramFault(char const*)
                0x00000000c00151ce                gpFault(regs*, void*)
                0x00000000c0015233                pgFault(regs*, void*)
                0x00000000c00152b9                otherISRHandler(regs*, void*)
                0x00000000c00152ed                opcodeFault(regs*, void*)
                0x00000000c001536d                i386SaveCoprocessor(void*)
                0x00000000c0015381                i386LoadCoprocessor(void*)
                0x00000000c0015395                x87EmulHandler(regs*, void*)
                0x00000000c0015432                HalInitialiseCoprocessor()
                0x00000000c00154e0                HalPanic(char const*)
                0x00000000c00155d9                HalQueryPerformanceCounter()
                0x00000000c00155f4                HalInitialise()
                0x00000000c001579a                HalMakeBeep(int)
                0x00000000c00157d4                HalGetRand()
                0x00000000c00157d7                HalEndOfInterrupt(int)
                0x00000000c0015808                HalRestart()
                0x00000000c0015809                HalShutdown()
                0x00000000c001580a                HalSleep()
 *fill*         0x00000000c001580b        0x1 
 .text          0x00000000c001580c      0x2f4 arch/i386/pic.32
                0x00000000c001580c                picIoWait()
                0x00000000c0015814                picDisable()
                0x00000000c0015848                picGetIRQReg(int)
                0x00000000c00158cc                picOpen()
                0x00000000c0015a5c                picEOI(int)
 .text          0x00000000c0015b00      0x64d arch/i386/rtc.32
                0x00000000c0015b00                RTC::open(int, int, void*)
                0x00000000c0015b04                RTC::close(int, int, void*)
                0x00000000c0015b08                RTC::timeInSecondsUTC()
                0x00000000c0015b1a                RTC::timeInDatetimeUTC()
                0x00000000c0015b40                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015b7e                RTC::~RTC()
                0x00000000c0015b7e                RTC::~RTC()
                0x00000000c0015ba2                RTC::~RTC()
                0x00000000c0015bcc                RTC::get_update_in_progress_flag()
                0x00000000c0015be4                RTC::completeRTCRefresh()
                0x00000000c0015e9c                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001604f                rtcIRQHandler(regs*, void*)
                0x00000000c0016094                RTC::RTC()
                0x00000000c0016094                RTC::RTC()
 *fill*         0x00000000c001614d        0x3 
 .text          0x00000000c0016150      0x203 arch/i386/vga.32
                0x00000000c0016150                HalConsoleScroll(int, int)
                0x00000000c0016258                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c00162c4                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c0016353        0x1 
 .text          0x00000000c0016354     0x13e7 fs/fat/vfslink.32
                0x00000000c0016354                FAT::getName()
                0x00000000c001635c                FAT::tell(void*, unsigned long long*)
                0x00000000c0016398                FAT::stat(void*, unsigned long long*)
                0x00000000c00163d4                FAT::~FAT()
                0x00000000c00163d4                FAT::~FAT()
                0x00000000c00163f8                FAT::~FAT()
                0x00000000c0016420                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00164c4                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0016588                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001675c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016974                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016b34                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016ca0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016d00                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016d60                FAT::close(void*)
                0x00000000c0016db4                FAT::closeDir(void*)
                0x00000000c0016e08                FAT::seek(void*, unsigned long long)
                0x00000000c0016e60                fatWrapperReadDisk
                0x00000000c0016ea4                fatWrapperWriteDisk
                0x00000000c0016ee8                fatWrapperIoctl
                0x00000000c0017004                FAT::FAT()
                0x00000000c0017004                FAT::FAT()
                0x00000000c0017058                FAT::fixFilepath(char*)
                0x00000000c0017094                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00171cc                FAT::openDir(char const*, void**)
                0x00000000c001727c                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017374                FAT::unlink(char const*)
                0x00000000c00173f4                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017580                FAT::rename(char const*, char const*)
                0x00000000c001764c                FAT::mkdir(char const*)
                0x00000000c00176cc                FAT::exists(char const*)
 *fill*         0x00000000c001773b        0x1 
 .text          0x00000000c001773c       0xc6 fs/iso9660/helper.32
                0x00000000c001773c                isoReadDiscSectorHelper
                0x00000000c0017798                iso_kprintf
                0x00000000c00177b8                iso_kprintfd
 .text          0x00000000c0017802      0x586 fs/iso9660/vfslink.32
                0x00000000c0017802                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017808                ISO9660::getName()
                0x00000000c001780e                ISO9660::closeDir(void*)
                0x00000000c0017818                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001781e                ISO9660::unlink(char const*)
                0x00000000c0017824                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001782a                ISO9660::rename(char const*, char const*)
                0x00000000c0017830                ISO9660::mkdir(char const*)
                0x00000000c0017836                ISO9660::~ISO9660()
                0x00000000c0017836                ISO9660::~ISO9660()
                0x00000000c001785a                ISO9660::~ISO9660()
                0x00000000c0017882                ISO9660::exists(char const*)
                0x00000000c0017896                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017936                ISO9660::openDir(char const*, void**)
                0x00000000c00179c6                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017a06                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017a3e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017a74                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017aae                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017b80                ISO9660::close(void*)
                0x00000000c0017ba6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017c73                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017cee                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017d60                ISO9660::ISO9660()
                0x00000000c0017d60                ISO9660::ISO9660()
 .text          0x00000000c0017d88      0x26c hal/sound/sndcard.32
                0x00000000c0017d88                SoundCard::beginPlayback()
                0x00000000c0017d96                SoundCard::stopPlayback()
                0x00000000c0017da4                SoundCard::SoundCard(char const*)
                0x00000000c0017da4                SoundCard::SoundCard(char const*)
                0x00000000c0017e42                SoundCard::~SoundCard()
                0x00000000c0017e42                SoundCard::~SoundCard()
                0x00000000c0017e66                SoundCard::~SoundCard()
                0x00000000c0017e90                SoundCard::configureRates(int, int, int)
                0x00000000c0017ec0                SoundCard::getSamples16(int, short*)
                0x00000000c0017f1c                SoundCard::getSamples32(int, int*)
                0x00000000c0017fa2                SoundCard::addChannel(SoundPort*)
                0x00000000c0017fe0                SoundCard::removeChannel(int)
 .text          0x00000000c0017ff4      0x377 hal/sound/sndport.32
                0x00000000c0017ff4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0017ff4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018080                SoundPort::~SoundPort()
                0x00000000c0018080                SoundPort::~SoundPort()
                0x00000000c00180b4                SoundPort::unpause()
                0x00000000c00180c0                SoundPort::pause()
                0x00000000c00180cc                SoundPort::getBufferUsed()
                0x00000000c00180d4                SoundPort::getBufferSize()
                0x00000000c00180dc                SoundPort::buffer16(short*, int)
                0x00000000c0018168                SoundPort::buffer32(int*, int)
                0x00000000c00181f0                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c00182b4                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001836b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001836b        0x1 
 .text          0x00000000c001836c      0xb49 hw/bus/pci.32
                0x00000000c001836c                PCI::open(int, int, void*)
                0x00000000c001838a                PCI::close(int, int, void*)
                0x00000000c001838e                PCI::PCI()
                0x00000000c001838e                PCI::PCI()
                0x00000000c0018428                PCI::readBAR8(unsigned int, int)
                0x00000000c0018444                PCI::readBAR16(unsigned int, int)
                0x00000000c0018462                PCI::readBAR32(unsigned int, int)
                0x00000000c001847e                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001849e                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c00184c0                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c00184e0                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001854e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00185f6                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001861a                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0018642                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001868c                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c00186b4                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c00186d8                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c00186fc                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0018724                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018788                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018870                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018aea                PCI::checkBus(unsigned char)
                0x00000000c0018b10                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018c82                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018df6                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018e62                PCI::detect()
 *fill*         0x00000000c0018eb5        0x1 
 .text          0x00000000c0018eb6      0xb5a hw/diskctrl/ide.32
                0x00000000c0018eb6                IDE::close(int, int, void*)
                0x00000000c0018eba                IDE::IDE()
                0x00000000c0018eba                IDE::IDE()
                0x00000000c0018eee                IDE::prepareInterrupt(unsigned char)
                0x00000000c0018f00                selectDrive(unsigned char, unsigned char)
                0x00000000c0018f02                IDE::getBase(unsigned char)
                0x00000000c0018f14                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0018fd4                IDE::read(unsigned char, unsigned char)
                0x00000000c0019082                IDE::waitInterrupt(unsigned char)
                0x00000000c00190ea                ideChannel0IRQHandler(regs*, void*)
                0x00000000c0019106                ideChannel1IRQHandler(regs*, void*)
                0x00000000c0019122                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0019168                IDE::open(int, int, void*)
                0x00000000c0019576                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0019642                IDE::detect()
                0x00000000c0019902                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c00199b2                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019a10      0x32a hw/diskctrl/satabus.32
                0x00000000c0019a10                SATABus::close(int, int, void*)
                0x00000000c0019a14                SATABus::detect()
                0x00000000c0019a16                SATABus::SATABus()
                0x00000000c0019a16                SATABus::SATABus()
                0x00000000c0019a9c                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019ace                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019b16                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019b36                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019b60                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019c70                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019d1a                SATABus::open(int, int, void*)
 .text          0x00000000c0019d3a      0x921 hw/diskphys/ata.32
                0x00000000c0019d3a                ATA::close(int, int, void*)
                0x00000000c0019d5e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019d60                ATA::ATA()
                0x00000000c0019d60                ATA::ATA()
                0x00000000c0019d8e                ATA::flush(bool)
                0x00000000c0019dd8                ATA::readyForCommand()
                0x00000000c0019e24                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a1a0                ATA::detectCHS()
                0x00000000c001a1ca                ATA::open(int, int, void*)
                0x00000000c001a296                combineCharAndColour(char, unsigned char)
                0x00000000c001a2a7                combineColours(unsigned char, unsigned char)
                0x00000000c001a2b4                ATA::read(unsigned long long, int, void*)
                0x00000000c001a48a                ATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001a65b        0x1 
 .text          0x00000000c001a65c      0x60e hw/diskphys/atapi.32
                0x00000000c001a65c                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a662                ATAPI::close(int, int, void*)
                0x00000000c001a686                ATAPI::ATAPI()
                0x00000000c001a686                ATAPI::ATAPI()
                0x00000000c001a6b4                ATAPI::readyForCommand()
                0x00000000c001a706                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a9c6                ATAPI::diskRemoved()
                0x00000000c001aa00                ATAPI::eject()
                0x00000000c001aa48                ATAPI::diskInserted()
                0x00000000c001aa54                ATAPI::detectMedia()
                0x00000000c001ab10                ATAPI::open(int, int, void*)
                0x00000000c001abf0                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ac6a      0x402 hw/diskphys/sata.32
                0x00000000c001ac6a                SATA::close(int, int, void*)
                0x00000000c001ac8e                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ac90                SATA::open(int, int, void*)
                0x00000000c001ad3a                SATA::SATA()
                0x00000000c001ad3a                SATA::SATA()
                0x00000000c001ad68                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001afb4                SATA::read(unsigned long long, int, void*)
                0x00000000c001b000                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001b06c      0x596 hw/diskphys/satapi.32
                0x00000000c001b06c                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001b072                SATAPI::close(int, int, void*)
                0x00000000c001b096                SATAPI::SATAPI()
                0x00000000c001b096                SATAPI::SATAPI()
                0x00000000c001b0c4                SATAPI::diskRemoved()
                0x00000000c001b0c6                SATAPI::diskInserted()
                0x00000000c001b0e2                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b3b6                SATAPI::eject()
                0x00000000c001b3f2                SATAPI::detectMedia()
                0x00000000c001b418                SATAPI::open(int, int, void*)
                0x00000000c001b518                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001b602      0x455 hw/intctrl/apic.32
                0x00000000c001b602                IOAPIC::close(int, int, void*)
                0x00000000c001b608                apicGetBase()
                0x00000000c001b64a                IOAPIC::IOAPIC()
                0x00000000c001b64a                IOAPIC::IOAPIC()
                0x00000000c001b672                apicOpen()
                0x00000000c001b7d8                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b80a                IOAPIC::read(int)
                0x00000000c001b832                IOAPIC::open(int, int, void*)
                0x00000000c001b926                IOAPIC::write(int, int)
                0x00000000c001b952                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001ba57        0x1 
 .text          0x00000000c001ba58       0xf0 hw/timer/apictimer.32
                0x00000000c001ba58                APICTimer::close(int, int, void*)
                0x00000000c001ba60                apicTimerHandler(regs*, void*)
                0x00000000c001ba88                APICTimer::open(int, int, void*)
                0x00000000c001baf8                APICTimer::write(int)
                0x00000000c001bb20                APICTimer::APICTimer()
                0x00000000c001bb20                APICTimer::APICTimer()
 .text          0x00000000c001bb48      0x1aa hw/timer/pit.32
                0x00000000c001bb48                PIT::write(int)
                0x00000000c001bbcc                pitHandler(regs*, void*)
                0x00000000c001bbf0                PIT::open(int, int, void*)
                0x00000000c001bc40                PIT::close(int, int, void*)
                0x00000000c001bc70                PIT::PIT()
                0x00000000c001bc70                PIT::PIT()
 *fill*         0x00000000c001bcf2        0xe 
 .text          0x00000000c001bd00       0x83 arch/i386/avx.32
                0x00000000c001bd00                avxDetect
                0x00000000c001bd2a                avxSave
                0x00000000c001bd3b                avxLoad
                0x00000000c001bd4c                avxInit
                0x00000000c001bd6e                avxClose
                0x00000000c001bd6f                wouldSheSayYes
 *fill*         0x00000000c001bd83        0xd 
 .text          0x00000000c001bd90      0x231 arch/i386/interrupt.32
                0x00000000c001bd90                isr0
                0x00000000c001bda0                isr1
                0x00000000c001bdaa                isr2
                0x00000000c001bdb4                isr3
                0x00000000c001bdbe                isr4
                0x00000000c001bdc8                isr5
                0x00000000c001bdd2                isr6
                0x00000000c001bddc                isr7
                0x00000000c001bde6                isr8
                0x00000000c001bdee                isr9
                0x00000000c001bdf8                isr10
                0x00000000c001be00                isr11
                0x00000000c001be08                isr12
                0x00000000c001be10                isr13
                0x00000000c001be18                isr14
                0x00000000c001be20                isr15
                0x00000000c001be2a                isr16
                0x00000000c001be34                isr17
                0x00000000c001be3e                isr18
                0x00000000c001be48                irq3
                0x00000000c001be52                irq4
                0x00000000c001be5c                irq5
                0x00000000c001be66                irq6
                0x00000000c001be70                irq7
                0x00000000c001be7a                irq8
                0x00000000c001be84                irq9
                0x00000000c001be8e                irq10
                0x00000000c001be98                irq11
                0x00000000c001bea2                irq12
                0x00000000c001beac                irq13
                0x00000000c001beb6                irq14
                0x00000000c001bec0                irq15
                0x00000000c001beca                irq1
                0x00000000c001bed1                irq2
                0x00000000c001bed8                isr96
                0x00000000c001bedf                irq0
                0x00000000c001bee4                int_common_stub
                0x00000000c001bf16                syscall_common_stub
                0x00000000c001bf71                irq16
                0x00000000c001bf7b                irq17
                0x00000000c001bf85                irq18
                0x00000000c001bf8f                irq19
                0x00000000c001bf99                irq20
                0x00000000c001bfa3                irq21
                0x00000000c001bfad                irq22
                0x00000000c001bfb7                irq23
 *fill*         0x00000000c001bfc1        0xf 
 .text          0x00000000c001bfd0       0x10 arch/i386/rdrand.32
                0x00000000c001bfd0                i386GetRDRAND
 .text          0x00000000c001bfe0       0x39 arch/i386/sse.32
                0x00000000c001bfe0                absolutelyNoChanceInHell
                0x00000000c001bfe0                sseDetect
                0x00000000c001bff8                sseSave
                0x00000000c001c000                sseLoad
                0x00000000c001c008                sseInit
                0x00000000c001c018                sseClose
 *fill*         0x00000000c001c019        0x7 
 .text          0x00000000c001c020       0x49 arch/i386/x87.32
                0x00000000c001c026                x87Detect
                0x00000000c001c041                x87Save
                0x00000000c001c048                x87Load
                0x00000000c001c04f                x87Init
                0x00000000c001c068                x87Close
 *fill*         0x00000000c001c069        0x3 
 .text          0x00000000c001c06c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001c091        0x0 crtn.32
 *fill*         0x00000000c001c091        0x3 
 .text          0x00000000c001c094      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001c094                __divdi3
 *fill*         0x00000000c001c1df        0x1 
 .text          0x00000000c001c1e0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001c1e0                __moddi3
 *fill*         0x00000000c001c35e        0x2 
 .text          0x00000000c001c360       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c360                __udivdi3
 *fill*         0x00000000c001c45f        0x1 
 .text          0x00000000c001c460      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c460                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c580        0x0
 .iplt          0x00000000c001c580        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c57a        0xf
 .init          0x00000000c001c57a        0x3 crti.32
                0x00000000c001c57a                _init
 .init          0x00000000c001c57d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c582        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c587        0x2 crtn.32

.fini           0x00000000c001c589        0xa
 .fini          0x00000000c001c589        0x3 crti.32
                0x00000000c001c589                _fini
 .fini          0x00000000c001c58c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c591        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c594       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c594       0x23 core/computer.32
                0x00000000c001c594                Computer::~Computer()
                0x00000000c001c594                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c5b8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c5b8       0x2a core/computer.32
                0x00000000c001c5b8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c5e2       0x21
 .text._Z10idleCommonv
                0x00000000c001c5e2       0x21 core/idle.32
                0x00000000c001c5e2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c604        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c604        0x2 core/unixfile.32
                0x00000000c001c604                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c604                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c606       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c606       0x42 core/unixfile.32
                0x00000000c001c606                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c606                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c648       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c648       0xd3 core/unixfile.32
                0x00000000c001c648                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c71c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c71c        0x7 core/unixfile.32
                0x00000000c001c71c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c724       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c724       0xa1 core/unixfile.32
                0x00000000c001c724                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c7c6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c7c6        0x8 core/unixfile.32
                0x00000000c001c7c6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c7ce       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c7ce       0x1a hal/device.32
                0x00000000c001c7ce                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c7ce                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c7e8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c7e8       0x2a hal/device.32
                0x00000000c001c7e8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c812       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c812       0xdc hal/device.32
                0x00000000c001c812                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c8ee       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c8ee       0x42 hal/device.32
                0x00000000c001c8ee                LinkedList<Device>::LinkedList()
                0x00000000c001c8ee                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c930       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c930       0x1c hal/timer.32
                0x00000000c001c930                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c94c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c94c        0x7 hal/timer.32
                0x00000000c001c94c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c954       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c954       0xb8 hal/timer.32
                0x00000000c001c954                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ca0c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ca0c       0xda hal/timer.32
                0x00000000c001ca0c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001cae8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001cae8       0x23 hw/acpi.32
                0x00000000c001cae8                ACPI::~ACPI()
                0x00000000c001cae8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001cb0c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001cb0c       0x2a hw/acpi.32
                0x00000000c001cb0c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001cb38        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001cb38        0x2 hw/acpi.32
                0x00000000c001cb38                LinkedList<Device>::~LinkedList()
                0x00000000c001cb38                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001cb3c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001cb3c       0x1c hw/acpi.32
                0x00000000c001cb3c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001cb58        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001cb58        0x7 hw/acpi.32
                0x00000000c001cb58                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001cb60       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001cb60       0xb8 hw/acpi.32
                0x00000000c001cb60                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001cc18       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001cc18       0x23 hw/cpu.32
                0x00000000c001cc18                CPU::~CPU()
                0x00000000c001cc18                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001cc3c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001cc3c       0x2a hw/cpu.32
                0x00000000c001cc3c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cc68        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cc68        0x2 thr/prcssthr.32
                0x00000000c001cc68                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001cc68                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cc6c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cc6c       0x49 thr/prcssthr.32
                0x00000000c001cc6c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001cc6c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ccb8       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ccb8       0x42 thr/prcssthr.32
                0x00000000c001ccb8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ccb8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ccfc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ccfc        0x8 thr/prcssthr.32
                0x00000000c001ccfc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001cd04       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cd04       0x23 hw/bus/pci.32
                0x00000000c001cd04                PCI::~PCI()
                0x00000000c001cd04                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cd28       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cd28       0x2a hw/bus/pci.32
                0x00000000c001cd28                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cd52       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cd52       0x23 hw/diskctrl/ide.32
                0x00000000c001cd52                IDE::~IDE()
                0x00000000c001cd52                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cd76       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cd76       0x2a hw/diskctrl/ide.32
                0x00000000c001cd76                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cda0       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cda0       0x23 hw/diskctrl/satabus.32
                0x00000000c001cda0                SATABus::~SATABus()
                0x00000000c001cda0                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cdc4       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cdc4       0x2a hw/diskctrl/satabus.32
                0x00000000c001cdc4                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cdee       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cdee       0x23 hw/diskphys/ata.32
                0x00000000c001cdee                ATA::~ATA()
                0x00000000c001cdee                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001ce12       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001ce12       0x2a hw/diskphys/ata.32
                0x00000000c001ce12                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001ce3c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001ce3c       0x23 hw/diskphys/atapi.32
                0x00000000c001ce3c                ATAPI::~ATAPI()
                0x00000000c001ce3c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001ce60       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001ce60       0x2a hw/diskphys/atapi.32
                0x00000000c001ce60                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001ce8a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001ce8a       0x23 hw/diskphys/sata.32
                0x00000000c001ce8a                SATA::~SATA()
                0x00000000c001ce8a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001ceae       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001ceae       0x2a hw/diskphys/sata.32
                0x00000000c001ceae                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001ced8       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001ced8       0x23 hw/diskphys/satapi.32
                0x00000000c001ced8                SATAPI::~SATAPI()
                0x00000000c001ced8                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001cefc       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001cefc       0x2a hw/diskphys/satapi.32
                0x00000000c001cefc                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cf26       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cf26       0x23 hw/intctrl/apic.32
                0x00000000c001cf26                IOAPIC::~IOAPIC()
                0x00000000c001cf26                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001cf4a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001cf4a       0x2a hw/intctrl/apic.32
                0x00000000c001cf4a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001cf74       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001cf74       0x23 hw/timer/apictimer.32
                0x00000000c001cf74                APICTimer::~APICTimer()
                0x00000000c001cf74                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001cf98       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001cf98       0x2a hw/timer/apictimer.32
                0x00000000c001cf98                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001cfc4       0x23
 .text._ZN3PITD2Ev
                0x00000000c001cfc4       0x23 hw/timer/pit.32
                0x00000000c001cfc4                PIT::~PIT()
                0x00000000c001cfc4                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001cfe8       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001cfe8       0x2a hw/timer/pit.32
                0x00000000c001cfe8                PIT::~PIT()

.rodata         0x00000000c001d012     0x289a
                0x00000000c001d012                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001d012        0x2 
 .ctors         0x00000000c001d014        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001d018        0x4 core/unixfile.32
 .ctors         0x00000000c001d01c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001d020        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001d024                end_ctors = .
                0x00000000c001d024                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001d024        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001d028        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001d028                __DTOR_END__
                0x00000000c001d02c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001d02c       0x14 
 .rodata        0x00000000c001d040      0x101 acpica/utclib.32
                0x00000000c001d040                AcpiGbl_Ctypes
 *fill*         0x00000000c001d141        0x3 
 .rodata        0x00000000c001d144       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001d15c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001d1a6       0x1a 
 .rodata        0x00000000c001d1c0       0xed fs/fat/ff.32
 *fill*         0x00000000c001d2ad       0x13 
 .rodata        0x00000000c001d2c0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d6c0       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d6d1      0x115 core/computer.32
 *fill*         0x00000000c001d7e6        0x2 
 .rodata.str1.4
                0x00000000c001d7e8       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d850       0x2c core/computer.32
                0x00000000c001d850                vtable for Computer
 .rodata.str1.4
                0x00000000c001d87c       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d8ac        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d8b8       0x17 core/main.32
 *fill*         0x00000000c001d8cf        0x1 
 .rodata.str1.4
                0x00000000c001d8d0       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d975       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d9cd       0x39 core/pipe.32
 *fill*         0x00000000c001da06        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001da08       0x1c core/pipe.32
                0x00000000c001da08                vtable for Pipe
 .rodata.str1.1
                0x00000000c001da24       0x2b core/terminal.32
 *fill*         0x00000000c001da4f        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001da50       0x1c core/terminal.32
                0x00000000c001da50                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001da6c       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001da8e       0x15 core/unixfile.32
 *fill*         0x00000000c001daa3        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001daa4       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001daef        0x8 core/unixfile.32
 *fill*         0x00000000c001daf7        0x1 
 .rodata.str1.4
                0x00000000c001daf8       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001db18       0x1c core/unixfile.32
                0x00000000c001db18                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001db34       0x1c core/unixfile.32
                0x00000000c001db34                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001db50      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dcb7      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001ddbe       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001ddf1       0x11 dbg/kconsole.32
 *fill*         0x00000000c001ddf1        0x3 
 .rodata        0x00000000c001ddf4      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001df44       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001df44       0x68 fs/vfs.32
                0x00000000c001df44                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001dfac       0x1c fs/vfs.32
                0x00000000c001dfac                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001dfc8       0x1c fs/vfs.32
                0x00000000c001dfc8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001dfe4       0x2c hal/bus.32
                0x00000000c001dfe4                vtable for Bus
 .rodata.str1.1
                0x00000000c001e010       0x1e hal/clock.32
 *fill*         0x00000000c001e02e        0x2 
 .rodata._ZTV5Clock
                0x00000000c001e030       0x3c hal/clock.32
                0x00000000c001e030                vtable for Clock
 *fill*         0x00000000c001e06c       0x14 
 .rodata        0x00000000c001e080       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001e0b0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001e108       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001e108       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001e108       0x2c hal/device.32
                0x00000000c001e108                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001e134       0x2c hal/device.32
                0x00000000c001e134                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001e160       0x2c hal/diskctrl.32
                0x00000000c001e160                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001e18c       0x38 hal/diskphys.32
                0x00000000c001e18c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e1c4       0x3e hal/intctrl.32
 *fill*         0x00000000c001e202        0x2 
 .rodata.str1.4
                0x00000000c001e204       0x5d hal/intctrl.32
 .rodata        0x00000000c001e261       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e2b4       0x34 hal/keybrd.32
                0x00000000c001e2b4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e2e8       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e32c       0x2c hal/logidisk.32
                0x00000000c001e32c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e358       0x2c hal/mouse.32
                0x00000000c001e358                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e384        0xb hal/partition.32
 *fill*         0x00000000c001e38f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e390       0x44 hal/serial.32
                0x00000000c001e390                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e3d4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e3d4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e3d4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e3d4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e3d4       0x30 hal/timer.32
                0x00000000c001e3d4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e404       0x10 hal/vcache.32
                0x00000000c001e404                vtable for VCache
 .rodata.str1.1
                0x00000000c001e414       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e47c       0x48 hal/video.32
                0x00000000c001e47c                vtable for Video
 .rodata.str1.4
                0x00000000c001e4c4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e55f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e69b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e69b        0x8 hw/acpi.32
 *fill*         0x00000000c001e69b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e69c       0x2c hw/acpi.32
                0x00000000c001e69c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e6c8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e835        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e838       0x2c hw/cpu.32
                0x00000000c001e838                vtable for CPU
 .rodata.str1.1
                0x00000000c001e864       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e8a0       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c001e931       0xd3 krnl/signal.32
 .rodata.str1.1
                0x00000000c001ea04       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001ea4c       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001ea91        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c001ea9b       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c001eaef       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c001eb1b      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001ece7       0x57 thr/prcssthr.32
 *fill*         0x00000000c001ed3e        0x2 
 .rodata.str1.4
                0x00000000c001ed40      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001ee4c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001ee4c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001ee4c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001ee4c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001ee4c       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001eeec       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001ef1c      0x182 arch/i386/hal.32
                                        0x191 (size before relaxing)
 *fill*         0x00000000c001f09e        0x2 
 .rodata.str1.4
                0x00000000c001f0a0       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001f113       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001f128       0x3c arch/i386/rtc.32
                0x00000000c001f128                vtable for RTC
 .rodata.str1.1
                0x00000000c001f164       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f1a5        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f1a8       0x68 fs/fat/vfslink.32
                0x00000000c001f1a8                vtable for FAT
 .rodata.str1.1
                0x00000000c001f210        0x3 fs/iso9660/helper.32
                                          0x5 (size before relaxing)
 .rodata.str1.1
                0x00000000c001f213       0x49 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c001f25c       0x68 fs/iso9660/vfslink.32
                0x00000000c001f25c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f2c4       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f308       0x34 hal/sound/sndcard.32
                0x00000000c001f308                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f33c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f37b       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f3b3       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f454       0x2c hw/bus/pci.32
                0x00000000c001f454                vtable for PCI
 .rodata.str1.1
                0x00000000c001f480       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f507        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f508       0x2c hw/diskctrl/ide.32
                0x00000000c001f508                vtable for IDE
 .rodata.str1.4
                0x00000000c001f534       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f558       0x2c hw/diskctrl/satabus.32
                0x00000000c001f558                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f584       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f596        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f598       0x38 hw/diskphys/ata.32
                0x00000000c001f598                vtable for ATA
 .rodata.str1.1
                0x00000000c001f5d0        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f5dd        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f5e0       0x38 hw/diskphys/atapi.32
                0x00000000c001f5e0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f618       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f694       0x38 hw/diskphys/sata.32
                0x00000000c001f694                vtable for SATA
 .rodata.str1.1
                0x00000000c001f6cc       0xd5 hw/diskphys/satapi.32
                                         0xe2 (size before relaxing)
 *fill*         0x00000000c001f7a1        0x3 
 .rodata._ZTV6SATAPI
                0x00000000c001f7a4       0x38 hw/diskphys/satapi.32
                0x00000000c001f7a4                vtable for SATAPI
 .rodata        0x00000000c001f7dc        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f7e4       0x2c hw/intctrl/apic.32
                0x00000000c001f7e4                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f810       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f82b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f82c       0x30 hw/timer/apictimer.32
                0x00000000c001f82c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f85c       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f879        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f87c       0x30 hw/timer/pit.32
                0x00000000c001f87c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f8ac      0x3a5
 *(.data)
 .data          0x00000000c001f8ac        0x0 crti.32
 .data          0x00000000c001f8ac        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f8ac                __dso_handle
 .data          0x00000000c001f8b0        0x0 acpica/utclib.32
 .data          0x00000000c001f8b0        0x0 core/malloc.32
 .data          0x00000000c001f8b0        0x0 libk/ctype.32
 .data          0x00000000c001f8b0        0x0 libk/string.32
 .data          0x00000000c001f8b0        0x0 fs/fat/diskio.32
 .data          0x00000000c001f8b0        0x0 fs/fat/ff.32
 .data          0x00000000c001f8b0        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f8b0        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f8b0        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f8b0        0x0 core/computer.32
 .data          0x00000000c001f8b0        0x0 core/gdt.32
 .data          0x00000000c001f8b0        0x0 core/idle.32
 .data          0x00000000c001f8b0        0x0 core/idt.32
 .data          0x00000000c001f8b0        0x4 core/kheap.32
 .data          0x00000000c001f8b4        0x0 core/main.32
 .data          0x00000000c001f8b4        0x4 core/physmgr.32
                0x00000000c001f8b4                Phys::bitmap
 .data          0x00000000c001f8b8        0x0 core/pipe.32
 *fill*         0x00000000c001f8b8        0x8 
 .data          0x00000000c001f8c0       0x60 core/terminal.32
                0x00000000c001f8c0                VgaText::hiddenOut
                0x00000000c001f8e0                ansiToVGAMappings
 .data          0x00000000c001f920        0x0 core/tss.32
 .data          0x00000000c001f920        0x4 core/unixfile.32
                0x00000000c001f920                UnixFile::nextFd
 .data          0x00000000c001f924       0x15 core/virtmgr.32
                0x00000000c001f924                Virt::pageAllocPtr
                0x00000000c001f928                Virt::bitmap
                0x00000000c001f92c                Virt::swapfileSectorsPerPage
                0x00000000c001f930                Virt::swapfileLength
                0x00000000c001f934                Virt::swapfileSector
                0x00000000c001f938                Virt::swapfileDrive
 *fill*         0x00000000c001f939        0x3 
 .data          0x00000000c001f93c        0x4 coreobjs/c++.32
                0x00000000c001f93c                __stack_chk_guard
 .data          0x00000000c001f940        0x0 dbg/kconsole.32
 .data          0x00000000c001f940        0x0 fs/vfs.32
 .data          0x00000000c001f940        0x0 hal/bus.32
 .data          0x00000000c001f940        0x0 hal/buzzer.32
 .data          0x00000000c001f940        0x0 hal/clock.32
 .data          0x00000000c001f940        0x0 hal/device.32
 .data          0x00000000c001f940        0x0 hal/diskctrl.32
 .data          0x00000000c001f940        0x0 hal/diskphys.32
 .data          0x00000000c001f940        0x0 hal/fpu.32
 .data          0x00000000c001f940        0x0 hal/intctrl.32
 .data          0x00000000c001f940        0x0 hal/keybrd.32
 .data          0x00000000c001f940        0x0 hal/logidisk.32
 .data          0x00000000c001f940        0x0 hal/mouse.32
 .data          0x00000000c001f940        0x0 hal/partition.32
 .data          0x00000000c001f940        0x0 hal/serial.32
 .data          0x00000000c001f940        0x0 hal/timer.32
 .data          0x00000000c001f940        0x0 hal/vcache.32
 .data          0x00000000c001f940        0x0 hal/video.32
 .data          0x00000000c001f940       0x10 hw/acpi.32
                0x00000000c001f940                legacyIRQRemaps
 .data          0x00000000c001f950        0x4 hw/cpu.32
                0x00000000c001f950                lastCode
 *fill*         0x00000000c001f954        0xc 
 .data          0x00000000c001f960      0x142 krnl/bootmsg.32
                0x00000000c001f960                KiSplashScreen
 *fill*         0x00000000c001faa2       0x1e 
 .data          0x00000000c001fac0       0x4d krnl/env.32
                0x00000000c001fac0                defaultSysEnv
 .data          0x00000000c001fb0d        0x0 krnl/inlines.32
 .data          0x00000000c001fb0d        0x0 krnl/panic.32
 .data          0x00000000c001fb0d        0x0 krnl/powctrl.32
 .data          0x00000000c001fb0d        0x0 krnl/resolve.32
 *fill*         0x00000000c001fb0d       0x13 
 .data          0x00000000c001fb20       0x4c krnl/signal.32
                0x00000000c001fb20                KiDefaultSignalHandlers
 *fill*         0x00000000c001fb6c       0x14 
 .data          0x00000000c001fb80       0xcc krnl/syscalls.32
                0x00000000c001fb80                systemCallHandlers
 .data          0x00000000c001fc4c        0x0 reg/registry.32
 .data          0x00000000c001fc4c        0x0 sys/eject.32
 .data          0x00000000c001fc4c        0x0 sys/exit.32
 .data          0x00000000c001fc4c        0x0 sys/getcwd.32
 .data          0x00000000c001fc4c        0x0 sys/getpid.32
 .data          0x00000000c001fc4c        0x0 sys/getramdata.32
 .data          0x00000000c001fc4c        0x0 sys/getvgaptr.32
 .data          0x00000000c001fc4c        0x0 sys/loaddll.32
 .data          0x00000000c001fc4c        0x0 sys/read.32
 .data          0x00000000c001fc4c        0x0 sys/registersignal.32
 .data          0x00000000c001fc4c        0x0 sys/sbrk.32
 .data          0x00000000c001fc4c        0x0 sys/setcwd.32
 .data          0x00000000c001fc4c        0x0 sys/settime.32
 .data          0x00000000c001fc4c        0x0 sys/timezone.32
 .data          0x00000000c001fc4c        0x0 sys/write.32
 .data          0x00000000c001fc4c        0x0 sys/wsbe.32
 .data          0x00000000c001fc4c        0x0 sys/yield.32
 .data          0x00000000c001fc4c        0x0 thr/elf.32
 .data          0x00000000c001fc4c        0x4 thr/prcssthr.32
                0x00000000c001fc4c                Thr::nextPID
 .data          0x00000000c001fc50        0x0 vm86/vm8086.32
 .data          0x00000000c001fc50        0x0 arch/i386/hal.32
 .data          0x00000000c001fc50        0x0 arch/i386/pic.32
 .data          0x00000000c001fc50        0x0 arch/i386/rtc.32
 .data          0x00000000c001fc50        0x0 arch/i386/vga.32
 .data          0x00000000c001fc50        0x0 fs/fat/vfslink.32
 .data          0x00000000c001fc50        0x0 fs/iso9660/helper.32
 .data          0x00000000c001fc50        0x1 fs/iso9660/vfslink.32
                0x00000000c001fc50                recentDriveletter
 .data          0x00000000c001fc51        0x0 hal/sound/sndcard.32
 .data          0x00000000c001fc51        0x0 hal/sound/sndport.32
 .data          0x00000000c001fc51        0x0 hw/bus/isa.32
 .data          0x00000000c001fc51        0x0 hw/bus/pci.32
 .data          0x00000000c001fc51        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001fc51        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001fc51        0x0 hw/diskphys/ata.32
 .data          0x00000000c001fc51        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001fc51        0x0 hw/diskphys/sata.32
 .data          0x00000000c001fc51        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001fc51        0x0 hw/intctrl/apic.32
 .data          0x00000000c001fc51        0x0 hw/timer/apictimer.32
 .data          0x00000000c001fc51        0x0 hw/timer/pit.32
 .data          0x00000000c001fc51        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001fc51        0x0 crtn.32
 .data          0x00000000c001fc51        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001fc51        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001fc51        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001fc51        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001fc54        0x0
 .got           0x00000000c001fc54        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001fc54        0x0
 .got.plt       0x00000000c001fc54        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001fc54        0x0
 .igot.plt      0x00000000c001fc54        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001fc54        0x0
 .tm_clone_table
                0x00000000c001fc54        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001fc54        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001fc51      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001fc51        0x3 
 .eh_frame      0x00000000c001fc54        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001fc54        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001fc54       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001fcac       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fcec       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fd58       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0020000       0x7d
 *(userkernel)
 userkernel     0x00000000c0020000       0x52 krnl/signal.32
                0x00000000c0020000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002002c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0020052       0x2b krnl/syscalls.32
                0x00000000c0020052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0021000        0x1
 *(align_previous)
 align_previous
                0x00000000c0021000        0x1 krnl/signal.32
                0x00000000c0021000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0021004        0x0
 .rel.got       0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0021001     0x4ba7
                0x00000000c0021001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0021001       0x1f 
 COMMON         0x00000000c0021020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0021020                dcache
                0x00000000c0021060                cdDriveLetter
                0x00000000c0021080                icache
 *(.bss)
 .bss           0x00000000c00210c0        0x0 crti.32
 .bss           0x00000000c00210c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00210e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00210e4       0x1c 
 .bss           0x00000000c0021100      0x378 core/malloc.32
 .bss           0x00000000c0021478        0x0 libk/ctype.32
 .bss           0x00000000c0021478        0x0 libk/string.32
 .bss           0x00000000c0021478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0021478        0x8 
 .bss           0x00000000c0021480       0x88 fs/fat/ff.32
 .bss           0x00000000c0021508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0021508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0021508       0x18 
 .bss           0x00000000c0021520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0021eb8        0x6 core/computer.32
                0x00000000c0021eb8                Krnl::computer
                0x00000000c0021ebc                KeIsPreemptionOn
                0x00000000c0021ebd                KeIsSchedulingOn
 *fill*         0x00000000c0021ebe        0x2 
 .bss           0x00000000c0021ec0        0x6 core/gdt.32
                0x00000000c0021ec0                gdtDescr
 .bss           0x00000000c0021ec6        0x0 core/idle.32
 *fill*         0x00000000c0021ec6        0x2 
 .bss           0x00000000c0021ec8        0x6 core/idt.32
                0x00000000c0021ec8                idtDescr
 .bss           0x00000000c0021ece        0x0 core/kheap.32
 *fill*         0x00000000c0021ece        0x2 
 .bss           0x00000000c0021ed0        0x4 core/main.32
                0x00000000c0021ed0                sysBootSettings
 .bss           0x00000000c0021ed4       0x29 core/physmgr.32
                0x00000000c0021ed4                Phys::forbidEvictions
                0x00000000c0021ed8                Phys::currentPagePointer
                0x00000000c0021edc                Phys::highestMem
                0x00000000c0021ee0                Phys::oldPercent
                0x00000000c0021ee4                Phys::usedPages
                0x00000000c0021ee8                Phys::usablePages
                0x00000000c0021eec                Phys::dmaUsage
 .bss           0x00000000c0021efd        0x0 core/pipe.32
 *fill*         0x00000000c0021efd        0x3 
 .bss           0x00000000c0021f00        0x9 core/terminal.32
                0x00000000c0021f00                terminalCycle
                0x00000000c0021f04                activeTerminal
                0x00000000c0021f08                VgaText::graphicMode
 *fill*         0x00000000c0021f09        0x1 
 .bss           0x00000000c0021f0a        0x2 core/tss.32
                0x00000000c0021f0a                doubleFaultSelector
 *fill*         0x00000000c0021f0c       0x14 
 .bss           0x00000000c0021f20       0x84 core/unixfile.32
                0x00000000c0021f20                sfileLpt
                0x00000000c0021f60                sfileCom
                0x00000000c0021f84                sfileNul
                0x00000000c0021f88                sfilePnt
                0x00000000c0021f8c                sfileAux
                0x00000000c0021f90                sfileCon
                0x00000000c0021f94                initialFilesAdded
                0x00000000c0021f98                unixFileLinkedList
 .bss           0x00000000c0021fa4       0x10 core/virtmgr.32
                0x00000000c0021fa4                twswaps
                0x00000000c0021fa8                swapBalance
                0x00000000c0021fac                Virt::swapfileBitmap
                0x00000000c0021fb0                firstVAS
 .bss           0x00000000c0021fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0021fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0021fb4        0x4 fs/vfs.32
                0x00000000c0021fb4                installedFilesystems
 .bss           0x00000000c0021fb8        0x0 hal/bus.32
 .bss           0x00000000c0021fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0021fb8        0x8 hal/clock.32
                0x00000000c0021fb8                User::dstOn
                0x00000000c0021fb9                User::timezoneHalfHourOffset
                0x00000000c0021fbc                User::timezoneHourOffset
 .bss           0x00000000c0021fc0        0x0 hal/device.32
 .bss           0x00000000c0021fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0021fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0021fc0        0x0 hal/fpu.32
 .bss           0x00000000c0021fc0     0x2000 hal/intctrl.32
                0x00000000c0021fc0                INT_contexts
                0x00000000c0022fc0                INT_handlers
 .bss           0x00000000c0023fc0      0x429 hal/keybrd.32
                0x00000000c0023fc0                keyboardWaitingTaskList
                0x00000000c0023fc4                keyboardSetupYet
                0x00000000c0023fc8                guiKeyboardHandler
                0x00000000c0023fe0                keystates
 *fill*         0x00000000c00243e9       0x17 
 .bss           0x00000000c0024400       0x88 hal/logidisk.32
                0x00000000c0024400                diskAssignments
                0x00000000c0024420                disks
 .bss           0x00000000c0024488        0x4 hal/mouse.32
                0x00000000c0024488                guiMouseHandler
 .bss           0x00000000c002448c        0x0 hal/partition.32
 .bss           0x00000000c002448c        0x0 hal/serial.32
 .bss           0x00000000c002448c        0x4 hal/timer.32
                0x00000000c002448c                milliTenthsSinceBoot
 .bss           0x00000000c0024490        0x0 hal/vcache.32
 .bss           0x00000000c0024490        0x4 hal/video.32
                0x00000000c0024490                screen
 *fill*         0x00000000c0024494        0xc 
 .bss           0x00000000c00244a0      0x480 hw/acpi.32
                0x00000000c00244a0                systemSleepFunction
                0x00000000c00244a4                systemResetFunction
                0x00000000c00244a8                systemShutdownFunction
                0x00000000c00244ac                nextACPITable
                0x00000000c00244c0                acpiTables
                0x00000000c00246c0                usingXSDT
                0x00000000c00246c4                MADTpointer
                0x00000000c00246c8                RSDTpointer
                0x00000000c00246cc                RSDPpointer
                0x00000000c00246d0                nextAPICNMI
                0x00000000c00246e0                apicNMIInfo
                0x00000000c0024760                legacyIRQFlags
                0x00000000c0024780                ioapicDiscoveryNumber
                0x00000000c00247a0                ioapicFoundInMADT
                0x00000000c00247c0                ioapicAddresses
                0x00000000c0024840                ioapicGSIBase
                0x00000000c00248c0                processorDiscoveryNumber
                0x00000000c00248e0                matchingAPICID
                0x00000000c0024900                processorID
 .bss           0x00000000c0024920       0x10 hw/cpu.32
                0x00000000c0024920                lastD
                0x00000000c0024924                lastC
                0x00000000c0024928                lastB
                0x00000000c002492c                lastA
 .bss           0x00000000c0024930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0024930        0x8 krnl/env.32
                0x00000000c0024930                Krnl::userEnv
                0x00000000c0024934                Krnl::systemEnv
 .bss           0x00000000c0024938        0x0 krnl/inlines.32
 .bss           0x00000000c0024938        0x1 krnl/panic.32
                0x00000000c0024938                KeIsKernelInPanic
 *fill*         0x00000000c0024939        0x7 
 .bss           0x00000000c0024940       0x48 krnl/powctrl.32
                0x00000000c0024940                Krnl::powCtrlOnBattery
                0x00000000c0024960                Krnl::currentPowerSettings
                0x00000000c0024984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0024988        0x0 krnl/resolve.32
 .bss           0x00000000c0024988        0x0 krnl/signal.32
 .bss           0x00000000c0024988        0x0 krnl/syscalls.32
 .bss           0x00000000c0024988        0x0 reg/registry.32
 .bss           0x00000000c0024988        0x0 sys/eject.32
 .bss           0x00000000c0024988        0x0 sys/exit.32
 .bss           0x00000000c0024988        0x0 sys/getcwd.32
 .bss           0x00000000c0024988        0x0 sys/getpid.32
 .bss           0x00000000c0024988        0x0 sys/getramdata.32
 .bss           0x00000000c0024988        0x0 sys/getvgaptr.32
 .bss           0x00000000c0024988        0x0 sys/loaddll.32
 .bss           0x00000000c0024988        0x0 sys/read.32
 .bss           0x00000000c0024988        0x0 sys/registersignal.32
 .bss           0x00000000c0024988        0x0 sys/sbrk.32
 .bss           0x00000000c0024988        0x0 sys/setcwd.32
 .bss           0x00000000c0024988        0x0 sys/settime.32
 .bss           0x00000000c0024988        0x0 sys/timezone.32
 .bss           0x00000000c0024988        0x0 sys/write.32
 .bss           0x00000000c0024988        0x0 sys/wsbe.32
 .bss           0x00000000c0024988        0x0 sys/yield.32
 *fill*         0x00000000c0024988       0x18 
 .bss           0x00000000c00249a0      0x7a4 thr/elf.32
                0x00000000c00249a0                Thr::driverLookupNext
                0x00000000c00249c0                Thr::driverLookupLen
                0x00000000c0024bc0                Thr::driverLookupAddr
                0x00000000c0024dc0                Thr::driverNameLookup
                0x00000000c0024fc0                Thr::kernelSymbols
                0x00000000c0025040                Thr::kernelStringTable
                0x00000000c00250c0                Thr::kernelSymbolTable
                0x00000000c0025140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0025144        0x4 
 .bss           0x00000000c0025148       0x68 thr/prcssthr.32
                0x00000000c0025148                cleanerThread
                0x00000000c002514c                weNeedTheCleanerToNotBlock
                0x00000000c0025150                retValLockStuff
                0x00000000c0025154                retValSchedLock
                0x00000000c0025158                lockStuffLock
                0x00000000c002515c                schedulerLock
                0x00000000c0025160                taskSwitchesPostponedFlag
                0x00000000c0025164                postponeTaskSwitchesCounter
                0x00000000c0025168                irqDisableCounter
                0x00000000c002516c                terminatedTaskList
                0x00000000c0025178                sleepingTaskList
                0x00000000c0025184                taskList
                0x00000000c0025190                kernelProcess
 *fill*         0x00000000c00251b0       0x10 
 .bss           0x00000000c00251c0       0x40 vm86/vm8086.32
                0x00000000c00251c0                Vm::vmRetV
                0x00000000c00251c4                Vm::vmDone
                0x00000000c00251c5                Vm::vmReady
                0x00000000c00251c8                Vm::vm86Thread
                0x00000000c00251cc                Vm::vmToHostCommsPtr
                0x00000000c00251e0                Vm::vmToHostComms
 .bss           0x00000000c0025200       0x14 arch/i386/hal.32
                0x00000000c0025200                apic
                0x00000000c0025204                fpuOwner
                0x00000000c0025208                coproLoadFunc
                0x00000000c002520c                coproSaveFunc
                0x00000000c0025210                gpFaultIntercept
 .bss           0x00000000c0025214        0x0 arch/i386/pic.32
 .bss           0x00000000c0025214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0025216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0025216        0xa 
 .bss           0x00000000c0025220       0xf0 fs/fat/vfslink.32
                0x00000000c0025220                FAT::fats
                0x00000000c0025240                FAT::vfsToFatRemaps
                0x00000000c00252c0                fatToVFSRemaps
 .bss           0x00000000c0025310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0025310       0x10 
 .bss           0x00000000c0025320      0x820 fs/iso9660/vfslink.32
                0x00000000c0025320                iso9660Owner
                0x00000000c0025324                recentSector
                0x00000000c0025340                recentBuffer
 .bss           0x00000000c0025b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0025b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0025b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0025b40        0xd hw/bus/pci.32
                0x00000000c0025b40                thePCI
 .bss           0x00000000c0025b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0025b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0025b4d        0x3 
 .bss           0x00000000c0025b50        0x8 hw/diskphys/ata.32
                0x00000000c0025b50                ataSectorsWritten
                0x00000000c0025b54                ataSectorsRead
 .bss           0x00000000c0025b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0025b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0025b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0025b58        0x8 
 .bss           0x00000000c0025b60       0x41 hw/intctrl/apic.32
                0x00000000c0025b60                noOfIOAPICs
                0x00000000c0025b80                ioapics
                0x00000000c0025ba0                IOAPICsSetupYet
 .bss           0x00000000c0025ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0025ba1        0x3 
 .bss           0x00000000c0025ba4        0x4 hw/timer/pit.32
                0x00000000c0025ba4                pitFreq
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0025ba8        0x0 crtn.32
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0025ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002a74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
