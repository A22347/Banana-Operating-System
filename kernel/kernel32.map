Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c2ea
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002ff                asmQuickAcquireLock
                0x00000000c000031d                asmQuickReleaseLock
                0x00000000c0000329                asmAcquireLock
                0x00000000c000034a                asmReleaseLock
                0x00000000c000035d                loadGDT
                0x00000000c000037d                memcpy
 *fill*         0x00000000c0000382        0xe 
 .text          0x00000000c0000390      0x79e acpica/utclib.32
                0x00000000c0000390                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004d0                memset
                0x00000000c0000540                strlen
                0x00000000c0000570                strpbrk
                0x00000000c00005b0                strtok
                0x00000000c0000600                strcpy
                0x00000000c0000630                strncpy
                0x00000000c00006e0                strcmp
                0x00000000c0000730                strchr
                0x00000000c0000760                strncmp
                0x00000000c00007c0                strcat
                0x00000000c00007f0                strncat
                0x00000000c0000850                strstr
                0x00000000c00008b0                toupper
                0x00000000c00008d0                tolower
                0x00000000c00008f0                simple_strtoul
 .text          0x00000000c0000b2e      0xfad core/malloc.32
                0x00000000c0000c99                dlfree
                0x00000000c0000ff4                dlmalloc
                0x00000000c0001531                dlrealloc
                0x00000000c00016d4                dlmemalign
                0x00000000c00017f7                dlcalloc
                0x00000000c0001891                dlcfree
                0x00000000c0001896                dlindependent_calloc
                0x00000000c00018bb                dlindependent_comalloc
                0x00000000c00018d2                dlvalloc
                0x00000000c00018fd                dlpvalloc
                0x00000000c0001933                dlmalloc_trim
                0x00000000c0001940                dlmalloc_usable_size
                0x00000000c0001971                dlmallinfo
                0x00000000c0001a40                dlmalloc_stats
                0x00000000c0001a51                dlmallopt
 *fill*         0x00000000c0001adb        0x1 
 .text          0x00000000c0001adc      0x1f2 libk/ctype.32
                0x00000000c0001adc                isblank
                0x00000000c0001afc                iscntrl
                0x00000000c0001b1c                isdigit
                0x00000000c0001b38                islower
                0x00000000c0001b54                isspace
                0x00000000c0001b7c                isupper
                0x00000000c0001b98                isalpha
                0x00000000c0001bc8                isalnum
                0x00000000c0001bf8                ispunct
                0x00000000c0001c38                isgraph
                0x00000000c0001c68                isprint
                0x00000000c0001c90                isxdigit
 .text          0x00000000c0001cce        0x0 libk/string.32
 .text          0x00000000c0001cce       0x51 fs/fat/diskio.32
                0x00000000c0001cce                disk_status
                0x00000000c0001cd1                disk_initialize
                0x00000000c0001cd4                disk_read
                0x00000000c0001cea                disk_write
                0x00000000c0001d00                disk_ioctl
 .text          0x00000000c0001d1f     0x3d4b fs/fat/ff.32
                0x00000000c0003abb                f_mount
                0x00000000c0003b1d                f_open
                0x00000000c0003de8                f_read
                0x00000000c0003fe7                f_write
                0x00000000c000421b                f_sync
                0x00000000c00042d0                f_close
                0x00000000c00042ff                f_lseek
                0x00000000c00044a6                f_opendir
                0x00000000c0004571                f_closedir
                0x00000000c0004593                f_readdir
                0x00000000c0004625                f_stat
                0x00000000c00046a4                f_getfree
                0x00000000c00047a6                f_truncate
                0x00000000c000488a                f_unlink
                0x00000000c00049ac                f_mkdir
                0x00000000c0004b47                f_rename
                0x00000000c0004cfd                f_chmod
                0x00000000c0004da6                f_utime
                0x00000000c0004e54                f_getlabel
                0x00000000c0004fa5                f_setlabel
                0x00000000c0005135                f_expand
                0x00000000c0005295                f_mkfs
 *fill*         0x00000000c0005a6a        0x2 
 .text          0x00000000c0005a6c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a6c                ff_memalloc
                0x00000000c0005a84                ff_memfree
 *fill*         0x00000000c0005a9b        0x1 
 .text          0x00000000c0005a9c      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005a9c                ff_uni2oem
                0x00000000c0005b3c                ff_oem2uni
                0x00000000c0005bb4                ff_wtoupper
 .text          0x00000000c0005d44      0xc76 fs/iso9660/iso9660.32
                0x00000000c0005f63                isoReadDiscSector
                0x00000000c0005ffe                strnicmp
                0x00000000c00062b1                stricmp
                0x00000000c00062fd                iso_open
                0x00000000c0006387                iso_close
                0x00000000c00063a5                iso_read
                0x00000000c00064bb                iso_seek
                0x00000000c000653f                iso_tell
                0x00000000c0006570                iso_total
                0x00000000c000659b                fn_postprocess
                0x00000000c00065c1                iso_readdir
                0x00000000c00067b2                iso_reset
                0x00000000c00067bf                init_percd
                0x00000000c00068b9                iso_ioctl
                0x00000000c00068c1                fs_iso9660_init
                0x00000000c000694a                fs_iso9660_shutdown
 .text          0x00000000c00069ba      0x685 core/computer.32
                0x00000000c00069ba                Computer::close(int, int, void*)
                0x00000000c00069ff                Krnl::firstTask()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006be4                Computer::setBootMessage(char const*)
                0x00000000c0006be6                Computer::detectFeatures()
                0x00000000c0006df0                Computer::displayFeatures()
                0x00000000c0006df2                Computer::rdmsr(unsigned int)
                0x00000000c0006e1e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006e56                Computer::shutdown()
                0x00000000c0006e6e                Computer::restart()
                0x00000000c0006e86                Computer::sleep()
                0x00000000c0006e9a                Computer::nmiEnabled()
                0x00000000c0006ea6                Computer::readCMOS(unsigned char)
                0x00000000c0006ec0                Computer::enableNMI(bool)
                0x00000000c0006ed8                Computer::open(int, int, void*)
                0x00000000c0006fac                Computer::disableNMI()
                0x00000000c0006fbc                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006fda                Computer::handleNMI()
 *fill*         0x00000000c000703f        0x1 
 .text          0x00000000c0007040      0x1cf core/gdt.32
                0x00000000c0007040                GDTEntry::setBase(unsigned int)
                0x00000000c000705c                GDTEntry::setLimit(unsigned int)
                0x00000000c000707a                GDT::GDT()
                0x00000000c000707a                GDT::GDT()
                0x00000000c0007090                GDT::addEntry(GDTEntry)
                0x00000000c00070b2                GDT::getNumberOfEntries()
                0x00000000c00070ba                GDT::flush()
                0x00000000c00070dc                GDT::setup()
 .text          0x00000000c000720f       0x1d core/idle.32
                0x00000000c000720f                idleFunction(void*)
 .text          0x00000000c000722c      0x464 core/idt.32
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000729e                IDTEntry::setOffset(unsigned int)
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00072be                IDT::addEntry(IDTEntry, int)
                0x00000000c00072d8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007310                IDT::flush()
                0x00000000c000732a                IDT::setup()
 .text          0x00000000c0007690      0x183 core/kheap.32
                0x00000000c0007690                sbrk
                0x00000000c0007725                mmap
                0x00000000c000773b                munmap
                0x00000000c0007751                liballoc_lock()
                0x00000000c000775e                liballoc_unlock()
                0x00000000c0007772                liballoc_alloc(int)
                0x00000000c000778a                liballoc_free(void*, int)
                0x00000000c00077a5                realloc
                0x00000000c00077b9                malloc
                0x00000000c00077c9                free
                0x00000000c00077d9                rfree
                0x00000000c00077e9                calloc
 .text          0x00000000c0007813       0xc3 core/main.32
                0x00000000c0007813                KeEntryPoint
 .text          0x00000000c00078d6      0x5dc core/physmgr.32
                0x00000000c00078d6                Phys::allocateDMA(unsigned long)
                0x00000000c00079ad                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c00079e0                Phys::setPageState(unsigned long, bool)
                0x00000000c0007a12                Phys::getPageState(unsigned long)
                0x00000000c0007a33                Phys::freePage(unsigned long)
                0x00000000c0007a95                Phys::allocatePage()
                0x00000000c0007b53                Phys::allocateContiguousPages(int)
                0x00000000c0007baf                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007be7                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007eb2      0x273 core/pipe.32
                0x00000000c0007eb2                Pipe::isAtty()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eda                Pipe::~Pipe()
                0x00000000c0007f02                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007fc2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00080be                Pipe::Pipe(int)
                0x00000000c00080be                Pipe::Pipe(int)
 *fill*         0x00000000c0008125        0x1 
 .text          0x00000000c0008126      0xaa0 core/terminal.32
                0x00000000c0008126                VgaText::isAtty()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000814e                VgaText::~VgaText()
                0x00000000c0008178                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008198                setTerminalScrollLock(bool)
                0x00000000c0008199                doTerminalCycle()
                0x00000000c000819a                addToTerminalCycle(VgaText*)
                0x00000000c000819b                scrollTerminalScrollLock(int)
                0x00000000c000819c                VgaText::updateTitle()
                0x00000000c000819e                VgaText::load()
                0x00000000c00081a0                VgaText::updateCursor()
                0x00000000c00081b6                VgaText::doANSI_SGR(int)
                0x00000000c000822a                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000823a                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000824a                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000826a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008276                VgaText::setTitleColour(VgaColour)
                0x00000000c0008282                VgaText::setTitle(char*)
                0x00000000c0008284                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008296                VgaText::scrollScreen()
                0x00000000c000832e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008340                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00083d0                VgaText::getCursorX()
                0x00000000c00083d8                VgaText::getCursorY()
                0x00000000c00083e0                VgaText::setCursor(int, int)
                0x00000000c00083f7                setActiveTerminal(VgaText*)
                0x00000000c0008442                VgaText::clearScreen()
                0x00000000c0008490                VgaText::setCursorX(int)
                0x00000000c00084a8                VgaText::setCursorY(int)
                0x00000000c00084c0                VgaText::incrementCursor(bool)
                0x00000000c0008514                VgaText::decrementCursor(bool)
                0x00000000c0008536                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008604                VgaText::putchar(char)
                0x00000000c00086f0                VgaText::putx(unsigned int)
                0x00000000c0008736                VgaText::puts(char const*)
                0x00000000c000875c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00087a8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c0008a46                VgaText::receiveKey(unsigned char)
                0x00000000c0008ba0                VgaText::doUpdate()
                0x00000000c0008ba1                newTerminal(char*)
 *fill*         0x00000000c0008bc6        0x2 
 .text          0x00000000c0008bc8      0x1a1 core/tss.32
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bd8                TSS::setESP(unsigned long)
                0x00000000c0008bec                TSS::flush()
                0x00000000c0008c0c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008d69        0x1 
 .text          0x00000000c0008d6a      0x4c2 core/unixfile.32
                0x00000000c0008d6a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008dc0                ReservedFilename::isAtty()
                0x00000000c0008ddc                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008e3a                UnixFile::getFileDescriptor()
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c00090bc                UnixFile::~UnixFile()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c0009108                ReservedFilename::~ReservedFilename()
                0x00000000c000912f                getFromFileDescriptor(int)
 .text          0x00000000c000922c     0x1166 core/virtmgr.32
                0x00000000c000922c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009261                Virt::getPageState(unsigned long)
                0x00000000c0009285                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009396                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00093b4                Virt::swapIDToSector(unsigned long)
                0x00000000c00093c6                Virt::allocateSwapfilePage()
                0x00000000c0009444                Virt::virtualMemorySetup()
                0x00000000c000948f                Virt::setupPageSwapping(int)
                0x00000000c0009500                VAS::VAS()
                0x00000000c0009500                VAS::VAS()
                0x00000000c000953c                VAS::VAS(VAS*)
                0x00000000c000953c                VAS::VAS(VAS*)
                0x00000000c000956a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009596                VAS::getPageTableEntry(unsigned long)
                0x00000000c00095b5                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00096da                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00096fe                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009718                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009758                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000978c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00097b6                VAS::~VAS()
                0x00000000c00097b6                VAS::~VAS()
                0x00000000c000991a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009a1e                VAS::allocatePages(int, int)
                0x00000000c0009bf6                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009c14                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009cda                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009dc8                VAS::VAS(bool)
                0x00000000c0009dc8                VAS::VAS(bool)
                0x00000000c000a048                VAS::evict(unsigned long)
                0x00000000c000a10a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a1f8                VAS::scanForEviction()
                0x00000000c000a2d8                mapVASFirstTime
 .text          0x00000000c000a392       0x5f coreobjs/c++.32
                0x00000000c000a392                __cxa_atexit
                0x00000000c000a395                __cxa_finalize
                0x00000000c000a396                __stack_chk_fail
                0x00000000c000a3cc                __cxa_pure_virtual
                0x00000000c000a3dd                operator new[](unsigned long)
                0x00000000c000a3e2                operator delete(void*, unsigned long)
                0x00000000c000a3e7                operator delete[](void*)
                0x00000000c000a3ec                operator delete[](void*, unsigned long)
 .text          0x00000000c000a3f1      0x21c dbg/kconsole.32
                0x00000000c000a3f1                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a45c                Dbg::logc(char)
                0x00000000c000a47c                Dbg::logs(char*)
                0x00000000c000a499                Dbg::logWriteInt(unsigned int)
                0x00000000c000a4b7                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a4d8                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000a60d        0x1 
 .text          0x00000000c000a60e      0xc5c fs/vfs.32
                0x00000000c000a60e                File::read(unsigned long long, void*, int*)
                0x00000000c000a666                File::write(unsigned long long, void*, int*)
                0x00000000c000a6be                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a716                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a744                File::isAtty()
                0x00000000c000a748                Directory::isAtty()
                0x00000000c000a74c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a752                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a758                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a75e                File::~File()
                0x00000000c000a75e                File::~File()
                0x00000000c000a782                File::~File()
                0x00000000c000a7ac                Directory::~Directory()
                0x00000000c000a7ac                Directory::~Directory()
                0x00000000c000a7d0                Directory::~Directory()
                0x00000000c000a7fa                Filesystem::Filesystem()
                0x00000000c000a7fa                Filesystem::Filesystem()
                0x00000000c000a81e                Filesystem::~Filesystem()
                0x00000000c000a81e                Filesystem::~Filesystem()
                0x00000000c000a82c                Filesystem::~Filesystem()
                0x00000000c000a850                Fs::getcwd(Process*, char*, int)
                0x00000000c000a87a                Fs::initVFS()
                0x00000000c000a8a4                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aa4e                File::File(char const*, Process*)
                0x00000000c000aa4e                File::File(char const*, Process*)
                0x00000000c000ab0e                File::open(FileOpenMode)
                0x00000000c000ab6c                File::close()
                0x00000000c000abcc                File::seek(unsigned long long)
                0x00000000c000ac22                File::tell(unsigned long long*)
                0x00000000c000ac72                File::rewind()
                0x00000000c000ac86                File::unlink()
                0x00000000c000acd2                File::rename(char const*)
                0x00000000c000ad20                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000ad7c                File::exists()
                0x00000000c000adba                File::stat(unsigned long long*, bool*)
                0x00000000c000ae1b                Fs::setcwd(Process*, char*)
                0x00000000c000af78                Directory::Directory(char const*, Process*)
                0x00000000c000af78                Directory::Directory(char const*, Process*)
                0x00000000c000b038                Directory::open()
                0x00000000c000b094                Directory::close()
                0x00000000c000b0f4                Directory::unlink()
                0x00000000c000b140                Directory::rename(char const*)
                0x00000000c000b18e                Directory::exists()
                0x00000000c000b1cc                Directory::read(dirent*)
                0x00000000c000b218                Directory::create()
                0x00000000c000b264                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b26a        0x2 
 .text          0x00000000c000b26c       0x86 hal/bus.32
                0x00000000c000b26c                Bus::Bus(char const*)
                0x00000000c000b26c                Bus::Bus(char const*)
                0x00000000c000b2a4                Bus::~Bus()
                0x00000000c000b2a4                Bus::~Bus()
                0x00000000c000b2c8                Bus::~Bus()
 .text          0x00000000c000b2f2       0x96 hal/buzzer.32
                0x00000000c000b2f2                beepThread(void*)
                0x00000000c000b32f                Krnl::beep(int, int, bool)
 .text          0x00000000c000b388      0x46d hal/clock.32
                0x00000000c000b388                User::loadClockSettings(int)
                0x00000000c000b3da                Clock::Clock(char const*)
                0x00000000c000b3da                Clock::Clock(char const*)
                0x00000000c000b410                Clock::~Clock()
                0x00000000c000b410                Clock::~Clock()
                0x00000000c000b434                Clock::~Clock()
                0x00000000c000b45e                Clock::timeInSecondsLocal()
                0x00000000c000b4a6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b4ff                datetimeToSeconds(datetime_t)
                0x00000000c000b62c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b68c                secondsToDatetime(unsigned long long)
                0x00000000c000b7d0                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b7f5        0x1 
 .text          0x00000000c000b7f6      0x464 hal/device.32
                0x00000000c000b7f6                Device::hibernate()
                0x00000000c000b7f8                Device::wake()
                0x00000000c000b7fa                Device::detect()
                0x00000000c000b7fc                Device::disableLegacy()
                0x00000000c000b7fe                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b800                DriverlessDevice::close(int, int, void*)
                0x00000000c000b804                DriverlessDevice::detect()
                0x00000000c000b806                DriverlessDevice::open(int, int, void*)
                0x00000000c000b81a                Device::~Device()
                0x00000000c000b81a                Device::~Device()
                0x00000000c000b828                Device::~Device()
                0x00000000c000b850                Device::findAndLoadDriver()
                0x00000000c000b85e                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000b884                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000b8c4                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b8ee                Device::getParent()
                0x00000000c000b8fa                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b918                Device::addChild(Device*)
                0x00000000c000b95c                Device::removeAllChildren()
                0x00000000c000b9a2                Device::hibernateAll()
                0x00000000c000b9d2                Device::wakeAll()
                0x00000000c000ba02                Device::detectAll()
                0x00000000c000ba32                Device::disableLegacyAll()
                0x00000000c000ba34                Device::loadDriversForAll()
                0x00000000c000ba36                Device::closeAll()
                0x00000000c000ba6c                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000baa2                Device::setName(char const*)
                0x00000000c000bab0                Device::Device(char const*)
                0x00000000c000bab0                Device::Device(char const*)
                0x00000000c000bbac                Device::getName()
                0x00000000c000bbb6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bbb6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bbec                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bc30                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bc5a        0x2 
 .text          0x00000000c000bc5c       0x86 hal/diskctrl.32
                0x00000000c000bc5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bc5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bc94                HardDiskController::~HardDiskController()
                0x00000000c000bc94                HardDiskController::~HardDiskController()
                0x00000000c000bcb8                HardDiskController::~HardDiskController()
 .text          0x00000000c000bce2       0xe2 hal/diskphys.32
                0x00000000c000bce2                PhysicalDisk::eject()
                0x00000000c000bce6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bce6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bd4e                PhysicalDisk::startCache()
                0x00000000c000bd76                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bd76                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bd9a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000bdc4        0x0 hal/fpu.32
 .text          0x00000000c000bdc4      0x35d hal/intctrl.32
                0x00000000c000bdc4                int_handler
                0x00000000c000be4c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000be94                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bfcc                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c000                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c07f                setupINTS()
                0x00000000c000c0dc                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c121        0x1 
 .text          0x00000000c000c122      0x7cc hal/keybrd.32
                0x00000000c000c122                startGUI(void*)
                0x00000000c000c18e                startGUIVESA(void*)
                0x00000000c000c1fa                sendKeyToTerminal(unsigned char)
                0x00000000c000c2c3                sendKeyboardToken(KeyboardToken)
                0x00000000c000c703                clearInternalKeybuffer(VgaText*)
                0x00000000c000c738                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000c864                Keyboard::Keyboard(char const*)
                0x00000000c000c864                Keyboard::Keyboard(char const*)
                0x00000000c000c8a0                Keyboard::~Keyboard()
                0x00000000c000c8a0                Keyboard::~Keyboard()
                0x00000000c000c8c4                Keyboard::~Keyboard()
 .text          0x00000000c000c8ee      0x3ea hal/logidisk.32
                0x00000000c000c8ee                LogicalDisk::close(int, int, void*)
                0x00000000c000c8f2                LogicalDisk::~LogicalDisk()
                0x00000000c000c8f2                LogicalDisk::~LogicalDisk()
                0x00000000c000c916                LogicalDisk::~LogicalDisk()
                0x00000000c000c940                LogicalDisk::open(int, int, void*)
                0x00000000c000c954                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000c98c                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000c9d2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c9d2                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ca88                LogicalDisk::assignDriveLetter()
                0x00000000c000cb3e                LogicalDisk::mount()
                0x00000000c000cb86                LogicalDisk::unmount()
                0x00000000c000cb96                LogicalDisk::eject()
                0x00000000c000cbaa                LogicalDisk::unassignDriveLetter()
                0x00000000c000cc00                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000cc6c                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000ccd8       0x86 hal/mouse.32
                0x00000000c000ccd8                Mouse::Mouse(char const*)
                0x00000000c000ccd8                Mouse::Mouse(char const*)
                0x00000000c000cd10                Mouse::~Mouse()
                0x00000000c000cd10                Mouse::~Mouse()
                0x00000000c000cd34                Mouse::~Mouse()
 .text          0x00000000c000cd5e      0x339 hal/partition.32
                0x00000000c000cd5e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ce06                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d097        0x1 
 .text          0x00000000c000d098       0x86 hal/serial.32
                0x00000000c000d098                Serial::Serial(char const*)
                0x00000000c000d098                Serial::Serial(char const*)
                0x00000000c000d0d0                Serial::~Serial()
                0x00000000c000d0d0                Serial::~Serial()
                0x00000000c000d0f4                Serial::~Serial()
 *fill*         0x00000000c000d11e        0x2 
 .text          0x00000000c000d120      0x234 hal/timer.32
                0x00000000c000d120                Timer::Timer(char const*)
                0x00000000c000d120                Timer::Timer(char const*)
                0x00000000c000d158                Timer::~Timer()
                0x00000000c000d158                Timer::~Timer()
                0x00000000c000d17c                Timer::~Timer()
                0x00000000c000d1a6                Timer::read()
                0x00000000c000d1b1                setupTimer(int)
                0x00000000c000d1ec                timerHandler(unsigned int)
 .text          0x00000000c000d354      0x3ce hal/vcache.32
                0x00000000c000d354                VCache::VCache(PhysicalDisk*)
                0x00000000c000d354                VCache::VCache(PhysicalDisk*)
                0x00000000c000d4bc                VCache::invalidateReadBuffer()
                0x00000000c000d4cc                VCache::writeWriteBuffer()
                0x00000000c000d518                VCache::~VCache()
                0x00000000c000d518                VCache::~VCache()
                0x00000000c000d56c                VCache::~VCache()
                0x00000000c000d594                VCache::write(unsigned long long, int, void*)
                0x00000000c000d6aa                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d722      0x4b3 hal/video.32
                0x00000000c000d722                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000d76e                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000d7de                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000d85c                Video::clearScreen(unsigned int)
                0x00000000c000d890                Video::putpixel(int, int, unsigned int)
                0x00000000c000d89e                Video::Video(char const*)
                0x00000000c000d89e                Video::Video(char const*)
                0x00000000c000d8d4                Video::~Video()
                0x00000000c000d8d4                Video::~Video()
                0x00000000c000d8f8                Video::~Video()
                0x00000000c000d922                Video::isMonochrome()
                0x00000000c000d92e                Video::getWidth()
                0x00000000c000d93a                Video::getHeight()
                0x00000000c000d946                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000da02                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000db6a                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000dbd5        0x3 
 .text          0x00000000c000dbd8     0x1307 hw/acpi.32
                0x00000000c000dbd8                ACPI::close(int, int, void*)
                0x00000000c000dc90                findRSDP()
                0x00000000c000dd20                loadACPITables(unsigned char*)
                0x00000000c000df84                findRSDT(unsigned char*)
                0x00000000c000e0d4                findDataTable(unsigned char*, char*)
                0x00000000c000e14c                scanMADT()
                0x00000000c000e620                ACPI::ACPI()
                0x00000000c000e620                ACPI::ACPI()
                0x00000000c000e674                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000e75c                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000e824                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000e82c                ACPI::detectPCI()
                0x00000000c000ea34                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ea88                ACPI::sleep()
                0x00000000c000eaa4                ACPI::open(int, int, void*)
 *fill*         0x00000000c000eedf        0x1 
 .text          0x00000000c000eee0      0xb95 hw/cpu.32
                0x00000000c000eee0                CPU::close(int, int, void*)
                0x00000000c000eee4                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000ef00                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000ef18                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ef8c                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f010                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f03e                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f06c                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f09a                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f0c8                CPU::CPU()
                0x00000000c000f0c8                CPU::CPU()
                0x00000000c000f156                CPU::displayFeatures()
                0x00000000c000f158                CPU::detectFeatures()
                0x00000000c000f81c                CPU::setupSMEP()
                0x00000000c000f828                CPU::setupUMIP()
                0x00000000c000f832                CPU::setupTSC()
                0x00000000c000f83c                CPU::setupLargePages()
                0x00000000c000f846                CPU::setupPAT()
                0x00000000c000f882                CPU::setupMTRR()
                0x00000000c000f884                CPU::setupGlobalPages()
                0x00000000c000f88e                CPU::allowUsermodeDataAccess()
                0x00000000c000f8a0                CPU::prohibitUsermodeDataAccess()
                0x00000000c000f8b2                CPU::setupSMAP()
                0x00000000c000f8c0                CPU::setupFeatures()
                0x00000000c000f98c                CPU::open(int, int, void*)
 .text          0x00000000c000fa75       0xd1 krnl/bootmsg.32
                0x00000000c000fa75                KeDisplaySplashScreen()
                0x00000000c000fae3                KeSetBootMessage(char const*)
 .text          0x00000000c000fb46      0x581 krnl/env.32
                0x00000000c000fb46                EnvVarContainer::getEnv(char const*)
                0x00000000c000fb84                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000fc46                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000fc48                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000fe2e                EnvVarContainer::__loadSystem()
                0x00000000c000fe48                EnvVarContainer::__loadUser()
                0x00000000c000fe4a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe4a                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe6c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe6c                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe9c                Krnl::getEnv(Process*, char const*)
                0x00000000c000ff01                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000ff1b                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000ff3a                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000ff4d                Krnl::deleteEnvSystem(char const*)
                0x00000000c000ff4e                Krnl::deleteEnvUser(char const*)
                0x00000000c000ff4f                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000ff50                Krnl::newProcessEnv(Process*)
                0x00000000c000ff72                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000ffbe                Krnl::loadSystemEnv()
                0x00000000c000ffec                Krnl::loadUserEnv()
                0x00000000c0010012                Krnl::flushEnv()
                0x00000000c0010013                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0010033                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00100c7       0x94 krnl/inlines.32
                0x00000000c00100c7                CPU::current()
                0x00000000c00100d3                operator new(unsigned long)
                0x00000000c00100d8                operator delete(void*)
                0x00000000c00100dd                disableIRQs()
                0x00000000c00100df                enableIRQs()
                0x00000000c00100e1                lockScheduler()
                0x00000000c00100e9                unlockScheduler()
                0x00000000c00100f8                lockStuff()
                0x00000000c0010106                unlockStuff()
                0x00000000c0010140                Virt::getAKernelVAS()
                0x00000000c0010146                __not_memcpy
 .text          0x00000000c001015b        0xc krnl/panic.32
                0x00000000c001015b                KePanic(char const*)
 .text          0x00000000c0010167      0x142 krnl/powctrl.32
                0x00000000c0010167                Krnl::powerThread(void*)
                0x00000000c0010195                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c00101ab                Krnl::userIOReceived()
                0x00000000c00101b6                Krnl::handlePowerButton()
                0x00000000c00101eb                Krnl::handleSleepButton()
                0x00000000c0010220                Krnl::setupPowerManager()
 *fill*         0x00000000c00102a9        0x3 
 .text          0x00000000c00102ac      0x190 krnl/resolve.32
                0x00000000c00102ac                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c001043c      0x2e5 krnl/signal.32
                0x00000000c001043c                KiSigKill(int)
                0x00000000c0010468                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010469                KiDefaultSignalHandlerPause(int)
                0x00000000c0010495                KiDefaultSignalHandlerResume(int)
                0x00000000c00104c1                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c00104c6                KeInitSignals()
                0x00000000c0010533                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010569                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c00105e6                KeCheckSignal(SigHandlerBlock*)
                0x00000000c00106d1                KiCheckSignalZ
                0x00000000c00106e6                KeCompleteSignal(SigHandlerBlock*, int)
 .text          0x00000000c0010721      0xcfe krnl/syscalls.32
                0x00000000c0010721                SysSeekDir(regs*)
                0x00000000c0010726                SysTellDir(regs*)
                0x00000000c001072b                SysVerify(regs*)
                0x00000000c0010735                SysGetArgc(regs*)
                0x00000000c0010745                SysTTYName(regs*)
                0x00000000c001074d                SysFormatDisk(regs*)
                0x00000000c00107ba                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010804                SysGetDiskVolumeLabel(regs*)
                0x00000000c0010859                SysShutdown(regs*)
                0x00000000c00108b7                SysRealpath(regs*)
                0x00000000c00108fa                SysReadDir(regs*)
                0x00000000c001097a                SysIsATTY(regs*)
                0x00000000c00109d6                SysSeek(regs*)
                0x00000000c0010a2f                SysTell(regs*)
                0x00000000c0010a9e                SysSize(regs*)
                0x00000000c0010b13                SysSizeFromFilename(regs*)
                0x00000000c0010bc6                SysClose(regs*)
                0x00000000c0010c26                SysOpenDir(regs*)
                0x00000000c0010d37                SysCloseDir(regs*)
                0x00000000c0010d8b                SysMakeDir(regs*)
                0x00000000c0010dfd                SysWait(regs*)
                0x00000000c0010e1a                SysNotImpl(regs*)
                0x00000000c0010e35                SysPanic(regs*)
                0x00000000c0010e50                SysRmdir(regs*)
                0x00000000c0010eb7                SysUnlink(regs*)
                0x00000000c0010f1e                SysGetArgv(regs*)
                0x00000000c0010f6b                SysUSleep(regs*)
                0x00000000c0010f94                SysSpawn(regs*)
                0x00000000c0010ffd                SysGetEnv(regs*)
                0x00000000c00110ac                SysSetFatAttrib(regs*)
                0x00000000c0011123                SysPipe(regs*)
                0x00000000c0011168                SysGetUnixTime(regs*)
                0x00000000c001117c                string_ends_with(char const*, char const*)
                0x00000000c00111c6                SysOpen(regs*)
                0x00000000c00113cd                KeSystemCall(regs*, void*)
 .text          0x00000000c001141f      0x50e reg/registry.32
                0x00000000c001141f                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0011577                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00116cc                Reg::getLine(char*, char*, char*)
                0x00000000c0011703                Reg::readInt(char*, char*, int*)
                0x00000000c00117ee                Reg::readString(char*, char*, char*, int)
                0x00000000c001186f                Reg::readBool(char*, char*, bool*)
                0x00000000c0011894                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00118c0                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00118ec                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001192d       0x36 sys/eject.32
                0x00000000c001192d                SysEject(regs*)
 .text          0x00000000c0011963       0x18 sys/exit.32
                0x00000000c0011963                SysExit(regs*)
 .text          0x00000000c001197b       0x1f sys/getcwd.32
                0x00000000c001197b                SysGetCwd(regs*)
 .text          0x00000000c001199a        0xc sys/getpid.32
                0x00000000c001199a                SysGetPID(regs*)
 .text          0x00000000c00119a6       0x1a sys/getramdata.32
                0x00000000c00119a6                SysGetRAMData(regs*)
 .text          0x00000000c00119c0       0x82 sys/getvgaptr.32
                0x00000000c00119c0                SysGetVGAPtr(regs*)
 .text          0x00000000c0011a42       0xa8 sys/loaddll.32
                0x00000000c0011a42                SysLoadDLL(regs*)
 .text          0x00000000c0011aea       0x68 sys/read.32
                0x00000000c0011aea                SysRead(regs*)
 .text          0x00000000c0011b52       0x29 sys/registersignal.32
                0x00000000c0011b52                SysRegisterSignal(regs*)
 .text          0x00000000c0011b7b       0x67 sys/sbrk.32
                0x00000000c0011b7b                SysSbrk(regs*)
 .text          0x00000000c0011be2       0x1c sys/setcwd.32
                0x00000000c0011be2                SysSetCwd(regs*)
 .text          0x00000000c0011bfe       0x95 sys/settime.32
                0x00000000c0011bfe                SysSetTime(regs*)
 .text          0x00000000c0011c93       0x4a sys/timezone.32
                0x00000000c0011c93                SysTimezone(regs*)
 .text          0x00000000c0011cdd       0x68 sys/write.32
                0x00000000c0011cdd                SysWrite(regs*)
 .text          0x00000000c0011d45       0x62 sys/wsbe.32
                0x00000000c0011d45                SysWsbe(regs*)
 .text          0x00000000c0011da7       0x25 sys/yield.32
                0x00000000c0011da7                SysYield(regs*)
 .text          0x00000000c0011dcc     0x11e5 thr/elf.32
                0x00000000c0011dcc                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0012058                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001226e                Thr::runtimeReferenceHelper()
                0x00000000c0012281                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00122d0                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001258e                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012cc4                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012cf6                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012d2d                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012d47                Thr::loadDLL(char const*, bool)
                0x00000000c0012f78                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0012fb1        0x3 
 .text          0x00000000c0012fb4     0x12fd thr/prcssthr.32
                0x00000000c0012fb4                userModeEntryPoint(void*)
                0x00000000c0012fdc                changeTSS
                0x00000000c001300c                switchToThread(ThreadControlBlock*)
                0x00000000c00130c0                Process::addArgs(char**)
                0x00000000c0013120                Process::Process(char const*, Process*, char**)
                0x00000000c0013120                Process::Process(char const*, Process*, char**)
                0x00000000c001332c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001332c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013504                taskStartupFunction
                0x00000000c0013510                Semaphore::Semaphore(int)
                0x00000000c0013510                Semaphore::Semaphore(int)
                0x00000000c0013540                Mutex::Mutex()
                0x00000000c0013540                Mutex::Mutex()
                0x00000000c0013554                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001364c                Process::createUserThread()
                0x00000000c001366c                setupMultitasking(void (*)())
                0x00000000c0013774                schedule()
                0x00000000c0013804                Semaphore::tryAcquire()
                0x00000000c00138d0                Semaphore::assertLocked(char const*)
                0x00000000c0013948                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0013970                blockTask(TaskState)
                0x00000000c00139a0                waitTask(int, int*, int)
                0x00000000c00139e4                milliTenthSleepUntil(unsigned int)
                0x00000000c0013a74                milliTenthSleep(unsigned int)
                0x00000000c0013a84                sleep(unsigned int)
                0x00000000c0013aa0                Semaphore::acquire()
                0x00000000c0013b5c                taskReturned
                0x00000000c0013b98                Thr::processFromPID(int)
                0x00000000c0013c38                unblockTask(ThreadControlBlock*)
                0x00000000c0013cdc                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0013fa8                cleanerTaskFunction(void*)
                0x00000000c0014098                terminateTask(int)
                0x00000000c0014164                Thr::terminateFromIRQ(int)
                0x00000000c0014174                Semaphore::release()
 .text          0x00000000c00142b1      0xb93 vm86/vm8086.32
                0x00000000c00142b1                Vm::inbv(unsigned short)
                0x00000000c00142c4                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00142fa                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001430a                Vm::getSegment(unsigned int)
                0x00000000c0014312                Vm::getOffset(unsigned int)
                0x00000000c0014317                Vm::mainloop2()
                0x00000000c0014351                Vm::mainVm8086Loop(void*)
                0x00000000c0014361                Vm::mainloop3(unsigned long)
                0x00000000c0014387                Vm::initialise8086()
                0x00000000c00143ca                Vm::finish8086()
                0x00000000c001442b                Vm::getOutput8086(unsigned char*)
                0x00000000c0014450                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014509                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014671                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00146fb                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001470c                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001471e                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001472f                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0014744                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001475a                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001476f                Vm::faultHandler(regs*)
 .text          0x00000000c0014e44      0xa53 arch/i386/hal.32
                0x00000000c0014e44                noCopro(unsigned long)
                0x00000000c0014e45                nmiHandler(regs*, void*)
                0x00000000c0014e5e                doubleFault(regs*, void*)
                0x00000000c0014e77                displayDebugInfo(regs*)
                0x00000000c0015198                HalSystemIdle()
                0x00000000c001520e                displayProgramFault(char const*)
                0x00000000c001525a                gpFault(regs*, void*)
                0x00000000c00152bf                pgFault(regs*, void*)
                0x00000000c0015345                otherISRHandler(regs*, void*)
                0x00000000c0015379                opcodeFault(regs*, void*)
                0x00000000c00153f9                i386SaveCoprocessor(void*)
                0x00000000c001540d                i386LoadCoprocessor(void*)
                0x00000000c0015421                x87EmulHandler(regs*, void*)
                0x00000000c00154be                HalInitialiseCoprocessor()
                0x00000000c001556c                HalPanic(char const*)
                0x00000000c0015665                HalQueryPerformanceCounter()
                0x00000000c0015680                HalInitialise()
                0x00000000c0015826                HalMakeBeep(int)
                0x00000000c0015860                HalGetRand()
                0x00000000c0015863                HalEndOfInterrupt(int)
                0x00000000c0015894                HalRestart()
                0x00000000c0015895                HalShutdown()
                0x00000000c0015896                HalSleep()
 *fill*         0x00000000c0015897        0x1 
 .text          0x00000000c0015898      0x2f4 arch/i386/pic.32
                0x00000000c0015898                picIoWait()
                0x00000000c00158a0                picDisable()
                0x00000000c00158d4                picGetIRQReg(int)
                0x00000000c0015958                picOpen()
                0x00000000c0015ae8                picEOI(int)
 .text          0x00000000c0015b8c      0x64d arch/i386/rtc.32
                0x00000000c0015b8c                RTC::open(int, int, void*)
                0x00000000c0015b90                RTC::close(int, int, void*)
                0x00000000c0015b94                RTC::timeInSecondsUTC()
                0x00000000c0015ba6                RTC::timeInDatetimeUTC()
                0x00000000c0015bcc                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015c0a                RTC::~RTC()
                0x00000000c0015c0a                RTC::~RTC()
                0x00000000c0015c2e                RTC::~RTC()
                0x00000000c0015c58                RTC::get_update_in_progress_flag()
                0x00000000c0015c70                RTC::completeRTCRefresh()
                0x00000000c0015f28                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00160db                rtcIRQHandler(regs*, void*)
                0x00000000c0016120                RTC::RTC()
                0x00000000c0016120                RTC::RTC()
 *fill*         0x00000000c00161d9        0x3 
 .text          0x00000000c00161dc      0x203 arch/i386/vga.32
                0x00000000c00161dc                HalConsoleScroll(int, int)
                0x00000000c00162e4                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0016350                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c00163df        0x1 
 .text          0x00000000c00163e0     0x13e7 fs/fat/vfslink.32
                0x00000000c00163e0                FAT::getName()
                0x00000000c00163e8                FAT::tell(void*, unsigned long long*)
                0x00000000c0016424                FAT::stat(void*, unsigned long long*)
                0x00000000c0016460                FAT::~FAT()
                0x00000000c0016460                FAT::~FAT()
                0x00000000c0016484                FAT::~FAT()
                0x00000000c00164ac                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0016550                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0016614                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00167e8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016a00                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016bc0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016d2c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016d8c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016dec                FAT::close(void*)
                0x00000000c0016e40                FAT::closeDir(void*)
                0x00000000c0016e94                FAT::seek(void*, unsigned long long)
                0x00000000c0016eec                fatWrapperReadDisk
                0x00000000c0016f30                fatWrapperWriteDisk
                0x00000000c0016f74                fatWrapperIoctl
                0x00000000c0017090                FAT::FAT()
                0x00000000c0017090                FAT::FAT()
                0x00000000c00170e4                FAT::fixFilepath(char*)
                0x00000000c0017120                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0017258                FAT::openDir(char const*, void**)
                0x00000000c0017308                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017400                FAT::unlink(char const*)
                0x00000000c0017480                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001760c                FAT::rename(char const*, char const*)
                0x00000000c00176d8                FAT::mkdir(char const*)
                0x00000000c0017758                FAT::exists(char const*)
 *fill*         0x00000000c00177c7        0x1 
 .text          0x00000000c00177c8       0xc6 fs/iso9660/helper.32
                0x00000000c00177c8                isoReadDiscSectorHelper
                0x00000000c0017824                iso_kprintf
                0x00000000c0017844                iso_kprintfd
 .text          0x00000000c001788e      0x586 fs/iso9660/vfslink.32
                0x00000000c001788e                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017894                ISO9660::getName()
                0x00000000c001789a                ISO9660::closeDir(void*)
                0x00000000c00178a4                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00178aa                ISO9660::unlink(char const*)
                0x00000000c00178b0                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c00178b6                ISO9660::rename(char const*, char const*)
                0x00000000c00178bc                ISO9660::mkdir(char const*)
                0x00000000c00178c2                ISO9660::~ISO9660()
                0x00000000c00178c2                ISO9660::~ISO9660()
                0x00000000c00178e6                ISO9660::~ISO9660()
                0x00000000c001790e                ISO9660::exists(char const*)
                0x00000000c0017922                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00179c2                ISO9660::openDir(char const*, void**)
                0x00000000c0017a52                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017a92                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017aca                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017b00                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017b3a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017c0c                ISO9660::close(void*)
                0x00000000c0017c32                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017cff                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017d7a                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017dec                ISO9660::ISO9660()
                0x00000000c0017dec                ISO9660::ISO9660()
 .text          0x00000000c0017e14      0x26c hal/sound/sndcard.32
                0x00000000c0017e14                SoundCard::beginPlayback()
                0x00000000c0017e22                SoundCard::stopPlayback()
                0x00000000c0017e30                SoundCard::SoundCard(char const*)
                0x00000000c0017e30                SoundCard::SoundCard(char const*)
                0x00000000c0017ece                SoundCard::~SoundCard()
                0x00000000c0017ece                SoundCard::~SoundCard()
                0x00000000c0017ef2                SoundCard::~SoundCard()
                0x00000000c0017f1c                SoundCard::configureRates(int, int, int)
                0x00000000c0017f4c                SoundCard::getSamples16(int, short*)
                0x00000000c0017fa8                SoundCard::getSamples32(int, int*)
                0x00000000c001802e                SoundCard::addChannel(SoundPort*)
                0x00000000c001806c                SoundCard::removeChannel(int)
 .text          0x00000000c0018080      0x377 hal/sound/sndport.32
                0x00000000c0018080                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018080                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001810c                SoundPort::~SoundPort()
                0x00000000c001810c                SoundPort::~SoundPort()
                0x00000000c0018140                SoundPort::unpause()
                0x00000000c001814c                SoundPort::pause()
                0x00000000c0018158                SoundPort::getBufferUsed()
                0x00000000c0018160                SoundPort::getBufferSize()
                0x00000000c0018168                SoundPort::buffer16(short*, int)
                0x00000000c00181f4                SoundPort::buffer32(int*, int)
                0x00000000c001827c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0018340                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c00183f7        0x0 hw/bus/isa.32
 *fill*         0x00000000c00183f7        0x1 
 .text          0x00000000c00183f8      0xb49 hw/bus/pci.32
                0x00000000c00183f8                PCI::open(int, int, void*)
                0x00000000c0018416                PCI::close(int, int, void*)
                0x00000000c001841a                PCI::PCI()
                0x00000000c001841a                PCI::PCI()
                0x00000000c00184b4                PCI::readBAR8(unsigned int, int)
                0x00000000c00184d0                PCI::readBAR16(unsigned int, int)
                0x00000000c00184ee                PCI::readBAR32(unsigned int, int)
                0x00000000c001850a                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001852a                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001854c                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001856c                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00185da                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018682                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c00186a6                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c00186ce                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c0018718                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0018740                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018764                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0018788                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c00187b0                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018814                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c00188fc                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018b76                PCI::checkBus(unsigned char)
                0x00000000c0018b9c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018d0e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018e82                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018eee                PCI::detect()
 *fill*         0x00000000c0018f41        0x1 
 .text          0x00000000c0018f42      0xb5a hw/diskctrl/ide.32
                0x00000000c0018f42                IDE::close(int, int, void*)
                0x00000000c0018f46                IDE::IDE()
                0x00000000c0018f46                IDE::IDE()
                0x00000000c0018f7a                IDE::prepareInterrupt(unsigned char)
                0x00000000c0018f8c                selectDrive(unsigned char, unsigned char)
                0x00000000c0018f8e                IDE::getBase(unsigned char)
                0x00000000c0018fa0                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0019060                IDE::read(unsigned char, unsigned char)
                0x00000000c001910e                IDE::waitInterrupt(unsigned char)
                0x00000000c0019176                ideChannel0IRQHandler(regs*, void*)
                0x00000000c0019192                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00191ae                IDE::enableIRQs(unsigned char, bool)
                0x00000000c00191f4                IDE::open(int, int, void*)
                0x00000000c0019602                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c00196ce                IDE::detect()
                0x00000000c001998e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019a3e                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019a9c      0x32a hw/diskctrl/satabus.32
                0x00000000c0019a9c                SATABus::close(int, int, void*)
                0x00000000c0019aa0                SATABus::detect()
                0x00000000c0019aa2                SATABus::SATABus()
                0x00000000c0019aa2                SATABus::SATABus()
                0x00000000c0019b28                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019b5a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019ba2                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019bc2                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019bec                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019cfc                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019da6                SATABus::open(int, int, void*)
 .text          0x00000000c0019dc6      0x5f4 hw/diskphys/ata.32
                0x00000000c0019dc6                ATA::close(int, int, void*)
                0x00000000c0019dea                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019dec                ATA::ATA()
                0x00000000c0019dec                ATA::ATA()
                0x00000000c0019e1a                ATA::flush(bool)
                0x00000000c0019e64                ATA::readyForCommand()
                0x00000000c0019eb0                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a22c                ATA::read(unsigned long long, int, void*)
                0x00000000c001a278                ATA::write(unsigned long long, int, void*)
                0x00000000c001a2c4                ATA::detectCHS()
                0x00000000c001a2ee                ATA::open(int, int, void*)
 .text          0x00000000c001a3ba      0x60e hw/diskphys/atapi.32
                0x00000000c001a3ba                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a3c0                ATAPI::close(int, int, void*)
                0x00000000c001a3e4                ATAPI::ATAPI()
                0x00000000c001a3e4                ATAPI::ATAPI()
                0x00000000c001a412                ATAPI::readyForCommand()
                0x00000000c001a464                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a724                ATAPI::diskRemoved()
                0x00000000c001a75e                ATAPI::eject()
                0x00000000c001a7a6                ATAPI::diskInserted()
                0x00000000c001a7b2                ATAPI::detectMedia()
                0x00000000c001a86e                ATAPI::open(int, int, void*)
                0x00000000c001a94e                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001a9c8      0x402 hw/diskphys/sata.32
                0x00000000c001a9c8                SATA::close(int, int, void*)
                0x00000000c001a9ec                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001a9ee                SATA::open(int, int, void*)
                0x00000000c001aa98                SATA::SATA()
                0x00000000c001aa98                SATA::SATA()
                0x00000000c001aac6                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ad12                SATA::read(unsigned long long, int, void*)
                0x00000000c001ad5e                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001adca      0x5af hw/diskphys/satapi.32
                0x00000000c001adca                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001add0                SATAPI::close(int, int, void*)
                0x00000000c001adf4                SATAPI::SATAPI()
                0x00000000c001adf4                SATAPI::SATAPI()
                0x00000000c001ae22                SATAPI::diskRemoved()
                0x00000000c001ae24                SATAPI::diskInserted()
                0x00000000c001ae40                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b120                SATAPI::eject()
                0x00000000c001b15c                SATAPI::detectMedia()
                0x00000000c001b182                SATAPI::open(int, int, void*)
                0x00000000c001b282                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001b379        0x1 
 .text          0x00000000c001b37a      0x455 hw/intctrl/apic.32
                0x00000000c001b37a                IOAPIC::close(int, int, void*)
                0x00000000c001b380                apicGetBase()
                0x00000000c001b3c2                IOAPIC::IOAPIC()
                0x00000000c001b3c2                IOAPIC::IOAPIC()
                0x00000000c001b3ea                apicOpen()
                0x00000000c001b550                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b582                IOAPIC::read(int)
                0x00000000c001b5aa                IOAPIC::open(int, int, void*)
                0x00000000c001b69e                IOAPIC::write(int, int)
                0x00000000c001b6ca                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b7cf        0x1 
 .text          0x00000000c001b7d0       0xf0 hw/timer/apictimer.32
                0x00000000c001b7d0                APICTimer::close(int, int, void*)
                0x00000000c001b7d8                apicTimerHandler(regs*, void*)
                0x00000000c001b800                APICTimer::open(int, int, void*)
                0x00000000c001b870                APICTimer::write(int)
                0x00000000c001b898                APICTimer::APICTimer()
                0x00000000c001b898                APICTimer::APICTimer()
 .text          0x00000000c001b8c0      0x1aa hw/timer/pit.32
                0x00000000c001b8c0                PIT::write(int)
                0x00000000c001b944                pitHandler(regs*, void*)
                0x00000000c001b968                PIT::open(int, int, void*)
                0x00000000c001b9b8                PIT::close(int, int, void*)
                0x00000000c001b9e8                PIT::PIT()
                0x00000000c001b9e8                PIT::PIT()
 *fill*         0x00000000c001ba6a        0x6 
 .text          0x00000000c001ba70       0x83 arch/i386/avx.32
                0x00000000c001ba70                avxDetect
                0x00000000c001ba9a                avxSave
                0x00000000c001baab                avxLoad
                0x00000000c001babc                avxInit
                0x00000000c001bade                avxClose
                0x00000000c001badf                wouldSheSayYes
 *fill*         0x00000000c001baf3        0xd 
 .text          0x00000000c001bb00      0x231 arch/i386/interrupt.32
                0x00000000c001bb00                isr0
                0x00000000c001bb10                isr1
                0x00000000c001bb1a                isr2
                0x00000000c001bb24                isr3
                0x00000000c001bb2e                isr4
                0x00000000c001bb38                isr5
                0x00000000c001bb42                isr6
                0x00000000c001bb4c                isr7
                0x00000000c001bb56                isr8
                0x00000000c001bb5e                isr9
                0x00000000c001bb68                isr10
                0x00000000c001bb70                isr11
                0x00000000c001bb78                isr12
                0x00000000c001bb80                isr13
                0x00000000c001bb88                isr14
                0x00000000c001bb90                isr15
                0x00000000c001bb9a                isr16
                0x00000000c001bba4                isr17
                0x00000000c001bbae                isr18
                0x00000000c001bbb8                irq3
                0x00000000c001bbc2                irq4
                0x00000000c001bbcc                irq5
                0x00000000c001bbd6                irq6
                0x00000000c001bbe0                irq7
                0x00000000c001bbea                irq8
                0x00000000c001bbf4                irq9
                0x00000000c001bbfe                irq10
                0x00000000c001bc08                irq11
                0x00000000c001bc12                irq12
                0x00000000c001bc1c                irq13
                0x00000000c001bc26                irq14
                0x00000000c001bc30                irq15
                0x00000000c001bc3a                irq1
                0x00000000c001bc41                irq2
                0x00000000c001bc48                isr96
                0x00000000c001bc4f                irq0
                0x00000000c001bc54                int_common_stub
                0x00000000c001bc86                syscall_common_stub
                0x00000000c001bce1                irq16
                0x00000000c001bceb                irq17
                0x00000000c001bcf5                irq18
                0x00000000c001bcff                irq19
                0x00000000c001bd09                irq20
                0x00000000c001bd13                irq21
                0x00000000c001bd1d                irq22
                0x00000000c001bd27                irq23
 *fill*         0x00000000c001bd31        0xf 
 .text          0x00000000c001bd40       0x10 arch/i386/rdrand.32
                0x00000000c001bd40                i386GetRDRAND
 .text          0x00000000c001bd50       0x39 arch/i386/sse.32
                0x00000000c001bd50                absolutelyNoChanceInHell
                0x00000000c001bd50                sseDetect
                0x00000000c001bd68                sseSave
                0x00000000c001bd70                sseLoad
                0x00000000c001bd78                sseInit
                0x00000000c001bd88                sseClose
 *fill*         0x00000000c001bd89        0x7 
 .text          0x00000000c001bd90       0x49 arch/i386/x87.32
                0x00000000c001bd96                x87Detect
                0x00000000c001bdb1                x87Save
                0x00000000c001bdb8                x87Load
                0x00000000c001bdbf                x87Init
                0x00000000c001bdd8                x87Close
 *fill*         0x00000000c001bdd9        0x3 
 .text          0x00000000c001bddc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001be01        0x0 crtn.32
 *fill*         0x00000000c001be01        0x3 
 .text          0x00000000c001be04      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001be04                __divdi3
 *fill*         0x00000000c001bf4f        0x1 
 .text          0x00000000c001bf50      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001bf50                __moddi3
 *fill*         0x00000000c001c0ce        0x2 
 .text          0x00000000c001c0d0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c0d0                __udivdi3
 *fill*         0x00000000c001c1cf        0x1 
 .text          0x00000000c001c1d0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c1d0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c2f0        0x0
 .iplt          0x00000000c001c2f0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c2ea        0xf
 .init          0x00000000c001c2ea        0x3 crti.32
                0x00000000c001c2ea                _init
 .init          0x00000000c001c2ed        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c2f2        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c2f7        0x2 crtn.32

.fini           0x00000000c001c2f9        0xa
 .fini          0x00000000c001c2f9        0x3 crti.32
                0x00000000c001c2f9                _fini
 .fini          0x00000000c001c2fc        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c301        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c304       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c304       0x23 core/computer.32
                0x00000000c001c304                Computer::~Computer()
                0x00000000c001c304                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c328       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c328       0x2a core/computer.32
                0x00000000c001c328                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c352       0x21
 .text._Z10idleCommonv
                0x00000000c001c352       0x21 core/idle.32
                0x00000000c001c352                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c374        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c374        0x2 core/unixfile.32
                0x00000000c001c374                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c374                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c376       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c376       0x42 core/unixfile.32
                0x00000000c001c376                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c376                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c3b8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c3b8       0xd3 core/unixfile.32
                0x00000000c001c3b8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c48c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c48c        0x7 core/unixfile.32
                0x00000000c001c48c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c494       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c494       0xa1 core/unixfile.32
                0x00000000c001c494                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c536        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c536        0x8 core/unixfile.32
                0x00000000c001c536                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c53e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c53e       0x1a hal/device.32
                0x00000000c001c53e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c53e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c558       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c558       0x2a hal/device.32
                0x00000000c001c558                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c582       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c582       0xdc hal/device.32
                0x00000000c001c582                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c65e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c65e       0x42 hal/device.32
                0x00000000c001c65e                LinkedList<Device>::LinkedList()
                0x00000000c001c65e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c6a0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c6a0       0x1c hal/timer.32
                0x00000000c001c6a0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c6bc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c6bc        0x7 hal/timer.32
                0x00000000c001c6bc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c6c4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c6c4       0xb8 hal/timer.32
                0x00000000c001c6c4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c77c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c77c       0xda hal/timer.32
                0x00000000c001c77c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c858       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c858       0x23 hw/acpi.32
                0x00000000c001c858                ACPI::~ACPI()
                0x00000000c001c858                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c87c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c87c       0x2a hw/acpi.32
                0x00000000c001c87c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c8a8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c8a8        0x2 hw/acpi.32
                0x00000000c001c8a8                LinkedList<Device>::~LinkedList()
                0x00000000c001c8a8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c8ac       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c8ac       0x1c hw/acpi.32
                0x00000000c001c8ac                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c8c8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c8c8        0x7 hw/acpi.32
                0x00000000c001c8c8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c8d0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c8d0       0xb8 hw/acpi.32
                0x00000000c001c8d0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001c988       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001c988       0x23 hw/cpu.32
                0x00000000c001c988                CPU::~CPU()
                0x00000000c001c988                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001c9ac       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001c9ac       0x2a hw/cpu.32
                0x00000000c001c9ac                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c9d8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c9d8        0x2 thr/prcssthr.32
                0x00000000c001c9d8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001c9d8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c9dc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c9dc       0x49 thr/prcssthr.32
                0x00000000c001c9dc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001c9dc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ca28       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ca28       0x42 thr/prcssthr.32
                0x00000000c001ca28                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ca28                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ca6c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ca6c        0x8 thr/prcssthr.32
                0x00000000c001ca6c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001ca74       0x23
 .text._ZN3PCID2Ev
                0x00000000c001ca74       0x23 hw/bus/pci.32
                0x00000000c001ca74                PCI::~PCI()
                0x00000000c001ca74                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001ca98       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001ca98       0x2a hw/bus/pci.32
                0x00000000c001ca98                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cac2       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cac2       0x23 hw/diskctrl/ide.32
                0x00000000c001cac2                IDE::~IDE()
                0x00000000c001cac2                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cae6       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cae6       0x2a hw/diskctrl/ide.32
                0x00000000c001cae6                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cb10       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cb10       0x23 hw/diskctrl/satabus.32
                0x00000000c001cb10                SATABus::~SATABus()
                0x00000000c001cb10                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cb34       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cb34       0x2a hw/diskctrl/satabus.32
                0x00000000c001cb34                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cb5e       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cb5e       0x23 hw/diskphys/ata.32
                0x00000000c001cb5e                ATA::~ATA()
                0x00000000c001cb5e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001cb82       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001cb82       0x2a hw/diskphys/ata.32
                0x00000000c001cb82                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cbac       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cbac       0x23 hw/diskphys/atapi.32
                0x00000000c001cbac                ATAPI::~ATAPI()
                0x00000000c001cbac                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001cbd0       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001cbd0       0x2a hw/diskphys/atapi.32
                0x00000000c001cbd0                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cbfa       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cbfa       0x23 hw/diskphys/sata.32
                0x00000000c001cbfa                SATA::~SATA()
                0x00000000c001cbfa                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cc1e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cc1e       0x2a hw/diskphys/sata.32
                0x00000000c001cc1e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cc48       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cc48       0x23 hw/diskphys/satapi.32
                0x00000000c001cc48                SATAPI::~SATAPI()
                0x00000000c001cc48                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001cc6c       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001cc6c       0x2a hw/diskphys/satapi.32
                0x00000000c001cc6c                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cc96       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cc96       0x23 hw/intctrl/apic.32
                0x00000000c001cc96                IOAPIC::~IOAPIC()
                0x00000000c001cc96                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001ccba       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001ccba       0x2a hw/intctrl/apic.32
                0x00000000c001ccba                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001cce4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001cce4       0x23 hw/timer/apictimer.32
                0x00000000c001cce4                APICTimer::~APICTimer()
                0x00000000c001cce4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001cd08       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001cd08       0x2a hw/timer/apictimer.32
                0x00000000c001cd08                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001cd34       0x23
 .text._ZN3PITD2Ev
                0x00000000c001cd34       0x23 hw/timer/pit.32
                0x00000000c001cd34                PIT::~PIT()
                0x00000000c001cd34                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001cd58       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001cd58       0x2a hw/timer/pit.32
                0x00000000c001cd58                PIT::~PIT()

.rodata         0x00000000c001cd82     0x29b2
                0x00000000c001cd82                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001cd82        0x2 
 .ctors         0x00000000c001cd84        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001cd88        0x4 core/unixfile.32
 .ctors         0x00000000c001cd8c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001cd90        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cd94                end_ctors = .
                0x00000000c001cd94                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001cd94        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001cd98        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cd98                __DTOR_END__
                0x00000000c001cd9c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001cd9c        0x4 
 .rodata        0x00000000c001cda0      0x101 acpica/utclib.32
                0x00000000c001cda0                AcpiGbl_Ctypes
 *fill*         0x00000000c001cea1        0x3 
 .rodata        0x00000000c001cea4       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001cebc       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001cf06       0x1a 
 .rodata        0x00000000c001cf20       0xed fs/fat/ff.32
 *fill*         0x00000000c001d00d       0x13 
 .rodata        0x00000000c001d020      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d420       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d431      0x115 core/computer.32
 *fill*         0x00000000c001d546        0x2 
 .rodata.str1.4
                0x00000000c001d548       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d5b0       0x2c core/computer.32
                0x00000000c001d5b0                vtable for Computer
 .rodata.str1.4
                0x00000000c001d5dc       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d60c        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d618       0x17 core/main.32
 *fill*         0x00000000c001d62f        0x1 
 .rodata.str1.4
                0x00000000c001d630       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d6d5       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d72d       0x39 core/pipe.32
 *fill*         0x00000000c001d766        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d768       0x1c core/pipe.32
                0x00000000c001d768                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d784       0x75 core/terminal.32
 *fill*         0x00000000c001d7f9        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d7fc       0x1c core/terminal.32
                0x00000000c001d7fc                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d818       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d83a       0x15 core/unixfile.32
 *fill*         0x00000000c001d84f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d850       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d89b        0x8 core/unixfile.32
 *fill*         0x00000000c001d8a3        0x1 
 .rodata.str1.4
                0x00000000c001d8a4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001d8c4       0x1c core/unixfile.32
                0x00000000c001d8c4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001d8e0       0x1c core/unixfile.32
                0x00000000c001d8e0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001d8fc      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001da63      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001db6a       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001db9d       0x11 dbg/kconsole.32
 *fill*         0x00000000c001db9d        0x3 
 .rodata        0x00000000c001dba0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001dcf0       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001dcf0       0x68 fs/vfs.32
                0x00000000c001dcf0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001dd58       0x1c fs/vfs.32
                0x00000000c001dd58                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001dd74       0x1c fs/vfs.32
                0x00000000c001dd74                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001dd90       0x2c hal/bus.32
                0x00000000c001dd90                vtable for Bus
 .rodata.str1.1
                0x00000000c001ddbc       0x1e hal/clock.32
 *fill*         0x00000000c001ddda        0x2 
 .rodata._ZTV5Clock
                0x00000000c001dddc       0x3c hal/clock.32
                0x00000000c001dddc                vtable for Clock
 *fill*         0x00000000c001de18        0x8 
 .rodata        0x00000000c001de20       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001de50       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001dea8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001dea8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001dea8       0x2c hal/device.32
                0x00000000c001dea8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001ded4       0x2c hal/device.32
                0x00000000c001ded4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001df00       0x2c hal/diskctrl.32
                0x00000000c001df00                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001df2c       0x38 hal/diskphys.32
                0x00000000c001df2c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001df64       0x3e hal/intctrl.32
 *fill*         0x00000000c001dfa2        0x2 
 .rodata.str1.4
                0x00000000c001dfa4       0x5d hal/intctrl.32
 .rodata        0x00000000c001e001       0x63 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e064       0x34 hal/keybrd.32
                0x00000000c001e064                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e098       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e0dc       0x2c hal/logidisk.32
                0x00000000c001e0dc                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e108       0x2c hal/mouse.32
                0x00000000c001e108                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e134        0xb hal/partition.32
 *fill*         0x00000000c001e13f        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e140       0x44 hal/serial.32
                0x00000000c001e140                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e184       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e184        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e184       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e184       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e184       0x30 hal/timer.32
                0x00000000c001e184                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e1b4       0x10 hal/vcache.32
                0x00000000c001e1b4                vtable for VCache
 .rodata.str1.1
                0x00000000c001e1c4       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e22c       0x48 hal/video.32
                0x00000000c001e22c                vtable for Video
 .rodata.str1.4
                0x00000000c001e274       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e30f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e44b       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e44b        0x8 hw/acpi.32
 *fill*         0x00000000c001e44b        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e44c       0x2c hw/acpi.32
                0x00000000c001e44c                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e478      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e5e5        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e5e8       0x2c hw/cpu.32
                0x00000000c001e5e8                vtable for CPU
 .rodata.str1.1
                0x00000000c001e614       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e650       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c001e6e1      0x103 krnl/signal.32
 .rodata.str1.4
                0x00000000c001e7e4       0x26 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c001e80a       0x97 krnl/syscalls.32
                                         0xa7 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e8a1       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e8e6        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c001e8f0        0xc sys/sbrk.32
 .rodata.str1.1
                0x00000000c001e8fc       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c001e950       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c001e97c      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001eb48       0x57 thr/prcssthr.32
 *fill*         0x00000000c001eb9f        0x1 
 .rodata.str1.4
                0x00000000c001eba0      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001ecac       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001ecac       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001ecac       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001ecac        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001ecac       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001ed4c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001ed7c      0x182 arch/i386/hal.32
                                        0x191 (size before relaxing)
 *fill*         0x00000000c001eefe        0x2 
 .rodata.str1.4
                0x00000000c001ef00       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001ef73       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001ef88       0x3c arch/i386/rtc.32
                0x00000000c001ef88                vtable for RTC
 .rodata.str1.1
                0x00000000c001efc4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001f005        0x3 
 .rodata._ZTV3FAT
                0x00000000c001f008       0x68 fs/fat/vfslink.32
                0x00000000c001f008                vtable for FAT
 .rodata.str1.1
                0x00000000c001f070        0x3 fs/iso9660/helper.32
                                          0x5 (size before relaxing)
 .rodata.str1.1
                0x00000000c001f073       0x49 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c001f0bc       0x68 fs/iso9660/vfslink.32
                0x00000000c001f0bc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f124       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f168       0x34 hal/sound/sndcard.32
                0x00000000c001f168                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f19c       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f1db       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f213       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f2b4       0x2c hw/bus/pci.32
                0x00000000c001f2b4                vtable for PCI
 .rodata.str1.1
                0x00000000c001f2e0       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f367        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f368       0x2c hw/diskctrl/ide.32
                0x00000000c001f368                vtable for IDE
 .rodata.str1.4
                0x00000000c001f394       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f3b8       0x2c hw/diskctrl/satabus.32
                0x00000000c001f3b8                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f3e4       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f3f6        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f3f8       0x38 hw/diskphys/ata.32
                0x00000000c001f3f8                vtable for ATA
 .rodata.str1.1
                0x00000000c001f430        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f43d        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f440       0x38 hw/diskphys/atapi.32
                0x00000000c001f440                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f478       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f4f4       0x38 hw/diskphys/sata.32
                0x00000000c001f4f4                vtable for SATA
 .rodata.str1.1
                0x00000000c001f52c      0x100 hw/diskphys/satapi.32
                                        0x10d (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f62c       0x38 hw/diskphys/satapi.32
                0x00000000c001f62c                vtable for SATAPI
 .rodata        0x00000000c001f664        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f66c       0x2c hw/intctrl/apic.32
                0x00000000c001f66c                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f698       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f6b3        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f6b4       0x30 hw/timer/apictimer.32
                0x00000000c001f6b4                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f6e4       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f701        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f704       0x30 hw/timer/pit.32
                0x00000000c001f704                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f734      0x39d
 *(.data)
 .data          0x00000000c001f734        0x0 crti.32
 .data          0x00000000c001f734        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f734                __dso_handle
 .data          0x00000000c001f738        0x0 acpica/utclib.32
 .data          0x00000000c001f738        0x0 core/malloc.32
 .data          0x00000000c001f738        0x0 libk/ctype.32
 .data          0x00000000c001f738        0x0 libk/string.32
 .data          0x00000000c001f738        0x0 fs/fat/diskio.32
 .data          0x00000000c001f738        0x0 fs/fat/ff.32
 .data          0x00000000c001f738        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f738        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f738        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f738        0x0 core/computer.32
 .data          0x00000000c001f738        0x0 core/gdt.32
 .data          0x00000000c001f738        0x0 core/idle.32
 .data          0x00000000c001f738        0x0 core/idt.32
 .data          0x00000000c001f738        0x4 core/kheap.32
 .data          0x00000000c001f73c        0x0 core/main.32
 .data          0x00000000c001f73c        0x4 core/physmgr.32
                0x00000000c001f73c                Phys::bitmap
 .data          0x00000000c001f740        0x0 core/pipe.32
 .data          0x00000000c001f740       0x60 core/terminal.32
                0x00000000c001f740                VgaText::hiddenOut
                0x00000000c001f760                ansiToVGAMappings
 .data          0x00000000c001f7a0        0x0 core/tss.32
 .data          0x00000000c001f7a0        0x4 core/unixfile.32
                0x00000000c001f7a0                UnixFile::nextFd
 .data          0x00000000c001f7a4       0x15 core/virtmgr.32
                0x00000000c001f7a4                Virt::pageAllocPtr
                0x00000000c001f7a8                Virt::bitmap
                0x00000000c001f7ac                Virt::swapfileSectorsPerPage
                0x00000000c001f7b0                Virt::swapfileLength
                0x00000000c001f7b4                Virt::swapfileSector
                0x00000000c001f7b8                Virt::swapfileDrive
 *fill*         0x00000000c001f7b9        0x3 
 .data          0x00000000c001f7bc        0x4 coreobjs/c++.32
                0x00000000c001f7bc                __stack_chk_guard
 .data          0x00000000c001f7c0        0x0 dbg/kconsole.32
 .data          0x00000000c001f7c0        0x0 fs/vfs.32
 .data          0x00000000c001f7c0        0x0 hal/bus.32
 .data          0x00000000c001f7c0        0x0 hal/buzzer.32
 .data          0x00000000c001f7c0        0x0 hal/clock.32
 .data          0x00000000c001f7c0        0x0 hal/device.32
 .data          0x00000000c001f7c0        0x0 hal/diskctrl.32
 .data          0x00000000c001f7c0        0x0 hal/diskphys.32
 .data          0x00000000c001f7c0        0x0 hal/fpu.32
 .data          0x00000000c001f7c0        0x0 hal/intctrl.32
 .data          0x00000000c001f7c0        0x0 hal/keybrd.32
 .data          0x00000000c001f7c0        0x0 hal/logidisk.32
 .data          0x00000000c001f7c0        0x0 hal/mouse.32
 .data          0x00000000c001f7c0        0x0 hal/partition.32
 .data          0x00000000c001f7c0        0x0 hal/serial.32
 .data          0x00000000c001f7c0        0x0 hal/timer.32
 .data          0x00000000c001f7c0        0x0 hal/vcache.32
 .data          0x00000000c001f7c0        0x0 hal/video.32
 .data          0x00000000c001f7c0       0x10 hw/acpi.32
                0x00000000c001f7c0                legacyIRQRemaps
 .data          0x00000000c001f7d0        0x4 hw/cpu.32
                0x00000000c001f7d0                lastCode
 *fill*         0x00000000c001f7d4        0xc 
 .data          0x00000000c001f7e0      0x142 krnl/bootmsg.32
                0x00000000c001f7e0                KiSplashScreen
 *fill*         0x00000000c001f922       0x1e 
 .data          0x00000000c001f940       0x4d krnl/env.32
                0x00000000c001f940                defaultSysEnv
 .data          0x00000000c001f98d        0x0 krnl/inlines.32
 .data          0x00000000c001f98d        0x0 krnl/panic.32
 .data          0x00000000c001f98d        0x0 krnl/powctrl.32
 .data          0x00000000c001f98d        0x0 krnl/resolve.32
 *fill*         0x00000000c001f98d       0x13 
 .data          0x00000000c001f9a0       0x4c krnl/signal.32
                0x00000000c001f9a0                KiDefaultSignalHandlers
 *fill*         0x00000000c001f9ec       0x14 
 .data          0x00000000c001fa00       0xcc krnl/syscalls.32
                0x00000000c001fa00                systemCallHandlers
 .data          0x00000000c001facc        0x0 reg/registry.32
 .data          0x00000000c001facc        0x0 sys/eject.32
 .data          0x00000000c001facc        0x0 sys/exit.32
 .data          0x00000000c001facc        0x0 sys/getcwd.32
 .data          0x00000000c001facc        0x0 sys/getpid.32
 .data          0x00000000c001facc        0x0 sys/getramdata.32
 .data          0x00000000c001facc        0x0 sys/getvgaptr.32
 .data          0x00000000c001facc        0x0 sys/loaddll.32
 .data          0x00000000c001facc        0x0 sys/read.32
 .data          0x00000000c001facc        0x0 sys/registersignal.32
 .data          0x00000000c001facc        0x0 sys/sbrk.32
 .data          0x00000000c001facc        0x0 sys/setcwd.32
 .data          0x00000000c001facc        0x0 sys/settime.32
 .data          0x00000000c001facc        0x0 sys/timezone.32
 .data          0x00000000c001facc        0x0 sys/write.32
 .data          0x00000000c001facc        0x0 sys/wsbe.32
 .data          0x00000000c001facc        0x0 sys/yield.32
 .data          0x00000000c001facc        0x0 thr/elf.32
 .data          0x00000000c001facc        0x4 thr/prcssthr.32
                0x00000000c001facc                Thr::nextPID
 .data          0x00000000c001fad0        0x0 vm86/vm8086.32
 .data          0x00000000c001fad0        0x0 arch/i386/hal.32
 .data          0x00000000c001fad0        0x0 arch/i386/pic.32
 .data          0x00000000c001fad0        0x0 arch/i386/rtc.32
 .data          0x00000000c001fad0        0x0 arch/i386/vga.32
 .data          0x00000000c001fad0        0x0 fs/fat/vfslink.32
 .data          0x00000000c001fad0        0x0 fs/iso9660/helper.32
 .data          0x00000000c001fad0        0x1 fs/iso9660/vfslink.32
                0x00000000c001fad0                recentDriveletter
 .data          0x00000000c001fad1        0x0 hal/sound/sndcard.32
 .data          0x00000000c001fad1        0x0 hal/sound/sndport.32
 .data          0x00000000c001fad1        0x0 hw/bus/isa.32
 .data          0x00000000c001fad1        0x0 hw/bus/pci.32
 .data          0x00000000c001fad1        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001fad1        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001fad1        0x0 hw/diskphys/ata.32
 .data          0x00000000c001fad1        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001fad1        0x0 hw/diskphys/sata.32
 .data          0x00000000c001fad1        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001fad1        0x0 hw/intctrl/apic.32
 .data          0x00000000c001fad1        0x0 hw/timer/apictimer.32
 .data          0x00000000c001fad1        0x0 hw/timer/pit.32
 .data          0x00000000c001fad1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001fad1        0x0 crtn.32
 .data          0x00000000c001fad1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001fad1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001fad1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001fad1        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001fad4        0x0
 .got           0x00000000c001fad4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001fad4        0x0
 .got.plt       0x00000000c001fad4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001fad4        0x0
 .igot.plt      0x00000000c001fad4        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001fad4        0x0
 .tm_clone_table
                0x00000000c001fad4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001fad4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001fad1      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001fad1        0x3 
 .eh_frame      0x00000000c001fad4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001fad4        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001fad4       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001fb2c       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fb6c       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fbd8       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0020000       0x7d
 *(userkernel)
 userkernel     0x00000000c0020000       0x52 krnl/signal.32
                0x00000000c0020000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002002c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0020052       0x2b krnl/syscalls.32
                0x00000000c0020052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0021000        0x1
 *(align_previous)
 align_previous
                0x00000000c0021000        0x1 krnl/signal.32
                0x00000000c0021000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0021004        0x0
 .rel.got       0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0021004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0021001     0x4ba7
                0x00000000c0021001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0021001       0x1f 
 COMMON         0x00000000c0021020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0021020                dcache
                0x00000000c0021060                cdDriveLetter
                0x00000000c0021080                icache
 *(.bss)
 .bss           0x00000000c00210c0        0x0 crti.32
 .bss           0x00000000c00210c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00210e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00210e4       0x1c 
 .bss           0x00000000c0021100      0x378 core/malloc.32
 .bss           0x00000000c0021478        0x0 libk/ctype.32
 .bss           0x00000000c0021478        0x0 libk/string.32
 .bss           0x00000000c0021478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0021478        0x8 
 .bss           0x00000000c0021480       0x88 fs/fat/ff.32
 .bss           0x00000000c0021508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0021508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0021508       0x18 
 .bss           0x00000000c0021520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0021eb8        0x6 core/computer.32
                0x00000000c0021eb8                Krnl::computer
                0x00000000c0021ebc                KeIsPreemptionOn
                0x00000000c0021ebd                KeIsSchedulingOn
 *fill*         0x00000000c0021ebe        0x2 
 .bss           0x00000000c0021ec0        0x6 core/gdt.32
                0x00000000c0021ec0                gdtDescr
 .bss           0x00000000c0021ec6        0x0 core/idle.32
 *fill*         0x00000000c0021ec6        0x2 
 .bss           0x00000000c0021ec8        0x6 core/idt.32
                0x00000000c0021ec8                idtDescr
 .bss           0x00000000c0021ece        0x0 core/kheap.32
 *fill*         0x00000000c0021ece        0x2 
 .bss           0x00000000c0021ed0        0x4 core/main.32
                0x00000000c0021ed0                sysBootSettings
 .bss           0x00000000c0021ed4       0x29 core/physmgr.32
                0x00000000c0021ed4                Phys::forbidEvictions
                0x00000000c0021ed8                Phys::currentPagePointer
                0x00000000c0021edc                Phys::highestMem
                0x00000000c0021ee0                Phys::oldPercent
                0x00000000c0021ee4                Phys::usedPages
                0x00000000c0021ee8                Phys::usablePages
                0x00000000c0021eec                Phys::dmaUsage
 .bss           0x00000000c0021efd        0x0 core/pipe.32
 *fill*         0x00000000c0021efd        0x3 
 .bss           0x00000000c0021f00        0x9 core/terminal.32
                0x00000000c0021f00                terminalCycle
                0x00000000c0021f04                activeTerminal
                0x00000000c0021f08                VgaText::graphicMode
 *fill*         0x00000000c0021f09        0x1 
 .bss           0x00000000c0021f0a        0x2 core/tss.32
                0x00000000c0021f0a                doubleFaultSelector
 *fill*         0x00000000c0021f0c       0x14 
 .bss           0x00000000c0021f20       0x84 core/unixfile.32
                0x00000000c0021f20                sfileLpt
                0x00000000c0021f60                sfileCom
                0x00000000c0021f84                sfileNul
                0x00000000c0021f88                sfilePnt
                0x00000000c0021f8c                sfileAux
                0x00000000c0021f90                sfileCon
                0x00000000c0021f94                initialFilesAdded
                0x00000000c0021f98                unixFileLinkedList
 .bss           0x00000000c0021fa4       0x10 core/virtmgr.32
                0x00000000c0021fa4                twswaps
                0x00000000c0021fa8                swapBalance
                0x00000000c0021fac                Virt::swapfileBitmap
                0x00000000c0021fb0                firstVAS
 .bss           0x00000000c0021fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0021fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0021fb4        0x4 fs/vfs.32
                0x00000000c0021fb4                installedFilesystems
 .bss           0x00000000c0021fb8        0x0 hal/bus.32
 .bss           0x00000000c0021fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0021fb8        0x8 hal/clock.32
                0x00000000c0021fb8                User::dstOn
                0x00000000c0021fb9                User::timezoneHalfHourOffset
                0x00000000c0021fbc                User::timezoneHourOffset
 .bss           0x00000000c0021fc0        0x0 hal/device.32
 .bss           0x00000000c0021fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0021fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0021fc0        0x0 hal/fpu.32
 .bss           0x00000000c0021fc0     0x2000 hal/intctrl.32
                0x00000000c0021fc0                INT_contexts
                0x00000000c0022fc0                INT_handlers
 .bss           0x00000000c0023fc0      0x429 hal/keybrd.32
                0x00000000c0023fc0                keyboardWaitingTaskList
                0x00000000c0023fc4                keyboardSetupYet
                0x00000000c0023fc8                guiKeyboardHandler
                0x00000000c0023fe0                keystates
 *fill*         0x00000000c00243e9       0x17 
 .bss           0x00000000c0024400       0x88 hal/logidisk.32
                0x00000000c0024400                diskAssignments
                0x00000000c0024420                disks
 .bss           0x00000000c0024488        0x4 hal/mouse.32
                0x00000000c0024488                guiMouseHandler
 .bss           0x00000000c002448c        0x0 hal/partition.32
 .bss           0x00000000c002448c        0x0 hal/serial.32
 .bss           0x00000000c002448c        0x4 hal/timer.32
                0x00000000c002448c                milliTenthsSinceBoot
 .bss           0x00000000c0024490        0x0 hal/vcache.32
 .bss           0x00000000c0024490        0x4 hal/video.32
                0x00000000c0024490                screen
 *fill*         0x00000000c0024494        0xc 
 .bss           0x00000000c00244a0      0x480 hw/acpi.32
                0x00000000c00244a0                systemSleepFunction
                0x00000000c00244a4                systemResetFunction
                0x00000000c00244a8                systemShutdownFunction
                0x00000000c00244ac                nextACPITable
                0x00000000c00244c0                acpiTables
                0x00000000c00246c0                usingXSDT
                0x00000000c00246c4                MADTpointer
                0x00000000c00246c8                RSDTpointer
                0x00000000c00246cc                RSDPpointer
                0x00000000c00246d0                nextAPICNMI
                0x00000000c00246e0                apicNMIInfo
                0x00000000c0024760                legacyIRQFlags
                0x00000000c0024780                ioapicDiscoveryNumber
                0x00000000c00247a0                ioapicFoundInMADT
                0x00000000c00247c0                ioapicAddresses
                0x00000000c0024840                ioapicGSIBase
                0x00000000c00248c0                processorDiscoveryNumber
                0x00000000c00248e0                matchingAPICID
                0x00000000c0024900                processorID
 .bss           0x00000000c0024920       0x10 hw/cpu.32
                0x00000000c0024920                lastD
                0x00000000c0024924                lastC
                0x00000000c0024928                lastB
                0x00000000c002492c                lastA
 .bss           0x00000000c0024930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0024930        0x8 krnl/env.32
                0x00000000c0024930                Krnl::userEnv
                0x00000000c0024934                Krnl::systemEnv
 .bss           0x00000000c0024938        0x0 krnl/inlines.32
 .bss           0x00000000c0024938        0x1 krnl/panic.32
                0x00000000c0024938                KeIsKernelInPanic
 *fill*         0x00000000c0024939        0x7 
 .bss           0x00000000c0024940       0x48 krnl/powctrl.32
                0x00000000c0024940                Krnl::powCtrlOnBattery
                0x00000000c0024960                Krnl::currentPowerSettings
                0x00000000c0024984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0024988        0x0 krnl/resolve.32
 .bss           0x00000000c0024988        0x0 krnl/signal.32
 .bss           0x00000000c0024988        0x0 krnl/syscalls.32
 .bss           0x00000000c0024988        0x0 reg/registry.32
 .bss           0x00000000c0024988        0x0 sys/eject.32
 .bss           0x00000000c0024988        0x0 sys/exit.32
 .bss           0x00000000c0024988        0x0 sys/getcwd.32
 .bss           0x00000000c0024988        0x0 sys/getpid.32
 .bss           0x00000000c0024988        0x0 sys/getramdata.32
 .bss           0x00000000c0024988        0x0 sys/getvgaptr.32
 .bss           0x00000000c0024988        0x0 sys/loaddll.32
 .bss           0x00000000c0024988        0x0 sys/read.32
 .bss           0x00000000c0024988        0x0 sys/registersignal.32
 .bss           0x00000000c0024988        0x0 sys/sbrk.32
 .bss           0x00000000c0024988        0x0 sys/setcwd.32
 .bss           0x00000000c0024988        0x0 sys/settime.32
 .bss           0x00000000c0024988        0x0 sys/timezone.32
 .bss           0x00000000c0024988        0x0 sys/write.32
 .bss           0x00000000c0024988        0x0 sys/wsbe.32
 .bss           0x00000000c0024988        0x0 sys/yield.32
 *fill*         0x00000000c0024988       0x18 
 .bss           0x00000000c00249a0      0x7a4 thr/elf.32
                0x00000000c00249a0                Thr::driverLookupNext
                0x00000000c00249c0                Thr::driverLookupLen
                0x00000000c0024bc0                Thr::driverLookupAddr
                0x00000000c0024dc0                Thr::driverNameLookup
                0x00000000c0024fc0                Thr::kernelSymbols
                0x00000000c0025040                Thr::kernelStringTable
                0x00000000c00250c0                Thr::kernelSymbolTable
                0x00000000c0025140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0025144        0x4 
 .bss           0x00000000c0025148       0x68 thr/prcssthr.32
                0x00000000c0025148                cleanerThread
                0x00000000c002514c                weNeedTheCleanerToNotBlock
                0x00000000c0025150                retValLockStuff
                0x00000000c0025154                retValSchedLock
                0x00000000c0025158                lockStuffLock
                0x00000000c002515c                schedulerLock
                0x00000000c0025160                taskSwitchesPostponedFlag
                0x00000000c0025164                postponeTaskSwitchesCounter
                0x00000000c0025168                irqDisableCounter
                0x00000000c002516c                terminatedTaskList
                0x00000000c0025178                sleepingTaskList
                0x00000000c0025184                taskList
                0x00000000c0025190                kernelProcess
 *fill*         0x00000000c00251b0       0x10 
 .bss           0x00000000c00251c0       0x40 vm86/vm8086.32
                0x00000000c00251c0                Vm::vmRetV
                0x00000000c00251c4                Vm::vmDone
                0x00000000c00251c5                Vm::vmReady
                0x00000000c00251c8                Vm::vm86Thread
                0x00000000c00251cc                Vm::vmToHostCommsPtr
                0x00000000c00251e0                Vm::vmToHostComms
 .bss           0x00000000c0025200       0x14 arch/i386/hal.32
                0x00000000c0025200                apic
                0x00000000c0025204                fpuOwner
                0x00000000c0025208                coproLoadFunc
                0x00000000c002520c                coproSaveFunc
                0x00000000c0025210                gpFaultIntercept
 .bss           0x00000000c0025214        0x0 arch/i386/pic.32
 .bss           0x00000000c0025214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0025216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0025216        0xa 
 .bss           0x00000000c0025220       0xf0 fs/fat/vfslink.32
                0x00000000c0025220                FAT::fats
                0x00000000c0025240                FAT::vfsToFatRemaps
                0x00000000c00252c0                fatToVFSRemaps
 .bss           0x00000000c0025310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0025310       0x10 
 .bss           0x00000000c0025320      0x820 fs/iso9660/vfslink.32
                0x00000000c0025320                iso9660Owner
                0x00000000c0025324                recentSector
                0x00000000c0025340                recentBuffer
 .bss           0x00000000c0025b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0025b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0025b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0025b40        0xd hw/bus/pci.32
                0x00000000c0025b40                thePCI
 .bss           0x00000000c0025b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0025b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0025b4d        0x3 
 .bss           0x00000000c0025b50        0x8 hw/diskphys/ata.32
                0x00000000c0025b50                ataSectorsWritten
                0x00000000c0025b54                ataSectorsRead
 .bss           0x00000000c0025b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0025b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0025b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0025b58        0x8 
 .bss           0x00000000c0025b60       0x41 hw/intctrl/apic.32
                0x00000000c0025b60                noOfIOAPICs
                0x00000000c0025b80                ioapics
                0x00000000c0025ba0                IOAPICsSetupYet
 .bss           0x00000000c0025ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0025ba1        0x3 
 .bss           0x00000000c0025ba4        0x4 hw/timer/pit.32
                0x00000000c0025ba4                pitFreq
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0025ba8        0x0 crtn.32
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0025ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0025ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002a74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
