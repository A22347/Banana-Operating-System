Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/sbrk.32
LOAD sys/sc_eject.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/syscalls.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c44a
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 *fill*         0x00000000c0001afb        0x1 
 .text          0x00000000c0001afc      0x1f2 libk/ctype.32
                0x00000000c0001afc                isblank
                0x00000000c0001b1c                iscntrl
                0x00000000c0001b3c                isdigit
                0x00000000c0001b58                islower
                0x00000000c0001b74                isspace
                0x00000000c0001b9c                isupper
                0x00000000c0001bb8                isalpha
                0x00000000c0001be8                isalnum
                0x00000000c0001c18                ispunct
                0x00000000c0001c58                isgraph
                0x00000000c0001c88                isprint
                0x00000000c0001cb0                isxdigit
 .text          0x00000000c0001cee        0x0 libk/string.32
 .text          0x00000000c0001cee       0x51 fs/fat/diskio.32
                0x00000000c0001cee                disk_status
                0x00000000c0001cf1                disk_initialize
                0x00000000c0001cf4                disk_read
                0x00000000c0001d0a                disk_write
                0x00000000c0001d20                disk_ioctl
 .text          0x00000000c0001d3f     0x3d4b fs/fat/ff.32
                0x00000000c0003adb                f_mount
                0x00000000c0003b3d                f_open
                0x00000000c0003e08                f_read
                0x00000000c0004007                f_write
                0x00000000c000423b                f_sync
                0x00000000c00042f0                f_close
                0x00000000c000431f                f_lseek
                0x00000000c00044c6                f_opendir
                0x00000000c0004591                f_closedir
                0x00000000c00045b3                f_readdir
                0x00000000c0004645                f_stat
                0x00000000c00046c4                f_getfree
                0x00000000c00047c6                f_truncate
                0x00000000c00048aa                f_unlink
                0x00000000c00049cc                f_mkdir
                0x00000000c0004b67                f_rename
                0x00000000c0004d1d                f_chmod
                0x00000000c0004dc6                f_utime
                0x00000000c0004e74                f_getlabel
                0x00000000c0004fc5                f_setlabel
                0x00000000c0005155                f_expand
                0x00000000c00052b5                f_mkfs
 *fill*         0x00000000c0005a8a        0x2 
 .text          0x00000000c0005a8c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a8c                ff_memalloc
                0x00000000c0005aa4                ff_memfree
 *fill*         0x00000000c0005abb        0x1 
 .text          0x00000000c0005abc      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005abc                ff_uni2oem
                0x00000000c0005b5c                ff_oem2uni
                0x00000000c0005bd4                ff_wtoupper
 .text          0x00000000c0005d64     0x1145 fs/iso9660/iso9660.32
                0x00000000c0006064                isoReadDiscSector
                0x00000000c0006145                strnicmp
                0x00000000c00064a8                stricmp
                0x00000000c0006502                iso_open
                0x00000000c00065e2                iso_close
                0x00000000c0006602                iso_read
                0x00000000c0006800                iso_seek
                0x00000000c00068de                iso_tell
                0x00000000c000693b                iso_total
                0x00000000c0006984                fn_postprocess
                0x00000000c00069b8                iso_readdir
                0x00000000c0006c82                iso_reset
                0x00000000c0006c92                init_percd
                0x00000000c0006d97                iso_ioctl
                0x00000000c0006da2                fs_iso9660_init
                0x00000000c0006e31                fs_iso9660_shutdown
 .text          0x00000000c0006ea9       0x94 compat/inlines.32
                0x00000000c0006ea9                CPU::current()
                0x00000000c0006eb5                operator new(unsigned long)
                0x00000000c0006eba                operator delete(void*)
                0x00000000c0006ebf                disableIRQs()
                0x00000000c0006ec1                enableIRQs()
                0x00000000c0006ec3                lockScheduler()
                0x00000000c0006ecb                unlockScheduler()
                0x00000000c0006eda                lockStuff()
                0x00000000c0006ee8                unlockStuff()
                0x00000000c0006f22                Virt::getAKernelVAS()
                0x00000000c0006f28                __not_memcpy
 *fill*         0x00000000c0006f3d        0x3 
 .text          0x00000000c0006f40      0x118 compat/resolve.32
                0x00000000c0006f40                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c0007058      0x68b core/computer.32
                0x00000000c0007058                Computer::close(int, int, void*)
                0x00000000c000709d                Krnl::firstTask()
                0x00000000c00071d6                Computer::Computer()
                0x00000000c00071d6                Computer::Computer()
                0x00000000c0007288                Computer::setBootMessage(char const*)
                0x00000000c000728a                Computer::detectFeatures()
                0x00000000c0007494                Computer::displayFeatures()
                0x00000000c0007496                Computer::rdmsr(unsigned int)
                0x00000000c00074c2                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00074fa                Computer::shutdown()
                0x00000000c0007512                Computer::restart()
                0x00000000c000752a                Computer::sleep()
                0x00000000c000753e                Computer::nmiEnabled()
                0x00000000c000754a                Computer::readCMOS(unsigned char)
                0x00000000c0007564                Computer::enableNMI(bool)
                0x00000000c000757c                Computer::open(int, int, void*)
                0x00000000c0007650                Computer::disableNMI()
                0x00000000c0007660                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000767e                Computer::handleNMI()
 *fill*         0x00000000c00076e3        0x1 
 .text          0x00000000c00076e4      0x1cf core/gdt.32
                0x00000000c00076e4                GDTEntry::setBase(unsigned int)
                0x00000000c0007700                GDTEntry::setLimit(unsigned int)
                0x00000000c000771e                GDT::GDT()
                0x00000000c000771e                GDT::GDT()
                0x00000000c0007734                GDT::addEntry(GDTEntry)
                0x00000000c0007756                GDT::getNumberOfEntries()
                0x00000000c000775e                GDT::flush()
                0x00000000c0007780                GDT::setup()
 .text          0x00000000c00078b3       0x1d core/idle.32
                0x00000000c00078b3                idleFunction(void*)
 .text          0x00000000c00078d0      0x464 core/idt.32
                0x00000000c00078d0                IDTEntry::IDTEntry(bool)
                0x00000000c00078d0                IDTEntry::IDTEntry(bool)
                0x00000000c0007942                IDTEntry::setOffset(unsigned int)
                0x00000000c0007958                IDT::IDT()
                0x00000000c0007958                IDT::IDT()
                0x00000000c000795a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0007962                IDT::addEntry(IDTEntry, int)
                0x00000000c000797c                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00079b4                IDT::flush()
                0x00000000c00079ce                IDT::setup()
 .text          0x00000000c0007d34      0x183 core/kheap.32
                0x00000000c0007d34                sbrk
                0x00000000c0007dc9                mmap
                0x00000000c0007ddf                munmap
                0x00000000c0007df5                liballoc_lock()
                0x00000000c0007e02                liballoc_unlock()
                0x00000000c0007e16                liballoc_alloc(int)
                0x00000000c0007e2e                liballoc_free(void*, int)
                0x00000000c0007e49                realloc
                0x00000000c0007e5d                malloc
                0x00000000c0007e6d                free
                0x00000000c0007e7d                rfree
                0x00000000c0007e8d                calloc
 .text          0x00000000c0007eb7      0x1b4 core/main.32
                0x00000000c0007eb7                Krnl::setBootMessage(char const*)
                0x00000000c0007f23                kernel_main
 .text          0x00000000c000806b      0x5dc core/physmgr.32
                0x00000000c000806b                Phys::allocateDMA(unsigned long)
                0x00000000c0008142                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0008175                Phys::setPageState(unsigned long, bool)
                0x00000000c00081a7                Phys::getPageState(unsigned long)
                0x00000000c00081c8                Phys::freePage(unsigned long)
                0x00000000c000822a                Phys::allocatePage()
                0x00000000c00082e8                Phys::allocateContiguousPages(int)
                0x00000000c0008344                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000837c                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008647        0x1 
 .text          0x00000000c0008648      0x273 core/pipe.32
                0x00000000c0008648                Pipe::isAtty()
                0x00000000c000864c                Pipe::~Pipe()
                0x00000000c000864c                Pipe::~Pipe()
                0x00000000c0008670                Pipe::~Pipe()
                0x00000000c0008698                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008758                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008854                Pipe::Pipe(int)
                0x00000000c0008854                Pipe::Pipe(int)
 *fill*         0x00000000c00088bb        0x1 
 .text          0x00000000c00088bc      0xa1e core/terminal.32
                0x00000000c00088bc                VgaText::isAtty()
                0x00000000c00088c0                VgaText::~VgaText()
                0x00000000c00088c0                VgaText::~VgaText()
                0x00000000c00088e4                VgaText::~VgaText()
                0x00000000c000890e                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000892e                setTerminalScrollLock(bool)
                0x00000000c000892f                doTerminalCycle()
                0x00000000c0008930                addToTerminalCycle(VgaText*)
                0x00000000c0008931                scrollTerminalScrollLock(int)
                0x00000000c0008932                VgaText::updateTitle()
                0x00000000c0008934                VgaText::load()
                0x00000000c0008936                VgaText::updateCursor()
                0x00000000c000894c                VgaText::doANSI_SGR(int)
                0x00000000c00089c0                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00089d0                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00089e0                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0008a00                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008a0c                VgaText::setTitleColour(VgaColour)
                0x00000000c0008a18                VgaText::setTitle(char*)
                0x00000000c0008a1a                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008a2c                VgaText::scrollScreen()
                0x00000000c0008ac4                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008ad6                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008b66                VgaText::getCursorX()
                0x00000000c0008b6e                VgaText::getCursorY()
                0x00000000c0008b76                VgaText::setCursor(int, int)
                0x00000000c0008b8d                setActiveTerminal(VgaText*)
                0x00000000c0008bd8                VgaText::clearScreen()
                0x00000000c0008c26                VgaText::setCursorX(int)
                0x00000000c0008c3e                VgaText::setCursorY(int)
                0x00000000c0008c56                VgaText::incrementCursor(bool)
                0x00000000c0008caa                VgaText::decrementCursor(bool)
                0x00000000c0008ccc                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008d9a                VgaText::putchar(char)
                0x00000000c0008e86                VgaText::putx(unsigned int)
                0x00000000c0008ecc                VgaText::puts(char const*)
                0x00000000c0008ef2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008f3e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0009090                VgaText::VgaText(char const*)
                0x00000000c0009090                VgaText::VgaText(char const*)
                0x00000000c00091dc                VgaText::receiveKey(unsigned char)
                0x00000000c00092b4                VgaText::doUpdate()
                0x00000000c00092b5                newTerminal(char*)
 *fill*         0x00000000c00092da        0x2 
 .text          0x00000000c00092dc      0x1a1 core/tss.32
                0x00000000c00092dc                TSS::TSS()
                0x00000000c00092dc                TSS::TSS()
                0x00000000c00092ec                TSS::setESP(unsigned long)
                0x00000000c0009300                TSS::flush()
                0x00000000c0009320                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000947d        0x1 
 .text          0x00000000c000947e      0x4c2 core/unixfile.32
                0x00000000c000947e                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00094d4                ReservedFilename::isAtty()
                0x00000000c00094f0                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000954e                UnixFile::getFileDescriptor()
                0x00000000c0009556                UnixFile::UnixFile(int)
                0x00000000c0009556                UnixFile::UnixFile(int)
                0x00000000c0009706                ReservedFilename::ReservedFilename(int)
                0x00000000c0009706                ReservedFilename::ReservedFilename(int)
                0x00000000c0009738                UnixFile::~UnixFile()
                0x00000000c0009738                UnixFile::~UnixFile()
                0x00000000c00097d0                UnixFile::~UnixFile()
                0x00000000c00097f8                ReservedFilename::~ReservedFilename()
                0x00000000c00097f8                ReservedFilename::~ReservedFilename()
                0x00000000c000981c                ReservedFilename::~ReservedFilename()
                0x00000000c0009843                getFromFileDescriptor(int)
 .text          0x00000000c0009940     0x1166 core/virtmgr.32
                0x00000000c0009940                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009975                Virt::getPageState(unsigned long)
                0x00000000c0009999                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009aaa                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009ac8                Virt::swapIDToSector(unsigned long)
                0x00000000c0009ada                Virt::allocateSwapfilePage()
                0x00000000c0009b58                Virt::virtualMemorySetup()
                0x00000000c0009ba3                Virt::setupPageSwapping(int)
                0x00000000c0009c14                VAS::VAS()
                0x00000000c0009c14                VAS::VAS()
                0x00000000c0009c50                VAS::VAS(VAS*)
                0x00000000c0009c50                VAS::VAS(VAS*)
                0x00000000c0009c7e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009caa                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009cc9                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009dee                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009e12                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009e2c                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009e6c                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009ea0                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009eca                VAS::~VAS()
                0x00000000c0009eca                VAS::~VAS()
                0x00000000c000a02e                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000a132                VAS::allocatePages(int, int)
                0x00000000c000a30a                VAS::setCPUSpecific(unsigned long)
                0x00000000c000a328                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a3ee                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a4dc                VAS::VAS(bool)
                0x00000000c000a4dc                VAS::VAS(bool)
                0x00000000c000a75c                VAS::evict(unsigned long)
                0x00000000c000a81e                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a90c                VAS::scanForEviction()
                0x00000000c000a9ec                mapVASFirstTime
 .text          0x00000000c000aaa6       0x5f coreobjs/c++.32
                0x00000000c000aaa6                __cxa_atexit
                0x00000000c000aaa9                __cxa_finalize
                0x00000000c000aaaa                __stack_chk_fail
                0x00000000c000aae0                __cxa_pure_virtual
                0x00000000c000aaf1                operator new[](unsigned long)
                0x00000000c000aaf6                operator delete(void*, unsigned long)
                0x00000000c000aafb                operator delete[](void*)
                0x00000000c000ab00                operator delete[](void*, unsigned long)
 .text          0x00000000c000ab05      0x21c dbg/kconsole.32
                0x00000000c000ab05                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ab70                Dbg::logc(char)
                0x00000000c000ab90                Dbg::logs(char*)
                0x00000000c000abad                Dbg::logWriteInt(unsigned int)
                0x00000000c000abcb                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000abec                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000ad21        0x1 
 .text          0x00000000c000ad22      0xc5c fs/vfs.32
                0x00000000c000ad22                File::read(unsigned long long, void*, int*)
                0x00000000c000ad7a                File::write(unsigned long long, void*, int*)
                0x00000000c000add2                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ae2a                Directory::write(unsigned long long, void*, int*)
                0x00000000c000ae58                File::isAtty()
                0x00000000c000ae5c                Directory::isAtty()
                0x00000000c000ae60                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ae66                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ae6c                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ae72                File::~File()
                0x00000000c000ae72                File::~File()
                0x00000000c000ae96                File::~File()
                0x00000000c000aec0                Directory::~Directory()
                0x00000000c000aec0                Directory::~Directory()
                0x00000000c000aee4                Directory::~Directory()
                0x00000000c000af0e                Filesystem::Filesystem()
                0x00000000c000af0e                Filesystem::Filesystem()
                0x00000000c000af32                Filesystem::~Filesystem()
                0x00000000c000af32                Filesystem::~Filesystem()
                0x00000000c000af40                Filesystem::~Filesystem()
                0x00000000c000af64                Fs::getcwd(Process*, char*, int)
                0x00000000c000af8e                Fs::initVFS()
                0x00000000c000afb8                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b162                File::File(char const*, Process*)
                0x00000000c000b162                File::File(char const*, Process*)
                0x00000000c000b222                File::open(FileOpenMode)
                0x00000000c000b280                File::close()
                0x00000000c000b2e0                File::seek(unsigned long long)
                0x00000000c000b336                File::tell(unsigned long long*)
                0x00000000c000b386                File::rewind()
                0x00000000c000b39a                File::unlink()
                0x00000000c000b3e6                File::rename(char const*)
                0x00000000c000b434                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b490                File::exists()
                0x00000000c000b4ce                File::stat(unsigned long long*, bool*)
                0x00000000c000b52f                Fs::setcwd(Process*, char*)
                0x00000000c000b68c                Directory::Directory(char const*, Process*)
                0x00000000c000b68c                Directory::Directory(char const*, Process*)
                0x00000000c000b74c                Directory::open()
                0x00000000c000b7a8                Directory::close()
                0x00000000c000b808                Directory::unlink()
                0x00000000c000b854                Directory::rename(char const*)
                0x00000000c000b8a2                Directory::exists()
                0x00000000c000b8e0                Directory::read(dirent*)
                0x00000000c000b92c                Directory::create()
                0x00000000c000b978                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b97e        0x2 
 .text          0x00000000c000b980       0x86 hal/bus.32
                0x00000000c000b980                Bus::Bus(char const*)
                0x00000000c000b980                Bus::Bus(char const*)
                0x00000000c000b9b8                Bus::~Bus()
                0x00000000c000b9b8                Bus::~Bus()
                0x00000000c000b9dc                Bus::~Bus()
 .text          0x00000000c000ba06       0x96 hal/buzzer.32
                0x00000000c000ba06                beepThread(void*)
                0x00000000c000ba43                Krnl::beep(int, int, bool)
 .text          0x00000000c000ba9c      0x46d hal/clock.32
                0x00000000c000ba9c                User::loadClockSettings(int)
                0x00000000c000baee                Clock::Clock(char const*)
                0x00000000c000baee                Clock::Clock(char const*)
                0x00000000c000bb24                Clock::~Clock()
                0x00000000c000bb24                Clock::~Clock()
                0x00000000c000bb48                Clock::~Clock()
                0x00000000c000bb72                Clock::timeInSecondsLocal()
                0x00000000c000bbba                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000bc13                datetimeToSeconds(datetime_t)
                0x00000000c000bd40                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bda0                secondsToDatetime(unsigned long long)
                0x00000000c000bee4                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bf09        0x1 
 .text          0x00000000c000bf0a      0x464 hal/device.32
                0x00000000c000bf0a                Device::hibernate()
                0x00000000c000bf0c                Device::wake()
                0x00000000c000bf0e                Device::detect()
                0x00000000c000bf10                Device::disableLegacy()
                0x00000000c000bf12                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bf14                DriverlessDevice::close(int, int, void*)
                0x00000000c000bf18                DriverlessDevice::detect()
                0x00000000c000bf1a                DriverlessDevice::open(int, int, void*)
                0x00000000c000bf2e                Device::~Device()
                0x00000000c000bf2e                Device::~Device()
                0x00000000c000bf3c                Device::~Device()
                0x00000000c000bf64                Device::findAndLoadDriver()
                0x00000000c000bf72                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bf98                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bfd8                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c002                Device::getParent()
                0x00000000c000c00e                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c02c                Device::addChild(Device*)
                0x00000000c000c070                Device::removeAllChildren()
                0x00000000c000c0b6                Device::hibernateAll()
                0x00000000c000c0e6                Device::wakeAll()
                0x00000000c000c116                Device::detectAll()
                0x00000000c000c146                Device::disableLegacyAll()
                0x00000000c000c148                Device::loadDriversForAll()
                0x00000000c000c14a                Device::closeAll()
                0x00000000c000c180                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c1b6                Device::setName(char const*)
                0x00000000c000c1c4                Device::Device(char const*)
                0x00000000c000c1c4                Device::Device(char const*)
                0x00000000c000c2c0                Device::getName()
                0x00000000c000c2ca                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c2ca                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c300                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c344                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c36e        0x2 
 .text          0x00000000c000c370       0x86 hal/diskctrl.32
                0x00000000c000c370                HardDiskController::HardDiskController(char const*)
                0x00000000c000c370                HardDiskController::HardDiskController(char const*)
                0x00000000c000c3a8                HardDiskController::~HardDiskController()
                0x00000000c000c3a8                HardDiskController::~HardDiskController()
                0x00000000c000c3cc                HardDiskController::~HardDiskController()
 .text          0x00000000c000c3f6       0xe2 hal/diskphys.32
                0x00000000c000c3f6                PhysicalDisk::eject()
                0x00000000c000c3fa                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c3fa                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c462                PhysicalDisk::startCache()
                0x00000000c000c48a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c48a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c4ae                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c4d8        0x0 hal/fpu.32
 .text          0x00000000c000c4d8      0x35d hal/intctrl.32
                0x00000000c000c4d8                int_handler
                0x00000000c000c560                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c5a8                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c6e0                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c714                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c793                setupINTS()
                0x00000000c000c7f0                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c835        0x1 
 .text          0x00000000c000c836      0x78c hal/keybrd.32
                0x00000000c000c836                startGUI(void*)
                0x00000000c000c8a2                startGUIVESA(void*)
                0x00000000c000c90e                sendKeyToTerminal(unsigned char)
                0x00000000c000c9d1                sendKeyboardToken(KeyboardToken)
                0x00000000c000ce11                clearInternalKeybuffer(VgaText*)
                0x00000000c000ce46                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000cf38                Keyboard::Keyboard(char const*)
                0x00000000c000cf38                Keyboard::Keyboard(char const*)
                0x00000000c000cf74                Keyboard::~Keyboard()
                0x00000000c000cf74                Keyboard::~Keyboard()
                0x00000000c000cf98                Keyboard::~Keyboard()
 .text          0x00000000c000cfc2      0x3ea hal/logidisk.32
                0x00000000c000cfc2                LogicalDisk::close(int, int, void*)
                0x00000000c000cfc6                LogicalDisk::~LogicalDisk()
                0x00000000c000cfc6                LogicalDisk::~LogicalDisk()
                0x00000000c000cfea                LogicalDisk::~LogicalDisk()
                0x00000000c000d014                LogicalDisk::open(int, int, void*)
                0x00000000c000d028                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d060                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d0a6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d0a6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d15c                LogicalDisk::assignDriveLetter()
                0x00000000c000d212                LogicalDisk::mount()
                0x00000000c000d25a                LogicalDisk::unmount()
                0x00000000c000d26a                LogicalDisk::eject()
                0x00000000c000d27e                LogicalDisk::unassignDriveLetter()
                0x00000000c000d2d4                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d340                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000d3ac       0x86 hal/mouse.32
                0x00000000c000d3ac                Mouse::Mouse(char const*)
                0x00000000c000d3ac                Mouse::Mouse(char const*)
                0x00000000c000d3e4                Mouse::~Mouse()
                0x00000000c000d3e4                Mouse::~Mouse()
                0x00000000c000d408                Mouse::~Mouse()
 .text          0x00000000c000d432      0x339 hal/partition.32
                0x00000000c000d432                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d4da                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d76b        0x1 
 .text          0x00000000c000d76c       0x86 hal/serial.32
                0x00000000c000d76c                Serial::Serial(char const*)
                0x00000000c000d76c                Serial::Serial(char const*)
                0x00000000c000d7a4                Serial::~Serial()
                0x00000000c000d7a4                Serial::~Serial()
                0x00000000c000d7c8                Serial::~Serial()
 *fill*         0x00000000c000d7f2        0x2 
 .text          0x00000000c000d7f4      0x234 hal/timer.32
                0x00000000c000d7f4                Timer::Timer(char const*)
                0x00000000c000d7f4                Timer::Timer(char const*)
                0x00000000c000d82c                Timer::~Timer()
                0x00000000c000d82c                Timer::~Timer()
                0x00000000c000d850                Timer::~Timer()
                0x00000000c000d87a                Timer::read()
                0x00000000c000d885                setupTimer(int)
                0x00000000c000d8c0                timerHandler(unsigned int)
 .text          0x00000000c000da28      0x3ee hal/vcache.32
                0x00000000c000da28                VCache::VCache(PhysicalDisk*)
                0x00000000c000da28                VCache::VCache(PhysicalDisk*)
                0x00000000c000db90                VCache::invalidateReadBuffer()
                0x00000000c000dba0                VCache::writeWriteBuffer()
                0x00000000c000dbec                VCache::~VCache()
                0x00000000c000dbec                VCache::~VCache()
                0x00000000c000dc40                VCache::~VCache()
                0x00000000c000dc68                VCache::write(unsigned long long, int, void*)
                0x00000000c000dd7e                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000de16      0x4b3 hal/video.32
                0x00000000c000de16                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000de62                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000ded2                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000df50                Video::clearScreen(unsigned int)
                0x00000000c000df84                Video::putpixel(int, int, unsigned int)
                0x00000000c000df92                Video::Video(char const*)
                0x00000000c000df92                Video::Video(char const*)
                0x00000000c000dfc8                Video::~Video()
                0x00000000c000dfc8                Video::~Video()
                0x00000000c000dfec                Video::~Video()
                0x00000000c000e016                Video::isMonochrome()
                0x00000000c000e022                Video::getWidth()
                0x00000000c000e02e                Video::getHeight()
                0x00000000c000e03a                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000e0f6                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e25e                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e2c9        0x3 
 .text          0x00000000c000e2cc     0x1307 hw/acpi.32
                0x00000000c000e2cc                ACPI::close(int, int, void*)
                0x00000000c000e384                findRSDP()
                0x00000000c000e414                loadACPITables(unsigned char*)
                0x00000000c000e678                findRSDT(unsigned char*)
                0x00000000c000e7c8                findDataTable(unsigned char*, char*)
                0x00000000c000e840                scanMADT()
                0x00000000c000ed14                ACPI::ACPI()
                0x00000000c000ed14                ACPI::ACPI()
                0x00000000c000ed68                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ee50                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ef18                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ef20                ACPI::detectPCI()
                0x00000000c000f128                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f17c                ACPI::sleep()
                0x00000000c000f198                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f5d3        0x1 
 .text          0x00000000c000f5d4      0xb95 hw/cpu.32
                0x00000000c000f5d4                CPU::close(int, int, void*)
                0x00000000c000f5d8                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f5f4                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f60c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f680                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f704                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f732                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f760                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f78e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f7bc                CPU::CPU()
                0x00000000c000f7bc                CPU::CPU()
                0x00000000c000f84a                CPU::displayFeatures()
                0x00000000c000f84c                CPU::detectFeatures()
                0x00000000c000ff10                CPU::setupSMEP()
                0x00000000c000ff1c                CPU::setupUMIP()
                0x00000000c000ff26                CPU::setupTSC()
                0x00000000c000ff30                CPU::setupLargePages()
                0x00000000c000ff3a                CPU::setupPAT()
                0x00000000c000ff76                CPU::setupMTRR()
                0x00000000c000ff78                CPU::setupGlobalPages()
                0x00000000c000ff82                CPU::allowUsermodeDataAccess()
                0x00000000c000ff94                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ffa6                CPU::setupSMAP()
                0x00000000c000ffb4                CPU::setupFeatures()
                0x00000000c0010080                CPU::open(int, int, void*)
 *fill*         0x00000000c0010169        0x1 
 .text          0x00000000c001016a      0x581 krnl/env.32
                0x00000000c001016a                EnvVarContainer::getEnv(char const*)
                0x00000000c00101a8                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001026a                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001026c                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0010452                EnvVarContainer::__loadSystem()
                0x00000000c001046c                EnvVarContainer::__loadUser()
                0x00000000c001046e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001046e                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010490                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010490                EnvVarContainer::~EnvVarContainer()
                0x00000000c00104c0                Krnl::getEnv(Process*, char const*)
                0x00000000c0010525                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c001053f                Krnl::setEnvUser(char const*, char const*)
                0x00000000c001055e                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0010571                Krnl::deleteEnvSystem(char const*)
                0x00000000c0010572                Krnl::deleteEnvUser(char const*)
                0x00000000c0010573                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0010574                Krnl::newProcessEnv(Process*)
                0x00000000c0010596                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c00105e2                Krnl::loadSystemEnv()
                0x00000000c0010610                Krnl::loadUserEnv()
                0x00000000c0010636                Krnl::flushEnv()
                0x00000000c0010637                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0010657                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c00106eb      0x108 krnl/panic.32
                0x00000000c00106eb                Krnl::panic(char const*)
 .text          0x00000000c00107f3      0x142 krnl/powctrl.32
                0x00000000c00107f3                Krnl::powerThread(void*)
                0x00000000c0010821                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010837                Krnl::userIOReceived()
                0x00000000c0010842                Krnl::handlePowerButton()
                0x00000000c0010877                Krnl::handleSleepButton()
                0x00000000c00108ac                Krnl::setupPowerManager()
 .text          0x00000000c0010935      0x50e reg/registry.32
                0x00000000c0010935                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0010a8d                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0010be2                Reg::getLine(char*, char*, char*)
                0x00000000c0010c19                Reg::readInt(char*, char*, int*)
                0x00000000c0010d04                Reg::readString(char*, char*, char*, int)
                0x00000000c0010d85                Reg::readBool(char*, char*, bool*)
                0x00000000c0010daa                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0010dd6                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0010e02                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0010e43       0x18 sys/exit.32
                0x00000000c0010e43                SysExit(regs*)
 .text          0x00000000c0010e5b       0x1f sys/getcwd.32
                0x00000000c0010e5b                SysGetCwd(regs*)
 .text          0x00000000c0010e7a        0xc sys/getpid.32
                0x00000000c0010e7a                SysGetPID(regs*)
 .text          0x00000000c0010e86       0x1a sys/getramdata.32
                0x00000000c0010e86                SysGetRAMData(regs*)
 .text          0x00000000c0010ea0       0x82 sys/getvgaptr.32
                0x00000000c0010ea0                SysGetVGAPtr(regs*)
 .text          0x00000000c0010f22       0xa8 sys/loaddll.32
                0x00000000c0010f22                SysLoadDLL(regs*)
 .text          0x00000000c0010fca       0x68 sys/read.32
                0x00000000c0010fca                SysRead(regs*)
 .text          0x00000000c0011032       0x55 sys/sbrk.32
                0x00000000c0011032                SysSbrk(regs*)
 .text          0x00000000c0011087       0x36 sys/sc_eject.32
                0x00000000c0011087                SysEject(regs*)
 .text          0x00000000c00110bd       0x1c sys/setcwd.32
                0x00000000c00110bd                SysSetCwd(regs*)
 .text          0x00000000c00110d9       0x95 sys/settime.32
                0x00000000c00110d9                SysSetTime(regs*)
 .text          0x00000000c001116e      0xe2c sys/syscalls.32
                0x00000000c001116e                sysCallSeekDir(regs*)
                0x00000000c0011173                sysCallTellDir(regs*)
                0x00000000c0011178                sysCallVerify(regs*)
                0x00000000c0011182                sysCallGetArgc(regs*)
                0x00000000c0011192                sysCallTTYName(regs*)
                0x00000000c001119a                sysFormatDisk(regs*)
                0x00000000c0011207                sysSetDiskVolumeLabel(regs*)
                0x00000000c0011251                sysGetDiskVolumeLabel(regs*)
                0x00000000c00112a6                sysShutdown(regs*)
                0x00000000c0011304                sysCallRealpath(regs*)
                0x00000000c0011347                sysCallReadDir(regs*)
                0x00000000c00113c7                sysCallIsATTY(regs*)
                0x00000000c0011423                sysCallSeek(regs*)
                0x00000000c001147c                sysCallTell(regs*)
                0x00000000c00114eb                sysCallSize(regs*)
                0x00000000c0011560                sysCallSizeFromFilename(regs*)
                0x00000000c0011613                sysCallClose(regs*)
                0x00000000c0011673                sysCallOpenDir(regs*)
                0x00000000c00116ea                sysCallCloseDir(regs*)
                0x00000000c001173e                sysCallMakeDir(regs*)
                0x00000000c00117b0                sysCallWait(regs*)
                0x00000000c00117cd                sysCallNotImpl(regs*)
                0x00000000c00117e8                sysPanic(regs*)
                0x00000000c0011803                sysCallRmdir(regs*)
                0x00000000c001186a                sysCallUnlink(regs*)
                0x00000000c00118d1                sysCallGetArgv(regs*)
                0x00000000c001191e                sysCallUSleep(regs*)
                0x00000000c0011947                sysCallSpawn(regs*)
                0x00000000c00119b0                sysCallGetEnv(regs*)
                0x00000000c0011a5f                sysSetFatAttrib(regs*)
                0x00000000c0011ad6                sysPipe(regs*)
                0x00000000c0011b1b                sysGetUnixTime(regs*)
                0x00000000c0011b2f                string_ends_with(char const*, char const*)
                0x00000000c0011b79                sysCallOpen(regs*)
                0x00000000c0011d6d                KeLoadSystemCalls()
                0x00000000c0011f58                KeSystemCall(regs*, void*)
 .text          0x00000000c0011f9a       0x4a sys/timezone.32
                0x00000000c0011f9a                SysTimezone(regs*)
 .text          0x00000000c0011fe4       0x68 sys/write.32
                0x00000000c0011fe4                SysWrite(regs*)
 .text          0x00000000c001204c       0x62 sys/wsbe.32
                0x00000000c001204c                SysWsbe(regs*)
 .text          0x00000000c00120ae       0x25 sys/yield.32
                0x00000000c00120ae                SysYield(regs*)
 .text          0x00000000c00120d3     0x11e5 thr/elf.32
                0x00000000c00120d3                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001235f                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0012575                Thr::runtimeReferenceHelper()
                0x00000000c0012588                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00125d7                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0012895                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012fcb                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012ffd                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0013034                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001304e                Thr::loadDLL(char const*, bool)
                0x00000000c001327f                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c00132b8     0x12c5 thr/prcssthr.32
                0x00000000c00132b8                userModeEntryPoint(void*)
                0x00000000c00132e0                changeTSS
                0x00000000c0013310                switchToThread(ThreadControlBlock*)
                0x00000000c00133c4                Process::addArgs(char**)
                0x00000000c0013424                Process::Process(char const*, Process*, char**)
                0x00000000c0013424                Process::Process(char const*, Process*, char**)
                0x00000000c0013614                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013614                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00137d0                taskStartupFunction
                0x00000000c00137dc                Semaphore::Semaphore(int)
                0x00000000c00137dc                Semaphore::Semaphore(int)
                0x00000000c001380c                Mutex::Mutex()
                0x00000000c001380c                Mutex::Mutex()
                0x00000000c0013820                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0013918                Process::createUserThread()
                0x00000000c0013938                setupMultitasking(void (*)())
                0x00000000c0013a40                schedule()
                0x00000000c0013ad0                Semaphore::tryAcquire()
                0x00000000c0013b9c                Semaphore::assertLocked(char const*)
                0x00000000c0013c14                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0013c3c                blockTask(TaskState)
                0x00000000c0013c6c                waitTask(int, int*, int)
                0x00000000c0013cb0                milliTenthSleepUntil(unsigned int)
                0x00000000c0013d40                milliTenthSleep(unsigned int)
                0x00000000c0013d50                sleep(unsigned int)
                0x00000000c0013d6c                Semaphore::acquire()
                0x00000000c0013e28                taskReturned
                0x00000000c0013e64                Thr::processFromPID(int)
                0x00000000c0013f04                unblockTask(ThreadControlBlock*)
                0x00000000c0013fa8                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0014274                cleanerTaskFunction(void*)
                0x00000000c0014364                terminateTask(int)
                0x00000000c0014430                Thr::terminateFromIRQ(int)
                0x00000000c0014440                Semaphore::release()
 .text          0x00000000c001457d      0xb93 vm86/vm8086.32
                0x00000000c001457d                Vm::inbv(unsigned short)
                0x00000000c0014590                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00145c6                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00145d6                Vm::getSegment(unsigned int)
                0x00000000c00145de                Vm::getOffset(unsigned int)
                0x00000000c00145e3                Vm::mainloop2()
                0x00000000c001461d                Vm::mainVm8086Loop(void*)
                0x00000000c001462d                Vm::mainloop3(unsigned long)
                0x00000000c0014653                Vm::initialise8086()
                0x00000000c0014696                Vm::finish8086()
                0x00000000c00146f7                Vm::getOutput8086(unsigned char*)
                0x00000000c001471c                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00147d5                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001493d                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00149c7                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00149d8                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00149ea                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00149fb                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0014a10                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0014a26                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0014a3b                Vm::faultHandler(regs*)
 .text          0x00000000c0015110      0x95f arch/i386/hal.32
                0x00000000c0015110                noCopro(unsigned long)
                0x00000000c0015111                nmiHandler(regs*, void*)
                0x00000000c001512a                doubleFault(regs*, void*)
                0x00000000c0015143                displayDebugInfo(regs*)
                0x00000000c0015464                HalSystemIdle()
                0x00000000c00154da                displayProgramFault(char const*)
                0x00000000c0015526                gpFault(regs*, void*)
                0x00000000c001558b                pgFault(regs*, void*)
                0x00000000c0015611                otherISRHandler(regs*, void*)
                0x00000000c0015645                opcodeFault(regs*, void*)
                0x00000000c00156c5                i386SaveCoprocessor(void*)
                0x00000000c00156d9                i386LoadCoprocessor(void*)
                0x00000000c00156ed                x87EmulHandler(regs*, void*)
                0x00000000c001578a                HalInitialiseCoprocessor()
                0x00000000c0015838                HalPanic(char const*)
                0x00000000c001583d                HalQueryPerformanceCounter()
                0x00000000c0015858                HalInitialise()
                0x00000000c00159fe                HalMakeBeep(int)
                0x00000000c0015a38                HalGetRand()
                0x00000000c0015a3b                HalEndOfInterrupt(int)
                0x00000000c0015a6c                HalRestart()
                0x00000000c0015a6d                HalShutdown()
                0x00000000c0015a6e                HalSleep()
 *fill*         0x00000000c0015a6f        0x1 
 .text          0x00000000c0015a70      0x2f4 arch/i386/pic.32
                0x00000000c0015a70                picIoWait()
                0x00000000c0015a78                picDisable()
                0x00000000c0015aac                picGetIRQReg(int)
                0x00000000c0015b30                picOpen()
                0x00000000c0015cc0                picEOI(int)
 .text          0x00000000c0015d64      0x64d arch/i386/rtc.32
                0x00000000c0015d64                RTC::open(int, int, void*)
                0x00000000c0015d68                RTC::close(int, int, void*)
                0x00000000c0015d6c                RTC::timeInSecondsUTC()
                0x00000000c0015d7e                RTC::timeInDatetimeUTC()
                0x00000000c0015da4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015de2                RTC::~RTC()
                0x00000000c0015de2                RTC::~RTC()
                0x00000000c0015e06                RTC::~RTC()
                0x00000000c0015e30                RTC::get_update_in_progress_flag()
                0x00000000c0015e48                RTC::completeRTCRefresh()
                0x00000000c0016100                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c00162b3                rtcIRQHandler(regs*, void*)
                0x00000000c00162f8                RTC::RTC()
                0x00000000c00162f8                RTC::RTC()
 *fill*         0x00000000c00163b1        0x3 
 .text          0x00000000c00163b4      0x203 arch/i386/vga.32
                0x00000000c00163b4                HalConsoleScroll(int, int)
                0x00000000c00164bc                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0016528                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c00165b7        0x1 
 .text          0x00000000c00165b8     0x13e7 fs/fat/vfslink.32
                0x00000000c00165b8                FAT::getName()
                0x00000000c00165c0                FAT::tell(void*, unsigned long long*)
                0x00000000c00165fc                FAT::stat(void*, unsigned long long*)
                0x00000000c0016638                FAT::~FAT()
                0x00000000c0016638                FAT::~FAT()
                0x00000000c001665c                FAT::~FAT()
                0x00000000c0016684                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0016728                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00167ec                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00169c0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016bd8                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016d98                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016f04                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016f64                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016fc4                FAT::close(void*)
                0x00000000c0017018                FAT::closeDir(void*)
                0x00000000c001706c                FAT::seek(void*, unsigned long long)
                0x00000000c00170c4                fatWrapperReadDisk
                0x00000000c0017108                fatWrapperWriteDisk
                0x00000000c001714c                fatWrapperIoctl
                0x00000000c0017268                FAT::FAT()
                0x00000000c0017268                FAT::FAT()
                0x00000000c00172bc                FAT::fixFilepath(char*)
                0x00000000c00172f8                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0017430                FAT::openDir(char const*, void**)
                0x00000000c00174e0                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00175d8                FAT::unlink(char const*)
                0x00000000c0017658                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00177e4                FAT::rename(char const*, char const*)
                0x00000000c00178b0                FAT::mkdir(char const*)
                0x00000000c0017930                FAT::exists(char const*)
 *fill*         0x00000000c001799f        0x1 
 .text          0x00000000c00179a0       0x5c fs/iso9660/helper.32
                0x00000000c00179a0                isoReadDiscSectorHelper
 .text          0x00000000c00179fc      0x58c fs/iso9660/vfslink.32
                0x00000000c00179fc                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017a02                ISO9660::getName()
                0x00000000c0017a08                ISO9660::closeDir(void*)
                0x00000000c0017a12                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0017a18                ISO9660::unlink(char const*)
                0x00000000c0017a1e                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0017a24                ISO9660::rename(char const*, char const*)
                0x00000000c0017a2a                ISO9660::mkdir(char const*)
                0x00000000c0017a30                ISO9660::~ISO9660()
                0x00000000c0017a30                ISO9660::~ISO9660()
                0x00000000c0017a54                ISO9660::~ISO9660()
                0x00000000c0017a7c                ISO9660::exists(char const*)
                0x00000000c0017a90                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017b1c                ISO9660::openDir(char const*, void**)
                0x00000000c0017b9c                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017bdc                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017c14                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017c4a                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017c84                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017d70                ISO9660::close(void*)
                0x00000000c0017d96                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017e63                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017eee                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017f60                ISO9660::ISO9660()
                0x00000000c0017f60                ISO9660::ISO9660()
 .text          0x00000000c0017f88      0x26c hal/sound/sndcard.32
                0x00000000c0017f88                SoundCard::beginPlayback()
                0x00000000c0017f96                SoundCard::stopPlayback()
                0x00000000c0017fa4                SoundCard::SoundCard(char const*)
                0x00000000c0017fa4                SoundCard::SoundCard(char const*)
                0x00000000c0018042                SoundCard::~SoundCard()
                0x00000000c0018042                SoundCard::~SoundCard()
                0x00000000c0018066                SoundCard::~SoundCard()
                0x00000000c0018090                SoundCard::configureRates(int, int, int)
                0x00000000c00180c0                SoundCard::getSamples16(int, short*)
                0x00000000c001811c                SoundCard::getSamples32(int, int*)
                0x00000000c00181a2                SoundCard::addChannel(SoundPort*)
                0x00000000c00181e0                SoundCard::removeChannel(int)
 .text          0x00000000c00181f4      0x377 hal/sound/sndport.32
                0x00000000c00181f4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00181f4                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018280                SoundPort::~SoundPort()
                0x00000000c0018280                SoundPort::~SoundPort()
                0x00000000c00182b4                SoundPort::unpause()
                0x00000000c00182c0                SoundPort::pause()
                0x00000000c00182cc                SoundPort::getBufferUsed()
                0x00000000c00182d4                SoundPort::getBufferSize()
                0x00000000c00182dc                SoundPort::buffer16(short*, int)
                0x00000000c0018368                SoundPort::buffer32(int*, int)
                0x00000000c00183f0                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c00184b4                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001856b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001856b        0x1 
 .text          0x00000000c001856c      0xb49 hw/bus/pci.32
                0x00000000c001856c                PCI::open(int, int, void*)
                0x00000000c001858a                PCI::close(int, int, void*)
                0x00000000c001858e                PCI::PCI()
                0x00000000c001858e                PCI::PCI()
                0x00000000c0018628                PCI::readBAR8(unsigned int, int)
                0x00000000c0018644                PCI::readBAR16(unsigned int, int)
                0x00000000c0018662                PCI::readBAR32(unsigned int, int)
                0x00000000c001867e                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001869e                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c00186c0                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c00186e0                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001874e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00187f6                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001881a                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0018842                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001888c                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c00188b4                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c00188d8                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c00188fc                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0018924                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018988                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0018a70                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018cea                PCI::checkBus(unsigned char)
                0x00000000c0018d10                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018e82                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018ff6                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0019062                PCI::detect()
 *fill*         0x00000000c00190b5        0x1 
 .text          0x00000000c00190b6      0xb5a hw/diskctrl/ide.32
                0x00000000c00190b6                IDE::close(int, int, void*)
                0x00000000c00190ba                IDE::IDE()
                0x00000000c00190ba                IDE::IDE()
                0x00000000c00190ee                IDE::prepareInterrupt(unsigned char)
                0x00000000c0019100                selectDrive(unsigned char, unsigned char)
                0x00000000c0019102                IDE::getBase(unsigned char)
                0x00000000c0019114                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c00191d4                IDE::read(unsigned char, unsigned char)
                0x00000000c0019282                IDE::waitInterrupt(unsigned char)
                0x00000000c00192ea                ideChannel0IRQHandler(regs*, void*)
                0x00000000c0019306                ideChannel1IRQHandler(regs*, void*)
                0x00000000c0019322                IDE::enableIRQs(unsigned char, bool)
                0x00000000c0019368                IDE::open(int, int, void*)
                0x00000000c0019776                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0019842                IDE::detect()
                0x00000000c0019b02                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019bb2                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019c10      0x32a hw/diskctrl/satabus.32
                0x00000000c0019c10                SATABus::close(int, int, void*)
                0x00000000c0019c14                SATABus::detect()
                0x00000000c0019c16                SATABus::SATABus()
                0x00000000c0019c16                SATABus::SATABus()
                0x00000000c0019c9c                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019cce                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d16                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d36                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019d60                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019e70                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019f1a                SATABus::open(int, int, void*)
 .text          0x00000000c0019f3a      0x5f4 hw/diskphys/ata.32
                0x00000000c0019f3a                ATA::close(int, int, void*)
                0x00000000c0019f5e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019f60                ATA::ATA()
                0x00000000c0019f60                ATA::ATA()
                0x00000000c0019f8e                ATA::flush(bool)
                0x00000000c0019fd8                ATA::readyForCommand()
                0x00000000c001a024                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a3a0                ATA::read(unsigned long long, int, void*)
                0x00000000c001a3ec                ATA::write(unsigned long long, int, void*)
                0x00000000c001a438                ATA::detectCHS()
                0x00000000c001a462                ATA::open(int, int, void*)
 .text          0x00000000c001a52e      0x60e hw/diskphys/atapi.32
                0x00000000c001a52e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a534                ATAPI::close(int, int, void*)
                0x00000000c001a558                ATAPI::ATAPI()
                0x00000000c001a558                ATAPI::ATAPI()
                0x00000000c001a586                ATAPI::readyForCommand()
                0x00000000c001a5d8                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a898                ATAPI::diskRemoved()
                0x00000000c001a8d2                ATAPI::eject()
                0x00000000c001a91a                ATAPI::diskInserted()
                0x00000000c001a926                ATAPI::detectMedia()
                0x00000000c001a9e2                ATAPI::open(int, int, void*)
                0x00000000c001aac2                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001ab3c      0x402 hw/diskphys/sata.32
                0x00000000c001ab3c                SATA::close(int, int, void*)
                0x00000000c001ab60                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001ab62                SATA::open(int, int, void*)
                0x00000000c001ac0c                SATA::SATA()
                0x00000000c001ac0c                SATA::SATA()
                0x00000000c001ac3a                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ae86                SATA::read(unsigned long long, int, void*)
                0x00000000c001aed2                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001af3e      0x5f5 hw/diskphys/satapi.32
                0x00000000c001af3e                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001af44                SATAPI::close(int, int, void*)
                0x00000000c001af68                SATAPI::SATAPI()
                0x00000000c001af68                SATAPI::SATAPI()
                0x00000000c001af96                SATAPI::diskRemoved()
                0x00000000c001af98                SATAPI::diskInserted()
                0x00000000c001afb4                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b290                SATAPI::eject()
                0x00000000c001b2cc                SATAPI::detectMedia()
                0x00000000c001b2f2                SATAPI::open(int, int, void*)
                0x00000000c001b3f2                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001b533        0x1 
 .text          0x00000000c001b534      0x455 hw/intctrl/apic.32
                0x00000000c001b534                IOAPIC::close(int, int, void*)
                0x00000000c001b53a                apicGetBase()
                0x00000000c001b57c                IOAPIC::IOAPIC()
                0x00000000c001b57c                IOAPIC::IOAPIC()
                0x00000000c001b5a4                apicOpen()
                0x00000000c001b70a                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b73c                IOAPIC::read(int)
                0x00000000c001b764                IOAPIC::open(int, int, void*)
                0x00000000c001b858                IOAPIC::write(int, int)
                0x00000000c001b884                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b989        0x3 
 .text          0x00000000c001b98c       0xf0 hw/timer/apictimer.32
                0x00000000c001b98c                APICTimer::close(int, int, void*)
                0x00000000c001b994                apicTimerHandler(regs*, void*)
                0x00000000c001b9bc                APICTimer::open(int, int, void*)
                0x00000000c001ba2c                APICTimer::write(int)
                0x00000000c001ba54                APICTimer::APICTimer()
                0x00000000c001ba54                APICTimer::APICTimer()
 .text          0x00000000c001ba7c      0x1aa hw/timer/pit.32
                0x00000000c001ba7c                PIT::write(int)
                0x00000000c001bb00                pitHandler(regs*, void*)
                0x00000000c001bb24                PIT::open(int, int, void*)
                0x00000000c001bb74                PIT::close(int, int, void*)
                0x00000000c001bba4                PIT::PIT()
                0x00000000c001bba4                PIT::PIT()
 *fill*         0x00000000c001bc26        0xa 
 .text          0x00000000c001bc30       0x83 arch/i386/avx.32
                0x00000000c001bc30                avxDetect
                0x00000000c001bc5a                avxSave
                0x00000000c001bc6b                avxLoad
                0x00000000c001bc7c                avxInit
                0x00000000c001bc9e                avxClose
                0x00000000c001bc9f                wouldSheSayYes
 *fill*         0x00000000c001bcb3        0xd 
 .text          0x00000000c001bcc0      0x1d6 arch/i386/interrupt.32
                0x00000000c001bcc0                isr0
                0x00000000c001bcd0                isr1
                0x00000000c001bcda                isr2
                0x00000000c001bce4                isr3
                0x00000000c001bcee                isr4
                0x00000000c001bcf8                isr5
                0x00000000c001bd02                isr6
                0x00000000c001bd0c                isr7
                0x00000000c001bd16                isr8
                0x00000000c001bd1e                isr9
                0x00000000c001bd28                isr10
                0x00000000c001bd30                isr11
                0x00000000c001bd38                isr12
                0x00000000c001bd40                isr13
                0x00000000c001bd48                isr14
                0x00000000c001bd50                isr15
                0x00000000c001bd5a                isr16
                0x00000000c001bd64                isr17
                0x00000000c001bd6e                isr18
                0x00000000c001bd78                irq3
                0x00000000c001bd82                irq4
                0x00000000c001bd8c                irq5
                0x00000000c001bd96                irq6
                0x00000000c001bda0                irq7
                0x00000000c001bdaa                irq8
                0x00000000c001bdb4                irq9
                0x00000000c001bdbe                irq10
                0x00000000c001bdc8                irq11
                0x00000000c001bdd2                irq12
                0x00000000c001bddc                irq13
                0x00000000c001bde6                irq14
                0x00000000c001bdf0                irq15
                0x00000000c001bdfa                irq1
                0x00000000c001be01                irq2
                0x00000000c001be08                isr96
                0x00000000c001be0f                irq0
                0x00000000c001be14                int_common_stub
                0x00000000c001be14                syscall_common_stub
                0x00000000c001be46                irq16
                0x00000000c001be50                irq17
                0x00000000c001be5a                irq18
                0x00000000c001be64                irq19
                0x00000000c001be6e                irq20
                0x00000000c001be78                irq21
                0x00000000c001be82                irq22
                0x00000000c001be8c                irq23
 *fill*         0x00000000c001be96        0xa 
 .text          0x00000000c001bea0       0x10 arch/i386/rdrand.32
                0x00000000c001bea0                i386GetRDRAND
 .text          0x00000000c001beb0       0x39 arch/i386/sse.32
                0x00000000c001beb0                absolutelyNoChanceInHell
                0x00000000c001beb0                sseDetect
                0x00000000c001bec8                sseSave
                0x00000000c001bed0                sseLoad
                0x00000000c001bed8                sseInit
                0x00000000c001bee8                sseClose
 *fill*         0x00000000c001bee9        0x7 
 .text          0x00000000c001bef0       0x49 arch/i386/x87.32
                0x00000000c001bef6                x87Detect
                0x00000000c001bf11                x87Save
                0x00000000c001bf18                x87Load
                0x00000000c001bf1f                x87Init
                0x00000000c001bf38                x87Close
 *fill*         0x00000000c001bf39        0x3 
 .text          0x00000000c001bf3c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001bf61        0x0 crtn.32
 *fill*         0x00000000c001bf61        0x3 
 .text          0x00000000c001bf64      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001bf64                __divdi3
 *fill*         0x00000000c001c0af        0x1 
 .text          0x00000000c001c0b0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001c0b0                __moddi3
 *fill*         0x00000000c001c22e        0x2 
 .text          0x00000000c001c230       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c230                __udivdi3
 *fill*         0x00000000c001c32f        0x1 
 .text          0x00000000c001c330      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c330                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c450        0x0
 .iplt          0x00000000c001c450        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c44a        0xf
 .init          0x00000000c001c44a        0x3 crti.32
                0x00000000c001c44a                _init
 .init          0x00000000c001c44d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c452        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c457        0x2 crtn.32

.fini           0x00000000c001c459        0xa
 .fini          0x00000000c001c459        0x3 crti.32
                0x00000000c001c459                _fini
 .fini          0x00000000c001c45c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c461        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c464       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c464       0x23 core/computer.32
                0x00000000c001c464                Computer::~Computer()
                0x00000000c001c464                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c488       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c488       0x2a core/computer.32
                0x00000000c001c488                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c4b2       0x21
 .text._Z10idleCommonv
                0x00000000c001c4b2       0x21 core/idle.32
                0x00000000c001c4b2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c4d4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c4d4        0x2 core/unixfile.32
                0x00000000c001c4d4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c4d4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c4d6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c4d6       0x42 core/unixfile.32
                0x00000000c001c4d6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c4d6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c518       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c518       0xd3 core/unixfile.32
                0x00000000c001c518                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c5ec        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c5ec        0x7 core/unixfile.32
                0x00000000c001c5ec                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c5f4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c5f4       0xa1 core/unixfile.32
                0x00000000c001c5f4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c696        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c696        0x8 core/unixfile.32
                0x00000000c001c696                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c69e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c69e       0x1a hal/device.32
                0x00000000c001c69e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c69e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c6b8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c6b8       0x2a hal/device.32
                0x00000000c001c6b8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c6e2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c6e2       0xdc hal/device.32
                0x00000000c001c6e2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c7be       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c7be       0x42 hal/device.32
                0x00000000c001c7be                LinkedList<Device>::LinkedList()
                0x00000000c001c7be                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c800       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c800       0x1c hal/timer.32
                0x00000000c001c800                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c81c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c81c        0x7 hal/timer.32
                0x00000000c001c81c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c824       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c824       0xb8 hal/timer.32
                0x00000000c001c824                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c8dc       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c8dc       0xda hal/timer.32
                0x00000000c001c8dc                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c9b8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c9b8       0x23 hw/acpi.32
                0x00000000c001c9b8                ACPI::~ACPI()
                0x00000000c001c9b8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c9dc       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c9dc       0x2a hw/acpi.32
                0x00000000c001c9dc                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ca08        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ca08        0x2 hw/acpi.32
                0x00000000c001ca08                LinkedList<Device>::~LinkedList()
                0x00000000c001ca08                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ca0c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ca0c       0x1c hw/acpi.32
                0x00000000c001ca0c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ca28        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ca28        0x7 hw/acpi.32
                0x00000000c001ca28                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ca30       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ca30       0xb8 hw/acpi.32
                0x00000000c001ca30                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001cae8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001cae8       0x23 hw/cpu.32
                0x00000000c001cae8                CPU::~CPU()
                0x00000000c001cae8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001cb0c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001cb0c       0x2a hw/cpu.32
                0x00000000c001cb0c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cb38        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001cb38        0x2 thr/prcssthr.32
                0x00000000c001cb38                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001cb38                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cb3c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001cb3c       0x49 thr/prcssthr.32
                0x00000000c001cb3c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001cb3c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb88       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001cb88       0x42 thr/prcssthr.32
                0x00000000c001cb88                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001cb88                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cbcc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001cbcc        0x8 thr/prcssthr.32
                0x00000000c001cbcc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001cbd4       0x23
 .text._ZN3PCID2Ev
                0x00000000c001cbd4       0x23 hw/bus/pci.32
                0x00000000c001cbd4                PCI::~PCI()
                0x00000000c001cbd4                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001cbf8       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001cbf8       0x2a hw/bus/pci.32
                0x00000000c001cbf8                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001cc22       0x23
 .text._ZN3IDED2Ev
                0x00000000c001cc22       0x23 hw/diskctrl/ide.32
                0x00000000c001cc22                IDE::~IDE()
                0x00000000c001cc22                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001cc46       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001cc46       0x2a hw/diskctrl/ide.32
                0x00000000c001cc46                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001cc70       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001cc70       0x23 hw/diskctrl/satabus.32
                0x00000000c001cc70                SATABus::~SATABus()
                0x00000000c001cc70                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001cc94       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001cc94       0x2a hw/diskctrl/satabus.32
                0x00000000c001cc94                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001ccbe       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001ccbe       0x23 hw/diskphys/ata.32
                0x00000000c001ccbe                ATA::~ATA()
                0x00000000c001ccbe                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001cce2       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001cce2       0x2a hw/diskphys/ata.32
                0x00000000c001cce2                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cd0c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cd0c       0x23 hw/diskphys/atapi.32
                0x00000000c001cd0c                ATAPI::~ATAPI()
                0x00000000c001cd0c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001cd30       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001cd30       0x2a hw/diskphys/atapi.32
                0x00000000c001cd30                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cd5a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cd5a       0x23 hw/diskphys/sata.32
                0x00000000c001cd5a                SATA::~SATA()
                0x00000000c001cd5a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cd7e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cd7e       0x2a hw/diskphys/sata.32
                0x00000000c001cd7e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cda8       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cda8       0x23 hw/diskphys/satapi.32
                0x00000000c001cda8                SATAPI::~SATAPI()
                0x00000000c001cda8                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001cdcc       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001cdcc       0x2a hw/diskphys/satapi.32
                0x00000000c001cdcc                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cdf6       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cdf6       0x23 hw/intctrl/apic.32
                0x00000000c001cdf6                IOAPIC::~IOAPIC()
                0x00000000c001cdf6                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001ce1a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001ce1a       0x2a hw/intctrl/apic.32
                0x00000000c001ce1a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ce44       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ce44       0x23 hw/timer/apictimer.32
                0x00000000c001ce44                APICTimer::~APICTimer()
                0x00000000c001ce44                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ce68       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ce68       0x2a hw/timer/apictimer.32
                0x00000000c001ce68                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ce94       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ce94       0x23 hw/timer/pit.32
                0x00000000c001ce94                PIT::~PIT()
                0x00000000c001ce94                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ceb8       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ceb8       0x2a hw/timer/pit.32
                0x00000000c001ceb8                PIT::~PIT()

.rodata         0x00000000c001cee2     0x2856
                0x00000000c001cee2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001cee2        0x2 
 .ctors         0x00000000c001cee4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001cee8        0x4 core/unixfile.32
 .ctors         0x00000000c001ceec        0x4 thr/prcssthr.32
 .ctors         0x00000000c001cef0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cef4                end_ctors = .
                0x00000000c001cef4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001cef4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001cef8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cef8                __DTOR_END__
                0x00000000c001cefc                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001cefc        0x4 
 .rodata        0x00000000c001cf00      0x101 acpica/utclib.32
                0x00000000c001cf00                AcpiGbl_Ctypes
 *fill*         0x00000000c001d001        0x3 
 .rodata        0x00000000c001d004       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001d01c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001d066       0x1a 
 .rodata        0x00000000c001d080       0xed fs/fat/ff.32
 *fill*         0x00000000c001d16d       0x13 
 .rodata        0x00000000c001d180      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d580       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d591       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001d5da      0x115 core/computer.32
 *fill*         0x00000000c001d6ef        0x1 
 .rodata.str1.4
                0x00000000c001d6f0       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d758       0x2c core/computer.32
                0x00000000c001d758                vtable for Computer
 .rodata.str1.4
                0x00000000c001d784       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d7b4        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d7c0       0x17 core/main.32
 *fill*         0x00000000c001d7d7        0x1 
 .rodata.str1.4
                0x00000000c001d7d8       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d87d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d8d5       0x39 core/pipe.32
 *fill*         0x00000000c001d90e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d910       0x1c core/pipe.32
                0x00000000c001d910                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d92c       0x69 core/terminal.32
 *fill*         0x00000000c001d995        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d998       0x1c core/terminal.32
                0x00000000c001d998                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d9b4       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d9d6       0x15 core/unixfile.32
 *fill*         0x00000000c001d9eb        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d9ec       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001da37        0x8 core/unixfile.32
 *fill*         0x00000000c001da3f        0x1 
 .rodata.str1.4
                0x00000000c001da40       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001da60       0x1c core/unixfile.32
                0x00000000c001da60                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001da7c       0x1c core/unixfile.32
                0x00000000c001da7c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001da98      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dbff      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001dd06       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001dd39       0x11 dbg/kconsole.32
 *fill*         0x00000000c001dd39        0x3 
 .rodata        0x00000000c001dd3c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001de8c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001de8c       0x68 fs/vfs.32
                0x00000000c001de8c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001def4       0x1c fs/vfs.32
                0x00000000c001def4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001df10       0x1c fs/vfs.32
                0x00000000c001df10                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001df2c       0x2c hal/bus.32
                0x00000000c001df2c                vtable for Bus
 .rodata.str1.1
                0x00000000c001df58       0x1e hal/clock.32
 *fill*         0x00000000c001df76        0x2 
 .rodata._ZTV5Clock
                0x00000000c001df78       0x3c hal/clock.32
                0x00000000c001df78                vtable for Clock
 *fill*         0x00000000c001dfb4        0xc 
 .rodata        0x00000000c001dfc0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001dff0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001e048       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001e048       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001e048       0x2c hal/device.32
                0x00000000c001e048                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001e074       0x2c hal/device.32
                0x00000000c001e074                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001e0a0       0x2c hal/diskctrl.32
                0x00000000c001e0a0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001e0cc       0x38 hal/diskphys.32
                0x00000000c001e0cc                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001e104       0x3e hal/intctrl.32
 *fill*         0x00000000c001e142        0x2 
 .rodata.str1.4
                0x00000000c001e144       0x5d hal/intctrl.32
 .rodata        0x00000000c001e1a1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e1f4       0x34 hal/keybrd.32
                0x00000000c001e1f4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e228       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e26c       0x2c hal/logidisk.32
                0x00000000c001e26c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e298       0x2c hal/mouse.32
                0x00000000c001e298                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e2c4        0xb hal/partition.32
 *fill*         0x00000000c001e2cf        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e2d0       0x44 hal/serial.32
                0x00000000c001e2d0                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e314       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e314        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e314       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e314       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e314       0x30 hal/timer.32
                0x00000000c001e314                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e344       0x10 hal/vcache.32
                0x00000000c001e344                vtable for VCache
 .rodata.str1.1
                0x00000000c001e354       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e3bc       0x48 hal/video.32
                0x00000000c001e3bc                vtable for Video
 .rodata.str1.4
                0x00000000c001e404       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e49f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e5db       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e5db        0x8 hw/acpi.32
 *fill*         0x00000000c001e5db        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e5dc       0x2c hw/acpi.32
                0x00000000c001e5dc                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e608      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e775        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e778       0x2c hw/cpu.32
                0x00000000c001e778                vtable for CPU
 .rodata.str1.1
                0x00000000c001e7a4       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e7e0       0x3d krnl/panic.32
                                         0x3e (size before relaxing)
 *fill*         0x00000000c001e81d        0x3 
 .rodata.str1.4
                0x00000000c001e820       0x3a krnl/panic.32
 .rodata.str1.1
                0x00000000c001e85a       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e89f        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c001e8a9       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e8f1       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c001e945       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c001e971      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001eb3d       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001eb94      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001eca0       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001eca0       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001eca0       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001eca0        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001eca0       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001ed40       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001ed70      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001ee7e        0x2 
 .rodata.str1.4
                0x00000000c001ee80       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001eef3       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001ef08       0x3c arch/i386/rtc.32
                0x00000000c001ef08                vtable for RTC
 .rodata.str1.1
                0x00000000c001ef44       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001ef85        0x3 
 .rodata._ZTV3FAT
                0x00000000c001ef88       0x68 fs/fat/vfslink.32
                0x00000000c001ef88                vtable for FAT
 .rodata.str1.1
                0x00000000c001eff0       0x76 fs/iso9660/vfslink.32
 *fill*         0x00000000c001f066        0x2 
 .rodata._ZTV7ISO9660
                0x00000000c001f068       0x68 fs/iso9660/vfslink.32
                0x00000000c001f068                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001f0d0       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001f114       0x34 hal/sound/sndcard.32
                0x00000000c001f114                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f148       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f187       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f1bf       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f260       0x2c hw/bus/pci.32
                0x00000000c001f260                vtable for PCI
 .rodata.str1.1
                0x00000000c001f28c       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f313        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f314       0x2c hw/diskctrl/ide.32
                0x00000000c001f314                vtable for IDE
 .rodata.str1.4
                0x00000000c001f340       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f364       0x2c hw/diskctrl/satabus.32
                0x00000000c001f364                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f390       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f3a2        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f3a4       0x38 hw/diskphys/ata.32
                0x00000000c001f3a4                vtable for ATA
 .rodata.str1.1
                0x00000000c001f3dc        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f3e9        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f3ec       0x38 hw/diskphys/atapi.32
                0x00000000c001f3ec                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f424       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f4a0       0x38 hw/diskphys/sata.32
                0x00000000c001f4a0                vtable for SATA
 .rodata.str1.1
                0x00000000c001f4d8      0x158 hw/diskphys/satapi.32
                                        0x165 (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f630       0x38 hw/diskphys/satapi.32
                0x00000000c001f630                vtable for SATAPI
 .rodata        0x00000000c001f668        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f670       0x2c hw/intctrl/apic.32
                0x00000000c001f670                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f69c       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f6b7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f6b8       0x30 hw/timer/apictimer.32
                0x00000000c001f6b8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f6e8       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f705        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f708       0x30 hw/timer/pit.32
                0x00000000c001f708                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f738      0x25d
 *(.data)
 .data          0x00000000c001f738        0x0 crti.32
 .data          0x00000000c001f738        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f738                __dso_handle
 .data          0x00000000c001f73c        0x0 acpica/utclib.32
 .data          0x00000000c001f73c        0x0 core/malloc.32
 .data          0x00000000c001f73c        0x0 libk/ctype.32
 .data          0x00000000c001f73c        0x0 libk/string.32
 .data          0x00000000c001f73c        0x0 fs/fat/diskio.32
 .data          0x00000000c001f73c        0x0 fs/fat/ff.32
 .data          0x00000000c001f73c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f73c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f73c        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f73c        0x0 compat/inlines.32
 .data          0x00000000c001f73c        0x0 compat/resolve.32
 .data          0x00000000c001f73c        0x0 core/computer.32
 .data          0x00000000c001f73c        0x0 core/gdt.32
 .data          0x00000000c001f73c        0x0 core/idle.32
 .data          0x00000000c001f73c        0x0 core/idt.32
 .data          0x00000000c001f73c        0x4 core/kheap.32
 .data          0x00000000c001f740      0x142 core/main.32
                0x00000000c001f740                titleScreen
 *fill*         0x00000000c001f882        0x2 
 .data          0x00000000c001f884        0x4 core/physmgr.32
                0x00000000c001f884                Phys::bitmap
 .data          0x00000000c001f888        0x0 core/pipe.32
 *fill*         0x00000000c001f888       0x18 
 .data          0x00000000c001f8a0       0x60 core/terminal.32
                0x00000000c001f8a0                VgaText::hiddenOut
                0x00000000c001f8c0                ansiToVGAMappings
 .data          0x00000000c001f900        0x0 core/tss.32
 .data          0x00000000c001f900        0x4 core/unixfile.32
                0x00000000c001f900                UnixFile::nextFd
 .data          0x00000000c001f904       0x15 core/virtmgr.32
                0x00000000c001f904                Virt::pageAllocPtr
                0x00000000c001f908                Virt::bitmap
                0x00000000c001f90c                Virt::swapfileSectorsPerPage
                0x00000000c001f910                Virt::swapfileLength
                0x00000000c001f914                Virt::swapfileSector
                0x00000000c001f918                Virt::swapfileDrive
 *fill*         0x00000000c001f919        0x3 
 .data          0x00000000c001f91c        0x4 coreobjs/c++.32
                0x00000000c001f91c                __stack_chk_guard
 .data          0x00000000c001f920        0x0 dbg/kconsole.32
 .data          0x00000000c001f920        0x0 fs/vfs.32
 .data          0x00000000c001f920        0x0 hal/bus.32
 .data          0x00000000c001f920        0x0 hal/buzzer.32
 .data          0x00000000c001f920        0x0 hal/clock.32
 .data          0x00000000c001f920        0x0 hal/device.32
 .data          0x00000000c001f920        0x0 hal/diskctrl.32
 .data          0x00000000c001f920        0x0 hal/diskphys.32
 .data          0x00000000c001f920        0x0 hal/fpu.32
 .data          0x00000000c001f920        0x0 hal/intctrl.32
 .data          0x00000000c001f920        0x0 hal/keybrd.32
 .data          0x00000000c001f920        0x0 hal/logidisk.32
 .data          0x00000000c001f920        0x0 hal/mouse.32
 .data          0x00000000c001f920        0x0 hal/partition.32
 .data          0x00000000c001f920        0x0 hal/serial.32
 .data          0x00000000c001f920        0x0 hal/timer.32
 .data          0x00000000c001f920        0x0 hal/vcache.32
 .data          0x00000000c001f920        0x0 hal/video.32
 .data          0x00000000c001f920       0x10 hw/acpi.32
                0x00000000c001f920                legacyIRQRemaps
 .data          0x00000000c001f930        0x4 hw/cpu.32
                0x00000000c001f930                lastCode
 *fill*         0x00000000c001f934        0xc 
 .data          0x00000000c001f940       0x4d krnl/env.32
                0x00000000c001f940                defaultSysEnv
 .data          0x00000000c001f98d        0x0 krnl/panic.32
 .data          0x00000000c001f98d        0x0 krnl/powctrl.32
 .data          0x00000000c001f98d        0x0 reg/registry.32
 .data          0x00000000c001f98d        0x0 sys/exit.32
 .data          0x00000000c001f98d        0x0 sys/getcwd.32
 .data          0x00000000c001f98d        0x0 sys/getpid.32
 .data          0x00000000c001f98d        0x0 sys/getramdata.32
 .data          0x00000000c001f98d        0x0 sys/getvgaptr.32
 .data          0x00000000c001f98d        0x0 sys/loaddll.32
 .data          0x00000000c001f98d        0x0 sys/read.32
 .data          0x00000000c001f98d        0x0 sys/sbrk.32
 .data          0x00000000c001f98d        0x0 sys/sc_eject.32
 .data          0x00000000c001f98d        0x0 sys/setcwd.32
 .data          0x00000000c001f98d        0x0 sys/settime.32
 .data          0x00000000c001f98d        0x0 sys/syscalls.32
 .data          0x00000000c001f98d        0x0 sys/timezone.32
 .data          0x00000000c001f98d        0x0 sys/write.32
 .data          0x00000000c001f98d        0x0 sys/wsbe.32
 .data          0x00000000c001f98d        0x0 sys/yield.32
 .data          0x00000000c001f98d        0x0 thr/elf.32
 *fill*         0x00000000c001f98d        0x3 
 .data          0x00000000c001f990        0x4 thr/prcssthr.32
                0x00000000c001f990                Thr::nextPID
 .data          0x00000000c001f994        0x0 vm86/vm8086.32
 .data          0x00000000c001f994        0x0 arch/i386/hal.32
 .data          0x00000000c001f994        0x0 arch/i386/pic.32
 .data          0x00000000c001f994        0x0 arch/i386/rtc.32
 .data          0x00000000c001f994        0x0 arch/i386/vga.32
 .data          0x00000000c001f994        0x0 fs/fat/vfslink.32
 .data          0x00000000c001f994        0x0 fs/iso9660/helper.32
 .data          0x00000000c001f994        0x1 fs/iso9660/vfslink.32
                0x00000000c001f994                recentDriveletter
 .data          0x00000000c001f995        0x0 hal/sound/sndcard.32
 .data          0x00000000c001f995        0x0 hal/sound/sndport.32
 .data          0x00000000c001f995        0x0 hw/bus/isa.32
 .data          0x00000000c001f995        0x0 hw/bus/pci.32
 .data          0x00000000c001f995        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001f995        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001f995        0x0 hw/diskphys/ata.32
 .data          0x00000000c001f995        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001f995        0x0 hw/diskphys/sata.32
 .data          0x00000000c001f995        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001f995        0x0 hw/intctrl/apic.32
 .data          0x00000000c001f995        0x0 hw/timer/apictimer.32
 .data          0x00000000c001f995        0x0 hw/timer/pit.32
 .data          0x00000000c001f995        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001f995        0x0 crtn.32
 .data          0x00000000c001f995        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001f995        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001f995        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001f995        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001f998        0x0
 .got           0x00000000c001f998        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001f998        0x0
 .got.plt       0x00000000c001f998        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001f998        0x0
 .igot.plt      0x00000000c001f998        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001f998        0x0
 .tm_clone_table
                0x00000000c001f998        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001f998        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001f995      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001f995        0x3 
 .eh_frame      0x00000000c001f998        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001f998        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001f998       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001f9f0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001fa30       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fa9c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001fb20        0x0
 .rel.got       0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001fb20        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001fb20     0x4da8
                0x00000000c001fb20                sbss = .
 *(COMMON)
 *fill*         0x00000000c001fb20        0x0 
 COMMON         0x00000000c001fb20       0xa0 fs/iso9660/iso9660.32
                0x00000000c001fb20                dcache
                0x00000000c001fb60                cdDriveLetter
                0x00000000c001fb80                icache
 *(.bss)
 .bss           0x00000000c001fbc0        0x0 crti.32
 .bss           0x00000000c001fbc0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001fbe0        0x4 acpica/utclib.32
 *fill*         0x00000000c001fbe4       0x1c 
 .bss           0x00000000c001fc00      0x378 core/malloc.32
 .bss           0x00000000c001ff78        0x0 libk/ctype.32
 .bss           0x00000000c001ff78        0x0 libk/string.32
 .bss           0x00000000c001ff78        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001ff78        0x8 
 .bss           0x00000000c001ff80       0x88 fs/fat/ff.32
 .bss           0x00000000c0020008        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0020008        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0020008       0x18 
 .bss           0x00000000c0020020      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c00209b8        0x0 compat/inlines.32
 .bss           0x00000000c00209b8        0x0 compat/resolve.32
 .bss           0x00000000c00209b8        0x6 core/computer.32
                0x00000000c00209b8                Krnl::computer
                0x00000000c00209bc                Krnl::preemptionOn
                0x00000000c00209bd                Krnl::schedulingOn
 *fill*         0x00000000c00209be        0x2 
 .bss           0x00000000c00209c0        0x6 core/gdt.32
                0x00000000c00209c0                gdtDescr
 .bss           0x00000000c00209c6        0x0 core/idle.32
 *fill*         0x00000000c00209c6        0x2 
 .bss           0x00000000c00209c8        0x6 core/idt.32
                0x00000000c00209c8                idtDescr
 .bss           0x00000000c00209ce        0x0 core/kheap.32
 *fill*         0x00000000c00209ce        0x2 
 .bss           0x00000000c00209d0        0x4 core/main.32
                0x00000000c00209d0                sysBootSettings
 .bss           0x00000000c00209d4       0x29 core/physmgr.32
                0x00000000c00209d4                Phys::forbidEvictions
                0x00000000c00209d8                Phys::currentPagePointer
                0x00000000c00209dc                Phys::highestMem
                0x00000000c00209e0                Phys::oldPercent
                0x00000000c00209e4                Phys::usedPages
                0x00000000c00209e8                Phys::usablePages
                0x00000000c00209ec                Phys::dmaUsage
 .bss           0x00000000c00209fd        0x0 core/pipe.32
 *fill*         0x00000000c00209fd        0x3 
 .bss           0x00000000c0020a00        0x9 core/terminal.32
                0x00000000c0020a00                terminalCycle
                0x00000000c0020a04                activeTerminal
                0x00000000c0020a08                VgaText::graphicMode
 *fill*         0x00000000c0020a09        0x1 
 .bss           0x00000000c0020a0a        0x2 core/tss.32
                0x00000000c0020a0a                doubleFaultSelector
 *fill*         0x00000000c0020a0c       0x14 
 .bss           0x00000000c0020a20       0x84 core/unixfile.32
                0x00000000c0020a20                sfileLpt
                0x00000000c0020a60                sfileCom
                0x00000000c0020a84                sfileNul
                0x00000000c0020a88                sfilePnt
                0x00000000c0020a8c                sfileAux
                0x00000000c0020a90                sfileCon
                0x00000000c0020a94                initialFilesAdded
                0x00000000c0020a98                unixFileLinkedList
 .bss           0x00000000c0020aa4       0x10 core/virtmgr.32
                0x00000000c0020aa4                twswaps
                0x00000000c0020aa8                swapBalance
                0x00000000c0020aac                Virt::swapfileBitmap
                0x00000000c0020ab0                firstVAS
 .bss           0x00000000c0020ab4        0x0 coreobjs/c++.32
 .bss           0x00000000c0020ab4        0x0 dbg/kconsole.32
 .bss           0x00000000c0020ab4        0x4 fs/vfs.32
                0x00000000c0020ab4                installedFilesystems
 .bss           0x00000000c0020ab8        0x0 hal/bus.32
 .bss           0x00000000c0020ab8        0x0 hal/buzzer.32
 .bss           0x00000000c0020ab8        0x8 hal/clock.32
                0x00000000c0020ab8                User::dstOn
                0x00000000c0020ab9                User::timezoneHalfHourOffset
                0x00000000c0020abc                User::timezoneHourOffset
 .bss           0x00000000c0020ac0        0x0 hal/device.32
 .bss           0x00000000c0020ac0        0x0 hal/diskctrl.32
 .bss           0x00000000c0020ac0        0x0 hal/diskphys.32
 .bss           0x00000000c0020ac0        0x0 hal/fpu.32
 .bss           0x00000000c0020ac0     0x2000 hal/intctrl.32
                0x00000000c0020ac0                INT_contexts
                0x00000000c0021ac0                INT_handlers
 .bss           0x00000000c0022ac0      0x429 hal/keybrd.32
                0x00000000c0022ac0                keyboardWaitingTaskList
                0x00000000c0022ac4                keyboardSetupYet
                0x00000000c0022ac8                guiKeyboardHandler
                0x00000000c0022ae0                keystates
 *fill*         0x00000000c0022ee9       0x17 
 .bss           0x00000000c0022f00       0x88 hal/logidisk.32
                0x00000000c0022f00                diskAssignments
                0x00000000c0022f20                disks
 .bss           0x00000000c0022f88        0x4 hal/mouse.32
                0x00000000c0022f88                guiMouseHandler
 .bss           0x00000000c0022f8c        0x0 hal/partition.32
 .bss           0x00000000c0022f8c        0x0 hal/serial.32
 .bss           0x00000000c0022f8c        0x4 hal/timer.32
                0x00000000c0022f8c                milliTenthsSinceBoot
 .bss           0x00000000c0022f90        0x0 hal/vcache.32
 .bss           0x00000000c0022f90        0x4 hal/video.32
                0x00000000c0022f90                screen
 *fill*         0x00000000c0022f94        0xc 
 .bss           0x00000000c0022fa0      0x480 hw/acpi.32
                0x00000000c0022fa0                systemSleepFunction
                0x00000000c0022fa4                systemResetFunction
                0x00000000c0022fa8                systemShutdownFunction
                0x00000000c0022fac                nextACPITable
                0x00000000c0022fc0                acpiTables
                0x00000000c00231c0                usingXSDT
                0x00000000c00231c4                MADTpointer
                0x00000000c00231c8                RSDTpointer
                0x00000000c00231cc                RSDPpointer
                0x00000000c00231d0                nextAPICNMI
                0x00000000c00231e0                apicNMIInfo
                0x00000000c0023260                legacyIRQFlags
                0x00000000c0023280                ioapicDiscoveryNumber
                0x00000000c00232a0                ioapicFoundInMADT
                0x00000000c00232c0                ioapicAddresses
                0x00000000c0023340                ioapicGSIBase
                0x00000000c00233c0                processorDiscoveryNumber
                0x00000000c00233e0                matchingAPICID
                0x00000000c0023400                processorID
 .bss           0x00000000c0023420       0x10 hw/cpu.32
                0x00000000c0023420                lastD
                0x00000000c0023424                lastC
                0x00000000c0023428                lastB
                0x00000000c002342c                lastA
 .bss           0x00000000c0023430        0x8 krnl/env.32
                0x00000000c0023430                Krnl::userEnv
                0x00000000c0023434                Krnl::systemEnv
 .bss           0x00000000c0023438        0x9 krnl/panic.32
                0x00000000c0023438                Krnl::guiProgramFaultHandler
                0x00000000c002343c                Krnl::guiPanicHandler
                0x00000000c0023440                Krnl::kernelInPanic
 *fill*         0x00000000c0023441       0x1f 
 .bss           0x00000000c0023460       0x48 krnl/powctrl.32
                0x00000000c0023460                Krnl::powCtrlOnBattery
                0x00000000c0023480                Krnl::currentPowerSettings
                0x00000000c00234a4                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c00234a8        0x0 reg/registry.32
 .bss           0x00000000c00234a8        0x0 sys/exit.32
 .bss           0x00000000c00234a8        0x0 sys/getcwd.32
 .bss           0x00000000c00234a8        0x0 sys/getpid.32
 .bss           0x00000000c00234a8        0x0 sys/getramdata.32
 .bss           0x00000000c00234a8        0x0 sys/getvgaptr.32
 .bss           0x00000000c00234a8        0x0 sys/loaddll.32
 .bss           0x00000000c00234a8        0x0 sys/read.32
 .bss           0x00000000c00234a8        0x0 sys/sbrk.32
 .bss           0x00000000c00234a8        0x0 sys/sc_eject.32
 .bss           0x00000000c00234a8        0x0 sys/setcwd.32
 .bss           0x00000000c00234a8        0x0 sys/settime.32
 *fill*         0x00000000c00234a8       0x18 
 .bss           0x00000000c00234c0      0x200 sys/syscalls.32
                0x00000000c00234c0                systemCallHandlers
 .bss           0x00000000c00236c0        0x0 sys/timezone.32
 .bss           0x00000000c00236c0        0x0 sys/write.32
 .bss           0x00000000c00236c0        0x0 sys/wsbe.32
 .bss           0x00000000c00236c0        0x0 sys/yield.32
 .bss           0x00000000c00236c0      0x7a4 thr/elf.32
                0x00000000c00236c0                Thr::driverLookupNext
                0x00000000c00236e0                Thr::driverLookupLen
                0x00000000c00238e0                Thr::driverLookupAddr
                0x00000000c0023ae0                Thr::driverNameLookup
                0x00000000c0023ce0                Thr::kernelSymbols
                0x00000000c0023d60                Thr::kernelStringTable
                0x00000000c0023de0                Thr::kernelSymbolTable
                0x00000000c0023e60                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023e64        0x4 
 .bss           0x00000000c0023e68       0x68 thr/prcssthr.32
                0x00000000c0023e68                cleanerThread
                0x00000000c0023e6c                weNeedTheCleanerToNotBlock
                0x00000000c0023e70                retValLockStuff
                0x00000000c0023e74                retValSchedLock
                0x00000000c0023e78                lockStuffLock
                0x00000000c0023e7c                schedulerLock
                0x00000000c0023e80                taskSwitchesPostponedFlag
                0x00000000c0023e84                postponeTaskSwitchesCounter
                0x00000000c0023e88                irqDisableCounter
                0x00000000c0023e8c                terminatedTaskList
                0x00000000c0023e98                sleepingTaskList
                0x00000000c0023ea4                taskList
                0x00000000c0023eb0                kernelProcess
 *fill*         0x00000000c0023ed0       0x10 
 .bss           0x00000000c0023ee0       0x40 vm86/vm8086.32
                0x00000000c0023ee0                Vm::vmRetV
                0x00000000c0023ee4                Vm::vmDone
                0x00000000c0023ee5                Vm::vmReady
                0x00000000c0023ee8                Vm::vm86Thread
                0x00000000c0023eec                Vm::vmToHostCommsPtr
                0x00000000c0023f00                Vm::vmToHostComms
 .bss           0x00000000c0023f20       0x14 arch/i386/hal.32
                0x00000000c0023f20                apic
                0x00000000c0023f24                fpuOwner
                0x00000000c0023f28                coproLoadFunc
                0x00000000c0023f2c                coproSaveFunc
                0x00000000c0023f30                gpFaultIntercept
 .bss           0x00000000c0023f34        0x0 arch/i386/pic.32
 .bss           0x00000000c0023f34        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023f36        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023f36        0xa 
 .bss           0x00000000c0023f40       0xf0 fs/fat/vfslink.32
                0x00000000c0023f40                FAT::fats
                0x00000000c0023f60                FAT::vfsToFatRemaps
                0x00000000c0023fe0                fatToVFSRemaps
 .bss           0x00000000c0024030        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0024030       0x10 
 .bss           0x00000000c0024040      0x820 fs/iso9660/vfslink.32
                0x00000000c0024040                iso9660Owner
                0x00000000c0024044                recentSector
                0x00000000c0024060                recentBuffer
 .bss           0x00000000c0024860        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0024860        0x0 hal/sound/sndport.32
 .bss           0x00000000c0024860        0x0 hw/bus/isa.32
 .bss           0x00000000c0024860        0xd hw/bus/pci.32
                0x00000000c0024860                thePCI
 .bss           0x00000000c002486d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002486d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002486d        0x3 
 .bss           0x00000000c0024870        0x8 hw/diskphys/ata.32
                0x00000000c0024870                ataSectorsWritten
                0x00000000c0024874                ataSectorsRead
 .bss           0x00000000c0024878        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024878        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0024878        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0024878        0x8 
 .bss           0x00000000c0024880       0x41 hw/intctrl/apic.32
                0x00000000c0024880                noOfIOAPICs
                0x00000000c00248a0                ioapics
                0x00000000c00248c0                IOAPICsSetupYet
 .bss           0x00000000c00248c1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00248c1        0x3 
 .bss           0x00000000c00248c4        0x4 hw/timer/pit.32
                0x00000000c00248c4                pitFreq
 .bss           0x00000000c00248c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00248c8        0x0 crtn.32
 .bss           0x00000000c00248c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00248c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00248c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00248c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00248c8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0029670                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
