Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c16a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002ff                asmQuickAcquireLock
                0x00000000c000031d                asmQuickReleaseLock
                0x00000000c0000329                asmAcquireLock
                0x00000000c000034a                asmReleaseLock
                0x00000000c000035d                loadGDT
                0x00000000c000037d                memcpy
 *fill*         0x00000000c0000382        0xe 
 .text          0x00000000c0000390      0x79e acpica/utclib.32
                0x00000000c0000390                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004d0                memset
                0x00000000c0000540                strlen
                0x00000000c0000570                strpbrk
                0x00000000c00005b0                strtok
                0x00000000c0000600                strcpy
                0x00000000c0000630                strncpy
                0x00000000c00006e0                strcmp
                0x00000000c0000730                strchr
                0x00000000c0000760                strncmp
                0x00000000c00007c0                strcat
                0x00000000c00007f0                strncat
                0x00000000c0000850                strstr
                0x00000000c00008b0                toupper
                0x00000000c00008d0                tolower
                0x00000000c00008f0                simple_strtoul
 .text          0x00000000c0000b2e      0xfad core/malloc.32
                0x00000000c0000c99                dlfree
                0x00000000c0000ff4                dlmalloc
                0x00000000c0001531                dlrealloc
                0x00000000c00016d4                dlmemalign
                0x00000000c00017f7                dlcalloc
                0x00000000c0001891                dlcfree
                0x00000000c0001896                dlindependent_calloc
                0x00000000c00018bb                dlindependent_comalloc
                0x00000000c00018d2                dlvalloc
                0x00000000c00018fd                dlpvalloc
                0x00000000c0001933                dlmalloc_trim
                0x00000000c0001940                dlmalloc_usable_size
                0x00000000c0001971                dlmallinfo
                0x00000000c0001a40                dlmalloc_stats
                0x00000000c0001a51                dlmallopt
 *fill*         0x00000000c0001adb        0x1 
 .text          0x00000000c0001adc      0x1f2 libk/ctype.32
                0x00000000c0001adc                isblank
                0x00000000c0001afc                iscntrl
                0x00000000c0001b1c                isdigit
                0x00000000c0001b38                islower
                0x00000000c0001b54                isspace
                0x00000000c0001b7c                isupper
                0x00000000c0001b98                isalpha
                0x00000000c0001bc8                isalnum
                0x00000000c0001bf8                ispunct
                0x00000000c0001c38                isgraph
                0x00000000c0001c68                isprint
                0x00000000c0001c90                isxdigit
 .text          0x00000000c0001cce        0x0 libk/string.32
 .text          0x00000000c0001cce       0x51 fs/fat/diskio.32
                0x00000000c0001cce                disk_status
                0x00000000c0001cd1                disk_initialize
                0x00000000c0001cd4                disk_read
                0x00000000c0001cea                disk_write
                0x00000000c0001d00                disk_ioctl
 .text          0x00000000c0001d1f     0x3d4b fs/fat/ff.32
                0x00000000c0003abb                f_mount
                0x00000000c0003b1d                f_open
                0x00000000c0003de8                f_read
                0x00000000c0003fe7                f_write
                0x00000000c000421b                f_sync
                0x00000000c00042d0                f_close
                0x00000000c00042ff                f_lseek
                0x00000000c00044a6                f_opendir
                0x00000000c0004571                f_closedir
                0x00000000c0004593                f_readdir
                0x00000000c0004625                f_stat
                0x00000000c00046a4                f_getfree
                0x00000000c00047a6                f_truncate
                0x00000000c000488a                f_unlink
                0x00000000c00049ac                f_mkdir
                0x00000000c0004b47                f_rename
                0x00000000c0004cfd                f_chmod
                0x00000000c0004da6                f_utime
                0x00000000c0004e54                f_getlabel
                0x00000000c0004fa5                f_setlabel
                0x00000000c0005135                f_expand
                0x00000000c0005295                f_mkfs
 *fill*         0x00000000c0005a6a        0x2 
 .text          0x00000000c0005a6c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a6c                ff_memalloc
                0x00000000c0005a84                ff_memfree
 *fill*         0x00000000c0005a9b        0x1 
 .text          0x00000000c0005a9c      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005a9c                ff_uni2oem
                0x00000000c0005b3c                ff_oem2uni
                0x00000000c0005bb4                ff_wtoupper
 .text          0x00000000c0005d44      0xc76 fs/iso9660/iso9660.32
                0x00000000c0005f63                isoReadDiscSector
                0x00000000c0005ffe                strnicmp
                0x00000000c00062b1                stricmp
                0x00000000c00062fd                iso_open
                0x00000000c0006387                iso_close
                0x00000000c00063a5                iso_read
                0x00000000c00064bb                iso_seek
                0x00000000c000653f                iso_tell
                0x00000000c0006570                iso_total
                0x00000000c000659b                fn_postprocess
                0x00000000c00065c1                iso_readdir
                0x00000000c00067b2                iso_reset
                0x00000000c00067bf                init_percd
                0x00000000c00068b9                iso_ioctl
                0x00000000c00068c1                fs_iso9660_init
                0x00000000c000694a                fs_iso9660_shutdown
 .text          0x00000000c00069ba      0x685 core/computer.32
                0x00000000c00069ba                Computer::close(int, int, void*)
                0x00000000c00069ff                Krnl::firstTask()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006b32                Computer::Computer()
                0x00000000c0006be4                Computer::setBootMessage(char const*)
                0x00000000c0006be6                Computer::detectFeatures()
                0x00000000c0006df0                Computer::displayFeatures()
                0x00000000c0006df2                Computer::rdmsr(unsigned int)
                0x00000000c0006e1e                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0006e56                Computer::shutdown()
                0x00000000c0006e6e                Computer::restart()
                0x00000000c0006e86                Computer::sleep()
                0x00000000c0006e9a                Computer::nmiEnabled()
                0x00000000c0006ea6                Computer::readCMOS(unsigned char)
                0x00000000c0006ec0                Computer::enableNMI(bool)
                0x00000000c0006ed8                Computer::open(int, int, void*)
                0x00000000c0006fac                Computer::disableNMI()
                0x00000000c0006fbc                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0006fda                Computer::handleNMI()
 *fill*         0x00000000c000703f        0x1 
 .text          0x00000000c0007040      0x1cf core/gdt.32
                0x00000000c0007040                GDTEntry::setBase(unsigned int)
                0x00000000c000705c                GDTEntry::setLimit(unsigned int)
                0x00000000c000707a                GDT::GDT()
                0x00000000c000707a                GDT::GDT()
                0x00000000c0007090                GDT::addEntry(GDTEntry)
                0x00000000c00070b2                GDT::getNumberOfEntries()
                0x00000000c00070ba                GDT::flush()
                0x00000000c00070dc                GDT::setup()
 .text          0x00000000c000720f       0x1d core/idle.32
                0x00000000c000720f                idleFunction(void*)
 .text          0x00000000c000722c      0x464 core/idt.32
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000722c                IDTEntry::IDTEntry(bool)
                0x00000000c000729e                IDTEntry::setOffset(unsigned int)
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b4                IDT::IDT()
                0x00000000c00072b6                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00072be                IDT::addEntry(IDTEntry, int)
                0x00000000c00072d8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007310                IDT::flush()
                0x00000000c000732a                IDT::setup()
 .text          0x00000000c0007690      0x183 core/kheap.32
                0x00000000c0007690                sbrk
                0x00000000c0007725                mmap
                0x00000000c000773b                munmap
                0x00000000c0007751                liballoc_lock()
                0x00000000c000775e                liballoc_unlock()
                0x00000000c0007772                liballoc_alloc(int)
                0x00000000c000778a                liballoc_free(void*, int)
                0x00000000c00077a5                realloc
                0x00000000c00077b9                malloc
                0x00000000c00077c9                free
                0x00000000c00077d9                rfree
                0x00000000c00077e9                calloc
 .text          0x00000000c0007813       0xc3 core/main.32
                0x00000000c0007813                KeEntryPoint
 .text          0x00000000c00078d6      0x5dc core/physmgr.32
                0x00000000c00078d6                Phys::allocateDMA(unsigned long)
                0x00000000c00079ad                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c00079e0                Phys::setPageState(unsigned long, bool)
                0x00000000c0007a12                Phys::getPageState(unsigned long)
                0x00000000c0007a33                Phys::freePage(unsigned long)
                0x00000000c0007a95                Phys::allocatePage()
                0x00000000c0007b53                Phys::allocateContiguousPages(int)
                0x00000000c0007baf                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007be7                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0007eb2      0x273 core/pipe.32
                0x00000000c0007eb2                Pipe::isAtty()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eb6                Pipe::~Pipe()
                0x00000000c0007eda                Pipe::~Pipe()
                0x00000000c0007f02                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0007fc2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c00080be                Pipe::Pipe(int)
                0x00000000c00080be                Pipe::Pipe(int)
 *fill*         0x00000000c0008125        0x1 
 .text          0x00000000c0008126      0xaa0 core/terminal.32
                0x00000000c0008126                VgaText::isAtty()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000812a                VgaText::~VgaText()
                0x00000000c000814e                VgaText::~VgaText()
                0x00000000c0008178                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008198                setTerminalScrollLock(bool)
                0x00000000c0008199                doTerminalCycle()
                0x00000000c000819a                addToTerminalCycle(VgaText*)
                0x00000000c000819b                scrollTerminalScrollLock(int)
                0x00000000c000819c                VgaText::updateTitle()
                0x00000000c000819e                VgaText::load()
                0x00000000c00081a0                VgaText::updateCursor()
                0x00000000c00081b6                VgaText::doANSI_SGR(int)
                0x00000000c000822a                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000823a                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000824a                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000826a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008276                VgaText::setTitleColour(VgaColour)
                0x00000000c0008282                VgaText::setTitle(char*)
                0x00000000c0008284                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008296                VgaText::scrollScreen()
                0x00000000c000832e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008340                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00083d0                VgaText::getCursorX()
                0x00000000c00083d8                VgaText::getCursorY()
                0x00000000c00083e0                VgaText::setCursor(int, int)
                0x00000000c00083f7                setActiveTerminal(VgaText*)
                0x00000000c0008442                VgaText::clearScreen()
                0x00000000c0008490                VgaText::setCursorX(int)
                0x00000000c00084a8                VgaText::setCursorY(int)
                0x00000000c00084c0                VgaText::incrementCursor(bool)
                0x00000000c0008514                VgaText::decrementCursor(bool)
                0x00000000c0008536                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008604                VgaText::putchar(char)
                0x00000000c00086f0                VgaText::putx(unsigned int)
                0x00000000c0008736                VgaText::puts(char const*)
                0x00000000c000875c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00087a8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c00088fa                VgaText::VgaText(char const*)
                0x00000000c0008a46                VgaText::receiveKey(unsigned char)
                0x00000000c0008ba0                VgaText::doUpdate()
                0x00000000c0008ba1                newTerminal(char*)
 *fill*         0x00000000c0008bc6        0x2 
 .text          0x00000000c0008bc8      0x1a1 core/tss.32
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bc8                TSS::TSS()
                0x00000000c0008bd8                TSS::setESP(unsigned long)
                0x00000000c0008bec                TSS::flush()
                0x00000000c0008c0c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0008d69        0x1 
 .text          0x00000000c0008d6a      0x4c2 core/unixfile.32
                0x00000000c0008d6a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0008dc0                ReservedFilename::isAtty()
                0x00000000c0008ddc                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0008e3a                UnixFile::getFileDescriptor()
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008e42                UnixFile::UnixFile(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0008ff2                ReservedFilename::ReservedFilename(int)
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c0009024                UnixFile::~UnixFile()
                0x00000000c00090bc                UnixFile::~UnixFile()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c00090e4                ReservedFilename::~ReservedFilename()
                0x00000000c0009108                ReservedFilename::~ReservedFilename()
                0x00000000c000912f                getFromFileDescriptor(int)
 .text          0x00000000c000922c     0x1166 core/virtmgr.32
                0x00000000c000922c                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009261                Virt::getPageState(unsigned long)
                0x00000000c0009285                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009396                Virt::freeSwapfilePage(unsigned long)
                0x00000000c00093b4                Virt::swapIDToSector(unsigned long)
                0x00000000c00093c6                Virt::allocateSwapfilePage()
                0x00000000c0009444                Virt::virtualMemorySetup()
                0x00000000c000948f                Virt::setupPageSwapping(int)
                0x00000000c0009500                VAS::VAS()
                0x00000000c0009500                VAS::VAS()
                0x00000000c000953c                VAS::VAS(VAS*)
                0x00000000c000953c                VAS::VAS(VAS*)
                0x00000000c000956a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009596                VAS::getPageTableEntry(unsigned long)
                0x00000000c00095b5                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00096da                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00096fe                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009718                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009758                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000978c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00097b6                VAS::~VAS()
                0x00000000c00097b6                VAS::~VAS()
                0x00000000c000991a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009a1e                VAS::allocatePages(int, int)
                0x00000000c0009bf6                VAS::setCPUSpecific(unsigned long)
                0x00000000c0009c14                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0009cda                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0009dc8                VAS::VAS(bool)
                0x00000000c0009dc8                VAS::VAS(bool)
                0x00000000c000a048                VAS::evict(unsigned long)
                0x00000000c000a10a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a1f8                VAS::scanForEviction()
                0x00000000c000a2d8                mapVASFirstTime
 .text          0x00000000c000a392       0x5f coreobjs/c++.32
                0x00000000c000a392                __cxa_atexit
                0x00000000c000a395                __cxa_finalize
                0x00000000c000a396                __stack_chk_fail
                0x00000000c000a3cc                __cxa_pure_virtual
                0x00000000c000a3dd                operator new[](unsigned long)
                0x00000000c000a3e2                operator delete(void*, unsigned long)
                0x00000000c000a3e7                operator delete[](void*)
                0x00000000c000a3ec                operator delete[](void*, unsigned long)
 .text          0x00000000c000a3f1      0x21c dbg/kconsole.32
                0x00000000c000a3f1                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a45c                Dbg::logc(char)
                0x00000000c000a47c                Dbg::logs(char*)
                0x00000000c000a499                Dbg::logWriteInt(unsigned int)
                0x00000000c000a4b7                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000a4d8                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000a60d        0x1 
 .text          0x00000000c000a60e      0xc5c fs/vfs.32
                0x00000000c000a60e                File::read(unsigned long long, void*, int*)
                0x00000000c000a666                File::write(unsigned long long, void*, int*)
                0x00000000c000a6be                Directory::read(unsigned long long, void*, int*)
                0x00000000c000a716                Directory::write(unsigned long long, void*, int*)
                0x00000000c000a744                File::isAtty()
                0x00000000c000a748                Directory::isAtty()
                0x00000000c000a74c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000a752                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000a758                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000a75e                File::~File()
                0x00000000c000a75e                File::~File()
                0x00000000c000a782                File::~File()
                0x00000000c000a7ac                Directory::~Directory()
                0x00000000c000a7ac                Directory::~Directory()
                0x00000000c000a7d0                Directory::~Directory()
                0x00000000c000a7fa                Filesystem::Filesystem()
                0x00000000c000a7fa                Filesystem::Filesystem()
                0x00000000c000a81e                Filesystem::~Filesystem()
                0x00000000c000a81e                Filesystem::~Filesystem()
                0x00000000c000a82c                Filesystem::~Filesystem()
                0x00000000c000a850                Fs::getcwd(Process*, char*, int)
                0x00000000c000a87a                Fs::initVFS()
                0x00000000c000a8a4                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000aa4e                File::File(char const*, Process*)
                0x00000000c000aa4e                File::File(char const*, Process*)
                0x00000000c000ab0e                File::open(FileOpenMode)
                0x00000000c000ab6c                File::close()
                0x00000000c000abcc                File::seek(unsigned long long)
                0x00000000c000ac22                File::tell(unsigned long long*)
                0x00000000c000ac72                File::rewind()
                0x00000000c000ac86                File::unlink()
                0x00000000c000acd2                File::rename(char const*)
                0x00000000c000ad20                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000ad7c                File::exists()
                0x00000000c000adba                File::stat(unsigned long long*, bool*)
                0x00000000c000ae1b                Fs::setcwd(Process*, char*)
                0x00000000c000af78                Directory::Directory(char const*, Process*)
                0x00000000c000af78                Directory::Directory(char const*, Process*)
                0x00000000c000b038                Directory::open()
                0x00000000c000b094                Directory::close()
                0x00000000c000b0f4                Directory::unlink()
                0x00000000c000b140                Directory::rename(char const*)
                0x00000000c000b18e                Directory::exists()
                0x00000000c000b1cc                Directory::read(dirent*)
                0x00000000c000b218                Directory::create()
                0x00000000c000b264                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b26a        0x2 
 .text          0x00000000c000b26c       0x86 hal/bus.32
                0x00000000c000b26c                Bus::Bus(char const*)
                0x00000000c000b26c                Bus::Bus(char const*)
                0x00000000c000b2a4                Bus::~Bus()
                0x00000000c000b2a4                Bus::~Bus()
                0x00000000c000b2c8                Bus::~Bus()
 .text          0x00000000c000b2f2       0x96 hal/buzzer.32
                0x00000000c000b2f2                beepThread(void*)
                0x00000000c000b32f                Krnl::beep(int, int, bool)
 .text          0x00000000c000b388      0x46d hal/clock.32
                0x00000000c000b388                User::loadClockSettings(int)
                0x00000000c000b3da                Clock::Clock(char const*)
                0x00000000c000b3da                Clock::Clock(char const*)
                0x00000000c000b410                Clock::~Clock()
                0x00000000c000b410                Clock::~Clock()
                0x00000000c000b434                Clock::~Clock()
                0x00000000c000b45e                Clock::timeInSecondsLocal()
                0x00000000c000b4a6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000b4ff                datetimeToSeconds(datetime_t)
                0x00000000c000b62c                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000b68c                secondsToDatetime(unsigned long long)
                0x00000000c000b7d0                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000b7f5        0x1 
 .text          0x00000000c000b7f6      0x464 hal/device.32
                0x00000000c000b7f6                Device::hibernate()
                0x00000000c000b7f8                Device::wake()
                0x00000000c000b7fa                Device::detect()
                0x00000000c000b7fc                Device::disableLegacy()
                0x00000000c000b7fe                Device::powerSaving(PowerSavingLevel)
                0x00000000c000b800                DriverlessDevice::close(int, int, void*)
                0x00000000c000b804                DriverlessDevice::detect()
                0x00000000c000b806                DriverlessDevice::open(int, int, void*)
                0x00000000c000b81a                Device::~Device()
                0x00000000c000b81a                Device::~Device()
                0x00000000c000b828                Device::~Device()
                0x00000000c000b850                Device::findAndLoadDriver()
                0x00000000c000b85e                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000b884                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000b8c4                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000b8ee                Device::getParent()
                0x00000000c000b8fa                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000b918                Device::addChild(Device*)
                0x00000000c000b95c                Device::removeAllChildren()
                0x00000000c000b9a2                Device::hibernateAll()
                0x00000000c000b9d2                Device::wakeAll()
                0x00000000c000ba02                Device::detectAll()
                0x00000000c000ba32                Device::disableLegacyAll()
                0x00000000c000ba34                Device::loadDriversForAll()
                0x00000000c000ba36                Device::closeAll()
                0x00000000c000ba6c                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000baa2                Device::setName(char const*)
                0x00000000c000bab0                Device::Device(char const*)
                0x00000000c000bab0                Device::Device(char const*)
                0x00000000c000bbac                Device::getName()
                0x00000000c000bbb6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bbb6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000bbec                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000bc30                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000bc5a        0x2 
 .text          0x00000000c000bc5c       0x86 hal/diskctrl.32
                0x00000000c000bc5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bc5c                HardDiskController::HardDiskController(char const*)
                0x00000000c000bc94                HardDiskController::~HardDiskController()
                0x00000000c000bc94                HardDiskController::~HardDiskController()
                0x00000000c000bcb8                HardDiskController::~HardDiskController()
 .text          0x00000000c000bce2       0xe2 hal/diskphys.32
                0x00000000c000bce2                PhysicalDisk::eject()
                0x00000000c000bce6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bce6                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000bd4e                PhysicalDisk::startCache()
                0x00000000c000bd76                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bd76                PhysicalDisk::~PhysicalDisk()
                0x00000000c000bd9a                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000bdc4        0x0 hal/fpu.32
 .text          0x00000000c000bdc4      0x35d hal/intctrl.32
                0x00000000c000bdc4                int_handler
                0x00000000c000be4c                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000be94                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bfcc                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c000                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c07f                setupINTS()
                0x00000000c000c0dc                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c121        0x1 
 .text          0x00000000c000c122      0x792 hal/keybrd.32
                0x00000000c000c122                startGUI(void*)
                0x00000000c000c18e                startGUIVESA(void*)
                0x00000000c000c1fa                sendKeyToTerminal(unsigned char)
                0x00000000c000c2c3                sendKeyboardToken(KeyboardToken)
                0x00000000c000c703                clearInternalKeybuffer(VgaText*)
                0x00000000c000c738                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000c82a                Keyboard::Keyboard(char const*)
                0x00000000c000c82a                Keyboard::Keyboard(char const*)
                0x00000000c000c866                Keyboard::~Keyboard()
                0x00000000c000c866                Keyboard::~Keyboard()
                0x00000000c000c88a                Keyboard::~Keyboard()
 .text          0x00000000c000c8b4      0x3ea hal/logidisk.32
                0x00000000c000c8b4                LogicalDisk::close(int, int, void*)
                0x00000000c000c8b8                LogicalDisk::~LogicalDisk()
                0x00000000c000c8b8                LogicalDisk::~LogicalDisk()
                0x00000000c000c8dc                LogicalDisk::~LogicalDisk()
                0x00000000c000c906                LogicalDisk::open(int, int, void*)
                0x00000000c000c91a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000c952                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000c998                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000c998                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ca4e                LogicalDisk::assignDriveLetter()
                0x00000000c000cb04                LogicalDisk::mount()
                0x00000000c000cb4c                LogicalDisk::unmount()
                0x00000000c000cb5c                LogicalDisk::eject()
                0x00000000c000cb70                LogicalDisk::unassignDriveLetter()
                0x00000000c000cbc6                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000cc32                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000cc9e        0x2 
 .text          0x00000000c000cca0       0x86 hal/mouse.32
                0x00000000c000cca0                Mouse::Mouse(char const*)
                0x00000000c000cca0                Mouse::Mouse(char const*)
                0x00000000c000ccd8                Mouse::~Mouse()
                0x00000000c000ccd8                Mouse::~Mouse()
                0x00000000c000ccfc                Mouse::~Mouse()
 .text          0x00000000c000cd26      0x339 hal/partition.32
                0x00000000c000cd26                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cdce                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d05f        0x1 
 .text          0x00000000c000d060       0x86 hal/serial.32
                0x00000000c000d060                Serial::Serial(char const*)
                0x00000000c000d060                Serial::Serial(char const*)
                0x00000000c000d098                Serial::~Serial()
                0x00000000c000d098                Serial::~Serial()
                0x00000000c000d0bc                Serial::~Serial()
 *fill*         0x00000000c000d0e6        0x2 
 .text          0x00000000c000d0e8      0x234 hal/timer.32
                0x00000000c000d0e8                Timer::Timer(char const*)
                0x00000000c000d0e8                Timer::Timer(char const*)
                0x00000000c000d120                Timer::~Timer()
                0x00000000c000d120                Timer::~Timer()
                0x00000000c000d144                Timer::~Timer()
                0x00000000c000d16e                Timer::read()
                0x00000000c000d179                setupTimer(int)
                0x00000000c000d1b4                timerHandler(unsigned int)
 .text          0x00000000c000d31c      0x3ce hal/vcache.32
                0x00000000c000d31c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d31c                VCache::VCache(PhysicalDisk*)
                0x00000000c000d484                VCache::invalidateReadBuffer()
                0x00000000c000d494                VCache::writeWriteBuffer()
                0x00000000c000d4e0                VCache::~VCache()
                0x00000000c000d4e0                VCache::~VCache()
                0x00000000c000d534                VCache::~VCache()
                0x00000000c000d55c                VCache::write(unsigned long long, int, void*)
                0x00000000c000d672                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000d6ea      0x4b3 hal/video.32
                0x00000000c000d6ea                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000d736                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000d7a6                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000d824                Video::clearScreen(unsigned int)
                0x00000000c000d858                Video::putpixel(int, int, unsigned int)
                0x00000000c000d866                Video::Video(char const*)
                0x00000000c000d866                Video::Video(char const*)
                0x00000000c000d89c                Video::~Video()
                0x00000000c000d89c                Video::~Video()
                0x00000000c000d8c0                Video::~Video()
                0x00000000c000d8ea                Video::isMonochrome()
                0x00000000c000d8f6                Video::getWidth()
                0x00000000c000d902                Video::getHeight()
                0x00000000c000d90e                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000d9ca                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000db32                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000db9d        0x3 
 .text          0x00000000c000dba0     0x1307 hw/acpi.32
                0x00000000c000dba0                ACPI::close(int, int, void*)
                0x00000000c000dc58                findRSDP()
                0x00000000c000dce8                loadACPITables(unsigned char*)
                0x00000000c000df4c                findRSDT(unsigned char*)
                0x00000000c000e09c                findDataTable(unsigned char*, char*)
                0x00000000c000e114                scanMADT()
                0x00000000c000e5e8                ACPI::ACPI()
                0x00000000c000e5e8                ACPI::ACPI()
                0x00000000c000e63c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000e724                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000e7ec                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000e7f4                ACPI::detectPCI()
                0x00000000c000e9fc                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000ea50                ACPI::sleep()
                0x00000000c000ea6c                ACPI::open(int, int, void*)
 *fill*         0x00000000c000eea7        0x1 
 .text          0x00000000c000eea8      0xb95 hw/cpu.32
                0x00000000c000eea8                CPU::close(int, int, void*)
                0x00000000c000eeac                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000eec8                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000eee0                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000ef54                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000efd8                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f006                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f034                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f062                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f090                CPU::CPU()
                0x00000000c000f090                CPU::CPU()
                0x00000000c000f11e                CPU::displayFeatures()
                0x00000000c000f120                CPU::detectFeatures()
                0x00000000c000f7e4                CPU::setupSMEP()
                0x00000000c000f7f0                CPU::setupUMIP()
                0x00000000c000f7fa                CPU::setupTSC()
                0x00000000c000f804                CPU::setupLargePages()
                0x00000000c000f80e                CPU::setupPAT()
                0x00000000c000f84a                CPU::setupMTRR()
                0x00000000c000f84c                CPU::setupGlobalPages()
                0x00000000c000f856                CPU::allowUsermodeDataAccess()
                0x00000000c000f868                CPU::prohibitUsermodeDataAccess()
                0x00000000c000f87a                CPU::setupSMAP()
                0x00000000c000f888                CPU::setupFeatures()
                0x00000000c000f954                CPU::open(int, int, void*)
 .text          0x00000000c000fa3d       0xd1 krnl/bootmsg.32
                0x00000000c000fa3d                KeDisplaySplashScreen()
                0x00000000c000faab                KeSetBootMessage(char const*)
 .text          0x00000000c000fb0e      0x581 krnl/env.32
                0x00000000c000fb0e                EnvVarContainer::getEnv(char const*)
                0x00000000c000fb4c                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c000fc0e                EnvVarContainer::deleteEnv(char const*)
                0x00000000c000fc10                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c000fdf6                EnvVarContainer::__loadSystem()
                0x00000000c000fe10                EnvVarContainer::__loadUser()
                0x00000000c000fe12                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe12                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c000fe34                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe34                EnvVarContainer::~EnvVarContainer()
                0x00000000c000fe64                Krnl::getEnv(Process*, char const*)
                0x00000000c000fec9                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c000fee3                Krnl::setEnvUser(char const*, char const*)
                0x00000000c000ff02                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c000ff15                Krnl::deleteEnvSystem(char const*)
                0x00000000c000ff16                Krnl::deleteEnvUser(char const*)
                0x00000000c000ff17                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c000ff18                Krnl::newProcessEnv(Process*)
                0x00000000c000ff3a                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c000ff86                Krnl::loadSystemEnv()
                0x00000000c000ffb4                Krnl::loadUserEnv()
                0x00000000c000ffda                Krnl::flushEnv()
                0x00000000c000ffdb                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c000fffb                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001008f       0x94 krnl/inlines.32
                0x00000000c001008f                CPU::current()
                0x00000000c001009b                operator new(unsigned long)
                0x00000000c00100a0                operator delete(void*)
                0x00000000c00100a5                disableIRQs()
                0x00000000c00100a7                enableIRQs()
                0x00000000c00100a9                lockScheduler()
                0x00000000c00100b1                unlockScheduler()
                0x00000000c00100c0                lockStuff()
                0x00000000c00100ce                unlockStuff()
                0x00000000c0010108                Virt::getAKernelVAS()
                0x00000000c001010e                __not_memcpy
 .text          0x00000000c0010123        0xc krnl/panic.32
                0x00000000c0010123                KePanic(char const*)
 .text          0x00000000c001012f      0x142 krnl/powctrl.32
                0x00000000c001012f                Krnl::powerThread(void*)
                0x00000000c001015d                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010173                Krnl::userIOReceived()
                0x00000000c001017e                Krnl::handlePowerButton()
                0x00000000c00101b3                Krnl::handleSleepButton()
                0x00000000c00101e8                Krnl::setupPowerManager()
 *fill*         0x00000000c0010271        0x3 
 .text          0x00000000c0010274      0x190 krnl/resolve.32
                0x00000000c0010274                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010404      0x170 krnl/signal.32
                0x00000000c0010404                KiDefaultSignalHandlerAbort(int)
                0x00000000c0010411                KiDefaultSignalHandlerTerminate(int)
                0x00000000c001041e                KiSigKill(int)
                0x00000000c001042b                KiDefaultSignalHandlerIgnore(int)
                0x00000000c001042c                KiDefaultSignalHandlerPause(int)
                0x00000000c0010439                KiDefaultSignalHandlerResume(int)
                0x00000000c0010446                KeInitSignals()
                0x00000000c00104a1                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010530                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010536                KeCheckSignal(SigHandlerBlock*)
                0x00000000c0010539                KeCompleteSignal(SigHandlerBlock*, int)
 .text          0x00000000c0010574      0xcfe krnl/syscalls.32
                0x00000000c0010574                SysSeekDir(regs*)
                0x00000000c0010579                SysTellDir(regs*)
                0x00000000c001057e                SysVerify(regs*)
                0x00000000c0010588                SysGetArgc(regs*)
                0x00000000c0010598                SysTTYName(regs*)
                0x00000000c00105a0                SysFormatDisk(regs*)
                0x00000000c001060d                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010657                SysGetDiskVolumeLabel(regs*)
                0x00000000c00106ac                SysShutdown(regs*)
                0x00000000c001070a                SysRealpath(regs*)
                0x00000000c001074d                SysReadDir(regs*)
                0x00000000c00107cd                SysIsATTY(regs*)
                0x00000000c0010829                SysSeek(regs*)
                0x00000000c0010882                SysTell(regs*)
                0x00000000c00108f1                SysSize(regs*)
                0x00000000c0010966                SysSizeFromFilename(regs*)
                0x00000000c0010a19                SysClose(regs*)
                0x00000000c0010a79                SysOpenDir(regs*)
                0x00000000c0010b8a                SysCloseDir(regs*)
                0x00000000c0010bde                SysMakeDir(regs*)
                0x00000000c0010c50                SysWait(regs*)
                0x00000000c0010c6d                SysNotImpl(regs*)
                0x00000000c0010c88                SysPanic(regs*)
                0x00000000c0010ca3                SysRmdir(regs*)
                0x00000000c0010d0a                SysUnlink(regs*)
                0x00000000c0010d71                SysGetArgv(regs*)
                0x00000000c0010dbe                SysUSleep(regs*)
                0x00000000c0010de7                SysSpawn(regs*)
                0x00000000c0010e50                SysGetEnv(regs*)
                0x00000000c0010eff                SysSetFatAttrib(regs*)
                0x00000000c0010f76                SysPipe(regs*)
                0x00000000c0010fbb                SysGetUnixTime(regs*)
                0x00000000c0010fcf                string_ends_with(char const*, char const*)
                0x00000000c0011019                SysOpen(regs*)
                0x00000000c0011220                KeSystemCall(regs*, void*)
 .text          0x00000000c0011272      0x50e reg/registry.32
                0x00000000c0011272                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00113ca                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001151f                Reg::getLine(char*, char*, char*)
                0x00000000c0011556                Reg::readInt(char*, char*, int*)
                0x00000000c0011641                Reg::readString(char*, char*, char*, int)
                0x00000000c00116c2                Reg::readBool(char*, char*, bool*)
                0x00000000c00116e7                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0011713                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001173f                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0011780       0x36 sys/eject.32
                0x00000000c0011780                SysEject(regs*)
 .text          0x00000000c00117b6       0x18 sys/exit.32
                0x00000000c00117b6                SysExit(regs*)
 .text          0x00000000c00117ce       0x1f sys/getcwd.32
                0x00000000c00117ce                SysGetCwd(regs*)
 .text          0x00000000c00117ed        0xc sys/getpid.32
                0x00000000c00117ed                SysGetPID(regs*)
 .text          0x00000000c00117f9       0x1a sys/getramdata.32
                0x00000000c00117f9                SysGetRAMData(regs*)
 .text          0x00000000c0011813       0x82 sys/getvgaptr.32
                0x00000000c0011813                SysGetVGAPtr(regs*)
 .text          0x00000000c0011895       0xa8 sys/loaddll.32
                0x00000000c0011895                SysLoadDLL(regs*)
 .text          0x00000000c001193d       0x68 sys/read.32
                0x00000000c001193d                SysRead(regs*)
 .text          0x00000000c00119a5       0x29 sys/registersignal.32
                0x00000000c00119a5                SysRegisterSignal(regs*)
 .text          0x00000000c00119ce       0x67 sys/sbrk.32
                0x00000000c00119ce                SysSbrk(regs*)
 .text          0x00000000c0011a35       0x1c sys/setcwd.32
                0x00000000c0011a35                SysSetCwd(regs*)
 .text          0x00000000c0011a51       0x95 sys/settime.32
                0x00000000c0011a51                SysSetTime(regs*)
 .text          0x00000000c0011ae6       0x4a sys/timezone.32
                0x00000000c0011ae6                SysTimezone(regs*)
 .text          0x00000000c0011b30       0x68 sys/write.32
                0x00000000c0011b30                SysWrite(regs*)
 .text          0x00000000c0011b98       0x62 sys/wsbe.32
                0x00000000c0011b98                SysWsbe(regs*)
 .text          0x00000000c0011bfa       0x25 sys/yield.32
                0x00000000c0011bfa                SysYield(regs*)
 .text          0x00000000c0011c1f     0x11e5 thr/elf.32
                0x00000000c0011c1f                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0011eab                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00120c1                Thr::runtimeReferenceHelper()
                0x00000000c00120d4                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0012123                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00123e1                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0012b17                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0012b49                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0012b80                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0012b9a                Thr::loadDLL(char const*, bool)
                0x00000000c0012dcb                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0012e04     0x138d thr/prcssthr.32
                0x00000000c0012e04                userModeEntryPoint(void*)
                0x00000000c0012e2c                changeTSS
                0x00000000c0012e5c                switchToThread(ThreadControlBlock*)
                0x00000000c0012f10                Process::addArgs(char**)
                0x00000000c0012f70                Process::Process(char const*, Process*, char**)
                0x00000000c0012f70                Process::Process(char const*, Process*, char**)
                0x00000000c001316c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001316c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00133e4                taskStartupFunction
                0x00000000c00133f0                Semaphore::Semaphore(int)
                0x00000000c00133f0                Semaphore::Semaphore(int)
                0x00000000c0013420                Mutex::Mutex()
                0x00000000c0013420                Mutex::Mutex()
                0x00000000c0013434                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001352c                Process::createUserThread()
                0x00000000c001354c                setupMultitasking(void (*)())
                0x00000000c0013654                schedule()
                0x00000000c00136e4                Semaphore::tryAcquire()
                0x00000000c00137b0                Semaphore::assertLocked(char const*)
                0x00000000c0013828                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0013850                blockTask(TaskState)
                0x00000000c0013880                waitTask(int, int*, int)
                0x00000000c00138c4                milliTenthSleepUntil(unsigned int)
                0x00000000c0013954                milliTenthSleep(unsigned int)
                0x00000000c0013964                sleep(unsigned int)
                0x00000000c0013980                Semaphore::acquire()
                0x00000000c0013a3c                taskReturned
                0x00000000c0013a78                Thr::processFromPID(int)
                0x00000000c0013b18                unblockTask(ThreadControlBlock*)
                0x00000000c0013bbc                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0013e88                cleanerTaskFunction(void*)
                0x00000000c0013f78                terminateTask(int)
                0x00000000c0014044                Thr::terminateFromIRQ(int)
                0x00000000c0014054                Semaphore::release()
 .text          0x00000000c0014191      0xb93 vm86/vm8086.32
                0x00000000c0014191                Vm::inbv(unsigned short)
                0x00000000c00141a4                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00141da                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00141ea                Vm::getSegment(unsigned int)
                0x00000000c00141f2                Vm::getOffset(unsigned int)
                0x00000000c00141f7                Vm::mainloop2()
                0x00000000c0014231                Vm::mainVm8086Loop(void*)
                0x00000000c0014241                Vm::mainloop3(unsigned long)
                0x00000000c0014267                Vm::initialise8086()
                0x00000000c00142aa                Vm::finish8086()
                0x00000000c001430b                Vm::getOutput8086(unsigned char*)
                0x00000000c0014330                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00143e9                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014551                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00145db                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00145ec                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00145fe                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001460f                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0014624                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001463a                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001464f                Vm::faultHandler(regs*)
 .text          0x00000000c0014d24      0xa53 arch/i386/hal.32
                0x00000000c0014d24                noCopro(unsigned long)
                0x00000000c0014d25                nmiHandler(regs*, void*)
                0x00000000c0014d3e                doubleFault(regs*, void*)
                0x00000000c0014d57                displayDebugInfo(regs*)
                0x00000000c0015078                HalSystemIdle()
                0x00000000c00150ee                displayProgramFault(char const*)
                0x00000000c001513a                gpFault(regs*, void*)
                0x00000000c001519f                pgFault(regs*, void*)
                0x00000000c0015225                otherISRHandler(regs*, void*)
                0x00000000c0015259                opcodeFault(regs*, void*)
                0x00000000c00152d9                i386SaveCoprocessor(void*)
                0x00000000c00152ed                i386LoadCoprocessor(void*)
                0x00000000c0015301                x87EmulHandler(regs*, void*)
                0x00000000c001539e                HalInitialiseCoprocessor()
                0x00000000c001544c                HalPanic(char const*)
                0x00000000c0015545                HalQueryPerformanceCounter()
                0x00000000c0015560                HalInitialise()
                0x00000000c0015706                HalMakeBeep(int)
                0x00000000c0015740                HalGetRand()
                0x00000000c0015743                HalEndOfInterrupt(int)
                0x00000000c0015774                HalRestart()
                0x00000000c0015775                HalShutdown()
                0x00000000c0015776                HalSleep()
 *fill*         0x00000000c0015777        0x1 
 .text          0x00000000c0015778      0x2f4 arch/i386/pic.32
                0x00000000c0015778                picIoWait()
                0x00000000c0015780                picDisable()
                0x00000000c00157b4                picGetIRQReg(int)
                0x00000000c0015838                picOpen()
                0x00000000c00159c8                picEOI(int)
 .text          0x00000000c0015a6c      0x64d arch/i386/rtc.32
                0x00000000c0015a6c                RTC::open(int, int, void*)
                0x00000000c0015a70                RTC::close(int, int, void*)
                0x00000000c0015a74                RTC::timeInSecondsUTC()
                0x00000000c0015a86                RTC::timeInDatetimeUTC()
                0x00000000c0015aac                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015aea                RTC::~RTC()
                0x00000000c0015aea                RTC::~RTC()
                0x00000000c0015b0e                RTC::~RTC()
                0x00000000c0015b38                RTC::get_update_in_progress_flag()
                0x00000000c0015b50                RTC::completeRTCRefresh()
                0x00000000c0015e08                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0015fbb                rtcIRQHandler(regs*, void*)
                0x00000000c0016000                RTC::RTC()
                0x00000000c0016000                RTC::RTC()
 *fill*         0x00000000c00160b9        0x3 
 .text          0x00000000c00160bc      0x203 arch/i386/vga.32
                0x00000000c00160bc                HalConsoleScroll(int, int)
                0x00000000c00161c4                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0016230                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c00162bf        0x1 
 .text          0x00000000c00162c0     0x13e7 fs/fat/vfslink.32
                0x00000000c00162c0                FAT::getName()
                0x00000000c00162c8                FAT::tell(void*, unsigned long long*)
                0x00000000c0016304                FAT::stat(void*, unsigned long long*)
                0x00000000c0016340                FAT::~FAT()
                0x00000000c0016340                FAT::~FAT()
                0x00000000c0016364                FAT::~FAT()
                0x00000000c001638c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0016430                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00164f4                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00166c8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00168e0                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016aa0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016c0c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016c6c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016ccc                FAT::close(void*)
                0x00000000c0016d20                FAT::closeDir(void*)
                0x00000000c0016d74                FAT::seek(void*, unsigned long long)
                0x00000000c0016dcc                fatWrapperReadDisk
                0x00000000c0016e10                fatWrapperWriteDisk
                0x00000000c0016e54                fatWrapperIoctl
                0x00000000c0016f70                FAT::FAT()
                0x00000000c0016f70                FAT::FAT()
                0x00000000c0016fc4                FAT::fixFilepath(char*)
                0x00000000c0017000                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0017138                FAT::openDir(char const*, void**)
                0x00000000c00171e8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00172e0                FAT::unlink(char const*)
                0x00000000c0017360                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00174ec                FAT::rename(char const*, char const*)
                0x00000000c00175b8                FAT::mkdir(char const*)
                0x00000000c0017638                FAT::exists(char const*)
 *fill*         0x00000000c00176a7        0x1 
 .text          0x00000000c00176a8       0xc6 fs/iso9660/helper.32
                0x00000000c00176a8                isoReadDiscSectorHelper
                0x00000000c0017704                iso_kprintf
                0x00000000c0017724                iso_kprintfd
 .text          0x00000000c001776e      0x586 fs/iso9660/vfslink.32
                0x00000000c001776e                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0017774                ISO9660::getName()
                0x00000000c001777a                ISO9660::closeDir(void*)
                0x00000000c0017784                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001778a                ISO9660::unlink(char const*)
                0x00000000c0017790                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0017796                ISO9660::rename(char const*, char const*)
                0x00000000c001779c                ISO9660::mkdir(char const*)
                0x00000000c00177a2                ISO9660::~ISO9660()
                0x00000000c00177a2                ISO9660::~ISO9660()
                0x00000000c00177c6                ISO9660::~ISO9660()
                0x00000000c00177ee                ISO9660::exists(char const*)
                0x00000000c0017802                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c00178a2                ISO9660::openDir(char const*, void**)
                0x00000000c0017932                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017972                ISO9660::seek(void*, unsigned long long)
                0x00000000c00179aa                ISO9660::tell(void*, unsigned long long*)
                0x00000000c00179e0                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017a1a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017aec                ISO9660::close(void*)
                0x00000000c0017b12                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017bdf                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017c5a                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017ccc                ISO9660::ISO9660()
                0x00000000c0017ccc                ISO9660::ISO9660()
 .text          0x00000000c0017cf4      0x26c hal/sound/sndcard.32
                0x00000000c0017cf4                SoundCard::beginPlayback()
                0x00000000c0017d02                SoundCard::stopPlayback()
                0x00000000c0017d10                SoundCard::SoundCard(char const*)
                0x00000000c0017d10                SoundCard::SoundCard(char const*)
                0x00000000c0017dae                SoundCard::~SoundCard()
                0x00000000c0017dae                SoundCard::~SoundCard()
                0x00000000c0017dd2                SoundCard::~SoundCard()
                0x00000000c0017dfc                SoundCard::configureRates(int, int, int)
                0x00000000c0017e2c                SoundCard::getSamples16(int, short*)
                0x00000000c0017e88                SoundCard::getSamples32(int, int*)
                0x00000000c0017f0e                SoundCard::addChannel(SoundPort*)
                0x00000000c0017f4c                SoundCard::removeChannel(int)
 .text          0x00000000c0017f60      0x377 hal/sound/sndport.32
                0x00000000c0017f60                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0017f60                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0017fec                SoundPort::~SoundPort()
                0x00000000c0017fec                SoundPort::~SoundPort()
                0x00000000c0018020                SoundPort::unpause()
                0x00000000c001802c                SoundPort::pause()
                0x00000000c0018038                SoundPort::getBufferUsed()
                0x00000000c0018040                SoundPort::getBufferSize()
                0x00000000c0018048                SoundPort::buffer16(short*, int)
                0x00000000c00180d4                SoundPort::buffer32(int*, int)
                0x00000000c001815c                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0018220                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c00182d7        0x0 hw/bus/isa.32
 *fill*         0x00000000c00182d7        0x1 
 .text          0x00000000c00182d8      0xb49 hw/bus/pci.32
                0x00000000c00182d8                PCI::open(int, int, void*)
                0x00000000c00182f6                PCI::close(int, int, void*)
                0x00000000c00182fa                PCI::PCI()
                0x00000000c00182fa                PCI::PCI()
                0x00000000c0018394                PCI::readBAR8(unsigned int, int)
                0x00000000c00183b0                PCI::readBAR16(unsigned int, int)
                0x00000000c00183ce                PCI::readBAR32(unsigned int, int)
                0x00000000c00183ea                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001840a                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001842c                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001844c                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00184ba                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018562                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018586                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c00185ae                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c00185f8                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0018620                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018644                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0018668                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0018690                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00186f4                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c00187dc                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018a56                PCI::checkBus(unsigned char)
                0x00000000c0018a7c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018bee                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018d62                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018dce                PCI::detect()
 *fill*         0x00000000c0018e21        0x1 
 .text          0x00000000c0018e22      0xb5a hw/diskctrl/ide.32
                0x00000000c0018e22                IDE::close(int, int, void*)
                0x00000000c0018e26                IDE::IDE()
                0x00000000c0018e26                IDE::IDE()
                0x00000000c0018e5a                IDE::prepareInterrupt(unsigned char)
                0x00000000c0018e6c                selectDrive(unsigned char, unsigned char)
                0x00000000c0018e6e                IDE::getBase(unsigned char)
                0x00000000c0018e80                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0018f40                IDE::read(unsigned char, unsigned char)
                0x00000000c0018fee                IDE::waitInterrupt(unsigned char)
                0x00000000c0019056                ideChannel0IRQHandler(regs*, void*)
                0x00000000c0019072                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001908e                IDE::enableIRQs(unsigned char, bool)
                0x00000000c00190d4                IDE::open(int, int, void*)
                0x00000000c00194e2                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c00195ae                IDE::detect()
                0x00000000c001986e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001991e                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001997c      0x32a hw/diskctrl/satabus.32
                0x00000000c001997c                SATABus::close(int, int, void*)
                0x00000000c0019980                SATABus::detect()
                0x00000000c0019982                SATABus::SATABus()
                0x00000000c0019982                SATABus::SATABus()
                0x00000000c0019a08                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019a3a                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019a82                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019aa2                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019acc                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019bdc                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019c86                SATABus::open(int, int, void*)
 .text          0x00000000c0019ca6      0x5f4 hw/diskphys/ata.32
                0x00000000c0019ca6                ATA::close(int, int, void*)
                0x00000000c0019cca                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019ccc                ATA::ATA()
                0x00000000c0019ccc                ATA::ATA()
                0x00000000c0019cfa                ATA::flush(bool)
                0x00000000c0019d44                ATA::readyForCommand()
                0x00000000c0019d90                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a10c                ATA::read(unsigned long long, int, void*)
                0x00000000c001a158                ATA::write(unsigned long long, int, void*)
                0x00000000c001a1a4                ATA::detectCHS()
                0x00000000c001a1ce                ATA::open(int, int, void*)
 .text          0x00000000c001a29a      0x60e hw/diskphys/atapi.32
                0x00000000c001a29a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a2a0                ATAPI::close(int, int, void*)
                0x00000000c001a2c4                ATAPI::ATAPI()
                0x00000000c001a2c4                ATAPI::ATAPI()
                0x00000000c001a2f2                ATAPI::readyForCommand()
                0x00000000c001a344                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a604                ATAPI::diskRemoved()
                0x00000000c001a63e                ATAPI::eject()
                0x00000000c001a686                ATAPI::diskInserted()
                0x00000000c001a692                ATAPI::detectMedia()
                0x00000000c001a74e                ATAPI::open(int, int, void*)
                0x00000000c001a82e                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001a8a8      0x402 hw/diskphys/sata.32
                0x00000000c001a8a8                SATA::close(int, int, void*)
                0x00000000c001a8cc                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001a8ce                SATA::open(int, int, void*)
                0x00000000c001a978                SATA::SATA()
                0x00000000c001a978                SATA::SATA()
                0x00000000c001a9a6                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001abf2                SATA::read(unsigned long long, int, void*)
                0x00000000c001ac3e                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001acaa      0x5af hw/diskphys/satapi.32
                0x00000000c001acaa                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001acb0                SATAPI::close(int, int, void*)
                0x00000000c001acd4                SATAPI::SATAPI()
                0x00000000c001acd4                SATAPI::SATAPI()
                0x00000000c001ad02                SATAPI::diskRemoved()
                0x00000000c001ad04                SATAPI::diskInserted()
                0x00000000c001ad20                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b000                SATAPI::eject()
                0x00000000c001b03c                SATAPI::detectMedia()
                0x00000000c001b062                SATAPI::open(int, int, void*)
                0x00000000c001b162                SATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001b259        0x1 
 .text          0x00000000c001b25a      0x455 hw/intctrl/apic.32
                0x00000000c001b25a                IOAPIC::close(int, int, void*)
                0x00000000c001b260                apicGetBase()
                0x00000000c001b2a2                IOAPIC::IOAPIC()
                0x00000000c001b2a2                IOAPIC::IOAPIC()
                0x00000000c001b2ca                apicOpen()
                0x00000000c001b430                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b462                IOAPIC::read(int)
                0x00000000c001b48a                IOAPIC::open(int, int, void*)
                0x00000000c001b57e                IOAPIC::write(int, int)
                0x00000000c001b5aa                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b6af        0x1 
 .text          0x00000000c001b6b0       0xf0 hw/timer/apictimer.32
                0x00000000c001b6b0                APICTimer::close(int, int, void*)
                0x00000000c001b6b8                apicTimerHandler(regs*, void*)
                0x00000000c001b6e0                APICTimer::open(int, int, void*)
                0x00000000c001b750                APICTimer::write(int)
                0x00000000c001b778                APICTimer::APICTimer()
                0x00000000c001b778                APICTimer::APICTimer()
 .text          0x00000000c001b7a0      0x1aa hw/timer/pit.32
                0x00000000c001b7a0                PIT::write(int)
                0x00000000c001b824                pitHandler(regs*, void*)
                0x00000000c001b848                PIT::open(int, int, void*)
                0x00000000c001b898                PIT::close(int, int, void*)
                0x00000000c001b8c8                PIT::PIT()
                0x00000000c001b8c8                PIT::PIT()
 *fill*         0x00000000c001b94a        0x6 
 .text          0x00000000c001b950       0x83 arch/i386/avx.32
                0x00000000c001b950                avxDetect
                0x00000000c001b97a                avxSave
                0x00000000c001b98b                avxLoad
                0x00000000c001b99c                avxInit
                0x00000000c001b9be                avxClose
                0x00000000c001b9bf                wouldSheSayYes
 *fill*         0x00000000c001b9d3        0xd 
 .text          0x00000000c001b9e0      0x1d6 arch/i386/interrupt.32
                0x00000000c001b9e0                isr0
                0x00000000c001b9f0                isr1
                0x00000000c001b9fa                isr2
                0x00000000c001ba04                isr3
                0x00000000c001ba0e                isr4
                0x00000000c001ba18                isr5
                0x00000000c001ba22                isr6
                0x00000000c001ba2c                isr7
                0x00000000c001ba36                isr8
                0x00000000c001ba3e                isr9
                0x00000000c001ba48                isr10
                0x00000000c001ba50                isr11
                0x00000000c001ba58                isr12
                0x00000000c001ba60                isr13
                0x00000000c001ba68                isr14
                0x00000000c001ba70                isr15
                0x00000000c001ba7a                isr16
                0x00000000c001ba84                isr17
                0x00000000c001ba8e                isr18
                0x00000000c001ba98                irq3
                0x00000000c001baa2                irq4
                0x00000000c001baac                irq5
                0x00000000c001bab6                irq6
                0x00000000c001bac0                irq7
                0x00000000c001baca                irq8
                0x00000000c001bad4                irq9
                0x00000000c001bade                irq10
                0x00000000c001bae8                irq11
                0x00000000c001baf2                irq12
                0x00000000c001bafc                irq13
                0x00000000c001bb06                irq14
                0x00000000c001bb10                irq15
                0x00000000c001bb1a                irq1
                0x00000000c001bb21                irq2
                0x00000000c001bb28                isr96
                0x00000000c001bb2f                irq0
                0x00000000c001bb34                int_common_stub
                0x00000000c001bb34                syscall_common_stub
                0x00000000c001bb66                irq16
                0x00000000c001bb70                irq17
                0x00000000c001bb7a                irq18
                0x00000000c001bb84                irq19
                0x00000000c001bb8e                irq20
                0x00000000c001bb98                irq21
                0x00000000c001bba2                irq22
                0x00000000c001bbac                irq23
 *fill*         0x00000000c001bbb6        0xa 
 .text          0x00000000c001bbc0       0x10 arch/i386/rdrand.32
                0x00000000c001bbc0                i386GetRDRAND
 .text          0x00000000c001bbd0       0x39 arch/i386/sse.32
                0x00000000c001bbd0                absolutelyNoChanceInHell
                0x00000000c001bbd0                sseDetect
                0x00000000c001bbe8                sseSave
                0x00000000c001bbf0                sseLoad
                0x00000000c001bbf8                sseInit
                0x00000000c001bc08                sseClose
 *fill*         0x00000000c001bc09        0x7 
 .text          0x00000000c001bc10       0x49 arch/i386/x87.32
                0x00000000c001bc16                x87Detect
                0x00000000c001bc31                x87Save
                0x00000000c001bc38                x87Load
                0x00000000c001bc3f                x87Init
                0x00000000c001bc58                x87Close
 *fill*         0x00000000c001bc59        0x3 
 .text          0x00000000c001bc5c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001bc81        0x0 crtn.32
 *fill*         0x00000000c001bc81        0x3 
 .text          0x00000000c001bc84      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001bc84                __divdi3
 *fill*         0x00000000c001bdcf        0x1 
 .text          0x00000000c001bdd0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001bdd0                __moddi3
 *fill*         0x00000000c001bf4e        0x2 
 .text          0x00000000c001bf50       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001bf50                __udivdi3
 *fill*         0x00000000c001c04f        0x1 
 .text          0x00000000c001c050      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c050                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c170        0x0
 .iplt          0x00000000c001c170        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c16a        0xf
 .init          0x00000000c001c16a        0x3 crti.32
                0x00000000c001c16a                _init
 .init          0x00000000c001c16d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c172        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c177        0x2 crtn.32

.fini           0x00000000c001c179        0xa
 .fini          0x00000000c001c179        0x3 crti.32
                0x00000000c001c179                _fini
 .fini          0x00000000c001c17c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c181        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c184       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c184       0x23 core/computer.32
                0x00000000c001c184                Computer::~Computer()
                0x00000000c001c184                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c1a8       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c1a8       0x2a core/computer.32
                0x00000000c001c1a8                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c1d2       0x21
 .text._Z10idleCommonv
                0x00000000c001c1d2       0x21 core/idle.32
                0x00000000c001c1d2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c1f4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c1f4        0x2 core/unixfile.32
                0x00000000c001c1f4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c1f4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c1f6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c1f6       0x42 core/unixfile.32
                0x00000000c001c1f6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c1f6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c238       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c238       0xd3 core/unixfile.32
                0x00000000c001c238                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c30c        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c30c        0x7 core/unixfile.32
                0x00000000c001c30c                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c314       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c314       0xa1 core/unixfile.32
                0x00000000c001c314                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c3b6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c3b6        0x8 core/unixfile.32
                0x00000000c001c3b6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c3be       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c3be       0x1a hal/device.32
                0x00000000c001c3be                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c3be                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c3d8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c3d8       0x2a hal/device.32
                0x00000000c001c3d8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c402       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c402       0xdc hal/device.32
                0x00000000c001c402                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c4de       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c4de       0x42 hal/device.32
                0x00000000c001c4de                LinkedList<Device>::LinkedList()
                0x00000000c001c4de                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c520       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c520       0x1c hal/timer.32
                0x00000000c001c520                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c53c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c53c        0x7 hal/timer.32
                0x00000000c001c53c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c544       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c544       0xb8 hal/timer.32
                0x00000000c001c544                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c5fc       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c5fc       0xda hal/timer.32
                0x00000000c001c5fc                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c6d8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c6d8       0x23 hw/acpi.32
                0x00000000c001c6d8                ACPI::~ACPI()
                0x00000000c001c6d8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c6fc       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c6fc       0x2a hw/acpi.32
                0x00000000c001c6fc                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c728        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c728        0x2 hw/acpi.32
                0x00000000c001c728                LinkedList<Device>::~LinkedList()
                0x00000000c001c728                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c72c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c72c       0x1c hw/acpi.32
                0x00000000c001c72c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c748        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c748        0x7 hw/acpi.32
                0x00000000c001c748                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c750       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c750       0xb8 hw/acpi.32
                0x00000000c001c750                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001c808       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001c808       0x23 hw/cpu.32
                0x00000000c001c808                CPU::~CPU()
                0x00000000c001c808                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001c82c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001c82c       0x2a hw/cpu.32
                0x00000000c001c82c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c858        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c858        0x2 thr/prcssthr.32
                0x00000000c001c858                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001c858                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c85c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c85c       0x49 thr/prcssthr.32
                0x00000000c001c85c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001c85c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c8a8       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c8a8       0x42 thr/prcssthr.32
                0x00000000c001c8a8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001c8a8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c8ec        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c8ec        0x8 thr/prcssthr.32
                0x00000000c001c8ec                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001c8f4       0x23
 .text._ZN3PCID2Ev
                0x00000000c001c8f4       0x23 hw/bus/pci.32
                0x00000000c001c8f4                PCI::~PCI()
                0x00000000c001c8f4                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001c918       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001c918       0x2a hw/bus/pci.32
                0x00000000c001c918                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001c942       0x23
 .text._ZN3IDED2Ev
                0x00000000c001c942       0x23 hw/diskctrl/ide.32
                0x00000000c001c942                IDE::~IDE()
                0x00000000c001c942                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001c966       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001c966       0x2a hw/diskctrl/ide.32
                0x00000000c001c966                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001c990       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001c990       0x23 hw/diskctrl/satabus.32
                0x00000000c001c990                SATABus::~SATABus()
                0x00000000c001c990                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001c9b4       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001c9b4       0x2a hw/diskctrl/satabus.32
                0x00000000c001c9b4                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001c9de       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001c9de       0x23 hw/diskphys/ata.32
                0x00000000c001c9de                ATA::~ATA()
                0x00000000c001c9de                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001ca02       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001ca02       0x2a hw/diskphys/ata.32
                0x00000000c001ca02                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001ca2c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001ca2c       0x23 hw/diskphys/atapi.32
                0x00000000c001ca2c                ATAPI::~ATAPI()
                0x00000000c001ca2c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001ca50       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001ca50       0x2a hw/diskphys/atapi.32
                0x00000000c001ca50                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001ca7a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001ca7a       0x23 hw/diskphys/sata.32
                0x00000000c001ca7a                SATA::~SATA()
                0x00000000c001ca7a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001ca9e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001ca9e       0x2a hw/diskphys/sata.32
                0x00000000c001ca9e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cac8       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cac8       0x23 hw/diskphys/satapi.32
                0x00000000c001cac8                SATAPI::~SATAPI()
                0x00000000c001cac8                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001caec       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001caec       0x2a hw/diskphys/satapi.32
                0x00000000c001caec                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cb16       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cb16       0x23 hw/intctrl/apic.32
                0x00000000c001cb16                IOAPIC::~IOAPIC()
                0x00000000c001cb16                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001cb3a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001cb3a       0x2a hw/intctrl/apic.32
                0x00000000c001cb3a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001cb64       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001cb64       0x23 hw/timer/apictimer.32
                0x00000000c001cb64                APICTimer::~APICTimer()
                0x00000000c001cb64                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001cb88       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001cb88       0x2a hw/timer/apictimer.32
                0x00000000c001cb88                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001cbb4       0x23
 .text._ZN3PITD2Ev
                0x00000000c001cbb4       0x23 hw/timer/pit.32
                0x00000000c001cbb4                PIT::~PIT()
                0x00000000c001cbb4                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001cbd8       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001cbd8       0x2a hw/timer/pit.32
                0x00000000c001cbd8                PIT::~PIT()

.rodata         0x00000000c001cc02     0x29ae
                0x00000000c001cc02                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001cc02        0x2 
 .ctors         0x00000000c001cc04        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001cc08        0x4 core/unixfile.32
 .ctors         0x00000000c001cc0c        0x4 thr/prcssthr.32
 .ctors         0x00000000c001cc10        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cc14                end_ctors = .
                0x00000000c001cc14                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001cc14        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001cc18        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cc18                __DTOR_END__
                0x00000000c001cc1c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001cc1c        0x4 
 .rodata        0x00000000c001cc20      0x101 acpica/utclib.32
                0x00000000c001cc20                AcpiGbl_Ctypes
 *fill*         0x00000000c001cd21        0x3 
 .rodata        0x00000000c001cd24       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001cd3c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001cd86       0x1a 
 .rodata        0x00000000c001cda0       0xed fs/fat/ff.32
 *fill*         0x00000000c001ce8d       0x13 
 .rodata        0x00000000c001cea0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d2a0       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d2b1      0x115 core/computer.32
 *fill*         0x00000000c001d3c6        0x2 
 .rodata.str1.4
                0x00000000c001d3c8       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d430       0x2c core/computer.32
                0x00000000c001d430                vtable for Computer
 .rodata.str1.4
                0x00000000c001d45c       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d48c        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d498       0x17 core/main.32
 *fill*         0x00000000c001d4af        0x1 
 .rodata.str1.4
                0x00000000c001d4b0       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d555       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d5ad       0x39 core/pipe.32
 *fill*         0x00000000c001d5e6        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d5e8       0x1c core/pipe.32
                0x00000000c001d5e8                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d604       0x75 core/terminal.32
 *fill*         0x00000000c001d679        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d67c       0x1c core/terminal.32
                0x00000000c001d67c                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d698       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d6ba       0x15 core/unixfile.32
 *fill*         0x00000000c001d6cf        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d6d0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d71b        0x8 core/unixfile.32
 *fill*         0x00000000c001d723        0x1 
 .rodata.str1.4
                0x00000000c001d724       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001d744       0x1c core/unixfile.32
                0x00000000c001d744                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001d760       0x1c core/unixfile.32
                0x00000000c001d760                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001d77c      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d8e3      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001d9ea       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001da1d       0x11 dbg/kconsole.32
 *fill*         0x00000000c001da1d        0x3 
 .rodata        0x00000000c001da20      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001db70       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001db70       0x68 fs/vfs.32
                0x00000000c001db70                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001dbd8       0x1c fs/vfs.32
                0x00000000c001dbd8                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001dbf4       0x1c fs/vfs.32
                0x00000000c001dbf4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001dc10       0x2c hal/bus.32
                0x00000000c001dc10                vtable for Bus
 .rodata.str1.1
                0x00000000c001dc3c       0x1e hal/clock.32
 *fill*         0x00000000c001dc5a        0x2 
 .rodata._ZTV5Clock
                0x00000000c001dc5c       0x3c hal/clock.32
                0x00000000c001dc5c                vtable for Clock
 *fill*         0x00000000c001dc98        0x8 
 .rodata        0x00000000c001dca0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001dcd0       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001dd28       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001dd28       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001dd28       0x2c hal/device.32
                0x00000000c001dd28                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001dd54       0x2c hal/device.32
                0x00000000c001dd54                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001dd80       0x2c hal/diskctrl.32
                0x00000000c001dd80                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001ddac       0x38 hal/diskphys.32
                0x00000000c001ddac                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001dde4       0x3e hal/intctrl.32
 *fill*         0x00000000c001de22        0x2 
 .rodata.str1.4
                0x00000000c001de24       0x5d hal/intctrl.32
 .rodata        0x00000000c001de81       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001ded4       0x34 hal/keybrd.32
                0x00000000c001ded4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001df08       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001df4c       0x2c hal/logidisk.32
                0x00000000c001df4c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001df78       0x2c hal/mouse.32
                0x00000000c001df78                vtable for Mouse
 .rodata.str1.1
                0x00000000c001dfa4        0xb hal/partition.32
 *fill*         0x00000000c001dfaf        0x1 
 .rodata._ZTV6Serial
                0x00000000c001dfb0       0x44 hal/serial.32
                0x00000000c001dfb0                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001dff4       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001dff4        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001dff4       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001dff4       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001dff4       0x30 hal/timer.32
                0x00000000c001dff4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e024       0x10 hal/vcache.32
                0x00000000c001e024                vtable for VCache
 .rodata.str1.1
                0x00000000c001e034       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e09c       0x48 hal/video.32
                0x00000000c001e09c                vtable for Video
 .rodata.str1.4
                0x00000000c001e0e4       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e17f      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e2bb       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e2bb        0x8 hw/acpi.32
 *fill*         0x00000000c001e2bb        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e2bc       0x2c hw/acpi.32
                0x00000000c001e2bc                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e2e8      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e455        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e458       0x2c hw/cpu.32
                0x00000000c001e458                vtable for CPU
 .rodata.str1.1
                0x00000000c001e484       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e4c0       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c001e551      0x10d krnl/signal.32
 *fill*         0x00000000c001e65e        0x2 
 .rodata.str1.4
                0x00000000c001e660       0x26 krnl/syscalls.32
 .rodata.str1.1
                0x00000000c001e686       0x97 krnl/syscalls.32
                                         0xa7 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e71d       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e762        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c001e76c        0xc sys/sbrk.32
 .rodata.str1.1
                0x00000000c001e778       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c001e7cc       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c001e7f8      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001e9c4       0x57 thr/prcssthr.32
 *fill*         0x00000000c001ea1b        0x1 
 .rodata.str1.4
                0x00000000c001ea1c      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001eb28       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001eb28       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001eb28       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001eb28        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001eb28       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001ebc8       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001ebf8      0x182 arch/i386/hal.32
                                        0x191 (size before relaxing)
 *fill*         0x00000000c001ed7a        0x2 
 .rodata.str1.4
                0x00000000c001ed7c       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001edef       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001ee04       0x3c arch/i386/rtc.32
                0x00000000c001ee04                vtable for RTC
 .rodata.str1.1
                0x00000000c001ee40       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001ee81        0x3 
 .rodata._ZTV3FAT
                0x00000000c001ee84       0x68 fs/fat/vfslink.32
                0x00000000c001ee84                vtable for FAT
 .rodata.str1.1
                0x00000000c001eeec        0x3 fs/iso9660/helper.32
                                          0x5 (size before relaxing)
 .rodata.str1.1
                0x00000000c001eeef       0x49 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c001ef38       0x68 fs/iso9660/vfslink.32
                0x00000000c001ef38                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001efa0       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001efe4       0x34 hal/sound/sndcard.32
                0x00000000c001efe4                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001f018       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f057       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f08f       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f130       0x2c hw/bus/pci.32
                0x00000000c001f130                vtable for PCI
 .rodata.str1.1
                0x00000000c001f15c       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f1e3        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f1e4       0x2c hw/diskctrl/ide.32
                0x00000000c001f1e4                vtable for IDE
 .rodata.str1.4
                0x00000000c001f210       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f234       0x2c hw/diskctrl/satabus.32
                0x00000000c001f234                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f260       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f272        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f274       0x38 hw/diskphys/ata.32
                0x00000000c001f274                vtable for ATA
 .rodata.str1.1
                0x00000000c001f2ac        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f2b9        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f2bc       0x38 hw/diskphys/atapi.32
                0x00000000c001f2bc                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f2f4       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f370       0x38 hw/diskphys/sata.32
                0x00000000c001f370                vtable for SATA
 .rodata.str1.1
                0x00000000c001f3a8      0x100 hw/diskphys/satapi.32
                                        0x10d (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f4a8       0x38 hw/diskphys/satapi.32
                0x00000000c001f4a8                vtable for SATAPI
 .rodata        0x00000000c001f4e0        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f4e8       0x2c hw/intctrl/apic.32
                0x00000000c001f4e8                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f514       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f52f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f530       0x30 hw/timer/apictimer.32
                0x00000000c001f530                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f560       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f57d        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f580       0x30 hw/timer/pit.32
                0x00000000c001f580                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f5b0      0x3a1
 *(.data)
 .data          0x00000000c001f5b0        0x0 crti.32
 .data          0x00000000c001f5b0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f5b0                __dso_handle
 .data          0x00000000c001f5b4        0x0 acpica/utclib.32
 .data          0x00000000c001f5b4        0x0 core/malloc.32
 .data          0x00000000c001f5b4        0x0 libk/ctype.32
 .data          0x00000000c001f5b4        0x0 libk/string.32
 .data          0x00000000c001f5b4        0x0 fs/fat/diskio.32
 .data          0x00000000c001f5b4        0x0 fs/fat/ff.32
 .data          0x00000000c001f5b4        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f5b4        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f5b4        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f5b4        0x0 core/computer.32
 .data          0x00000000c001f5b4        0x0 core/gdt.32
 .data          0x00000000c001f5b4        0x0 core/idle.32
 .data          0x00000000c001f5b4        0x0 core/idt.32
 .data          0x00000000c001f5b4        0x4 core/kheap.32
 .data          0x00000000c001f5b8        0x0 core/main.32
 .data          0x00000000c001f5b8        0x4 core/physmgr.32
                0x00000000c001f5b8                Phys::bitmap
 .data          0x00000000c001f5bc        0x0 core/pipe.32
 *fill*         0x00000000c001f5bc        0x4 
 .data          0x00000000c001f5c0       0x60 core/terminal.32
                0x00000000c001f5c0                VgaText::hiddenOut
                0x00000000c001f5e0                ansiToVGAMappings
 .data          0x00000000c001f620        0x0 core/tss.32
 .data          0x00000000c001f620        0x4 core/unixfile.32
                0x00000000c001f620                UnixFile::nextFd
 .data          0x00000000c001f624       0x15 core/virtmgr.32
                0x00000000c001f624                Virt::pageAllocPtr
                0x00000000c001f628                Virt::bitmap
                0x00000000c001f62c                Virt::swapfileSectorsPerPage
                0x00000000c001f630                Virt::swapfileLength
                0x00000000c001f634                Virt::swapfileSector
                0x00000000c001f638                Virt::swapfileDrive
 *fill*         0x00000000c001f639        0x3 
 .data          0x00000000c001f63c        0x4 coreobjs/c++.32
                0x00000000c001f63c                __stack_chk_guard
 .data          0x00000000c001f640        0x0 dbg/kconsole.32
 .data          0x00000000c001f640        0x0 fs/vfs.32
 .data          0x00000000c001f640        0x0 hal/bus.32
 .data          0x00000000c001f640        0x0 hal/buzzer.32
 .data          0x00000000c001f640        0x0 hal/clock.32
 .data          0x00000000c001f640        0x0 hal/device.32
 .data          0x00000000c001f640        0x0 hal/diskctrl.32
 .data          0x00000000c001f640        0x0 hal/diskphys.32
 .data          0x00000000c001f640        0x0 hal/fpu.32
 .data          0x00000000c001f640        0x0 hal/intctrl.32
 .data          0x00000000c001f640        0x0 hal/keybrd.32
 .data          0x00000000c001f640        0x0 hal/logidisk.32
 .data          0x00000000c001f640        0x0 hal/mouse.32
 .data          0x00000000c001f640        0x0 hal/partition.32
 .data          0x00000000c001f640        0x0 hal/serial.32
 .data          0x00000000c001f640        0x0 hal/timer.32
 .data          0x00000000c001f640        0x0 hal/vcache.32
 .data          0x00000000c001f640        0x0 hal/video.32
 .data          0x00000000c001f640       0x10 hw/acpi.32
                0x00000000c001f640                legacyIRQRemaps
 .data          0x00000000c001f650        0x4 hw/cpu.32
                0x00000000c001f650                lastCode
 *fill*         0x00000000c001f654        0xc 
 .data          0x00000000c001f660      0x142 krnl/bootmsg.32
                0x00000000c001f660                KiSplashScreen
 *fill*         0x00000000c001f7a2       0x1e 
 .data          0x00000000c001f7c0       0x4d krnl/env.32
                0x00000000c001f7c0                defaultSysEnv
 .data          0x00000000c001f80d        0x0 krnl/inlines.32
 .data          0x00000000c001f80d        0x0 krnl/panic.32
 .data          0x00000000c001f80d        0x0 krnl/powctrl.32
 .data          0x00000000c001f80d        0x0 krnl/resolve.32
 *fill*         0x00000000c001f80d       0x13 
 .data          0x00000000c001f820       0x4c krnl/signal.32
                0x00000000c001f820                KiDefaultSignalHandlers
 *fill*         0x00000000c001f86c       0x14 
 .data          0x00000000c001f880       0xcc krnl/syscalls.32
                0x00000000c001f880                systemCallHandlers
 .data          0x00000000c001f94c        0x0 reg/registry.32
 .data          0x00000000c001f94c        0x0 sys/eject.32
 .data          0x00000000c001f94c        0x0 sys/exit.32
 .data          0x00000000c001f94c        0x0 sys/getcwd.32
 .data          0x00000000c001f94c        0x0 sys/getpid.32
 .data          0x00000000c001f94c        0x0 sys/getramdata.32
 .data          0x00000000c001f94c        0x0 sys/getvgaptr.32
 .data          0x00000000c001f94c        0x0 sys/loaddll.32
 .data          0x00000000c001f94c        0x0 sys/read.32
 .data          0x00000000c001f94c        0x0 sys/registersignal.32
 .data          0x00000000c001f94c        0x0 sys/sbrk.32
 .data          0x00000000c001f94c        0x0 sys/setcwd.32
 .data          0x00000000c001f94c        0x0 sys/settime.32
 .data          0x00000000c001f94c        0x0 sys/timezone.32
 .data          0x00000000c001f94c        0x0 sys/write.32
 .data          0x00000000c001f94c        0x0 sys/wsbe.32
 .data          0x00000000c001f94c        0x0 sys/yield.32
 .data          0x00000000c001f94c        0x0 thr/elf.32
 .data          0x00000000c001f94c        0x4 thr/prcssthr.32
                0x00000000c001f94c                Thr::nextPID
 .data          0x00000000c001f950        0x0 vm86/vm8086.32
 .data          0x00000000c001f950        0x0 arch/i386/hal.32
 .data          0x00000000c001f950        0x0 arch/i386/pic.32
 .data          0x00000000c001f950        0x0 arch/i386/rtc.32
 .data          0x00000000c001f950        0x0 arch/i386/vga.32
 .data          0x00000000c001f950        0x0 fs/fat/vfslink.32
 .data          0x00000000c001f950        0x0 fs/iso9660/helper.32
 .data          0x00000000c001f950        0x1 fs/iso9660/vfslink.32
                0x00000000c001f950                recentDriveletter
 .data          0x00000000c001f951        0x0 hal/sound/sndcard.32
 .data          0x00000000c001f951        0x0 hal/sound/sndport.32
 .data          0x00000000c001f951        0x0 hw/bus/isa.32
 .data          0x00000000c001f951        0x0 hw/bus/pci.32
 .data          0x00000000c001f951        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001f951        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001f951        0x0 hw/diskphys/ata.32
 .data          0x00000000c001f951        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001f951        0x0 hw/diskphys/sata.32
 .data          0x00000000c001f951        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001f951        0x0 hw/intctrl/apic.32
 .data          0x00000000c001f951        0x0 hw/timer/apictimer.32
 .data          0x00000000c001f951        0x0 hw/timer/pit.32
 .data          0x00000000c001f951        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001f951        0x0 crtn.32
 .data          0x00000000c001f951        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001f951        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001f951        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001f951        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001f954        0x0
 .got           0x00000000c001f954        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001f954        0x0
 .got.plt       0x00000000c001f954        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001f954        0x0
 .igot.plt      0x00000000c001f954        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001f954        0x0
 .tm_clone_table
                0x00000000c001f954        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001f954        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001f951      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001f951        0x3 
 .eh_frame      0x00000000c001f954        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001f954        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001f954       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001f9ac       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001f9ec       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001fa58       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001fadc        0x0
 .rel.got       0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001fadc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001fadc     0x4b8c
                0x00000000c001fadc                sbss = .
 *(COMMON)
 *fill*         0x00000000c001fadc        0x4 
 COMMON         0x00000000c001fae0       0xa0 fs/iso9660/iso9660.32
                0x00000000c001fae0                dcache
                0x00000000c001fb20                cdDriveLetter
                0x00000000c001fb40                icache
 *(.bss)
 .bss           0x00000000c001fb80        0x0 crti.32
 .bss           0x00000000c001fb80       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001fba0        0x4 acpica/utclib.32
 *fill*         0x00000000c001fba4       0x1c 
 .bss           0x00000000c001fbc0      0x378 core/malloc.32
 .bss           0x00000000c001ff38        0x0 libk/ctype.32
 .bss           0x00000000c001ff38        0x0 libk/string.32
 .bss           0x00000000c001ff38        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001ff38        0x8 
 .bss           0x00000000c001ff40       0x88 fs/fat/ff.32
 .bss           0x00000000c001ffc8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c001ffc8        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c001ffc8       0x18 
 .bss           0x00000000c001ffe0      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0020978        0x6 core/computer.32
                0x00000000c0020978                Krnl::computer
                0x00000000c002097c                KeIsPreemptionOn
                0x00000000c002097d                KeIsSchedulingOn
 *fill*         0x00000000c002097e        0x2 
 .bss           0x00000000c0020980        0x6 core/gdt.32
                0x00000000c0020980                gdtDescr
 .bss           0x00000000c0020986        0x0 core/idle.32
 *fill*         0x00000000c0020986        0x2 
 .bss           0x00000000c0020988        0x6 core/idt.32
                0x00000000c0020988                idtDescr
 .bss           0x00000000c002098e        0x0 core/kheap.32
 *fill*         0x00000000c002098e        0x2 
 .bss           0x00000000c0020990        0x4 core/main.32
                0x00000000c0020990                sysBootSettings
 .bss           0x00000000c0020994       0x29 core/physmgr.32
                0x00000000c0020994                Phys::forbidEvictions
                0x00000000c0020998                Phys::currentPagePointer
                0x00000000c002099c                Phys::highestMem
                0x00000000c00209a0                Phys::oldPercent
                0x00000000c00209a4                Phys::usedPages
                0x00000000c00209a8                Phys::usablePages
                0x00000000c00209ac                Phys::dmaUsage
 .bss           0x00000000c00209bd        0x0 core/pipe.32
 *fill*         0x00000000c00209bd        0x3 
 .bss           0x00000000c00209c0        0x9 core/terminal.32
                0x00000000c00209c0                terminalCycle
                0x00000000c00209c4                activeTerminal
                0x00000000c00209c8                VgaText::graphicMode
 *fill*         0x00000000c00209c9        0x1 
 .bss           0x00000000c00209ca        0x2 core/tss.32
                0x00000000c00209ca                doubleFaultSelector
 *fill*         0x00000000c00209cc       0x14 
 .bss           0x00000000c00209e0       0x84 core/unixfile.32
                0x00000000c00209e0                sfileLpt
                0x00000000c0020a20                sfileCom
                0x00000000c0020a44                sfileNul
                0x00000000c0020a48                sfilePnt
                0x00000000c0020a4c                sfileAux
                0x00000000c0020a50                sfileCon
                0x00000000c0020a54                initialFilesAdded
                0x00000000c0020a58                unixFileLinkedList
 .bss           0x00000000c0020a64       0x10 core/virtmgr.32
                0x00000000c0020a64                twswaps
                0x00000000c0020a68                swapBalance
                0x00000000c0020a6c                Virt::swapfileBitmap
                0x00000000c0020a70                firstVAS
 .bss           0x00000000c0020a74        0x0 coreobjs/c++.32
 .bss           0x00000000c0020a74        0x0 dbg/kconsole.32
 .bss           0x00000000c0020a74        0x4 fs/vfs.32
                0x00000000c0020a74                installedFilesystems
 .bss           0x00000000c0020a78        0x0 hal/bus.32
 .bss           0x00000000c0020a78        0x0 hal/buzzer.32
 .bss           0x00000000c0020a78        0x8 hal/clock.32
                0x00000000c0020a78                User::dstOn
                0x00000000c0020a79                User::timezoneHalfHourOffset
                0x00000000c0020a7c                User::timezoneHourOffset
 .bss           0x00000000c0020a80        0x0 hal/device.32
 .bss           0x00000000c0020a80        0x0 hal/diskctrl.32
 .bss           0x00000000c0020a80        0x0 hal/diskphys.32
 .bss           0x00000000c0020a80        0x0 hal/fpu.32
 .bss           0x00000000c0020a80     0x2000 hal/intctrl.32
                0x00000000c0020a80                INT_contexts
                0x00000000c0021a80                INT_handlers
 .bss           0x00000000c0022a80      0x429 hal/keybrd.32
                0x00000000c0022a80                keyboardWaitingTaskList
                0x00000000c0022a84                keyboardSetupYet
                0x00000000c0022a88                guiKeyboardHandler
                0x00000000c0022aa0                keystates
 *fill*         0x00000000c0022ea9       0x17 
 .bss           0x00000000c0022ec0       0x88 hal/logidisk.32
                0x00000000c0022ec0                diskAssignments
                0x00000000c0022ee0                disks
 .bss           0x00000000c0022f48        0x4 hal/mouse.32
                0x00000000c0022f48                guiMouseHandler
 .bss           0x00000000c0022f4c        0x0 hal/partition.32
 .bss           0x00000000c0022f4c        0x0 hal/serial.32
 .bss           0x00000000c0022f4c        0x4 hal/timer.32
                0x00000000c0022f4c                milliTenthsSinceBoot
 .bss           0x00000000c0022f50        0x0 hal/vcache.32
 .bss           0x00000000c0022f50        0x4 hal/video.32
                0x00000000c0022f50                screen
 *fill*         0x00000000c0022f54        0xc 
 .bss           0x00000000c0022f60      0x480 hw/acpi.32
                0x00000000c0022f60                systemSleepFunction
                0x00000000c0022f64                systemResetFunction
                0x00000000c0022f68                systemShutdownFunction
                0x00000000c0022f6c                nextACPITable
                0x00000000c0022f80                acpiTables
                0x00000000c0023180                usingXSDT
                0x00000000c0023184                MADTpointer
                0x00000000c0023188                RSDTpointer
                0x00000000c002318c                RSDPpointer
                0x00000000c0023190                nextAPICNMI
                0x00000000c00231a0                apicNMIInfo
                0x00000000c0023220                legacyIRQFlags
                0x00000000c0023240                ioapicDiscoveryNumber
                0x00000000c0023260                ioapicFoundInMADT
                0x00000000c0023280                ioapicAddresses
                0x00000000c0023300                ioapicGSIBase
                0x00000000c0023380                processorDiscoveryNumber
                0x00000000c00233a0                matchingAPICID
                0x00000000c00233c0                processorID
 .bss           0x00000000c00233e0       0x10 hw/cpu.32
                0x00000000c00233e0                lastD
                0x00000000c00233e4                lastC
                0x00000000c00233e8                lastB
                0x00000000c00233ec                lastA
 .bss           0x00000000c00233f0        0x0 krnl/bootmsg.32
 .bss           0x00000000c00233f0        0x8 krnl/env.32
                0x00000000c00233f0                Krnl::userEnv
                0x00000000c00233f4                Krnl::systemEnv
 .bss           0x00000000c00233f8        0x0 krnl/inlines.32
 .bss           0x00000000c00233f8        0x1 krnl/panic.32
                0x00000000c00233f8                KeIsKernelInPanic
 *fill*         0x00000000c00233f9        0x7 
 .bss           0x00000000c0023400       0x48 krnl/powctrl.32
                0x00000000c0023400                Krnl::powCtrlOnBattery
                0x00000000c0023420                Krnl::currentPowerSettings
                0x00000000c0023444                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0023448        0x0 krnl/resolve.32
 .bss           0x00000000c0023448        0x0 krnl/signal.32
 .bss           0x00000000c0023448        0x0 krnl/syscalls.32
 .bss           0x00000000c0023448        0x0 reg/registry.32
 .bss           0x00000000c0023448        0x0 sys/eject.32
 .bss           0x00000000c0023448        0x0 sys/exit.32
 .bss           0x00000000c0023448        0x0 sys/getcwd.32
 .bss           0x00000000c0023448        0x0 sys/getpid.32
 .bss           0x00000000c0023448        0x0 sys/getramdata.32
 .bss           0x00000000c0023448        0x0 sys/getvgaptr.32
 .bss           0x00000000c0023448        0x0 sys/loaddll.32
 .bss           0x00000000c0023448        0x0 sys/read.32
 .bss           0x00000000c0023448        0x0 sys/registersignal.32
 .bss           0x00000000c0023448        0x0 sys/sbrk.32
 .bss           0x00000000c0023448        0x0 sys/setcwd.32
 .bss           0x00000000c0023448        0x0 sys/settime.32
 .bss           0x00000000c0023448        0x0 sys/timezone.32
 .bss           0x00000000c0023448        0x0 sys/write.32
 .bss           0x00000000c0023448        0x0 sys/wsbe.32
 .bss           0x00000000c0023448        0x0 sys/yield.32
 *fill*         0x00000000c0023448       0x18 
 .bss           0x00000000c0023460      0x7a4 thr/elf.32
                0x00000000c0023460                Thr::driverLookupNext
                0x00000000c0023480                Thr::driverLookupLen
                0x00000000c0023680                Thr::driverLookupAddr
                0x00000000c0023880                Thr::driverNameLookup
                0x00000000c0023a80                Thr::kernelSymbols
                0x00000000c0023b00                Thr::kernelStringTable
                0x00000000c0023b80                Thr::kernelSymbolTable
                0x00000000c0023c00                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023c04        0x4 
 .bss           0x00000000c0023c08       0x68 thr/prcssthr.32
                0x00000000c0023c08                cleanerThread
                0x00000000c0023c0c                weNeedTheCleanerToNotBlock
                0x00000000c0023c10                retValLockStuff
                0x00000000c0023c14                retValSchedLock
                0x00000000c0023c18                lockStuffLock
                0x00000000c0023c1c                schedulerLock
                0x00000000c0023c20                taskSwitchesPostponedFlag
                0x00000000c0023c24                postponeTaskSwitchesCounter
                0x00000000c0023c28                irqDisableCounter
                0x00000000c0023c2c                terminatedTaskList
                0x00000000c0023c38                sleepingTaskList
                0x00000000c0023c44                taskList
                0x00000000c0023c50                kernelProcess
 *fill*         0x00000000c0023c70       0x10 
 .bss           0x00000000c0023c80       0x40 vm86/vm8086.32
                0x00000000c0023c80                Vm::vmRetV
                0x00000000c0023c84                Vm::vmDone
                0x00000000c0023c85                Vm::vmReady
                0x00000000c0023c88                Vm::vm86Thread
                0x00000000c0023c8c                Vm::vmToHostCommsPtr
                0x00000000c0023ca0                Vm::vmToHostComms
 .bss           0x00000000c0023cc0       0x14 arch/i386/hal.32
                0x00000000c0023cc0                apic
                0x00000000c0023cc4                fpuOwner
                0x00000000c0023cc8                coproLoadFunc
                0x00000000c0023ccc                coproSaveFunc
                0x00000000c0023cd0                gpFaultIntercept
 .bss           0x00000000c0023cd4        0x0 arch/i386/pic.32
 .bss           0x00000000c0023cd4        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023cd6        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023cd6        0xa 
 .bss           0x00000000c0023ce0       0xf0 fs/fat/vfslink.32
                0x00000000c0023ce0                FAT::fats
                0x00000000c0023d00                FAT::vfsToFatRemaps
                0x00000000c0023d80                fatToVFSRemaps
 .bss           0x00000000c0023dd0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0023dd0       0x10 
 .bss           0x00000000c0023de0      0x820 fs/iso9660/vfslink.32
                0x00000000c0023de0                iso9660Owner
                0x00000000c0023de4                recentSector
                0x00000000c0023e00                recentBuffer
 .bss           0x00000000c0024600        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0024600        0x0 hal/sound/sndport.32
 .bss           0x00000000c0024600        0x0 hw/bus/isa.32
 .bss           0x00000000c0024600        0xd hw/bus/pci.32
                0x00000000c0024600                thePCI
 .bss           0x00000000c002460d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002460d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002460d        0x3 
 .bss           0x00000000c0024610        0x8 hw/diskphys/ata.32
                0x00000000c0024610                ataSectorsWritten
                0x00000000c0024614                ataSectorsRead
 .bss           0x00000000c0024618        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024618        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0024618        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0024618        0x8 
 .bss           0x00000000c0024620       0x41 hw/intctrl/apic.32
                0x00000000c0024620                noOfIOAPICs
                0x00000000c0024640                ioapics
                0x00000000c0024660                IOAPICsSetupYet
 .bss           0x00000000c0024661        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024661        0x3 
 .bss           0x00000000c0024664        0x4 hw/timer/pit.32
                0x00000000c0024664                pitFreq
 .bss           0x00000000c0024668        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024668        0x0 crtn.32
 .bss           0x00000000c0024668        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0024668        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0024668        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0024668        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024668                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00291f4                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
