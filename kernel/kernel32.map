Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              compat/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              compat/resolve.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1c25a
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0xe 
 .text          0x00000000c00003b0      0x79e acpica/utclib.32
                0x00000000c00003b0                memcmp
                0x00000000c0000400                memmove
                0x00000000c00004f0                memset
                0x00000000c0000560                strlen
                0x00000000c0000590                strpbrk
                0x00000000c00005d0                strtok
                0x00000000c0000620                strcpy
                0x00000000c0000650                strncpy
                0x00000000c0000700                strcmp
                0x00000000c0000750                strchr
                0x00000000c0000780                strncmp
                0x00000000c00007e0                strcat
                0x00000000c0000810                strncat
                0x00000000c0000870                strstr
                0x00000000c00008d0                toupper
                0x00000000c00008f0                tolower
                0x00000000c0000910                simple_strtoul
 .text          0x00000000c0000b4e      0xfad core/malloc.32
                0x00000000c0000cb9                dlfree
                0x00000000c0001014                dlmalloc
                0x00000000c0001551                dlrealloc
                0x00000000c00016f4                dlmemalign
                0x00000000c0001817                dlcalloc
                0x00000000c00018b1                dlcfree
                0x00000000c00018b6                dlindependent_calloc
                0x00000000c00018db                dlindependent_comalloc
                0x00000000c00018f2                dlvalloc
                0x00000000c000191d                dlpvalloc
                0x00000000c0001953                dlmalloc_trim
                0x00000000c0001960                dlmalloc_usable_size
                0x00000000c0001991                dlmallinfo
                0x00000000c0001a60                dlmalloc_stats
                0x00000000c0001a71                dlmallopt
 *fill*         0x00000000c0001afb        0x1 
 .text          0x00000000c0001afc      0x1f2 libk/ctype.32
                0x00000000c0001afc                isblank
                0x00000000c0001b1c                iscntrl
                0x00000000c0001b3c                isdigit
                0x00000000c0001b58                islower
                0x00000000c0001b74                isspace
                0x00000000c0001b9c                isupper
                0x00000000c0001bb8                isalpha
                0x00000000c0001be8                isalnum
                0x00000000c0001c18                ispunct
                0x00000000c0001c58                isgraph
                0x00000000c0001c88                isprint
                0x00000000c0001cb0                isxdigit
 .text          0x00000000c0001cee        0x0 libk/string.32
 .text          0x00000000c0001cee       0x51 fs/fat/diskio.32
                0x00000000c0001cee                disk_status
                0x00000000c0001cf1                disk_initialize
                0x00000000c0001cf4                disk_read
                0x00000000c0001d0a                disk_write
                0x00000000c0001d20                disk_ioctl
 .text          0x00000000c0001d3f     0x3d4b fs/fat/ff.32
                0x00000000c0003adb                f_mount
                0x00000000c0003b3d                f_open
                0x00000000c0003e08                f_read
                0x00000000c0004007                f_write
                0x00000000c000423b                f_sync
                0x00000000c00042f0                f_close
                0x00000000c000431f                f_lseek
                0x00000000c00044c6                f_opendir
                0x00000000c0004591                f_closedir
                0x00000000c00045b3                f_readdir
                0x00000000c0004645                f_stat
                0x00000000c00046c4                f_getfree
                0x00000000c00047c6                f_truncate
                0x00000000c00048aa                f_unlink
                0x00000000c00049cc                f_mkdir
                0x00000000c0004b67                f_rename
                0x00000000c0004d1d                f_chmod
                0x00000000c0004dc6                f_utime
                0x00000000c0004e74                f_getlabel
                0x00000000c0004fc5                f_setlabel
                0x00000000c0005155                f_expand
                0x00000000c00052b5                f_mkfs
 *fill*         0x00000000c0005a8a        0x2 
 .text          0x00000000c0005a8c       0x2f fs/fat/ffsystem.32
                0x00000000c0005a8c                ff_memalloc
                0x00000000c0005aa4                ff_memfree
 *fill*         0x00000000c0005abb        0x1 
 .text          0x00000000c0005abc      0x2a8 fs/fat/ffunicode.32
                0x00000000c0005abc                ff_uni2oem
                0x00000000c0005b5c                ff_oem2uni
                0x00000000c0005bd4                ff_wtoupper
 .text          0x00000000c0005d64     0x114b fs/iso9660/iso9660.32
                0x00000000c0006064                isoReadDiscSector
                0x00000000c0006145                strnicmp
                0x00000000c00064a8                stricmp
                0x00000000c0006502                iso_open
                0x00000000c00065d2                iso_close
                0x00000000c00065ed                iso_read
                0x00000000c00067eb                iso_seek
                0x00000000c00068c9                iso_tell
                0x00000000c0006926                iso_total
                0x00000000c000696f                fn_postprocess
                0x00000000c00069be                iso_readdir
                0x00000000c0006c88                iso_reset
                0x00000000c0006c98                init_percd
                0x00000000c0006d9d                iso_ioctl
                0x00000000c0006da8                fs_iso9660_init
                0x00000000c0006e37                fs_iso9660_shutdown
 .text          0x00000000c0006eaf       0x94 compat/inlines.32
                0x00000000c0006eaf                CPU::current()
                0x00000000c0006ebb                operator new(unsigned long)
                0x00000000c0006ec0                operator delete(void*)
                0x00000000c0006ec5                disableIRQs()
                0x00000000c0006ec7                enableIRQs()
                0x00000000c0006ec9                lockScheduler()
                0x00000000c0006ed1                unlockScheduler()
                0x00000000c0006ee0                lockStuff()
                0x00000000c0006eee                unlockStuff()
                0x00000000c0006f28                Virt::getAKernelVAS()
                0x00000000c0006f2e                __not_memcpy
 *fill*         0x00000000c0006f43        0x1 
 .text          0x00000000c0006f44      0x118 compat/resolve.32
                0x00000000c0006f44                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c000705c      0x68b core/computer.32
                0x00000000c000705c                Computer::close(int, int, void*)
                0x00000000c00070a1                Krnl::firstTask()
                0x00000000c00071da                Computer::Computer()
                0x00000000c00071da                Computer::Computer()
                0x00000000c000728c                Computer::setBootMessage(char const*)
                0x00000000c000728e                Computer::detectFeatures()
                0x00000000c0007498                Computer::displayFeatures()
                0x00000000c000749a                Computer::rdmsr(unsigned int)
                0x00000000c00074c6                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c00074fe                Computer::shutdown()
                0x00000000c0007516                Computer::restart()
                0x00000000c000752e                Computer::sleep()
                0x00000000c0007542                Computer::nmiEnabled()
                0x00000000c000754e                Computer::readCMOS(unsigned char)
                0x00000000c0007568                Computer::enableNMI(bool)
                0x00000000c0007580                Computer::open(int, int, void*)
                0x00000000c0007654                Computer::disableNMI()
                0x00000000c0007664                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0007682                Computer::handleNMI()
 *fill*         0x00000000c00076e7        0x1 
 .text          0x00000000c00076e8      0x1cf core/gdt.32
                0x00000000c00076e8                GDTEntry::setBase(unsigned int)
                0x00000000c0007704                GDTEntry::setLimit(unsigned int)
                0x00000000c0007722                GDT::GDT()
                0x00000000c0007722                GDT::GDT()
                0x00000000c0007738                GDT::addEntry(GDTEntry)
                0x00000000c000775a                GDT::getNumberOfEntries()
                0x00000000c0007762                GDT::flush()
                0x00000000c0007784                GDT::setup()
 .text          0x00000000c00078b7       0x19 core/idle.32
                0x00000000c00078b7                idleFunction(void*)
 .text          0x00000000c00078d0      0x464 core/idt.32
                0x00000000c00078d0                IDTEntry::IDTEntry(bool)
                0x00000000c00078d0                IDTEntry::IDTEntry(bool)
                0x00000000c0007942                IDTEntry::setOffset(unsigned int)
                0x00000000c0007958                IDT::IDT()
                0x00000000c0007958                IDT::IDT()
                0x00000000c000795a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c0007962                IDT::addEntry(IDTEntry, int)
                0x00000000c000797c                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00079b4                IDT::flush()
                0x00000000c00079ce                IDT::setup()
 .text          0x00000000c0007d34      0x183 core/kheap.32
                0x00000000c0007d34                sbrk
                0x00000000c0007dc9                mmap
                0x00000000c0007ddf                munmap
                0x00000000c0007df5                liballoc_lock()
                0x00000000c0007e02                liballoc_unlock()
                0x00000000c0007e16                liballoc_alloc(int)
                0x00000000c0007e2e                liballoc_free(void*, int)
                0x00000000c0007e49                realloc
                0x00000000c0007e5d                malloc
                0x00000000c0007e6d                free
                0x00000000c0007e7d                rfree
                0x00000000c0007e8d                calloc
 .text          0x00000000c0007eb7      0x1b4 core/main.32
                0x00000000c0007eb7                Krnl::setBootMessage(char const*)
                0x00000000c0007f23                kernel_main
 .text          0x00000000c000806b      0x5dc core/physmgr.32
                0x00000000c000806b                Phys::allocateDMA(unsigned long)
                0x00000000c0008142                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0008175                Phys::setPageState(unsigned long, bool)
                0x00000000c00081a7                Phys::getPageState(unsigned long)
                0x00000000c00081c8                Phys::freePage(unsigned long)
                0x00000000c000822a                Phys::allocatePage()
                0x00000000c00082e8                Phys::allocateContiguousPages(int)
                0x00000000c0008344                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000837c                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c0008647        0x1 
 .text          0x00000000c0008648      0x273 core/pipe.32
                0x00000000c0008648                Pipe::isAtty()
                0x00000000c000864c                Pipe::~Pipe()
                0x00000000c000864c                Pipe::~Pipe()
                0x00000000c0008670                Pipe::~Pipe()
                0x00000000c0008698                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008758                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008854                Pipe::Pipe(int)
                0x00000000c0008854                Pipe::Pipe(int)
 *fill*         0x00000000c00088bb        0x1 
 .text          0x00000000c00088bc      0xa1e core/terminal.32
                0x00000000c00088bc                VgaText::isAtty()
                0x00000000c00088c0                VgaText::~VgaText()
                0x00000000c00088c0                VgaText::~VgaText()
                0x00000000c00088e4                VgaText::~VgaText()
                0x00000000c000890e                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000892e                setTerminalScrollLock(bool)
                0x00000000c000892f                doTerminalCycle()
                0x00000000c0008930                addToTerminalCycle(VgaText*)
                0x00000000c0008931                scrollTerminalScrollLock(int)
                0x00000000c0008932                VgaText::updateTitle()
                0x00000000c0008934                VgaText::load()
                0x00000000c0008936                VgaText::updateCursor()
                0x00000000c000894c                VgaText::doANSI_SGR(int)
                0x00000000c00089c0                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00089d0                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00089e0                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0008a00                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0008a0c                VgaText::setTitleColour(VgaColour)
                0x00000000c0008a18                VgaText::setTitle(char*)
                0x00000000c0008a1a                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008a2c                VgaText::scrollScreen()
                0x00000000c0008ac4                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0008ad6                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008b66                VgaText::getCursorX()
                0x00000000c0008b6e                VgaText::getCursorY()
                0x00000000c0008b76                VgaText::setCursor(int, int)
                0x00000000c0008b8d                setActiveTerminal(VgaText*)
                0x00000000c0008bd8                VgaText::clearScreen()
                0x00000000c0008c26                VgaText::setCursorX(int)
                0x00000000c0008c3e                VgaText::setCursorY(int)
                0x00000000c0008c56                VgaText::incrementCursor(bool)
                0x00000000c0008caa                VgaText::decrementCursor(bool)
                0x00000000c0008ccc                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008d9a                VgaText::putchar(char)
                0x00000000c0008e86                VgaText::putx(unsigned int)
                0x00000000c0008ecc                VgaText::puts(char const*)
                0x00000000c0008ef2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008f3e                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0009090                VgaText::VgaText(char const*)
                0x00000000c0009090                VgaText::VgaText(char const*)
                0x00000000c00091dc                VgaText::receiveKey(unsigned char)
                0x00000000c00092b4                VgaText::doUpdate()
                0x00000000c00092b5                newTerminal(char*)
 *fill*         0x00000000c00092da        0x2 
 .text          0x00000000c00092dc      0x1a1 core/tss.32
                0x00000000c00092dc                TSS::TSS()
                0x00000000c00092dc                TSS::TSS()
                0x00000000c00092ec                TSS::setESP(unsigned long)
                0x00000000c0009300                TSS::flush()
                0x00000000c0009320                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000947d        0x1 
 .text          0x00000000c000947e      0x4c2 core/unixfile.32
                0x00000000c000947e                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00094d4                ReservedFilename::isAtty()
                0x00000000c00094f0                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000954e                UnixFile::getFileDescriptor()
                0x00000000c0009556                UnixFile::UnixFile(int)
                0x00000000c0009556                UnixFile::UnixFile(int)
                0x00000000c0009706                ReservedFilename::ReservedFilename(int)
                0x00000000c0009706                ReservedFilename::ReservedFilename(int)
                0x00000000c0009738                UnixFile::~UnixFile()
                0x00000000c0009738                UnixFile::~UnixFile()
                0x00000000c00097d0                UnixFile::~UnixFile()
                0x00000000c00097f8                ReservedFilename::~ReservedFilename()
                0x00000000c00097f8                ReservedFilename::~ReservedFilename()
                0x00000000c000981c                ReservedFilename::~ReservedFilename()
                0x00000000c0009843                getFromFileDescriptor(int)
 .text          0x00000000c0009940     0x1166 core/virtmgr.32
                0x00000000c0009940                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0009975                Virt::getPageState(unsigned long)
                0x00000000c0009999                Virt::allocateKernelVirtualPages(int)
                0x00000000c0009aaa                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009ac8                Virt::swapIDToSector(unsigned long)
                0x00000000c0009ada                Virt::allocateSwapfilePage()
                0x00000000c0009b58                Virt::virtualMemorySetup()
                0x00000000c0009ba3                Virt::setupPageSwapping(int)
                0x00000000c0009c14                VAS::VAS()
                0x00000000c0009c14                VAS::VAS()
                0x00000000c0009c50                VAS::VAS(VAS*)
                0x00000000c0009c50                VAS::VAS(VAS*)
                0x00000000c0009c7e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0009caa                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009cc9                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009dee                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009e12                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009e2c                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009e6c                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009ea0                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009eca                VAS::~VAS()
                0x00000000c0009eca                VAS::~VAS()
                0x00000000c000a02e                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000a132                VAS::allocatePages(int, int)
                0x00000000c000a30a                VAS::setCPUSpecific(unsigned long)
                0x00000000c000a328                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a3ee                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a4dc                VAS::VAS(bool)
                0x00000000c000a4dc                VAS::VAS(bool)
                0x00000000c000a75c                VAS::evict(unsigned long)
                0x00000000c000a81e                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a90c                VAS::scanForEviction()
                0x00000000c000a9ec                mapVASFirstTime
 .text          0x00000000c000aaa6       0x5f coreobjs/c++.32
                0x00000000c000aaa6                __cxa_atexit
                0x00000000c000aaa9                __cxa_finalize
                0x00000000c000aaaa                __stack_chk_fail
                0x00000000c000aae0                __cxa_pure_virtual
                0x00000000c000aaf1                operator new[](unsigned long)
                0x00000000c000aaf6                operator delete(void*, unsigned long)
                0x00000000c000aafb                operator delete[](void*)
                0x00000000c000ab00                operator delete[](void*, unsigned long)
 .text          0x00000000c000ab05      0x21c dbg/kconsole.32
                0x00000000c000ab05                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ab70                Dbg::logc(char)
                0x00000000c000ab90                Dbg::logs(char*)
                0x00000000c000abad                Dbg::logWriteInt(unsigned int)
                0x00000000c000abcb                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000abec                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000ad21        0x1 
 .text          0x00000000c000ad22      0xc5c fs/vfs.32
                0x00000000c000ad22                File::read(unsigned long long, void*, int*)
                0x00000000c000ad7a                File::write(unsigned long long, void*, int*)
                0x00000000c000add2                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ae2a                Directory::write(unsigned long long, void*, int*)
                0x00000000c000ae58                File::isAtty()
                0x00000000c000ae5c                Directory::isAtty()
                0x00000000c000ae60                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000ae66                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000ae6c                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ae72                File::~File()
                0x00000000c000ae72                File::~File()
                0x00000000c000ae96                File::~File()
                0x00000000c000aec0                Directory::~Directory()
                0x00000000c000aec0                Directory::~Directory()
                0x00000000c000aee4                Directory::~Directory()
                0x00000000c000af0e                Filesystem::Filesystem()
                0x00000000c000af0e                Filesystem::Filesystem()
                0x00000000c000af32                Filesystem::~Filesystem()
                0x00000000c000af32                Filesystem::~Filesystem()
                0x00000000c000af40                Filesystem::~Filesystem()
                0x00000000c000af64                Fs::getcwd(Process*, char*, int)
                0x00000000c000af8e                Fs::initVFS()
                0x00000000c000afb8                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000b162                File::File(char const*, Process*)
                0x00000000c000b162                File::File(char const*, Process*)
                0x00000000c000b222                File::open(FileOpenMode)
                0x00000000c000b280                File::close()
                0x00000000c000b2e0                File::seek(unsigned long long)
                0x00000000c000b336                File::tell(unsigned long long*)
                0x00000000c000b386                File::rewind()
                0x00000000c000b39a                File::unlink()
                0x00000000c000b3e6                File::rename(char const*)
                0x00000000c000b434                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b490                File::exists()
                0x00000000c000b4ce                File::stat(unsigned long long*, bool*)
                0x00000000c000b52f                Fs::setcwd(Process*, char*)
                0x00000000c000b68c                Directory::Directory(char const*, Process*)
                0x00000000c000b68c                Directory::Directory(char const*, Process*)
                0x00000000c000b74c                Directory::open()
                0x00000000c000b7a8                Directory::close()
                0x00000000c000b808                Directory::unlink()
                0x00000000c000b854                Directory::rename(char const*)
                0x00000000c000b8a2                Directory::exists()
                0x00000000c000b8e0                Directory::read(dirent*)
                0x00000000c000b92c                Directory::create()
                0x00000000c000b978                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b97e        0x2 
 .text          0x00000000c000b980       0x86 hal/bus.32
                0x00000000c000b980                Bus::Bus(char const*)
                0x00000000c000b980                Bus::Bus(char const*)
                0x00000000c000b9b8                Bus::~Bus()
                0x00000000c000b9b8                Bus::~Bus()
                0x00000000c000b9dc                Bus::~Bus()
 .text          0x00000000c000ba06       0x96 hal/buzzer.32
                0x00000000c000ba06                beepThread(void*)
                0x00000000c000ba43                Krnl::beep(int, int, bool)
 .text          0x00000000c000ba9c      0x46d hal/clock.32
                0x00000000c000ba9c                User::loadClockSettings(int)
                0x00000000c000baee                Clock::Clock(char const*)
                0x00000000c000baee                Clock::Clock(char const*)
                0x00000000c000bb24                Clock::~Clock()
                0x00000000c000bb24                Clock::~Clock()
                0x00000000c000bb48                Clock::~Clock()
                0x00000000c000bb72                Clock::timeInSecondsLocal()
                0x00000000c000bbba                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000bc13                datetimeToSeconds(datetime_t)
                0x00000000c000bd40                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bda0                secondsToDatetime(unsigned long long)
                0x00000000c000bee4                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bf09        0x1 
 .text          0x00000000c000bf0a      0x464 hal/device.32
                0x00000000c000bf0a                Device::hibernate()
                0x00000000c000bf0c                Device::wake()
                0x00000000c000bf0e                Device::detect()
                0x00000000c000bf10                Device::disableLegacy()
                0x00000000c000bf12                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bf14                DriverlessDevice::close(int, int, void*)
                0x00000000c000bf18                DriverlessDevice::detect()
                0x00000000c000bf1a                DriverlessDevice::open(int, int, void*)
                0x00000000c000bf2e                Device::~Device()
                0x00000000c000bf2e                Device::~Device()
                0x00000000c000bf3c                Device::~Device()
                0x00000000c000bf64                Device::findAndLoadDriver()
                0x00000000c000bf72                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000bf98                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000bfd8                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c002                Device::getParent()
                0x00000000c000c00e                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c02c                Device::addChild(Device*)
                0x00000000c000c070                Device::removeAllChildren()
                0x00000000c000c0b6                Device::hibernateAll()
                0x00000000c000c0e6                Device::wakeAll()
                0x00000000c000c116                Device::detectAll()
                0x00000000c000c146                Device::disableLegacyAll()
                0x00000000c000c148                Device::loadDriversForAll()
                0x00000000c000c14a                Device::closeAll()
                0x00000000c000c180                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c1b6                Device::setName(char const*)
                0x00000000c000c1c4                Device::Device(char const*)
                0x00000000c000c1c4                Device::Device(char const*)
                0x00000000c000c2c0                Device::getName()
                0x00000000c000c2ca                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c2ca                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c300                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c344                getDevicesOfType(DeviceType)
 *fill*         0x00000000c000c36e        0x2 
 .text          0x00000000c000c370       0x86 hal/diskctrl.32
                0x00000000c000c370                HardDiskController::HardDiskController(char const*)
                0x00000000c000c370                HardDiskController::HardDiskController(char const*)
                0x00000000c000c3a8                HardDiskController::~HardDiskController()
                0x00000000c000c3a8                HardDiskController::~HardDiskController()
                0x00000000c000c3cc                HardDiskController::~HardDiskController()
 .text          0x00000000c000c3f6       0xe2 hal/diskphys.32
                0x00000000c000c3f6                PhysicalDisk::eject()
                0x00000000c000c3fa                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c3fa                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c462                PhysicalDisk::startCache()
                0x00000000c000c48a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c48a                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c4ae                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c4d8        0x0 hal/fpu.32
 .text          0x00000000c000c4d8      0x35d hal/intctrl.32
                0x00000000c000c4d8                int_handler
                0x00000000c000c560                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c5a8                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c6e0                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c714                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c793                setupINTS()
                0x00000000c000c7f0                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c835        0x1 
 .text          0x00000000c000c836      0x78c hal/keybrd.32
                0x00000000c000c836                startGUI(void*)
                0x00000000c000c8a2                startGUIVESA(void*)
                0x00000000c000c90e                sendKeyToTerminal(unsigned char)
                0x00000000c000c9d1                sendKeyboardToken(KeyboardToken)
                0x00000000c000ce11                clearInternalKeybuffer(VgaText*)
                0x00000000c000ce46                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000cf38                Keyboard::Keyboard(char const*)
                0x00000000c000cf38                Keyboard::Keyboard(char const*)
                0x00000000c000cf74                Keyboard::~Keyboard()
                0x00000000c000cf74                Keyboard::~Keyboard()
                0x00000000c000cf98                Keyboard::~Keyboard()
 .text          0x00000000c000cfc2      0x3ea hal/logidisk.32
                0x00000000c000cfc2                LogicalDisk::close(int, int, void*)
                0x00000000c000cfc6                LogicalDisk::~LogicalDisk()
                0x00000000c000cfc6                LogicalDisk::~LogicalDisk()
                0x00000000c000cfea                LogicalDisk::~LogicalDisk()
                0x00000000c000d014                LogicalDisk::open(int, int, void*)
                0x00000000c000d028                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000d060                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000d0a6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d0a6                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d15c                LogicalDisk::assignDriveLetter()
                0x00000000c000d212                LogicalDisk::mount()
                0x00000000c000d25a                LogicalDisk::unmount()
                0x00000000c000d26a                LogicalDisk::eject()
                0x00000000c000d27e                LogicalDisk::unassignDriveLetter()
                0x00000000c000d2d4                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d340                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c000d3ac       0x86 hal/mouse.32
                0x00000000c000d3ac                Mouse::Mouse(char const*)
                0x00000000c000d3ac                Mouse::Mouse(char const*)
                0x00000000c000d3e4                Mouse::~Mouse()
                0x00000000c000d3e4                Mouse::~Mouse()
                0x00000000c000d408                Mouse::~Mouse()
 .text          0x00000000c000d432      0x339 hal/partition.32
                0x00000000c000d432                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d4da                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d76b        0x1 
 .text          0x00000000c000d76c       0x86 hal/serial.32
                0x00000000c000d76c                Serial::Serial(char const*)
                0x00000000c000d76c                Serial::Serial(char const*)
                0x00000000c000d7a4                Serial::~Serial()
                0x00000000c000d7a4                Serial::~Serial()
                0x00000000c000d7c8                Serial::~Serial()
 *fill*         0x00000000c000d7f2        0x2 
 .text          0x00000000c000d7f4      0x234 hal/timer.32
                0x00000000c000d7f4                Timer::Timer(char const*)
                0x00000000c000d7f4                Timer::Timer(char const*)
                0x00000000c000d82c                Timer::~Timer()
                0x00000000c000d82c                Timer::~Timer()
                0x00000000c000d850                Timer::~Timer()
                0x00000000c000d87a                Timer::read()
                0x00000000c000d885                setupTimer(int)
                0x00000000c000d8c0                timerHandler(unsigned int)
 .text          0x00000000c000da28      0x43e hal/vcache.32
                0x00000000c000da28                VCache::VCache(PhysicalDisk*)
                0x00000000c000da28                VCache::VCache(PhysicalDisk*)
                0x00000000c000db90                VCache::invalidateReadBuffer()
                0x00000000c000dba0                VCache::writeWriteBuffer()
                0x00000000c000dbec                VCache::~VCache()
                0x00000000c000dbec                VCache::~VCache()
                0x00000000c000dc40                VCache::~VCache()
                0x00000000c000dc68                VCache::write(unsigned long long, int, void*)
                0x00000000c000dd62                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000de66      0x4b3 hal/video.32
                0x00000000c000de66                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000deb2                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000df22                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000dfa0                Video::clearScreen(unsigned int)
                0x00000000c000dfd4                Video::putpixel(int, int, unsigned int)
                0x00000000c000dfe2                Video::Video(char const*)
                0x00000000c000dfe2                Video::Video(char const*)
                0x00000000c000e018                Video::~Video()
                0x00000000c000e018                Video::~Video()
                0x00000000c000e03c                Video::~Video()
                0x00000000c000e066                Video::isMonochrome()
                0x00000000c000e072                Video::getWidth()
                0x00000000c000e07e                Video::getHeight()
                0x00000000c000e08a                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000e146                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e2ae                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e319        0x3 
 .text          0x00000000c000e31c     0x1307 hw/acpi.32
                0x00000000c000e31c                ACPI::close(int, int, void*)
                0x00000000c000e3d4                findRSDP()
                0x00000000c000e464                loadACPITables(unsigned char*)
                0x00000000c000e6c8                findRSDT(unsigned char*)
                0x00000000c000e818                findDataTable(unsigned char*, char*)
                0x00000000c000e890                scanMADT()
                0x00000000c000ed64                ACPI::ACPI()
                0x00000000c000ed64                ACPI::ACPI()
                0x00000000c000edb8                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000eea0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ef68                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ef70                ACPI::detectPCI()
                0x00000000c000f178                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f1cc                ACPI::sleep()
                0x00000000c000f1e8                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f623        0x1 
 .text          0x00000000c000f624      0xb95 hw/cpu.32
                0x00000000c000f624                CPU::close(int, int, void*)
                0x00000000c000f628                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f644                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f65c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f6d0                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f754                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f782                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f7b0                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f7de                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f80c                CPU::CPU()
                0x00000000c000f80c                CPU::CPU()
                0x00000000c000f89a                CPU::displayFeatures()
                0x00000000c000f89c                CPU::detectFeatures()
                0x00000000c000ff60                CPU::setupSMEP()
                0x00000000c000ff6c                CPU::setupUMIP()
                0x00000000c000ff76                CPU::setupTSC()
                0x00000000c000ff80                CPU::setupLargePages()
                0x00000000c000ff8a                CPU::setupPAT()
                0x00000000c000ffc6                CPU::setupMTRR()
                0x00000000c000ffc8                CPU::setupGlobalPages()
                0x00000000c000ffd2                CPU::allowUsermodeDataAccess()
                0x00000000c000ffe4                CPU::prohibitUsermodeDataAccess()
                0x00000000c000fff6                CPU::setupSMAP()
                0x00000000c0010004                CPU::setupFeatures()
                0x00000000c00100d0                CPU::open(int, int, void*)
 *fill*         0x00000000c00101b9        0x1 
 .text          0x00000000c00101ba      0x581 krnl/env.32
                0x00000000c00101ba                EnvVarContainer::getEnv(char const*)
                0x00000000c00101f8                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c00102ba                EnvVarContainer::deleteEnv(char const*)
                0x00000000c00102bc                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00104a2                EnvVarContainer::__loadSystem()
                0x00000000c00104bc                EnvVarContainer::__loadUser()
                0x00000000c00104be                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104be                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c00104e0                EnvVarContainer::~EnvVarContainer()
                0x00000000c00104e0                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010510                Krnl::getEnv(Process*, char const*)
                0x00000000c0010575                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c001058f                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00105ae                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c00105c1                Krnl::deleteEnvSystem(char const*)
                0x00000000c00105c2                Krnl::deleteEnvUser(char const*)
                0x00000000c00105c3                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c00105c4                Krnl::newProcessEnv(Process*)
                0x00000000c00105e6                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010632                Krnl::loadSystemEnv()
                0x00000000c0010660                Krnl::loadUserEnv()
                0x00000000c0010686                Krnl::flushEnv()
                0x00000000c0010687                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00106a7                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001073b      0x108 krnl/panic.32
                0x00000000c001073b                Krnl::panic(char const*)
 .text          0x00000000c0010843      0x142 krnl/powctrl.32
                0x00000000c0010843                Krnl::powerThread(void*)
                0x00000000c0010871                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010887                Krnl::userIOReceived()
                0x00000000c0010892                Krnl::handlePowerButton()
                0x00000000c00108c7                Krnl::handleSleepButton()
                0x00000000c00108fc                Krnl::setupPowerManager()
 .text          0x00000000c0010985      0x50e reg/registry.32
                0x00000000c0010985                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0010add                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0010c32                Reg::getLine(char*, char*, char*)
                0x00000000c0010c69                Reg::readInt(char*, char*, int*)
                0x00000000c0010d54                Reg::readString(char*, char*, char*, int)
                0x00000000c0010dd5                Reg::readBool(char*, char*, bool*)
                0x00000000c0010dfa                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0010e26                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0010e52                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0010e93       0x36 sys/sc_eject.32
                0x00000000c0010e93                Sys::eject(regs*)
 .text          0x00000000c0010ec9       0x18 sys/sc_exit.32
                0x00000000c0010ec9                Sys::exit(regs*)
 .text          0x00000000c0010ee1       0x1f sys/sc_getcwd.32
                0x00000000c0010ee1                Sys::getCwd(regs*)
 .text          0x00000000c0010f00        0xc sys/sc_getpid.32
                0x00000000c0010f00                Sys::getPID(regs*)
 .text          0x00000000c0010f0c       0x1a sys/sc_getramdata.32
                0x00000000c0010f0c                Sys::getRAMData(regs*)
 .text          0x00000000c0010f26       0x82 sys/sc_getvgaptr.32
                0x00000000c0010f26                Sys::getVGAPtr(regs*)
 .text          0x00000000c0010fa8       0xa8 sys/sc_loaddll.32
                0x00000000c0010fa8                Sys::loadDLL(regs*)
 .text          0x00000000c0011050       0x68 sys/sc_read.32
                0x00000000c0011050                Sys::read(regs*)
 .text          0x00000000c00110b8       0x55 sys/sc_sbrk.32
                0x00000000c00110b8                Sys::sbrk(regs*)
 .text          0x00000000c001110d       0x1c sys/sc_setcwd.32
                0x00000000c001110d                Sys::setCwd(regs*)
 .text          0x00000000c0011129       0x95 sys/sc_settime.32
                0x00000000c0011129                Sys::setTime(regs*)
 .text          0x00000000c00111be       0x4a sys/sc_timezone.32
                0x00000000c00111be                Sys::timezone(regs*)
 .text          0x00000000c0011208       0x68 sys/sc_write.32
                0x00000000c0011208                Sys::write(regs*)
 .text          0x00000000c0011270       0x62 sys/sc_wsbe.32
                0x00000000c0011270                Sys::wsbe(regs*)
 .text          0x00000000c00112d2       0x25 sys/sc_yield.32
                0x00000000c00112d2                Sys::yield(regs*)
 .text          0x00000000c00112f7      0xe2c sys/syscalls.32
                0x00000000c00112f7                sysCallSeekDir(regs*)
                0x00000000c00112fc                sysCallTellDir(regs*)
                0x00000000c0011301                sysCallVerify(regs*)
                0x00000000c001130b                sysCallGetArgc(regs*)
                0x00000000c001131b                sysCallTTYName(regs*)
                0x00000000c0011323                sysFormatDisk(regs*)
                0x00000000c0011390                sysSetDiskVolumeLabel(regs*)
                0x00000000c00113da                sysGetDiskVolumeLabel(regs*)
                0x00000000c001142f                sysShutdown(regs*)
                0x00000000c001148d                sysCallRealpath(regs*)
                0x00000000c00114d0                sysCallReadDir(regs*)
                0x00000000c0011550                sysCallIsATTY(regs*)
                0x00000000c00115ac                sysCallSeek(regs*)
                0x00000000c0011605                sysCallTell(regs*)
                0x00000000c0011674                sysCallSize(regs*)
                0x00000000c00116e9                sysCallSizeFromFilename(regs*)
                0x00000000c001179c                sysCallClose(regs*)
                0x00000000c00117fc                sysCallOpenDir(regs*)
                0x00000000c0011873                sysCallCloseDir(regs*)
                0x00000000c00118c7                sysCallMakeDir(regs*)
                0x00000000c0011939                sysCallWait(regs*)
                0x00000000c0011956                sysCallNotImpl(regs*)
                0x00000000c0011971                sysPanic(regs*)
                0x00000000c001198c                sysCallRmdir(regs*)
                0x00000000c00119f3                sysCallUnlink(regs*)
                0x00000000c0011a5a                sysCallGetArgv(regs*)
                0x00000000c0011aa7                sysCallUSleep(regs*)
                0x00000000c0011ad0                sysCallSpawn(regs*)
                0x00000000c0011b39                sysCallGetEnv(regs*)
                0x00000000c0011be8                sysSetFatAttrib(regs*)
                0x00000000c0011c5f                sysPipe(regs*)
                0x00000000c0011ca4                sysGetUnixTime(regs*)
                0x00000000c0011cb8                string_ends_with(char const*, char const*)
                0x00000000c0011d02                sysCallOpen(regs*)
                0x00000000c0011ef6                Sys::loadSyscalls()
                0x00000000c00120e1                Sys::systemCall(regs*, void*)
 .text          0x00000000c0012123     0x11e5 thr/elf.32
                0x00000000c0012123                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00123af                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00125c5                Thr::runtimeReferenceHelper()
                0x00000000c00125d8                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0012627                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00128e5                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001301b                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001304d                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0013084                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001309e                Thr::loadDLL(char const*, bool)
                0x00000000c00132cf                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0013308     0x12c5 thr/prcssthr.32
                0x00000000c0013308                userModeEntryPoint(void*)
                0x00000000c0013330                changeTSS
                0x00000000c0013360                switchToThread(ThreadControlBlock*)
                0x00000000c0013414                Process::addArgs(char**)
                0x00000000c0013474                Process::Process(char const*, Process*, char**)
                0x00000000c0013474                Process::Process(char const*, Process*, char**)
                0x00000000c0013664                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013664                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0013820                taskStartupFunction
                0x00000000c001382c                Semaphore::Semaphore(int)
                0x00000000c001382c                Semaphore::Semaphore(int)
                0x00000000c001385c                Mutex::Mutex()
                0x00000000c001385c                Mutex::Mutex()
                0x00000000c0013870                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0013968                Process::createUserThread()
                0x00000000c0013988                setupMultitasking(void (*)())
                0x00000000c0013a90                schedule()
                0x00000000c0013b20                Semaphore::tryAcquire()
                0x00000000c0013bec                Semaphore::assertLocked(char const*)
                0x00000000c0013c64                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0013c8c                blockTask(TaskState)
                0x00000000c0013cbc                waitTask(int, int*, int)
                0x00000000c0013d00                milliTenthSleepUntil(unsigned int)
                0x00000000c0013d90                milliTenthSleep(unsigned int)
                0x00000000c0013da0                sleep(unsigned int)
                0x00000000c0013dbc                Semaphore::acquire()
                0x00000000c0013e78                taskReturned
                0x00000000c0013eb4                Thr::processFromPID(int)
                0x00000000c0013f54                unblockTask(ThreadControlBlock*)
                0x00000000c0013ff8                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00142c4                cleanerTaskFunction(void*)
                0x00000000c00143b4                terminateTask(int)
                0x00000000c0014480                Thr::terminateFromIRQ(int)
                0x00000000c0014490                Semaphore::release()
 .text          0x00000000c00145cd      0xb93 vm86/vm8086.32
                0x00000000c00145cd                Vm::inbv(unsigned short)
                0x00000000c00145e0                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0014616                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0014626                Vm::getSegment(unsigned int)
                0x00000000c001462e                Vm::getOffset(unsigned int)
                0x00000000c0014633                Vm::mainloop2()
                0x00000000c001466d                Vm::mainVm8086Loop(void*)
                0x00000000c001467d                Vm::mainloop3(unsigned long)
                0x00000000c00146a3                Vm::initialise8086()
                0x00000000c00146e6                Vm::finish8086()
                0x00000000c0014747                Vm::getOutput8086(unsigned char*)
                0x00000000c001476c                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0014825                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001498d                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0014a17                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0014a28                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0014a3a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0014a4b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0014a60                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0014a76                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0014a8b                Vm::faultHandler(regs*)
 .text          0x00000000c0015160      0x8e9 arch/i386/hal.32
                0x00000000c0015160                noCopro(unsigned long)
                0x00000000c0015161                nmiHandler(regs*, void*)
                0x00000000c001517a                doubleFault(regs*, void*)
                0x00000000c0015193                displayDebugInfo(regs*)
                0x00000000c00154b4                displayProgramFault(char const*)
                0x00000000c0015500                gpFault(regs*, void*)
                0x00000000c0015565                pgFault(regs*, void*)
                0x00000000c00155eb                otherISRHandler(regs*, void*)
                0x00000000c001561f                opcodeFault(regs*, void*)
                0x00000000c001569f                i386SaveCoprocessor(void*)
                0x00000000c00156b3                i386LoadCoprocessor(void*)
                0x00000000c00156c7                x87EmulHandler(regs*, void*)
                0x00000000c0015764                HalInitialiseCoprocessor()
                0x00000000c0015812                HalPanic(char const*)
                0x00000000c0015817                HalQueryPerformanceCounter()
                0x00000000c0015832                HalInitialise()
                0x00000000c00159d8                HalMakeBeep(int)
                0x00000000c0015a12                HalGetRand()
                0x00000000c0015a15                HalEndOfInterrupt(int)
                0x00000000c0015a46                HalRestart()
                0x00000000c0015a47                HalShutdown()
                0x00000000c0015a48                HalSleep()
 *fill*         0x00000000c0015a49        0x3 
 .text          0x00000000c0015a4c      0x2f4 arch/i386/pic.32
                0x00000000c0015a4c                picIoWait()
                0x00000000c0015a54                picDisable()
                0x00000000c0015a88                picGetIRQReg(int)
                0x00000000c0015b0c                picOpen()
                0x00000000c0015c9c                picEOI(int)
 .text          0x00000000c0015d40      0x64d arch/i386/rtc.32
                0x00000000c0015d40                RTC::open(int, int, void*)
                0x00000000c0015d44                RTC::close(int, int, void*)
                0x00000000c0015d48                RTC::timeInSecondsUTC()
                0x00000000c0015d5a                RTC::timeInDatetimeUTC()
                0x00000000c0015d80                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0015dbe                RTC::~RTC()
                0x00000000c0015dbe                RTC::~RTC()
                0x00000000c0015de2                RTC::~RTC()
                0x00000000c0015e0c                RTC::get_update_in_progress_flag()
                0x00000000c0015e24                RTC::completeRTCRefresh()
                0x00000000c00160dc                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001628f                rtcIRQHandler(regs*, void*)
                0x00000000c00162d4                RTC::RTC()
                0x00000000c00162d4                RTC::RTC()
 *fill*         0x00000000c001638d        0x3 
 .text          0x00000000c0016390      0x203 arch/i386/vga.32
                0x00000000c0016390                HalConsoleScroll(int, int)
                0x00000000c0016498                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0016504                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c0016593        0x1 
 .text          0x00000000c0016594     0x13e7 fs/fat/vfslink.32
                0x00000000c0016594                FAT::getName()
                0x00000000c001659c                FAT::tell(void*, unsigned long long*)
                0x00000000c00165d8                FAT::stat(void*, unsigned long long*)
                0x00000000c0016614                FAT::~FAT()
                0x00000000c0016614                FAT::~FAT()
                0x00000000c0016638                FAT::~FAT()
                0x00000000c0016660                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0016704                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00167c8                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001699c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0016bb4                FAT::allocateSwapfile(char const*, int)
                0x00000000c0016d74                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0016ee0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0016f40                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0016fa0                FAT::close(void*)
                0x00000000c0016ff4                FAT::closeDir(void*)
                0x00000000c0017048                FAT::seek(void*, unsigned long long)
                0x00000000c00170a0                fatWrapperReadDisk
                0x00000000c00170e4                fatWrapperWriteDisk
                0x00000000c0017128                fatWrapperIoctl
                0x00000000c0017244                FAT::FAT()
                0x00000000c0017244                FAT::FAT()
                0x00000000c0017298                FAT::fixFilepath(char*)
                0x00000000c00172d4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001740c                FAT::openDir(char const*, void**)
                0x00000000c00174bc                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c00175b4                FAT::unlink(char const*)
                0x00000000c0017634                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00177c0                FAT::rename(char const*, char const*)
                0x00000000c001788c                FAT::mkdir(char const*)
                0x00000000c001790c                FAT::exists(char const*)
 *fill*         0x00000000c001797b        0x1 
 .text          0x00000000c001797c       0x5c fs/iso9660/helper.32
                0x00000000c001797c                isoReadDiscSectorHelper
 .text          0x00000000c00179d8      0x400 fs/iso9660/vfslink.32
                0x00000000c00179d8                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00179de                ISO9660::getName()
                0x00000000c00179e4                ISO9660::closeDir(void*)
                0x00000000c00179ee                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c00179f4                ISO9660::unlink(char const*)
                0x00000000c00179fa                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0017a00                ISO9660::rename(char const*, char const*)
                0x00000000c0017a06                ISO9660::mkdir(char const*)
                0x00000000c0017a0c                ISO9660::~ISO9660()
                0x00000000c0017a0c                ISO9660::~ISO9660()
                0x00000000c0017a30                ISO9660::~ISO9660()
                0x00000000c0017a58                ISO9660::exists(char const*)
                0x00000000c0017a6c                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c0017abe                ISO9660::openDir(char const*, void**)
                0x00000000c0017aec                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0017b1a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0017ba6                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0017be6                ISO9660::seek(void*, unsigned long long)
                0x00000000c0017c1e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0017c54                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0017c8e                ISO9660::close(void*)
                0x00000000c0017cb3                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0017d3e                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0017db0                ISO9660::ISO9660()
                0x00000000c0017db0                ISO9660::ISO9660()
 .text          0x00000000c0017dd8      0x26c hal/sound/sndcard.32
                0x00000000c0017dd8                SoundCard::beginPlayback()
                0x00000000c0017de6                SoundCard::stopPlayback()
                0x00000000c0017df4                SoundCard::SoundCard(char const*)
                0x00000000c0017df4                SoundCard::SoundCard(char const*)
                0x00000000c0017e92                SoundCard::~SoundCard()
                0x00000000c0017e92                SoundCard::~SoundCard()
                0x00000000c0017eb6                SoundCard::~SoundCard()
                0x00000000c0017ee0                SoundCard::configureRates(int, int, int)
                0x00000000c0017f10                SoundCard::getSamples16(int, short*)
                0x00000000c0017f6c                SoundCard::getSamples32(int, int*)
                0x00000000c0017ff2                SoundCard::addChannel(SoundPort*)
                0x00000000c0018030                SoundCard::removeChannel(int)
 .text          0x00000000c0018044      0x377 hal/sound/sndport.32
                0x00000000c0018044                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0018044                SoundPort::SoundPort(int, int, int, int)
                0x00000000c00180d0                SoundPort::~SoundPort()
                0x00000000c00180d0                SoundPort::~SoundPort()
                0x00000000c0018104                SoundPort::unpause()
                0x00000000c0018110                SoundPort::pause()
                0x00000000c001811c                SoundPort::getBufferUsed()
                0x00000000c0018124                SoundPort::getBufferSize()
                0x00000000c001812c                SoundPort::buffer16(short*, int)
                0x00000000c00181b8                SoundPort::buffer32(int*, int)
                0x00000000c0018240                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0018304                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c00183bb        0x0 hw/bus/isa.32
 *fill*         0x00000000c00183bb        0x1 
 .text          0x00000000c00183bc      0xb49 hw/bus/pci.32
                0x00000000c00183bc                PCI::open(int, int, void*)
                0x00000000c00183da                PCI::close(int, int, void*)
                0x00000000c00183de                PCI::PCI()
                0x00000000c00183de                PCI::PCI()
                0x00000000c0018478                PCI::readBAR8(unsigned int, int)
                0x00000000c0018494                PCI::readBAR16(unsigned int, int)
                0x00000000c00184b2                PCI::readBAR32(unsigned int, int)
                0x00000000c00184ce                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c00184ee                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c0018510                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c0018530                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001859e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0018646                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001866a                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c0018692                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c00186dc                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0018704                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0018728                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001874c                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0018774                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c00187d8                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c00188c0                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c0018b3a                PCI::checkBus(unsigned char)
                0x00000000c0018b60                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0018cd2                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0018e46                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0018eb2                PCI::detect()
 *fill*         0x00000000c0018f05        0x1 
 .text          0x00000000c0018f06      0xb5a hw/diskctrl/ide.32
                0x00000000c0018f06                IDE::close(int, int, void*)
                0x00000000c0018f0a                IDE::IDE()
                0x00000000c0018f0a                IDE::IDE()
                0x00000000c0018f3e                IDE::prepareInterrupt(unsigned char)
                0x00000000c0018f50                selectDrive(unsigned char, unsigned char)
                0x00000000c0018f52                IDE::getBase(unsigned char)
                0x00000000c0018f64                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0019024                IDE::read(unsigned char, unsigned char)
                0x00000000c00190d2                IDE::waitInterrupt(unsigned char)
                0x00000000c001913a                ideChannel0IRQHandler(regs*, void*)
                0x00000000c0019156                ideChannel1IRQHandler(regs*, void*)
                0x00000000c0019172                IDE::enableIRQs(unsigned char, bool)
                0x00000000c00191b8                IDE::open(int, int, void*)
                0x00000000c00195c6                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c0019692                IDE::detect()
                0x00000000c0019952                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0019a02                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0019a60      0x32a hw/diskctrl/satabus.32
                0x00000000c0019a60                SATABus::close(int, int, void*)
                0x00000000c0019a64                SATABus::detect()
                0x00000000c0019a66                SATABus::SATABus()
                0x00000000c0019a66                SATABus::SATABus()
                0x00000000c0019aec                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019b1e                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019b66                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019b86                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0019bb0                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0019cc0                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0019d6a                SATABus::open(int, int, void*)
 .text          0x00000000c0019d8a      0x5f4 hw/diskphys/ata.32
                0x00000000c0019d8a                ATA::close(int, int, void*)
                0x00000000c0019dae                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0019db0                ATA::ATA()
                0x00000000c0019db0                ATA::ATA()
                0x00000000c0019dde                ATA::flush(bool)
                0x00000000c0019e28                ATA::readyForCommand()
                0x00000000c0019e74                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001a1f0                ATA::read(unsigned long long, int, void*)
                0x00000000c001a23c                ATA::write(unsigned long long, int, void*)
                0x00000000c001a288                ATA::detectCHS()
                0x00000000c001a2b2                ATA::open(int, int, void*)
 .text          0x00000000c001a37e      0x60e hw/diskphys/atapi.32
                0x00000000c001a37e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001a384                ATAPI::close(int, int, void*)
                0x00000000c001a3a8                ATAPI::ATAPI()
                0x00000000c001a3a8                ATAPI::ATAPI()
                0x00000000c001a3d6                ATAPI::readyForCommand()
                0x00000000c001a428                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001a6e8                ATAPI::diskRemoved()
                0x00000000c001a722                ATAPI::eject()
                0x00000000c001a76a                ATAPI::diskInserted()
                0x00000000c001a776                ATAPI::detectMedia()
                0x00000000c001a832                ATAPI::open(int, int, void*)
                0x00000000c001a912                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001a98c      0x402 hw/diskphys/sata.32
                0x00000000c001a98c                SATA::close(int, int, void*)
                0x00000000c001a9b0                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001a9b2                SATA::open(int, int, void*)
                0x00000000c001aa5c                SATA::SATA()
                0x00000000c001aa5c                SATA::SATA()
                0x00000000c001aa8a                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001acd6                SATA::read(unsigned long long, int, void*)
                0x00000000c001ad22                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c001ad8e      0x5b9 hw/diskphys/satapi.32
                0x00000000c001ad8e                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001ad94                SATAPI::close(int, int, void*)
                0x00000000c001adb8                SATAPI::open(int, int, void*)
                0x00000000c001aeb0                SATAPI::SATAPI()
                0x00000000c001aeb0                SATAPI::SATAPI()
                0x00000000c001aede                SATAPI::diskRemoved()
                0x00000000c001aee0                SATAPI::diskInserted()
                0x00000000c001aefc                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001b1d8                SATAPI::eject()
                0x00000000c001b214                SATAPI::read(unsigned long long, int, void*)
                0x00000000c001b346                SATAPI::detectMedia()
 *fill*         0x00000000c001b347        0x1 
 .text          0x00000000c001b348      0x455 hw/intctrl/apic.32
                0x00000000c001b348                IOAPIC::close(int, int, void*)
                0x00000000c001b34e                apicGetBase()
                0x00000000c001b390                IOAPIC::IOAPIC()
                0x00000000c001b390                IOAPIC::IOAPIC()
                0x00000000c001b3b8                apicOpen()
                0x00000000c001b51e                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001b550                IOAPIC::read(int)
                0x00000000c001b578                IOAPIC::open(int, int, void*)
                0x00000000c001b66c                IOAPIC::write(int, int)
                0x00000000c001b698                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c001b79d        0x3 
 .text          0x00000000c001b7a0       0xf0 hw/timer/apictimer.32
                0x00000000c001b7a0                APICTimer::close(int, int, void*)
                0x00000000c001b7a8                apicTimerHandler(regs*, void*)
                0x00000000c001b7d0                APICTimer::open(int, int, void*)
                0x00000000c001b840                APICTimer::write(int)
                0x00000000c001b868                APICTimer::APICTimer()
                0x00000000c001b868                APICTimer::APICTimer()
 .text          0x00000000c001b890      0x1aa hw/timer/pit.32
                0x00000000c001b890                PIT::write(int)
                0x00000000c001b914                pitHandler(regs*, void*)
                0x00000000c001b938                PIT::open(int, int, void*)
                0x00000000c001b988                PIT::close(int, int, void*)
                0x00000000c001b9b8                PIT::PIT()
                0x00000000c001b9b8                PIT::PIT()
 *fill*         0x00000000c001ba3a        0x6 
 .text          0x00000000c001ba40       0x83 arch/i386/avx.32
                0x00000000c001ba40                avxDetect
                0x00000000c001ba6a                avxSave
                0x00000000c001ba7b                avxLoad
                0x00000000c001ba8c                avxInit
                0x00000000c001baae                avxClose
                0x00000000c001baaf                wouldSheSayYes
 *fill*         0x00000000c001bac3        0xd 
 .text          0x00000000c001bad0      0x1d6 arch/i386/interrupt.32
                0x00000000c001bad0                isr0
                0x00000000c001bae0                isr1
                0x00000000c001baea                isr2
                0x00000000c001baf4                isr3
                0x00000000c001bafe                isr4
                0x00000000c001bb08                isr5
                0x00000000c001bb12                isr6
                0x00000000c001bb1c                isr7
                0x00000000c001bb26                isr8
                0x00000000c001bb2e                isr9
                0x00000000c001bb38                isr10
                0x00000000c001bb40                isr11
                0x00000000c001bb48                isr12
                0x00000000c001bb50                isr13
                0x00000000c001bb58                isr14
                0x00000000c001bb60                isr15
                0x00000000c001bb6a                isr16
                0x00000000c001bb74                isr17
                0x00000000c001bb7e                isr18
                0x00000000c001bb88                irq3
                0x00000000c001bb92                irq4
                0x00000000c001bb9c                irq5
                0x00000000c001bba6                irq6
                0x00000000c001bbb0                irq7
                0x00000000c001bbba                irq8
                0x00000000c001bbc4                irq9
                0x00000000c001bbce                irq10
                0x00000000c001bbd8                irq11
                0x00000000c001bbe2                irq12
                0x00000000c001bbec                irq13
                0x00000000c001bbf6                irq14
                0x00000000c001bc00                irq15
                0x00000000c001bc0a                irq1
                0x00000000c001bc11                irq2
                0x00000000c001bc18                isr96
                0x00000000c001bc1f                irq0
                0x00000000c001bc24                int_common_stub
                0x00000000c001bc24                syscall_common_stub
                0x00000000c001bc56                irq16
                0x00000000c001bc60                irq17
                0x00000000c001bc6a                irq18
                0x00000000c001bc74                irq19
                0x00000000c001bc7e                irq20
                0x00000000c001bc88                irq21
                0x00000000c001bc92                irq22
                0x00000000c001bc9c                irq23
 *fill*         0x00000000c001bca6        0xa 
 .text          0x00000000c001bcb0       0x10 arch/i386/rdrand.32
                0x00000000c001bcb0                i386GetRDRAND
 .text          0x00000000c001bcc0       0x39 arch/i386/sse.32
                0x00000000c001bcc0                absolutelyNoChanceInHell
                0x00000000c001bcc0                sseDetect
                0x00000000c001bcd8                sseSave
                0x00000000c001bce0                sseLoad
                0x00000000c001bce8                sseInit
                0x00000000c001bcf8                sseClose
 *fill*         0x00000000c001bcf9        0x7 
 .text          0x00000000c001bd00       0x49 arch/i386/x87.32
                0x00000000c001bd06                x87Detect
                0x00000000c001bd21                x87Save
                0x00000000c001bd28                x87Load
                0x00000000c001bd2f                x87Init
                0x00000000c001bd48                x87Close
 *fill*         0x00000000c001bd49        0x3 
 .text          0x00000000c001bd4c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001bd71        0x0 crtn.32
 *fill*         0x00000000c001bd71        0x3 
 .text          0x00000000c001bd74      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001bd74                __divdi3
 *fill*         0x00000000c001bebf        0x1 
 .text          0x00000000c001bec0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001bec0                __moddi3
 *fill*         0x00000000c001c03e        0x2 
 .text          0x00000000c001c040       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001c040                __udivdi3
 *fill*         0x00000000c001c13f        0x1 
 .text          0x00000000c001c140      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001c140                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001c260        0x0
 .iplt          0x00000000c001c260        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001c25a        0xf
 .init          0x00000000c001c25a        0x3 crti.32
                0x00000000c001c25a                _init
 .init          0x00000000c001c25d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001c262        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001c267        0x2 crtn.32

.fini           0x00000000c001c269        0xa
 .fini          0x00000000c001c269        0x3 crti.32
                0x00000000c001c269                _fini
 .fini          0x00000000c001c26c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001c271        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001c274       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001c274       0x23 core/computer.32
                0x00000000c001c274                Computer::~Computer()
                0x00000000c001c274                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001c298       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001c298       0x2a core/computer.32
                0x00000000c001c298                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001c2c2       0x21
 .text._Z10idleCommonv
                0x00000000c001c2c2       0x21 core/idle.32
                0x00000000c001c2c2                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c2e4        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001c2e4        0x2 core/unixfile.32
                0x00000000c001c2e4                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001c2e4                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c2e6       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001c2e6       0x42 core/unixfile.32
                0x00000000c001c2e6                LinkedList<UnixFile>::LinkedList()
                0x00000000c001c2e6                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c328       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001c328       0xd3 core/unixfile.32
                0x00000000c001c328                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c3fc        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001c3fc        0x7 core/unixfile.32
                0x00000000c001c3fc                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c404       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001c404       0xa1 core/unixfile.32
                0x00000000c001c404                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c4a6        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001c4a6        0x8 core/unixfile.32
                0x00000000c001c4a6                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c4ae       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001c4ae       0x1a hal/device.32
                0x00000000c001c4ae                DriverlessDevice::~DriverlessDevice()
                0x00000000c001c4ae                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c4c8       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001c4c8       0x2a hal/device.32
                0x00000000c001c4c8                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c4f2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001c4f2       0xdc hal/device.32
                0x00000000c001c4f2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c5ce       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001c5ce       0x42 hal/device.32
                0x00000000c001c5ce                LinkedList<Device>::LinkedList()
                0x00000000c001c5ce                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c610       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001c610       0x1c hal/timer.32
                0x00000000c001c610                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c62c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001c62c        0x7 hal/timer.32
                0x00000000c001c62c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c634       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001c634       0xb8 hal/timer.32
                0x00000000c001c634                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c6ec       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001c6ec       0xda hal/timer.32
                0x00000000c001c6ec                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001c7c8       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001c7c8       0x23 hw/acpi.32
                0x00000000c001c7c8                ACPI::~ACPI()
                0x00000000c001c7c8                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001c7ec       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001c7ec       0x2a hw/acpi.32
                0x00000000c001c7ec                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c818        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001c818        0x2 hw/acpi.32
                0x00000000c001c818                LinkedList<Device>::~LinkedList()
                0x00000000c001c818                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c81c       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001c81c       0x1c hw/acpi.32
                0x00000000c001c81c                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c838        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001c838        0x7 hw/acpi.32
                0x00000000c001c838                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c840       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001c840       0xb8 hw/acpi.32
                0x00000000c001c840                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001c8f8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001c8f8       0x23 hw/cpu.32
                0x00000000c001c8f8                CPU::~CPU()
                0x00000000c001c8f8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001c91c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001c91c       0x2a hw/cpu.32
                0x00000000c001c91c                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c948        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001c948        0x2 thr/prcssthr.32
                0x00000000c001c948                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001c948                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c94c       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001c94c       0x49 thr/prcssthr.32
                0x00000000c001c94c                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001c94c                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c998       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001c998       0x42 thr/prcssthr.32
                0x00000000c001c998                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001c998                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c9dc        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001c9dc        0x8 thr/prcssthr.32
                0x00000000c001c9dc                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001c9e4       0x23
 .text._ZN3PCID2Ev
                0x00000000c001c9e4       0x23 hw/bus/pci.32
                0x00000000c001c9e4                PCI::~PCI()
                0x00000000c001c9e4                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001ca08       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001ca08       0x2a hw/bus/pci.32
                0x00000000c001ca08                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001ca32       0x23
 .text._ZN3IDED2Ev
                0x00000000c001ca32       0x23 hw/diskctrl/ide.32
                0x00000000c001ca32                IDE::~IDE()
                0x00000000c001ca32                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001ca56       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001ca56       0x2a hw/diskctrl/ide.32
                0x00000000c001ca56                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001ca80       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c001ca80       0x23 hw/diskctrl/satabus.32
                0x00000000c001ca80                SATABus::~SATABus()
                0x00000000c001ca80                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001caa4       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c001caa4       0x2a hw/diskctrl/satabus.32
                0x00000000c001caa4                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001cace       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001cace       0x23 hw/diskphys/ata.32
                0x00000000c001cace                ATA::~ATA()
                0x00000000c001cace                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001caf2       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001caf2       0x2a hw/diskphys/ata.32
                0x00000000c001caf2                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001cb1c       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001cb1c       0x23 hw/diskphys/atapi.32
                0x00000000c001cb1c                ATAPI::~ATAPI()
                0x00000000c001cb1c                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001cb40       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001cb40       0x2a hw/diskphys/atapi.32
                0x00000000c001cb40                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001cb6a       0x23
 .text._ZN4SATAD2Ev
                0x00000000c001cb6a       0x23 hw/diskphys/sata.32
                0x00000000c001cb6a                SATA::~SATA()
                0x00000000c001cb6a                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001cb8e       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c001cb8e       0x2a hw/diskphys/sata.32
                0x00000000c001cb8e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001cbb8       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c001cbb8       0x23 hw/diskphys/satapi.32
                0x00000000c001cbb8                SATAPI::~SATAPI()
                0x00000000c001cbb8                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001cbdc       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c001cbdc       0x2a hw/diskphys/satapi.32
                0x00000000c001cbdc                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001cc06       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001cc06       0x23 hw/intctrl/apic.32
                0x00000000c001cc06                IOAPIC::~IOAPIC()
                0x00000000c001cc06                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001cc2a       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001cc2a       0x2a hw/intctrl/apic.32
                0x00000000c001cc2a                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001cc54       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001cc54       0x23 hw/timer/apictimer.32
                0x00000000c001cc54                APICTimer::~APICTimer()
                0x00000000c001cc54                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001cc78       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001cc78       0x2a hw/timer/apictimer.32
                0x00000000c001cc78                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001cca4       0x23
 .text._ZN3PITD2Ev
                0x00000000c001cca4       0x23 hw/timer/pit.32
                0x00000000c001cca4                PIT::~PIT()
                0x00000000c001cca4                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ccc8       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ccc8       0x2a hw/timer/pit.32
                0x00000000c001ccc8                PIT::~PIT()

.rodata         0x00000000c001ccf2     0x28b2
                0x00000000c001ccf2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001ccf2        0x2 
 .ctors         0x00000000c001ccf4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001ccf8        0x4 core/unixfile.32
 .ctors         0x00000000c001ccfc        0x4 thr/prcssthr.32
 .ctors         0x00000000c001cd00        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cd04                end_ctors = .
                0x00000000c001cd04                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001cd04        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001cd08        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001cd08                __DTOR_END__
                0x00000000c001cd0c                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001cd0c       0x14 
 .rodata        0x00000000c001cd20      0x101 acpica/utclib.32
                0x00000000c001cd20                AcpiGbl_Ctypes
 *fill*         0x00000000c001ce21        0x3 
 .rodata        0x00000000c001ce24       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001ce3c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001ce86       0x1a 
 .rodata        0x00000000c001cea0       0xed fs/fat/ff.32
 *fill*         0x00000000c001cf8d       0x13 
 .rodata        0x00000000c001cfa0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001d3a0       0x11 fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001d3b1       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c001d3fa      0x115 core/computer.32
 *fill*         0x00000000c001d50f        0x1 
 .rodata.str1.4
                0x00000000c001d510       0x68 core/computer.32
 .rodata._ZTV8Computer
                0x00000000c001d578       0x2c core/computer.32
                0x00000000c001d578                vtable for Computer
 .rodata.str1.4
                0x00000000c001d5a4       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001d5d4        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001d5e0       0x17 core/main.32
 *fill*         0x00000000c001d5f7        0x1 
 .rodata.str1.4
                0x00000000c001d5f8       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d69d       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001d6f5       0x39 core/pipe.32
 *fill*         0x00000000c001d72e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001d730       0x1c core/pipe.32
                0x00000000c001d730                vtable for Pipe
 .rodata.str1.1
                0x00000000c001d74c       0x69 core/terminal.32
 *fill*         0x00000000c001d7b5        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001d7b8       0x1c core/terminal.32
                0x00000000c001d7b8                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001d7d4       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001d7f6       0x15 core/unixfile.32
 *fill*         0x00000000c001d80b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001d80c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001d857        0x8 core/unixfile.32
 *fill*         0x00000000c001d85f        0x1 
 .rodata.str1.4
                0x00000000c001d860       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001d880       0x1c core/unixfile.32
                0x00000000c001d880                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001d89c       0x1c core/unixfile.32
                0x00000000c001d89c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001d8b8      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001da1f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001db26       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c001db59       0x11 dbg/kconsole.32
 *fill*         0x00000000c001db59        0x3 
 .rodata        0x00000000c001db5c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001dcac       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001dcac       0x68 fs/vfs.32
                0x00000000c001dcac                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c001dd14       0x1c fs/vfs.32
                0x00000000c001dd14                vtable for File
 .rodata._ZTV9Directory
                0x00000000c001dd30       0x1c fs/vfs.32
                0x00000000c001dd30                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c001dd4c       0x2c hal/bus.32
                0x00000000c001dd4c                vtable for Bus
 .rodata.str1.1
                0x00000000c001dd78       0x1e hal/clock.32
 *fill*         0x00000000c001dd96        0x2 
 .rodata._ZTV5Clock
                0x00000000c001dd98       0x3c hal/clock.32
                0x00000000c001dd98                vtable for Clock
 *fill*         0x00000000c001ddd4        0xc 
 .rodata        0x00000000c001dde0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c001de10       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c001de68       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c001de68       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c001de68       0x2c hal/device.32
                0x00000000c001de68                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c001de94       0x2c hal/device.32
                0x00000000c001de94                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c001dec0       0x2c hal/diskctrl.32
                0x00000000c001dec0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c001deec       0x38 hal/diskphys.32
                0x00000000c001deec                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c001df24       0x3e hal/intctrl.32
 *fill*         0x00000000c001df62        0x2 
 .rodata.str1.4
                0x00000000c001df64       0x5d hal/intctrl.32
 .rodata        0x00000000c001dfc1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c001e014       0x34 hal/keybrd.32
                0x00000000c001e014                vtable for Keyboard
 .rodata.str1.1
                0x00000000c001e048       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c001e08c       0x2c hal/logidisk.32
                0x00000000c001e08c                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c001e0b8       0x2c hal/mouse.32
                0x00000000c001e0b8                vtable for Mouse
 .rodata.str1.1
                0x00000000c001e0e4        0xb hal/partition.32
 *fill*         0x00000000c001e0ef        0x1 
 .rodata._ZTV6Serial
                0x00000000c001e0f0       0x44 hal/serial.32
                0x00000000c001e0f0                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001e134       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001e134        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001e134       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001e134       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c001e134       0x30 hal/timer.32
                0x00000000c001e134                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c001e164       0x10 hal/vcache.32
                0x00000000c001e164                vtable for VCache
 .rodata.str1.1
                0x00000000c001e174       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c001e1dc       0x48 hal/video.32
                0x00000000c001e1dc                vtable for Video
 .rodata.str1.4
                0x00000000c001e224       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c001e2bf      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c001e3fb       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c001e3fb        0x8 hw/acpi.32
 *fill*         0x00000000c001e3fb        0x1 
 .rodata._ZTV4ACPI
                0x00000000c001e3fc       0x2c hw/acpi.32
                0x00000000c001e3fc                vtable for ACPI
 .rodata.str1.1
                0x00000000c001e428      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c001e595        0x3 
 .rodata._ZTV3CPU
                0x00000000c001e598       0x2c hw/cpu.32
                0x00000000c001e598                vtable for CPU
 .rodata.str1.1
                0x00000000c001e5c4       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c001e600       0x3d krnl/panic.32
                                         0x3e (size before relaxing)
 *fill*         0x00000000c001e63d        0x3 
 .rodata.str1.4
                0x00000000c001e640       0x3a krnl/panic.32
 .rodata.str1.1
                0x00000000c001e67a       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e6bf        0xa sys/sc_getvgaptr.32
 .rodata.str1.1
                0x00000000c001e6c9       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c001e71d       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c001e749       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c001e791      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c001e95d       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c001e9b4      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c001eac0       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c001eac0       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c001eac0       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c001eac0        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c001eac0       0xa0 vm86/vm8086.32
 .rodata        0x00000000c001eb60       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c001eb90      0x10e arch/i386/hal.32
                                        0x119 (size before relaxing)
 *fill*         0x00000000c001ec9e        0x2 
 .rodata.str1.4
                0x00000000c001eca0       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c001ed13       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c001ed28       0x3c arch/i386/rtc.32
                0x00000000c001ed28                vtable for RTC
 .rodata.str1.1
                0x00000000c001ed64       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c001eda5        0x3 
 .rodata._ZTV3FAT
                0x00000000c001eda8       0x68 fs/fat/vfslink.32
                0x00000000c001eda8                vtable for FAT
 .rodata.str1.1
                0x00000000c001ee10       0xc2 fs/iso9660/vfslink.32
 *fill*         0x00000000c001eed2        0x2 
 .rodata._ZTV7ISO9660
                0x00000000c001eed4       0x68 fs/iso9660/vfslink.32
                0x00000000c001eed4                vtable for ISO9660
 .rodata.str1.1
                0x00000000c001ef3c       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c001ef80       0x34 hal/sound/sndcard.32
                0x00000000c001ef80                vtable for SoundCard
 .rodata.str1.4
                0x00000000c001efb4       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001eff3       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c001f02b       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c001f0cc       0x2c hw/bus/pci.32
                0x00000000c001f0cc                vtable for PCI
 .rodata.str1.1
                0x00000000c001f0f8       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c001f17f        0x1 
 .rodata._ZTV3IDE
                0x00000000c001f180       0x2c hw/diskctrl/ide.32
                0x00000000c001f180                vtable for IDE
 .rodata.str1.4
                0x00000000c001f1ac       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c001f1d0       0x2c hw/diskctrl/satabus.32
                0x00000000c001f1d0                vtable for SATABus
 .rodata.str1.1
                0x00000000c001f1fc       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c001f20e        0x2 
 .rodata._ZTV3ATA
                0x00000000c001f210       0x38 hw/diskphys/ata.32
                0x00000000c001f210                vtable for ATA
 .rodata.str1.1
                0x00000000c001f248        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c001f255        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c001f258       0x38 hw/diskphys/atapi.32
                0x00000000c001f258                vtable for ATAPI
 .rodata.str1.1
                0x00000000c001f290       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c001f30c       0x38 hw/diskphys/sata.32
                0x00000000c001f30c                vtable for SATA
 .rodata.str1.1
                0x00000000c001f344      0x158 hw/diskphys/satapi.32
                                        0x165 (size before relaxing)
 .rodata._ZTV6SATAPI
                0x00000000c001f49c       0x38 hw/diskphys/satapi.32
                0x00000000c001f49c                vtable for SATAPI
 .rodata        0x00000000c001f4d4        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c001f4dc       0x2c hw/intctrl/apic.32
                0x00000000c001f4dc                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c001f508       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c001f523        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c001f524       0x30 hw/timer/apictimer.32
                0x00000000c001f524                vtable for APICTimer
 .rodata.str1.1
                0x00000000c001f554       0x1d hw/timer/pit.32
 *fill*         0x00000000c001f571        0x3 
 .rodata._ZTV3PIT
                0x00000000c001f574       0x30 hw/timer/pit.32
                0x00000000c001f574                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c001f5a4      0x271
 *(.data)
 .data          0x00000000c001f5a4        0x0 crti.32
 .data          0x00000000c001f5a4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c001f5a4                __dso_handle
 .data          0x00000000c001f5a8        0x0 acpica/utclib.32
 .data          0x00000000c001f5a8        0x0 core/malloc.32
 .data          0x00000000c001f5a8        0x0 libk/ctype.32
 .data          0x00000000c001f5a8        0x0 libk/string.32
 .data          0x00000000c001f5a8        0x0 fs/fat/diskio.32
 .data          0x00000000c001f5a8        0x0 fs/fat/ff.32
 .data          0x00000000c001f5a8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c001f5a8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c001f5a8        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c001f5a8        0x0 compat/inlines.32
 .data          0x00000000c001f5a8        0x0 compat/resolve.32
 .data          0x00000000c001f5a8        0x0 core/computer.32
 .data          0x00000000c001f5a8        0x0 core/gdt.32
 .data          0x00000000c001f5a8        0x0 core/idle.32
 .data          0x00000000c001f5a8        0x0 core/idt.32
 .data          0x00000000c001f5a8        0x4 core/kheap.32
 *fill*         0x00000000c001f5ac       0x14 
 .data          0x00000000c001f5c0      0x142 core/main.32
                0x00000000c001f5c0                titleScreen
 *fill*         0x00000000c001f702        0x2 
 .data          0x00000000c001f704        0x4 core/physmgr.32
                0x00000000c001f704                Phys::bitmap
 .data          0x00000000c001f708        0x0 core/pipe.32
 *fill*         0x00000000c001f708       0x18 
 .data          0x00000000c001f720       0x60 core/terminal.32
                0x00000000c001f720                VgaText::hiddenOut
                0x00000000c001f740                ansiToVGAMappings
 .data          0x00000000c001f780        0x0 core/tss.32
 .data          0x00000000c001f780        0x4 core/unixfile.32
                0x00000000c001f780                UnixFile::nextFd
 .data          0x00000000c001f784       0x15 core/virtmgr.32
                0x00000000c001f784                Virt::pageAllocPtr
                0x00000000c001f788                Virt::bitmap
                0x00000000c001f78c                Virt::swapfileSectorsPerPage
                0x00000000c001f790                Virt::swapfileLength
                0x00000000c001f794                Virt::swapfileSector
                0x00000000c001f798                Virt::swapfileDrive
 *fill*         0x00000000c001f799        0x3 
 .data          0x00000000c001f79c        0x4 coreobjs/c++.32
                0x00000000c001f79c                __stack_chk_guard
 .data          0x00000000c001f7a0        0x0 dbg/kconsole.32
 .data          0x00000000c001f7a0        0x0 fs/vfs.32
 .data          0x00000000c001f7a0        0x0 hal/bus.32
 .data          0x00000000c001f7a0        0x0 hal/buzzer.32
 .data          0x00000000c001f7a0        0x0 hal/clock.32
 .data          0x00000000c001f7a0        0x0 hal/device.32
 .data          0x00000000c001f7a0        0x0 hal/diskctrl.32
 .data          0x00000000c001f7a0        0x0 hal/diskphys.32
 .data          0x00000000c001f7a0        0x0 hal/fpu.32
 .data          0x00000000c001f7a0        0x0 hal/intctrl.32
 .data          0x00000000c001f7a0        0x0 hal/keybrd.32
 .data          0x00000000c001f7a0        0x0 hal/logidisk.32
 .data          0x00000000c001f7a0        0x0 hal/mouse.32
 .data          0x00000000c001f7a0        0x0 hal/partition.32
 .data          0x00000000c001f7a0        0x0 hal/serial.32
 .data          0x00000000c001f7a0        0x0 hal/timer.32
 .data          0x00000000c001f7a0        0x0 hal/vcache.32
 .data          0x00000000c001f7a0        0x0 hal/video.32
 .data          0x00000000c001f7a0       0x10 hw/acpi.32
                0x00000000c001f7a0                legacyIRQRemaps
 .data          0x00000000c001f7b0        0x4 hw/cpu.32
                0x00000000c001f7b0                lastCode
 *fill*         0x00000000c001f7b4        0xc 
 .data          0x00000000c001f7c0       0x4d krnl/env.32
                0x00000000c001f7c0                defaultSysEnv
 .data          0x00000000c001f80d        0x0 krnl/panic.32
 .data          0x00000000c001f80d        0x0 krnl/powctrl.32
 .data          0x00000000c001f80d        0x0 reg/registry.32
 .data          0x00000000c001f80d        0x0 sys/sc_eject.32
 .data          0x00000000c001f80d        0x0 sys/sc_exit.32
 .data          0x00000000c001f80d        0x0 sys/sc_getcwd.32
 .data          0x00000000c001f80d        0x0 sys/sc_getpid.32
 .data          0x00000000c001f80d        0x0 sys/sc_getramdata.32
 .data          0x00000000c001f80d        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c001f80d        0x0 sys/sc_loaddll.32
 .data          0x00000000c001f80d        0x0 sys/sc_read.32
 .data          0x00000000c001f80d        0x0 sys/sc_sbrk.32
 .data          0x00000000c001f80d        0x0 sys/sc_setcwd.32
 .data          0x00000000c001f80d        0x0 sys/sc_settime.32
 .data          0x00000000c001f80d        0x0 sys/sc_timezone.32
 .data          0x00000000c001f80d        0x0 sys/sc_write.32
 .data          0x00000000c001f80d        0x0 sys/sc_wsbe.32
 .data          0x00000000c001f80d        0x0 sys/sc_yield.32
 .data          0x00000000c001f80d        0x0 sys/syscalls.32
 .data          0x00000000c001f80d        0x0 thr/elf.32
 *fill*         0x00000000c001f80d        0x3 
 .data          0x00000000c001f810        0x4 thr/prcssthr.32
                0x00000000c001f810                Thr::nextPID
 .data          0x00000000c001f814        0x0 vm86/vm8086.32
 .data          0x00000000c001f814        0x0 arch/i386/hal.32
 .data          0x00000000c001f814        0x0 arch/i386/pic.32
 .data          0x00000000c001f814        0x0 arch/i386/rtc.32
 .data          0x00000000c001f814        0x0 arch/i386/vga.32
 .data          0x00000000c001f814        0x0 fs/fat/vfslink.32
 .data          0x00000000c001f814        0x0 fs/iso9660/helper.32
 .data          0x00000000c001f814        0x1 fs/iso9660/vfslink.32
                0x00000000c001f814                recentDriveletter
 .data          0x00000000c001f815        0x0 hal/sound/sndcard.32
 .data          0x00000000c001f815        0x0 hal/sound/sndport.32
 .data          0x00000000c001f815        0x0 hw/bus/isa.32
 .data          0x00000000c001f815        0x0 hw/bus/pci.32
 .data          0x00000000c001f815        0x0 hw/diskctrl/ide.32
 .data          0x00000000c001f815        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c001f815        0x0 hw/diskphys/ata.32
 .data          0x00000000c001f815        0x0 hw/diskphys/atapi.32
 .data          0x00000000c001f815        0x0 hw/diskphys/sata.32
 .data          0x00000000c001f815        0x0 hw/diskphys/satapi.32
 .data          0x00000000c001f815        0x0 hw/intctrl/apic.32
 .data          0x00000000c001f815        0x0 hw/timer/apictimer.32
 .data          0x00000000c001f815        0x0 hw/timer/pit.32
 .data          0x00000000c001f815        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c001f815        0x0 crtn.32
 .data          0x00000000c001f815        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c001f815        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c001f815        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c001f815        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c001f818        0x0
 .got           0x00000000c001f818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c001f818        0x0
 .got.plt       0x00000000c001f818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c001f818        0x0
 .igot.plt      0x00000000c001f818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c001f818        0x0
 .tm_clone_table
                0x00000000c001f818        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c001f818        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c001f815      0x18b
 *(.eh_frame)
 *fill*         0x00000000c001f815        0x3 
 .eh_frame      0x00000000c001f818        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c001f818        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c001f818       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c001f870       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c001f8b0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c001f91c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c001f9a0        0x0
 .rel.got       0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c001f9a0        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c001f9a0     0x4da8
                0x00000000c001f9a0                sbss = .
 *(COMMON)
 *fill*         0x00000000c001f9a0        0x0 
 COMMON         0x00000000c001f9a0       0xa0 fs/iso9660/iso9660.32
                0x00000000c001f9a0                dcache
                0x00000000c001f9e0                cdDriveLetter
                0x00000000c001fa00                icache
 *(.bss)
 .bss           0x00000000c001fa40        0x0 crti.32
 .bss           0x00000000c001fa40       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c001fa60        0x4 acpica/utclib.32
 *fill*         0x00000000c001fa64       0x1c 
 .bss           0x00000000c001fa80      0x378 core/malloc.32
 .bss           0x00000000c001fdf8        0x0 libk/ctype.32
 .bss           0x00000000c001fdf8        0x0 libk/string.32
 .bss           0x00000000c001fdf8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c001fdf8        0x8 
 .bss           0x00000000c001fe00       0x88 fs/fat/ff.32
 .bss           0x00000000c001fe88        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c001fe88        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c001fe88       0x18 
 .bss           0x00000000c001fea0      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0020838        0x0 compat/inlines.32
 .bss           0x00000000c0020838        0x0 compat/resolve.32
 .bss           0x00000000c0020838        0x6 core/computer.32
                0x00000000c0020838                Krnl::computer
                0x00000000c002083c                Krnl::preemptionOn
                0x00000000c002083d                Krnl::schedulingOn
 *fill*         0x00000000c002083e        0x2 
 .bss           0x00000000c0020840        0x6 core/gdt.32
                0x00000000c0020840                gdtDescr
 .bss           0x00000000c0020846        0x0 core/idle.32
 *fill*         0x00000000c0020846        0x2 
 .bss           0x00000000c0020848        0x6 core/idt.32
                0x00000000c0020848                idtDescr
 .bss           0x00000000c002084e        0x0 core/kheap.32
 *fill*         0x00000000c002084e        0x2 
 .bss           0x00000000c0020850        0x4 core/main.32
                0x00000000c0020850                sysBootSettings
 .bss           0x00000000c0020854       0x29 core/physmgr.32
                0x00000000c0020854                Phys::forbidEvictions
                0x00000000c0020858                Phys::currentPagePointer
                0x00000000c002085c                Phys::highestMem
                0x00000000c0020860                Phys::oldPercent
                0x00000000c0020864                Phys::usedPages
                0x00000000c0020868                Phys::usablePages
                0x00000000c002086c                Phys::dmaUsage
 .bss           0x00000000c002087d        0x0 core/pipe.32
 *fill*         0x00000000c002087d        0x3 
 .bss           0x00000000c0020880        0x9 core/terminal.32
                0x00000000c0020880                terminalCycle
                0x00000000c0020884                activeTerminal
                0x00000000c0020888                VgaText::graphicMode
 *fill*         0x00000000c0020889        0x1 
 .bss           0x00000000c002088a        0x2 core/tss.32
                0x00000000c002088a                doubleFaultSelector
 *fill*         0x00000000c002088c       0x14 
 .bss           0x00000000c00208a0       0x84 core/unixfile.32
                0x00000000c00208a0                sfileLpt
                0x00000000c00208e0                sfileCom
                0x00000000c0020904                sfileNul
                0x00000000c0020908                sfilePnt
                0x00000000c002090c                sfileAux
                0x00000000c0020910                sfileCon
                0x00000000c0020914                initialFilesAdded
                0x00000000c0020918                unixFileLinkedList
 .bss           0x00000000c0020924       0x10 core/virtmgr.32
                0x00000000c0020924                twswaps
                0x00000000c0020928                swapBalance
                0x00000000c002092c                Virt::swapfileBitmap
                0x00000000c0020930                firstVAS
 .bss           0x00000000c0020934        0x0 coreobjs/c++.32
 .bss           0x00000000c0020934        0x0 dbg/kconsole.32
 .bss           0x00000000c0020934        0x4 fs/vfs.32
                0x00000000c0020934                installedFilesystems
 .bss           0x00000000c0020938        0x0 hal/bus.32
 .bss           0x00000000c0020938        0x0 hal/buzzer.32
 .bss           0x00000000c0020938        0x8 hal/clock.32
                0x00000000c0020938                User::dstOn
                0x00000000c0020939                User::timezoneHalfHourOffset
                0x00000000c002093c                User::timezoneHourOffset
 .bss           0x00000000c0020940        0x0 hal/device.32
 .bss           0x00000000c0020940        0x0 hal/diskctrl.32
 .bss           0x00000000c0020940        0x0 hal/diskphys.32
 .bss           0x00000000c0020940        0x0 hal/fpu.32
 .bss           0x00000000c0020940     0x2000 hal/intctrl.32
                0x00000000c0020940                INT_contexts
                0x00000000c0021940                INT_handlers
 .bss           0x00000000c0022940      0x429 hal/keybrd.32
                0x00000000c0022940                keyboardWaitingTaskList
                0x00000000c0022944                keyboardSetupYet
                0x00000000c0022948                guiKeyboardHandler
                0x00000000c0022960                keystates
 *fill*         0x00000000c0022d69       0x17 
 .bss           0x00000000c0022d80       0x88 hal/logidisk.32
                0x00000000c0022d80                diskAssignments
                0x00000000c0022da0                disks
 .bss           0x00000000c0022e08        0x4 hal/mouse.32
                0x00000000c0022e08                guiMouseHandler
 .bss           0x00000000c0022e0c        0x0 hal/partition.32
 .bss           0x00000000c0022e0c        0x0 hal/serial.32
 .bss           0x00000000c0022e0c        0x4 hal/timer.32
                0x00000000c0022e0c                milliTenthsSinceBoot
 .bss           0x00000000c0022e10        0x0 hal/vcache.32
 .bss           0x00000000c0022e10        0x4 hal/video.32
                0x00000000c0022e10                screen
 *fill*         0x00000000c0022e14        0xc 
 .bss           0x00000000c0022e20      0x480 hw/acpi.32
                0x00000000c0022e20                systemSleepFunction
                0x00000000c0022e24                systemResetFunction
                0x00000000c0022e28                systemShutdownFunction
                0x00000000c0022e2c                nextACPITable
                0x00000000c0022e40                acpiTables
                0x00000000c0023040                usingXSDT
                0x00000000c0023044                MADTpointer
                0x00000000c0023048                RSDTpointer
                0x00000000c002304c                RSDPpointer
                0x00000000c0023050                nextAPICNMI
                0x00000000c0023060                apicNMIInfo
                0x00000000c00230e0                legacyIRQFlags
                0x00000000c0023100                ioapicDiscoveryNumber
                0x00000000c0023120                ioapicFoundInMADT
                0x00000000c0023140                ioapicAddresses
                0x00000000c00231c0                ioapicGSIBase
                0x00000000c0023240                processorDiscoveryNumber
                0x00000000c0023260                matchingAPICID
                0x00000000c0023280                processorID
 .bss           0x00000000c00232a0       0x10 hw/cpu.32
                0x00000000c00232a0                lastD
                0x00000000c00232a4                lastC
                0x00000000c00232a8                lastB
                0x00000000c00232ac                lastA
 .bss           0x00000000c00232b0        0x8 krnl/env.32
                0x00000000c00232b0                Krnl::userEnv
                0x00000000c00232b4                Krnl::systemEnv
 .bss           0x00000000c00232b8        0x9 krnl/panic.32
                0x00000000c00232b8                Krnl::guiProgramFaultHandler
                0x00000000c00232bc                Krnl::guiPanicHandler
                0x00000000c00232c0                Krnl::kernelInPanic
 *fill*         0x00000000c00232c1       0x1f 
 .bss           0x00000000c00232e0       0x48 krnl/powctrl.32
                0x00000000c00232e0                Krnl::powCtrlOnBattery
                0x00000000c0023300                Krnl::currentPowerSettings
                0x00000000c0023324                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0023328        0x0 reg/registry.32
 .bss           0x00000000c0023328        0x0 sys/sc_eject.32
 .bss           0x00000000c0023328        0x0 sys/sc_exit.32
 .bss           0x00000000c0023328        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0023328        0x0 sys/sc_getpid.32
 .bss           0x00000000c0023328        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0023328        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0023328        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0023328        0x0 sys/sc_read.32
 .bss           0x00000000c0023328        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0023328        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0023328        0x0 sys/sc_settime.32
 .bss           0x00000000c0023328        0x0 sys/sc_timezone.32
 .bss           0x00000000c0023328        0x0 sys/sc_write.32
 .bss           0x00000000c0023328        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0023328        0x0 sys/sc_yield.32
 *fill*         0x00000000c0023328       0x18 
 .bss           0x00000000c0023340      0x200 sys/syscalls.32
                0x00000000c0023340                systemCallHandlers
 .bss           0x00000000c0023540      0x7a4 thr/elf.32
                0x00000000c0023540                Thr::driverLookupNext
                0x00000000c0023560                Thr::driverLookupLen
                0x00000000c0023760                Thr::driverLookupAddr
                0x00000000c0023960                Thr::driverNameLookup
                0x00000000c0023b60                Thr::kernelSymbols
                0x00000000c0023be0                Thr::kernelStringTable
                0x00000000c0023c60                Thr::kernelSymbolTable
                0x00000000c0023ce0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0023ce4        0x4 
 .bss           0x00000000c0023ce8       0x68 thr/prcssthr.32
                0x00000000c0023ce8                cleanerThread
                0x00000000c0023cec                weNeedTheCleanerToNotBlock
                0x00000000c0023cf0                retValLockStuff
                0x00000000c0023cf4                retValSchedLock
                0x00000000c0023cf8                lockStuffLock
                0x00000000c0023cfc                schedulerLock
                0x00000000c0023d00                taskSwitchesPostponedFlag
                0x00000000c0023d04                postponeTaskSwitchesCounter
                0x00000000c0023d08                irqDisableCounter
                0x00000000c0023d0c                terminatedTaskList
                0x00000000c0023d18                sleepingTaskList
                0x00000000c0023d24                taskList
                0x00000000c0023d30                kernelProcess
 *fill*         0x00000000c0023d50       0x10 
 .bss           0x00000000c0023d60       0x40 vm86/vm8086.32
                0x00000000c0023d60                Vm::vmRetV
                0x00000000c0023d64                Vm::vmDone
                0x00000000c0023d65                Vm::vmReady
                0x00000000c0023d68                Vm::vm86Thread
                0x00000000c0023d6c                Vm::vmToHostCommsPtr
                0x00000000c0023d80                Vm::vmToHostComms
 .bss           0x00000000c0023da0       0x14 arch/i386/hal.32
                0x00000000c0023da0                apic
                0x00000000c0023da4                fpuOwner
                0x00000000c0023da8                coproLoadFunc
                0x00000000c0023dac                coproSaveFunc
                0x00000000c0023db0                gpFaultIntercept
 .bss           0x00000000c0023db4        0x0 arch/i386/pic.32
 .bss           0x00000000c0023db4        0x2 arch/i386/rtc.32
 .bss           0x00000000c0023db6        0x0 arch/i386/vga.32
 *fill*         0x00000000c0023db6        0xa 
 .bss           0x00000000c0023dc0       0xf0 fs/fat/vfslink.32
                0x00000000c0023dc0                FAT::fats
                0x00000000c0023de0                FAT::vfsToFatRemaps
                0x00000000c0023e60                fatToVFSRemaps
 .bss           0x00000000c0023eb0        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0023eb0       0x10 
 .bss           0x00000000c0023ec0      0x820 fs/iso9660/vfslink.32
                0x00000000c0023ec0                iso9660Owner
                0x00000000c0023ec4                recentSector
                0x00000000c0023ee0                recentBuffer
 .bss           0x00000000c00246e0        0x0 hal/sound/sndcard.32
 .bss           0x00000000c00246e0        0x0 hal/sound/sndport.32
 .bss           0x00000000c00246e0        0x0 hw/bus/isa.32
 .bss           0x00000000c00246e0        0xd hw/bus/pci.32
                0x00000000c00246e0                thePCI
 .bss           0x00000000c00246ed        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00246ed        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c00246ed        0x3 
 .bss           0x00000000c00246f0        0x8 hw/diskphys/ata.32
                0x00000000c00246f0                ataSectorsWritten
                0x00000000c00246f4                ataSectorsRead
 .bss           0x00000000c00246f8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00246f8        0x0 hw/diskphys/sata.32
 .bss           0x00000000c00246f8        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c00246f8        0x8 
 .bss           0x00000000c0024700       0x41 hw/intctrl/apic.32
                0x00000000c0024700                noOfIOAPICs
                0x00000000c0024720                ioapics
                0x00000000c0024740                IOAPICsSetupYet
 .bss           0x00000000c0024741        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024741        0x3 
 .bss           0x00000000c0024744        0x4 hw/timer/pit.32
                0x00000000c0024744                pitFreq
 .bss           0x00000000c0024748        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024748        0x0 crtn.32
 .bss           0x00000000c0024748        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0024748        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0024748        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0024748        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024748                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c00294f0                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
