Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_getvgaptr.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xda thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xb8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_getvgaptr.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x2190a
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x252 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                doTPAUSE
                0x00000000c00001be                hasLegacyFPU
                0x00000000c00001e3                is486
                0x00000000c0000219                detectCPUID
                0x00000000c000022f                goToVM86
                0x00000000c000025f                goToUsermode
                0x00000000c0000289                switchToThreadASMFirstTime
                0x00000000c0000297                switchToThreadASM
                0x00000000c000031f                asmQuickAcquireLock
                0x00000000c000033d                asmQuickReleaseLock
                0x00000000c0000349                asmAcquireLock
                0x00000000c000036a                asmReleaseLock
                0x00000000c000037d                loadGDT
                0x00000000c000039d                memcpy
 *fill*         0x00000000c00003a2        0x2 
 .text          0x00000000c00003a4      0x5dd acpica/utclib.32
                0x00000000c00003a4                memcmp
                0x00000000c00003e0                memmove
                0x00000000c00004a8                memset
                0x00000000c00004c4                strlen
                0x00000000c00004dc                strpbrk
                0x00000000c0000518                strtok
                0x00000000c0000564                strcpy
                0x00000000c0000588                strncpy
                0x00000000c00005f0                strcmp
                0x00000000c0000630                strchr
                0x00000000c0000654                strncmp
                0x00000000c00006a4                strcat
                0x00000000c00006d4                strncat
                0x00000000c0000710                strstr
                0x00000000c0000758                toupper
                0x00000000c000076c                tolower
                0x00000000c0000780                simple_strtoul
 .text          0x00000000c0000981      0xfad core/malloc.32
                0x00000000c0000aec                dlfree
                0x00000000c0000e47                dlmalloc
                0x00000000c0001384                dlrealloc
                0x00000000c0001527                dlmemalign
                0x00000000c000164a                dlcalloc
                0x00000000c00016e4                dlcfree
                0x00000000c00016e9                dlindependent_calloc
                0x00000000c000170e                dlindependent_comalloc
                0x00000000c0001725                dlvalloc
                0x00000000c0001750                dlpvalloc
                0x00000000c0001786                dlmalloc_trim
                0x00000000c0001793                dlmalloc_usable_size
                0x00000000c00017c4                dlmallinfo
                0x00000000c0001893                dlmalloc_stats
                0x00000000c00018a4                dlmallopt
 .text          0x00000000c000192e        0x0 libk/string.32
 .text          0x00000000c000192e       0x51 fs/fat/diskio.32
                0x00000000c000192e                disk_status
                0x00000000c0001931                disk_initialize
                0x00000000c0001934                disk_read
                0x00000000c000194a                disk_write
                0x00000000c0001960                disk_ioctl
 .text          0x00000000c000197f     0x6a69 fs/fat/ff.32
                0x00000000c0004c4d                f_mount
                0x00000000c0004caf                f_open
                0x00000000c00050eb                f_read
                0x00000000c000536b                f_write
                0x00000000c0005625                f_sync
                0x00000000c0005801                f_close
                0x00000000c0005830                f_lseek
                0x00000000c0005ce7                f_opendir
                0x00000000c0005de9                f_closedir
                0x00000000c0005e0b                f_readdir
                0x00000000c0005ea6                f_stat
                0x00000000c0005f35                f_getfree
                0x00000000c0006100                f_truncate
                0x00000000c00061f8                f_unlink
                0x00000000c000637b                f_mkdir
                0x00000000c00065a7                f_rename
                0x00000000c000689a                f_chmod
                0x00000000c0006978                f_utime
                0x00000000c0006a56                f_getlabel
                0x00000000c0006c44                f_setlabel
                0x00000000c0006eb1                f_expand
                0x00000000c00070e7                f_forward
                0x00000000c00072c5                f_mkfs
 .text          0x00000000c00083e8       0x2f fs/fat/ffsystem.32
                0x00000000c00083e8                ff_memalloc
                0x00000000c0008400                ff_memfree
 *fill*         0x00000000c0008417        0x1 
 .text          0x00000000c0008418      0x274 fs/fat/ffunicode.32
                0x00000000c0008418                ff_uni2oem
                0x00000000c00084b0                ff_oem2uni
                0x00000000c0008524                ff_wtoupper
 .text          0x00000000c000868c       0xa7 compat/inlines.32
                0x00000000c000868c                CPU::current()
                0x00000000c0008698                operator new(unsigned long)
                0x00000000c000869d                operator delete(void*)
                0x00000000c00086a2                disableIRQs()
                0x00000000c00086aa                enableIRQs()
                0x00000000c00086b9                lockScheduler()
                0x00000000c00086c1                unlockScheduler()
                0x00000000c00086d0                lockStuff()
                0x00000000c00086de                unlockStuff()
                0x00000000c0008718                Virt::getAKernelVAS()
                0x00000000c000871e                __not_memcpy
 *fill*         0x00000000c0008733        0x1 
 .text          0x00000000c0008734      0x118 compat/resolve.32
                0x00000000c0008734                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c000884c      0x783 core/computer.32
                0x00000000c000884c                Computer::close(int, int, void*)
                0x00000000c0008890                Krnl::firstTask()
                0x00000000c00089e4                Computer::Computer()
                0x00000000c00089e4                Computer::Computer()
                0x00000000c0008b40                Computer::setBootMessage(char const*)
                0x00000000c0008b42                Computer::detectFeatures()
                0x00000000c0008d4c                Computer::displayFeatures()
                0x00000000c0008d4e                Computer::rdmsr(unsigned int)
                0x00000000c0008d7a                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c0008db2                Computer::shutdown()
                0x00000000c0008dca                Computer::restart()
                0x00000000c0008de2                Computer::sleep()
                0x00000000c0008df6                Computer::nmiEnabled()
                0x00000000c0008e02                Computer::readCMOS(unsigned char)
                0x00000000c0008e1c                Computer::enableNMI(bool)
                0x00000000c0008e34                Computer::open(int, int, void*)
                0x00000000c0008f12                Computer::disableNMI()
                0x00000000c0008f20                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c0008f3e                Computer::handleNMI()
                0x00000000c0008fa4                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c0008fcf        0x1 
 .text          0x00000000c0008fd0      0x211 core/gdt.32
                0x00000000c0008fd0                GDTEntry::setBase(unsigned int)
                0x00000000c0008fec                GDTEntry::setLimit(unsigned int)
                0x00000000c000900a                GDT::GDT()
                0x00000000c000900a                GDT::GDT()
                0x00000000c0009020                GDT::addEntry(GDTEntry)
                0x00000000c0009042                GDT::getNumberOfEntries()
                0x00000000c000904a                GDT::flush()
                0x00000000c000906c                GDT::setup()
 .text          0x00000000c00091e1       0x19 core/idle.32
                0x00000000c00091e1                idleFunction(void*)
 *fill*         0x00000000c00091fa        0x2 
 .text          0x00000000c00091fc      0x464 core/idt.32
                0x00000000c00091fc                IDTEntry::IDTEntry(bool)
                0x00000000c00091fc                IDTEntry::IDTEntry(bool)
                0x00000000c000926e                IDTEntry::setOffset(unsigned int)
                0x00000000c0009284                IDT::IDT()
                0x00000000c0009284                IDT::IDT()
                0x00000000c0009286                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000928e                IDT::addEntry(IDTEntry, int)
                0x00000000c00092a8                IDT::addEntry(int, void (*)(), bool)
                0x00000000c00092e0                IDT::flush()
                0x00000000c00092fa                IDT::setup()
 .text          0x00000000c0009660      0x191 core/kheap.32
                0x00000000c0009660                sbrk
                0x00000000c0009703                mmap
                0x00000000c0009719                munmap
                0x00000000c000972f                liballoc_lock()
                0x00000000c000973c                liballoc_unlock()
                0x00000000c0009750                liballoc_alloc(int)
                0x00000000c0009768                liballoc_free(void*, int)
                0x00000000c0009783                realloc
                0x00000000c0009797                malloc
                0x00000000c00097a7                free
                0x00000000c00097b7                rfree
                0x00000000c00097c7                calloc
 .text          0x00000000c00097f1      0x437 core/main.32
                0x00000000c00097f1                Krnl::setBootMessage(char const*)
                0x00000000c000985d                kernel_main
 .text          0x00000000c0009c28      0x668 core/physmgr.32
                0x00000000c0009c28                Phys::allocateDMA(unsigned long)
                0x00000000c0009d37                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0009d7d                Phys::setPageState(unsigned long, bool)
                0x00000000c0009daf                Phys::getPageState(unsigned long)
                0x00000000c0009dcb                Phys::freePage(unsigned long)
                0x00000000c0009e4e                Phys::allocatePage()
                0x00000000c0009f39                Phys::allocateContiguousPages(int)
                0x00000000c0009f95                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0009fcd                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000a290      0x273 core/pipe.32
                0x00000000c000a290                Pipe::isAtty()
                0x00000000c000a294                Pipe::~Pipe()
                0x00000000c000a294                Pipe::~Pipe()
                0x00000000c000a2b8                Pipe::~Pipe()
                0x00000000c000a2e0                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000a3a0                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000a49c                Pipe::Pipe(int)
                0x00000000c000a49c                Pipe::Pipe(int)
 *fill*         0x00000000c000a503        0x1 
 .text          0x00000000c000a504      0xa8a core/terminal.32
                0x00000000c000a504                VgaText::isAtty()
                0x00000000c000a508                VgaText::~VgaText()
                0x00000000c000a508                VgaText::~VgaText()
                0x00000000c000a52c                VgaText::~VgaText()
                0x00000000c000a556                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000a576                setTerminalScrollLock(bool)
                0x00000000c000a577                addToTerminalCycle(VgaText*)
                0x00000000c000a598                scrollTerminalScrollLock(int)
                0x00000000c000a59a                VgaText::updateTitle()
                0x00000000c000a59c                VgaText::load()
                0x00000000c000a59e                VgaText::updateCursor()
                0x00000000c000a5b4                VgaText::doANSI_SGR(int)
                0x00000000c000a628                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000a638                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000a648                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000a668                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000a674                VgaText::setTitleColour(VgaColour)
                0x00000000c000a680                VgaText::setTitle(char*)
                0x00000000c000a68e                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000a6a0                VgaText::scrollScreen()
                0x00000000c000a738                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000a74a                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000a7da                VgaText::getCursorX()
                0x00000000c000a7e2                VgaText::getCursorY()
                0x00000000c000a7ea                VgaText::setCursor(int, int)
                0x00000000c000a801                setActiveTerminal(VgaText*)
                0x00000000c000a85b                doTerminalCycle()
                0x00000000c000a876                VgaText::clearScreen()
                0x00000000c000a8c4                VgaText::setCursorX(int)
                0x00000000c000a8dc                VgaText::setCursorY(int)
                0x00000000c000a8f4                VgaText::incrementCursor(bool)
                0x00000000c000a948                VgaText::decrementCursor(bool)
                0x00000000c000a96a                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000aa38                VgaText::putchar(char)
                0x00000000c000ab24                VgaText::putx(unsigned int)
                0x00000000c000ab6a                VgaText::puts(char const*)
                0x00000000c000ab90                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000abdc                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000ad2a                VgaText::VgaText(char const*)
                0x00000000c000ad2a                VgaText::VgaText(char const*)
                0x00000000c000ae90                VgaText::receiveKey(unsigned char)
                0x00000000c000af68                VgaText::doUpdate()
                0x00000000c000af69                newTerminal(char*)
 *fill*         0x00000000c000af8e        0x2 
 .text          0x00000000c000af90      0x1a1 core/tss.32
                0x00000000c000af90                TSS::TSS()
                0x00000000c000af90                TSS::TSS()
                0x00000000c000afa0                TSS::setESP(unsigned long)
                0x00000000c000afb4                TSS::flush()
                0x00000000c000afd4                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000b131        0x1 
 .text          0x00000000c000b132      0x4c2 core/unixfile.32
                0x00000000c000b132                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000b188                ReservedFilename::isAtty()
                0x00000000c000b1a4                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000b202                UnixFile::getFileDescriptor()
                0x00000000c000b20a                UnixFile::UnixFile(int)
                0x00000000c000b20a                UnixFile::UnixFile(int)
                0x00000000c000b3ba                ReservedFilename::ReservedFilename(int)
                0x00000000c000b3ba                ReservedFilename::ReservedFilename(int)
                0x00000000c000b3ec                UnixFile::~UnixFile()
                0x00000000c000b3ec                UnixFile::~UnixFile()
                0x00000000c000b484                UnixFile::~UnixFile()
                0x00000000c000b4ac                ReservedFilename::~ReservedFilename()
                0x00000000c000b4ac                ReservedFilename::~ReservedFilename()
                0x00000000c000b4d0                ReservedFilename::~ReservedFilename()
                0x00000000c000b4f7                getFromFileDescriptor(int)
 .text          0x00000000c000b5f4     0x124e core/virtmgr.32
                0x00000000c000b5f4                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000b629                Virt::getPageState(unsigned long)
                0x00000000c000b64d                Virt::allocateKernelVirtualPages(int)
                0x00000000c000b75e                Virt::freeSwapfilePage(unsigned long)
                0x00000000c000b77c                Virt::swapIDToSector(unsigned long)
                0x00000000c000b78e                Virt::allocateSwapfilePage()
                0x00000000c000b80c                Virt::virtualMemorySetup()
                0x00000000c000b857                Virt::setupPageSwapping(int)
                0x00000000c000b8c8                VAS::VAS(VAS*)
                0x00000000c000b8c8                VAS::VAS(VAS*)
                0x00000000c000b8f6                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000b922                VAS::getPageTableEntry(unsigned long)
                0x00000000c000b941                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000ba64                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000ba88                VAS::virtualToPhysical(unsigned long)
                0x00000000c000baa0                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000bae0                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000bb12                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000bb3c                VAS::~VAS()
                0x00000000c000bb3c                VAS::~VAS()
                0x00000000c000bcb8                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000bdbc                VAS::allocatePages(int, int)
                0x00000000c000bf94                VAS::setCPUSpecific(unsigned long)
                0x00000000c000bfb0                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000c076                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000c164                VAS::VAS(bool)
                0x00000000c000c164                VAS::VAS(bool)
                0x00000000c000c3e4                VAS::VAS()
                0x00000000c000c3e4                VAS::VAS()
                0x00000000c000c454                VAS::evict(unsigned long)
                0x00000000c000c524                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000c638                VAS::scanForEviction()
                0x00000000c000c716                mapVASFirstTime
 .text          0x00000000c000c842       0x95 coreobjs/c++.32
                0x00000000c000c842                __cxa_atexit
                0x00000000c000c845                __cxa_finalize
                0x00000000c000c846                __stack_chk_fail
                0x00000000c000c8b2                __cxa_pure_virtual
                0x00000000c000c8c3                operator new[](unsigned long)
                0x00000000c000c8c8                operator delete(void*, unsigned long)
                0x00000000c000c8cd                operator delete[](void*)
                0x00000000c000c8d2                operator delete[](void*, unsigned long)
 .text          0x00000000c000c8d7      0x1fc dbg/kconsole.32
                0x00000000c000c8d7                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000c930                Dbg::logc(char)
                0x00000000c000c950                Dbg::logs(char*)
                0x00000000c000c96d                Dbg::logWriteInt(unsigned int)
                0x00000000c000c98a                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000c9a9                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000cad3        0x1 
 .text          0x00000000c000cad4      0xcac fs/vfs.32
                0x00000000c000cad4                File::read(unsigned long long, void*, int*)
                0x00000000c000cb2c                File::write(unsigned long long, void*, int*)
                0x00000000c000cb84                Directory::read(unsigned long long, void*, int*)
                0x00000000c000cbdc                Directory::write(unsigned long long, void*, int*)
                0x00000000c000cc0a                File::isAtty()
                0x00000000c000cc0e                Directory::isAtty()
                0x00000000c000cc12                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000cc18                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000cc1e                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000cc24                File::~File()
                0x00000000c000cc24                File::~File()
                0x00000000c000cc48                File::~File()
                0x00000000c000cc72                Directory::~Directory()
                0x00000000c000cc72                Directory::~Directory()
                0x00000000c000cc96                Directory::~Directory()
                0x00000000c000ccc0                Filesystem::Filesystem()
                0x00000000c000ccc0                Filesystem::Filesystem()
                0x00000000c000cce4                Filesystem::~Filesystem()
                0x00000000c000cce4                Filesystem::~Filesystem()
                0x00000000c000ccf2                Filesystem::~Filesystem()
                0x00000000c000cd16                Fs::getcwd(Process*, char*, int)
                0x00000000c000cd40                Fs::initVFS()
                0x00000000c000cd6a                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000cf14                File::File(char const*, Process*)
                0x00000000c000cf14                File::File(char const*, Process*)
                0x00000000c000cfee                File::open(FileOpenMode)
                0x00000000c000d04c                File::close()
                0x00000000c000d0ac                File::seek(unsigned long long)
                0x00000000c000d102                File::tell(unsigned long long*)
                0x00000000c000d152                File::rewind()
                0x00000000c000d166                File::unlink()
                0x00000000c000d1b2                File::rename(char const*)
                0x00000000c000d200                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000d25c                File::exists()
                0x00000000c000d29a                File::stat(unsigned long long*, bool*)
                0x00000000c000d2fb                Fs::setcwd(Process*, char*)
                0x00000000c000d474                Directory::Directory(char const*, Process*)
                0x00000000c000d474                Directory::Directory(char const*, Process*)
                0x00000000c000d54e                Directory::open()
                0x00000000c000d5aa                Directory::close()
                0x00000000c000d60a                Directory::unlink()
                0x00000000c000d656                Directory::rename(char const*)
                0x00000000c000d6a4                Directory::exists()
                0x00000000c000d6e2                Directory::read(dirent*)
                0x00000000c000d72e                Directory::create()
                0x00000000c000d77a                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000d780       0x86 hal/bus.32
                0x00000000c000d780                Bus::Bus(char const*)
                0x00000000c000d780                Bus::Bus(char const*)
                0x00000000c000d7b8                Bus::~Bus()
                0x00000000c000d7b8                Bus::~Bus()
                0x00000000c000d7dc                Bus::~Bus()
 .text          0x00000000c000d806       0x96 hal/buzzer.32
                0x00000000c000d806                beepThread(void*)
                0x00000000c000d843                Krnl::beep(int, int, bool)
 .text          0x00000000c000d89c      0x467 hal/clock.32
                0x00000000c000d89c                User::loadClockSettings(int)
                0x00000000c000d8ee                Clock::Clock(char const*)
                0x00000000c000d8ee                Clock::Clock(char const*)
                0x00000000c000d924                Clock::~Clock()
                0x00000000c000d924                Clock::~Clock()
                0x00000000c000d948                Clock::~Clock()
                0x00000000c000d972                Clock::timeInSecondsLocal()
                0x00000000c000d9ba                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000da13                datetimeToSeconds(datetime_t)
                0x00000000c000db3a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000db9a                secondsToDatetime(unsigned long long)
                0x00000000c000dcde                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000dd03        0x1 
 .text          0x00000000c000dd04      0x4d0 hal/device.32
                0x00000000c000dd04                Device::hibernate()
                0x00000000c000dd06                Device::wake()
                0x00000000c000dd08                Device::detect()
                0x00000000c000dd0a                Device::disableLegacy()
                0x00000000c000dd0c                Device::powerSaving(PowerSavingLevel)
                0x00000000c000dd0e                DriverlessDevice::close(int, int, void*)
                0x00000000c000dd12                DriverlessDevice::detect()
                0x00000000c000dd14                DriverlessDevice::open(int, int, void*)
                0x00000000c000dd28                Device::~Device()
                0x00000000c000dd28                Device::~Device()
                0x00000000c000dd36                Device::~Device()
                0x00000000c000dd5e                Device::findAndLoadDriver()
                0x00000000c000dd6c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000dd92                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000ddd2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000ddfc                Device::getParent()
                0x00000000c000de08                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000de26                Device::addChild(Device*)
                0x00000000c000de6a                Device::removeAllChildren()
                0x00000000c000deb0                Device::hibernateAll()
                0x00000000c000dee0                Device::wakeAll()
                0x00000000c000df10                Device::detectAll()
                0x00000000c000df40                Device::disableLegacyAll()
                0x00000000c000df70                Device::loadDriversForAll()
                0x00000000c000dfb0                Device::closeAll()
                0x00000000c000dfe6                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000e01c                Device::setName(char const*)
                0x00000000c000e02a                Device::Device(char const*)
                0x00000000c000e02a                Device::Device(char const*)
                0x00000000c000e126                Device::getName()
                0x00000000c000e130                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000e130                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000e166                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000e1aa                getDevicesOfType(DeviceType)
 .text          0x00000000c000e1d4       0x86 hal/diskctrl.32
                0x00000000c000e1d4                HardDiskController::HardDiskController(char const*)
                0x00000000c000e1d4                HardDiskController::HardDiskController(char const*)
                0x00000000c000e20c                HardDiskController::~HardDiskController()
                0x00000000c000e20c                HardDiskController::~HardDiskController()
                0x00000000c000e230                HardDiskController::~HardDiskController()
 .text          0x00000000c000e25a       0xe2 hal/diskphys.32
                0x00000000c000e25a                PhysicalDisk::eject()
                0x00000000c000e25e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000e25e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000e2c6                PhysicalDisk::startCache()
                0x00000000c000e2ee                PhysicalDisk::~PhysicalDisk()
                0x00000000c000e2ee                PhysicalDisk::~PhysicalDisk()
                0x00000000c000e312                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000e33c        0x0 hal/fpu.32
 .text          0x00000000c000e33c      0x34c hal/intctrl.32
                0x00000000c000e33c                int_handler
                0x00000000c000e3c4                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000e40c                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000e537                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000e56b                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000e5e9                setupINTS()
                0x00000000c000e646                convertLegacyIRQNumber(int)
 .text          0x00000000c000e688      0x778 hal/keybrd.32
                0x00000000c000e688                startGUI(void*)
                0x00000000c000e6f4                startGUIVESA(void*)
                0x00000000c000e760                sendKeyToTerminal(unsigned char)
                0x00000000c000e81e                sendKeyboardToken(KeyboardToken)
                0x00000000c000ec50                clearInternalKeybuffer(VgaText*)
                0x00000000c000ec85                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000ed76                Keyboard::Keyboard(char const*)
                0x00000000c000ed76                Keyboard::Keyboard(char const*)
                0x00000000c000edb2                Keyboard::~Keyboard()
                0x00000000c000edb2                Keyboard::~Keyboard()
                0x00000000c000edd6                Keyboard::~Keyboard()
 .text          0x00000000c000ee00      0x42a hal/logidisk.32
                0x00000000c000ee00                LogicalDisk::close(int, int, void*)
                0x00000000c000ee04                LogicalDisk::~LogicalDisk()
                0x00000000c000ee04                LogicalDisk::~LogicalDisk()
                0x00000000c000ee28                LogicalDisk::~LogicalDisk()
                0x00000000c000ee52                LogicalDisk::open(int, int, void*)
                0x00000000c000ee66                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000ee9e                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000eee4                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000eee4                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000ef9a                LogicalDisk::assignDriveLetter()
                0x00000000c000f050                LogicalDisk::mount()
                0x00000000c000f0d8                LogicalDisk::unmount()
                0x00000000c000f0e8                LogicalDisk::eject()
                0x00000000c000f0fc                LogicalDisk::unassignDriveLetter()
                0x00000000c000f152                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000f1be                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000f22a        0x2 
 .text          0x00000000c000f22c       0x86 hal/mouse.32
                0x00000000c000f22c                Mouse::Mouse(char const*)
                0x00000000c000f22c                Mouse::Mouse(char const*)
                0x00000000c000f264                Mouse::~Mouse()
                0x00000000c000f264                Mouse::~Mouse()
                0x00000000c000f288                Mouse::~Mouse()
 .text          0x00000000c000f2b2      0x339 hal/partition.32
                0x00000000c000f2b2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000f35a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000f5eb        0x1 
 .text          0x00000000c000f5ec       0x86 hal/serial.32
                0x00000000c000f5ec                Serial::Serial(char const*)
                0x00000000c000f5ec                Serial::Serial(char const*)
                0x00000000c000f624                Serial::~Serial()
                0x00000000c000f624                Serial::~Serial()
                0x00000000c000f648                Serial::~Serial()
 *fill*         0x00000000c000f672        0x2 
 .text          0x00000000c000f674      0x234 hal/timer.32
                0x00000000c000f674                Timer::Timer(char const*)
                0x00000000c000f674                Timer::Timer(char const*)
                0x00000000c000f6ac                Timer::~Timer()
                0x00000000c000f6ac                Timer::~Timer()
                0x00000000c000f6d0                Timer::~Timer()
                0x00000000c000f6fa                Timer::read()
                0x00000000c000f705                setupTimer(int)
                0x00000000c000f740                timerHandler(unsigned int)
 .text          0x00000000c000f8a8      0x43e hal/vcache.32
                0x00000000c000f8a8                VCache::VCache(PhysicalDisk*)
                0x00000000c000f8a8                VCache::VCache(PhysicalDisk*)
                0x00000000c000fa10                VCache::invalidateReadBuffer()
                0x00000000c000fa20                VCache::writeWriteBuffer()
                0x00000000c000fa6c                VCache::~VCache()
                0x00000000c000fa6c                VCache::~VCache()
                0x00000000c000fac0                VCache::~VCache()
                0x00000000c000fae8                VCache::write(unsigned long long, int, void*)
                0x00000000c000fbe2                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000fce6      0x4b3 hal/video.32
                0x00000000c000fce6                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000fd32                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000fda2                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000fe20                Video::clearScreen(unsigned int)
                0x00000000c000fe54                Video::putpixel(int, int, unsigned int)
                0x00000000c000fe62                Video::Video(char const*)
                0x00000000c000fe62                Video::Video(char const*)
                0x00000000c000fe98                Video::~Video()
                0x00000000c000fe98                Video::~Video()
                0x00000000c000febc                Video::~Video()
                0x00000000c000fee6                Video::isMonochrome()
                0x00000000c000fef2                Video::getWidth()
                0x00000000c000fefe                Video::getHeight()
                0x00000000c000ff0a                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c000ffc6                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c001012e                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c0010199        0x3 
 .text          0x00000000c001019c     0x16bf hw/acpi.32
                0x00000000c001019c                ACPI::close(int, int, void*)
                0x00000000c0010250                findRSDP()
                0x00000000c0010324                loadACPITables(unsigned char*)
                0x00000000c0010588                findRSDT(unsigned char*)
                0x00000000c0010748                findDataTable(unsigned char*, char*)
                0x00000000c00107c0                scanMADT()
                0x00000000c0010c9c                ACPI::ACPI()
                0x00000000c0010c9c                ACPI::ACPI()
                0x00000000c0010d00                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0010de8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0010eb0                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0010eb8                ACPI::detectPCI()
                0x00000000c001139c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c00113e4                ACPI::sleep()
                0x00000000c0011420                ACPI::open(int, int, void*)
 *fill*         0x00000000c001185b        0x1 
 .text          0x00000000c001185c      0xdcb hw/cpu.32
                0x00000000c001185c                CPU::close(int, int, void*)
                0x00000000c0011860                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c001187c                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c0011894                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0011908                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c001198c                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c00119ba                CPU::cpuidCheckECX(unsigned int)
                0x00000000c00119e8                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0011a16                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0011a44                CPU::CPU()
                0x00000000c0011a44                CPU::CPU()
                0x00000000c0011ad2                CPU::displayFeatures()
                0x00000000c0011ad4                CPU::detectFeatures()
                0x00000000c00121aa                CPU::setupSMEP()
                0x00000000c00121b6                CPU::setupUMIP()
                0x00000000c00121c0                CPU::setupTSC()
                0x00000000c00121ca                CPU::setupLargePages()
                0x00000000c00121d4                CPU::setupPAT()
                0x00000000c0012210                CPU::setupMTRR()
                0x00000000c0012212                CPU::setupGlobalPages()
                0x00000000c001221c                CPU::allowUsermodeDataAccess()
                0x00000000c001222e                CPU::prohibitUsermodeDataAccess()
                0x00000000c0012240                CPU::setupSMAP()
                0x00000000c001224e                CPU::setupFeatures()
                0x00000000c001231a                CPU::open(int, int, void*)
                0x00000000c001242c                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c0012627      0x16a hw/smp.32
                0x00000000c0012627                Krnl::smpEntry()
                0x00000000c0012629                Krnl::startCPU(int)
                0x00000000c0012772                Krnl::startCPUs()
 *fill*         0x00000000c0012791        0x1 
 .text          0x00000000c0012792      0x581 krnl/env.32
                0x00000000c0012792                EnvVarContainer::getEnv(char const*)
                0x00000000c00127d0                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0012892                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0012894                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c0012a7a                EnvVarContainer::__loadSystem()
                0x00000000c0012a94                EnvVarContainer::__loadUser()
                0x00000000c0012a96                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0012a96                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0012ab8                EnvVarContainer::~EnvVarContainer()
                0x00000000c0012ab8                EnvVarContainer::~EnvVarContainer()
                0x00000000c0012ae8                Krnl::getEnv(Process*, char const*)
                0x00000000c0012b4d                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c0012b67                Krnl::setEnvUser(char const*, char const*)
                0x00000000c0012b86                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0012b99                Krnl::deleteEnvSystem(char const*)
                0x00000000c0012b9a                Krnl::deleteEnvUser(char const*)
                0x00000000c0012b9b                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c0012b9c                Krnl::newProcessEnv(Process*)
                0x00000000c0012bbe                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0012c0a                Krnl::loadSystemEnv()
                0x00000000c0012c38                Krnl::loadUserEnv()
                0x00000000c0012c5e                Krnl::flushEnv()
                0x00000000c0012c5f                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c0012c7f                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0012d13      0x243 krnl/panic.32
                0x00000000c0012d13                Krnl::panic(char const*)
 .text          0x00000000c0012f56      0x194 krnl/powctrl.32
                0x00000000c0012f56                Krnl::powerThread(void*)
                0x00000000c0012fd6                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0012fec                Krnl::userIOReceived()
                0x00000000c0012ff7                Krnl::handlePowerButton()
                0x00000000c001302c                Krnl::handleSleepButton()
                0x00000000c0013061                Krnl::setupPowerManager()
 .text          0x00000000c00130ea      0x50e reg/registry.32
                0x00000000c00130ea                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0013242                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0013397                Reg::getLine(char*, char*, char*)
                0x00000000c00133ce                Reg::readInt(char*, char*, int*)
                0x00000000c00134b9                Reg::readString(char*, char*, char*, int)
                0x00000000c001353a                Reg::readBool(char*, char*, bool*)
                0x00000000c001355f                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c001358b                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00135b7                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00135f8       0x36 sys/sc_eject.32
                0x00000000c00135f8                Sys::eject(regs*)
 .text          0x00000000c001362e       0x18 sys/sc_exit.32
                0x00000000c001362e                Sys::exit(regs*)
 .text          0x00000000c0013646       0x1f sys/sc_getcwd.32
                0x00000000c0013646                Sys::getCwd(regs*)
 .text          0x00000000c0013665        0xc sys/sc_getpid.32
                0x00000000c0013665                Sys::getPID(regs*)
 .text          0x00000000c0013671       0x1a sys/sc_getramdata.32
                0x00000000c0013671                Sys::getRAMData(regs*)
 .text          0x00000000c001368b       0x84 sys/sc_getvgaptr.32
                0x00000000c001368b                Sys::getVGAPtr(regs*)
 .text          0x00000000c001370f       0xa8 sys/sc_loaddll.32
                0x00000000c001370f                Sys::loadDLL(regs*)
 .text          0x00000000c00137b7       0x68 sys/sc_read.32
                0x00000000c00137b7                Sys::read(regs*)
 .text          0x00000000c001381f       0x55 sys/sc_sbrk.32
                0x00000000c001381f                Sys::sbrk(regs*)
 .text          0x00000000c0013874       0x1c sys/sc_setcwd.32
                0x00000000c0013874                Sys::setCwd(regs*)
 .text          0x00000000c0013890       0x95 sys/sc_settime.32
                0x00000000c0013890                Sys::setTime(regs*)
 .text          0x00000000c0013925       0x4a sys/sc_timezone.32
                0x00000000c0013925                Sys::timezone(regs*)
 .text          0x00000000c001396f       0x68 sys/sc_write.32
                0x00000000c001396f                Sys::write(regs*)
 .text          0x00000000c00139d7       0x62 sys/sc_wsbe.32
                0x00000000c00139d7                Sys::wsbe(regs*)
 .text          0x00000000c0013a39       0x38 sys/sc_yield.32
                0x00000000c0013a39                Sys::yield(regs*)
 .text          0x00000000c0013a71      0xf8e sys/syscalls.32
                0x00000000c0013a71                sysCallSeekDir(regs*)
                0x00000000c0013a76                sysCallTellDir(regs*)
                0x00000000c0013a7b                sysCallVerify(regs*)
                0x00000000c0013a85                sysCallGetArgc(regs*)
                0x00000000c0013a95                sysFormatDisk(regs*)
                0x00000000c0013aff                sysSetDiskVolumeLabel(regs*)
                0x00000000c0013b49                sysGetDiskVolumeLabel(regs*)
                0x00000000c0013b9e                sysShutdown(regs*)
                0x00000000c0013bfc                sysCallRealpath(regs*)
                0x00000000c0013c3f                sysCallReadDir(regs*)
                0x00000000c0013cbe                sysCallIsATTY(regs*)
                0x00000000c0013d18                sysCallSeek(regs*)
                0x00000000c0013d6f                sysCallTell(regs*)
                0x00000000c0013ddb                sysCallSize(regs*)
                0x00000000c0013e4d                sysCallSizeFromFilename(regs*)
                0x00000000c0013efc                sysCallClose(regs*)
                0x00000000c0013f5c                sysCallOpenDir(regs*)
                0x00000000c0013fd1                sysCallCloseDir(regs*)
                0x00000000c0014025                sysCallMakeDir(regs*)
                0x00000000c0014095                sysCallWait(regs*)
                0x00000000c00140af                sysCallNotImpl(regs*)
                0x00000000c00140ca                sysPanic(regs*)
                0x00000000c00140e4                sysCallRmdir(regs*)
                0x00000000c0014148                sysCallUnlink(regs*)
                0x00000000c00141ac                sysCallGetArgv(regs*)
                0x00000000c00141f8                sysCallTTYName(regs*)
                0x00000000c001427b                sysCallUSleep(regs*)
                0x00000000c00142a4                sysCallSpawn(regs*)
                0x00000000c001430c                sysCallGetEnv(regs*)
                0x00000000c00143b9                sysAppSettings(regs*)
                0x00000000c00144cd                sysSetFatAttrib(regs*)
                0x00000000c001453f                sysPipe(regs*)
                0x00000000c0014584                sysGetUnixTime(regs*)
                0x00000000c0014598                string_ends_with(char const*, char const*)
                0x00000000c00145e0                sysCallOpen(regs*)
                0x00000000c00147c8                Sys::loadSyscalls()
                0x00000000c00149bd                Sys::systemCall(regs*, void*)
 .text          0x00000000c00149ff     0x1203 thr/elf.32
                0x00000000c00149ff                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0014ca9                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0014ebf                Thr::runtimeReferenceHelper()
                0x00000000c0014ed2                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0014f21                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00151df                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0015915                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0015947                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001597e                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0015998                Thr::loadDLL(char const*, bool)
                0x00000000c0015bc9                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0015c02        0x2 
 .text          0x00000000c0015c04     0x12a1 thr/prcssthr.32
                0x00000000c0015c04                userModeEntryPoint(void*)
                0x00000000c0015c2c                changeTSS
                0x00000000c0015c5c                switchToThread(ThreadControlBlock*)
                0x00000000c0015d08                Process::addArgs(char**)
                0x00000000c0015d68                Process::Process(char const*, Process*, char**)
                0x00000000c0015d68                Process::Process(char const*, Process*, char**)
                0x00000000c0015f54                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0015f54                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001610c                taskStartupFunction
                0x00000000c0016118                Semaphore::Semaphore(int)
                0x00000000c0016118                Semaphore::Semaphore(int)
                0x00000000c0016148                Mutex::Mutex()
                0x00000000c0016148                Mutex::Mutex()
                0x00000000c001615c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0016254                Process::createUserThread()
                0x00000000c0016270                setupMultitasking(void (*)())
                0x00000000c0016378                schedule()
                0x00000000c0016404                Semaphore::tryAcquire()
                0x00000000c00164d0                Semaphore::assertLocked(char const*)
                0x00000000c0016548                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0016570                blockTask(TaskState)
                0x00000000c00165a0                waitTask(int, int*, int)
                0x00000000c00165e4                milliTenthSleepUntil(unsigned int)
                0x00000000c0016670                milliTenthSleep(unsigned int)
                0x00000000c0016680                sleep(unsigned int)
                0x00000000c001669c                Semaphore::acquire()
                0x00000000c0016758                taskReturned
                0x00000000c0016794                Thr::processFromPID(int)
                0x00000000c0016834                unblockTask(ThreadControlBlock*)
                0x00000000c00168d8                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0016ba0                cleanerTaskFunction(void*)
                0x00000000c0016c90                terminateTask(int)
                0x00000000c0016d5c                Thr::terminateFromIRQ(int)
                0x00000000c0016d68                Semaphore::release()
 .text          0x00000000c0016ea5      0xb93 vm86/vm8086.32
                0x00000000c0016ea5                Vm::inbv(unsigned short)
                0x00000000c0016eb8                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0016eee                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0016efe                Vm::getSegment(unsigned int)
                0x00000000c0016f06                Vm::getOffset(unsigned int)
                0x00000000c0016f0b                Vm::mainloop2()
                0x00000000c0016f45                Vm::mainVm8086Loop(void*)
                0x00000000c0016f55                Vm::mainloop3(unsigned long)
                0x00000000c0016f7b                Vm::initialise8086()
                0x00000000c0016fbe                Vm::finish8086()
                0x00000000c001701f                Vm::getOutput8086(unsigned char*)
                0x00000000c0017044                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00170fd                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0017265                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00172ef                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0017300                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0017312                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0017323                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0017338                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001734e                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0017363                Vm::faultHandler(regs*)
 .text          0x00000000c0017a38      0xfcd vm86/x87em.32
                0x00000000c0017a38                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c0017a96                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c0017a9f                Vm::fpu32ToInternal(unsigned int)
                0x00000000c0017ae4                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c0017aed                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c0017b4c                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c0017b88                Vm::fpuLongToFloat(long long)
                0x00000000c0017be7                Vm::fpuGet0()
                0x00000000c0017bec                Vm::fpuGet1()
                0x00000000c0017bf4                Vm::fpuGetPi()
                0x00000000c0017bfc                Vm::fpuGetLog2E()
                0x00000000c0017c14                Vm::fpuGetLogE2()
                0x00000000c0017c2c                Vm::fpuGetLog210()
                0x00000000c0017c44                Vm::fpuGetLog102()
                0x00000000c0017c5c                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c0017c70                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c0017c86                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c0017cdc                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c0017ced                Vm::fpuAbs(unsigned long long)
                0x00000000c0017cf6                Vm::fpuChs(unsigned long long)
                0x00000000c0017d06                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c0017d15                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c0017d34                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c0017d50                Vm::fpuSquare(unsigned long long)
                0x00000000c0017d66                Vm::fpuGetReg(int)
                0x00000000c0017da9                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c0017df5                Vm::fpuPush(unsigned long long)
                0x00000000c0017e53                Vm::fpuPop()
                0x00000000c0017ea6                Vm::x87Handler(regs*)
 .text          0x00000000c0018a05     0x1150 arch/i386/hal.32
                0x00000000c0018a05                Hal::noCopro(unsigned long)
                0x00000000c0018a06                Hal::noTSC()
                0x00000000c0018a0b                Hal::readTSC()
                0x00000000c0018a0e                nmiHandler(regs*, void*)
                0x00000000c0018a27                doubleFault(regs*, void*)
                0x00000000c0018a40                displayDebugInfo(regs*)
                0x00000000c0019094                displayProgramFault(char const*)
                0x00000000c00190d1                gpFault(regs*, void*)
                0x00000000c0019146                pgFault(regs*, void*)
                0x00000000c00191d0                otherISRHandler(regs*, void*)
                0x00000000c0019224                opcodeFault(regs*, void*)
                0x00000000c001961e                i386SaveCoprocessor(void*)
                0x00000000c0019632                i386LoadCoprocessor(void*)
                0x00000000c0019646                x87EmulHandler(regs*, void*)
                0x00000000c0019706                Hal::consoleScroll(int, int)
                0x00000000c001975a                Hal::consoleWriteCharacter(char, int, int, int, int)
                0x00000000c001978a                Hal::consoleCursorUpdate(int, int)
                0x00000000c00197c0                Hal::initialiseCoprocessor()
                0x00000000c00198a2                Hal::panic(char const*)
                0x00000000c00198a7                Hal::initialise()
                0x00000000c0019ae7                Hal::makeBeep(int)
                0x00000000c0019b21                Hal::getRand()
                0x00000000c0019b24                Hal::endOfInterrupt(int)
 *fill*         0x00000000c0019b55        0x3 
 .text          0x00000000c0019b58      0x2dc arch/i386/pic.32
                0x00000000c0019b58                picIoWait()
                0x00000000c0019b60                picDisable()
                0x00000000c0019b94                picGetIRQReg(int)
                0x00000000c0019c10                picOpen()
                0x00000000c0019d94                picEOI(int)
 .text          0x00000000c0019e34      0x724 arch/i386/rtc.32
                0x00000000c0019e34                RTC::open(int, int, void*)
                0x00000000c0019e38                RTC::close(int, int, void*)
                0x00000000c0019e3c                RTC::timeInSecondsUTC()
                0x00000000c0019e4e                RTC::timeInDatetimeUTC()
                0x00000000c0019e74                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c0019eb2                RTC::~RTC()
                0x00000000c0019eb2                RTC::~RTC()
                0x00000000c0019ed6                RTC::~RTC()
                0x00000000c0019f00                RTC::get_update_in_progress_flag()
                0x00000000c0019f18                RTC::completeRTCRefresh()
                0x00000000c001a1e2                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001a45c                rtcIRQHandler(regs*, void*)
                0x00000000c001a4a2                RTC::RTC()
                0x00000000c001a4a2                RTC::RTC()
 .text          0x00000000c001a558     0x13b7 fs/fat/vfslink.32
                0x00000000c001a558                FAT::getName()
                0x00000000c001a560                FAT::tell(void*, unsigned long long*)
                0x00000000c001a59c                FAT::stat(void*, unsigned long long*)
                0x00000000c001a5d8                FAT::~FAT()
                0x00000000c001a5d8                FAT::~FAT()
                0x00000000c001a5fc                FAT::~FAT()
                0x00000000c001a624                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001a6c8                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001a78c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a960                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001ab78                FAT::allocateSwapfile(char const*, int)
                0x00000000c001ad34                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001aea0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001af00                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001af60                FAT::close(void*)
                0x00000000c001afb4                FAT::closeDir(void*)
                0x00000000c001b008                FAT::seek(void*, unsigned long long)
                0x00000000c001b064                fatWrapperReadDisk
                0x00000000c001b0ac                fatWrapperWriteDisk
                0x00000000c001b0f4                fatWrapperIoctl
                0x00000000c001b204                FAT::FAT()
                0x00000000c001b204                FAT::FAT()
                0x00000000c001b258                FAT::fixFilepath(char*)
                0x00000000c001b294                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001b3c8                FAT::openDir(char const*, void**)
                0x00000000c001b478                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b56c                FAT::unlink(char const*)
                0x00000000c001b5ec                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b754                FAT::rename(char const*, char const*)
                0x00000000c001b820                FAT::mkdir(char const*)
                0x00000000c001b8a0                FAT::exists(char const*)
 *fill*         0x00000000c001b90f        0x1 
 .text          0x00000000c001b910      0xba7 fs/iso9660/vfslink.32
                0x00000000c001b910                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001b916                ISO9660::seek(void*, unsigned long long)
                0x00000000c001b946                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001b96a                ISO9660::getName()
                0x00000000c001b970                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001b994                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001b99a                ISO9660::unlink(char const*)
                0x00000000c001b9a0                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001b9a6                ISO9660::rename(char const*, char const*)
                0x00000000c001b9ac                ISO9660::mkdir(char const*)
                0x00000000c001b9b2                ISO9660::close(void*)
                0x00000000c001b9d4                ISO9660::closeDir(void*)
                0x00000000c001b9f6                ISO9660::~ISO9660()
                0x00000000c001b9f6                ISO9660::~ISO9660()
                0x00000000c001ba1a                ISO9660::~ISO9660()
                0x00000000c001ba41                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001ba83                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001bafe                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001bb5e                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001bd62                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001bfdc                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001c030                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001c206                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001c294                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001c342                ISO9660::exists(char const*)
                0x00000000c001c366                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001c3fa                ISO9660::openDir(char const*, void**)
                0x00000000c001c494                ISO9660::ISO9660()
                0x00000000c001c494                ISO9660::ISO9660()
 *fill*         0x00000000c001c4b7        0x1 
 .text          0x00000000c001c4b8      0x298 hal/sound/sndcard.32
                0x00000000c001c4b8                SoundCard::beginPlayback()
                0x00000000c001c4c6                SoundCard::stopPlayback()
                0x00000000c001c4d4                SoundCard::SoundCard(char const*)
                0x00000000c001c4d4                SoundCard::SoundCard(char const*)
                0x00000000c001c572                SoundCard::~SoundCard()
                0x00000000c001c572                SoundCard::~SoundCard()
                0x00000000c001c596                SoundCard::~SoundCard()
                0x00000000c001c5c0                SoundCard::configureRates(int, int, int)
                0x00000000c001c5f0                SoundCard::getSamples16(int, short*)
                0x00000000c001c65a                SoundCard::getSamples32(int, int*)
                0x00000000c001c6e0                SoundCard::addChannel(SoundPort*)
                0x00000000c001c73c                SoundCard::removeChannel(int)
 .text          0x00000000c001c750      0x3fb hal/sound/sndport.32
                0x00000000c001c750                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c750                SoundPort::SoundPort(int, int, int, int)
                0x00000000c001c7dc                SoundPort::~SoundPort()
                0x00000000c001c7dc                SoundPort::~SoundPort()
                0x00000000c001c810                SoundPort::unpause()
                0x00000000c001c81c                SoundPort::pause()
                0x00000000c001c828                SoundPort::getBufferUsed()
                0x00000000c001c830                SoundPort::getBufferSize()
                0x00000000c001c838                SoundPort::buffer16(short*, int)
                0x00000000c001c8ec                SoundPort::buffer32(int*, int)
                0x00000000c001c998                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c001ca94                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c001cb4b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001cb4b        0x1 
 .text          0x00000000c001cb4c     0x1187 hw/bus/pci.32
                0x00000000c001cb4c                PCI::open(int, int, void*)
                0x00000000c001cb6a                PCI::close(int, int, void*)
                0x00000000c001cb6e                PCI::PCI()
                0x00000000c001cb6e                PCI::PCI()
                0x00000000c001cc04                PCI::readBAR8(unsigned int, int)
                0x00000000c001cc20                PCI::readBAR16(unsigned int, int)
                0x00000000c001cc3e                PCI::readBAR32(unsigned int, int)
                0x00000000c001cc5a                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c001cc7a                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001cc9c                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001ccbc                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cd2a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cdd2                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001cdf6                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001ce1e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001ce68                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001ce90                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001ceb4                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001ced8                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001cf00                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001cf64                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001d04c                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001d43e                PCI::checkBus(unsigned char)
                0x00000000c001d462                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001d8a2                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001dc14                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001dc80                PCI::detect()
 *fill*         0x00000000c001dcd3        0x1 
 .text          0x00000000c001dcd4      0xb66 hw/diskctrl/ide.32
                0x00000000c001dcd4                IDE::close(int, int, void*)
                0x00000000c001dcd8                IDE::IDE()
                0x00000000c001dcd8                IDE::IDE()
                0x00000000c001dd0c                IDE::prepareInterrupt(unsigned char)
                0x00000000c001dd1e                selectDrive(unsigned char, unsigned char)
                0x00000000c001dd20                IDE::getBase(unsigned char)
                0x00000000c001dd32                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ddf2                IDE::read(unsigned char, unsigned char)
                0x00000000c001dea0                IDE::waitInterrupt(unsigned char)
                0x00000000c001df02                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001df1e                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001df3a                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001df80                IDE::open(int, int, void*)
                0x00000000c001e3aa                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001e476                IDE::detect()
                0x00000000c001e736                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001e7e6                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001e83a      0x46c hw/diskctrl/satabus.32
                0x00000000c001e83a                SATABus::close(int, int, void*)
                0x00000000c001e83e                SATABus::detect()
                0x00000000c001e840                SATABus::SATABus()
                0x00000000c001e840                SATABus::SATABus()
                0x00000000c001e8c6                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e8f8                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e940                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e960                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001e98a                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001ea90                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001ec72                SATABus::open(int, int, void*)
 .text          0x00000000c001eca6      0x684 hw/diskphys/ata.32
                0x00000000c001eca6                ATA::close(int, int, void*)
                0x00000000c001ecca                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001eccc                ATA::ATA()
                0x00000000c001eccc                ATA::ATA()
                0x00000000c001ecfa                ATA::flush(bool)
                0x00000000c001ed44                ATA::readyForCommand()
                0x00000000c001ed90                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001f186                ATA::read(unsigned long long, int, void*)
                0x00000000c001f1d2                ATA::write(unsigned long long, int, void*)
                0x00000000c001f234                ATA::detectCHS()
                0x00000000c001f25e                ATA::open(int, int, void*)
 .text          0x00000000c001f32a      0x645 hw/diskphys/atapi.32
                0x00000000c001f32a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001f330                ATAPI::close(int, int, void*)
                0x00000000c001f354                ATAPI::ATAPI()
                0x00000000c001f354                ATAPI::ATAPI()
                0x00000000c001f382                ATAPI::readyForCommand()
                0x00000000c001f3d4                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001f694                ATAPI::diskRemoved()
                0x00000000c001f6f0                ATAPI::eject()
                0x00000000c001f738                ATAPI::diskInserted()
                0x00000000c001f754                ATAPI::detectMedia()
                0x00000000c001f810                ATAPI::open(int, int, void*)
                0x00000000c001f8f0                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001f96f        0x1 
 .text          0x00000000c001f970      0xa68 hw/diskphys/sata.32
                0x00000000c001f970                SATA::close(int, int, void*)
                0x00000000c001f994                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001f996                SATA::open(int, int, void*)
                0x00000000c001fb8c                SATA::SATA()
                0x00000000c001fb8c                SATA::SATA()
                0x00000000c001fbba                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c00201b2                SATA::read(unsigned long long, int, void*)
                0x00000000c00202b2                SATA::write(unsigned long long, int, void*)
 .text          0x00000000c00203d8      0x642 hw/diskphys/satapi.32
                0x00000000c00203d8                SATAPI::write(unsigned long long, int, void*)
                0x00000000c00203de                SATAPI::close(int, int, void*)
                0x00000000c0020402                SATAPI::SATAPI()
                0x00000000c0020402                SATAPI::SATAPI()
                0x00000000c0020430                SATAPI::diskRemoved()
                0x00000000c0020432                SATAPI::diskInserted()
                0x00000000c002044e                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c00206dc                SATAPI::eject()
                0x00000000c0020718                SATAPI::detectMedia()
                0x00000000c0020842                SATAPI::open(int, int, void*)
                0x00000000c0020942                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c0020a1a      0x43f hw/intctrl/apic.32
                0x00000000c0020a1a                IOAPIC::close(int, int, void*)
                0x00000000c0020a20                apicGetBase()
                0x00000000c0020a62                IOAPIC::IOAPIC()
                0x00000000c0020a62                IOAPIC::IOAPIC()
                0x00000000c0020a8a                apicOpen()
                0x00000000c0020be4                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0020c16                IOAPIC::read(int)
                0x00000000c0020c3e                IOAPIC::open(int, int, void*)
                0x00000000c0020d34                IOAPIC::write(int, int)
                0x00000000c0020d60                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 *fill*         0x00000000c0020e59        0x3 
 .text          0x00000000c0020e5c       0xf0 hw/timer/apictimer.32
                0x00000000c0020e5c                APICTimer::close(int, int, void*)
                0x00000000c0020e64                apicTimerHandler(regs*, void*)
                0x00000000c0020e8c                APICTimer::open(int, int, void*)
                0x00000000c0020efc                APICTimer::write(int)
                0x00000000c0020f24                APICTimer::APICTimer()
                0x00000000c0020f24                APICTimer::APICTimer()
 .text          0x00000000c0020f4c      0x1a3 hw/timer/pit.32
                0x00000000c0020f4c                PIT::write(int)
                0x00000000c0020fcc                pitHandler(regs*, void*)
                0x00000000c0020ff0                PIT::open(int, int, void*)
                0x00000000c0021040                PIT::close(int, int, void*)
                0x00000000c0021070                PIT::PIT()
                0x00000000c0021070                PIT::PIT()
 *fill*         0x00000000c00210ef        0x1 
 .text          0x00000000c00210f0       0x83 arch/i386/avx.32
                0x00000000c00210f0                avxDetect
                0x00000000c002111a                avxSave
                0x00000000c002112b                avxLoad
                0x00000000c002113c                avxInit
                0x00000000c002115e                avxClose
                0x00000000c002115f                wouldSheSayYes
 *fill*         0x00000000c0021173        0xd 
 .text          0x00000000c0021180      0x1d6 arch/i386/interrupt.32
                0x00000000c0021180                isr0
                0x00000000c0021190                isr1
                0x00000000c002119a                isr2
                0x00000000c00211a4                isr3
                0x00000000c00211ae                isr4
                0x00000000c00211b8                isr5
                0x00000000c00211c2                isr6
                0x00000000c00211cc                isr7
                0x00000000c00211d6                isr8
                0x00000000c00211de                isr9
                0x00000000c00211e8                isr10
                0x00000000c00211f0                isr11
                0x00000000c00211f8                isr12
                0x00000000c0021200                isr13
                0x00000000c0021208                isr14
                0x00000000c0021210                isr15
                0x00000000c002121a                isr16
                0x00000000c0021224                isr17
                0x00000000c002122e                isr18
                0x00000000c0021238                irq3
                0x00000000c0021242                irq4
                0x00000000c002124c                irq5
                0x00000000c0021256                irq6
                0x00000000c0021260                irq7
                0x00000000c002126a                irq8
                0x00000000c0021274                irq9
                0x00000000c002127e                irq10
                0x00000000c0021288                irq11
                0x00000000c0021292                irq12
                0x00000000c002129c                irq13
                0x00000000c00212a6                irq14
                0x00000000c00212b0                irq15
                0x00000000c00212ba                irq1
                0x00000000c00212c1                irq2
                0x00000000c00212c8                isr96
                0x00000000c00212cf                irq0
                0x00000000c00212d4                int_common_stub
                0x00000000c00212d4                syscall_common_stub
                0x00000000c0021306                irq16
                0x00000000c0021310                irq17
                0x00000000c002131a                irq18
                0x00000000c0021324                irq19
                0x00000000c002132e                irq20
                0x00000000c0021338                irq21
                0x00000000c0021342                irq22
                0x00000000c002134c                irq23
 *fill*         0x00000000c0021356        0xa 
 .text          0x00000000c0021360       0x10 arch/i386/rdrand.32
                0x00000000c0021360                i386GetRDRAND
 .text          0x00000000c0021370       0x39 arch/i386/sse.32
                0x00000000c0021370                absolutelyNoChanceInHell
                0x00000000c0021370                sseDetect
                0x00000000c0021388                sseSave
                0x00000000c0021390                sseLoad
                0x00000000c0021398                sseInit
                0x00000000c00213a8                sseClose
 *fill*         0x00000000c00213a9        0x7 
 .text          0x00000000c00213b0       0x49 arch/i386/x87.32
                0x00000000c00213b6                x87Detect
                0x00000000c00213d1                x87Save
                0x00000000c00213d8                x87Load
                0x00000000c00213df                x87Init
                0x00000000c00213f8                x87Close
 *fill*         0x00000000c00213f9        0x3 
 .text          0x00000000c00213fc       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c0021421        0x0 crtn.32
 *fill*         0x00000000c0021421        0x3 
 .text          0x00000000c0021424      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c0021424                __divdi3
 *fill*         0x00000000c002156f        0x1 
 .text          0x00000000c0021570      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c0021570                __moddi3
 *fill*         0x00000000c00216ee        0x2 
 .text          0x00000000c00216f0       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c00216f0                __udivdi3
 *fill*         0x00000000c00217ef        0x1 
 .text          0x00000000c00217f0      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c00217f0                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0021910        0x0
 .iplt          0x00000000c0021910        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c002190a        0xf
 .init          0x00000000c002190a        0x3 crti.32
                0x00000000c002190a                _init
 .init          0x00000000c002190d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0021912        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0021917        0x2 crtn.32

.fini           0x00000000c0021919        0xa
 .fini          0x00000000c0021919        0x3 crti.32
                0x00000000c0021919                _fini
 .fini          0x00000000c002191c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c0021921        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c0021924       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0021924       0x23 core/computer.32
                0x00000000c0021924                Computer::~Computer()
                0x00000000c0021924                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0021948       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0021948       0x2a core/computer.32
                0x00000000c0021948                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0021972       0x21
 .text._Z10idleCommonv
                0x00000000c0021972       0x21 core/idle.32
                0x00000000c0021972                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021994        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0021994        0x2 core/unixfile.32
                0x00000000c0021994                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0021994                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021996       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0021996       0x42 core/unixfile.32
                0x00000000c0021996                LinkedList<UnixFile>::LinkedList()
                0x00000000c0021996                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00219d8       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00219d8       0xd3 core/unixfile.32
                0x00000000c00219d8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0021aac        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c0021aac        0x7 core/unixfile.32
                0x00000000c0021aac                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021ab4       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c0021ab4       0xa1 core/unixfile.32
                0x00000000c0021ab4                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021b56        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c0021b56        0x8 core/unixfile.32
                0x00000000c0021b56                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021b5e       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0021b5e       0x1a hal/device.32
                0x00000000c0021b5e                DriverlessDevice::~DriverlessDevice()
                0x00000000c0021b5e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021b78       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0021b78       0x2a hal/device.32
                0x00000000c0021b78                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021ba2       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c0021ba2       0xdc hal/device.32
                0x00000000c0021ba2                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021c7e       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0021c7e       0x42 hal/device.32
                0x00000000c0021c7e                LinkedList<Device>::LinkedList()
                0x00000000c0021c7e                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021cc0       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c0021cc0       0x1c hal/timer.32
                0x00000000c0021cc0                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021cdc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c0021cdc        0x7 hal/timer.32
                0x00000000c0021cdc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021ce4       0xb8
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0021ce4       0xb8 hal/timer.32
                0x00000000c0021ce4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021d9c       0xda
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0021d9c       0xda hal/timer.32
                0x00000000c0021d9c                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0021e78       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0021e78       0x23 hw/acpi.32
                0x00000000c0021e78                ACPI::~ACPI()
                0x00000000c0021e78                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0021e9c       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0021e9c       0x2a hw/acpi.32
                0x00000000c0021e9c                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021ec8        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c0021ec8        0x2 hw/acpi.32
                0x00000000c0021ec8                LinkedList<Device>::~LinkedList()
                0x00000000c0021ec8                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021ecc       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c0021ecc       0x1c hw/acpi.32
                0x00000000c0021ecc                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021ee8        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c0021ee8        0x7 hw/acpi.32
                0x00000000c0021ee8                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021ef0       0xb8
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c0021ef0       0xb8 hw/acpi.32
                0x00000000c0021ef0                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c0021fa8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0021fa8       0x23 hw/cpu.32
                0x00000000c0021fa8                CPU::~CPU()
                0x00000000c0021fa8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0021fcc       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0021fcc       0x2a hw/cpu.32
                0x00000000c0021fcc                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021ff8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0021ff8        0x2 thr/prcssthr.32
                0x00000000c0021ff8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0021ff8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021ffc       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0021ffc       0x49 thr/prcssthr.32
                0x00000000c0021ffc                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0021ffc                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0022048       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0022048       0x42 thr/prcssthr.32
                0x00000000c0022048                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0022048                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002208c        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c002208c        0x8 thr/prcssthr.32
                0x00000000c002208c                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0022094        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0022094        0xd vm86/x87em.32
                0x00000000c0022094                Vm::_FPUState::_FPUState()
                0x00000000c0022094                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c00220a2       0x23
 .text._ZN3PCID2Ev
                0x00000000c00220a2       0x23 hw/bus/pci.32
                0x00000000c00220a2                PCI::~PCI()
                0x00000000c00220a2                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c00220c6       0x2a
 .text._ZN3PCID0Ev
                0x00000000c00220c6       0x2a hw/bus/pci.32
                0x00000000c00220c6                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c00220f0       0x23
 .text._ZN3IDED2Ev
                0x00000000c00220f0       0x23 hw/diskctrl/ide.32
                0x00000000c00220f0                IDE::~IDE()
                0x00000000c00220f0                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0022114       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0022114       0x2a hw/diskctrl/ide.32
                0x00000000c0022114                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c002213e       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c002213e       0x23 hw/diskctrl/satabus.32
                0x00000000c002213e                SATABus::~SATABus()
                0x00000000c002213e                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0022162       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0022162       0x2a hw/diskctrl/satabus.32
                0x00000000c0022162                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c002218c       0x23
 .text._ZN3ATAD2Ev
                0x00000000c002218c       0x23 hw/diskphys/ata.32
                0x00000000c002218c                ATA::~ATA()
                0x00000000c002218c                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c00221b0       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c00221b0       0x2a hw/diskphys/ata.32
                0x00000000c00221b0                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c00221da       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c00221da       0x23 hw/diskphys/atapi.32
                0x00000000c00221da                ATAPI::~ATAPI()
                0x00000000c00221da                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c00221fe       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c00221fe       0x2a hw/diskphys/atapi.32
                0x00000000c00221fe                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0022228       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0022228       0x23 hw/diskphys/sata.32
                0x00000000c0022228                SATA::~SATA()
                0x00000000c0022228                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c002224c       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c002224c       0x2a hw/diskphys/sata.32
                0x00000000c002224c                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0022276       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0022276       0x23 hw/diskphys/satapi.32
                0x00000000c0022276                SATAPI::~SATAPI()
                0x00000000c0022276                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c002229a       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c002229a       0x2a hw/diskphys/satapi.32
                0x00000000c002229a                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c00222c4       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c00222c4       0x23 hw/intctrl/apic.32
                0x00000000c00222c4                IOAPIC::~IOAPIC()
                0x00000000c00222c4                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c00222e8       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c00222e8       0x2a hw/intctrl/apic.32
                0x00000000c00222e8                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0022314       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0022314       0x23 hw/timer/apictimer.32
                0x00000000c0022314                APICTimer::~APICTimer()
                0x00000000c0022314                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0022338       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0022338       0x2a hw/timer/apictimer.32
                0x00000000c0022338                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0022364       0x23
 .text._ZN3PITD2Ev
                0x00000000c0022364       0x23 hw/timer/pit.32
                0x00000000c0022364                PIT::~PIT()
                0x00000000c0022364                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0022388       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0022388       0x2a hw/timer/pit.32
                0x00000000c0022388                PIT::~PIT()

.rodata         0x00000000c00223b2     0x378a
                0x00000000c00223b2                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00223b2        0x2 
 .ctors         0x00000000c00223b4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00223b8        0x4 core/unixfile.32
 .ctors         0x00000000c00223bc        0x4 thr/prcssthr.32
 .ctors         0x00000000c00223c0        0x4 vm86/x87em.32
 .ctors         0x00000000c00223c4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00223c8                end_ctors = .
                0x00000000c00223c8                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00223c8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00223cc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00223cc                __DTOR_END__
                0x00000000c00223d0                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00223d0       0x10 
 .rodata        0x00000000c00223e0      0x101 acpica/utclib.32
                0x00000000c00223e0                AcpiGbl_Ctypes
 *fill*         0x00000000c00224e1        0x3 
 .rodata        0x00000000c00224e4       0x18 core/malloc.32
 *fill*         0x00000000c00224fc        0x4 
 .rodata        0x00000000c0022500      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c0022620       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c0022676        0xa 
 .rodata        0x00000000c0022680      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0022a80       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c0022ac9      0x12c core/computer.32
 *fill*         0x00000000c0022bf5        0x3 
 .rodata.str1.4
                0x00000000c0022bf8       0x8c core/computer.32
 .rodata._ZTV8Computer
                0x00000000c0022c84       0x2c core/computer.32
                0x00000000c0022c84                vtable for Computer
 .rodata.str1.1
                0x00000000c0022cb0       0x2a core/kheap.32
 *fill*         0x00000000c0022cda        0x2 
 .rodata.str1.4
                0x00000000c0022cdc       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0022d0c       0x99 core/main.32
 *fill*         0x00000000c0022da5        0x3 
 .rodata.str1.4
                0x00000000c0022da8       0x1f core/main.32
 .rodata.str1.1
                0x00000000c0022dc7       0xea core/physmgr.32
                                         0xee (size before relaxing)
 *fill*         0x00000000c0022eb1        0x3 
 .rodata.str1.4
                0x00000000c0022eb4       0xc9 core/physmgr.32
 .rodata.str1.1
                0x00000000c0022f7d       0x39 core/pipe.32
 *fill*         0x00000000c0022fb6        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0022fb8       0x1c core/pipe.32
                0x00000000c0022fb8                vtable for Pipe
 .rodata.str1.1
                0x00000000c0022fd4       0x69 core/terminal.32
 *fill*         0x00000000c002303d        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0023040       0x1c core/terminal.32
                0x00000000c0023040                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002305c       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002307e       0x15 core/unixfile.32
 *fill*         0x00000000c0023093        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0023094       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00230df        0x8 core/unixfile.32
 *fill*         0x00000000c00230e7        0x1 
 .rodata.str1.4
                0x00000000c00230e8       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0023108       0x1c core/unixfile.32
                0x00000000c0023108                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0023124       0x1c core/unixfile.32
                0x00000000c0023124                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0023140      0x1b8 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00232f8      0x194 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002348c       0x83 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c002350f       0x11 dbg/kconsole.32
 *fill*         0x00000000c002350f        0x1 
 .rodata        0x00000000c0023510      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0023660       0x25 fs/vfs.32
                                         0x33 (size before relaxing)
 *fill*         0x00000000c0023685        0x3 
 .rodata.str1.4
                0x00000000c0023688       0x54 fs/vfs.32
 .rodata._ZTV10Filesystem
                0x00000000c00236dc       0x68 fs/vfs.32
                0x00000000c00236dc                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0023744       0x1c fs/vfs.32
                0x00000000c0023744                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0023760       0x1c fs/vfs.32
                0x00000000c0023760                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002377c       0x2c hal/bus.32
                0x00000000c002377c                vtable for Bus
 .rodata.str1.1
                0x00000000c00237a8       0x1e hal/clock.32
 *fill*         0x00000000c00237c6        0x2 
 .rodata._ZTV5Clock
                0x00000000c00237c8       0x3c hal/clock.32
                0x00000000c00237c8                vtable for Clock
 *fill*         0x00000000c0023804       0x1c 
 .rodata        0x00000000c0023820       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0023850       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00238a8       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00238a8       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c00238a8       0x2c hal/device.32
                0x00000000c00238a8                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00238d4       0x2c hal/device.32
                0x00000000c00238d4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0023900       0x2c hal/diskctrl.32
                0x00000000c0023900                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002392c       0x38 hal/diskphys.32
                0x00000000c002392c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0023964       0x3e hal/intctrl.32
 *fill*         0x00000000c00239a2        0x2 
 .rodata.str1.4
                0x00000000c00239a4       0x5d hal/intctrl.32
 .rodata        0x00000000c0023a01       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0023a54       0x34 hal/keybrd.32
                0x00000000c0023a54                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0023a88       0x9a hal/logidisk.32
 *fill*         0x00000000c0023b22        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0023b24       0x2c hal/logidisk.32
                0x00000000c0023b24                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0023b50       0x2c hal/mouse.32
                0x00000000c0023b50                vtable for Mouse
 .rodata.str1.1
                0x00000000c0023b7c        0xb hal/partition.32
 *fill*         0x00000000c0023b87        0x1 
 .rodata._ZTV6Serial
                0x00000000c0023b88       0x44 hal/serial.32
                0x00000000c0023b88                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0023bcc       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023bcc        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023bcc       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023bcc       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0023bcc       0x30 hal/timer.32
                0x00000000c0023bcc                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0023bfc       0x10 hal/vcache.32
                0x00000000c0023bfc                vtable for VCache
 .rodata.str1.1
                0x00000000c0023c0c       0x68 hal/video.32
 .rodata._ZTV5Video
                0x00000000c0023c74       0x48 hal/video.32
                0x00000000c0023c74                vtable for Video
 .rodata.str1.4
                0x00000000c0023cbc      0x123 hw/acpi.32
 .rodata.str1.1
                0x00000000c0023ddf      0x268 hw/acpi.32
                                        0x282 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c0024047       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c0024047        0x8 hw/acpi.32
 *fill*         0x00000000c0024047        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0024048       0x2c hw/acpi.32
                0x00000000c0024048                vtable for ACPI
 .rodata.str1.1
                0x00000000c0024074      0x1be hw/cpu.32
                                        0x1c2 (size before relaxing)
 *fill*         0x00000000c0024232        0x2 
 .rodata._ZTV3CPU
                0x00000000c0024234       0x2c hw/cpu.32
                0x00000000c0024234                vtable for CPU
 .rodata.str1.1
                0x00000000c0024260       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c0024271       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c00242ad       0xa0 krnl/panic.32
                                         0xa8 (size before relaxing)
 *fill*         0x00000000c002434d        0x3 
 .rodata.str1.4
                0x00000000c0024350      0x13e krnl/panic.32
 .rodata.str1.1
                0x00000000c002448e       0x2f krnl/powctrl.32
 .rodata.str1.1
                0x00000000c00244bd       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024502       0x54 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c0024556       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c0024582       0x48 sys/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c00245ca      0x247 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c0024811       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0024868      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0024974       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0024974       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0024974       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0024974        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0024974       0xa0 vm86/vm8086.32
 .rodata        0x00000000c0024a14       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0024a44       0x58 vm86/x87em.32
 .rodata        0x00000000c0024a9c       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c0024ad8      0x27f arch/i386/hal.32
                                        0x28a (size before relaxing)
 *fill*         0x00000000c0024d57        0x1 
 .rodata.str1.4
                0x00000000c0024d58       0x99 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0024df1       0xc5 arch/i386/rtc.32
 *fill*         0x00000000c0024eb6        0x2 
 .rodata._ZTV3RTC
                0x00000000c0024eb8       0x3c arch/i386/rtc.32
                0x00000000c0024eb8                vtable for RTC
 .rodata.str1.1
                0x00000000c0024ef4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0024f35        0x3 
 .rodata._ZTV3FAT
                0x00000000c0024f38       0x68 fs/fat/vfslink.32
                0x00000000c0024f38                vtable for FAT
 .rodata.str1.1
                0x00000000c0024fa0       0x1b fs/iso9660/vfslink.32
 *fill*         0x00000000c0024fbb        0x1 
 .rodata._ZTV7ISO9660
                0x00000000c0024fbc       0x68 fs/iso9660/vfslink.32
                0x00000000c0024fbc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0025024       0xc3 hal/sound/sndcard.32
                                         0xdb (size before relaxing)
 *fill*         0x00000000c00250e7        0x1 
 .rodata._ZTV9SoundCard
                0x00000000c00250e8       0x34 hal/sound/sndcard.32
                0x00000000c00250e8                vtable for SoundCard
 .rodata.str1.1
                0x00000000c002511c       0x6e hal/sound/sndport.32
 *fill*         0x00000000c002518a        0x2 
 .rodata.str1.4
                0x00000000c002518c       0x93 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002521f      0x1cd hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00253ec       0x2c hw/bus/pci.32
                0x00000000c00253ec                vtable for PCI
 .rodata.str1.1
                0x00000000c0025418       0xa3 hw/diskctrl/ide.32
 *fill*         0x00000000c00254bb        0x1 
 .rodata._ZTV3IDE
                0x00000000c00254bc       0x2c hw/diskctrl/ide.32
                0x00000000c00254bc                vtable for IDE
 .rodata.str1.4
                0x00000000c00254e8       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata.str1.1
                0x00000000c002550c       0x7b hw/diskctrl/satabus.32
 *fill*         0x00000000c0025587        0x1 
 .rodata._ZTV7SATABus
                0x00000000c0025588       0x2c hw/diskctrl/satabus.32
                0x00000000c0025588                vtable for SATABus
 .rodata.str1.1
                0x00000000c00255b4       0x4b hw/diskphys/ata.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c00255ff        0x1 
 .rodata._ZTV3ATA
                0x00000000c0025600       0x38 hw/diskphys/ata.32
                0x00000000c0025600                vtable for ATA
 .rodata.str1.1
                0x00000000c0025638       0x40 hw/diskphys/atapi.32
                                         0x6f (size before relaxing)
 .rodata._ZTV5ATAPI
                0x00000000c0025678       0x38 hw/diskphys/atapi.32
                0x00000000c0025678                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00256b0      0x202 hw/diskphys/sata.32
 *fill*         0x00000000c00258b2        0x2 
 .rodata._ZTV4SATA
                0x00000000c00258b4       0x38 hw/diskphys/sata.32
                0x00000000c00258b4                vtable for SATA
 .rodata.str1.1
                0x00000000c00258ec      0x132 hw/diskphys/satapi.32
                                        0x13f (size before relaxing)
 *fill*         0x00000000c0025a1e        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0025a20       0x38 hw/diskphys/satapi.32
                0x00000000c0025a20                vtable for SATAPI
 .rodata        0x00000000c0025a58       0x19 hw/intctrl/apic.32
 *fill*         0x00000000c0025a71        0x3 
 .rodata._ZTV6IOAPIC
                0x00000000c0025a74       0x2c hw/intctrl/apic.32
                0x00000000c0025a74                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0025aa0       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0025abb        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0025abc       0x30 hw/timer/apictimer.32
                0x00000000c0025abc                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0025aec       0x1d hw/timer/pit.32
 *fill*         0x00000000c0025b09        0x3 
 .rodata._ZTV3PIT
                0x00000000c0025b0c       0x30 hw/timer/pit.32
                0x00000000c0025b0c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0025b3c      0x525
 *(.data)
 .data          0x00000000c0025b3c        0x0 crti.32
 .data          0x00000000c0025b3c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0025b3c                __dso_handle
 .data          0x00000000c0025b40        0x0 acpica/utclib.32
 .data          0x00000000c0025b40        0x0 core/malloc.32
 .data          0x00000000c0025b40        0x0 libk/string.32
 .data          0x00000000c0025b40        0x0 fs/fat/diskio.32
 .data          0x00000000c0025b40        0x0 fs/fat/ff.32
 .data          0x00000000c0025b40        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0025b40        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0025b40        0x0 compat/inlines.32
 .data          0x00000000c0025b40        0x0 compat/resolve.32
 .data          0x00000000c0025b40        0x0 core/computer.32
 .data          0x00000000c0025b40        0x0 core/gdt.32
 .data          0x00000000c0025b40        0x0 core/idle.32
 .data          0x00000000c0025b40        0x0 core/idt.32
 .data          0x00000000c0025b40        0x4 core/kheap.32
 *fill*         0x00000000c0025b44       0x1c 
 .data          0x00000000c0025b60      0x142 core/main.32
                0x00000000c0025b60                titleScreen
 *fill*         0x00000000c0025ca2        0x2 
 .data          0x00000000c0025ca4        0x4 core/physmgr.32
                0x00000000c0025ca4                Phys::bitmap
 .data          0x00000000c0025ca8        0x0 core/pipe.32
 *fill*         0x00000000c0025ca8       0x18 
 .data          0x00000000c0025cc0       0x60 core/terminal.32
                0x00000000c0025cc0                VgaText::hiddenOut
                0x00000000c0025ce0                ansiToVGAMappings
 .data          0x00000000c0025d20        0x0 core/tss.32
 .data          0x00000000c0025d20        0x4 core/unixfile.32
                0x00000000c0025d20                UnixFile::nextFd
 .data          0x00000000c0025d24       0x15 core/virtmgr.32
                0x00000000c0025d24                Virt::pageAllocPtr
                0x00000000c0025d28                Virt::bitmap
                0x00000000c0025d2c                Virt::swapfileSectorsPerPage
                0x00000000c0025d30                Virt::swapfileLength
                0x00000000c0025d34                Virt::swapfileSector
                0x00000000c0025d38                Virt::swapfileDrive
 *fill*         0x00000000c0025d39        0x3 
 .data          0x00000000c0025d3c        0x4 coreobjs/c++.32
                0x00000000c0025d3c                __stack_chk_guard
 .data          0x00000000c0025d40        0x0 dbg/kconsole.32
 .data          0x00000000c0025d40        0x0 fs/vfs.32
 .data          0x00000000c0025d40        0x0 hal/bus.32
 .data          0x00000000c0025d40        0x0 hal/buzzer.32
 .data          0x00000000c0025d40        0x0 hal/clock.32
 .data          0x00000000c0025d40        0x0 hal/device.32
 .data          0x00000000c0025d40        0x0 hal/diskctrl.32
 .data          0x00000000c0025d40        0x0 hal/diskphys.32
 .data          0x00000000c0025d40        0x0 hal/fpu.32
 .data          0x00000000c0025d40        0x0 hal/intctrl.32
 .data          0x00000000c0025d40        0x0 hal/keybrd.32
 .data          0x00000000c0025d40        0x0 hal/logidisk.32
 .data          0x00000000c0025d40        0x0 hal/mouse.32
 .data          0x00000000c0025d40        0x0 hal/partition.32
 .data          0x00000000c0025d40        0x0 hal/serial.32
 .data          0x00000000c0025d40        0x0 hal/timer.32
 .data          0x00000000c0025d40        0x0 hal/vcache.32
 .data          0x00000000c0025d40        0x0 hal/video.32
 .data          0x00000000c0025d40       0x10 hw/acpi.32
                0x00000000c0025d40                legacyIRQRemaps
 .data          0x00000000c0025d50        0x4 hw/cpu.32
                0x00000000c0025d50                lastCode
 .data          0x00000000c0025d54        0x0 hw/smp.32
 *fill*         0x00000000c0025d54        0xc 
 .data          0x00000000c0025d60       0x4d krnl/env.32
                0x00000000c0025d60                defaultSysEnv
 .data          0x00000000c0025dad        0x0 krnl/panic.32
 .data          0x00000000c0025dad        0x0 krnl/powctrl.32
 .data          0x00000000c0025dad        0x0 reg/registry.32
 .data          0x00000000c0025dad        0x0 sys/sc_eject.32
 .data          0x00000000c0025dad        0x0 sys/sc_exit.32
 .data          0x00000000c0025dad        0x0 sys/sc_getcwd.32
 .data          0x00000000c0025dad        0x0 sys/sc_getpid.32
 .data          0x00000000c0025dad        0x0 sys/sc_getramdata.32
 .data          0x00000000c0025dad        0x0 sys/sc_getvgaptr.32
 .data          0x00000000c0025dad        0x0 sys/sc_loaddll.32
 .data          0x00000000c0025dad        0x0 sys/sc_read.32
 .data          0x00000000c0025dad        0x0 sys/sc_sbrk.32
 .data          0x00000000c0025dad        0x0 sys/sc_setcwd.32
 .data          0x00000000c0025dad        0x0 sys/sc_settime.32
 .data          0x00000000c0025dad        0x0 sys/sc_timezone.32
 .data          0x00000000c0025dad        0x0 sys/sc_write.32
 .data          0x00000000c0025dad        0x0 sys/sc_wsbe.32
 .data          0x00000000c0025dad        0x0 sys/sc_yield.32
 .data          0x00000000c0025dad        0x0 sys/syscalls.32
 .data          0x00000000c0025dad        0x0 thr/elf.32
 *fill*         0x00000000c0025dad        0x3 
 .data          0x00000000c0025db0        0x4 thr/prcssthr.32
                0x00000000c0025db0                Thr::nextPID
 .data          0x00000000c0025db4        0x0 vm86/vm8086.32
 .data          0x00000000c0025db4        0x0 vm86/x87em.32
 *fill*         0x00000000c0025db4        0xc 
 .data          0x00000000c0025dc0      0x2a0 arch/i386/hal.32
                0x00000000c0025dc0                Krnl::exceptionNames
 .data          0x00000000c0026060        0x0 arch/i386/pic.32
 .data          0x00000000c0026060        0x0 arch/i386/rtc.32
 .data          0x00000000c0026060        0x0 fs/fat/vfslink.32
 .data          0x00000000c0026060        0x1 fs/iso9660/vfslink.32
                0x00000000c0026060                recentDriveletter
 .data          0x00000000c0026061        0x0 hal/sound/sndcard.32
 .data          0x00000000c0026061        0x0 hal/sound/sndport.32
 .data          0x00000000c0026061        0x0 hw/bus/isa.32
 .data          0x00000000c0026061        0x0 hw/bus/pci.32
 .data          0x00000000c0026061        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0026061        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0026061        0x0 hw/diskphys/ata.32
 .data          0x00000000c0026061        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0026061        0x0 hw/diskphys/sata.32
 .data          0x00000000c0026061        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0026061        0x0 hw/intctrl/apic.32
 .data          0x00000000c0026061        0x0 hw/timer/apictimer.32
 .data          0x00000000c0026061        0x0 hw/timer/pit.32
 .data          0x00000000c0026061        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0026061        0x0 crtn.32
 .data          0x00000000c0026061        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0026061        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0026061        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0026061        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0026064        0x0
 .got           0x00000000c0026064        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0026064        0x0
 .got.plt       0x00000000c0026064        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0026064        0x0
 .igot.plt      0x00000000c0026064        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0026064        0x0
 .tm_clone_table
                0x00000000c0026064        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0026064        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0026061      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0026061        0x3 
 .eh_frame      0x00000000c0026064        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0026064        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0026064       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00260bc       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00260fc       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0026168       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

.rel.dyn        0x00000000c00261ec        0x0
 .rel.got       0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c00261ec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c00261ec     0x43bc
                0x00000000c00261ec                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c00261ec        0x0 crti.32
 .bss           0x00000000c00261ec       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c002620c        0x4 acpica/utclib.32
 *fill*         0x00000000c0026210       0x10 
 .bss           0x00000000c0026220      0x378 core/malloc.32
 .bss           0x00000000c0026598        0x0 libk/string.32
 .bss           0x00000000c0026598        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0026598        0x8 
 .bss           0x00000000c00265a0       0x88 fs/fat/ff.32
 .bss           0x00000000c0026628        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0026628        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0026628        0x0 compat/inlines.32
 .bss           0x00000000c0026628        0x0 compat/resolve.32
 .bss           0x00000000c0026628        0x6 core/computer.32
                0x00000000c0026628                Krnl::computer
                0x00000000c002662c                Krnl::preemptionOn
                0x00000000c002662d                Krnl::schedulingOn
 *fill*         0x00000000c002662e        0x2 
 .bss           0x00000000c0026630        0x6 core/gdt.32
                0x00000000c0026630                gdtDescr
 .bss           0x00000000c0026636        0x0 core/idle.32
 *fill*         0x00000000c0026636        0x2 
 .bss           0x00000000c0026638        0x6 core/idt.32
                0x00000000c0026638                idtDescr
 .bss           0x00000000c002663e        0x0 core/kheap.32
 *fill*         0x00000000c002663e        0x2 
 .bss           0x00000000c0026640        0x4 core/main.32
                0x00000000c0026640                sysBootSettings
 .bss           0x00000000c0026644       0x29 core/physmgr.32
                0x00000000c0026644                Phys::forbidEvictions
                0x00000000c0026648                Phys::currentPagePointer
                0x00000000c002664c                Phys::highestMem
                0x00000000c0026650                Phys::oldPercent
                0x00000000c0026654                Phys::usedPages
                0x00000000c0026658                Phys::usablePages
                0x00000000c002665c                Phys::dmaUsage
 .bss           0x00000000c002666d        0x0 core/pipe.32
 *fill*         0x00000000c002666d        0x3 
 .bss           0x00000000c0026670        0x9 core/terminal.32
                0x00000000c0026670                terminalCycle
                0x00000000c0026674                activeTerminal
                0x00000000c0026678                VgaText::graphicMode
 *fill*         0x00000000c0026679        0x1 
 .bss           0x00000000c002667a        0x2 core/tss.32
                0x00000000c002667a                doubleFaultSelector
 *fill*         0x00000000c002667c        0x4 
 .bss           0x00000000c0026680       0x84 core/unixfile.32
                0x00000000c0026680                sfileLpt
                0x00000000c00266c0                sfileCom
                0x00000000c00266e4                sfileNul
                0x00000000c00266e8                sfilePnt
                0x00000000c00266ec                sfileAux
                0x00000000c00266f0                sfileCon
                0x00000000c00266f4                initialFilesAdded
                0x00000000c00266f8                unixFileLinkedList
 .bss           0x00000000c0026704       0x14 core/virtmgr.32
                0x00000000c0026704                twswaps
                0x00000000c0026708                swapBalance
                0x00000000c002670c                panicVAS
                0x00000000c0026710                Virt::swapfileBitmap
                0x00000000c0026714                firstVAS
 .bss           0x00000000c0026718        0x0 coreobjs/c++.32
 .bss           0x00000000c0026718        0x0 dbg/kconsole.32
 .bss           0x00000000c0026718        0x4 fs/vfs.32
                0x00000000c0026718                installedFilesystems
 .bss           0x00000000c002671c        0x0 hal/bus.32
 .bss           0x00000000c002671c        0x0 hal/buzzer.32
 .bss           0x00000000c002671c        0x8 hal/clock.32
                0x00000000c002671c                User::dstOn
                0x00000000c002671d                User::timezoneHalfHourOffset
                0x00000000c0026720                User::timezoneHourOffset
 .bss           0x00000000c0026724        0x0 hal/device.32
 .bss           0x00000000c0026724        0x0 hal/diskctrl.32
 .bss           0x00000000c0026724        0x0 hal/diskphys.32
 .bss           0x00000000c0026724        0x0 hal/fpu.32
 *fill*         0x00000000c0026724       0x1c 
 .bss           0x00000000c0026740     0x2000 hal/intctrl.32
                0x00000000c0026740                INT_contexts
                0x00000000c0027740                INT_handlers
 .bss           0x00000000c0028740      0x429 hal/keybrd.32
                0x00000000c0028740                keyboardWaitingTaskList
                0x00000000c0028744                keyboardSetupYet
                0x00000000c0028748                guiKeyboardHandler
                0x00000000c0028760                keystates
 *fill*         0x00000000c0028b69       0x17 
 .bss           0x00000000c0028b80       0x88 hal/logidisk.32
                0x00000000c0028b80                diskAssignments
                0x00000000c0028ba0                disks
 .bss           0x00000000c0028c08        0x4 hal/mouse.32
                0x00000000c0028c08                guiMouseHandler
 .bss           0x00000000c0028c0c        0x0 hal/partition.32
 .bss           0x00000000c0028c0c        0x0 hal/serial.32
 .bss           0x00000000c0028c0c        0x4 hal/timer.32
                0x00000000c0028c0c                milliTenthsSinceBoot
 .bss           0x00000000c0028c10        0x0 hal/vcache.32
 .bss           0x00000000c0028c10        0x4 hal/video.32
                0x00000000c0028c10                screen
 *fill*         0x00000000c0028c14        0xc 
 .bss           0x00000000c0028c20      0x480 hw/acpi.32
                0x00000000c0028c20                systemSleepFunction
                0x00000000c0028c24                systemResetFunction
                0x00000000c0028c28                systemShutdownFunction
                0x00000000c0028c2c                nextACPITable
                0x00000000c0028c40                acpiTables
                0x00000000c0028e40                usingXSDT
                0x00000000c0028e44                MADTpointer
                0x00000000c0028e48                RSDTpointer
                0x00000000c0028e4c                RSDPpointer
                0x00000000c0028e50                nextAPICNMI
                0x00000000c0028e60                apicNMIInfo
                0x00000000c0028ee0                legacyIRQFlags
                0x00000000c0028f00                ioapicDiscoveryNumber
                0x00000000c0028f20                ioapicFoundInMADT
                0x00000000c0028f40                ioapicAddresses
                0x00000000c0028fc0                ioapicGSIBase
                0x00000000c0029040                processorDiscoveryNumber
                0x00000000c0029060                matchingAPICID
                0x00000000c0029080                processorID
 .bss           0x00000000c00290a0       0x10 hw/cpu.32
                0x00000000c00290a0                lastD
                0x00000000c00290a4                lastC
                0x00000000c00290a8                lastB
                0x00000000c00290ac                lastA
 .bss           0x00000000c00290b0        0x1 hw/smp.32
                0x00000000c00290b0                Krnl::bspID
 *fill*         0x00000000c00290b1        0x3 
 .bss           0x00000000c00290b4        0x8 krnl/env.32
                0x00000000c00290b4                Krnl::userEnv
                0x00000000c00290b8                Krnl::systemEnv
 .bss           0x00000000c00290bc        0x9 krnl/panic.32
                0x00000000c00290bc                Krnl::guiProgramFaultHandler
                0x00000000c00290c0                Krnl::guiPanicHandler
                0x00000000c00290c4                Krnl::kernelInPanic
 *fill*         0x00000000c00290c5       0x1b 
 .bss           0x00000000c00290e0       0x48 krnl/powctrl.32
                0x00000000c00290e0                Krnl::powCtrlOnBattery
                0x00000000c0029100                Krnl::currentPowerSettings
                0x00000000c0029124                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0029128        0x0 reg/registry.32
 .bss           0x00000000c0029128        0x0 sys/sc_eject.32
 .bss           0x00000000c0029128        0x0 sys/sc_exit.32
 .bss           0x00000000c0029128        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0029128        0x0 sys/sc_getpid.32
 .bss           0x00000000c0029128        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0029128        0x0 sys/sc_getvgaptr.32
 .bss           0x00000000c0029128        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0029128        0x0 sys/sc_read.32
 .bss           0x00000000c0029128        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0029128        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0029128        0x0 sys/sc_settime.32
 .bss           0x00000000c0029128        0x0 sys/sc_timezone.32
 .bss           0x00000000c0029128        0x0 sys/sc_write.32
 .bss           0x00000000c0029128        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0029128        0x0 sys/sc_yield.32
 *fill*         0x00000000c0029128       0x18 
 .bss           0x00000000c0029140      0x200 sys/syscalls.32
                0x00000000c0029140                systemCallHandlers
 .bss           0x00000000c0029340      0x7a4 thr/elf.32
                0x00000000c0029340                Thr::driverLookupNext
                0x00000000c0029360                Thr::driverLookupLen
                0x00000000c0029560                Thr::driverLookupAddr
                0x00000000c0029760                Thr::driverNameLookup
                0x00000000c0029960                Thr::kernelSymbols
                0x00000000c00299e0                Thr::kernelStringTable
                0x00000000c0029a60                Thr::kernelSymbolTable
                0x00000000c0029ae0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0029ae4        0x4 
 .bss           0x00000000c0029ae8       0x68 thr/prcssthr.32
                0x00000000c0029ae8                cleanerThread
                0x00000000c0029aec                weNeedTheCleanerToNotBlock
                0x00000000c0029af0                retValLockStuff
                0x00000000c0029af4                retValSchedLock
                0x00000000c0029af8                lockStuffLock
                0x00000000c0029afc                schedulerLock
                0x00000000c0029b00                taskSwitchesPostponedFlag
                0x00000000c0029b04                postponeTaskSwitchesCounter
                0x00000000c0029b08                irqDisableCounter
                0x00000000c0029b0c                terminatedTaskList
                0x00000000c0029b18                sleepingTaskList
                0x00000000c0029b24                taskList
                0x00000000c0029b30                kernelProcess
 *fill*         0x00000000c0029b50       0x10 
 .bss           0x00000000c0029b60       0x40 vm86/vm8086.32
                0x00000000c0029b60                Vm::vmRetV
                0x00000000c0029b64                Vm::vmDone
                0x00000000c0029b65                Vm::vmReady
                0x00000000c0029b68                Vm::vm86Thread
                0x00000000c0029b6c                Vm::vmToHostCommsPtr
                0x00000000c0029b80                Vm::vmToHostComms
 .bss           0x00000000c0029ba0       0x48 vm86/x87em.32
                0x00000000c0029ba0                Vm::fpuState
 .bss           0x00000000c0029be8       0x18 arch/i386/hal.32
                0x00000000c0029be8                Hal::apic
                0x00000000c0029bec                fpuOwner
                0x00000000c0029bf0                coproLoadFunc
                0x00000000c0029bf4                coproSaveFunc
                0x00000000c0029bf8                _i386_HAL_tscFunction
                0x00000000c0029bfc                gpFaultIntercept
 .bss           0x00000000c0029c00        0x0 arch/i386/pic.32
 .bss           0x00000000c0029c00        0x2 arch/i386/rtc.32
 *fill*         0x00000000c0029c02       0x1e 
 .bss           0x00000000c0029c20       0xf0 fs/fat/vfslink.32
                0x00000000c0029c20                FAT::fats
                0x00000000c0029c40                FAT::vfsToFatRemaps
                0x00000000c0029cc0                fatToVFSRemaps
 *fill*         0x00000000c0029d10       0x10 
 .bss           0x00000000c0029d20      0x820 fs/iso9660/vfslink.32
                0x00000000c0029d20                recentSector
                0x00000000c0029d40                recentBuffer
 .bss           0x00000000c002a540        0x0 hal/sound/sndcard.32
 .bss           0x00000000c002a540        0x0 hal/sound/sndport.32
 .bss           0x00000000c002a540        0x0 hw/bus/isa.32
 .bss           0x00000000c002a540        0xd hw/bus/pci.32
                0x00000000c002a540                thePCI
 .bss           0x00000000c002a54d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c002a54d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c002a54d        0x3 
 .bss           0x00000000c002a550        0x8 hw/diskphys/ata.32
                0x00000000c002a550                ataSectorsWritten
                0x00000000c002a554                ataSectorsRead
 .bss           0x00000000c002a558        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c002a558        0x0 hw/diskphys/sata.32
 .bss           0x00000000c002a558        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c002a558        0x8 
 .bss           0x00000000c002a560       0x41 hw/intctrl/apic.32
                0x00000000c002a560                noOfIOAPICs
                0x00000000c002a580                ioapics
                0x00000000c002a5a0                IOAPICsSetupYet
 .bss           0x00000000c002a5a1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c002a5a1        0x3 
 .bss           0x00000000c002a5a4        0x4 hw/timer/pit.32
                0x00000000c002a5a4                pitFreq
 .bss           0x00000000c002a5a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c002a5a8        0x0 crtn.32
 .bss           0x00000000c002a5a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c002a5a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c002a5a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c002a5a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c002a5a8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002e964                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
