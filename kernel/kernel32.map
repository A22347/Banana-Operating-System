Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              compat/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              compat/resolve.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
                              hal/sound/sndhw.32 (__addsf3)
D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
                              hal/libresample/src_linear.32 (__adddf3)
D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
                              hal/libresample/samplerate.32 (__truncdfsf2)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .comment       0x0000000000000000       0x12 compat/inlines.32
 .comment       0x0000000000000000       0x12 compat/resolve.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 hw/smp.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_eject.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_getcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_getpid.32
 .comment       0x0000000000000000       0x12 sys/sc_getramdata.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_setcwd.32
 .comment       0x0000000000000000       0x12 sys/sc_settime.32
 .comment       0x0000000000000000       0x12 sys/sc_timezone.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_wsbe.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0x8 vm86/x87em.32
 .comment       0x0000000000000000       0x12 vm86/x87em.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD compat/inlines.32
LOAD compat/resolve.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD hw/smp.32
LOAD krnl/env.32
LOAD krnl/panic.32
LOAD net/ethernet.32
LOAD reg/registry.32
LOAD sys/sc_eject.32
LOAD sys/sc_exit.32
LOAD sys/sc_getcwd.32
LOAD sys/sc_getpid.32
LOAD sys/sc_getramdata.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_setcwd.32
LOAD sys/sc_settime.32
LOAD sys/sc_timezone.32
LOAD sys/sc_write.32
LOAD sys/sc_wsbe.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD vm86/x87em.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x28618
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x4ed D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                manualPCIProbe
                0x00000000c000019b                prepareTramp
                0x00000000c00001b4                voodooXADD
                0x00000000c000027f                doTPAUSE
                0x00000000c0000289                hasLegacyFPU
                0x00000000c00002ae                is486
                0x00000000c00002e4                detectCPUID
                0x00000000c00002fa                goToVM86
                0x00000000c000032a                goToUsermode
                0x00000000c0000354                switchToThreadASMFirstTime
                0x00000000c0000362                switchToThreadASM
                0x00000000c00003ea                asmQuickAcquireLock
                0x00000000c0000408                asmQuickReleaseLock
                0x00000000c0000414                asmAcquireLock
                0x00000000c0000435                asmReleaseLock
                0x00000000c0000448                loadGDT
                0x00000000c0000468                isr0
                0x00000000c0000478                isr1
                0x00000000c0000482                isr2
                0x00000000c000048c                isr3
                0x00000000c0000496                isr4
                0x00000000c00004a0                isr5
                0x00000000c00004aa                isr6
                0x00000000c00004b4                isr7
                0x00000000c00004be                isr8
                0x00000000c00004c6                isr9
                0x00000000c00004d0                isr10
                0x00000000c00004d8                isr11
                0x00000000c00004e0                isr12
                0x00000000c00004e8                isr13
                0x00000000c00004f0                isr14
                0x00000000c00004f8                isr15
                0x00000000c0000502                isr16
                0x00000000c000050c                isr17
                0x00000000c0000516                isr18
                0x00000000c0000520                irq3
                0x00000000c000052a                irq4
                0x00000000c0000534                irq5
                0x00000000c000053e                irq6
                0x00000000c0000548                irq7
                0x00000000c0000552                irq8
                0x00000000c000055c                irq9
                0x00000000c0000566                irq10
                0x00000000c0000570                irq11
                0x00000000c000057a                irq12
                0x00000000c0000584                irq13
                0x00000000c000058e                irq14
                0x00000000c0000598                irq15
                0x00000000c00005a2                irq1
                0x00000000c00005a9                irq2
                0x00000000c00005b0                isr96
                0x00000000c00005b7                irq0
                0x00000000c00005bc                int_common_stub
                0x00000000c00005bc                syscall_common_stub
                0x00000000c00005ed                irq16
                0x00000000c00005f7                irq17
                0x00000000c0000601                irq18
                0x00000000c000060b                irq19
                0x00000000c0000615                irq20
                0x00000000c000061f                irq21
                0x00000000c0000629                irq22
                0x00000000c0000633                irq23
 *fill*         0x00000000c000063d        0x3 
 .text          0x00000000c0000640      0x611 acpica/utclib.32
                0x00000000c0000640                memcmp
                0x00000000c000067c                memmove
                0x00000000c0000744                memcpy
                0x00000000c0000778                memset
                0x00000000c0000794                strlen
                0x00000000c00007ac                strpbrk
                0x00000000c00007e8                strtok
                0x00000000c0000834                strcpy
                0x00000000c0000858                strncpy
                0x00000000c00008c0                strcmp
                0x00000000c0000900                strchr
                0x00000000c0000924                strncmp
                0x00000000c0000974                strcat
                0x00000000c00009a4                strncat
                0x00000000c00009e0                strstr
                0x00000000c0000a28                toupper
                0x00000000c0000a3c                tolower
                0x00000000c0000a50                simple_strtoul
 .text          0x00000000c0000c51      0xfbf core/malloc.32
                0x00000000c0000dbc                dlfree
                0x00000000c0001117                dlmalloc
                0x00000000c0001654                dlrealloc
                0x00000000c0001809                dlmemalign
                0x00000000c000192c                dlcalloc
                0x00000000c00019c6                dlcfree
                0x00000000c00019cb                dlindependent_calloc
                0x00000000c00019f0                dlindependent_comalloc
                0x00000000c0001a07                dlvalloc
                0x00000000c0001a32                dlpvalloc
                0x00000000c0001a68                dlmalloc_trim
                0x00000000c0001a75                dlmalloc_usable_size
                0x00000000c0001aa6                dlmallinfo
                0x00000000c0001b75                dlmalloc_stats
                0x00000000c0001b86                dlmallopt
 .text          0x00000000c0001c10        0x0 libk/string.32
 .text          0x00000000c0001c10       0x51 fs/fat/diskio.32
                0x00000000c0001c10                disk_status
                0x00000000c0001c13                disk_initialize
                0x00000000c0001c16                disk_read
                0x00000000c0001c2c                disk_write
                0x00000000c0001c42                disk_ioctl
 .text          0x00000000c0001c61     0x6833 fs/fat/ff.32
                0x00000000c0004f2f                f_mount
                0x00000000c0004f91                f_open
                0x00000000c00053cd                f_read
                0x00000000c000564d                f_write
                0x00000000c0005907                f_sync
                0x00000000c0005ae3                f_close
                0x00000000c0005b12                f_lseek
                0x00000000c0005fc9                f_opendir
                0x00000000c00060cb                f_closedir
                0x00000000c00060ed                f_readdir
                0x00000000c0006188                f_stat
                0x00000000c0006217                f_getfree
                0x00000000c00063e2                f_truncate
                0x00000000c00064da                f_unlink
                0x00000000c000665d                f_mkdir
                0x00000000c0006889                f_rename
                0x00000000c0006b7c                f_chmod
                0x00000000c0006c5a                f_utime
                0x00000000c0006d38                f_getlabel
                0x00000000c0006f26                f_setlabel
                0x00000000c0007193                f_forward
                0x00000000c0007371                f_mkfs
 .text          0x00000000c0008494       0x2d fs/fat/ffsystem.32
                0x00000000c0008494                ff_memalloc
                0x00000000c00084aa                ff_memfree
 .text          0x00000000c00084c1      0x253 fs/fat/ffunicode.32
                0x00000000c00084c1                ff_uni2oem
                0x00000000c0008551                ff_oem2uni
                0x00000000c00085bd                ff_wtoupper
 .text          0x00000000c0008714      0x8fb hal/libresample/samplerate.32
                0x00000000c0008758                src_delete
                0x00000000c0008794                src_process
                0x00000000c000894a                src_callback_read
                0x00000000c0008ac7                src_set_ratio
                0x00000000c0008b31                src_get_channels
                0x00000000c0008b53                src_reset
                0x00000000c0008b9f                src_new
                0x00000000c0008c2d                src_callback_new
                0x00000000c0008c8f                src_get_name
                0x00000000c0008cc6                src_get_description
                0x00000000c0008cfd                src_get_version
                0x00000000c0008d03                src_is_valid_ratio
                0x00000000c0008d57                src_error
                0x00000000c0008d65                src_strerror
                0x00000000c0008d78                src_simple
                0x00000000c0008dcb                src_short_to_float_array
                0x00000000c0008e30                src_float_to_short_array
                0x00000000c0008eef                src_int_to_float_array
                0x00000000c0008f52                src_float_to_int_array
 .text          0x00000000c000900f      0x8cb hal/libresample/src_linear.32
                0x00000000c0009835                linear_get_name
                0x00000000c0009844                linear_get_description
                0x00000000c0009853                linear_set_converter
 .text          0x00000000c00098da     0x447c hal/libresample/src_sinc.32
                0x00000000c000dc6d                sinc_get_name
                0x00000000c000dc80                sinc_get_description
                0x00000000c000dc93                sinc_set_converter
 .text          0x00000000c000dd56      0x77c hal/libresample/src_zoh.32
                0x00000000c000e42d                zoh_get_name
                0x00000000c000e43c                zoh_get_description
                0x00000000c000e44b                zoh_set_converter
 .text          0x00000000c000e4d2       0x23 compat/inlines.32
                0x00000000c000e4d2                CPU::current()
                0x00000000c000e4df                operator new(unsigned long)
 .text          0x00000000c000e4f5      0x111 compat/resolve.32
                0x00000000c000e4f5                Krnl::resolveCompatibilitySymbol(char*)
 .text          0x00000000c000e606      0xa17 core/computer.32
                0x00000000c000e606                Computer::close(int, int, void*)
                0x00000000c000e64a                Krnl::firstTask()
                0x00000000c000e73a                Computer::Computer()
                0x00000000c000e73a                Computer::Computer()
                0x00000000c000e896                Computer::setBootMessage(char const*)
                0x00000000c000e898                Computer::detectFeatures()
                0x00000000c000eaa2                Computer::displayFeatures()
                0x00000000c000ede8                Computer::rdmsr(unsigned int)
                0x00000000c000ee14                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000ee4c                Computer::nmiEnabled()
                0x00000000c000ee58                Computer::readCMOS(unsigned char)
                0x00000000c000ee72                Computer::enableNMI(bool)
                0x00000000c000ee8a                Computer::open(int, int, void*)
                0x00000000c000ef60                Computer::disableNMI()
                0x00000000c000ef6e                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000ef8c                Computer::handleNMI()
                0x00000000c000eff2                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000f01d        0x1 
 .text          0x00000000c000f01e      0x1b7 core/gdt.32
                0x00000000c000f01e                GDTEntry::setBase(unsigned int)
                0x00000000c000f03a                GDTEntry::setLimit(unsigned int)
                0x00000000c000f058                GDT::GDT()
                0x00000000c000f058                GDT::GDT()
                0x00000000c000f06e                GDT::addEntry(GDTEntry)
                0x00000000c000f0aa                GDT::getNumberOfEntries()
                0x00000000c000f0b2                GDT::flush()
                0x00000000c000f0d4                GDT::setup()
 .text          0x00000000c000f1d5       0x62 core/idle.32
                0x00000000c000f1d5                idleFunction(void*)
 *fill*         0x00000000c000f237        0x1 
 .text          0x00000000c000f238      0x45f core/idt.32
                0x00000000c000f238                IDTEntry::IDTEntry(bool)
                0x00000000c000f238                IDTEntry::IDTEntry(bool)
                0x00000000c000f2a6                IDTEntry::setOffset(unsigned int)
                0x00000000c000f2ba                IDT::IDT()
                0x00000000c000f2ba                IDT::IDT()
                0x00000000c000f2bc                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000f2c4                IDT::addEntry(IDTEntry, int)
                0x00000000c000f2de                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000f316                IDT::flush()
                0x00000000c000f330                IDT::setup()
 .text          0x00000000c000f697      0x203 core/kheap.32
                0x00000000c000f697                sbrk
                0x00000000c000f7a5                mmap
                0x00000000c000f7bb                munmap
                0x00000000c000f7d1                liballoc_lock()
                0x00000000c000f7e2                liballoc_unlock()
                0x00000000c000f7f3                liballoc_alloc(int)
                0x00000000c000f80e                liballoc_free(void*, int)
                0x00000000c000f82c                realloc
                0x00000000c000f840                malloc
                0x00000000c000f850                free
                0x00000000c000f860                rfree
                0x00000000c000f870                calloc
 .text          0x00000000c000f89a      0x485 core/main.32
                0x00000000c000f89a                hwTextMode_loadInData(VgaText*)
                0x00000000c000f8e5                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000f963                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000f9c1                hwTextMode_update(VgaText*)
                0x00000000c000f9c2                hwTextMode_updateCursor(VgaText*)
                0x00000000c000fa13                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000fa59                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000fb06                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000fb88                setupTextMode()
                0x00000000c000fbf8                kernel_main
 .text          0x00000000c000fd1f      0x5c8 core/physmgr.32
                0x00000000c000fd1f                Phys::allocateDMA(unsigned long)
                0x00000000c000fdc2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000fe0a                Phys::setPageState(unsigned long, bool)
                0x00000000c000fe3c                Phys::getPageState(unsigned long)
                0x00000000c000fe58                Phys::freePage(unsigned long)
                0x00000000c000fee2                Phys::allocatePage()
                0x00000000c0010025                Phys::allocateContiguousPages(int)
                0x00000000c001007f                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c00100b7                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c00102e7        0x1 
 .text          0x00000000c00102e8      0x273 core/pipe.32
                0x00000000c00102e8                Pipe::isAtty()
                0x00000000c00102ec                Pipe::~Pipe()
                0x00000000c00102ec                Pipe::~Pipe()
                0x00000000c0010310                Pipe::~Pipe()
                0x00000000c0010338                Pipe::read(unsigned long long, void*, int*)
                0x00000000c001042c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c00104f4                Pipe::Pipe(int)
                0x00000000c00104f4                Pipe::Pipe(int)
 *fill*         0x00000000c001055b        0x1 
 .text          0x00000000c001055c      0xf73 core/terminal.32
                0x00000000c001055c                VgaText::isAtty()
                0x00000000c0010560                VgaText::~VgaText()
                0x00000000c0010560                VgaText::~VgaText()
                0x00000000c0010584                VgaText::~VgaText()
                0x00000000c00105ae                VgaText::read(unsigned long long, void*, int*)
                0x00000000c00105ce                setTerminalScrollLock(bool)
                0x00000000c00105cf                addToTerminalCycle(VgaText*)
                0x00000000c00105fc                installVgaTextImplementation()
                0x00000000c0010611                scrollTerminalScrollLock(int)
                0x00000000c0010612                VgaText::load()
                0x00000000c0010666                VgaText::updateCursor()
                0x00000000c0010680                VgaText::showCursor(bool)
                0x00000000c0010690                VgaText::disableBlink(bool)
                0x00000000c00106ca                VgaText::doANSI_SGR(int)
                0x00000000c0010756                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c001076c                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0010782                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00107a2                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00107b4                VgaText::scrollScreen()
                0x00000000c0010848                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c001085a                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00108ba                VgaText::getCursorX()
                0x00000000c00108c6                VgaText::getCursorY()
                0x00000000c00108d2                VgaText::setCursor(int, int)
                0x00000000c00108f0                VgaText::setCursorX(int)
                0x00000000c001090c                VgaText::setCursorY(int)
                0x00000000c0010928                VgaText::incrementCursor(bool)
                0x00000000c0010990                VgaText::updateRAMUsageDisplay(int)
                0x00000000c00109f4                VgaText::updateDiskUsage()
                0x00000000c0010b5e                VgaText::updateTitle()
                0x00000000c0010ba4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c0010bb4                VgaText::setTitleColour(VgaColour)
                0x00000000c0010bc4                VgaText::setTitle(char*)
                0x00000000c0010bea                VgaText::decrementCursor(bool)
                0x00000000c0010c12                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0010d0e                VgaText::isShowingCursor()
                0x00000000c0010d1a                VgaText::isBlinkDisabled()
                0x00000000c0010d28                VgaText::setCursorHeight(int)
                0x00000000c0010d46                VgaText::getCursorHeight()
                0x00000000c0010d51                setActiveTerminal(VgaText*)
                0x00000000c0010e03                doTerminalCycle()
                0x00000000c0010e20                VgaText::doUpdate()
                0x00000000c0010e32                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0010ff2                VgaText::clearScreen()
                0x00000000c0011056                VgaText::putchar(char)
                0x00000000c0011170                VgaText::puts(char const*)
                0x00000000c0011196                VgaText::putx(unsigned int)
                0x00000000c00111dc                VgaText::VgaText(char const*)
                0x00000000c00111dc                VgaText::VgaText(char const*)
                0x00000000c001136e                VgaText::receiveKey(unsigned char)
                0x00000000c0011456                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00114aa                newTerminal(char*)
 *fill*         0x00000000c00114cf        0x1 
 .text          0x00000000c00114d0      0x1b3 core/tss.32
                0x00000000c00114d0                TSS::TSS()
                0x00000000c00114d0                TSS::TSS()
                0x00000000c00114de                TSS::setESP(unsigned long)
                0x00000000c00114f0                TSS::flush()
                0x00000000c0011510                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0011683        0x1 
 .text          0x00000000c0011684      0x4c2 core/unixfile.32
                0x00000000c0011684                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c00116da                ReservedFilename::isAtty()
                0x00000000c00116f6                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0011754                UnixFile::getFileDescriptor()
                0x00000000c001175c                UnixFile::UnixFile(int)
                0x00000000c001175c                UnixFile::UnixFile(int)
                0x00000000c001190c                ReservedFilename::ReservedFilename(int)
                0x00000000c001190c                ReservedFilename::ReservedFilename(int)
                0x00000000c001193e                UnixFile::~UnixFile()
                0x00000000c001193e                UnixFile::~UnixFile()
                0x00000000c00119d6                UnixFile::~UnixFile()
                0x00000000c00119fe                ReservedFilename::~ReservedFilename()
                0x00000000c00119fe                ReservedFilename::~ReservedFilename()
                0x00000000c0011a22                ReservedFilename::~ReservedFilename()
                0x00000000c0011a49                getFromFileDescriptor(int)
 .text          0x00000000c0011b46     0x1228 core/virtmgr.32
                0x00000000c0011b46                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0011b7b                Virt::getPageState(unsigned long)
                0x00000000c0011b9f                Virt::allocateKernelVirtualPages(int)
                0x00000000c0011cb0                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0011cce                Virt::swapIDToSector(unsigned long)
                0x00000000c0011ce0                Virt::allocateSwapfilePage()
                0x00000000c0011d5e                Virt::virtualMemorySetup()
                0x00000000c0011ddd                Virt::swappingSetup()
                0x00000000c0011e3a                Virt::getAKernelVAS()
                0x00000000c0011e40                Virt::setupPageSwapping(int)
                0x00000000c0011f70                VAS::VAS()
                0x00000000c0011f70                VAS::VAS()
                0x00000000c0011fa0                VAS::VAS(VAS*)
                0x00000000c0011fa0                VAS::VAS(VAS*)
                0x00000000c0011fc4                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0011ff0                VAS::getPageTableEntry(unsigned long)
                0x00000000c001200f                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0012132                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0012156                VAS::virtualToPhysical(unsigned long)
                0x00000000c001216e                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c00121ae                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c00121e0                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c001220a                VAS::~VAS()
                0x00000000c001220a                VAS::~VAS()
                0x00000000c0012376                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0012476                VAS::allocatePages(int, int)
                0x00000000c001264e                VAS::setCPUSpecific(unsigned long)
                0x00000000c001266a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0012730                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c001281e                VAS::VAS(bool)
                0x00000000c001281e                VAS::VAS(bool)
                0x00000000c0012a7a                VAS::evict(unsigned long)
                0x00000000c0012b2a                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c0012bfc                VAS::scanForEviction(int, int)
                0x00000000c0012cb2                mapVASFirstTime
 .text          0x00000000c0012d6e       0x95 coreobjs/c++.32
                0x00000000c0012d6e                __cxa_atexit
                0x00000000c0012d71                __cxa_finalize
                0x00000000c0012d72                __stack_chk_fail
                0x00000000c0012dde                __cxa_pure_virtual
                0x00000000c0012def                operator new[](unsigned long)
                0x00000000c0012df4                operator delete(void*, unsigned long)
                0x00000000c0012df9                operator delete[](void*)
                0x00000000c0012dfe                operator delete[](void*, unsigned long)
 .text          0x00000000c0012e03      0x1ef dbg/kconsole.32
                0x00000000c0012e03                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c0012e64                Dbg::logc(char)
                0x00000000c0012e7b                Dbg::logs(char*)
                0x00000000c0012e98                Dbg::logWriteInt(unsigned int)
                0x00000000c0012eb5                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c0012ed4                Dbg::kprintf(char const*, ...)
 .text          0x00000000c0012ff2      0xb7c fs/vfs.32
                0x00000000c0012ff2                File::read(unsigned long long, void*, int*)
                0x00000000c001304a                File::write(unsigned long long, void*, int*)
                0x00000000c00130a2                Directory::read(unsigned long long, void*, int*)
                0x00000000c00130fa                Directory::write(unsigned long long, void*, int*)
                0x00000000c0013128                File::isAtty()
                0x00000000c001312c                Directory::isAtty()
                0x00000000c0013130                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0013136                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c001313c                File::~File()
                0x00000000c001313c                File::~File()
                0x00000000c0013160                File::~File()
                0x00000000c001318a                Directory::~Directory()
                0x00000000c001318a                Directory::~Directory()
                0x00000000c00131ae                Directory::~Directory()
                0x00000000c00131d8                Filesystem::Filesystem()
                0x00000000c00131d8                Filesystem::Filesystem()
                0x00000000c00131fc                Filesystem::~Filesystem()
                0x00000000c00131fc                Filesystem::~Filesystem()
                0x00000000c001320a                Filesystem::~Filesystem()
                0x00000000c001322e                Fs::getcwd(Process*, char*, int)
                0x00000000c0013258                Fs::initVFS()
                0x00000000c0013282                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c001342c                File::File(char const*, Process*)
                0x00000000c001342c                File::File(char const*, Process*)
                0x00000000c0013490                File::open(FileOpenMode)
                0x00000000c00134ee                File::close()
                0x00000000c001354e                File::seek(unsigned long long)
                0x00000000c00135a4                File::tell(unsigned long long*)
                0x00000000c00135f4                File::rewind()
                0x00000000c0013608                File::unlink()
                0x00000000c0013654                File::rename(char const*)
                0x00000000c00136a2                File::chfatattr(unsigned char, unsigned char)
                0x00000000c00136fe                File::exists()
                0x00000000c001373c                File::stat(unsigned long long*, bool*)
                0x00000000c001379d                Fs::setcwd(Process*, char*)
                0x00000000c00138d8                Directory::Directory(char const*, Process*)
                0x00000000c00138d8                Directory::Directory(char const*, Process*)
                0x00000000c001393c                Directory::open()
                0x00000000c0013998                Directory::close()
                0x00000000c00139f8                Directory::unlink()
                0x00000000c0013a44                Directory::rename(char const*)
                0x00000000c0013a92                Directory::exists()
                0x00000000c0013ad0                Directory::read(dirent*)
                0x00000000c0013b1c                Directory::create()
                0x00000000c0013b68                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0013b6e       0x84 hal/bus.32
                0x00000000c0013b6e                Bus::Bus(char const*)
                0x00000000c0013b6e                Bus::Bus(char const*)
                0x00000000c0013ba4                Bus::~Bus()
                0x00000000c0013ba4                Bus::~Bus()
                0x00000000c0013bc8                Bus::~Bus()
 .text          0x00000000c0013bf2      0x14e hal/buzzer.32
                0x00000000c0013bf2                Buzzer::Buzzer(char const*)
                0x00000000c0013bf2                Buzzer::Buzzer(char const*)
                0x00000000c0013c36                Buzzer::~Buzzer()
                0x00000000c0013c36                Buzzer::~Buzzer()
                0x00000000c0013c5a                Buzzer::~Buzzer()
                0x00000000c0013c84                Buzzer::stop()
                0x00000000c0013c97                beepThread(void*)
                0x00000000c0013cd2                Buzzer::beep(int, int, bool)
 .text          0x00000000c0013d40      0x467 hal/clock.32
                0x00000000c0013d40                User::loadClockSettings(int)
                0x00000000c0013d92                Clock::Clock(char const*)
                0x00000000c0013d92                Clock::Clock(char const*)
                0x00000000c0013dc8                Clock::~Clock()
                0x00000000c0013dc8                Clock::~Clock()
                0x00000000c0013dec                Clock::~Clock()
                0x00000000c0013e16                Clock::timeInSecondsLocal()
                0x00000000c0013e5e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0013eb7                datetimeToSeconds(datetime_t)
                0x00000000c0013fde                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c001403e                secondsToDatetime(unsigned long long)
                0x00000000c0014182                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c00141a7        0x1 
 .text          0x00000000c00141a8      0x4de hal/device.32
                0x00000000c00141a8                Device::hibernate()
                0x00000000c00141aa                Device::wake()
                0x00000000c00141ac                Device::detect()
                0x00000000c00141ae                Device::disableLegacy()
                0x00000000c00141b0                Device::powerSaving(PowerSavingLevel)
                0x00000000c00141b2                DriverlessDevice::close(int, int, void*)
                0x00000000c00141b6                DriverlessDevice::detect()
                0x00000000c00141b8                DriverlessDevice::open(int, int, void*)
                0x00000000c00141cc                Device::~Device()
                0x00000000c00141cc                Device::~Device()
                0x00000000c00141da                Device::~Device()
                0x00000000c0014202                Device::findAndLoadDriver()
                0x00000000c0014204                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c001422a                Device::preOpenACPI(void*, char*, char*)
                0x00000000c001427e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00142bc                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00142fa                Device::addChild(Device*)
                0x00000000c001433e                Device::removeAllChildren()
                0x00000000c0014384                Device::hibernateAll()
                0x00000000c00143b4                Device::wakeAll()
                0x00000000c00143e4                Device::detectAll()
                0x00000000c0014414                Device::disableLegacyAll()
                0x00000000c0014444                Device::loadDriversForAll()
                0x00000000c0014470                Device::closeAll()
                0x00000000c00144a6                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00144dc                Device::setName(char const*)
                0x00000000c00144ea                Device::Device(char const*)
                0x00000000c00144ea                Device::Device(char const*)
                0x00000000c00145e6                Device::getName()
                0x00000000c00145f0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00145f0                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0014618                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c001465c                getDevicesOfType(DeviceType)
 .text          0x00000000c0014686       0x84 hal/diskctrl.32
                0x00000000c0014686                HardDiskController::HardDiskController(char const*)
                0x00000000c0014686                HardDiskController::HardDiskController(char const*)
                0x00000000c00146bc                HardDiskController::~HardDiskController()
                0x00000000c00146bc                HardDiskController::~HardDiskController()
                0x00000000c00146e0                HardDiskController::~HardDiskController()
 .text          0x00000000c001470a       0xf2 hal/diskphys.32
                0x00000000c001470a                PhysicalDisk::eject()
                0x00000000c001471e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c001471e                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0014786                PhysicalDisk::startCache()
                0x00000000c00147ae                PhysicalDisk::~PhysicalDisk()
                0x00000000c00147ae                PhysicalDisk::~PhysicalDisk()
                0x00000000c00147d2                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c00147fc      0x13b hal/fpu.32
                0x00000000c00147fc                FPU::FPU(char const*)
                0x00000000c00147fc                FPU::FPU(char const*)
                0x00000000c0014832                FPU::~FPU()
                0x00000000c0014832                FPU::~FPU()
                0x00000000c0014856                FPU::~FPU()
                0x00000000c0014880                setupFPU()
 *fill*         0x00000000c0014937        0x1 
 .text          0x00000000c0014938     0x13a7 hal/intctrl.32
                0x00000000c0014938                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0014970                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c00149c2                doubleFault(regs*, void*)
                0x00000000c00149dc                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0014a78                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0014b20                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0014ba7                nmiHandler(regs*, void*)
                0x00000000c0014bb5                int_handler
                0x00000000c0014c56                InterruptController::InterruptController(char const*)
                0x00000000c0014c56                InterruptController::InterruptController(char const*)
                0x00000000c0014cfc                InterruptController::~InterruptController()
                0x00000000c0014cfc                InterruptController::~InterruptController()
                0x00000000c0014d20                InterruptController::~InterruptController()
                0x00000000c0014d4a                displayDebugInfo(regs*)
                0x00000000c00151d9                x87EmulHandler(regs*, void*)
                0x00000000c0015208                gpFault(regs*, void*)
                0x00000000c0015241                pgFault(regs*, void*)
                0x00000000c001527e                otherISRHandler(regs*, void*)
                0x00000000c001529d                opcodeFault(regs*, void*)
                0x00000000c00158a3                displayProgramFault(char const*)
                0x00000000c00158cb                setupInterruptController()
                0x00000000c0015c92                InterruptController::convertLegacyIRQNumber(int)
 *fill*         0x00000000c0015cdf        0x1 
 .text          0x00000000c0015ce0      0x6c8 hal/keybrd.32
                0x00000000c0015ce0                startGUI(void*)
                0x00000000c0015d3c                startGUIVESA(void*)
                0x00000000c0015d98                sendKeyToTerminal(unsigned char)
                0x00000000c0015e04                sendKeyboardToken(KeyboardToken)
                0x00000000c0016241                clearInternalKeybuffer(VgaText*)
                0x00000000c0016276                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c001631e                Keyboard::Keyboard(char const*)
                0x00000000c001631e                Keyboard::Keyboard(char const*)
                0x00000000c001635a                Keyboard::~Keyboard()
                0x00000000c001635a                Keyboard::~Keyboard()
                0x00000000c001637e                Keyboard::~Keyboard()
 .text          0x00000000c00163a8      0x414 hal/logidisk.32
                0x00000000c00163a8                LogicalDisk::close(int, int, void*)
                0x00000000c00163ac                LogicalDisk::~LogicalDisk()
                0x00000000c00163ac                LogicalDisk::~LogicalDisk()
                0x00000000c00163d0                LogicalDisk::~LogicalDisk()
                0x00000000c00163fa                LogicalDisk::open(int, int, void*)
                0x00000000c001640e                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0016446                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c001648c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c001648c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0016542                LogicalDisk::assignDriveLetter()
                0x00000000c00165f8                LogicalDisk::mount()
                0x00000000c001666a                LogicalDisk::unmount()
                0x00000000c001667a                LogicalDisk::eject()
                0x00000000c001668e                LogicalDisk::unassignDriveLetter()
                0x00000000c00166e4                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0016750                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c00167bc       0x84 hal/mouse.32
                0x00000000c00167bc                Mouse::Mouse(char const*)
                0x00000000c00167bc                Mouse::Mouse(char const*)
                0x00000000c00167f2                Mouse::~Mouse()
                0x00000000c00167f2                Mouse::~Mouse()
                0x00000000c0016816                Mouse::~Mouse()
 .text          0x00000000c0016840      0x34d hal/partition.32
                0x00000000c0016840                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00168fc                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0016b8d        0x1 
 .text          0x00000000c0016b8e       0x84 hal/serial.32
                0x00000000c0016b8e                Serial::Serial(char const*)
                0x00000000c0016b8e                Serial::Serial(char const*)
                0x00000000c0016bc4                Serial::~Serial()
                0x00000000c0016bc4                Serial::~Serial()
                0x00000000c0016be8                Serial::~Serial()
 .text          0x00000000c0016c12      0x2b8 hal/timer.32
                0x00000000c0016c12                Timer::Timer(char const*)
                0x00000000c0016c12                Timer::Timer(char const*)
                0x00000000c0016c48                Timer::~Timer()
                0x00000000c0016c48                Timer::~Timer()
                0x00000000c0016c6c                Timer::~Timer()
                0x00000000c0016c96                Timer::read()
                0x00000000c0016ca1                timerHandler(unsigned long long)
                0x00000000c0016dd8                setupTimer(int)
 .text          0x00000000c0016eca      0x425 hal/vcache.32
                0x00000000c0016eca                VCache::VCache(PhysicalDisk*)
                0x00000000c0016eca                VCache::VCache(PhysicalDisk*)
                0x00000000c0017032                VCache::invalidateReadBuffer()
                0x00000000c0017042                VCache::writeWriteBuffer()
                0x00000000c001707e                VCache::~VCache()
                0x00000000c001707e                VCache::~VCache()
                0x00000000c00170d2                VCache::~VCache()
                0x00000000c00170fa                VCache::write(unsigned long long, int, void*)
                0x00000000c00171f0                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c00172ef        0x1 
 .text          0x00000000c00172f0      0x4cd hal/video.32
                0x00000000c00172f0                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c001733c                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c00173ac                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c001742a                Video::clearScreen(unsigned int)
                0x00000000c001745e                Video::putpixel(int, int, unsigned int)
                0x00000000c001746c                Video::Video(char const*)
                0x00000000c001746c                Video::Video(char const*)
                0x00000000c00174a2                Video::~Video()
                0x00000000c00174a2                Video::~Video()
                0x00000000c00174c6                Video::~Video()
                0x00000000c00174f0                Video::isMonochrome()
                0x00000000c00174fc                Video::getWidth()
                0x00000000c0017508                Video::getHeight()
                0x00000000c0017514                Video::drawCursor(int, int, unsigned char*, int)
                0x00000000c00175d0                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c0017752                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c00177bd        0x1 
 .text          0x00000000c00177be      0xf64 hw/acpi.32
                0x00000000c00177be                ACPI::close(int, int, void*)
                0x00000000c0017873                findRSDP()
                0x00000000c00178fd                loadACPITables(unsigned char*)
                0x00000000c0017b24                findRSDT(unsigned char*)
                0x00000000c0017c42                findDataTable(unsigned char*, char*)
                0x00000000c0017cde                scanMADT()
                0x00000000c0018164                ACPI::ACPI()
                0x00000000c0018164                ACPI::ACPI()
                0x00000000c00181ce                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c00182b0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0018376                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c001837c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c00183c4                ACPI::open(int, int, void*)
                0x00000000c001870a                ACPI::sleep()
 .text          0x00000000c0018722     0x1715 hw/cpu.32
                0x00000000c0018722                CPU::close(int, int, void*)
                0x00000000c0018726                CPU::lookupAMDName(unsigned char, unsigned char)
                0x00000000c00188ba                CPU::lookupIntelName(unsigned char, unsigned char)
                0x00000000c0018b68                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c0018b84                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c0018b9c                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c0018c10                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0018c94                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c0018cc2                CPU::cpuidCheckECX(unsigned int)
                0x00000000c0018cf0                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0018d1e                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c0018d4c                CPU::CPU()
                0x00000000c0018d4c                CPU::CPU()
                0x00000000c0018dda                CPU::displayFeatures()
                0x00000000c0019056                CPU::detectFeatures()
                0x00000000c0019a46                CPU::setupSMEP()
                0x00000000c0019a52                CPU::setupUMIP()
                0x00000000c0019a5c                CPU::setupTSC()
                0x00000000c0019a66                CPU::setupLargePages()
                0x00000000c0019a70                CPU::setupPAT()
                0x00000000c0019aac                CPU::setupMTRR()
                0x00000000c0019aae                CPU::setupGlobalPages()
                0x00000000c0019ab8                CPU::allowUsermodeDataAccess()
                0x00000000c0019aca                CPU::prohibitUsermodeDataAccess()
                0x00000000c0019adc                CPU::setupSMAP()
                0x00000000c0019aea                CPU::setupFeatures()
                0x00000000c0019b6a                CPU::open(int, int, void*)
                0x00000000c0019c3c                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c0019e37        0x0 hw/ports.32
 .text          0x00000000c0019e37      0x16a hw/smp.32
                0x00000000c0019e37                Krnl::smpEntry()
                0x00000000c0019e39                Krnl::startCPU(int)
                0x00000000c0019f82                Krnl::startCPUs()
 *fill*         0x00000000c0019fa1        0x1 
 .text          0x00000000c0019fa2      0x5d3 krnl/env.32
                0x00000000c0019fa2                EnvVarContainer::getEnv(char const*)
                0x00000000c0019fe0                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c001a0ac                EnvVarContainer::deleteEnv(char const*)
                0x00000000c001a0ae                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c001a2a4                EnvVarContainer::__loadSystem()
                0x00000000c001a2be                EnvVarContainer::__loadUser()
                0x00000000c001a2c0                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001a2c0                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001a2e2                EnvVarContainer::~EnvVarContainer()
                0x00000000c001a2e2                EnvVarContainer::~EnvVarContainer()
                0x00000000c001a312                Krnl::getEnv(Process*, char const*)
                0x00000000c001a377                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c001a391                Krnl::setEnvUser(char const*, char const*)
                0x00000000c001a3b0                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c001a3c3                Krnl::deleteEnvSystem(char const*)
                0x00000000c001a3c4                Krnl::deleteEnvUser(char const*)
                0x00000000c001a3c5                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c001a3c6                Krnl::newProcessEnv(Process*)
                0x00000000c001a3e8                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c001a43c                Krnl::loadSystemEnv()
                0x00000000c001a46a                Krnl::loadUserEnv()
                0x00000000c001a490                Krnl::flushEnv()
                0x00000000c001a491                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c001a4b1                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c001a575      0x396 krnl/panic.32
                0x00000000c001a575                Krnl::panic(char const*)
 .text          0x00000000c001a90b      0x3b6 net/ethernet.32
                0x00000000c001a90b                Net::switchEndian16(unsigned short)
                0x00000000c001a92c                Net::switchEndian32(unsigned int)
                0x00000000c001a95b                Net::crc32Calc(unsigned char*, int)
                0x00000000c001a9ec                Net::wrapEthernetFrame(Net::UnwrappedEthernetFrame, unsigned char*)
                0x00000000c001ab28                Net::unwrapEthernetFrame(unsigned char*, int)
 .text          0x00000000c001acc1      0x513 reg/registry.32
                0x00000000c001acc1                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c001ae19                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001af6e                Reg::getLine(char*, char*, char*)
                0x00000000c001afa5                Reg::readInt(char*, char*, int*)
                0x00000000c001b090                Reg::readString(char*, char*, char*, int)
                0x00000000c001b111                Reg::readBool(char*, char*, bool*)
                0x00000000c001b136                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c001b162                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001b18e                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001b1d4       0x36 sys/sc_eject.32
                0x00000000c001b1d4                Sys::eject(regs*)
 .text          0x00000000c001b20a       0x18 sys/sc_exit.32
                0x00000000c001b20a                Sys::exit(regs*)
 .text          0x00000000c001b222       0x1f sys/sc_getcwd.32
                0x00000000c001b222                Sys::getCwd(regs*)
 .text          0x00000000c001b241        0xc sys/sc_getpid.32
                0x00000000c001b241                Sys::getPID(regs*)
 .text          0x00000000c001b24d       0x17 sys/sc_getramdata.32
                0x00000000c001b24d                Sys::getRAMData(regs*)
 .text          0x00000000c001b264       0xa8 sys/sc_loaddll.32
                0x00000000c001b264                Sys::loadDLL(regs*)
 .text          0x00000000c001b30c       0x68 sys/sc_read.32
                0x00000000c001b30c                Sys::read(regs*)
 .text          0x00000000c001b374       0x9f sys/sc_sbrk.32
                0x00000000c001b374                Sys::sbrk(regs*)
 .text          0x00000000c001b413       0x1c sys/sc_setcwd.32
                0x00000000c001b413                Sys::setCwd(regs*)
 .text          0x00000000c001b42f      0x128 sys/sc_settime.32
                0x00000000c001b42f                Sys::setTime(regs*)
 .text          0x00000000c001b557       0x4a sys/sc_timezone.32
                0x00000000c001b557                Sys::timezone(regs*)
 .text          0x00000000c001b5a1       0x68 sys/sc_write.32
                0x00000000c001b5a1                Sys::write(regs*)
 .text          0x00000000c001b609       0x62 sys/sc_wsbe.32
                0x00000000c001b609                Sys::wsbe(regs*)
 .text          0x00000000c001b66b       0x3b sys/sc_yield.32
                0x00000000c001b66b                Sys::yield(regs*)
 .text          0x00000000c001b6a6     0x10e5 sys/syscalls.32
                0x00000000c001b6a6                sysCallSeekDir(regs*)
                0x00000000c001b6ab                sysCallTellDir(regs*)
                0x00000000c001b6b0                sysCallVerify(regs*)
                0x00000000c001b6ba                sysFormatDisk(regs*)
                0x00000000c001b724                sysSetDiskVolumeLabel(regs*)
                0x00000000c001b76a                sysGetDiskVolumeLabel(regs*)
                0x00000000c001b7bb                sysShutdown(regs*)
                0x00000000c001b819                sysCallRealpath(regs*)
                0x00000000c001b85c                sysCallGetArgc(regs*)
                0x00000000c001b88a                sysCallReadDir(regs*)
                0x00000000c001b918                sysCallIsATTY(regs*)
                0x00000000c001b972                sysCallSeek(regs*)
                0x00000000c001b9db                sysCallTell(regs*)
                0x00000000c001ba58                sysCallSize(regs*)
                0x00000000c001badb                sysCallSizeFromFilename(regs*)
                0x00000000c001bb9b                sysCallClose(regs*)
                0x00000000c001bc23                sysCallOpenDir(regs*)
                0x00000000c001bc98                sysCallCloseDir(regs*)
                0x00000000c001bcfe                sysCallMakeDir(regs*)
                0x00000000c001bd6e                sysCallWait(regs*)
                0x00000000c001bd88                sysCallNotImpl(regs*)
                0x00000000c001bda3                sysPanic(regs*)
                0x00000000c001bdc9                sysCallRmdir(regs*)
                0x00000000c001be2d                sysCallUnlink(regs*)
                0x00000000c001be91                sysCallGetArgv(regs*)
                0x00000000c001bedd                sysCallTTYName(regs*)
                0x00000000c001bf60                sysCallUSleep(regs*)
                0x00000000c001bf87                sysCallSpawn(regs*)
                0x00000000c001bfdf                sysCallGetEnv(regs*)
                0x00000000c001c117                sysAppSettings(regs*)
                0x00000000c001c236                sysSetFatAttrib(regs*)
                0x00000000c001c2a8                sysPipe(regs*)
                0x00000000c001c2ed                sysGetUnixTime(regs*)
                0x00000000c001c301                string_ends_with(char const*, char const*)
                0x00000000c001c349                sysCallOpen(regs*)
                0x00000000c001c55e                Sys::loadSyscalls()
                0x00000000c001c749                Sys::systemCall(regs*, void*)
 .text          0x00000000c001c78b     0x11d4 thr/elf.32
                0x00000000c001c78b                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001ca1d                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001cc33                Thr::runtimeReferenceHelper()
                0x00000000c001cc46                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001cc95                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001cf53                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001d66f                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001d6a1                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001d6d8                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001d6f2                Thr::loadDLL(char const*, bool)
                0x00000000c001d926                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001d95f        0x1 
 .text          0x00000000c001d960     0x1056 thr/prcssthr.32
                0x00000000c001d960                changeTSS
                0x00000000c001d990                Process::addArgs(char**)
                0x00000000c001d9ea                Process::Process(char const*, Process*, char**)
                0x00000000c001d9ea                Process::Process(char const*, Process*, char**)
                0x00000000c001dbce                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001dbce                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001dd7d                disableIRQs()
                0x00000000c001dd85                getIRQNestingLevel()
                0x00000000c001dd8b                enableIRQs()
                0x00000000c001dd9a                lockScheduler()
                0x00000000c001dd9c                unlockScheduler()
                0x00000000c001dd9e                userModeEntryPoint(void*)
                0x00000000c001ddc1                lockStuff()
                0x00000000c001ddcd                taskStartupFunction
                0x00000000c001ddd6                updateTimeUsed()
                0x00000000c001de3b                switchToThread(ThreadControlBlock*)
                0x00000000c001de8c                Semaphore::Semaphore(int)
                0x00000000c001de8c                Semaphore::Semaphore(int)
                0x00000000c001deba                Mutex::Mutex()
                0x00000000c001deba                Mutex::Mutex()
                0x00000000c001decc                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001dfb0                Process::createUserThread()
                0x00000000c001dfcc                setupMultitasking(void (*)())
                0x00000000c001e0d6                schedule()
                0x00000000c001e15b                unlockStuff()
                0x00000000c001e190                Semaphore::tryAcquire()
                0x00000000c001e1be                Semaphore::assertLocked(char const*)
                0x00000000c001e1ee                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001e230                blockTask(TaskState)
                0x00000000c001e251                waitTask(int, int*, int)
                0x00000000c001e293                nanoSleepUntil(unsigned long long)
                0x00000000c001e2ea                nanoSleep(unsigned long long)
                0x00000000c001e2ff                sleep(unsigned long long)
                0x00000000c001e31c                Semaphore::acquire()
                0x00000000c001e384                taskReturned
                0x00000000c001e3b2                unblockTask(ThreadControlBlock*)
                0x00000000c001e461                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001e72a                cleanerTaskFunction(void*)
                0x00000000c001e7dd                terminateTask(int)
                0x00000000c001e8bd                Thr::terminateFromIRQ(int)
                0x00000000c001e8ca                Semaphore::release()
 .text          0x00000000c001e9b6      0xc26 vm86/vm8086.32
                0x00000000c001e9b6                Vm::inbv(unsigned short)
                0x00000000c001e9c9                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001ea1c                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001ea2c                Vm::getSegment(unsigned int)
                0x00000000c001ea34                Vm::getOffset(unsigned int)
                0x00000000c001ea39                Vm::mainloop2()
                0x00000000c001ea74                Vm::mainVm8086Loop(void*)
                0x00000000c001ea81                Vm::mainloop3(unsigned long)
                0x00000000c001eaab                Vm::initialise8086()
                0x00000000c001eaee                Vm::finish8086()
                0x00000000c001eb33                Vm::getOutput8086(unsigned char*)
                0x00000000c001eb5d                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001ecad                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001ed37                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001ed48                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c001ed5a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001ed6b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001ed80                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001ed96                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001edab                Vm::faultHandler(regs*)
 .text          0x00000000c001f5dc      0xefd vm86/x87em.32
                0x00000000c001f5dc                Vm::fpuInternalTo32(unsigned long long)
                0x00000000c001f637                Vm::fpuInternalTo64(unsigned long long)
                0x00000000c001f640                Vm::fpu32ToInternal(unsigned int)
                0x00000000c001f685                Vm::fpu64ToInternal(unsigned long long)
                0x00000000c001f68e                Vm::fpuFloatToLong(unsigned long long)
                0x00000000c001f6e9                Vm::fpuULongToFloat(unsigned long long)
                0x00000000c001f71f                Vm::fpuLongToFloat(long long)
                0x00000000c001f775                Vm::fpuGet0()
                0x00000000c001f77a                Vm::fpuGet1()
                0x00000000c001f782                Vm::fpuGetPi()
                0x00000000c001f78a                Vm::fpuGetLog2E()
                0x00000000c001f7a2                Vm::fpuGetLogE2()
                0x00000000c001f7ba                Vm::fpuGetLog210()
                0x00000000c001f7d2                Vm::fpuGetLog102()
                0x00000000c001f7ea                Vm::fpuIsSecondLarger(unsigned long long, unsigned long long)
                0x00000000c001f7fe                Vm::fpuAreEqual(unsigned long long, unsigned long long)
                0x00000000c001f814                Vm::fpuUnorderedCompare(unsigned long long, unsigned long long)
                0x00000000c001f867                Vm::fpuAdd(unsigned long long, unsigned long long)
                0x00000000c001f878                Vm::fpuAbs(unsigned long long)
                0x00000000c001f881                Vm::fpuChs(unsigned long long)
                0x00000000c001f891                Vm::fpuSub(unsigned long long, unsigned long long)
                0x00000000c001f8a0                Vm::fpuMultiply(unsigned long long, unsigned long long)
                0x00000000c001f8bf                Vm::fpuDivide(unsigned long long, unsigned long long)
                0x00000000c001f8db                Vm::fpuSquare(unsigned long long)
                0x00000000c001f8f1                Vm::fpuGetReg(int)
                0x00000000c001f934                Vm::fpuSetReg(int, unsigned long long)
                0x00000000c001f97f                Vm::fpuPush(unsigned long long)
                0x00000000c001f9dc                Vm::fpuPop()
                0x00000000c001fa2e                Vm::x87Handler(regs*)
 *fill*         0x00000000c00204d9        0x1 
 .text          0x00000000c00204da     0x10ed fs/fat/vfslink.32
                0x00000000c00204da                FAT::getName()
                0x00000000c00204e0                FAT::tell(void*, unsigned long long*)
                0x00000000c0020514                FAT::stat(void*, unsigned long long*)
                0x00000000c0020548                FAT::~FAT()
                0x00000000c0020548                FAT::~FAT()
                0x00000000c002056c                FAT::~FAT()
                0x00000000c0020594                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0020632                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00206ec                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00208d0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0020ad6                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0020bdc                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0020c36                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0020c90                FAT::close(void*)
                0x00000000c0020cdc                FAT::closeDir(void*)
                0x00000000c0020d28                FAT::seek(void*, unsigned long long)
                0x00000000c0020d7c                fatWrapperReadDisk
                0x00000000c0020dc3                fatWrapperWriteDisk
                0x00000000c0020e0a                fatWrapperIoctl
                0x00000000c0020f0e                FAT::FAT()
                0x00000000c0020f0e                FAT::FAT()
                0x00000000c0020f60                FAT::fixFilepath(char*)
                0x00000000c0020f98                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00210c0                FAT::openDir(char const*, void**)
                0x00000000c0021166                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0021250                FAT::unlink(char const*)
                0x00000000c00212ca                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c002141e                FAT::rename(char const*, char const*)
                0x00000000c00214e2                FAT::mkdir(char const*)
                0x00000000c002155c                FAT::exists(char const*)
 *fill*         0x00000000c00215c7        0x1 
 .text          0x00000000c00215c8      0xbc1 fs/iso9660/vfslink.32
                0x00000000c00215c8                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c00215ce                ISO9660::seek(void*, unsigned long long)
                0x00000000c00215fe                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0021622                ISO9660::getName()
                0x00000000c0021628                ISO9660::stat(void*, unsigned long long*)
                0x00000000c002164c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0021652                ISO9660::unlink(char const*)
                0x00000000c0021658                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c002165e                ISO9660::rename(char const*, char const*)
                0x00000000c0021664                ISO9660::mkdir(char const*)
                0x00000000c002166a                ISO9660::close(void*)
                0x00000000c002168c                ISO9660::closeDir(void*)
                0x00000000c00216ae                ISO9660::~ISO9660()
                0x00000000c00216ae                ISO9660::~ISO9660()
                0x00000000c00216d2                ISO9660::~ISO9660()
                0x00000000c00216f9                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c002173b                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c00217a2                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c00217f2                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c00219f2                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c0021c7f                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c0021cd4                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c0021ea7                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c0021f36                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c0021ff6                ISO9660::exists(char const*)
                0x00000000c002201a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c00220ae                ISO9660::openDir(char const*, void**)
                0x00000000c0022166                ISO9660::ISO9660()
                0x00000000c0022166                ISO9660::ISO9660()
 *fill*         0x00000000c0022189        0x1 
 .text          0x00000000c002218a      0x326 hal/sound/sndchannel.32
                0x00000000c002218a                SoundChannel::~SoundChannel()
                0x00000000c002218a                SoundChannel::~SoundChannel()
                0x00000000c00221a6                SoundChannel::setSpeed(float)
                0x00000000c00221b2                SoundChannel::getSpeed()
                0x00000000c00221ba                SoundChannel::setVolume(int)
                0x00000000c00221d6                SoundChannel::getVolume()
                0x00000000c00221de                SoundChannel::pause()
                0x00000000c00221e8                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c00221e8                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c002233e                SoundChannel::play()
                0x00000000c0022348                SoundChannel::paused()
                0x00000000c0022350                SoundChannel::getSampleRate()
                0x00000000c0022358                SoundChannel::getBits()
                0x00000000c0022360                SoundChannel::getBufferUsed()
                0x00000000c0022368                SoundChannel::getBufferSize()
                0x00000000c0022370                SoundChannel::unbuffer(float*, int, int)
                0x00000000c0022410                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c00224b0      0x3d5 hal/sound/sndhw.32
                0x00000000c00224b0                SoundDevice::SoundDevice(char const*)
                0x00000000c00224b0                SoundDevice::SoundDevice(char const*)
                0x00000000c002251c                SoundDevice::~SoundDevice()
                0x00000000c002251c                SoundDevice::~SoundDevice()
                0x00000000c0022596                SoundDevice::~SoundDevice()
                0x00000000c00225c0                SoundDevice::getFreeChannelNum()
                0x00000000c00225da                SoundDevice::addChannel(SoundChannel*)
                0x00000000c002264a                SoundDevice::removeChannel(int)
                0x00000000c002267c                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c0022764                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c0022885        0x0 hw/bus/isa.32
 *fill*         0x00000000c0022885        0x1 
 .text          0x00000000c0022886      0x6c3 hw/bus/pci.32
                0x00000000c0022886                PCI::open(int, int, void*)
                0x00000000c002289a                PCI::close(int, int, void*)
                0x00000000c002289e                PCI::PCI()
                0x00000000c002289e                PCI::PCI()
                0x00000000c002291e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0022966                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c0022988                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c00229ac                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c00229f0                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a14                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a36                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a58                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c0022a7c                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c0022adc                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c0022b48                PCI::checkBus(unsigned char)
                0x00000000c0022b6c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c0022cde                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c0022e8a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c0022ef6                PCI::detect()
 *fill*         0x00000000c0022f49        0x1 
 .text          0x00000000c0022f4a      0xc70 hw/diskctrl/ide.32
                0x00000000c0022f4a                IDE::close(int, int, void*)
                0x00000000c0022f4e                IDE::IDE()
                0x00000000c0022f4e                IDE::IDE()
                0x00000000c0022f82                IDE::prepareInterrupt(unsigned char)
                0x00000000c0022f94                selectDrive(unsigned char, unsigned char)
                0x00000000c0022f96                IDE::getBase(unsigned char)
                0x00000000c0022fa8                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c0023068                IDE::read(unsigned char, unsigned char)
                0x00000000c0023116                IDE::waitInterrupt(unsigned char)
                0x00000000c002317c                ideChannel0IRQHandler(regs*, void*)
                0x00000000c0023198                ideChannel1IRQHandler(regs*, void*)
                0x00000000c00231b4                IDE::enableIRQs(unsigned char, bool)
                0x00000000c00231fa                IDE::open(int, int, void*)
                0x00000000c002360a                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c00236d6                IDE::detect()
                0x00000000c00239be                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c0023b54                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c0023bba      0x390 hw/diskctrl/satabus.32
                0x00000000c0023bba                SATABus::close(int, int, void*)
                0x00000000c0023bbe                SATABus::detect()
                0x00000000c0023bc0                SATABus::SATABus()
                0x00000000c0023bc0                SATABus::SATABus()
                0x00000000c0023c6c                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023cb4                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023cfc                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023d1c                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c0023d46                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c0023e4c                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c0023f2a                SATABus::open(int, int, void*)
 .text          0x00000000c0023f4a      0x63c hw/diskphys/ata.32
                0x00000000c0023f4a                ATA::close(int, int, void*)
                0x00000000c0023f6e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c0023f70                ATA::ATA()
                0x00000000c0023f70                ATA::ATA()
                0x00000000c0023f9e                ATA::flush(bool)
                0x00000000c0023fe8                ATA::readyForCommand()
                0x00000000c0024038                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c00243c0                ATA::read(unsigned long long, int, void*)
                0x00000000c0024428                ATA::write(unsigned long long, int, void*)
                0x00000000c0024490                ATA::detectCHS()
                0x00000000c00244ba                ATA::open(int, int, void*)
 .text          0x00000000c0024586      0x5bd hw/diskphys/atapi.32
                0x00000000c0024586                ATAPI::write(unsigned long long, int, void*)
                0x00000000c002458c                ATAPI::close(int, int, void*)
                0x00000000c00245b0                ATAPI::ATAPI()
                0x00000000c00245b0                ATAPI::ATAPI()
                0x00000000c00245de                ATAPI::readyForCommand()
                0x00000000c002462e                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c00248ee                ATAPI::diskRemoved()
                0x00000000c002490a                ATAPI::eject()
                0x00000000c0024952                ATAPI::diskInserted()
                0x00000000c0024980                ATAPI::detectMedia()
                0x00000000c0024a3c                ATAPI::open(int, int, void*)
                0x00000000c0024ac4                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c0024b43        0x1 
 .text          0x00000000c0024b44      0x455 hw/diskphys/sata.32
                0x00000000c0024b44                SATA::close(int, int, void*)
                0x00000000c0024b68                SATA::powerSaving(PowerSavingLevel)
                0x00000000c0024b6a                SATA::open(int, int, void*)
                0x00000000c0024c18                SATA::SATA()
                0x00000000c0024c18                SATA::SATA()
                0x00000000c0024c46                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c0024eac                SATA::read(unsigned long long, int, void*)
                0x00000000c0024f14                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c0024f99        0x1 
 .text          0x00000000c0024f9a      0x500 hw/diskphys/satapi.32
                0x00000000c0024f9a                SATAPI::write(unsigned long long, int, void*)
                0x00000000c0024fa0                SATAPI::close(int, int, void*)
                0x00000000c0024fc4                SATAPI::SATAPI()
                0x00000000c0024fc4                SATAPI::SATAPI()
                0x00000000c0024ff2                SATAPI::diskRemoved()
                0x00000000c002500e                SATAPI::diskInserted()
                0x00000000c002503c                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c0025240                SATAPI::eject()
                0x00000000c0025288                SATAPI::detectMedia()
                0x00000000c002534a                SATAPI::open(int, int, void*)
                0x00000000c00253f8                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c002549a       0x8e hw/fpu/avx.32
                0x00000000c002549a                AVX::open(int, int, void*)
                0x00000000c00254ac                AVX::close(int, int, void*)
                0x00000000c00254be                AVX::available()
                0x00000000c00254d0                AVX::save(void*)
                0x00000000c00254e8                AVX::load(void*)
                0x00000000c0025500                AVX::AVX()
                0x00000000c0025500                AVX::AVX()
 .text          0x00000000c0025528       0x90 hw/fpu/mmx.32
                0x00000000c0025528                MMX::available()
                0x00000000c002553c                MMX::open(int, int, void*)
                0x00000000c002554e                MMX::close(int, int, void*)
                0x00000000c0025560                MMX::save(void*)
                0x00000000c0025578                MMX::load(void*)
                0x00000000c0025590                MMX::MMX()
                0x00000000c0025590                MMX::MMX()
 .text          0x00000000c00255b8       0x96 hw/fpu/sse.32
                0x00000000c00255b8                SSE::open(int, int, void*)
                0x00000000c00255ca                SSE::close(int, int, void*)
                0x00000000c00255dc                SSE::available()
                0x00000000c00255f6                SSE::save(void*)
                0x00000000c002560e                SSE::load(void*)
                0x00000000c0025626                SSE::SSE()
                0x00000000c0025626                SSE::SSE()
 .text          0x00000000c002564e       0x8e hw/fpu/x87.32
                0x00000000c002564e                x87::open(int, int, void*)
                0x00000000c0025660                x87::close(int, int, void*)
                0x00000000c0025672                x87::available()
                0x00000000c0025684                x87::save(void*)
                0x00000000c002569c                x87::load(void*)
                0x00000000c00256b4                x87::x87()
                0x00000000c00256b4                x87::x87()
 .text          0x00000000c00256dc      0x71e hw/intctrl/apic.32
                0x00000000c00256dc                APIC::disable()
                0x00000000c00256de                APIC::close(int, int, void*)
                0x00000000c0025700                IOAPIC::close(int, int, void*)
                0x00000000c0025706                APIC::io_wait()
                0x00000000c002570c                APIC::getBase()
                0x00000000c002574e                APIC::eoi(unsigned char)
                0x00000000c002577c                APIC::open(int, int, void*)
                0x00000000c00258ca                IOAPIC::IOAPIC()
                0x00000000c00258ca                IOAPIC::IOAPIC()
                0x00000000c00258f2                APIC::APIC()
                0x00000000c00258f2                APIC::APIC()
                0x00000000c00259ce                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c0025a00                IOAPIC::read(int)
                0x00000000c0025a28                IOAPIC::open(int, int, void*)
                0x00000000c0025b1e                IOAPIC::write(int, int)
                0x00000000c0025b4a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
                0x00000000c0025c44                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 .text          0x00000000c0025dfa      0x3d3 hw/intctrl/pic.32
                0x00000000c0025dfa                PIC::disable()
                0x00000000c0025e28                PIC::close(int, int, void*)
                0x00000000c0025e4a                PIC::PIC()
                0x00000000c0025e4a                PIC::PIC()
                0x00000000c0025f20                PIC::ioWait()
                0x00000000c0025f26                PIC::getIRQReg(int)
                0x00000000c0025f90                PIC::eoi(unsigned char)
                0x00000000c0026022                PIC::remap()
                0x00000000c002618e                PIC::open(int, int, void*)
 *fill*         0x00000000c00261cd        0x1 
 .text          0x00000000c00261ce      0x25e hw/timer/apictimer.32
                0x00000000c00261ce                APICTimer::close(int, int, void*)
                0x00000000c00261d4                apicTimerHandler(regs*, void*)
                0x00000000c0026202                APICTimer::write(int)
                0x00000000c0026306                APICTimer::open(int, int, void*)
                0x00000000c0026404                APICTimer::APICTimer()
                0x00000000c0026404                APICTimer::APICTimer()
 .text          0x00000000c002642c      0x1a7 hw/timer/pit.32
                0x00000000c002642c                PIT::write(int)
                0x00000000c00264aa                pitHandler(regs*, void*)
                0x00000000c00264d6                PIT::open(int, int, void*)
                0x00000000c0026524                PIT::close(int, int, void*)
                0x00000000c0026554                PIT::PIT()
                0x00000000c0026554                PIT::PIT()
 *fill*         0x00000000c00265d3        0xd 
 .text          0x00000000c00265e0       0x1e hw/fpu/x86/avx.32
                0x00000000c00265e0                avxDetect
                0x00000000c00265e6                avxSave
                0x00000000c00265e7                avxLoad
                0x00000000c00265e8                avxInit
                0x00000000c00265e9                avxClose
                0x00000000c00265ea                wouldSheSayYes
 *fill*         0x00000000c00265fe        0x2 
 .text          0x00000000c0026600       0x35 hw/fpu/x86/sse.32
                0x00000000c0026600                absolutelyNoChanceInHell
                0x00000000c0026600                sseDetect
                0x00000000c0026618                sseSave
                0x00000000c002661e                sseLoad
                0x00000000c0026624                sseInit
                0x00000000c0026634                sseClose
 *fill*         0x00000000c0026635        0xb 
 .text          0x00000000c0026640       0x47 hw/fpu/x86/x87.32
                0x00000000c0026646                x87Detect
                0x00000000c0026661                x87Save
                0x00000000c0026667                x87Load
                0x00000000c002666c                x87Init
                0x00000000c0026686                x87Close
 *fill*         0x00000000c0026687        0x1 
 .text          0x00000000c0026688       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c00266ad        0x0 crtn.32
 *fill*         0x00000000c00266ad        0x3 
 .text          0x00000000c00266b0      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c00266b0                __divdi3
 *fill*         0x00000000c00267fb        0x1 
 .text          0x00000000c00267fc      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c00267fc                __moddi3
 *fill*         0x00000000c002697a        0x2 
 .text          0x00000000c002697c       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c002697c                __udivdi3
 *fill*         0x00000000c0026a7b        0x1 
 .text          0x00000000c0026a7c      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c0026a7c                __umoddi3
 .text          0x00000000c0026b96      0x96d D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
                0x00000000c0026b96                __addsf3
                0x00000000c0026e98                __subsf3
                0x00000000c0026eac                __negsf2
                0x00000000c0026eb9                __mulsf3
                0x00000000c002707c                __divsf3
                0x00000000c00272a7                __floatsisf
                0x00000000c002731b                __floatunsisf
                0x00000000c002735d                __fixsfsi
                0x00000000c00273bf                __fixunssfsi
                0x00000000c00273f0                __cmpsf2
                0x00000000c0027485                __eqsf2
                0x00000000c00274c0                __nesf2
                0x00000000c00274c2                __gtsf2
                0x00000000c00274fd                __gesf2
                0x00000000c00274ff                __ltsf2
                0x00000000c0027501                __lesf2
 .text          0x00000000c0027503      0xf50 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
                0x00000000c0027503                __adddf3
                0x00000000c0027b54                __subdf3
                0x00000000c0027b6f                __negdf2
                0x00000000c0027b80                __muldf3
                0x00000000c0027e64                __divdf3
                0x00000000c00281e3                __floatsidf
                0x00000000c002823e                __floatunsidf
                0x00000000c002827c                __fixdfsi
                0x00000000c00282e9                __fixunsdfsi
                0x00000000c0028325                __cmpdf2
                0x00000000c0028413                __eqdf2
                0x00000000c002842f                __nedf2
                0x00000000c0028431                __gtdf2
                0x00000000c002844d                __gedf2
                0x00000000c002844f                __ltdf2
                0x00000000c0028451                __ledf2
 .text          0x00000000c0028453      0x18d D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
                0x00000000c0028453                __truncdfsf2
                0x00000000c0028577                __extendsfdf2
 .text          0x00000000c00285e0       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c00285e0                fabs
 *fill*         0x00000000c00285fe        0x2 
 .text          0x00000000c0028600        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c0028600                lrint
 .text          0x00000000c002860c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c002860c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c0028618        0x0
 .iplt          0x00000000c0028618        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c0028618        0xf
 .init          0x00000000c0028618        0x3 crti.32
                0x00000000c0028618                _init
 .init          0x00000000c002861b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c0028620        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c0028625        0x2 crtn.32

.fini           0x00000000c0028627        0xa
 .fini          0x00000000c0028627        0x3 crti.32
                0x00000000c0028627                _fini
 .fini          0x00000000c002862a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c002862f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c0028632       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c0028632       0x23 core/computer.32
                0x00000000c0028632                Computer::~Computer()
                0x00000000c0028632                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c0028656       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c0028656       0x2a core/computer.32
                0x00000000c0028656                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c0028680       0x15
 .text._Z10idleCommonv
                0x00000000c0028680       0x15 core/idle.32
                0x00000000c0028680                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0028696        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c0028696        0x2 core/unixfile.32
                0x00000000c0028696                LinkedList<UnixFile>::~LinkedList()
                0x00000000c0028696                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0028698       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c0028698       0x58 core/unixfile.32
                0x00000000c0028698                LinkedList<UnixFile>::LinkedList()
                0x00000000c0028698                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00286f0       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00286f0       0xd3 core/unixfile.32
                0x00000000c00286f0                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00287c4        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c00287c4        0x7 core/unixfile.32
                0x00000000c00287c4                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00287cc       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c00287cc       0xa1 core/unixfile.32
                0x00000000c00287cc                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002886e        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c002886e        0x8 core/unixfile.32
                0x00000000c002886e                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028876       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c0028876       0x1a hal/device.32
                0x00000000c0028876                DriverlessDevice::~DriverlessDevice()
                0x00000000c0028876                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028890       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c0028890       0x2a hal/device.32
                0x00000000c0028890                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00288ba       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c00288ba       0xdc hal/device.32
                0x00000000c00288ba                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0028996       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c0028996       0x58 hal/device.32
                0x00000000c0028996                LinkedList<Device>::LinkedList()
                0x00000000c0028996                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00289ee        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c00289ee        0x7 hal/timer.32
                0x00000000c00289ee                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00289f6       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c00289f6       0x1c hal/timer.32
                0x00000000c00289f6                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0028a12       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c0028a12       0xae hal/timer.32
                0x00000000c0028a12                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0028ac0       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c0028ac0       0xd3 hal/timer.32
                0x00000000c0028ac0                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c0028b94       0x23
 .text._ZN4ACPID2Ev
                0x00000000c0028b94       0x23 hw/acpi.32
                0x00000000c0028b94                ACPI::~ACPI()
                0x00000000c0028b94                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c0028bb8       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c0028bb8       0x2a hw/acpi.32
                0x00000000c0028bb8                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c0028be2       0x23
 .text._ZN3CPUD2Ev
                0x00000000c0028be2       0x23 hw/cpu.32
                0x00000000c0028be2                CPU::~CPU()
                0x00000000c0028be2                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c0028c06       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c0028c06       0x2a hw/cpu.32
                0x00000000c0028c06                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0028c30        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c0028c30        0x2 thr/prcssthr.32
                0x00000000c0028c30                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c0028c30                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c0028c32       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c0028c32       0x3e thr/prcssthr.32
                0x00000000c0028c32                ThreadControlBlock::ThreadControlBlock()
                0x00000000c0028c32                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0028c70       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c0028c70       0x58 thr/prcssthr.32
                0x00000000c0028c70                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c0028c70                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0028cc8        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c0028cc8        0x8 thr/prcssthr.32
                0x00000000c0028cc8                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0028cd0        0xd
 .text._ZN2Vm9_FPUStateC2Ev
                0x00000000c0028cd0        0xd vm86/x87em.32
                0x00000000c0028cd0                Vm::_FPUState::_FPUState()
                0x00000000c0028cd0                Vm::_FPUState::_FPUState()

.text._ZN3PCID2Ev
                0x00000000c0028cde       0x23
 .text._ZN3PCID2Ev
                0x00000000c0028cde       0x23 hw/bus/pci.32
                0x00000000c0028cde                PCI::~PCI()
                0x00000000c0028cde                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c0028d02       0x2a
 .text._ZN3PCID0Ev
                0x00000000c0028d02       0x2a hw/bus/pci.32
                0x00000000c0028d02                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c0028d2c       0x23
 .text._ZN3IDED2Ev
                0x00000000c0028d2c       0x23 hw/diskctrl/ide.32
                0x00000000c0028d2c                IDE::~IDE()
                0x00000000c0028d2c                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c0028d50       0x2a
 .text._ZN3IDED0Ev
                0x00000000c0028d50       0x2a hw/diskctrl/ide.32
                0x00000000c0028d50                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c0028d7a       0x23
 .text._ZN7SATABusD2Ev
                0x00000000c0028d7a       0x23 hw/diskctrl/satabus.32
                0x00000000c0028d7a                SATABus::~SATABus()
                0x00000000c0028d7a                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c0028d9e       0x2a
 .text._ZN7SATABusD0Ev
                0x00000000c0028d9e       0x2a hw/diskctrl/satabus.32
                0x00000000c0028d9e                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c0028dc8       0x23
 .text._ZN3ATAD2Ev
                0x00000000c0028dc8       0x23 hw/diskphys/ata.32
                0x00000000c0028dc8                ATA::~ATA()
                0x00000000c0028dc8                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c0028dec       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c0028dec       0x2a hw/diskphys/ata.32
                0x00000000c0028dec                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c0028e16       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c0028e16       0x23 hw/diskphys/atapi.32
                0x00000000c0028e16                ATAPI::~ATAPI()
                0x00000000c0028e16                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c0028e3a       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c0028e3a       0x2a hw/diskphys/atapi.32
                0x00000000c0028e3a                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c0028e64       0x23
 .text._ZN4SATAD2Ev
                0x00000000c0028e64       0x23 hw/diskphys/sata.32
                0x00000000c0028e64                SATA::~SATA()
                0x00000000c0028e64                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c0028e88       0x2a
 .text._ZN4SATAD0Ev
                0x00000000c0028e88       0x2a hw/diskphys/sata.32
                0x00000000c0028e88                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c0028eb2       0x23
 .text._ZN6SATAPID2Ev
                0x00000000c0028eb2       0x23 hw/diskphys/satapi.32
                0x00000000c0028eb2                SATAPI::~SATAPI()
                0x00000000c0028eb2                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c0028ed6       0x2a
 .text._ZN6SATAPID0Ev
                0x00000000c0028ed6       0x2a hw/diskphys/satapi.32
                0x00000000c0028ed6                SATAPI::~SATAPI()

.text._ZN3AVXD2Ev
                0x00000000c0028f00       0x23
 .text._ZN3AVXD2Ev
                0x00000000c0028f00       0x23 hw/fpu/avx.32
                0x00000000c0028f00                AVX::~AVX()
                0x00000000c0028f00                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c0028f24       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c0028f24       0x2a hw/fpu/avx.32
                0x00000000c0028f24                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c0028f4e       0x23
 .text._ZN3MMXD2Ev
                0x00000000c0028f4e       0x23 hw/fpu/mmx.32
                0x00000000c0028f4e                MMX::~MMX()
                0x00000000c0028f4e                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c0028f72       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c0028f72       0x2a hw/fpu/mmx.32
                0x00000000c0028f72                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c0028f9c       0x23
 .text._ZN3SSED2Ev
                0x00000000c0028f9c       0x23 hw/fpu/sse.32
                0x00000000c0028f9c                SSE::~SSE()
                0x00000000c0028f9c                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c0028fc0       0x2a
 .text._ZN3SSED0Ev
                0x00000000c0028fc0       0x2a hw/fpu/sse.32
                0x00000000c0028fc0                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c0028fea       0x23
 .text._ZN3x87D2Ev
                0x00000000c0028fea       0x23 hw/fpu/x87.32
                0x00000000c0028fea                x87::~x87()
                0x00000000c0028fea                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c002900e       0x2a
 .text._ZN3x87D0Ev
                0x00000000c002900e       0x2a hw/fpu/x87.32
                0x00000000c002900e                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c0029038       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0029038       0x23 hw/intctrl/apic.32
                0x00000000c0029038                IOAPIC::~IOAPIC()
                0x00000000c0029038                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002905c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002905c       0x2a hw/intctrl/apic.32
                0x00000000c002905c                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c0029086       0x23
 .text._ZN4APICD2Ev
                0x00000000c0029086       0x23 hw/intctrl/apic.32
                0x00000000c0029086                APIC::~APIC()
                0x00000000c0029086                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c00290aa       0x2a
 .text._ZN4APICD0Ev
                0x00000000c00290aa       0x2a hw/intctrl/apic.32
                0x00000000c00290aa                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c00290d4       0x23
 .text._ZN3PICD2Ev
                0x00000000c00290d4       0x23 hw/intctrl/pic.32
                0x00000000c00290d4                PIC::~PIC()
                0x00000000c00290d4                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c00290f8       0x2a
 .text._ZN3PICD0Ev
                0x00000000c00290f8       0x2a hw/intctrl/pic.32
                0x00000000c00290f8                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0029122       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0029122       0x23 hw/timer/apictimer.32
                0x00000000c0029122                APICTimer::~APICTimer()
                0x00000000c0029122                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0029146       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0029146       0x2a hw/timer/apictimer.32
                0x00000000c0029146                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0029170       0x23
 .text._ZN3PITD2Ev
                0x00000000c0029170       0x23 hw/timer/pit.32
                0x00000000c0029170                PIT::~PIT()
                0x00000000c0029170                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0029194       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0029194       0x2a hw/timer/pit.32
                0x00000000c0029194                PIT::~PIT()

.rodata         0x00000000c00291be     0x413e
                0x00000000c00291be                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00291be        0x2 
 .ctors         0x00000000c00291c0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00291c4        0x4 core/unixfile.32
 .ctors         0x00000000c00291c8        0x4 thr/prcssthr.32
 .ctors         0x00000000c00291cc        0x4 vm86/x87em.32
 .ctors         0x00000000c00291d0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00291d4                end_ctors = .
                0x00000000c00291d4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00291d4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00291d8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00291d8                __DTOR_END__
                0x00000000c00291dc                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00291dc        0x4 
 .rodata        0x00000000c00291e0      0x101 acpica/utclib.32
                0x00000000c00291e0                AcpiGbl_Ctypes
 *fill*         0x00000000c00292e1        0x3 
 .rodata        0x00000000c00292e4       0x18 core/malloc.32
 *fill*         0x00000000c00292fc        0x4 
 .rodata        0x00000000c0029300      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c0029420       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c0029476        0xa 
 .rodata        0x00000000c0029480      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0029880       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c0029936        0x2 
 .rodata.str1.4
                0x00000000c0029938      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c0029cdd        0x3 
 .rodata        0x00000000c0029ce0       0x60 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c0029d40       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c0029d82        0x2 
 .rodata        0x00000000c0029d84       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c0029df0       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0029eb4       0x4a hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0029efe       0x48 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c0029f46       0x49 compat/resolve.32
 .rodata.str1.1
                0x00000000c0029f8f      0x1d0 core/computer.32
                                        0x1d2 (size before relaxing)
 *fill*         0x00000000c002a15f        0x1 
 .rodata._ZTV8Computer
                0x00000000c002a160       0x2c core/computer.32
                0x00000000c002a160                vtable for Computer
 .rodata.str1.1
                0x00000000c002a18c       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c002a1a8       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c002a1d8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c002a1e4       0x62 core/main.32
                                         0x63 (size before relaxing)
 .rodata.str1.1
                0x00000000c002a246       0x5f core/physmgr.32
 *fill*         0x00000000c002a2a5        0x3 
 .rodata.str1.4
                0x00000000c002a2a8       0x4d core/physmgr.32
 .rodata.str1.1
                0x00000000c002a2f5       0x39 core/pipe.32
 *fill*         0x00000000c002a32e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c002a330       0x1c core/pipe.32
                0x00000000c002a330                vtable for Pipe
 .rodata.str1.1
                0x00000000c002a34c       0x9d core/terminal.32
 *fill*         0x00000000c002a3e9        0x3 
 .rodata._ZTV7VgaText
                0x00000000c002a3ec       0x1c core/terminal.32
                0x00000000c002a3ec                vtable for VgaText
 .rodata        0x00000000c002a408       0x1e core/tss.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c002a426       0x19 core/unixfile.32
 *fill*         0x00000000c002a43f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002a440       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002a462       0x15 core/unixfile.32
 *fill*         0x00000000c002a477        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c002a478       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002a4c3        0x8 core/unixfile.32
 *fill*         0x00000000c002a4cb        0x1 
 .rodata.str1.4
                0x00000000c002a4cc       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c002a4ec       0x1c core/unixfile.32
                0x00000000c002a4ec                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c002a508       0x1c core/unixfile.32
                0x00000000c002a508                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002a524      0x1a7 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002a6cb      0x14b core/virtmgr.32
 .rodata.str1.1
                0x00000000c002a816       0x83 coreobjs/c++.32
 *fill*         0x00000000c002a899        0x3 
 .rodata.str1.4
                0x00000000c002a89c       0x3f dbg/kconsole.32
 *fill*         0x00000000c002a8db        0x1 
 .rodata        0x00000000c002a8dc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002aa2c       0x83 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c002aa2c       0x64 fs/vfs.32
                0x00000000c002aa2c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002aa90       0x1c fs/vfs.32
                0x00000000c002aa90                vtable for File
 .rodata._ZTV9Directory
                0x00000000c002aaac       0x1c fs/vfs.32
                0x00000000c002aaac                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002aac8       0x2c hal/bus.32
                0x00000000c002aac8                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c002aaf4       0x30 hal/buzzer.32
                0x00000000c002aaf4                vtable for Buzzer
 .rodata.str1.1
                0x00000000c002ab24       0x1e hal/clock.32
 *fill*         0x00000000c002ab42        0x2 
 .rodata._ZTV5Clock
                0x00000000c002ab44       0x3c hal/clock.32
                0x00000000c002ab44                vtable for Clock
 .rodata        0x00000000c002ab80       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c002abb0       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c002abce       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c002abce       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c002abce       0x19 hal/device.32
 *fill*         0x00000000c002abce        0x2 
 .rodata._ZTV6Device
                0x00000000c002abd0       0x2c hal/device.32
                0x00000000c002abd0                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c002abfc       0x2c hal/device.32
                0x00000000c002abfc                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c002ac28       0x2c hal/diskctrl.32
                0x00000000c002ac28                vtable for HardDiskController
 .rodata.str1.1
                0x00000000c002ac54       0x27 hal/diskphys.32
 *fill*         0x00000000c002ac7b        0x1 
 .rodata._ZTV12PhysicalDisk
                0x00000000c002ac7c       0x38 hal/diskphys.32
                0x00000000c002ac7c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c002acb4        0x9 hal/fpu.32
 *fill*         0x00000000c002acbd        0x3 
 .rodata._ZTV3FPU
                0x00000000c002acc0       0x38 hal/fpu.32
                0x00000000c002acc0                vtable for FPU
 .rodata        0x00000000c002acf8      0x34d hal/intctrl.32
 *fill*         0x00000000c002b045        0x3 
 .rodata._ZTV19InterruptController
                0x00000000c002b048       0x48 hal/intctrl.32
                0x00000000c002b048                vtable for InterruptController
 .rodata        0x00000000c002b090       0x4f hal/keybrd.32
 *fill*         0x00000000c002b0df        0x1 
 .rodata._ZTV8Keyboard
                0x00000000c002b0e0       0x34 hal/keybrd.32
                0x00000000c002b0e0                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002b114       0x7a hal/logidisk.32
 *fill*         0x00000000c002b18e        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c002b190       0x2c hal/logidisk.32
                0x00000000c002b190                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c002b1bc       0x2c hal/mouse.32
                0x00000000c002b1bc                vtable for Mouse
 .rodata.str1.1
                0x00000000c002b1e8       0x2d hal/partition.32
 *fill*         0x00000000c002b215        0x3 
 .rodata._ZTV6Serial
                0x00000000c002b218       0x44 hal/serial.32
                0x00000000c002b218                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002b25c       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002b25c        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002b25c       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002b25c       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c002b25c       0x30 hal/timer.32
                0x00000000c002b25c                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c002b28c       0x10 hal/vcache.32
                0x00000000c002b28c                vtable for VCache
 .rodata.str1.1
                0x00000000c002b29c       0x7c hal/video.32
 .rodata._ZTV5Video
                0x00000000c002b318       0x48 hal/video.32
                0x00000000c002b318                vtable for Video
 .rodata.str1.1
                0x00000000c002b360      0x122 hw/acpi.32
 *fill*         0x00000000c002b482        0x2 
 .rodata.str1.4
                0x00000000c002b484       0xbe hw/acpi.32
 *fill*         0x00000000c002b542        0x2 
 .rodata._ZTV4ACPI
                0x00000000c002b544       0x2c hw/acpi.32
                0x00000000c002b544                vtable for ACPI
 .rodata.str1.1
                0x00000000c002b570      0x3c1 hw/cpu.32
                                        0x3ce (size before relaxing)
 *fill*         0x00000000c002b931        0x3 
 .rodata._ZTV3CPU
                0x00000000c002b934       0x2c hw/cpu.32
                0x00000000c002b934                vtable for CPU
 .rodata.str1.1
                0x00000000c002b960       0x11 hw/smp.32
 .rodata.str1.1
                0x00000000c002b971       0x89 krnl/env.32
 .rodata.str1.1
                0x00000000c002b9fa       0xbe krnl/panic.32
                                         0xc5 (size before relaxing)
 .rodata.str1.4
                0x00000000c002bab8      0x13e krnl/panic.32
 *fill*         0x00000000c002bbf6        0x2 
 .rodata.str1.4
                0x00000000c002bbf8       0x4c net/ethernet.32
 .rodata.str1.1
                0x00000000c002bc44       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c002bc89       0x80 sys/sc_sbrk.32
 .rodata.str1.1
                0x00000000c002bd09       0x38 sys/sc_settime.32
 .rodata.str1.1
                0x00000000c002bd41       0x77 sys/sc_timezone.32
 .rodata.str1.1
                0x00000000c002bdb8       0x2c sys/sc_wsbe.32
 .rodata.str1.1
                0x00000000c002bde4      0x115 sys/syscalls.32
                                        0x133 (size before relaxing)
 *fill*         0x00000000c002bef9        0x3 
 .rodata.str1.4
                0x00000000c002befc       0x6f sys/syscalls.32
 .rodata.str1.1
                0x00000000c002bf6b      0x254 thr/elf.32
                                        0x256 (size before relaxing)
 .rodata.str1.1
                0x00000000c002c1bf       0xfb thr/prcssthr.32
 *fill*         0x00000000c002c2ba        0x2 
 .rodata.str1.4
                0x00000000c002c2bc      0x2a7 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c002c563       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002c563       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002c563       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002c563       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002c563        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002c563      0x19f vm86/vm8086.32
 *fill*         0x00000000c002c702        0x2 
 .rodata        0x00000000c002c704       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002c734       0x58 vm86/x87em.32
 .rodata        0x00000000c002c78c       0x3c vm86/x87em.32
 .rodata.str1.1
                0x00000000c002c7c8       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c002c81b        0x1 
 .rodata.str1.4
                0x00000000c002c81c       0x25 fs/fat/vfslink.32
 *fill*         0x00000000c002c841        0x3 
 .rodata._ZTV3FAT
                0x00000000c002c844       0x64 fs/fat/vfslink.32
                0x00000000c002c844                vtable for FAT
 .rodata.str1.1
                0x00000000c002c8a8       0x5c fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c002c904       0x64 fs/iso9660/vfslink.32
                0x00000000c002c904                vtable for ISO9660
 .rodata.str1.1
                0x00000000c002c968       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c002c982        0x2 
 .rodata.cst4   0x00000000c002c984        0x8 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c002c98c       0x38 hal/sound/sndhw.32
                0x00000000c002c98c                vtable for SoundDevice
 .rodata.str1.1
                0x00000000c002c9c4       0x62 hw/bus/pci.32
 *fill*         0x00000000c002ca26        0x2 
 .rodata._ZTV3PCI
                0x00000000c002ca28       0x2c hw/bus/pci.32
                0x00000000c002ca28                vtable for PCI
 .rodata.str1.1
                0x00000000c002ca54      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c002cc8a        0x2 
 .rodata._ZTV3IDE
                0x00000000c002cc8c       0x2c hw/diskctrl/ide.32
                0x00000000c002cc8c                vtable for IDE
 .rodata.str1.4
                0x00000000c002ccb8       0x48 hw/diskctrl/satabus.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c002cd00       0x6a hw/diskctrl/satabus.32
 *fill*         0x00000000c002cd6a        0x2 
 .rodata._ZTV7SATABus
                0x00000000c002cd6c       0x2c hw/diskctrl/satabus.32
                0x00000000c002cd6c                vtable for SATABus
 .rodata.str1.1
                0x00000000c002cd98       0x1d hw/diskphys/ata.32
                                         0x2c (size before relaxing)
 *fill*         0x00000000c002cdb5        0x3 
 .rodata._ZTV3ATA
                0x00000000c002cdb8       0x38 hw/diskphys/ata.32
                0x00000000c002cdb8                vtable for ATA
 .rodata.str1.1
                0x00000000c002cdf0       0x1d hw/diskphys/atapi.32
                                         0x38 (size before relaxing)
 .rodata._ZTV5ATAPI
                0x00000000c002cdf0       0x38 hw/diskphys/atapi.32
                0x00000000c002cdf0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c002ce28       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c002cea4       0x38 hw/diskphys/sata.32
                0x00000000c002cea4                vtable for SATA
 .rodata.str1.1
                0x00000000c002cedc       0xa3 hw/diskphys/satapi.32
                                         0xb1 (size before relaxing)
 *fill*         0x00000000c002cf7f        0x1 
 .rodata._ZTV6SATAPI
                0x00000000c002cf80       0x38 hw/diskphys/satapi.32
                0x00000000c002cf80                vtable for SATAPI
 .rodata.str1.1
                0x00000000c002cfb8        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c002cfc0       0x38 hw/fpu/avx.32
                0x00000000c002cfc0                vtable for AVX
 .rodata.str1.1
                0x00000000c002cff8        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c002d000       0x38 hw/fpu/mmx.32
                0x00000000c002d000                vtable for MMX
 .rodata.str1.1
                0x00000000c002d038        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c002d040       0x38 hw/fpu/sse.32
                0x00000000c002d040                vtable for SSE
 .rodata.str1.1
                0x00000000c002d078        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c002d080       0x38 hw/fpu/x87.32
                0x00000000c002d080                vtable for x87
 .rodata        0x00000000c002d0b8       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c002d190       0x48 hw/intctrl/apic.32
                0x00000000c002d190                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c002d1d8       0x2c hw/intctrl/apic.32
                0x00000000c002d1d8                vtable for IOAPIC
 .rodata        0x00000000c002d204       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c002d226        0x2 
 .rodata._ZTV3PIC
                0x00000000c002d228       0x48 hw/intctrl/pic.32
                0x00000000c002d228                vtable for PIC
 .rodata.str1.1
                0x00000000c002d270        0xb hw/timer/apictimer.32
 *fill*         0x00000000c002d27b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002d27c       0x30 hw/timer/apictimer.32
                0x00000000c002d27c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c002d2ac       0x1d hw/timer/pit.32
 *fill*         0x00000000c002d2c9        0x3 
 .rodata._ZTV3PIT
                0x00000000c002d2cc       0x30 hw/timer/pit.32
                0x00000000c002d2cc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002d2fc      0x679
 *(.data)
 .data          0x00000000c002d2fc        0x0 crti.32
 .data          0x00000000c002d2fc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002d2fc                __dso_handle
 .data          0x00000000c002d300        0x0 acpica/utclib.32
 .data          0x00000000c002d300        0x0 core/malloc.32
 .data          0x00000000c002d300        0x0 libk/string.32
 .data          0x00000000c002d300        0x0 fs/fat/diskio.32
 .data          0x00000000c002d300        0x0 fs/fat/ff.32
 .data          0x00000000c002d300        0x0 fs/fat/ffsystem.32
 .data          0x00000000c002d300        0x0 fs/fat/ffunicode.32
 .data          0x00000000c002d300        0x0 hal/libresample/samplerate.32
 .data          0x00000000c002d300        0x0 hal/libresample/src_linear.32
 .data          0x00000000c002d300        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c002d300        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c002d300        0x0 compat/inlines.32
 .data          0x00000000c002d300        0x0 compat/resolve.32
 .data          0x00000000c002d300        0x0 core/computer.32
 .data          0x00000000c002d300        0x0 core/gdt.32
 .data          0x00000000c002d300        0x0 core/idle.32
 .data          0x00000000c002d300        0x0 core/idt.32
 .data          0x00000000c002d300        0x4 core/kheap.32
 .data          0x00000000c002d304        0x0 core/main.32
 .data          0x00000000c002d304        0x4 core/physmgr.32
                0x00000000c002d304                Phys::bitmap
 .data          0x00000000c002d308        0x0 core/pipe.32
 *fill*         0x00000000c002d308       0x18 
 .data          0x00000000c002d320       0x60 core/terminal.32
                0x00000000c002d320                VGA_TEXT_MODE_ADDRESS
                0x00000000c002d324                VgaText::hiddenOut
                0x00000000c002d340                ansiToVGAMappings
 .data          0x00000000c002d380        0x0 core/tss.32
 .data          0x00000000c002d380        0x4 core/unixfile.32
                0x00000000c002d380                UnixFile::nextFd
 .data          0x00000000c002d384       0x15 core/virtmgr.32
                0x00000000c002d384                Virt::pageAllocPtr
                0x00000000c002d388                Virt::bitmap
                0x00000000c002d38c                Virt::swapfileSectorsPerPage
                0x00000000c002d390                Virt::swapfileLength
                0x00000000c002d394                Virt::swapfileSector
                0x00000000c002d398                Virt::swapfileDrive
 *fill*         0x00000000c002d399        0x3 
 .data          0x00000000c002d39c        0x4 coreobjs/c++.32
                0x00000000c002d39c                __stack_chk_guard
 .data          0x00000000c002d3a0        0x0 dbg/kconsole.32
 .data          0x00000000c002d3a0        0x0 fs/vfs.32
 .data          0x00000000c002d3a0        0x0 hal/bus.32
 .data          0x00000000c002d3a0        0x0 hal/buzzer.32
 .data          0x00000000c002d3a0        0x0 hal/clock.32
 .data          0x00000000c002d3a0        0x0 hal/device.32
 .data          0x00000000c002d3a0        0x0 hal/diskctrl.32
 .data          0x00000000c002d3a0        0x0 hal/diskphys.32
 .data          0x00000000c002d3a0        0x0 hal/fpu.32
 .data          0x00000000c002d3a0      0x2a0 hal/intctrl.32
                0x00000000c002d3a0                exceptionNames
 .data          0x00000000c002d640        0x0 hal/keybrd.32
 .data          0x00000000c002d640        0x0 hal/logidisk.32
 .data          0x00000000c002d640        0x0 hal/mouse.32
 .data          0x00000000c002d640        0x0 hal/partition.32
 .data          0x00000000c002d640        0x0 hal/serial.32
 .data          0x00000000c002d640        0x0 hal/timer.32
 .data          0x00000000c002d640        0x0 hal/vcache.32
 .data          0x00000000c002d640        0x0 hal/video.32
 .data          0x00000000c002d640       0x10 hw/acpi.32
                0x00000000c002d640                legacyIRQRemaps
 *fill*         0x00000000c002d650       0x10 
 .data          0x00000000c002d660      0x2a4 hw/cpu.32
                0x00000000c002d660                cpuNameList
                0x00000000c002d900                lastCode
 .data          0x00000000c002d904        0x0 hw/ports.32
 .data          0x00000000c002d904        0x0 hw/smp.32
 *fill*         0x00000000c002d904       0x1c 
 .data          0x00000000c002d920       0x4d krnl/env.32
                0x00000000c002d920                defaultSysEnv
 .data          0x00000000c002d96d        0x0 krnl/panic.32
 .data          0x00000000c002d96d        0x0 net/ethernet.32
 .data          0x00000000c002d96d        0x0 reg/registry.32
 .data          0x00000000c002d96d        0x0 sys/sc_eject.32
 .data          0x00000000c002d96d        0x0 sys/sc_exit.32
 .data          0x00000000c002d96d        0x0 sys/sc_getcwd.32
 .data          0x00000000c002d96d        0x0 sys/sc_getpid.32
 .data          0x00000000c002d96d        0x0 sys/sc_getramdata.32
 .data          0x00000000c002d96d        0x0 sys/sc_loaddll.32
 .data          0x00000000c002d96d        0x0 sys/sc_read.32
 .data          0x00000000c002d96d        0x0 sys/sc_sbrk.32
 .data          0x00000000c002d96d        0x0 sys/sc_setcwd.32
 .data          0x00000000c002d96d        0x0 sys/sc_settime.32
 .data          0x00000000c002d96d        0x0 sys/sc_timezone.32
 .data          0x00000000c002d96d        0x0 sys/sc_write.32
 .data          0x00000000c002d96d        0x0 sys/sc_wsbe.32
 .data          0x00000000c002d96d        0x0 sys/sc_yield.32
 .data          0x00000000c002d96d        0x0 sys/syscalls.32
 .data          0x00000000c002d96d        0x0 thr/elf.32
 *fill*         0x00000000c002d96d        0x3 
 .data          0x00000000c002d970        0x4 thr/prcssthr.32
                0x00000000c002d970                Thr::nextPID
 .data          0x00000000c002d974        0x0 vm86/vm8086.32
 .data          0x00000000c002d974        0x0 vm86/x87em.32
 .data          0x00000000c002d974        0x0 fs/fat/vfslink.32
 .data          0x00000000c002d974        0x1 fs/iso9660/vfslink.32
                0x00000000c002d974                recentDriveletter
 .data          0x00000000c002d975        0x0 hal/sound/sndchannel.32
 .data          0x00000000c002d975        0x0 hal/sound/sndhw.32
 .data          0x00000000c002d975        0x0 hw/bus/isa.32
 .data          0x00000000c002d975        0x0 hw/bus/pci.32
 .data          0x00000000c002d975        0x0 hw/diskctrl/ide.32
 .data          0x00000000c002d975        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c002d975        0x0 hw/diskphys/ata.32
 .data          0x00000000c002d975        0x0 hw/diskphys/atapi.32
 .data          0x00000000c002d975        0x0 hw/diskphys/sata.32
 .data          0x00000000c002d975        0x0 hw/diskphys/satapi.32
 .data          0x00000000c002d975        0x0 hw/fpu/avx.32
 .data          0x00000000c002d975        0x0 hw/fpu/mmx.32
 .data          0x00000000c002d975        0x0 hw/fpu/sse.32
 .data          0x00000000c002d975        0x0 hw/fpu/x87.32
 .data          0x00000000c002d975        0x0 hw/intctrl/apic.32
 .data          0x00000000c002d975        0x0 hw/intctrl/pic.32
 .data          0x00000000c002d975        0x0 hw/timer/apictimer.32
 .data          0x00000000c002d975        0x0 hw/timer/pit.32
 .data          0x00000000c002d975        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c002d975        0x0 crtn.32
 .data          0x00000000c002d975        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c002d975        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c002d975        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c002d975        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 .data          0x00000000c002d975        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
 .data          0x00000000c002d975        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
 .data          0x00000000c002d975        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
 .data          0x00000000c002d975        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c002d975        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c002d975        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c002d978        0x0
 .got           0x00000000c002d978        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c002d978        0x0
 .got.plt       0x00000000c002d978        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c002d978        0x0
 .igot.plt      0x00000000c002d978        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c002d978        0x0
 .tm_clone_table
                0x00000000c002d978        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c002d978        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c002d975      0x633
 *(.eh_frame)
 *fill*         0x00000000c002d975        0x3 
 .eh_frame      0x00000000c002d978        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c002d978        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c002d978       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c002d9d0       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c002da10       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002da7c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c002db00      0x218 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
                                        0x230 (size before relaxing)
 .eh_frame      0x00000000c002dd18      0x220 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
                                        0x238 (size before relaxing)
 .eh_frame      0x00000000c002df38       0x58 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
                                         0x70 (size before relaxing)
 .eh_frame      0x00000000c002df90       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c002dfa8        0x0
 .rel.got       0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c002dfa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c002dfa8     0x4800
                0x00000000c002dfa8                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c002dfa8        0x0 crti.32
 .bss           0x00000000c002dfa8       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c002dfc8        0x4 acpica/utclib.32
 *fill*         0x00000000c002dfcc       0x14 
 .bss           0x00000000c002dfe0      0x378 core/malloc.32
 .bss           0x00000000c002e358        0x0 libk/string.32
 .bss           0x00000000c002e358        0x0 fs/fat/diskio.32
 *fill*         0x00000000c002e358        0x8 
 .bss           0x00000000c002e360       0x88 fs/fat/ff.32
 .bss           0x00000000c002e3e8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c002e3e8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c002e3e8        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c002e3e8        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c002e3e8        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c002e3e8        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c002e3e8        0x0 compat/inlines.32
 .bss           0x00000000c002e3e8        0x0 compat/resolve.32
 .bss           0x00000000c002e3e8        0x6 core/computer.32
                0x00000000c002e3e8                Krnl::computer
                0x00000000c002e3ec                Krnl::preemptionOn
                0x00000000c002e3ed                Krnl::schedulingOn
 *fill*         0x00000000c002e3ee        0x2 
 .bss           0x00000000c002e3f0        0x6 core/gdt.32
                0x00000000c002e3f0                gdtDescr
 .bss           0x00000000c002e3f6        0x0 core/idle.32
 *fill*         0x00000000c002e3f6        0x2 
 .bss           0x00000000c002e3f8        0x6 core/idt.32
                0x00000000c002e3f8                idtDescr
 .bss           0x00000000c002e3fe        0x0 core/kheap.32
 *fill*         0x00000000c002e3fe        0x2 
 .bss           0x00000000c002e400        0x4 core/main.32
                0x00000000c002e400                sysBootSettings
 *fill*         0x00000000c002e404       0x1c 
 .bss           0x00000000c002e420       0x50 core/physmgr.32
                0x00000000c002e420                Phys::forbidEvictions
                0x00000000c002e424                Phys::currentPagePointer
                0x00000000c002e428                Phys::highestMem
                0x00000000c002e42c                Phys::oldPercent
                0x00000000c002e430                Phys::usedPages
                0x00000000c002e434                Phys::usablePages
                0x00000000c002e440                Phys::dmaUsage
 .bss           0x00000000c002e470        0x0 core/pipe.32
 *fill*         0x00000000c002e470       0x10 
 .bss           0x00000000c002e480       0x49 core/terminal.32
                0x00000000c002e480                vgamono
                0x00000000c002e4a0                textModeImplementation
                0x00000000c002e4c0                terminalCycle
                0x00000000c002e4c4                activeTerminal
                0x00000000c002e4c8                VgaText::graphicMode
 *fill*         0x00000000c002e4c9        0x1 
 .bss           0x00000000c002e4ca        0x2 core/tss.32
                0x00000000c002e4ca                doubleFaultSelector
 *fill*         0x00000000c002e4cc       0x14 
 .bss           0x00000000c002e4e0       0x84 core/unixfile.32
                0x00000000c002e4e0                sfileLpt
                0x00000000c002e520                sfileCom
                0x00000000c002e544                sfileNul
                0x00000000c002e548                sfilePnt
                0x00000000c002e54c                sfileAux
                0x00000000c002e550                sfileCon
                0x00000000c002e554                initialFilesAdded
                0x00000000c002e558                unixFileLinkedList
 .bss           0x00000000c002e564        0x8 core/virtmgr.32
                0x00000000c002e564                Virt::swapfileBitmap
                0x00000000c002e568                firstVAS
 .bss           0x00000000c002e56c        0x0 coreobjs/c++.32
 .bss           0x00000000c002e56c        0x0 dbg/kconsole.32
 .bss           0x00000000c002e56c        0x4 fs/vfs.32
                0x00000000c002e56c                installedFilesystems
 .bss           0x00000000c002e570        0x0 hal/bus.32
 .bss           0x00000000c002e570        0x4 hal/buzzer.32
                0x00000000c002e570                systemBuzzer
 .bss           0x00000000c002e574        0x8 hal/clock.32
                0x00000000c002e574                User::dstOn
                0x00000000c002e575                User::timezoneHalfHourOffset
                0x00000000c002e578                User::timezoneHourOffset
 .bss           0x00000000c002e57c        0x0 hal/device.32
 .bss           0x00000000c002e57c        0x0 hal/diskctrl.32
 .bss           0x00000000c002e57c        0x0 hal/diskphys.32
 .bss           0x00000000c002e57c        0x0 hal/fpu.32
 .bss           0x00000000c002e57c       0x1c hal/intctrl.32
                0x00000000c002e57c                pf5
                0x00000000c002e580                pf4
                0x00000000c002e584                pf3
                0x00000000c002e588                pf2
                0x00000000c002e58c                pf1
                0x00000000c002e590                pf0
                0x00000000c002e594                gpFaultIntercept
 *fill*         0x00000000c002e598        0x8 
 .bss           0x00000000c002e5a0      0x429 hal/keybrd.32
                0x00000000c002e5a0                keyboardWaitingTaskList
                0x00000000c002e5a4                keyboardSetupYet
                0x00000000c002e5a8                guiKeyboardHandler
                0x00000000c002e5c0                keystates
 *fill*         0x00000000c002e9c9       0x17 
 .bss           0x00000000c002e9e0       0x88 hal/logidisk.32
                0x00000000c002e9e0                diskAssignments
                0x00000000c002ea00                disks
 .bss           0x00000000c002ea68        0x4 hal/mouse.32
                0x00000000c002ea68                guiMouseHandler
 .bss           0x00000000c002ea6c        0x0 hal/partition.32
 .bss           0x00000000c002ea6c        0x0 hal/serial.32
 *fill*         0x00000000c002ea6c        0x4 
 .bss           0x00000000c002ea70        0x8 hal/timer.32
                0x00000000c002ea70                nanoSinceBoot
 *fill*         0x00000000c002ea78        0x8 
 .bss           0x00000000c002ea80     0x2000 hal/vcache.32
                0x00000000c002ea80                testBuffer
 .bss           0x00000000c0030a80        0x4 hal/video.32
                0x00000000c0030a80                screen
 *fill*         0x00000000c0030a84       0x1c 
 .bss           0x00000000c0030aa0      0x480 hw/acpi.32
                0x00000000c0030aa0                systemSleepFunction
                0x00000000c0030aa4                systemResetFunction
                0x00000000c0030aa8                systemShutdownFunction
                0x00000000c0030aac                nextACPITable
                0x00000000c0030ac0                acpiTables
                0x00000000c0030cc0                usingXSDT
                0x00000000c0030cc4                MADTpointer
                0x00000000c0030cc8                RSDTpointer
                0x00000000c0030ccc                RSDPpointer
                0x00000000c0030cd0                nextAPICNMI
                0x00000000c0030ce0                apicNMIInfo
                0x00000000c0030d60                legacyIRQFlags
                0x00000000c0030d80                ioapicDiscoveryNumber
                0x00000000c0030da0                ioapicFoundInMADT
                0x00000000c0030dc0                ioapicAddresses
                0x00000000c0030e40                ioapicGSIBase
                0x00000000c0030ec0                processorDiscoveryNumber
                0x00000000c0030ee0                matchingAPICID
                0x00000000c0030f00                processorID
 .bss           0x00000000c0030f20       0x10 hw/cpu.32
                0x00000000c0030f20                lastD
                0x00000000c0030f24                lastC
                0x00000000c0030f28                lastB
                0x00000000c0030f2c                lastA
 .bss           0x00000000c0030f30        0x0 hw/ports.32
 .bss           0x00000000c0030f30        0x1 hw/smp.32
                0x00000000c0030f30                Krnl::bspID
 *fill*         0x00000000c0030f31        0x3 
 .bss           0x00000000c0030f34        0x8 krnl/env.32
                0x00000000c0030f34                Krnl::userEnv
                0x00000000c0030f38                Krnl::systemEnv
 .bss           0x00000000c0030f3c        0x9 krnl/panic.32
                0x00000000c0030f3c                Krnl::guiProgramFaultHandler
                0x00000000c0030f40                Krnl::guiPanicHandler
                0x00000000c0030f44                Krnl::kernelInPanic
 .bss           0x00000000c0030f45        0x0 net/ethernet.32
 .bss           0x00000000c0030f45        0x0 reg/registry.32
 .bss           0x00000000c0030f45        0x0 sys/sc_eject.32
 .bss           0x00000000c0030f45        0x0 sys/sc_exit.32
 .bss           0x00000000c0030f45        0x0 sys/sc_getcwd.32
 .bss           0x00000000c0030f45        0x0 sys/sc_getpid.32
 .bss           0x00000000c0030f45        0x0 sys/sc_getramdata.32
 .bss           0x00000000c0030f45        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0030f45        0x0 sys/sc_read.32
 .bss           0x00000000c0030f45        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0030f45        0x0 sys/sc_setcwd.32
 .bss           0x00000000c0030f45        0x0 sys/sc_settime.32
 .bss           0x00000000c0030f45        0x0 sys/sc_timezone.32
 .bss           0x00000000c0030f45        0x0 sys/sc_write.32
 .bss           0x00000000c0030f45        0x0 sys/sc_wsbe.32
 .bss           0x00000000c0030f45        0x0 sys/sc_yield.32
 *fill*         0x00000000c0030f45       0x1b 
 .bss           0x00000000c0030f60      0x200 sys/syscalls.32
                0x00000000c0030f60                systemCallHandlers
 .bss           0x00000000c0031160      0x7a4 thr/elf.32
                0x00000000c0031160                Thr::driverLookupNext
                0x00000000c0031180                Thr::driverLookupLen
                0x00000000c0031380                Thr::driverLookupAddr
                0x00000000c0031580                Thr::driverNameLookup
                0x00000000c0031780                Thr::kernelSymbols
                0x00000000c0031800                Thr::kernelStringTable
                0x00000000c0031880                Thr::kernelSymbolTable
                0x00000000c0031900                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0031904        0x4 
 .bss           0x00000000c0031908       0x68 thr/prcssthr.32
                0x00000000c0031908                cleanerThread
                0x00000000c003190c                weNeedTheCleanerToNotBlock
                0x00000000c0031910                xxxx
                0x00000000c0031914                retValLockStuff
                0x00000000c0031918                retValSchedLock
                0x00000000c003191c                lockStuffLock
                0x00000000c0031920                schedulerLock
                0x00000000c0031924                taskSwitchesPostponedFlag
                0x00000000c0031928                postponeTaskSwitchesCounter
                0x00000000c003192c                irqDisableCounter
                0x00000000c0031930                terminatedTaskList
                0x00000000c003193c                sleepingTaskList
                0x00000000c0031948                taskList
                0x00000000c0031954                kernelProcess
 *fill*         0x00000000c0031970       0x10 
 .bss           0x00000000c0031980       0x40 vm86/vm8086.32
                0x00000000c0031980                Vm::vmRetV
                0x00000000c0031984                Vm::vmDone
                0x00000000c0031985                Vm::vmReady
                0x00000000c0031988                Vm::vm86Thread
                0x00000000c003198c                Vm::vmToHostCommsPtr
                0x00000000c00319a0                Vm::vmToHostComms
 .bss           0x00000000c00319c0       0x48 vm86/x87em.32
                0x00000000c00319c0                Vm::fpuState
 *fill*         0x00000000c0031a08       0x18 
 .bss           0x00000000c0031a20       0xf0 fs/fat/vfslink.32
                0x00000000c0031a20                FAT::fats
                0x00000000c0031a40                FAT::vfsToFatRemaps
                0x00000000c0031ac0                fatToVFSRemaps
 *fill*         0x00000000c0031b10       0x10 
 .bss           0x00000000c0031b20      0x820 fs/iso9660/vfslink.32
                0x00000000c0031b20                recentSector
                0x00000000c0031b40                recentBuffer
 .bss           0x00000000c0032340      0x401 hal/sound/sndchannel.32
                0x00000000c0032340                lookupTable8
                0x00000000c0032740                gotLookupTable
 .bss           0x00000000c0032741        0x0 hal/sound/sndhw.32
 .bss           0x00000000c0032741        0x0 hw/bus/isa.32
 .bss           0x00000000c0032741        0x0 hw/bus/pci.32
 .bss           0x00000000c0032741        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0032741        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0032741        0x3 
 .bss           0x00000000c0032744        0x8 hw/diskphys/ata.32
                0x00000000c0032744                ataSectorsWritten
                0x00000000c0032748                ataSectorsRead
 .bss           0x00000000c003274c        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c003274c        0x0 hw/diskphys/sata.32
 .bss           0x00000000c003274c        0x0 hw/diskphys/satapi.32
 .bss           0x00000000c003274c        0x0 hw/fpu/avx.32
 .bss           0x00000000c003274c        0x0 hw/fpu/mmx.32
 .bss           0x00000000c003274c        0x0 hw/fpu/sse.32
 .bss           0x00000000c003274c        0x0 hw/fpu/x87.32
 *fill*         0x00000000c003274c       0x14 
 .bss           0x00000000c0032760       0x41 hw/intctrl/apic.32
                0x00000000c0032760                noOfIOAPICs
                0x00000000c0032780                ioapics
                0x00000000c00327a0                IOAPICsSetupYet
 .bss           0x00000000c00327a1        0x0 hw/intctrl/pic.32
 .bss           0x00000000c00327a1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00327a1        0x3 
 .bss           0x00000000c00327a4        0x4 hw/timer/pit.32
                0x00000000c00327a4                pitFreq
 .bss           0x00000000c00327a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00327a8        0x0 crtn.32
 .bss           0x00000000c00327a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c00327a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c00327a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c00327a8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 .bss           0x00000000c00327a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfieeelib.o)
 .bss           0x00000000c00327a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(dfieeelib.o)
 .bss           0x00000000c00327a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a(sfdfcvt.o)
 .bss           0x00000000c00327a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c00327a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c00327a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00327a8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0036fa8                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
