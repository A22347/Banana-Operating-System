Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                              krnl/resolve.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                              krnl/resolve.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                              hal/clock.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)

Allocating common symbols
Common symbol       size              file

dcache              0x40              fs/iso9660/iso9660.32
cdDriveLetter       0x1               fs/iso9660/iso9660.32
icache              0x40              fs/iso9660/iso9660.32

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/ctype.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 fs/iso9660/iso9660.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0x8 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .group         0x0000000000000000        0xc hal/nic.32
 .comment       0x0000000000000000       0x12 hal/nic.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0xc hal/serial.32
 .comment       0x0000000000000000       0x12 hal/serial.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0x8 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 krnl/bootmsg.32
 .comment       0x0000000000000000       0x12 krnl/env.32
 .comment       0x0000000000000000       0x12 krnl/inlines.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/powctrl.32
 .comment       0x0000000000000000       0x12 krnl/random.32
 .comment       0x0000000000000000       0x12 krnl/resolve.32
 .comment       0x0000000000000000       0x12 krnl/signal.32
 .comment       0x0000000000000000       0x12 krnl/syscalls.32
 .comment       0x0000000000000000       0x12 net/ethernet.32
 .comment       0x0000000000000000       0x12 reg/cm.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/eject.32
 .comment       0x0000000000000000       0x12 sys/exit.32
 .comment       0x0000000000000000       0x12 sys/getcwd.32
 .comment       0x0000000000000000       0x12 sys/getpid.32
 .comment       0x0000000000000000       0x12 sys/getramdata.32
 .comment       0x0000000000000000       0x12 sys/getvgaptr.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .group         0x0000000000000000        0x8 sys/kill.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/kill.32
 .comment       0x0000000000000000       0x12 sys/loaddll.32
 .comment       0x0000000000000000       0x12 sys/read.32
 .comment       0x0000000000000000       0x12 sys/registersignal.32
 .comment       0x0000000000000000       0x12 sys/registry.32
 .comment       0x0000000000000000       0x12 sys/sbrk.32
 .comment       0x0000000000000000       0x12 sys/setcwd.32
 .comment       0x0000000000000000       0x12 sys/settime.32
 .comment       0x0000000000000000       0x12 sys/timezone.32
 .comment       0x0000000000000000       0x12 sys/write.32
 .comment       0x0000000000000000       0x12 sys/wsbe.32
 .comment       0x0000000000000000       0x12 sys/yield.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xce thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xac thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .comment       0x0000000000000000       0x12 arch/i386/hal.32
 .comment       0x0000000000000000       0x12 arch/i386/pic.32
 .group         0x0000000000000000        0xc arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/rtc.32
 .comment       0x0000000000000000       0x12 arch/i386/vga.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/helper.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .group         0x0000000000000000        0xc hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndcard.32
 .comment       0x0000000000000000       0x12 hal/sound/sndport.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskctrl/satabus.32
 .group         0x0000000000000000        0xc hw/diskctrl/satabus.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/satabus.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/diskphys/sata.32
 .group         0x0000000000000000        0xc hw/diskphys/sata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/sata.32
 .group         0x0000000000000000       0x14 hw/diskphys/satapi.32
 .group         0x0000000000000000        0xc hw/diskphys/satapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/satapi.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/ctype.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD fs/iso9660/iso9660.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/nic.32
LOAD hal/partition.32
LOAD hal/serial.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD krnl/bootmsg.32
LOAD krnl/env.32
LOAD krnl/inlines.32
LOAD krnl/panic.32
LOAD krnl/powctrl.32
LOAD krnl/random.32
LOAD krnl/resolve.32
LOAD krnl/signal.32
LOAD krnl/syscalls.32
LOAD net/ethernet.32
LOAD reg/cm.32
LOAD reg/registry.32
LOAD sys/eject.32
LOAD sys/exit.32
LOAD sys/getcwd.32
LOAD sys/getpid.32
LOAD sys/getramdata.32
LOAD sys/getvgaptr.32
LOAD sys/kill.32
LOAD sys/loaddll.32
LOAD sys/read.32
LOAD sys/registersignal.32
LOAD sys/registry.32
LOAD sys/sbrk.32
LOAD sys/setcwd.32
LOAD sys/settime.32
LOAD sys/timezone.32
LOAD sys/write.32
LOAD sys/wsbe.32
LOAD sys/yield.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD arch/i386/hal.32
LOAD arch/i386/pic.32
LOAD arch/i386/rtc.32
LOAD arch/i386/vga.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/helper.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndcard.32
LOAD hal/sound/sndport.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskctrl/satabus.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/diskphys/sata.32
LOAD hw/diskphys/satapi.32
LOAD hw/intctrl/apic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD arch/i386/avx.32
LOAD arch/i386/interrupt.32
LOAD arch/i386/rdrand.32
LOAD arch/i386/sse.32
LOAD arch/i386/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libsoftfp.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e65a
 *(.text)
 .text          0x00000000c0000000       0x20 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .text          0x00000000c0000020        0x0 crti.32
 .text          0x00000000c0000020      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000121        0xf 
 .text          0x00000000c0000130      0x24f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000130                manualPCIProbe
                0x00000000c000017b                prepareTramp
                0x00000000c0000194                doTPAUSE
                0x00000000c000019e                hasLegacyFPU
                0x00000000c00001c3                is486
                0x00000000c00001f9                detectCPUID
                0x00000000c000020f                goToVM86
                0x00000000c000023f                goToUsermode
                0x00000000c0000269                switchToThreadASMFirstTime
                0x00000000c0000277                switchToThreadASM
                0x00000000c00002fc                asmQuickAcquireLock
                0x00000000c000031a                asmQuickReleaseLock
                0x00000000c0000326                asmAcquireLock
                0x00000000c0000347                asmReleaseLock
                0x00000000c000035a                loadGDT
                0x00000000c000037a                memcpy
 *fill*         0x00000000c000037f        0x1 
 .text          0x00000000c0000380      0x923 acpica/utclib.32
                0x00000000c0000380                memcmp
                0x00000000c00003d0                memmove
                0x00000000c0000580                memset
                0x00000000c0000620                strlen
                0x00000000c0000650                strpbrk
                0x00000000c00006a0                strtok
                0x00000000c0000720                strcpy
                0x00000000c0000750                strncpy
                0x00000000c0000840                strcmp
                0x00000000c0000890                strchr
                0x00000000c00008d0                strncmp
                0x00000000c0000930                strcat
                0x00000000c0000960                strncat
                0x00000000c00009c0                strstr
                0x00000000c0000a20                toupper
                0x00000000c0000a40                tolower
                0x00000000c0000a60                simple_strtoul
 .text          0x00000000c0000ca3      0xfb1 core/malloc.32
                0x00000000c0000e0e                dlfree
                0x00000000c000116c                dlmalloc
                0x00000000c00016a9                dlrealloc
                0x00000000c000184d                dlmemalign
                0x00000000c0001970                dlcalloc
                0x00000000c0001a0a                dlcfree
                0x00000000c0001a0f                dlindependent_calloc
                0x00000000c0001a34                dlindependent_comalloc
                0x00000000c0001a4b                dlvalloc
                0x00000000c0001a76                dlpvalloc
                0x00000000c0001aac                dlmalloc_trim
                0x00000000c0001ab9                dlmalloc_usable_size
                0x00000000c0001aea                dlmallinfo
                0x00000000c0001bb9                dlmalloc_stats
                0x00000000c0001bca                dlmallopt
 .text          0x00000000c0001c54      0x224 libk/ctype.32
                0x00000000c0001c54                isblank
                0x00000000c0001c74                iscntrl
                0x00000000c0001c94                isdigit
                0x00000000c0001cb0                islower
                0x00000000c0001ccc                isspace
                0x00000000c0001cf4                isupper
                0x00000000c0001d10                isalpha
                0x00000000c0001d48                isalnum
                0x00000000c0001d80                ispunct
                0x00000000c0001dc8                isgraph
                0x00000000c0001e00                isprint
                0x00000000c0001e30                isxdigit
 .text          0x00000000c0001e78        0x0 libk/string.32
 .text          0x00000000c0001e78       0x51 fs/fat/diskio.32
                0x00000000c0001e78                disk_status
                0x00000000c0001e7b                disk_initialize
                0x00000000c0001e7e                disk_read
                0x00000000c0001e94                disk_write
                0x00000000c0001eaa                disk_ioctl
 .text          0x00000000c0001ec9     0x3d37 fs/fat/ff.32
                0x00000000c0003c4b                f_mount
                0x00000000c0003cad                f_open
                0x00000000c0003f77                f_read
                0x00000000c0004153                f_write
                0x00000000c0004386                f_sync
                0x00000000c000443d                f_close
                0x00000000c000446c                f_lseek
                0x00000000c0004612                f_opendir
                0x00000000c00046dd                f_closedir
                0x00000000c00046ff                f_readdir
                0x00000000c0004791                f_stat
                0x00000000c0004810                f_getfree
                0x00000000c0004914                f_truncate
                0x00000000c00049f8                f_unlink
                0x00000000c0004b16                f_mkdir
                0x00000000c0004cb1                f_rename
                0x00000000c0004e69                f_chmod
                0x00000000c0004f1b                f_utime
                0x00000000c0004fc9                f_getlabel
                0x00000000c000511d                f_setlabel
                0x00000000c00052ad                f_expand
                0x00000000c000540b                f_mkfs
 .text          0x00000000c0005c00       0x28 fs/fat/ffsystem.32
                0x00000000c0005c00                ff_memalloc
                0x00000000c0005c14                ff_memfree
 .text          0x00000000c0005c28      0x2dc fs/fat/ffunicode.32
                0x00000000c0005c28                ff_uni2oem
                0x00000000c0005cc4                ff_oem2uni
                0x00000000c0005d3c                ff_wtoupper
 .text          0x00000000c0005f04      0xd13 fs/iso9660/iso9660.32
                0x00000000c0006137                isoReadDiscSector
                0x00000000c00061d2                strnicmp
                0x00000000c0006476                stricmp
                0x00000000c00064c2                iso_open
                0x00000000c000654a                iso_close
                0x00000000c0006568                iso_read
                0x00000000c000667e                iso_seek
                0x00000000c0006702                iso_tell
                0x00000000c0006733                iso_total
                0x00000000c000675e                fn_postprocess
                0x00000000c0006784                iso_readdir
                0x00000000c00069e2                iso_reset
                0x00000000c00069ff                init_percd
                0x00000000c0006af9                iso_ioctl
                0x00000000c0006b11                fs_iso9660_init
                0x00000000c0006ba7                fs_iso9660_shutdown
 *fill*         0x00000000c0006c17        0x1 
 .text          0x00000000c0006c18      0x741 core/computer.32
                0x00000000c0006c18                Computer::close(int, int, void*)
                0x00000000c0006c72                Krnl::firstTask()
                0x00000000c0006df6                Computer::Computer()
                0x00000000c0006df6                Computer::Computer()
                0x00000000c0006eaa                Computer::setBootMessage(char const*)
                0x00000000c0006eac                Computer::detectFeatures()
                0x00000000c00070be                Computer::displayFeatures()
                0x00000000c00070c0                Computer::rdmsr(unsigned int)
                0x00000000c00070e8                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000712c                Computer::shutdown()
                0x00000000c0007152                Computer::restart()
                0x00000000c000717a                Computer::sleep()
                0x00000000c000718e                Computer::nmiEnabled()
                0x00000000c000719a                Computer::readCMOS(unsigned char)
                0x00000000c00071b6                Computer::enableNMI(bool)
                0x00000000c00071d0                Computer::open(int, int, void*)
                0x00000000c00072ae                Computer::disableNMI()
                0x00000000c00072c8                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c00072e8                Computer::handleNMI()
 *fill*         0x00000000c0007359        0x1 
 .text          0x00000000c000735a      0x1c7 core/gdt.32
                0x00000000c000735a                GDTEntry::setBase(unsigned int)
                0x00000000c0007376                GDTEntry::setLimit(unsigned int)
                0x00000000c0007392                GDT::GDT()
                0x00000000c0007392                GDT::GDT()
                0x00000000c00073a8                GDT::addEntry(GDTEntry)
                0x00000000c00073c4                GDT::getNumberOfEntries()
                0x00000000c00073cc                GDT::flush()
                0x00000000c00073ee                GDT::setup()
 .text          0x00000000c0007521       0x1d core/idle.32
                0x00000000c0007521                idleFunction(void*)
 *fill*         0x00000000c000753e        0x2 
 .text          0x00000000c0007540      0x462 core/idt.32
                0x00000000c0007540                IDTEntry::IDTEntry(bool)
                0x00000000c0007540                IDTEntry::IDTEntry(bool)
                0x00000000c00075b8                IDTEntry::setOffset(unsigned int)
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075cc                IDT::IDT()
                0x00000000c00075ce                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c00075d6                IDT::addEntry(IDTEntry, int)
                0x00000000c00075ea                IDT::addEntry(int, void (*)(), bool)
                0x00000000c0007622                IDT::flush()
                0x00000000c000763c                IDT::setup()
 .text          0x00000000c00079a2      0x1c3 core/kheap.32
                0x00000000c00079a2                sbrk
                0x00000000c0007a3b                mmap
                0x00000000c0007a53                munmap
                0x00000000c0007a6b                liballoc_lock()
                0x00000000c0007a78                liballoc_unlock()
                0x00000000c0007a8c                liballoc_alloc(int)
                0x00000000c0007ab0                liballoc_free(void*, int)
                0x00000000c0007ad1                realloc
                0x00000000c0007aec                malloc
                0x00000000c0007aff                free
                0x00000000c0007b12                rfree
                0x00000000c0007b25                calloc
 .text          0x00000000c0007b65       0xd4 core/main.32
                0x00000000c0007b65                KeEntryPoint
 *fill*         0x00000000c0007c39        0x7 
 .text          0x00000000c0007c40      0x602 core/physmgr.32
                0x00000000c0007c40                Phys::allocateDMA(unsigned long)
                0x00000000c0007d13                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c0007d46                Phys::setPageState(unsigned long, bool)
                0x00000000c0007d79                Phys::getPageState(unsigned long)
                0x00000000c0007d94                Phys::freePage(unsigned long)
                0x00000000c0007dfc                Phys::allocatePage()
                0x00000000c0007ebc                Phys::allocateContiguousPages(int)
                0x00000000c0007f18                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c0007f5a                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c0008242      0x267 core/pipe.32
                0x00000000c0008242                Pipe::isAtty()
                0x00000000c0008246                Pipe::~Pipe()
                0x00000000c0008246                Pipe::~Pipe()
                0x00000000c0008266                Pipe::~Pipe()
                0x00000000c000828e                Pipe::write(unsigned long long, void*, int*)
                0x00000000c0008352                Pipe::read(unsigned long long, void*, int*)
                0x00000000c0008444                Pipe::Pipe(int)
                0x00000000c0008444                Pipe::Pipe(int)
 *fill*         0x00000000c00084a9        0x1 
 .text          0x00000000c00084aa      0xabe core/terminal.32
                0x00000000c00084aa                VgaText::isAtty()
                0x00000000c00084ae                VgaText::~VgaText()
                0x00000000c00084ae                VgaText::~VgaText()
                0x00000000c00084ce                VgaText::~VgaText()
                0x00000000c00084f6                VgaText::read(unsigned long long, void*, int*)
                0x00000000c0008516                setTerminalScrollLock(bool)
                0x00000000c0008517                doTerminalCycle()
                0x00000000c0008518                addToTerminalCycle(VgaText*)
                0x00000000c0008519                scrollTerminalScrollLock(int)
                0x00000000c000851a                VgaText::updateTitle()
                0x00000000c000851c                VgaText::load()
                0x00000000c000851e                VgaText::updateCursor()
                0x00000000c0008534                VgaText::doANSI_SGR(int)
                0x00000000c00085a8                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00085b8                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00085c8                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00085e8                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00085f4                VgaText::setTitleColour(VgaColour)
                0x00000000c0008600                VgaText::setTitle(char*)
                0x00000000c0008602                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0008614                VgaText::scrollScreen()
                0x00000000c00086a6                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00086b6                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0008746                VgaText::getCursorX()
                0x00000000c000874e                VgaText::getCursorY()
                0x00000000c0008756                VgaText::setCursor(int, int)
                0x00000000c000876d                setActiveTerminal(VgaText*)
                0x00000000c00087b8                VgaText::clearScreen()
                0x00000000c0008806                VgaText::setCursorX(int)
                0x00000000c000881e                VgaText::setCursorY(int)
                0x00000000c0008836                VgaText::incrementCursor(bool)
                0x00000000c0008892                VgaText::decrementCursor(bool)
                0x00000000c00088b4                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0008980                VgaText::putchar(char)
                0x00000000c0008a6c                VgaText::putx(unsigned int)
                0x00000000c0008ab2                VgaText::puts(char const*)
                0x00000000c0008ad8                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0008b24                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0008c6e                VgaText::VgaText(char const*)
                0x00000000c0008c6e                VgaText::VgaText(char const*)
                0x00000000c0008de4                VgaText::receiveKey(unsigned char)
                0x00000000c0008f42                VgaText::doUpdate()
                0x00000000c0008f43                newTerminal(char*)
 .text          0x00000000c0008f68      0x1ae core/tss.32
                0x00000000c0008f68                TSS::TSS()
                0x00000000c0008f68                TSS::TSS()
                0x00000000c0008f78                TSS::setESP(unsigned long)
                0x00000000c0008f8c                TSS::flush()
                0x00000000c0008fb0                TSS::setup(unsigned long, unsigned long)
 .text          0x00000000c0009116      0x496 core/unixfile.32
                0x00000000c0009116                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000916c                ReservedFilename::isAtty()
                0x00000000c0009188                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00091e6                UnixFile::getFileDescriptor()
                0x00000000c00091ee                UnixFile::UnixFile(int)
                0x00000000c00091ee                UnixFile::UnixFile(int)
                0x00000000c0009382                ReservedFilename::ReservedFilename(int)
                0x00000000c0009382                ReservedFilename::ReservedFilename(int)
                0x00000000c00093b4                UnixFile::~UnixFile()
                0x00000000c00093b4                UnixFile::~UnixFile()
                0x00000000c0009440                UnixFile::~UnixFile()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c0009468                ReservedFilename::~ReservedFilename()
                0x00000000c0009488                ReservedFilename::~ReservedFilename()
                0x00000000c00094af                getFromFileDescriptor(int)
 *fill*         0x00000000c00095ac        0x4 
 .text          0x00000000c00095b0     0x134c core/virtmgr.32
                0x00000000c00095b0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00095e9                Virt::getPageState(unsigned long)
                0x00000000c0009610                Virt::allocateKernelVirtualPages(int)
                0x00000000c000972b                Virt::freeSwapfilePage(unsigned long)
                0x00000000c0009749                Virt::swapIDToSector(unsigned long)
                0x00000000c000975f                Virt::allocateSwapfilePage()
                0x00000000c00097d8                Virt::virtualMemorySetup()
                0x00000000c0009832                Virt::setupPageSwapping(int)
                0x00000000c00098b4                VAS::VAS(VAS*)
                0x00000000c00098b4                VAS::VAS(VAS*)
                0x00000000c00098de                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000990a                VAS::getPageTableEntry(unsigned long)
                0x00000000c0009929                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0009a3e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0009a64                VAS::virtualToPhysical(unsigned long)
                0x00000000c0009a86                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c0009ad2                VAS::VAS()
                0x00000000c0009ad2                VAS::VAS()
                0x00000000c0009b54                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c0009b9e                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c0009bc8                VAS::~VAS()
                0x00000000c0009bc8                VAS::~VAS()
                0x00000000c0009d32                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0009e66                VAS::allocatePages(int, int)
                0x00000000c000a044                VAS::setCPUSpecific(unsigned long)
                0x00000000c000a072                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000a140                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000a266                VAS::VAS(bool)
                0x00000000c000a266                VAS::VAS(bool)
                0x00000000c000a4ea                VAS::evict(unsigned long)
                0x00000000c000a5ba                VAS::tryLoadBackOffDisk(unsigned long)
                0x00000000c000a6e4                VAS::scanForEviction()
                0x00000000c000a7cc                mapVASFirstTime
 .text          0x00000000c000a8fc       0x5f coreobjs/c++.32
                0x00000000c000a8fc                __cxa_atexit
                0x00000000c000a8ff                __cxa_finalize
                0x00000000c000a900                __stack_chk_fail
                0x00000000c000a936                __cxa_pure_virtual
                0x00000000c000a947                operator new[](unsigned long)
                0x00000000c000a94c                operator delete(void*, unsigned long)
                0x00000000c000a951                operator delete[](void*)
                0x00000000c000a956                operator delete[](void*, unsigned long)
 .text          0x00000000c000a95b      0x259 dbg/kconsole.32
                0x00000000c000a95b                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000a9cd                Dbg::logc(char)
                0x00000000c000a9ed                Dbg::logs(char*)
                0x00000000c000aa0f                Dbg::logWriteInt(unsigned int)
                0x00000000c000aa3b                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000aa66                Dbg::kprintf(char const*, ...)
 .text          0x00000000c000abb4      0xc46 fs/vfs.32
                0x00000000c000abb4                File::read(unsigned long long, void*, int*)
                0x00000000c000ac0c                File::write(unsigned long long, void*, int*)
                0x00000000c000ac64                Directory::read(unsigned long long, void*, int*)
                0x00000000c000acbc                Directory::write(unsigned long long, void*, int*)
                0x00000000c000acea                File::isAtty()
                0x00000000c000acee                Directory::isAtty()
                0x00000000c000acf2                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000acf8                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000acfe                Filesystem::allocateSwapfile(char const*, int)
                0x00000000c000ad04                File::~File()
                0x00000000c000ad04                File::~File()
                0x00000000c000ad24                File::~File()
                0x00000000c000ad4c                Directory::~Directory()
                0x00000000c000ad4c                Directory::~Directory()
                0x00000000c000ad6c                Directory::~Directory()
                0x00000000c000ad94                Filesystem::Filesystem()
                0x00000000c000ad94                Filesystem::Filesystem()
                0x00000000c000adb8                Filesystem::~Filesystem()
                0x00000000c000adb8                Filesystem::~Filesystem()
                0x00000000c000adc6                Filesystem::~Filesystem()
                0x00000000c000aded                Fs::getcwd(Process*, char*, int)
                0x00000000c000ae17                Fs::initVFS()
                0x00000000c000ae41                Fs::standardiseFiles(char*, char const*, char const*)
                0x00000000c000afe8                File::File(char const*, Process*)
                0x00000000c000afe8                File::File(char const*, Process*)
                0x00000000c000b0a6                File::open(FileOpenMode)
                0x00000000c000b104                File::close()
                0x00000000c000b164                File::seek(unsigned long long)
                0x00000000c000b1ba                File::tell(unsigned long long*)
                0x00000000c000b20a                File::rewind()
                0x00000000c000b21e                File::unlink()
                0x00000000c000b26a                File::rename(char const*)
                0x00000000c000b2b8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000b30e                File::exists()
                0x00000000c000b34c                File::stat(unsigned long long*, bool*)
                0x00000000c000b3ad                Fs::setcwd(Process*, char*)
                0x00000000c000b50a                Directory::Directory(char const*, Process*)
                0x00000000c000b50a                Directory::Directory(char const*, Process*)
                0x00000000c000b5c8                Directory::open()
                0x00000000c000b624                Directory::close()
                0x00000000c000b684                Directory::unlink()
                0x00000000c000b6d0                Directory::rename(char const*)
                0x00000000c000b71e                Directory::exists()
                0x00000000c000b75c                Directory::read(dirent*)
                0x00000000c000b7a8                Directory::create()
                0x00000000c000b7f4                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 *fill*         0x00000000c000b7fa        0x2 
 .text          0x00000000c000b7fc       0x7f hal/bus.32
                0x00000000c000b7fc                Bus::Bus(char const*)
                0x00000000c000b7fc                Bus::Bus(char const*)
                0x00000000c000b834                Bus::~Bus()
                0x00000000c000b834                Bus::~Bus()
                0x00000000c000b854                Bus::~Bus()
 .text          0x00000000c000b87b       0x99 hal/buzzer.32
                0x00000000c000b87b                beepThread(void*)
                0x00000000c000b8b8                Krnl::beep(int, int, bool)
 .text          0x00000000c000b914      0x49b hal/clock.32
                0x00000000c000b914                User::loadClockSettings(int)
                0x00000000c000b966                Clock::Clock(char const*)
                0x00000000c000b966                Clock::Clock(char const*)
                0x00000000c000b99c                Clock::~Clock()
                0x00000000c000b99c                Clock::~Clock()
                0x00000000c000b9bc                Clock::~Clock()
                0x00000000c000b9e4                Clock::timeInSecondsLocal()
                0x00000000c000ba4c                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000baaf                datetimeToSeconds(datetime_t)
                0x00000000c000bbce                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000bc41                secondsToDatetime(unsigned long long)
                0x00000000c000bd8a                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000bdaf        0x1 
 .text          0x00000000c000bdb0      0x460 hal/device.32
                0x00000000c000bdb0                Device::hibernate()
                0x00000000c000bdb2                Device::wake()
                0x00000000c000bdb4                Device::detect()
                0x00000000c000bdb6                Device::disableLegacy()
                0x00000000c000bdb8                Device::powerSaving(PowerSavingLevel)
                0x00000000c000bdba                DriverlessDevice::close(int, int, void*)
                0x00000000c000bdbe                DriverlessDevice::detect()
                0x00000000c000bdc0                DriverlessDevice::open(int, int, void*)
                0x00000000c000bdd4                Device::~Device()
                0x00000000c000bdd4                Device::~Device()
                0x00000000c000bde2                Device::~Device()
                0x00000000c000be0a                Device::findAndLoadDriver()
                0x00000000c000be18                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c000be3e                Device::preOpenACPI(void*, char*, char*)
                0x00000000c000be7e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000bea6                Device::getParent()
                0x00000000c000beb2                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000bed0                Device::addChild(Device*)
                0x00000000c000bf14                Device::removeAllChildren()
                0x00000000c000bf5a                Device::hibernateAll()
                0x00000000c000bf8a                Device::wakeAll()
                0x00000000c000bfba                Device::detectAll()
                0x00000000c000bfea                Device::disableLegacyAll()
                0x00000000c000bfec                Device::loadDriversForAll()
                0x00000000c000bfee                Device::closeAll()
                0x00000000c000c024                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c000c05a                Device::setName(char const*)
                0x00000000c000c068                Device::Device(char const*)
                0x00000000c000c068                Device::Device(char const*)
                0x00000000c000c162                Device::getName()
                0x00000000c000c16c                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c16c                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c000c1a2                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c000c1e6                getDevicesOfType(DeviceType)
 .text          0x00000000c000c210       0x7f hal/diskctrl.32
                0x00000000c000c210                HardDiskController::HardDiskController(char const*)
                0x00000000c000c210                HardDiskController::HardDiskController(char const*)
                0x00000000c000c248                HardDiskController::~HardDiskController()
                0x00000000c000c248                HardDiskController::~HardDiskController()
                0x00000000c000c268                HardDiskController::~HardDiskController()
 *fill*         0x00000000c000c28f        0x1 
 .text          0x00000000c000c290       0xdb hal/diskphys.32
                0x00000000c000c290                PhysicalDisk::eject()
                0x00000000c000c294                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c294                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c000c2fc                PhysicalDisk::startCache()
                0x00000000c000c324                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c324                PhysicalDisk::~PhysicalDisk()
                0x00000000c000c344                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c000c36b        0x0 hal/fpu.32
 *fill*         0x00000000c000c36b        0x5 
 .text          0x00000000c000c370      0x331 hal/intctrl.32
                0x00000000c000c370                int_handler
                0x00000000c000c3eb                installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c000c434                installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c000c574                uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c000c5a8                uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c000c616                setupINTS()
                0x00000000c000c663                convertLegacyIRQNumber(int)
 *fill*         0x00000000c000c6a1        0x1 
 .text          0x00000000c000c6a2      0x81d hal/keybrd.32
                0x00000000c000c6a2                startGUI(void*)
                0x00000000c000c711                startGUIVESA(void*)
                0x00000000c000c780                sendKeyToTerminal(unsigned char)
                0x00000000c000c846                sendKeyboardToken(KeyboardToken)
                0x00000000c000ccc3                clearInternalKeybuffer(VgaText*)
                0x00000000c000ccf9                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c000ce3c                Keyboard::Keyboard(char const*)
                0x00000000c000ce3c                Keyboard::Keyboard(char const*)
                0x00000000c000ce78                Keyboard::~Keyboard()
                0x00000000c000ce78                Keyboard::~Keyboard()
                0x00000000c000ce98                Keyboard::~Keyboard()
 *fill*         0x00000000c000cebf        0x1 
 .text          0x00000000c000cec0      0x41e hal/logidisk.32
                0x00000000c000cec0                LogicalDisk::close(int, int, void*)
                0x00000000c000cec4                LogicalDisk::~LogicalDisk()
                0x00000000c000cec4                LogicalDisk::~LogicalDisk()
                0x00000000c000cee4                LogicalDisk::~LogicalDisk()
                0x00000000c000cf0c                LogicalDisk::open(int, int, void*)
                0x00000000c000cf20                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c000cf72                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c000cfb8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000cfb8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d07a                LogicalDisk::assignDriveLetter()
                0x00000000c000d136                LogicalDisk::mount()
                0x00000000c000d17e                LogicalDisk::unmount()
                0x00000000c000d18e                LogicalDisk::eject()
                0x00000000c000d1a2                LogicalDisk::unassignDriveLetter()
                0x00000000c000d206                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c000d272                LogicalDisk::write(unsigned long long, int, void*)
 *fill*         0x00000000c000d2de        0x2 
 .text          0x00000000c000d2e0       0x7f hal/mouse.32
                0x00000000c000d2e0                Mouse::Mouse(char const*)
                0x00000000c000d2e0                Mouse::Mouse(char const*)
                0x00000000c000d318                Mouse::~Mouse()
                0x00000000c000d318                Mouse::~Mouse()
                0x00000000c000d338                Mouse::~Mouse()
 *fill*         0x00000000c000d35f        0x1 
 .text          0x00000000c000d360       0x89 hal/nic.32
                0x00000000c000d360                NIC::getMAC()
                0x00000000c000d366                NIC::write(int, unsigned char*, int*)
                0x00000000c000d36c                NIC::NIC(char const*)
                0x00000000c000d36c                NIC::NIC(char const*)
                0x00000000c000d3a2                NIC::~NIC()
                0x00000000c000d3a2                NIC::~NIC()
                0x00000000c000d3c2                NIC::~NIC()
 .text          0x00000000c000d3e9      0x34a hal/partition.32
                0x00000000c000d3e9                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c000d491                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c000d733        0x1 
 .text          0x00000000c000d734       0x7f hal/serial.32
                0x00000000c000d734                Serial::Serial(char const*)
                0x00000000c000d734                Serial::Serial(char const*)
                0x00000000c000d76c                Serial::~Serial()
                0x00000000c000d76c                Serial::~Serial()
                0x00000000c000d78c                Serial::~Serial()
 *fill*         0x00000000c000d7b3        0x1 
 .text          0x00000000c000d7b4      0x22c hal/timer.32
                0x00000000c000d7b4                Timer::Timer(char const*)
                0x00000000c000d7b4                Timer::Timer(char const*)
                0x00000000c000d7ec                Timer::~Timer()
                0x00000000c000d7ec                Timer::~Timer()
                0x00000000c000d80c                Timer::~Timer()
                0x00000000c000d834                Timer::read()
                0x00000000c000d83f                setupTimer(int)
                0x00000000c000d87a                timerHandler(unsigned int)
 .text          0x00000000c000d9e0      0x404 hal/vcache.32
                0x00000000c000d9e0                VCache::VCache(PhysicalDisk*)
                0x00000000c000d9e0                VCache::VCache(PhysicalDisk*)
                0x00000000c000db40                VCache::invalidateReadBuffer()
                0x00000000c000db50                VCache::writeWriteBuffer()
                0x00000000c000db9c                VCache::~VCache()
                0x00000000c000db9c                VCache::~VCache()
                0x00000000c000dbe8                VCache::~VCache()
                0x00000000c000dc10                VCache::write(unsigned long long, int, void*)
                0x00000000c000dcfa                VCache::read(unsigned long long, int, void*)
 .text          0x00000000c000dde4      0x4d1 hal/video.32
                0x00000000c000dde4                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c000de30                Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
                0x00000000c000dea0                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c000df30                Video::clearScreen(unsigned int)
                0x00000000c000df64                Video::putpixel(int, int, unsigned int)
                0x00000000c000df72                Video::readPixelApprox(int, int)
                0x00000000c000df86                Video::Video(char const*)
                0x00000000c000df86                Video::Video(char const*)
                0x00000000c000dfbc                Video::~Video()
                0x00000000c000dfbc                Video::~Video()
                0x00000000c000dfdc                Video::~Video()
                0x00000000c000e004                Video::isMonochrome()
                0x00000000c000e010                Video::getWidth()
                0x00000000c000e01c                Video::getHeight()
                0x00000000c000e028                Video::drawCursor(int, int, unsigned int*, int)
                0x00000000c000e0e4                Video::tgaParse(unsigned char*, int, int*, int*)
                0x00000000c000e24a                Video::putTGA(int, int, unsigned char*, int)
 *fill*         0x00000000c000e2b5        0x3 
 .text          0x00000000c000e2b8     0x1305 hw/acpi.32
                0x00000000c000e2b8                ACPI::close(int, int, void*)
                0x00000000c000e368                findRSDP()
                0x00000000c000e400                loadACPITables(unsigned char*)
                0x00000000c000e684                findRSDT(unsigned char*)
                0x00000000c000e7f0                findDataTable(unsigned char*, char*)
                0x00000000c000e870                scanMADT()
                0x00000000c000ed38                ACPI::ACPI()
                0x00000000c000ed38                ACPI::ACPI()
                0x00000000c000ed8c                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c000ee70                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c000ef38                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c000ef40                ACPI::detectPCI()
                0x00000000c000f148                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c000f194                ACPI::sleep()
                0x00000000c000f1b0                ACPI::open(int, int, void*)
 *fill*         0x00000000c000f5bd        0x1 
 .text          0x00000000c000f5be      0xb75 hw/cpu.32
                0x00000000c000f5be                CPU::close(int, int, void*)
                0x00000000c000f5c2                CPU::AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, CPU::REGS*)
                0x00000000c000f5de                CPU::AMD_K6_read_msr(unsigned int, CPU::REGS*)
                0x00000000c000f5f6                CPU::AMD_K6_writeback(int, int, int)
                0x00000000c000f66a                CPU::cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c000f6ee                CPU::cpuidCheckEDX(unsigned int)
                0x00000000c000f71c                CPU::cpuidCheckECX(unsigned int)
                0x00000000c000f74a                CPU::cpuidCheckExtendedEBX(unsigned int)
                0x00000000c000f778                CPU::cpuidCheckExtendedECX(unsigned int)
                0x00000000c000f7a6                CPU::CPU()
                0x00000000c000f7a6                CPU::CPU()
                0x00000000c000f828                CPU::displayFeatures()
                0x00000000c000f82a                CPU::detectFeatures()
                0x00000000c000fece                CPU::setupSMEP()
                0x00000000c000feda                CPU::setupUMIP()
                0x00000000c000fee4                CPU::setupTSC()
                0x00000000c000feee                CPU::setupLargePages()
                0x00000000c000fef8                CPU::setupPAT()
                0x00000000c000ff40                CPU::setupMTRR()
                0x00000000c000ff42                CPU::setupGlobalPages()
                0x00000000c000ff4c                CPU::allowUsermodeDataAccess()
                0x00000000c000ff5e                CPU::prohibitUsermodeDataAccess()
                0x00000000c000ff70                CPU::setupSMAP()
                0x00000000c000ff7e                CPU::setupFeatures()
                0x00000000c001004a                CPU::open(int, int, void*)
 .text          0x00000000c0010133       0xd1 krnl/bootmsg.32
                0x00000000c0010133                KeDisplaySplashScreen()
                0x00000000c00101a1                KeSetBootMessage(char const*)
 .text          0x00000000c0010204      0x57d krnl/env.32
                0x00000000c0010204                EnvVarContainer::getEnv(char const*)
                0x00000000c0010242                EnvVarContainer::setEnv(char const*, char const*)
                0x00000000c0010304                EnvVarContainer::deleteEnv(char const*)
                0x00000000c0010306                EnvVarContainer::loadFrom(char const*, char const*)
                0x00000000c00104ec                EnvVarContainer::__loadSystem()
                0x00000000c0010506                EnvVarContainer::__loadUser()
                0x00000000c0010508                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c0010508                EnvVarContainer::EnvVarContainer(Process*)
                0x00000000c001052a                EnvVarContainer::~EnvVarContainer()
                0x00000000c001052a                EnvVarContainer::~EnvVarContainer()
                0x00000000c0010556                Krnl::getEnv(Process*, char const*)
                0x00000000c00105bb                Krnl::setEnvSystem(char const*, char const*)
                0x00000000c00105d5                Krnl::setEnvUser(char const*, char const*)
                0x00000000c00105f4                Krnl::setEnvProcess(Process*, char const*, char const*)
                0x00000000c0010607                Krnl::deleteEnvSystem(char const*)
                0x00000000c0010608                Krnl::deleteEnvUser(char const*)
                0x00000000c0010609                Krnl::deleteEnvProcess(Process*, char const*)
                0x00000000c001060a                Krnl::newProcessEnv(Process*)
                0x00000000c001062c                Krnl::copyProcessEnv(Process*, Process*)
                0x00000000c0010678                Krnl::loadSystemEnv()
                0x00000000c00106a6                Krnl::loadUserEnv()
                0x00000000c00106cc                Krnl::flushEnv()
                0x00000000c00106cd                Krnl::getProcessTotalEnvCount(Process*)
                0x00000000c00106ed                Krnl::getProcessEnvPair(Process*, int)
 .text          0x00000000c0010781       0x94 krnl/inlines.32
                0x00000000c0010781                CPU::current()
                0x00000000c001078d                operator new(unsigned long)
                0x00000000c0010792                operator delete(void*)
                0x00000000c0010797                disableIRQs()
                0x00000000c0010799                enableIRQs()
                0x00000000c001079b                lockScheduler()
                0x00000000c00107a3                unlockScheduler()
                0x00000000c00107b2                lockStuff()
                0x00000000c00107c0                unlockStuff()
                0x00000000c00107fa                Virt::getAKernelVAS()
                0x00000000c0010800                __not_memcpy
 .text          0x00000000c0010815        0xc krnl/panic.32
                0x00000000c0010815                KePanic(char const*)
 .text          0x00000000c0010821      0x142 krnl/powctrl.32
                0x00000000c0010821                Krnl::powerThread(void*)
                0x00000000c001084f                Krnl::changePowerSettings(Krnl::PowerSettings)
                0x00000000c0010865                Krnl::userIOReceived()
                0x00000000c0010870                Krnl::handlePowerButton()
                0x00000000c00108a5                Krnl::handleSleepButton()
                0x00000000c00108da                Krnl::setupPowerManager()
 .text          0x00000000c0010963       0x9e krnl/random.32
                0x00000000c0010963                KeRand()
                0x00000000c00109a6                KeSeedRand(unsigned int)
                0x00000000c00109cf                KeInitRand()
 *fill*         0x00000000c0010a01        0x3 
 .text          0x00000000c0010a04      0x190 krnl/resolve.32
                0x00000000c0010a04                KeResolveCompatibilitySymbol(char*)
 .text          0x00000000c0010b94      0x315 krnl/signal.32
                0x00000000c0010b94                KiSigKill(int)
                0x00000000c0010ba8                KiDefaultSignalHandlerIgnore(int)
                0x00000000c0010ba9                KiDefaultSignalHandlerPause(int)
                0x00000000c0010bd5                KiDefaultSignalHandlerResume(int)
                0x00000000c0010c01                KeDeinitSignals(SigHandlerBlock*)
                0x00000000c0010c06                KeInitSignals()
                0x00000000c0010c51                KeRegisterSignalHandler(SigHandlerBlock*, int, void (*)(int), unsigned int, int)
                0x00000000c0010c87                KeRaiseSignal(SigHandlerBlock*, int)
                0x00000000c0010d04                KeCheckSignal(SigHandlerBlock*, int*)
                0x00000000c0010df5                KiCheckSignalZ
                0x00000000c0010e37                KeCompleteSignal(SigHandlerBlock*, int)
                0x00000000c0010e72                KiFinishSignalZ
 .text          0x00000000c0010ea9      0xdb4 krnl/syscalls.32
                0x00000000c0010ea9                SysSeekDir(regs*)
                0x00000000c0010eae                SysTellDir(regs*)
                0x00000000c0010eb3                SysVerify(regs*)
                0x00000000c0010ebd                SysGetArgc(regs*)
                0x00000000c0010ecd                SysTTYName(regs*)
                0x00000000c0010ed5                SysFormatDisk(regs*)
                0x00000000c0010f44                SysSetDiskVolumeLabel(regs*)
                0x00000000c0010fae                SysGetDiskVolumeLabel(regs*)
                0x00000000c001102f                SysShutdown(regs*)
                0x00000000c00110df                SysRealpath(regs*)
                0x00000000c0011130                SysReadDir(regs*)
                0x00000000c00111b4                SysIsATTY(regs*)
                0x00000000c0011206                SysSeek(regs*)
                0x00000000c0011273                SysTell(regs*)
                0x00000000c00112df                SysSize(regs*)
                0x00000000c0011353                SysSizeFromFilename(regs*)
                0x00000000c0011423                SysClose(regs*)
                0x00000000c001147f                SysOpenDir(regs*)
                0x00000000c00114f8                SysMakeDir(regs*)
                0x00000000c0011566                SysCloseDir(regs*)
                0x00000000c00115c1                SysWait(regs*)
                0x00000000c00115e6                SysNotImpl(regs*)
                0x00000000c0011603                SysPanic(regs*)
                0x00000000c0011620                SysRmdir(regs*)
                0x00000000c001167e                SysUnlink(regs*)
                0x00000000c00116dc                SysGetArgv(regs*)
                0x00000000c0011728                SysUSleep(regs*)
                0x00000000c001177a                SysSpawn(regs*)
                0x00000000c00117f9                SysGetEnv(regs*)
                0x00000000c00118ca                SysSetFatAttrib(regs*)
                0x00000000c001194d                SysPipe(regs*)
                0x00000000c00119ad                SysGetUnixTime(regs*)
                0x00000000c00119c1                string_ends_with(char const*, char const*)
                0x00000000c0011a1b                SysOpen(regs*)
                0x00000000c0011c1b                KeSystemCall(regs*, void*)
 *fill*         0x00000000c0011c5d        0x3 
 .text          0x00000000c0011c60      0x151 net/ethernet.32
                0x00000000c0011c60                KeSwitchEndian16(unsigned short)
                0x00000000c0011c88                KeSwitchEndian32(unsigned int)
                0x00000000c0011cb8                EthernetCRC32(unsigned char*, int)
                0x00000000c0011d5c                EthernetReceivedPacket(EthernetUnwrappedFrame*, unsigned short)
 .text          0x00000000c0011db1      0xd4b reg/cm.32
                0x00000000c0011db1                CmOpen(char const*)
                0x00000000c0011ecf                CmClose(Reghive_Tag*)
                0x00000000c0011ee5                CmReadExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0011f21                CmGetString(Reghive_Tag*, int, char*)
                0x00000000c0011f98                CmEnterDirectory(Reghive_Tag*, int)
                0x00000000c0011fd7                CmGetNext(Reghive_Tag*, int)
                0x00000000c0012009                CmWriteExtent(Reghive_Tag*, int, unsigned char*)
                0x00000000c0012045                CmFreeExtent(Reghive_Tag*, int)
                0x00000000c001206d                CmUpdateHeader(Reghive_Tag*)
                0x00000000c001208e                CmExpand(Reghive_Tag*, int)
                0x00000000c0012109                CmFindUnusedExtent(Reghive_Tag*)
                0x00000000c001218f                CmCreateExtent(Reghive_Tag*, int, int, unsigned char*)
                0x00000000c0012286                CmSetString(Reghive_Tag*, int, char const*)
                0x00000000c00123c2                CmGetMatch(char*, char*, bool, bool*)
                0x00000000c0012423                CmAddShift(unsigned int*, int*, unsigned char, int)
                0x00000000c0012451                CmGetShift(unsigned int*, int*, int, bool*)
                0x00000000c0012489                CmGetInteger(Reghive_Tag*, int, unsigned long long*)
                0x00000000c00124b0                CmSetInteger(Reghive_Tag*, int, unsigned long long)
                0x00000000c00124f0                CmConvertFromInternalFilename(unsigned char const*, char*)
                0x00000000c0012594                CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
                0x00000000c00125c2                CmConvertToInternalFilename(char const*, unsigned char*)
                0x00000000c001275f                CmCreateString(Reghive_Tag*, int, char const*)
                0x00000000c00127ac                CmFindInDirectory(Reghive_Tag*, int, char const*)
                0x00000000c0012826                CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
                0x00000000c0012879                CmCreateDirectory(Reghive_Tag*, int, char const*)
                0x00000000c001293d                zStrtok(char*, char const*)
                0x00000000c00129a6                CmFindObjectFromPath(Reghive_Tag*, char const*)
                0x00000000c0012a27                CmDisplayTree(Reghive_Tag*, int, int)
                0x00000000c0012aca                CmSplitFinalSlashInPlace(char*)
 .text          0x00000000c0012afc      0x521 reg/registry.32
                0x00000000c0012afc                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0012c6b                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0012dc0                Reg::getLine(char*, char*, char*)
                0x00000000c0012df7                Reg::readInt(char*, char*, int*)
                0x00000000c0012ed3                Reg::readString(char*, char*, char*, int)
                0x00000000c0012f59                Reg::readBool(char*, char*, bool*)
                0x00000000c0012f7e                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0012fb0                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0012fdc                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001301d       0x36 sys/eject.32
                0x00000000c001301d                SysEject(regs*)
 .text          0x00000000c0013053       0x18 sys/exit.32
                0x00000000c0013053                SysExit(regs*)
 .text          0x00000000c001306b       0x1f sys/getcwd.32
                0x00000000c001306b                SysGetCwd(regs*)
 .text          0x00000000c001308a        0xc sys/getpid.32
                0x00000000c001308a                SysGetPID(regs*)
 .text          0x00000000c0013096       0x1a sys/getramdata.32
                0x00000000c0013096                SysGetRAMData(regs*)
 .text          0x00000000c00130b0       0x82 sys/getvgaptr.32
                0x00000000c00130b0                SysGetVGAPtr(regs*)
 *fill*         0x00000000c0013132        0x2 
 .text          0x00000000c0013134       0xbe sys/kill.32
                0x00000000c0013134                SysKill(regs*)
 .text          0x00000000c00131f2       0xa8 sys/loaddll.32
                0x00000000c00131f2                SysLoadDLL(regs*)
 .text          0x00000000c001329a       0x68 sys/read.32
                0x00000000c001329a                SysRead(regs*)
 .text          0x00000000c0013302       0x29 sys/registersignal.32
                0x00000000c0013302                SysRegisterSignal(regs*)
 .text          0x00000000c001332b      0x19c sys/registry.32
                0x00000000c001332b                SysRegistryGetTypeFromPath(regs*)
                0x00000000c00133a2                SysRegistryReadExtent(regs*)
                0x00000000c00133ea                SysRegistryPathToExtentLookup(regs*)
                0x00000000c0013412                SysRegistryEnterDirectory(regs*)
                0x00000000c001343a                SysRegistryGetNext(regs*)
                0x00000000c0013462                SysRegistryGetNameAndTypeFromExtent(regs*)
                0x00000000c001349c                SysRegistryOpen(regs*)
                0x00000000c00134b0                SysRegistryClose(regs*)
 .text          0x00000000c00134c7       0x55 sys/sbrk.32
                0x00000000c00134c7                SysSbrk(regs*)
 .text          0x00000000c001351c       0x1c sys/setcwd.32
                0x00000000c001351c                SysSetCwd(regs*)
 .text          0x00000000c0013538       0xb3 sys/settime.32
                0x00000000c0013538                SysSetTime(regs*)
 .text          0x00000000c00135eb       0x4a sys/timezone.32
                0x00000000c00135eb                SysTimezone(regs*)
 .text          0x00000000c0013635       0x68 sys/write.32
                0x00000000c0013635                SysWrite(regs*)
 .text          0x00000000c001369d       0x62 sys/wsbe.32
                0x00000000c001369d                SysWsbe(regs*)
 .text          0x00000000c00136ff       0x25 sys/yield.32
                0x00000000c00136ff                SysYield(regs*)
 .text          0x00000000c0013724     0x120f thr/elf.32
                0x00000000c0013724                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00139ab                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0013bce                Thr::runtimeReferenceHelper()
                0x00000000c0013be1                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0013c30                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0013ef1                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001463b                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001466d                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00146a4                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00146be                Thr::loadDLL(char const*, bool)
                0x00000000c00148fa                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c0014933        0xd 
 .text          0x00000000c0014940     0x12b7 thr/prcssthr.32
                0x00000000c0014940                userModeEntryPoint(void*)
                0x00000000c0014968                changeTSS
                0x00000000c00149a0                switchToThread(ThreadControlBlock*)
                0x00000000c0014a74                Process::addArgs(char**)
                0x00000000c0014ad8                Process::Process(char const*, Process*, char**)
                0x00000000c0014ad8                Process::Process(char const*, Process*, char**)
                0x00000000c0014cd0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014cd0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0014e90                taskStartupFunction
                0x00000000c0014e9c                Semaphore::Semaphore(int)
                0x00000000c0014e9c                Semaphore::Semaphore(int)
                0x00000000c0014ecc                Mutex::Mutex()
                0x00000000c0014ecc                Mutex::Mutex()
                0x00000000c0014ee8                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0014fec                Process::createUserThread()
                0x00000000c0015018                setupMultitasking(void (*)())
                0x00000000c0015140                schedule()
                0x00000000c00151cc                Semaphore::tryAcquire()
                0x00000000c0015284                Semaphore::assertLocked(char const*)
                0x00000000c00152f4                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001531c                blockTask(TaskState)
                0x00000000c001534c                waitTask(int, int*, int)
                0x00000000c0015394                milliTenthSleepUntil(unsigned int)
                0x00000000c001541c                milliTenthSleep(unsigned int)
                0x00000000c001542c                sleep(unsigned int)
                0x00000000c001543c                Semaphore::acquire()
                0x00000000c00154f0                taskReturned
                0x00000000c0015528                Thr::processFromPID(int)
                0x00000000c00155c8                unblockTask(ThreadControlBlock*)
                0x00000000c001565c                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0015914                cleanerTaskFunction(void*)
                0x00000000c00159f8                terminateTask(int)
                0x00000000c0015abc                Thr::terminateFromIRQ(int)
                0x00000000c0015acc                Semaphore::release()
 .text          0x00000000c0015bf7      0xb88 vm86/vm8086.32
                0x00000000c0015bf7                Vm::inbv(unsigned short)
                0x00000000c0015c0c                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0015c44                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0015c54                Vm::getSegment(unsigned int)
                0x00000000c0015c5c                Vm::getOffset(unsigned int)
                0x00000000c0015c61                Vm::mainloop2()
                0x00000000c0015c9b                Vm::mainVm8086Loop(void*)
                0x00000000c0015cab                Vm::mainloop3(unsigned long)
                0x00000000c0015cd1                Vm::initialise8086()
                0x00000000c0015d14                Vm::finish8086()
                0x00000000c0015d75                Vm::getOutput8086(unsigned char*)
                0x00000000c0015d9a                Vm::start8086FromBuffer(unsigned char*, int, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015e51                Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0015fb4                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0016042                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0016053                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0016065                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0016076                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001608b                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00160a2                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00160b7                Vm::faultHandler(regs*)
 .text          0x00000000c001677f      0xa81 arch/i386/hal.32
                0x00000000c001677f                noCopro(unsigned long)
                0x00000000c0016780                nmiHandler(regs*, void*)
                0x00000000c0016795                doubleFault(regs*, void*)
                0x00000000c00167aa                displayDebugInfo(regs*)
                0x00000000c0016aeb                HalSystemIdle()
                0x00000000c0016b61                displayProgramFault(char const*)
                0x00000000c0016bb9                gpFault(regs*, void*)
                0x00000000c0016c13                pgFault(regs*, void*)
                0x00000000c0016c92                otherISRHandler(regs*, void*)
                0x00000000c0016cbe                opcodeFault(regs*, void*)
                0x00000000c0016d32                i386SaveCoprocessor(void*)
                0x00000000c0016d46                i386LoadCoprocessor(void*)
                0x00000000c0016d5a                x87EmulHandler(regs*, void*)
                0x00000000c0016df7                HalInitialiseCoprocessor()
                0x00000000c0016ebe                HalPanic(char const*)
                0x00000000c0016fb7                HalQueryPerformanceCounter()
                0x00000000c0016fea                HalInitialise()
                0x00000000c0017190                HalMakeBeep(int)
                0x00000000c00171c9                HalGetRand()
                0x00000000c00171cc                HalEndOfInterrupt(int)
                0x00000000c00171fd                HalRestart()
                0x00000000c00171fe                HalShutdown()
                0x00000000c00171ff                HalSleep()
 .text          0x00000000c0017200      0x300 arch/i386/pic.32
                0x00000000c0017200                picIoWait()
                0x00000000c0017208                picDisable()
                0x00000000c0017240                picGetIRQReg(int)
                0x00000000c00172c4                picOpen()
                0x00000000c0017458                picEOI(int)
 .text          0x00000000c0017500      0x681 arch/i386/rtc.32
                0x00000000c0017500                RTC::open(int, int, void*)
                0x00000000c0017504                RTC::close(int, int, void*)
                0x00000000c0017508                RTC::timeInSecondsUTC()
                0x00000000c001751a                RTC::timeInDatetimeUTC()
                0x00000000c0017540                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001757e                RTC::~RTC()
                0x00000000c001757e                RTC::~RTC()
                0x00000000c001759e                RTC::~RTC()
                0x00000000c00175c6                RTC::get_update_in_progress_flag()
                0x00000000c00175de                RTC::completeRTCRefresh()
                0x00000000c00178c2                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c0017a68                rtcIRQHandler(regs*, void*)
                0x00000000c0017ab8                RTC::RTC()
                0x00000000c0017ab8                RTC::RTC()
 *fill*         0x00000000c0017b81        0x3 
 .text          0x00000000c0017b84      0x20a arch/i386/vga.32
                0x00000000c0017b84                HalConsoleScroll(int, int)
                0x00000000c0017c8c                HalConsoleWriteCharacter(char, int, int, int, int)
                0x00000000c0017cf8                HalConsoleCursorUpdate(int, int)
 *fill*         0x00000000c0017d8e        0x2 
 .text          0x00000000c0017d90     0x13e7 fs/fat/vfslink.32
                0x00000000c0017d90                FAT::getName()
                0x00000000c0017d98                FAT::tell(void*, unsigned long long*)
                0x00000000c0017dd4                FAT::stat(void*, unsigned long long*)
                0x00000000c0017e10                FAT::~FAT()
                0x00000000c0017e10                FAT::~FAT()
                0x00000000c0017e30                FAT::~FAT()
                0x00000000c0017e58                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0017f00                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0017fdc                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00181b8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00183d4                FAT::allocateSwapfile(char const*, int)
                0x00000000c00185ac                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0018714                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0018780                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00187ec                FAT::close(void*)
                0x00000000c0018838                FAT::closeDir(void*)
                0x00000000c0018884                FAT::seek(void*, unsigned long long)
                0x00000000c00188dc                fatWrapperReadDisk
                0x00000000c001891c                fatWrapperWriteDisk
                0x00000000c001895c                fatWrapperIoctl
                0x00000000c0018a78                FAT::FAT()
                0x00000000c0018a78                FAT::FAT()
                0x00000000c0018ac8                FAT::fixFilepath(char*)
                0x00000000c0018b04                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0018c34                FAT::openDir(char const*, void**)
                0x00000000c0018ce4                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0018dd8                FAT::unlink(char const*)
                0x00000000c0018e54                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0018fc0                FAT::rename(char const*, char const*)
                0x00000000c001908c                FAT::mkdir(char const*)
                0x00000000c0019108                FAT::exists(char const*)
 *fill*         0x00000000c0019177        0x1 
 .text          0x00000000c0019178       0x98 fs/iso9660/helper.32
                0x00000000c0019178                isoReadDiscSectorHelper
                0x00000000c00191d8                iso_kprintf
                0x00000000c00191f4                iso_kprintfd
 .text          0x00000000c0019210      0x6f0 fs/iso9660/vfslink.32
                0x00000000c0019210                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019216                ISO9660::getName()
                0x00000000c001921c                ISO9660::closeDir(void*)
                0x00000000c0019226                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001922c                ISO9660::unlink(char const*)
                0x00000000c0019232                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019238                ISO9660::rename(char const*, char const*)
                0x00000000c001923e                ISO9660::mkdir(char const*)
                0x00000000c0019244                ISO9660::~ISO9660()
                0x00000000c0019244                ISO9660::~ISO9660()
                0x00000000c0019264                ISO9660::~ISO9660()
                0x00000000c001928c                ISO9660::exists(char const*)
                0x00000000c00192a0                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001937e                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c00193c6                ISO9660::seek(void*, unsigned long long)
                0x00000000c001940a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019448                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001949a                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c00195d2                ISO9660::close(void*)
                0x00000000c0019602                ISO9660::openDir(char const*, void**)
                0x00000000c00196d4                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c00197ef                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001986a                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c00198dc                ISO9660::ISO9660()
                0x00000000c00198dc                ISO9660::ISO9660()
 .text          0x00000000c0019900      0x264 hal/sound/sndcard.32
                0x00000000c0019900                SoundCard::beginPlayback()
                0x00000000c001990e                SoundCard::stopPlayback()
                0x00000000c001991c                SoundCard::SoundCard(char const*)
                0x00000000c001991c                SoundCard::SoundCard(char const*)
                0x00000000c00199ba                SoundCard::~SoundCard()
                0x00000000c00199ba                SoundCard::~SoundCard()
                0x00000000c00199da                SoundCard::~SoundCard()
                0x00000000c0019a02                SoundCard::configureRates(int, int, int)
                0x00000000c0019a32                SoundCard::getSamples16(int, short*)
                0x00000000c0019a8e                SoundCard::getSamples32(int, int*)
                0x00000000c0019b12                SoundCard::addChannel(SoundPort*)
                0x00000000c0019b50                SoundCard::removeChannel(int)
 .text          0x00000000c0019b64      0x35f hal/sound/sndport.32
                0x00000000c0019b64                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019b64                SoundPort::SoundPort(int, int, int, int)
                0x00000000c0019bec                SoundPort::~SoundPort()
                0x00000000c0019bec                SoundPort::~SoundPort()
                0x00000000c0019c1c                SoundPort::unpause()
                0x00000000c0019c28                SoundPort::pause()
                0x00000000c0019c34                SoundPort::getBufferUsed()
                0x00000000c0019c3c                SoundPort::getBufferSize()
                0x00000000c0019c44                SoundPort::buffer16(short*, int)
                0x00000000c0019cd0                SoundPort::buffer32(int*, int)
                0x00000000c0019d58                SoundPort::unbufferAndAdd16(int, short*, SoundCard*)
                0x00000000c0019e14                SoundPort::unbufferAndAdd32(int, int*, SoundCard*)
 .text          0x00000000c0019ec3        0x0 hw/bus/isa.32
 *fill*         0x00000000c0019ec3        0x1 
 .text          0x00000000c0019ec4      0xb7d hw/bus/pci.32
                0x00000000c0019ec4                PCI::open(int, int, void*)
                0x00000000c0019ee2                PCI::close(int, int, void*)
                0x00000000c0019ee6                PCI::PCI()
                0x00000000c0019ee6                PCI::PCI()
                0x00000000c0019f80                PCI::readBAR8(unsigned int, int)
                0x00000000c0019f9c                PCI::readBAR16(unsigned int, int)
                0x00000000c0019fbc                PCI::readBAR32(unsigned int, int)
                0x00000000c0019fd8                PCI::writeBAR8(unsigned int, unsigned char, int)
                0x00000000c0019ff8                PCI::writeBAR16(unsigned int, unsigned short, int)
                0x00000000c001a01a                PCI::writeBAR32(unsigned int, unsigned int, int)
                0x00000000c001a03a                PCI::legacyMechanism(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a0b8                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a162                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a186                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001a1ae                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001a1f8                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001a220                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001a248                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001a270                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001a298                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001a2fa                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001a3c4                PCI::pciDetailsToFilepath(PCIDeviceInfo, char*)
                0x00000000c001a66e                PCI::checkBus(unsigned char)
                0x00000000c001a692                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001a80a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001a976                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001a9e8                PCI::detect()
 *fill*         0x00000000c001aa41        0x1 
 .text          0x00000000c001aa42      0xb44 hw/diskctrl/ide.32
                0x00000000c001aa42                IDE::close(int, int, void*)
                0x00000000c001aa46                IDE::IDE()
                0x00000000c001aa46                IDE::IDE()
                0x00000000c001aa78                IDE::prepareInterrupt(unsigned char)
                0x00000000c001aa8a                selectDrive(unsigned char, unsigned char)
                0x00000000c001aa8c                IDE::getBase(unsigned char)
                0x00000000c001aa9e                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001ab4c                IDE::read(unsigned char, unsigned char)
                0x00000000c001abe8                IDE::waitInterrupt(unsigned char)
                0x00000000c001ac4d                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ac69                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ac86                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001accc                IDE::open(int, int, void*)
                0x00000000c001b0e4                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001b19e                IDE::detect()
                0x00000000c001b458                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001b52a                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001b586      0x334 hw/diskctrl/satabus.32
                0x00000000c001b586                SATABus::close(int, int, void*)
                0x00000000c001b58a                SATABus::detect()
                0x00000000c001b58c                SATABus::SATABus()
                0x00000000c001b58c                SATABus::SATABus()
                0x00000000c001b61c                SATABus::findCmdslot(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b64e                SATABus::checkType(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b694                SATABus::startCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b6b4                SATABus::stopCmd(SATABus::tagHBA_PORT volatile*)
                0x00000000c001b6de                SATABus::portRebase(SATABus::tagHBA_PORT volatile*, int)
                0x00000000c001b7f0                SATABus::probePort(SATABus::tagHBA_MEM volatile*)
                0x00000000c001b89a                SATABus::open(int, int, void*)
 .text          0x00000000c001b8ba      0x990 hw/diskphys/ata.32
                0x00000000c001b8ba                ATA::close(int, int, void*)
                0x00000000c001b8de                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001b8e0                ATA::ATA()
                0x00000000c001b8e0                ATA::ATA()
                0x00000000c001b910                ATA::flush(bool)
                0x00000000c001b95a                ATA::readyForCommand()
                0x00000000c001b9a6                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001bd7e                ATA::detectCHS()
                0x00000000c001bda8                ATA::open(int, int, void*)
                0x00000000c001be74                combineCharAndColour(char, unsigned char)
                0x00000000c001be85                combineColours(unsigned char, unsigned char)
                0x00000000c001be92                ATA::read(unsigned long long, int, void*)
                0x00000000c001c070                ATA::write(unsigned long long, int, void*)
 .text          0x00000000c001c24a      0x60c hw/diskphys/atapi.32
                0x00000000c001c24a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c250                ATAPI::close(int, int, void*)
                0x00000000c001c274                ATAPI::ATAPI()
                0x00000000c001c274                ATAPI::ATAPI()
                0x00000000c001c2a4                ATAPI::readyForCommand()
                0x00000000c001c2f6                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c5b6                ATAPI::diskRemoved()
                0x00000000c001c5f0                ATAPI::eject()
                0x00000000c001c638                ATAPI::diskInserted()
                0x00000000c001c644                ATAPI::detectMedia()
                0x00000000c001c6fe                ATAPI::open(int, int, void*)
                0x00000000c001c7de                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001c856      0x7fb hw/diskphys/sata.32
                0x00000000c001c856                SATA::close(int, int, void*)
                0x00000000c001c87a                SATA::powerSaving(PowerSavingLevel)
                0x00000000c001c87c                SATA::open(int, int, void*)
                0x00000000c001c926                SATA::SATA()
                0x00000000c001c926                SATA::SATA()
                0x00000000c001c956                SATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cb9c                SATA::read(unsigned long long, int, void*)
                0x00000000c001cdee                SATA::write(unsigned long long, int, void*)
 *fill*         0x00000000c001d051        0x1 
 .text          0x00000000c001d052      0x5ce hw/diskphys/satapi.32
                0x00000000c001d052                SATAPI::write(unsigned long long, int, void*)
                0x00000000c001d058                SATAPI::close(int, int, void*)
                0x00000000c001d07c                SATAPI::SATAPI()
                0x00000000c001d07c                SATAPI::SATAPI()
                0x00000000c001d0ac                SATAPI::diskRemoved()
                0x00000000c001d0ae                SATAPI::diskInserted()
                0x00000000c001d0ca                SATAPI::sendPacket(unsigned char*, int, unsigned long long, unsigned short*, int)
                0x00000000c001d3a6                SATAPI::eject()
                0x00000000c001d3e2                SATAPI::detectMedia()
                0x00000000c001d438                SATAPI::open(int, int, void*)
                0x00000000c001d538                SATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001d620      0x450 hw/intctrl/apic.32
                0x00000000c001d620                IOAPIC::close(int, int, void*)
                0x00000000c001d626                apicGetBase()
                0x00000000c001d66a                IOAPIC::IOAPIC()
                0x00000000c001d66a                IOAPIC::IOAPIC()
                0x00000000c001d691                apicOpen()
                0x00000000c001d7fe                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d830                IOAPIC::read(int)
                0x00000000c001d858                IOAPIC::open(int, int, void*)
                0x00000000c001d938                IOAPIC::write(int, int)
                0x00000000c001d964                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char, bool, bool)
 .text          0x00000000c001da70       0xf3 hw/timer/apictimer.32
                0x00000000c001da70                APICTimer::close(int, int, void*)
                0x00000000c001da78                apicTimerHandler(regs*, void*)
                0x00000000c001da9c                APICTimer::open(int, int, void*)
                0x00000000c001db18                APICTimer::write(int)
                0x00000000c001db3c                APICTimer::APICTimer()
                0x00000000c001db3c                APICTimer::APICTimer()
 *fill*         0x00000000c001db63        0x1 
 .text          0x00000000c001db64      0x1c7 hw/timer/pit.32
                0x00000000c001db64                PIT::write(int)
                0x00000000c001dbe8                pitHandler(regs*, void*)
                0x00000000c001dc08                PIT::open(int, int, void*)
                0x00000000c001dc68                PIT::close(int, int, void*)
                0x00000000c001dca8                PIT::PIT()
                0x00000000c001dca8                PIT::PIT()
 *fill*         0x00000000c001dd2b        0x5 
 .text          0x00000000c001dd30       0x83 arch/i386/avx.32
                0x00000000c001dd30                avxDetect
                0x00000000c001dd5a                avxSave
                0x00000000c001dd6b                avxLoad
                0x00000000c001dd7c                avxInit
                0x00000000c001dd9e                avxClose
                0x00000000c001dd9f                wouldSheSayYes
 *fill*         0x00000000c001ddb3        0xd 
 .text          0x00000000c001ddc0      0x2ec arch/i386/interrupt.32
                0x00000000c001ddc0                isr0
                0x00000000c001ddd0                isr1
                0x00000000c001ddda                isr2
                0x00000000c001dde4                isr3
                0x00000000c001ddee                isr4
                0x00000000c001ddf8                isr5
                0x00000000c001de02                isr6
                0x00000000c001de0c                isr7
                0x00000000c001de16                isr8
                0x00000000c001de1e                isr9
                0x00000000c001de28                isr10
                0x00000000c001de30                isr11
                0x00000000c001de38                isr12
                0x00000000c001de40                isr13
                0x00000000c001de5a                isr14
                0x00000000c001de62                isr15
                0x00000000c001de6c                isr16
                0x00000000c001de76                isr17
                0x00000000c001de80                isr18
                0x00000000c001de8a                irq3
                0x00000000c001de94                irq4
                0x00000000c001de9e                irq5
                0x00000000c001dea8                irq6
                0x00000000c001deb2                irq7
                0x00000000c001debc                irq8
                0x00000000c001dec6                irq9
                0x00000000c001ded0                irq10
                0x00000000c001deda                irq11
                0x00000000c001dee4                irq12
                0x00000000c001deee                irq13
                0x00000000c001def8                irq14
                0x00000000c001df02                irq15
                0x00000000c001df0c                irq1
                0x00000000c001df13                irq2
                0x00000000c001df1a                isr96
                0x00000000c001df21                irq0
                0x00000000c001df26                int_common_stub
                0x00000000c001df58                syscall_common_stub
                0x00000000c001e05c                irq16
                0x00000000c001e066                irq17
                0x00000000c001e070                irq18
                0x00000000c001e07a                irq19
                0x00000000c001e084                irq20
                0x00000000c001e08e                irq21
                0x00000000c001e098                irq22
                0x00000000c001e0a2                irq23
 *fill*         0x00000000c001e0ac        0x4 
 .text          0x00000000c001e0b0       0x10 arch/i386/rdrand.32
                0x00000000c001e0b0                i386GetRDRAND
 .text          0x00000000c001e0c0       0x39 arch/i386/sse.32
                0x00000000c001e0c0                absolutelyNoChanceInHell
                0x00000000c001e0c0                sseDetect
                0x00000000c001e0d8                sseSave
                0x00000000c001e0e0                sseLoad
                0x00000000c001e0e8                sseInit
                0x00000000c001e0f8                sseClose
 *fill*         0x00000000c001e0f9        0x7 
 .text          0x00000000c001e100       0x49 arch/i386/x87.32
                0x00000000c001e106                x87Detect
                0x00000000c001e121                x87Save
                0x00000000c001e128                x87Load
                0x00000000c001e12f                x87Init
                0x00000000c001e148                x87Close
 *fill*         0x00000000c001e149        0x3 
 .text          0x00000000c001e14c       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e171        0x0 crtn.32
 *fill*         0x00000000c001e171        0x3 
 .text          0x00000000c001e174      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                0x00000000c001e174                __divdi3
 *fill*         0x00000000c001e2bf        0x1 
 .text          0x00000000c001e2c0      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                0x00000000c001e2c0                __moddi3
 *fill*         0x00000000c001e43e        0x2 
 .text          0x00000000c001e440       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                0x00000000c001e440                __udivdi3
 *fill*         0x00000000c001e53f        0x1 
 .text          0x00000000c001e540      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                0x00000000c001e540                __umoddi3
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e660        0x0
 .iplt          0x00000000c001e660        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e65a        0xf
 .init          0x00000000c001e65a        0x3 crti.32
                0x00000000c001e65a                _init
 .init          0x00000000c001e65d        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e662        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e667        0x2 crtn.32

.fini           0x00000000c001e669        0xa
 .fini          0x00000000c001e669        0x3 crti.32
                0x00000000c001e669                _fini
 .fini          0x00000000c001e66c        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e671        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e674       0x1f
 .text._ZN8ComputerD2Ev
                0x00000000c001e674       0x1f core/computer.32
                0x00000000c001e674                Computer::~Computer()
                0x00000000c001e674                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e694       0x27
 .text._ZN8ComputerD0Ev
                0x00000000c001e694       0x27 core/computer.32
                0x00000000c001e694                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e6bb       0x21
 .text._Z10idleCommonv
                0x00000000c001e6bb       0x21 core/idle.32
                0x00000000c001e6bb                idleCommon()

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e6dc        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e6dc        0x2 core/unixfile.32
                0x00000000c001e6dc                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e6dc                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e6de       0x42
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e6de       0x42 core/unixfile.32
                0x00000000c001e6de                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e6de                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e720       0xc7
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e720       0xc7 core/unixfile.32
                0x00000000c001e720                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e7e8        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e7e8        0x7 core/unixfile.32
                0x00000000c001e7e8                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e7f0       0x95
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e7f0       0x95 core/unixfile.32
                0x00000000c001e7f0                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e886        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e886        0x8 core/unixfile.32
                0x00000000c001e886                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e88e       0x1f
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e88e       0x1f hal/device.32
                0x00000000c001e88e                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e88e                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e8ae       0x27
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e8ae       0x27 hal/device.32
                0x00000000c001e8ae                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e8d6       0xd0
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e8d6       0xd0 hal/device.32
                0x00000000c001e8d6                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e9a6       0x42
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e9a6       0x42 hal/device.32
                0x00000000c001e9a6                LinkedList<Device>::LinkedList()
                0x00000000c001e9a6                LinkedList<Device>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e9e8       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e9e8       0x1c hal/timer.32
                0x00000000c001e9e8                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ea04        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ea04        0x7 hal/timer.32
                0x00000000c001ea04                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ea0c       0xac
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ea0c       0xac hal/timer.32
                0x00000000c001ea0c                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001eab8       0xce
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001eab8       0xce hal/timer.32
                0x00000000c001eab8                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001eb88       0x1f
 .text._ZN4ACPID2Ev
                0x00000000c001eb88       0x1f hw/acpi.32
                0x00000000c001eb88                ACPI::~ACPI()
                0x00000000c001eb88                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001eba8       0x27
 .text._ZN4ACPID0Ev
                0x00000000c001eba8       0x27 hw/acpi.32
                0x00000000c001eba8                ACPI::~ACPI()

.text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ebd0        0x2
 .text._ZN10LinkedListI6DeviceED2Ev
                0x00000000c001ebd0        0x2 hw/acpi.32
                0x00000000c001ebd0                LinkedList<Device>::~LinkedList()
                0x00000000c001ebd0                LinkedList<Device>::~LinkedList()

.text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ebd4       0x1c
 .text._ZN10LinkedListI6DeviceE7isEmptyEv
                0x00000000c001ebd4       0x1c hw/acpi.32
                0x00000000c001ebd4                LinkedList<Device>::isEmpty()

.text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ebf0        0x7
 .text._ZN10LinkedListI6DeviceE15getFirstElementEv
                0x00000000c001ebf0        0x7 hw/acpi.32
                0x00000000c001ebf0                LinkedList<Device>::getFirstElement()

.text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ebf8       0xac
 .text._ZN10LinkedListI6DeviceE11removeFirstEv
                0x00000000c001ebf8       0xac hw/acpi.32
                0x00000000c001ebf8                LinkedList<Device>::removeFirst()

.text._ZN3CPUD2Ev
                0x00000000c001eca4       0x1f
 .text._ZN3CPUD2Ev
                0x00000000c001eca4       0x1f hw/cpu.32
                0x00000000c001eca4                CPU::~CPU()
                0x00000000c001eca4                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ecc4       0x27
 .text._ZN3CPUD0Ev
                0x00000000c001ecc4       0x27 hw/cpu.32
                0x00000000c001ecc4                CPU::~CPU()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ecec        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ecec        0x8 sys/kill.32
                0x00000000c001ecec                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ecf4        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ecf4        0x2 thr/prcssthr.32
                0x00000000c001ecf4                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ecf4                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ecf8       0x49
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ecf8       0x49 thr/prcssthr.32
                0x00000000c001ecf8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ecf8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ed44       0x42
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ed44       0x42 thr/prcssthr.32
                0x00000000c001ed44                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ed44                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN3PCID2Ev
                0x00000000c001ed86       0x1f
 .text._ZN3PCID2Ev
                0x00000000c001ed86       0x1f hw/bus/pci.32
                0x00000000c001ed86                PCI::~PCI()
                0x00000000c001ed86                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001eda6       0x27
 .text._ZN3PCID0Ev
                0x00000000c001eda6       0x27 hw/bus/pci.32
                0x00000000c001eda6                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001edce       0x1f
 .text._ZN3IDED2Ev
                0x00000000c001edce       0x1f hw/diskctrl/ide.32
                0x00000000c001edce                IDE::~IDE()
                0x00000000c001edce                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001edee       0x27
 .text._ZN3IDED0Ev
                0x00000000c001edee       0x27 hw/diskctrl/ide.32
                0x00000000c001edee                IDE::~IDE()

.text._ZN7SATABusD2Ev
                0x00000000c001ee16       0x1f
 .text._ZN7SATABusD2Ev
                0x00000000c001ee16       0x1f hw/diskctrl/satabus.32
                0x00000000c001ee16                SATABus::~SATABus()
                0x00000000c001ee16                SATABus::~SATABus()

.text._ZN7SATABusD0Ev
                0x00000000c001ee36       0x27
 .text._ZN7SATABusD0Ev
                0x00000000c001ee36       0x27 hw/diskctrl/satabus.32
                0x00000000c001ee36                SATABus::~SATABus()

.text._ZN3ATAD2Ev
                0x00000000c001ee5e       0x1f
 .text._ZN3ATAD2Ev
                0x00000000c001ee5e       0x1f hw/diskphys/ata.32
                0x00000000c001ee5e                ATA::~ATA()
                0x00000000c001ee5e                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001ee7e       0x27
 .text._ZN3ATAD0Ev
                0x00000000c001ee7e       0x27 hw/diskphys/ata.32
                0x00000000c001ee7e                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001eea6       0x1f
 .text._ZN5ATAPID2Ev
                0x00000000c001eea6       0x1f hw/diskphys/atapi.32
                0x00000000c001eea6                ATAPI::~ATAPI()
                0x00000000c001eea6                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001eec6       0x27
 .text._ZN5ATAPID0Ev
                0x00000000c001eec6       0x27 hw/diskphys/atapi.32
                0x00000000c001eec6                ATAPI::~ATAPI()

.text._ZN4SATAD2Ev
                0x00000000c001eeee       0x1f
 .text._ZN4SATAD2Ev
                0x00000000c001eeee       0x1f hw/diskphys/sata.32
                0x00000000c001eeee                SATA::~SATA()
                0x00000000c001eeee                SATA::~SATA()

.text._ZN4SATAD0Ev
                0x00000000c001ef0e       0x27
 .text._ZN4SATAD0Ev
                0x00000000c001ef0e       0x27 hw/diskphys/sata.32
                0x00000000c001ef0e                SATA::~SATA()

.text._ZN6SATAPID2Ev
                0x00000000c001ef36       0x1f
 .text._ZN6SATAPID2Ev
                0x00000000c001ef36       0x1f hw/diskphys/satapi.32
                0x00000000c001ef36                SATAPI::~SATAPI()
                0x00000000c001ef36                SATAPI::~SATAPI()

.text._ZN6SATAPID0Ev
                0x00000000c001ef56       0x27
 .text._ZN6SATAPID0Ev
                0x00000000c001ef56       0x27 hw/diskphys/satapi.32
                0x00000000c001ef56                SATAPI::~SATAPI()

.text._ZN6IOAPICD2Ev
                0x00000000c001ef7e       0x1f
 .text._ZN6IOAPICD2Ev
                0x00000000c001ef7e       0x1f hw/intctrl/apic.32
                0x00000000c001ef7e                IOAPIC::~IOAPIC()
                0x00000000c001ef7e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001ef9e       0x27
 .text._ZN6IOAPICD0Ev
                0x00000000c001ef9e       0x27 hw/intctrl/apic.32
                0x00000000c001ef9e                IOAPIC::~IOAPIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001efc8       0x1f
 .text._ZN9APICTimerD2Ev
                0x00000000c001efc8       0x1f hw/timer/apictimer.32
                0x00000000c001efc8                APICTimer::~APICTimer()
                0x00000000c001efc8                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001efe8       0x27
 .text._ZN9APICTimerD0Ev
                0x00000000c001efe8       0x27 hw/timer/apictimer.32
                0x00000000c001efe8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f010       0x1f
 .text._ZN3PITD2Ev
                0x00000000c001f010       0x1f hw/timer/pit.32
                0x00000000c001f010                PIT::~PIT()
                0x00000000c001f010                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f030       0x27
 .text._ZN3PITD0Ev
                0x00000000c001f030       0x27 hw/timer/pit.32
                0x00000000c001f030                PIT::~PIT()

.rodata         0x00000000c001f057     0x2bd5
                0x00000000c001f057                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f057        0x1 
 .ctors         0x00000000c001f058        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f05c        0x4 core/unixfile.32
 .ctors         0x00000000c001f060        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f064        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f068                end_ctors = .
                0x00000000c001f068                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f068        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f06c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f06c                __DTOR_END__
                0x00000000c001f070                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f070       0x10 
 .rodata        0x00000000c001f080      0x101 acpica/utclib.32
                0x00000000c001f080                AcpiGbl_Ctypes
 *fill*         0x00000000c001f181        0x3 
 .rodata        0x00000000c001f184       0x18 core/malloc.32
 .rodata.str1.1
                0x00000000c001f19c       0x4a fs/fat/ff.32
                                         0x4e (size before relaxing)
 *fill*         0x00000000c001f1e6       0x1a 
 .rodata        0x00000000c001f200       0xed fs/fat/ff.32
 *fill*         0x00000000c001f2ed       0x13 
 .rodata        0x00000000c001f300      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f700       0x6f fs/iso9660/iso9660.32
 .rodata.str1.1
                0x00000000c001f76f      0x115 core/computer.32
 .rodata.str1.4
                0x00000000c001f884       0x43 core/computer.32
 *fill*         0x00000000c001f8c7        0x1 
 .rodata._ZTV8Computer
                0x00000000c001f8c8       0x2c core/computer.32
                0x00000000c001f8c8                vtable for Computer
 .rodata.str1.4
                0x00000000c001f8f4       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001f924        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001f930       0x17 core/main.32
 *fill*         0x00000000c001f947        0x1 
 .rodata.str1.4
                0x00000000c001f948       0xa5 core/physmgr.32
 .rodata.str1.1
                0x00000000c001f9ed       0x58 core/physmgr.32
 .rodata.str1.1
                0x00000000c001fa45       0x39 core/pipe.32
 *fill*         0x00000000c001fa7e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001fa80       0x1c core/pipe.32
                0x00000000c001fa80                vtable for Pipe
 .rodata.str1.1
                0x00000000c001fa9c       0x2b core/terminal.32
 *fill*         0x00000000c001fac7        0x1 
 .rodata._ZTV7VgaText
                0x00000000c001fac8       0x1c core/terminal.32
                0x00000000c001fac8                vtable for VgaText
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c001fae4       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c001fb06       0x15 core/unixfile.32
 *fill*         0x00000000c001fb1b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c001fb1c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c001fb67        0x8 core/unixfile.32
 *fill*         0x00000000c001fb6f        0x1 
 .rodata.str1.4
                0x00000000c001fb70       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c001fb90       0x1c core/unixfile.32
                0x00000000c001fb90                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c001fbac       0x1c core/unixfile.32
                0x00000000c001fbac                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c001fbc8      0x167 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001fd2f      0x107 core/virtmgr.32
 .rodata.str1.1
                0x00000000c001fe36       0x33 coreobjs/c++.32
 *fill*         0x00000000c001fe69        0x3 
 .rodata        0x00000000c001fe6c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c001ffbc       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c001ffbc       0x68 fs/vfs.32
                0x00000000c001ffbc                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020024       0x1c fs/vfs.32
                0x00000000c0020024                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020040       0x1c fs/vfs.32
                0x00000000c0020040                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c002005c       0x2c hal/bus.32
                0x00000000c002005c                vtable for Bus
 .rodata.str1.1
                0x00000000c0020088       0x1e hal/clock.32
 *fill*         0x00000000c00200a6        0x2 
 .rodata._ZTV5Clock
                0x00000000c00200a8       0x3c hal/clock.32
                0x00000000c00200a8                vtable for Clock
 *fill*         0x00000000c00200e4       0x1c 
 .rodata        0x00000000c0020100       0x30 hal/clock.32
 .rodata.cst16  0x00000000c0020130       0x10 hal/clock.32
 .rodata.str1.1
                0x00000000c0020140       0x58 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020198       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020198       0x15 hal/device.32
 .rodata._ZTV6Device
                0x00000000c0020198       0x2c hal/device.32
                0x00000000c0020198                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00201c4       0x2c hal/device.32
                0x00000000c00201c4                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00201f0       0x2c hal/diskctrl.32
                0x00000000c00201f0                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c002021c       0x38 hal/diskphys.32
                0x00000000c002021c                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020254       0x3e hal/intctrl.32
 *fill*         0x00000000c0020292        0x2 
 .rodata.str1.4
                0x00000000c0020294       0x5d hal/intctrl.32
 .rodata        0x00000000c00202f1       0x53 hal/keybrd.32
 .rodata._ZTV8Keyboard
                0x00000000c0020344       0x34 hal/keybrd.32
                0x00000000c0020344                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020378       0x44 hal/logidisk.32
 .rodata._ZTV11LogicalDisk
                0x00000000c00203bc       0x2c hal/logidisk.32
                0x00000000c00203bc                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00203e8       0x2c hal/mouse.32
                0x00000000c00203e8                vtable for Mouse
 .rodata._ZTV3NIC
                0x00000000c0020414       0x34 hal/nic.32
                0x00000000c0020414                vtable for NIC
 .rodata.str1.1
                0x00000000c0020448        0xb hal/partition.32
 *fill*         0x00000000c0020453        0x1 
 .rodata._ZTV6Serial
                0x00000000c0020454       0x44 hal/serial.32
                0x00000000c0020454                vtable for Serial
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020498       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020498        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020498       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020498       0x15 hal/timer.32
 .rodata._ZTV5Timer
                0x00000000c0020498       0x30 hal/timer.32
                0x00000000c0020498                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c00204c8       0x10 hal/vcache.32
                0x00000000c00204c8                vtable for VCache
 .rodata.str1.1
                0x00000000c00204d8       0x93 hal/video.32
 *fill*         0x00000000c002056b        0x1 
 .rodata._ZTV5Video
                0x00000000c002056c       0x4c hal/video.32
                0x00000000c002056c                vtable for Video
 .rodata.str1.4
                0x00000000c00205b8       0x9b hw/acpi.32
 .rodata.str1.1
                0x00000000c0020653      0x13c hw/acpi.32
                                        0x156 (size before relaxing)
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.4
                0x00000000c002078f       0x4b hw/acpi.32
 .rodata._ZN10LinkedListI6DeviceE11removeFirstEv.str1.1
                0x00000000c002078f        0x8 hw/acpi.32
 *fill*         0x00000000c002078f        0x1 
 .rodata._ZTV4ACPI
                0x00000000c0020790       0x2c hw/acpi.32
                0x00000000c0020790                vtable for ACPI
 .rodata.str1.1
                0x00000000c00207bc      0x16d hw/cpu.32
                                        0x171 (size before relaxing)
 *fill*         0x00000000c0020929        0x3 
 .rodata._ZTV3CPU
                0x00000000c002092c       0x2c hw/cpu.32
                0x00000000c002092c                vtable for CPU
 .rodata.str1.1
                0x00000000c0020958       0x3c krnl/env.32
 .rodata.str1.1
                0x00000000c0020994       0x91 krnl/resolve.32
 .rodata.str1.1
                0x00000000c0020a25       0xc9 krnl/signal.32
 .rodata.str1.1
                0x00000000c0020aee       0x48 krnl/syscalls.32
                                         0x50 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020b36       0x2b net/ethernet.32
 .rodata.str1.1
                0x00000000c0020b61       0x76 reg/cm.32
                                         0x7a (size before relaxing)
 .rodata.str1.1
                0x00000000c0020bd7       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020c1c        0xa sys/getvgaptr.32
 .rodata.str1.1
                0x00000000c0020c26       0x21 sys/kill.32
 .rodata.str1.1
                0x00000000c0020c47       0x96 sys/registry.32
 .rodata.str1.1
                0x00000000c0020cdd       0x54 sys/timezone.32
 .rodata.str1.1
                0x00000000c0020d31       0x2c sys/wsbe.32
 .rodata.str1.1
                0x00000000c0020d5d      0x1cc thr/elf.32
                                        0x1db (size before relaxing)
 .rodata.str1.1
                0x00000000c0020f29       0x57 thr/prcssthr.32
 .rodata.str1.4
                0x00000000c0020f80      0x10c thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002108c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002108c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002108c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002108c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002108c       0xa0 vm86/vm8086.32
 .rodata        0x00000000c002112c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c002115c      0x1c2 arch/i386/hal.32
                                        0x1d1 (size before relaxing)
 *fill*         0x00000000c002131e        0x2 
 .rodata.str1.4
                0x00000000c0021320       0x73 arch/i386/hal.32
 .rodata.str1.1
                0x00000000c0021393       0x15 arch/i386/rtc.32
 .rodata._ZTV3RTC
                0x00000000c00213a8       0x3c arch/i386/rtc.32
                0x00000000c00213a8                vtable for RTC
 .rodata.str1.1
                0x00000000c00213e4       0x41 fs/fat/vfslink.32
                                         0x4b (size before relaxing)
 *fill*         0x00000000c0021425        0x3 
 .rodata._ZTV3FAT
                0x00000000c0021428       0x68 fs/fat/vfslink.32
                0x00000000c0021428                vtable for FAT
 .rodata.str1.1
                0x00000000c0021490       0x41 fs/iso9660/helper.32
                                          0xa (size before relaxing)
 .rodata.str1.1
                0x00000000c0021490      0x138 fs/iso9660/vfslink.32
 .rodata._ZTV7ISO9660
                0x00000000c00215c8       0x68 fs/iso9660/vfslink.32
                0x00000000c00215c8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0021630       0x44 hal/sound/sndcard.32
 .rodata._ZTV9SoundCard
                0x00000000c0021674       0x34 hal/sound/sndcard.32
                0x00000000c0021674                vtable for SoundCard
 .rodata.str1.4
                0x00000000c00216a8       0x3f hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c00216e7       0x38 hal/sound/sndport.32
 .rodata.str1.1
                0x00000000c002171f       0xa1 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00217c0       0x2c hw/bus/pci.32
                0x00000000c00217c0                vtable for PCI
 .rodata.str1.1
                0x00000000c00217ec       0x87 hw/diskctrl/ide.32
 *fill*         0x00000000c0021873        0x1 
 .rodata._ZTV3IDE
                0x00000000c0021874       0x2c hw/diskctrl/ide.32
                0x00000000c0021874                vtable for IDE
 .rodata.str1.4
                0x00000000c00218a0       0x24 hw/diskctrl/satabus.32
                                         0x23 (size before relaxing)
 .rodata._ZTV7SATABus
                0x00000000c00218c4       0x2c hw/diskctrl/satabus.32
                0x00000000c00218c4                vtable for SATABus
 .rodata.str1.1
                0x00000000c00218f0       0x12 hw/diskphys/ata.32
                                         0x21 (size before relaxing)
 *fill*         0x00000000c0021902        0x2 
 .rodata._ZTV3ATA
                0x00000000c0021904       0x38 hw/diskphys/ata.32
                0x00000000c0021904                vtable for ATA
 .rodata.str1.1
                0x00000000c002193c        0xd hw/diskphys/atapi.32
                                         0x25 (size before relaxing)
 *fill*         0x00000000c0021949        0x3 
 .rodata._ZTV5ATAPI
                0x00000000c002194c       0x38 hw/diskphys/atapi.32
                0x00000000c002194c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0021984       0x7c hw/diskphys/sata.32
 .rodata._ZTV4SATA
                0x00000000c0021a00       0x38 hw/diskphys/sata.32
                0x00000000c0021a00                vtable for SATA
 .rodata.str1.1
                0x00000000c0021a38       0xea hw/diskphys/satapi.32
                                         0xf7 (size before relaxing)
 *fill*         0x00000000c0021b22        0x2 
 .rodata._ZTV6SATAPI
                0x00000000c0021b24       0x38 hw/diskphys/satapi.32
                0x00000000c0021b24                vtable for SATAPI
 .rodata        0x00000000c0021b5c        0x8 hw/intctrl/apic.32
 .rodata._ZTV6IOAPIC
                0x00000000c0021b64       0x2c hw/intctrl/apic.32
                0x00000000c0021b64                vtable for IOAPIC
 .rodata.str1.1
                0x00000000c0021b90       0x1b hw/timer/apictimer.32
 *fill*         0x00000000c0021bab        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0021bac       0x30 hw/timer/apictimer.32
                0x00000000c0021bac                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021bdc       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021bf9        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021bfc       0x30 hw/timer/pit.32
                0x00000000c0021bfc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021c2c      0x4d9
 *(.data)
 .data          0x00000000c0021c2c        0x0 crti.32
 .data          0x00000000c0021c2c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021c2c                __dso_handle
 .data          0x00000000c0021c30        0x0 acpica/utclib.32
 .data          0x00000000c0021c30        0x0 core/malloc.32
 .data          0x00000000c0021c30        0x0 libk/ctype.32
 .data          0x00000000c0021c30        0x0 libk/string.32
 .data          0x00000000c0021c30        0x0 fs/fat/diskio.32
 .data          0x00000000c0021c30        0x0 fs/fat/ff.32
 .data          0x00000000c0021c30        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0021c30        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0021c30        0x0 fs/iso9660/iso9660.32
 .data          0x00000000c0021c30        0x0 core/computer.32
 .data          0x00000000c0021c30        0x0 core/gdt.32
 .data          0x00000000c0021c30        0x0 core/idle.32
 .data          0x00000000c0021c30        0x0 core/idt.32
 .data          0x00000000c0021c30        0x4 core/kheap.32
 .data          0x00000000c0021c34        0x0 core/main.32
 .data          0x00000000c0021c34        0x4 core/physmgr.32
                0x00000000c0021c34                Phys::bitmap
 .data          0x00000000c0021c38        0x0 core/pipe.32
 *fill*         0x00000000c0021c38        0x8 
 .data          0x00000000c0021c40       0x60 core/terminal.32
                0x00000000c0021c40                VgaText::hiddenOut
                0x00000000c0021c60                ansiToVGAMappings
 .data          0x00000000c0021ca0        0x0 core/tss.32
 .data          0x00000000c0021ca0        0x4 core/unixfile.32
                0x00000000c0021ca0                UnixFile::nextFd
 .data          0x00000000c0021ca4       0x15 core/virtmgr.32
                0x00000000c0021ca4                Virt::pageAllocPtr
                0x00000000c0021ca8                Virt::bitmap
                0x00000000c0021cac                Virt::swapfileSectorsPerPage
                0x00000000c0021cb0                Virt::swapfileLength
                0x00000000c0021cb4                Virt::swapfileSector
                0x00000000c0021cb8                Virt::swapfileDrive
 *fill*         0x00000000c0021cb9        0x3 
 .data          0x00000000c0021cbc        0x4 coreobjs/c++.32
                0x00000000c0021cbc                __stack_chk_guard
 .data          0x00000000c0021cc0        0x0 dbg/kconsole.32
 .data          0x00000000c0021cc0        0x0 fs/vfs.32
 .data          0x00000000c0021cc0        0x0 hal/bus.32
 .data          0x00000000c0021cc0        0x0 hal/buzzer.32
 .data          0x00000000c0021cc0        0x0 hal/clock.32
 .data          0x00000000c0021cc0        0x0 hal/device.32
 .data          0x00000000c0021cc0        0x0 hal/diskctrl.32
 .data          0x00000000c0021cc0        0x0 hal/diskphys.32
 .data          0x00000000c0021cc0        0x0 hal/fpu.32
 .data          0x00000000c0021cc0        0x0 hal/intctrl.32
 .data          0x00000000c0021cc0        0x0 hal/keybrd.32
 .data          0x00000000c0021cc0        0x0 hal/logidisk.32
 .data          0x00000000c0021cc0        0x0 hal/mouse.32
 .data          0x00000000c0021cc0        0x0 hal/nic.32
 .data          0x00000000c0021cc0        0x0 hal/partition.32
 .data          0x00000000c0021cc0        0x0 hal/serial.32
 .data          0x00000000c0021cc0        0x0 hal/timer.32
 .data          0x00000000c0021cc0        0x0 hal/vcache.32
 .data          0x00000000c0021cc0        0x0 hal/video.32
 .data          0x00000000c0021cc0       0x10 hw/acpi.32
                0x00000000c0021cc0                legacyIRQRemaps
 .data          0x00000000c0021cd0        0x4 hw/cpu.32
                0x00000000c0021cd0                lastCode
 *fill*         0x00000000c0021cd4        0xc 
 .data          0x00000000c0021ce0      0x142 krnl/bootmsg.32
                0x00000000c0021ce0                KiSplashScreen
 *fill*         0x00000000c0021e22       0x1e 
 .data          0x00000000c0021e40       0x4d krnl/env.32
                0x00000000c0021e40                defaultSysEnv
 .data          0x00000000c0021e8d        0x0 krnl/inlines.32
 .data          0x00000000c0021e8d        0x0 krnl/panic.32
 .data          0x00000000c0021e8d        0x0 krnl/powctrl.32
 .data          0x00000000c0021e8d        0x0 krnl/random.32
 .data          0x00000000c0021e8d        0x0 krnl/resolve.32
 *fill*         0x00000000c0021e8d       0x13 
 .data          0x00000000c0021ea0       0x4c krnl/signal.32
                0x00000000c0021ea0                KiDefaultSignalHandlers
 *fill*         0x00000000c0021eec       0x14 
 .data          0x00000000c0021f00       0xf0 krnl/syscalls.32
                0x00000000c0021f00                systemCallHandlers
 .data          0x00000000c0021ff0        0x0 net/ethernet.32
 *fill*         0x00000000c0021ff0       0x10 
 .data          0x00000000c0022000      0x100 reg/cm.32
                0x00000000c0022000                CmComponents
 .data          0x00000000c0022100        0x0 reg/registry.32
 .data          0x00000000c0022100        0x0 sys/eject.32
 .data          0x00000000c0022100        0x0 sys/exit.32
 .data          0x00000000c0022100        0x0 sys/getcwd.32
 .data          0x00000000c0022100        0x0 sys/getpid.32
 .data          0x00000000c0022100        0x0 sys/getramdata.32
 .data          0x00000000c0022100        0x0 sys/getvgaptr.32
 .data          0x00000000c0022100        0x0 sys/kill.32
 .data          0x00000000c0022100        0x0 sys/loaddll.32
 .data          0x00000000c0022100        0x0 sys/read.32
 .data          0x00000000c0022100        0x0 sys/registersignal.32
 .data          0x00000000c0022100        0x0 sys/registry.32
 .data          0x00000000c0022100        0x0 sys/sbrk.32
 .data          0x00000000c0022100        0x0 sys/setcwd.32
 .data          0x00000000c0022100        0x0 sys/settime.32
 .data          0x00000000c0022100        0x0 sys/timezone.32
 .data          0x00000000c0022100        0x0 sys/write.32
 .data          0x00000000c0022100        0x0 sys/wsbe.32
 .data          0x00000000c0022100        0x0 sys/yield.32
 .data          0x00000000c0022100        0x0 thr/elf.32
 .data          0x00000000c0022100        0x4 thr/prcssthr.32
                0x00000000c0022100                Thr::nextPID
 .data          0x00000000c0022104        0x0 vm86/vm8086.32
 .data          0x00000000c0022104        0x0 arch/i386/hal.32
 .data          0x00000000c0022104        0x0 arch/i386/pic.32
 .data          0x00000000c0022104        0x0 arch/i386/rtc.32
 .data          0x00000000c0022104        0x0 arch/i386/vga.32
 .data          0x00000000c0022104        0x0 fs/fat/vfslink.32
 .data          0x00000000c0022104        0x0 fs/iso9660/helper.32
 .data          0x00000000c0022104        0x1 fs/iso9660/vfslink.32
                0x00000000c0022104                recentDriveletter
 .data          0x00000000c0022105        0x0 hal/sound/sndcard.32
 .data          0x00000000c0022105        0x0 hal/sound/sndport.32
 .data          0x00000000c0022105        0x0 hw/bus/isa.32
 .data          0x00000000c0022105        0x0 hw/bus/pci.32
 .data          0x00000000c0022105        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0022105        0x0 hw/diskctrl/satabus.32
 .data          0x00000000c0022105        0x0 hw/diskphys/ata.32
 .data          0x00000000c0022105        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0022105        0x0 hw/diskphys/sata.32
 .data          0x00000000c0022105        0x0 hw/diskphys/satapi.32
 .data          0x00000000c0022105        0x0 hw/intctrl/apic.32
 .data          0x00000000c0022105        0x0 hw/timer/apictimer.32
 .data          0x00000000c0022105        0x0 hw/timer/pit.32
 .data          0x00000000c0022105        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0022105        0x0 crtn.32
 .data          0x00000000c0022105        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .data          0x00000000c0022105        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .data          0x00000000c0022105        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .data          0x00000000c0022105        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0022108        0x0
 .got           0x00000000c0022108        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0022108        0x0
 .got.plt       0x00000000c0022108        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0022108        0x0
 .igot.plt      0x00000000c0022108        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0022108        0x0
 .tm_clone_table
                0x00000000c0022108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0022108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0022105      0x18b
 *(.eh_frame)
 *fill*         0x00000000c0022105        0x3 
 .eh_frame      0x00000000c0022108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0022108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0022108       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0022160       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00221a0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002220c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)

userkernel      0x00000000c0023000       0x8d
 *(userkernel)
 userkernel     0x00000000c0023000       0x52 krnl/signal.32
                0x00000000c0023000                KiDefaultSignalHandlerAbort(int)
                0x00000000c002302c                KiDefaultSignalHandlerTerminate(int)
 userkernel     0x00000000c0023052       0x3b krnl/syscalls.32
                0x00000000c0023052                KeSystemCallFromUsermode(unsigned long, unsigned long, unsigned long, unsigned long)

align_previous  0x00000000c0024000        0x1
 *(align_previous)
 align_previous
                0x00000000c0024000        0x1 krnl/signal.32
                0x00000000c0024000                DO_NOT_DELETE()

.rel.dyn        0x00000000c0024004        0x0
 .rel.got       0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN7SATABusD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV7SATABus
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4SATAD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4SATA
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6SATAPID0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6SATAPI
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0024004        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0024001     0x4ba7
                0x00000000c0024001                sbss = .
 *(COMMON)
 *fill*         0x00000000c0024001       0x1f 
 COMMON         0x00000000c0024020       0xa0 fs/iso9660/iso9660.32
                0x00000000c0024020                dcache
                0x00000000c0024060                cdDriveLetter
                0x00000000c0024080                icache
 *(.bss)
 .bss           0x00000000c00240c0        0x0 crti.32
 .bss           0x00000000c00240c0       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00240e0        0x4 acpica/utclib.32
 *fill*         0x00000000c00240e4       0x1c 
 .bss           0x00000000c0024100      0x378 core/malloc.32
 .bss           0x00000000c0024478        0x0 libk/ctype.32
 .bss           0x00000000c0024478        0x0 libk/string.32
 .bss           0x00000000c0024478        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024478        0x8 
 .bss           0x00000000c0024480       0x88 fs/fat/ff.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0024508        0x0 fs/fat/ffunicode.32
 *fill*         0x00000000c0024508       0x18 
 .bss           0x00000000c0024520      0x998 fs/iso9660/iso9660.32
 .bss           0x00000000c0024eb8        0x6 core/computer.32
                0x00000000c0024eb8                Krnl::computer
                0x00000000c0024ebc                KeIsPreemptionOn
                0x00000000c0024ebd                KeIsSchedulingOn
 *fill*         0x00000000c0024ebe        0x2 
 .bss           0x00000000c0024ec0        0x6 core/gdt.32
                0x00000000c0024ec0                gdtDescr
 .bss           0x00000000c0024ec6        0x0 core/idle.32
 *fill*         0x00000000c0024ec6        0x2 
 .bss           0x00000000c0024ec8        0x6 core/idt.32
                0x00000000c0024ec8                idtDescr
 .bss           0x00000000c0024ece        0x0 core/kheap.32
 *fill*         0x00000000c0024ece        0x2 
 .bss           0x00000000c0024ed0        0x4 core/main.32
                0x00000000c0024ed0                sysBootSettings
 .bss           0x00000000c0024ed4       0x29 core/physmgr.32
                0x00000000c0024ed4                Phys::forbidEvictions
                0x00000000c0024ed8                Phys::currentPagePointer
                0x00000000c0024edc                Phys::highestMem
                0x00000000c0024ee0                Phys::oldPercent
                0x00000000c0024ee4                Phys::usedPages
                0x00000000c0024ee8                Phys::usablePages
                0x00000000c0024eec                Phys::dmaUsage
 .bss           0x00000000c0024efd        0x0 core/pipe.32
 *fill*         0x00000000c0024efd        0x3 
 .bss           0x00000000c0024f00        0x9 core/terminal.32
                0x00000000c0024f00                terminalCycle
                0x00000000c0024f04                activeTerminal
                0x00000000c0024f08                VgaText::graphicMode
 *fill*         0x00000000c0024f09        0x1 
 .bss           0x00000000c0024f0a        0x2 core/tss.32
                0x00000000c0024f0a                doubleFaultSelector
 *fill*         0x00000000c0024f0c       0x14 
 .bss           0x00000000c0024f20       0x84 core/unixfile.32
                0x00000000c0024f20                sfileLpt
                0x00000000c0024f60                sfileCom
                0x00000000c0024f84                sfileNul
                0x00000000c0024f88                sfilePnt
                0x00000000c0024f8c                sfileAux
                0x00000000c0024f90                sfileCon
                0x00000000c0024f94                initialFilesAdded
                0x00000000c0024f98                unixFileLinkedList
 .bss           0x00000000c0024fa4       0x10 core/virtmgr.32
                0x00000000c0024fa4                twswaps
                0x00000000c0024fa8                swapBalance
                0x00000000c0024fac                Virt::swapfileBitmap
                0x00000000c0024fb0                firstVAS
 .bss           0x00000000c0024fb4        0x0 coreobjs/c++.32
 .bss           0x00000000c0024fb4        0x0 dbg/kconsole.32
 .bss           0x00000000c0024fb4        0x4 fs/vfs.32
                0x00000000c0024fb4                installedFilesystems
 .bss           0x00000000c0024fb8        0x0 hal/bus.32
 .bss           0x00000000c0024fb8        0x0 hal/buzzer.32
 .bss           0x00000000c0024fb8        0x8 hal/clock.32
                0x00000000c0024fb8                User::dstOn
                0x00000000c0024fb9                User::timezoneHalfHourOffset
                0x00000000c0024fbc                User::timezoneHourOffset
 .bss           0x00000000c0024fc0        0x0 hal/device.32
 .bss           0x00000000c0024fc0        0x0 hal/diskctrl.32
 .bss           0x00000000c0024fc0        0x0 hal/diskphys.32
 .bss           0x00000000c0024fc0        0x0 hal/fpu.32
 .bss           0x00000000c0024fc0     0x2000 hal/intctrl.32
                0x00000000c0024fc0                INT_contexts
                0x00000000c0025fc0                INT_handlers
 .bss           0x00000000c0026fc0      0x429 hal/keybrd.32
                0x00000000c0026fc0                keyboardWaitingTaskList
                0x00000000c0026fc4                keyboardSetupYet
                0x00000000c0026fc8                guiKeyboardHandler
                0x00000000c0026fe0                keystates
 *fill*         0x00000000c00273e9       0x17 
 .bss           0x00000000c0027400       0x88 hal/logidisk.32
                0x00000000c0027400                diskAssignments
                0x00000000c0027420                disks
 .bss           0x00000000c0027488        0x4 hal/mouse.32
                0x00000000c0027488                guiMouseHandler
 .bss           0x00000000c002748c        0x0 hal/nic.32
 .bss           0x00000000c002748c        0x0 hal/partition.32
 .bss           0x00000000c002748c        0x0 hal/serial.32
 .bss           0x00000000c002748c        0x4 hal/timer.32
                0x00000000c002748c                milliTenthsSinceBoot
 .bss           0x00000000c0027490        0x0 hal/vcache.32
 .bss           0x00000000c0027490        0x4 hal/video.32
                0x00000000c0027490                screen
 *fill*         0x00000000c0027494        0xc 
 .bss           0x00000000c00274a0      0x480 hw/acpi.32
                0x00000000c00274a0                systemSleepFunction
                0x00000000c00274a4                systemResetFunction
                0x00000000c00274a8                systemShutdownFunction
                0x00000000c00274ac                nextACPITable
                0x00000000c00274c0                acpiTables
                0x00000000c00276c0                usingXSDT
                0x00000000c00276c4                MADTpointer
                0x00000000c00276c8                RSDTpointer
                0x00000000c00276cc                RSDPpointer
                0x00000000c00276d0                nextAPICNMI
                0x00000000c00276e0                apicNMIInfo
                0x00000000c0027760                legacyIRQFlags
                0x00000000c0027780                ioapicDiscoveryNumber
                0x00000000c00277a0                ioapicFoundInMADT
                0x00000000c00277c0                ioapicAddresses
                0x00000000c0027840                ioapicGSIBase
                0x00000000c00278c0                processorDiscoveryNumber
                0x00000000c00278e0                matchingAPICID
                0x00000000c0027900                processorID
 .bss           0x00000000c0027920       0x10 hw/cpu.32
                0x00000000c0027920                lastD
                0x00000000c0027924                lastC
                0x00000000c0027928                lastB
                0x00000000c002792c                lastA
 .bss           0x00000000c0027930        0x0 krnl/bootmsg.32
 .bss           0x00000000c0027930        0x8 krnl/env.32
                0x00000000c0027930                Krnl::userEnv
                0x00000000c0027934                Krnl::systemEnv
 .bss           0x00000000c0027938        0x0 krnl/inlines.32
 .bss           0x00000000c0027938        0x1 krnl/panic.32
                0x00000000c0027938                KeIsKernelInPanic
 *fill*         0x00000000c0027939        0x7 
 .bss           0x00000000c0027940       0x48 krnl/powctrl.32
                0x00000000c0027940                Krnl::powCtrlOnBattery
                0x00000000c0027960                Krnl::currentPowerSettings
                0x00000000c0027984                Krnl::secondsSinceLastUserIO
 .bss           0x00000000c0027988        0x8 krnl/random.32
                0x00000000c0027988                kiRandSeed
 .bss           0x00000000c0027990        0x0 krnl/resolve.32
 .bss           0x00000000c0027990        0x0 krnl/signal.32
 .bss           0x00000000c0027990        0x0 krnl/syscalls.32
 .bss           0x00000000c0027990        0x0 net/ethernet.32
 .bss           0x00000000c0027990        0x4 reg/cm.32
 .bss           0x00000000c0027994        0x0 reg/registry.32
 .bss           0x00000000c0027994        0x0 sys/eject.32
 .bss           0x00000000c0027994        0x0 sys/exit.32
 .bss           0x00000000c0027994        0x0 sys/getcwd.32
 .bss           0x00000000c0027994        0x0 sys/getpid.32
 .bss           0x00000000c0027994        0x0 sys/getramdata.32
 .bss           0x00000000c0027994        0x0 sys/getvgaptr.32
 .bss           0x00000000c0027994        0x0 sys/kill.32
 .bss           0x00000000c0027994        0x0 sys/loaddll.32
 .bss           0x00000000c0027994        0x0 sys/read.32
 .bss           0x00000000c0027994        0x0 sys/registersignal.32
 .bss           0x00000000c0027994        0x0 sys/registry.32
 .bss           0x00000000c0027994        0x0 sys/sbrk.32
 .bss           0x00000000c0027994        0x0 sys/setcwd.32
 .bss           0x00000000c0027994        0x0 sys/settime.32
 .bss           0x00000000c0027994        0x0 sys/timezone.32
 .bss           0x00000000c0027994        0x0 sys/write.32
 .bss           0x00000000c0027994        0x0 sys/wsbe.32
 .bss           0x00000000c0027994        0x0 sys/yield.32
 *fill*         0x00000000c0027994        0xc 
 .bss           0x00000000c00279a0      0x7a4 thr/elf.32
                0x00000000c00279a0                Thr::driverLookupNext
                0x00000000c00279c0                Thr::driverLookupLen
                0x00000000c0027bc0                Thr::driverLookupAddr
                0x00000000c0027dc0                Thr::driverNameLookup
                0x00000000c0027fc0                Thr::kernelSymbols
                0x00000000c0028040                Thr::kernelStringTable
                0x00000000c00280c0                Thr::kernelSymbolTable
                0x00000000c0028140                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0028144        0x4 
 .bss           0x00000000c0028148       0x68 thr/prcssthr.32
                0x00000000c0028148                cleanerThread
                0x00000000c002814c                weNeedTheCleanerToNotBlock
                0x00000000c0028150                retValLockStuff
                0x00000000c0028154                retValSchedLock
                0x00000000c0028158                lockStuffLock
                0x00000000c002815c                schedulerLock
                0x00000000c0028160                taskSwitchesPostponedFlag
                0x00000000c0028164                postponeTaskSwitchesCounter
                0x00000000c0028168                irqDisableCounter
                0x00000000c002816c                terminatedTaskList
                0x00000000c0028178                sleepingTaskList
                0x00000000c0028184                taskList
                0x00000000c0028190                kernelProcess
 *fill*         0x00000000c00281b0       0x10 
 .bss           0x00000000c00281c0       0x40 vm86/vm8086.32
                0x00000000c00281c0                Vm::vmRetV
                0x00000000c00281c4                Vm::vmDone
                0x00000000c00281c5                Vm::vmReady
                0x00000000c00281c8                Vm::vm86Thread
                0x00000000c00281cc                Vm::vmToHostCommsPtr
                0x00000000c00281e0                Vm::vmToHostComms
 .bss           0x00000000c0028200       0x14 arch/i386/hal.32
                0x00000000c0028200                apic
                0x00000000c0028204                fpuOwner
                0x00000000c0028208                coproLoadFunc
                0x00000000c002820c                coproSaveFunc
                0x00000000c0028210                gpFaultIntercept
 .bss           0x00000000c0028214        0x0 arch/i386/pic.32
 .bss           0x00000000c0028214        0x2 arch/i386/rtc.32
 .bss           0x00000000c0028216        0x0 arch/i386/vga.32
 *fill*         0x00000000c0028216        0xa 
 .bss           0x00000000c0028220       0xf0 fs/fat/vfslink.32
                0x00000000c0028220                FAT::fats
                0x00000000c0028240                FAT::vfsToFatRemaps
                0x00000000c00282c0                fatToVFSRemaps
 .bss           0x00000000c0028310        0x0 fs/iso9660/helper.32
 *fill*         0x00000000c0028310       0x10 
 .bss           0x00000000c0028320      0x820 fs/iso9660/vfslink.32
                0x00000000c0028320                iso9660Owner
                0x00000000c0028324                recentSector
                0x00000000c0028340                recentBuffer
 .bss           0x00000000c0028b40        0x0 hal/sound/sndcard.32
 .bss           0x00000000c0028b40        0x0 hal/sound/sndport.32
 .bss           0x00000000c0028b40        0x0 hw/bus/isa.32
 .bss           0x00000000c0028b40        0xd hw/bus/pci.32
                0x00000000c0028b40                thePCI
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0028b4d        0x0 hw/diskctrl/satabus.32
 *fill*         0x00000000c0028b4d        0x3 
 .bss           0x00000000c0028b50        0x8 hw/diskphys/ata.32
                0x00000000c0028b50                ataSectorsWritten
                0x00000000c0028b54                ataSectorsRead
 .bss           0x00000000c0028b58        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/sata.32
 .bss           0x00000000c0028b58        0x0 hw/diskphys/satapi.32
 *fill*         0x00000000c0028b58        0x8 
 .bss           0x00000000c0028b60       0x41 hw/intctrl/apic.32
                0x00000000c0028b60                noOfIOAPICs
                0x00000000c0028b80                ioapics
                0x00000000c0028ba0                IOAPICsSetupYet
 .bss           0x00000000c0028ba1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0028ba1        0x3 
 .bss           0x00000000c0028ba4        0x4 hw/timer/pit.32
                0x00000000c0028ba4                pitFreq
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0028ba8        0x0 crtn.32
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .bss           0x00000000c0028ba8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0028ba8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c002d74f                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libkgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)
