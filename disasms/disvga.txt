
packages/banana/32/0002/vga.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	53                   	push   ebx
10000004:	83 ec 14             	sub    esp,0x14
10000007:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000000a:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
1000000d:	c7 45 ec 70 11 00 00 	mov    DWORD PTR [ebp-0x14],0x1170
10000014:	83 ec 0c             	sub    esp,0xc
10000017:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
1000001a:	e8 fc ff ff ff       	call   1000001b <start(void*)+0x1b>	1000001b: R_386_PC32	malloc
1000001f:	83 c4 10             	add    esp,0x10
10000022:	89 c3                	mov    ebx,eax
10000024:	83 ec 0c             	sub    esp,0xc
10000027:	53                   	push   ebx
10000028:	e8 fc ff ff ff       	call   10000029 <start(void*)+0x29>	10000029: R_386_PC32	VGAVideo::VGAVideo()
1000002d:	83 c4 10             	add    esp,0x10
10000030:	89 5d f0             	mov    DWORD PTR [ebp-0x10],ebx
10000033:	83 ec 08             	sub    esp,0x8
10000036:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000039:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000003c:	e8 fc ff ff ff       	call   1000003d <start(void*)+0x3d>	1000003d: R_386_PC32	Device::addChild(Device*)
10000041:	83 c4 10             	add    esp,0x10
10000044:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000047:	8b 00                	mov    eax,DWORD PTR [eax]
10000049:	83 c0 08             	add    eax,0x8
1000004c:	8b 00                	mov    eax,DWORD PTR [eax]
1000004e:	6a 00                	push   0x0
10000050:	6a 00                	push   0x0
10000052:	6a 00                	push   0x0
10000054:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000057:	ff d0                	call   eax
10000059:	83 c4 10             	add    esp,0x10
1000005c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000005f:	a3 00 00 00 00       	mov    ds:0x0,eax	10000060: R_386_32	screen
10000064:	90                   	nop
10000065:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000068:	c9                   	leave  
10000069:	c3                   	ret    

1000006a <VGAVideo::setPlane(int)>:
1000006a:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000006e:	39 0d c0 13 00 10    	cmp    DWORD PTR ds:0x100013c0,ecx	10000070: R_386_32	.data
10000074:	74 2b                	je     100000a1 <VGAVideo::setPlane(int)+0x37>
10000076:	89 0d c0 13 00 10    	mov    DWORD PTR ds:0x100013c0,ecx	10000078: R_386_32	.data
1000007c:	b0 04                	mov    al,0x4
1000007e:	ba ce 03 00 00       	mov    edx,0x3ce
10000083:	ee                   	out    dx,al
10000084:	ba cf 03 00 00       	mov    edx,0x3cf
10000089:	88 c8                	mov    al,cl
1000008b:	ee                   	out    dx,al
1000008c:	b0 02                	mov    al,0x2
1000008e:	ba c4 03 00 00       	mov    edx,0x3c4
10000093:	ee                   	out    dx,al
10000094:	b8 01 00 00 00       	mov    eax,0x1
10000099:	ba c5 03 00 00       	mov    edx,0x3c5
1000009e:	d3 e0                	shl    eax,cl
100000a0:	ee                   	out    dx,al
100000a1:	c3                   	ret    

100000a2 <VGAVideo::VGAVideo()>:
100000a2:	55                   	push   ebp
100000a3:	89 e5                	mov    ebp,esp
100000a5:	83 ec 08             	sub    esp,0x8
100000a8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000ab:	83 ec 08             	sub    esp,0x8
100000ae:	68 30 13 00 10       	push   0x10001330	100000af: R_386_32	.text
100000b3:	50                   	push   eax
100000b4:	e8 fc ff ff ff       	call   100000b5 <VGAVideo::VGAVideo()+0x13>	100000b5: R_386_PC32	Video::Video(char const*)
100000b9:	83 c4 10             	add    esp,0x10
100000bc:	ba 08 00 00 00       	mov    edx,0x8	100000bd: R_386_32	vtable for VGAVideo
100000c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c4:	89 10                	mov    DWORD PTR [eax],edx
100000c6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c9:	c7 80 68 11 00 00 00 00 0a 00 	mov    DWORD PTR [eax+0x1168],0xa0000
100000d3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000d6:	c7 80 6c 11 00 00 12 00 00 00 	mov    DWORD PTR [eax+0x116c],0x12
100000e0:	90                   	nop
100000e1:	c9                   	leave  
100000e2:	c3                   	ret    
100000e3:	90                   	nop

100000e4 <VGAVideo::close(int, int, void*)>:
100000e4:	31 c0                	xor    eax,eax
100000e6:	c3                   	ret    

100000e7 <get_bios_area_video_type()>:
100000e7:	a1 10 04 00 00       	mov    eax,ds:0x410
100000ec:	83 e0 30             	and    eax,0x30
100000ef:	c3                   	ret    

100000f0 <VGAVideo::open(int, int, void*)>:
100000f0:	57                   	push   edi
100000f1:	56                   	push   esi
100000f2:	53                   	push   ebx
100000f3:	83 ec 40             	sub    esp,0x40
100000f6:	e8 fc ff ff ff       	call   100000f7 <VGAVideo::open(int, int, void*)+0x7>	100000f7: R_386_PC32	get_bios_area_video_type()
100000fb:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
100000ff:	83 f8 30             	cmp    eax,0x30
10000102:	0f 94 83 64 11 00 00 	sete   BYTE PTR [ebx+0x1164]
10000109:	f6 05 01 00 00 00 08 	test   BYTE PTR ds:0x1,0x8	1000010b: R_386_32	keBootSettings
10000110:	0f 84 25 03 00 00    	je     1000043b <VGAVideo::open(int, int, void*)+0x34b>
10000116:	c6 83 64 11 00 00 01 	mov    BYTE PTR [ebx+0x1164],0x1
1000011d:	b8 11 00 00 00       	mov    eax,0x11
10000122:	83 ec 0c             	sub    esp,0xc
10000125:	89 83 6c 11 00 00    	mov    DWORD PTR [ebx+0x116c],eax
1000012b:	c7 83 58 01 00 00 80 02 00 00 	mov    DWORD PTR [ebx+0x158],0x280
10000135:	c7 83 5c 01 00 00 e0 01 00 00 	mov    DWORD PTR [ebx+0x15c],0x1e0
1000013f:	c7 83 68 11 00 00 00 00 0a 00 	mov    DWORD PTR [ebx+0x1168],0xa0000
10000149:	50                   	push   eax
1000014a:	50                   	push   eax
1000014b:	68 90 00 00 00       	push   0x90
10000150:	6a 00                	push   0x0
10000152:	68 3c 13 00 10       	push   0x1000133c	10000153: R_386_32	.text
10000157:	e8 fc ff ff ff       	call   10000158 <VGAVideo::open(int, int, void*)+0x68>	10000158: R_386_PC32	Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
1000015c:	83 c4 20             	add    esp,0x20
1000015f:	e8 fc ff ff ff       	call   10000160 <VGAVideo::open(int, int, void*)+0x70>	10000160: R_386_PC32	Vm::finish8086()
10000164:	83 ec 08             	sub    esp,0x8
10000167:	ff b3 6c 11 00 00    	push   DWORD PTR [ebx+0x116c]
1000016d:	68 55 13 00 10       	push   0x10001355	1000016e: R_386_32	.text
10000172:	e8 fc ff ff ff       	call   10000173 <VGAVideo::open(int, int, void*)+0x83>	10000173: R_386_PC32	Dbg::kprintf(char const*, ...)
10000177:	8b 83 68 11 00 00    	mov    eax,DWORD PTR [ebx+0x1168]
1000017d:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000182:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000186:	58                   	pop    eax
10000187:	5a                   	pop    edx
10000188:	6a 00                	push   0x0
1000018a:	53                   	push   ebx
1000018b:	e8 fc ff ff ff       	call   1000018c <VGAVideo::open(int, int, void*)+0x9c>	1000018c: R_386_PC32	VGAVideo::setPlane(int)
10000190:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000194:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
1000019a:	83 c4 10             	add    esp,0x10
1000019d:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
100001a4:	85 c9                	test   ecx,ecx
100001a6:	79 03                	jns    100001ab <VGAVideo::open(int, int, void*)+0xbb>
100001a8:	83 c1 07             	add    ecx,0x7
100001ab:	c1 f9 03             	sar    ecx,0x3
100001ae:	31 c0                	xor    eax,eax
100001b0:	89 d7                	mov    edi,edx
100001b2:	f3 aa                	rep stos BYTE PTR es:[edi],al
100001b4:	80 bb 64 11 00 00 00 	cmp    BYTE PTR [ebx+0x1164],0x0
100001bb:	0f 84 8b 02 00 00    	je     1000044c <VGAVideo::open(int, int, void*)+0x35c>
100001c1:	8d 7c 24 10          	lea    edi,[esp+0x10]
100001c5:	bb da 03 00 00       	mov    ebx,0x3da
100001ca:	be 00 13 00 10       	mov    esi,0x10001300	100001cb: R_386_32	.text
100001cf:	b9 0c 00 00 00       	mov    ecx,0xc
100001d4:	89 da                	mov    edx,ebx
100001d6:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100001d8:	ec                   	in     al,dx
100001d9:	31 f6                	xor    esi,esi
100001db:	b9 c0 03 00 00       	mov    ecx,0x3c0
100001e0:	89 f0                	mov    eax,esi
100001e2:	89 ca                	mov    edx,ecx
100001e4:	ee                   	out    dx,al
100001e5:	ee                   	out    dx,al
100001e6:	89 da                	mov    edx,ebx
100001e8:	ec                   	in     al,dx
100001e9:	b0 01                	mov    al,0x1
100001eb:	89 ca                	mov    edx,ecx
100001ed:	ee                   	out    dx,al
100001ee:	ee                   	out    dx,al
100001ef:	89 da                	mov    edx,ebx
100001f1:	ec                   	in     al,dx
100001f2:	b0 02                	mov    al,0x2
100001f4:	89 ca                	mov    edx,ecx
100001f6:	ee                   	out    dx,al
100001f7:	ee                   	out    dx,al
100001f8:	89 da                	mov    edx,ebx
100001fa:	ec                   	in     al,dx
100001fb:	b0 03                	mov    al,0x3
100001fd:	89 ca                	mov    edx,ecx
100001ff:	ee                   	out    dx,al
10000200:	ee                   	out    dx,al
10000201:	89 da                	mov    edx,ebx
10000203:	ec                   	in     al,dx
10000204:	b0 04                	mov    al,0x4
10000206:	89 ca                	mov    edx,ecx
10000208:	ee                   	out    dx,al
10000209:	ee                   	out    dx,al
1000020a:	89 da                	mov    edx,ebx
1000020c:	ec                   	in     al,dx
1000020d:	b0 05                	mov    al,0x5
1000020f:	89 ca                	mov    edx,ecx
10000211:	ee                   	out    dx,al
10000212:	ee                   	out    dx,al
10000213:	89 da                	mov    edx,ebx
10000215:	ec                   	in     al,dx
10000216:	b0 06                	mov    al,0x6
10000218:	89 ca                	mov    edx,ecx
1000021a:	ee                   	out    dx,al
1000021b:	ee                   	out    dx,al
1000021c:	89 da                	mov    edx,ebx
1000021e:	ec                   	in     al,dx
1000021f:	b0 07                	mov    al,0x7
10000221:	89 ca                	mov    edx,ecx
10000223:	ee                   	out    dx,al
10000224:	ee                   	out    dx,al
10000225:	89 da                	mov    edx,ebx
10000227:	ec                   	in     al,dx
10000228:	b0 08                	mov    al,0x8
1000022a:	89 ca                	mov    edx,ecx
1000022c:	ee                   	out    dx,al
1000022d:	ee                   	out    dx,al
1000022e:	89 da                	mov    edx,ebx
10000230:	ec                   	in     al,dx
10000231:	b0 09                	mov    al,0x9
10000233:	89 ca                	mov    edx,ecx
10000235:	ee                   	out    dx,al
10000236:	ee                   	out    dx,al
10000237:	89 da                	mov    edx,ebx
10000239:	ec                   	in     al,dx
1000023a:	b0 0a                	mov    al,0xa
1000023c:	89 ca                	mov    edx,ecx
1000023e:	ee                   	out    dx,al
1000023f:	ee                   	out    dx,al
10000240:	89 da                	mov    edx,ebx
10000242:	ec                   	in     al,dx
10000243:	b0 0b                	mov    al,0xb
10000245:	89 ca                	mov    edx,ecx
10000247:	ee                   	out    dx,al
10000248:	ee                   	out    dx,al
10000249:	89 da                	mov    edx,ebx
1000024b:	ec                   	in     al,dx
1000024c:	b0 0c                	mov    al,0xc
1000024e:	89 ca                	mov    edx,ecx
10000250:	ee                   	out    dx,al
10000251:	ee                   	out    dx,al
10000252:	89 da                	mov    edx,ebx
10000254:	ec                   	in     al,dx
10000255:	b0 0d                	mov    al,0xd
10000257:	89 ca                	mov    edx,ecx
10000259:	ee                   	out    dx,al
1000025a:	ee                   	out    dx,al
1000025b:	89 da                	mov    edx,ebx
1000025d:	ec                   	in     al,dx
1000025e:	b0 0e                	mov    al,0xe
10000260:	89 ca                	mov    edx,ecx
10000262:	ee                   	out    dx,al
10000263:	ee                   	out    dx,al
10000264:	89 da                	mov    edx,ebx
10000266:	ec                   	in     al,dx
10000267:	b0 0f                	mov    al,0xf
10000269:	89 ca                	mov    edx,ecx
1000026b:	ee                   	out    dx,al
1000026c:	ee                   	out    dx,al
1000026d:	89 da                	mov    edx,ebx
1000026f:	ec                   	in     al,dx
10000270:	b0 20                	mov    al,0x20
10000272:	89 ca                	mov    edx,ecx
10000274:	ee                   	out    dx,al
10000275:	ba c8 03 00 00       	mov    edx,0x3c8
1000027a:	89 f0                	mov    eax,esi
1000027c:	ee                   	out    dx,al
1000027d:	ba c9 03 00 00       	mov    edx,0x3c9
10000282:	0f b6 44 24 10       	movzx  eax,BYTE PTR [esp+0x10]
10000287:	c1 f8 02             	sar    eax,0x2
1000028a:	ee                   	out    dx,al
1000028b:	0f b6 44 24 11       	movzx  eax,BYTE PTR [esp+0x11]
10000290:	c1 f8 02             	sar    eax,0x2
10000293:	ee                   	out    dx,al
10000294:	0f b6 44 24 12       	movzx  eax,BYTE PTR [esp+0x12]
10000299:	c1 f8 02             	sar    eax,0x2
1000029c:	ee                   	out    dx,al
1000029d:	0f b6 44 24 13       	movzx  eax,BYTE PTR [esp+0x13]
100002a2:	c1 f8 02             	sar    eax,0x2
100002a5:	ee                   	out    dx,al
100002a6:	0f b6 44 24 14       	movzx  eax,BYTE PTR [esp+0x14]
100002ab:	c1 f8 02             	sar    eax,0x2
100002ae:	ee                   	out    dx,al
100002af:	0f b6 44 24 15       	movzx  eax,BYTE PTR [esp+0x15]
100002b4:	c1 f8 02             	sar    eax,0x2
100002b7:	ee                   	out    dx,al
100002b8:	0f b6 44 24 16       	movzx  eax,BYTE PTR [esp+0x16]
100002bd:	c1 f8 02             	sar    eax,0x2
100002c0:	ee                   	out    dx,al
100002c1:	0f b6 44 24 17       	movzx  eax,BYTE PTR [esp+0x17]
100002c6:	c1 f8 02             	sar    eax,0x2
100002c9:	ee                   	out    dx,al
100002ca:	0f b6 44 24 18       	movzx  eax,BYTE PTR [esp+0x18]
100002cf:	c1 f8 02             	sar    eax,0x2
100002d2:	ee                   	out    dx,al
100002d3:	0f b6 44 24 19       	movzx  eax,BYTE PTR [esp+0x19]
100002d8:	c1 f8 02             	sar    eax,0x2
100002db:	ee                   	out    dx,al
100002dc:	0f b6 44 24 1a       	movzx  eax,BYTE PTR [esp+0x1a]
100002e1:	c1 f8 02             	sar    eax,0x2
100002e4:	ee                   	out    dx,al
100002e5:	0f b6 44 24 1b       	movzx  eax,BYTE PTR [esp+0x1b]
100002ea:	c1 f8 02             	sar    eax,0x2
100002ed:	ee                   	out    dx,al
100002ee:	0f b6 44 24 1c       	movzx  eax,BYTE PTR [esp+0x1c]
100002f3:	c1 f8 02             	sar    eax,0x2
100002f6:	ee                   	out    dx,al
100002f7:	0f b6 44 24 1d       	movzx  eax,BYTE PTR [esp+0x1d]
100002fc:	c1 f8 02             	sar    eax,0x2
100002ff:	ee                   	out    dx,al
10000300:	0f b6 44 24 1e       	movzx  eax,BYTE PTR [esp+0x1e]
10000305:	c1 f8 02             	sar    eax,0x2
10000308:	ee                   	out    dx,al
10000309:	0f b6 44 24 1f       	movzx  eax,BYTE PTR [esp+0x1f]
1000030e:	c1 f8 02             	sar    eax,0x2
10000311:	ee                   	out    dx,al
10000312:	0f b6 44 24 20       	movzx  eax,BYTE PTR [esp+0x20]
10000317:	c1 f8 02             	sar    eax,0x2
1000031a:	ee                   	out    dx,al
1000031b:	0f b6 44 24 21       	movzx  eax,BYTE PTR [esp+0x21]
10000320:	c1 f8 02             	sar    eax,0x2
10000323:	ee                   	out    dx,al
10000324:	0f b6 44 24 22       	movzx  eax,BYTE PTR [esp+0x22]
10000329:	c1 f8 02             	sar    eax,0x2
1000032c:	ee                   	out    dx,al
1000032d:	0f b6 44 24 23       	movzx  eax,BYTE PTR [esp+0x23]
10000332:	c1 f8 02             	sar    eax,0x2
10000335:	ee                   	out    dx,al
10000336:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
1000033b:	c1 f8 02             	sar    eax,0x2
1000033e:	ee                   	out    dx,al
1000033f:	0f b6 44 24 25       	movzx  eax,BYTE PTR [esp+0x25]
10000344:	c1 f8 02             	sar    eax,0x2
10000347:	ee                   	out    dx,al
10000348:	0f b6 44 24 26       	movzx  eax,BYTE PTR [esp+0x26]
1000034d:	c1 f8 02             	sar    eax,0x2
10000350:	ee                   	out    dx,al
10000351:	0f b6 44 24 27       	movzx  eax,BYTE PTR [esp+0x27]
10000356:	c1 f8 02             	sar    eax,0x2
10000359:	ee                   	out    dx,al
1000035a:	0f b6 44 24 28       	movzx  eax,BYTE PTR [esp+0x28]
1000035f:	c1 f8 02             	sar    eax,0x2
10000362:	ee                   	out    dx,al
10000363:	0f b6 44 24 29       	movzx  eax,BYTE PTR [esp+0x29]
10000368:	c1 f8 02             	sar    eax,0x2
1000036b:	ee                   	out    dx,al
1000036c:	0f b6 44 24 2a       	movzx  eax,BYTE PTR [esp+0x2a]
10000371:	c1 f8 02             	sar    eax,0x2
10000374:	ee                   	out    dx,al
10000375:	0f b6 44 24 2b       	movzx  eax,BYTE PTR [esp+0x2b]
1000037a:	c1 f8 02             	sar    eax,0x2
1000037d:	ee                   	out    dx,al
1000037e:	0f b6 44 24 2c       	movzx  eax,BYTE PTR [esp+0x2c]
10000383:	c1 f8 02             	sar    eax,0x2
10000386:	ee                   	out    dx,al
10000387:	0f b6 44 24 2d       	movzx  eax,BYTE PTR [esp+0x2d]
1000038c:	c1 f8 02             	sar    eax,0x2
1000038f:	ee                   	out    dx,al
10000390:	0f b6 44 24 2e       	movzx  eax,BYTE PTR [esp+0x2e]
10000395:	c1 f8 02             	sar    eax,0x2
10000398:	ee                   	out    dx,al
10000399:	0f b6 44 24 2f       	movzx  eax,BYTE PTR [esp+0x2f]
1000039e:	c1 f8 02             	sar    eax,0x2
100003a1:	ee                   	out    dx,al
100003a2:	0f b6 44 24 30       	movzx  eax,BYTE PTR [esp+0x30]
100003a7:	c1 f8 02             	sar    eax,0x2
100003aa:	ee                   	out    dx,al
100003ab:	0f b6 44 24 31       	movzx  eax,BYTE PTR [esp+0x31]
100003b0:	c1 f8 02             	sar    eax,0x2
100003b3:	ee                   	out    dx,al
100003b4:	0f b6 44 24 32       	movzx  eax,BYTE PTR [esp+0x32]
100003b9:	c1 f8 02             	sar    eax,0x2
100003bc:	ee                   	out    dx,al
100003bd:	0f b6 44 24 33       	movzx  eax,BYTE PTR [esp+0x33]
100003c2:	c1 f8 02             	sar    eax,0x2
100003c5:	ee                   	out    dx,al
100003c6:	0f b6 44 24 34       	movzx  eax,BYTE PTR [esp+0x34]
100003cb:	c1 f8 02             	sar    eax,0x2
100003ce:	ee                   	out    dx,al
100003cf:	0f b6 44 24 35       	movzx  eax,BYTE PTR [esp+0x35]
100003d4:	c1 f8 02             	sar    eax,0x2
100003d7:	ee                   	out    dx,al
100003d8:	0f b6 44 24 36       	movzx  eax,BYTE PTR [esp+0x36]
100003dd:	c1 f8 02             	sar    eax,0x2
100003e0:	ee                   	out    dx,al
100003e1:	0f b6 44 24 37       	movzx  eax,BYTE PTR [esp+0x37]
100003e6:	c1 f8 02             	sar    eax,0x2
100003e9:	ee                   	out    dx,al
100003ea:	0f b6 44 24 38       	movzx  eax,BYTE PTR [esp+0x38]
100003ef:	c1 f8 02             	sar    eax,0x2
100003f2:	ee                   	out    dx,al
100003f3:	0f b6 44 24 39       	movzx  eax,BYTE PTR [esp+0x39]
100003f8:	c1 f8 02             	sar    eax,0x2
100003fb:	ee                   	out    dx,al
100003fc:	0f b6 44 24 3a       	movzx  eax,BYTE PTR [esp+0x3a]
10000401:	c1 f8 02             	sar    eax,0x2
10000404:	ee                   	out    dx,al
10000405:	0f b6 44 24 3b       	movzx  eax,BYTE PTR [esp+0x3b]
1000040a:	c1 f8 02             	sar    eax,0x2
1000040d:	ee                   	out    dx,al
1000040e:	0f b6 44 24 3c       	movzx  eax,BYTE PTR [esp+0x3c]
10000413:	c1 f8 02             	sar    eax,0x2
10000416:	ee                   	out    dx,al
10000417:	0f b6 44 24 3d       	movzx  eax,BYTE PTR [esp+0x3d]
1000041c:	c1 f8 02             	sar    eax,0x2
1000041f:	ee                   	out    dx,al
10000420:	0f b6 44 24 3e       	movzx  eax,BYTE PTR [esp+0x3e]
10000425:	c1 f8 02             	sar    eax,0x2
10000428:	ee                   	out    dx,al
10000429:	0f b6 44 24 3f       	movzx  eax,BYTE PTR [esp+0x3f]
1000042e:	c1 f8 02             	sar    eax,0x2
10000431:	ee                   	out    dx,al
10000432:	31 c0                	xor    eax,eax
10000434:	83 c4 40             	add    esp,0x40
10000437:	5b                   	pop    ebx
10000438:	5e                   	pop    esi
10000439:	5f                   	pop    edi
1000043a:	c3                   	ret    
1000043b:	83 f8 30             	cmp    eax,0x30
1000043e:	0f 95 c0             	setne  al
10000441:	0f b6 c0             	movzx  eax,al
10000444:	83 c0 11             	add    eax,0x11
10000447:	e9 d6 fc ff ff       	jmp    10000122 <VGAVideo::open(int, int, void*)+0x32>
1000044c:	83 ec 08             	sub    esp,0x8
1000044f:	6a 01                	push   0x1
10000451:	53                   	push   ebx
10000452:	e8 fc ff ff ff       	call   10000453 <VGAVideo::open(int, int, void*)+0x363>	10000453: R_386_PC32	VGAVideo::setPlane(int)
10000457:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000045b:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
10000461:	83 c4 10             	add    esp,0x10
10000464:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
1000046b:	85 c9                	test   ecx,ecx
1000046d:	78 7c                	js     100004eb <VGAVideo::open(int, int, void*)+0x3fb>
1000046f:	83 ec 08             	sub    esp,0x8
10000472:	31 c0                	xor    eax,eax
10000474:	89 d7                	mov    edi,edx
10000476:	c1 f9 03             	sar    ecx,0x3
10000479:	f3 aa                	rep stos BYTE PTR es:[edi],al
1000047b:	6a 02                	push   0x2
1000047d:	53                   	push   ebx
1000047e:	e8 fc ff ff ff       	call   1000047f <VGAVideo::open(int, int, void*)+0x38f>	1000047f: R_386_PC32	VGAVideo::setPlane(int)
10000483:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000487:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
1000048d:	83 c4 10             	add    esp,0x10
10000490:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
10000497:	85 c9                	test   ecx,ecx
10000499:	78 4b                	js     100004e6 <VGAVideo::open(int, int, void*)+0x3f6>
1000049b:	83 ec 08             	sub    esp,0x8
1000049e:	31 c0                	xor    eax,eax
100004a0:	89 d7                	mov    edi,edx
100004a2:	c1 f9 03             	sar    ecx,0x3
100004a5:	f3 aa                	rep stos BYTE PTR es:[edi],al
100004a7:	6a 03                	push   0x3
100004a9:	53                   	push   ebx
100004aa:	e8 fc ff ff ff       	call   100004ab <VGAVideo::open(int, int, void*)+0x3bb>	100004ab: R_386_PC32	VGAVideo::setPlane(int)
100004af:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100004b3:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
100004b9:	83 c4 10             	add    esp,0x10
100004bc:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
100004c3:	85 c9                	test   ecx,ecx
100004c5:	78 0e                	js     100004d5 <VGAVideo::open(int, int, void*)+0x3e5>
100004c7:	c1 f9 03             	sar    ecx,0x3
100004ca:	31 c0                	xor    eax,eax
100004cc:	89 d7                	mov    edi,edx
100004ce:	f3 aa                	rep stos BYTE PTR es:[edi],al
100004d0:	e9 ec fc ff ff       	jmp    100001c1 <VGAVideo::open(int, int, void*)+0xd1>
100004d5:	83 c1 07             	add    ecx,0x7
100004d8:	31 c0                	xor    eax,eax
100004da:	c1 f9 03             	sar    ecx,0x3
100004dd:	89 d7                	mov    edi,edx
100004df:	f3 aa                	rep stos BYTE PTR es:[edi],al
100004e1:	e9 db fc ff ff       	jmp    100001c1 <VGAVideo::open(int, int, void*)+0xd1>
100004e6:	83 c1 07             	add    ecx,0x7
100004e9:	eb b0                	jmp    1000049b <VGAVideo::open(int, int, void*)+0x3ab>
100004eb:	83 c1 07             	add    ecx,0x7
100004ee:	e9 7c ff ff ff       	jmp    1000046f <VGAVideo::open(int, int, void*)+0x37f>

100004f3 <monoPixelLookup(int, int, int)>:
100004f3:	56                   	push   esi
100004f4:	53                   	push   ebx
100004f5:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
100004f9:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100004fd:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10000501:	89 da                	mov    edx,ebx
10000503:	01 c1                	add    ecx,eax
10000505:	c1 fa 0e             	sar    edx,0xe
10000508:	83 e1 01             	and    ecx,0x1
1000050b:	01 c0                	add    eax,eax
1000050d:	83 e2 03             	and    edx,0x3
10000510:	83 e0 02             	and    eax,0x2
10000513:	89 de                	mov    esi,ebx
10000515:	09 c8                	or     eax,ecx
10000517:	c1 fe 16             	sar    esi,0x16
1000051a:	89 d9                	mov    ecx,ebx
1000051c:	83 e6 03             	and    esi,0x3
1000051f:	c1 f9 06             	sar    ecx,0x6
10000522:	83 e1 03             	and    ecx,0x3
10000525:	81 fb bb bb bb 00    	cmp    ebx,0xbbbbbb
1000052b:	74 1b                	je     10000548 <monoPixelLookup(int, int, int)+0x55>
1000052d:	8d 1c 32             	lea    ebx,[edx+esi*1]
10000530:	8d 14 5a             	lea    edx,[edx+ebx*2]
10000533:	5b                   	pop    ebx
10000534:	01 d1                	add    ecx,edx
10000536:	5e                   	pop    esi
10000537:	ba 80 ea ff 00       	mov    edx,0xffea80
1000053c:	d3 ea                	shr    edx,cl
1000053e:	88 c1                	mov    cl,al
10000540:	d3 ea                	shr    edx,cl
10000542:	89 d0                	mov    eax,edx
10000544:	83 e0 01             	and    eax,0x1
10000547:	c3                   	ret    
10000548:	b8 01 00 00 00       	mov    eax,0x1
1000054d:	5b                   	pop    ebx
1000054e:	5e                   	pop    esi
1000054f:	c3                   	ret    

10000550 <VGAVideo::blit(unsigned int*, int, int, int, int)>:
10000550:	83 ec 18             	sub    esp,0x18
10000553:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10000557:	8b 54 24 2c          	mov    edx,DWORD PTR [esp+0x2c]
1000055b:	8b 08                	mov    ecx,DWORD PTR [eax]
1000055d:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10000561:	52                   	push   edx
10000562:	ff 74 24 38          	push   DWORD PTR [esp+0x38]
10000566:	52                   	push   edx
10000567:	6a 00                	push   0x0
10000569:	6a 00                	push   0x0
1000056b:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
1000056f:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
10000573:	50                   	push   eax
10000574:	ff 51 3c             	call   DWORD PTR [ecx+0x3c]
10000577:	83 c4 3c             	add    esp,0x3c
1000057a:	c3                   	ret    
1000057b:	90                   	nop

1000057c <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)>:
1000057c:	57                   	push   edi
1000057d:	56                   	push   esi
1000057e:	53                   	push   ebx
1000057f:	83 ec 30             	sub    esp,0x30
10000582:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10000586:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
1000058a:	8b 7c 24 48          	mov    edi,DWORD PTR [esp+0x48]
1000058e:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10000592:	0f af be 58 01 00 00 	imul   edi,DWORD PTR [esi+0x158]
10000599:	85 c9                	test   ecx,ecx
1000059b:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
1000059f:	0f 8e 2d 02 00 00    	jle    100007d2 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x256>
100005a5:	8b 5c 24 54          	mov    ebx,DWORD PTR [esp+0x54]
100005a9:	85 db                	test   ebx,ebx
100005ab:	0f 8e 21 02 00 00    	jle    100007d2 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x256>
100005b1:	8d 3c 85 00 00 00 00 	lea    edi,[eax*4+0x0]
100005b8:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
100005bc:	0f af 44 24 50       	imul   eax,DWORD PTR [esp+0x50]
100005c1:	03 4c 24 48          	add    ecx,DWORD PTR [esp+0x48]
100005c5:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
100005c9:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
100005cd:	8d 04 82             	lea    eax,[edx+eax*4]
100005d0:	89 4c 24 28          	mov    DWORD PTR [esp+0x28],ecx
100005d4:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100005d8:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100005dc:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
100005e0:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100005e4:	c7 44 24 14 00 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
100005ec:	eb 39                	jmp    10000627 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xab>
100005ee:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
100005f2:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100005f6:	8d 59 01             	lea    ebx,[ecx+0x1]
100005f9:	8b 00                	mov    eax,DWORD PTR [eax]
100005fb:	8d 77 04             	lea    esi,[edi+0x4]
100005fe:	ff 37                	push   DWORD PTR [edi]
10000600:	89 f7                	mov    edi,esi
10000602:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
10000606:	51                   	push   ecx
10000607:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
1000060b:	ff 50 24             	call   DWORD PTR [eax+0x24]
1000060e:	ff 44 24 24          	inc    DWORD PTR [esp+0x24]
10000612:	83 c4 10             	add    esp,0x10
10000615:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000619:	89 5c 24 18          	mov    DWORD PTR [esp+0x18],ebx
1000061d:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
10000621:	0f 8e 83 01 00 00    	jle    100007aa <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x22e>
10000627:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000062b:	2b 44 24 14          	sub    eax,DWORD PTR [esp+0x14]
1000062f:	c1 f8 03             	sar    eax,0x3
10000632:	74 ba                	je     100005ee <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x72>
10000634:	f6 44 24 18 07       	test   BYTE PTR [esp+0x18],0x7
10000639:	75 b3                	jne    100005ee <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x72>
1000063b:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000063f:	83 f8 64             	cmp    eax,0x64
10000642:	7e 08                	jle    1000064c <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xd0>
10000644:	c7 44 24 0c 64 00 00 00 	mov    DWORD PTR [esp+0xc],0x64
1000064c:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10000650:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10000654:	8a 80 64 11 00 00    	mov    al,BYTE PTR [eax+0x1164]
1000065a:	c1 e1 03             	shl    ecx,0x3
1000065d:	88 44 24 1c          	mov    BYTE PTR [esp+0x1c],al
10000661:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
10000665:	84 c0                	test   al,al
10000667:	0f 84 6c 01 00 00    	je     100007d9 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x25d>
1000066d:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000671:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10000675:	31 f6                	xor    esi,esi
10000677:	8d 1c 08             	lea    ebx,[eax+ecx*1]
1000067a:	ff 74 24 48          	push   DWORD PTR [esp+0x48]
1000067e:	8d 04 33             	lea    eax,[ebx+esi*1]
10000681:	83 c7 04             	add    edi,0x4
10000684:	50                   	push   eax
10000685:	46                   	inc    esi
10000686:	ff 77 fc             	push   DWORD PTR [edi-0x4]
10000689:	e8 fc ff ff ff       	call   1000068a <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x10e>	1000068a: R_386_PC32	monoPixelLookup(int, int, int)
1000068e:	83 c4 0c             	add    esp,0xc
10000691:	88 86 9f 18 00 10    	mov    BYTE PTR [esi+0x1000189f],al	10000693: R_386_32	.bss
10000697:	3b 74 24 10          	cmp    esi,DWORD PTR [esp+0x10]
1000069b:	7c dd                	jl     1000067a <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xfe>
1000069d:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
100006a1:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100006a5:	8b 91 68 11 00 00    	mov    edx,DWORD PTR [ecx+0x1168]
100006ab:	03 44 24 20          	add    eax,DWORD PTR [esp+0x20]
100006af:	31 c9                	xor    ecx,ecx
100006b1:	c1 f8 03             	sar    eax,0x3
100006b4:	80 7c 24 1c 01       	cmp    BYTE PTR [esp+0x1c],0x1
100006b9:	8d 84 10 00 00 00 c2 	lea    eax,[eax+edx*1-0x3e000000]
100006c0:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100006c4:	19 c0                	sbb    eax,eax
100006c6:	83 e0 03             	and    eax,0x3
100006c9:	40                   	inc    eax
100006ca:	39 c1                	cmp    ecx,eax
100006cc:	0f 8d bb 00 00 00    	jge    1000078d <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x211>
100006d2:	51                   	push   ecx
100006d3:	be 01 00 00 00       	mov    esi,0x1
100006d8:	89 4c 24 20          	mov    DWORD PTR [esp+0x20],ecx
100006dc:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
100006e0:	e8 fc ff ff ff       	call   100006e1 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x165>	100006e1: R_386_PC32	VGAVideo::setPlane(int)
100006e5:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
100006e9:	58                   	pop    eax
100006ea:	d3 e6                	shl    esi,cl
100006ec:	5a                   	pop    edx
100006ed:	31 c0                	xor    eax,eax
100006ef:	0f b6 14 c5 a0 18 00 10 	movzx  edx,BYTE PTR [eax*8+0x100018a0]	100006f3: R_386_32	.bss
100006f7:	0f b6 1c c5 a1 18 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100018a1]	100006fb: R_386_32	.bss
100006ff:	21 f2                	and    edx,esi
10000701:	21 f3                	and    ebx,esi
10000703:	01 d2                	add    edx,edx
10000705:	09 d3                	or     ebx,edx
10000707:	0f b6 14 c5 a2 18 00 10 	movzx  edx,BYTE PTR [eax*8+0x100018a2]	1000070b: R_386_32	.bss
1000070f:	01 db                	add    ebx,ebx
10000711:	21 f2                	and    edx,esi
10000713:	09 da                	or     edx,ebx
10000715:	0f b6 1c c5 a3 18 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100018a3]	10000719: R_386_32	.bss
1000071d:	01 d2                	add    edx,edx
1000071f:	21 f3                	and    ebx,esi
10000721:	09 d3                	or     ebx,edx
10000723:	0f b6 14 c5 a4 18 00 10 	movzx  edx,BYTE PTR [eax*8+0x100018a4]	10000727: R_386_32	.bss
1000072b:	01 db                	add    ebx,ebx
1000072d:	21 f2                	and    edx,esi
1000072f:	09 da                	or     edx,ebx
10000731:	0f b6 1c c5 a5 18 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100018a5]	10000735: R_386_32	.bss
10000739:	01 d2                	add    edx,edx
1000073b:	21 f3                	and    ebx,esi
1000073d:	09 d3                	or     ebx,edx
1000073f:	0f b6 14 c5 a6 18 00 10 	movzx  edx,BYTE PTR [eax*8+0x100018a6]	10000743: R_386_32	.bss
10000747:	01 db                	add    ebx,ebx
10000749:	21 f2                	and    edx,esi
1000074b:	09 da                	or     edx,ebx
1000074d:	0f b6 1c c5 a7 18 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100018a7]	10000751: R_386_32	.bss
10000755:	01 d2                	add    edx,edx
10000757:	21 f3                	and    ebx,esi
10000759:	09 da                	or     edx,ebx
1000075b:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
1000075f:	d3 ea                	shr    edx,cl
10000761:	88 14 03             	mov    BYTE PTR [ebx+eax*1],dl
10000764:	40                   	inc    eax
10000765:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
10000769:	75 84                	jne    100006ef <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x173>
1000076b:	41                   	inc    ecx
1000076c:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10000770:	8a 80 64 11 00 00    	mov    al,BYTE PTR [eax+0x1164]
10000776:	88 44 24 1c          	mov    BYTE PTR [esp+0x1c],al
1000077a:	80 7c 24 1c 01       	cmp    BYTE PTR [esp+0x1c],0x1
1000077f:	19 c0                	sbb    eax,eax
10000781:	83 e0 03             	and    eax,0x3
10000784:	40                   	inc    eax
10000785:	39 c1                	cmp    ecx,eax
10000787:	0f 8c 45 ff ff ff    	jl     100006d2 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x156>
1000078d:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000791:	c1 e0 03             	shl    eax,0x3
10000794:	01 44 24 14          	add    DWORD PTR [esp+0x14],eax
10000798:	01 44 24 18          	add    DWORD PTR [esp+0x18],eax
1000079c:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100007a0:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
100007a4:	0f 8f 7d fe ff ff    	jg     10000627 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xab>
100007aa:	ff 44 24 48          	inc    DWORD PTR [esp+0x48]
100007ae:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
100007b2:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
100007b6:	8b bf 58 01 00 00    	mov    edi,DWORD PTR [edi+0x158]
100007bc:	01 7c 24 20          	add    DWORD PTR [esp+0x20],edi
100007c0:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100007c4:	01 7c 24 24          	add    DWORD PTR [esp+0x24],edi
100007c8:	39 44 24 48          	cmp    DWORD PTR [esp+0x48],eax
100007cc:	0f 85 06 fe ff ff    	jne    100005d8 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x5c>
100007d2:	83 c4 30             	add    esp,0x30
100007d5:	5b                   	pop    ebx
100007d6:	5e                   	pop    esi
100007d7:	5f                   	pop    edi
100007d8:	c3                   	ret    
100007d9:	31 c9                	xor    ecx,ecx
100007db:	8b 07                	mov    eax,DWORD PTR [edi]
100007dd:	83 c7 04             	add    edi,0x4
100007e0:	89 c3                	mov    ebx,eax
100007e2:	89 c2                	mov    edx,eax
100007e4:	c1 fb 15             	sar    ebx,0x15
100007e7:	c1 fa 0a             	sar    edx,0xa
100007ea:	83 e3 07             	and    ebx,0x7
100007ed:	83 e2 38             	and    edx,0x38
100007f0:	09 d3                	or     ebx,edx
100007f2:	8d 14 00             	lea    edx,[eax+eax*1]
100007f5:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100007f9:	81 e2 c0 01 00 00    	and    edx,0x1c0
100007ff:	01 c8                	add    eax,ecx
10000801:	09 da                	or     edx,ebx
10000803:	83 e0 01             	and    eax,0x1
10000806:	41                   	inc    ecx
10000807:	8a 84 50 00 00 00 00 	mov    al,BYTE PTR [eax+edx*2+0x0]	1000080a: R_386_32	dither16Data
1000080e:	88 81 9f 18 00 10    	mov    BYTE PTR [ecx+0x1000189f],al	10000810: R_386_32	.bss
10000814:	3b 4c 24 10          	cmp    ecx,DWORD PTR [esp+0x10]
10000818:	7c c1                	jl     100007db <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x25f>
1000081a:	e9 7e fe ff ff       	jmp    1000069d <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x121>
1000081f:	90                   	nop

10000820 <VGAVideo::putrect(int, int, int, int, unsigned int)>:
10000820:	57                   	push   edi
10000821:	56                   	push   esi
10000822:	53                   	push   ebx
10000823:	83 ec 40             	sub    esp,0x40
10000826:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
1000082a:	8b 80 68 11 00 00    	mov    eax,DWORD PTR [eax+0x1168]
10000830:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000835:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000839:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
1000083d:	c1 f8 15             	sar    eax,0x15
10000840:	83 e0 07             	and    eax,0x7
10000843:	89 c2                	mov    edx,eax
10000845:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10000849:	c1 f8 0a             	sar    eax,0xa
1000084c:	83 e0 38             	and    eax,0x38
1000084f:	09 d0                	or     eax,edx
10000851:	8b 54 24 64          	mov    edx,DWORD PTR [esp+0x64]
10000855:	01 d2                	add    edx,edx
10000857:	81 e2 c0 01 00 00    	and    edx,0x1c0
1000085d:	09 d0                	or     eax,edx
1000085f:	0f b6 bc 00 00 00 00 00 	movzx  edi,BYTE PTR [eax+eax*1+0x0]	10000863: R_386_32	dither16Data
10000867:	0f b6 84 00 01 00 00 00 	movzx  eax,BYTE PTR [eax+eax*1+0x1]	1000086b: R_386_32	dither16Data
1000086f:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
10000873:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000877:	8b 7c 24 60          	mov    edi,DWORD PTR [esp+0x60]
1000087b:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
1000087f:	03 7c 24 58          	add    edi,DWORD PTR [esp+0x58]
10000883:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10000887:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000088b:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
1000088f:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
10000893:	0f 8d ad 00 00 00    	jge    10000946 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x126>
10000899:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
1000089d:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
100008a1:	2b 7c 24 54          	sub    edi,DWORD PTR [esp+0x54]
100008a5:	8b 74 24 50          	mov    esi,DWORD PTR [esp+0x50]
100008a9:	89 7c 24 3c          	mov    DWORD PTR [esp+0x3c],edi
100008ad:	0f af 86 58 01 00 00 	imul   eax,DWORD PTR [esi+0x158]
100008b4:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
100008b8:	c1 f8 03             	sar    eax,0x3
100008bb:	c1 ff 03             	sar    edi,0x3
100008be:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100008c2:	89 7c 24 38          	mov    DWORD PTR [esp+0x38],edi
100008c6:	74 11                	je     100008d9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xb9>
100008c8:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100008cc:	83 e0 07             	and    eax,0x7
100008cf:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100008d3:	0f 84 ff 01 00 00    	je     10000ad8 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2b8>
100008d9:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
100008dd:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
100008e1:	a8 01                	test   al,0x1
100008e3:	0f 84 da 01 00 00    	je     10000ac3 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2a3>
100008e9:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100008ed:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
100008f1:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100008f5:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100008f9:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
100008fd:	80 b8 64 11 00 00 00 	cmp    BYTE PTR [eax+0x1164],0x0
10000904:	74 47                	je     1000094d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x12d>
10000906:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000090a:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
1000090e:	7d 24                	jge    10000934 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
10000910:	8b 5c 24 58          	mov    ebx,DWORD PTR [esp+0x58]
10000914:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000918:	8b 00                	mov    eax,DWORD PTR [eax]
1000091a:	ff 74 24 64          	push   DWORD PTR [esp+0x64]
1000091e:	53                   	push   ebx
1000091f:	43                   	inc    ebx
10000920:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
10000924:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
10000928:	ff 50 24             	call   DWORD PTR [eax+0x24]
1000092b:	83 c4 10             	add    esp,0x10
1000092e:	39 5c 24 0c          	cmp    DWORD PTR [esp+0xc],ebx
10000932:	75 e0                	jne    10000914 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xf4>
10000934:	ff 44 24 54          	inc    DWORD PTR [esp+0x54]
10000938:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
1000093c:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10000940:	0f 8f 53 ff ff ff    	jg     10000899 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x79>
10000946:	83 c4 40             	add    esp,0x40
10000949:	5b                   	pop    ebx
1000094a:	5e                   	pop    esi
1000094b:	5f                   	pop    edi
1000094c:	c3                   	ret    
1000094d:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000951:	c7 44 24 18 00 00 00 00 	mov    DWORD PTR [esp+0x18],0x0
10000959:	f7 d0                	not    eax
1000095b:	83 e0 07             	and    eax,0x7
1000095e:	89 c7                	mov    edi,eax
10000960:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10000964:	89 f9                	mov    ecx,edi
10000966:	b8 fe ff ff ff       	mov    eax,0xfffffffe
1000096b:	d3 c0                	rol    eax,cl
1000096d:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10000971:	83 ec 08             	sub    esp,0x8
10000974:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10000978:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
1000097c:	e8 fc ff ff ff       	call   1000097d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x15d>	1000097d: R_386_PC32	VGAVideo::setPlane(int)
10000981:	83 c4 10             	add    esp,0x10
10000984:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000988:	39 7c 24 14          	cmp    DWORD PTR [esp+0x14],edi
1000098c:	0f 84 c2 00 00 00    	je     10000a54 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x234>
10000992:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10000996:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
1000099a:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000099e:	d3 fe                	sar    esi,cl
100009a0:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
100009a4:	83 e6 01             	and    esi,0x1
100009a7:	d3 e6                	shl    esi,cl
100009a9:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
100009ad:	0f 8d aa 03 00 00    	jge    10000d5d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x53d>
100009b3:	8a 44 24 28          	mov    al,BYTE PTR [esp+0x28]
100009b7:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
100009bb:	89 c7                	mov    edi,eax
100009bd:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
100009c1:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100009c5:	83 c2 02             	add    edx,0x2
100009c8:	8d 1c 08             	lea    ebx,[eax+ecx*1]
100009cb:	89 f8                	mov    eax,edi
100009cd:	22 03                	and    al,BYTE PTR [ebx]
100009cf:	09 f0                	or     eax,esi
100009d1:	88 03                	mov    BYTE PTR [ebx],al
100009d3:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
100009d7:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
100009dd:	89 c3                	mov    ebx,eax
100009df:	c1 fb 02             	sar    ebx,0x2
100009e2:	01 d9                	add    ecx,ebx
100009e4:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
100009e8:	7f d7                	jg     100009c1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1a1>
100009ea:	c1 f8 03             	sar    eax,0x3
100009ed:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
100009f1:	03 44 24 24          	add    eax,DWORD PTR [esp+0x24]
100009f5:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
100009f9:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
100009fd:	d3 fe                	sar    esi,cl
100009ff:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
10000a03:	83 e6 01             	and    esi,0x1
10000a06:	d3 e6                	shl    esi,cl
10000a08:	8d 4f 01             	lea    ecx,[edi+0x1]
10000a0b:	83 7c 24 60 01       	cmp    DWORD PTR [esp+0x60],0x1
10000a10:	7e 2c                	jle    10000a3e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x21e>
10000a12:	8a 5c 24 28          	mov    bl,BYTE PTR [esp+0x28]
10000a16:	89 df                	mov    edi,ebx
10000a18:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
10000a1c:	89 fa                	mov    edx,edi
10000a1e:	01 c3                	add    ebx,eax
10000a20:	83 c1 02             	add    ecx,0x2
10000a23:	22 13                	and    dl,BYTE PTR [ebx]
10000a25:	09 f2                	or     edx,esi
10000a27:	88 13                	mov    BYTE PTR [ebx],dl
10000a29:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
10000a2d:	8b 93 58 01 00 00    	mov    edx,DWORD PTR [ebx+0x158]
10000a33:	c1 fa 02             	sar    edx,0x2
10000a36:	01 d0                	add    eax,edx
10000a38:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
10000a3c:	7f da                	jg     10000a18 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1f8>
10000a3e:	ff 44 24 18          	inc    DWORD PTR [esp+0x18]
10000a42:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10000a46:	83 f8 04             	cmp    eax,0x4
10000a49:	0f 85 22 ff ff ff    	jne    10000971 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x151>
10000a4f:	e9 e0 fe ff ff       	jmp    10000934 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
10000a54:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10000a58:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000a5c:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10000a60:	d3 f8                	sar    eax,cl
10000a62:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
10000a66:	83 e0 01             	and    eax,0x1
10000a69:	d3 e0                	shl    eax,cl
10000a6b:	39 7c 24 58          	cmp    DWORD PTR [esp+0x58],edi
10000a6f:	7d cd                	jge    10000a3e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x21e>
10000a71:	89 c7                	mov    edi,eax
10000a73:	0f b6 74 24 28       	movzx  esi,BYTE PTR [esp+0x28]
10000a78:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10000a7c:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10000a80:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000a84:	42                   	inc    edx
10000a85:	8d 1c 08             	lea    ebx,[eax+ecx*1]
10000a88:	89 f0                	mov    eax,esi
10000a8a:	22 03                	and    al,BYTE PTR [ebx]
10000a8c:	88 44 24 1c          	mov    BYTE PTR [esp+0x1c],al
10000a90:	89 f8                	mov    eax,edi
10000a92:	0b 44 24 1c          	or     eax,DWORD PTR [esp+0x1c]
10000a96:	88 03                	mov    BYTE PTR [ebx],al
10000a98:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000a9c:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000aa2:	c1 f8 03             	sar    eax,0x3
10000aa5:	01 c1                	add    ecx,eax
10000aa7:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
10000aab:	75 d3                	jne    10000a80 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x260>
10000aad:	ff 44 24 18          	inc    DWORD PTR [esp+0x18]
10000ab1:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10000ab5:	83 f8 04             	cmp    eax,0x4
10000ab8:	0f 85 b3 fe ff ff    	jne    10000971 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x151>
10000abe:	e9 71 fe ff ff       	jmp    10000934 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
10000ac3:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000ac7:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000acb:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000acf:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000ad3:	e9 21 fe ff ff       	jmp    100008f9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xd9>
10000ad8:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000adc:	83 e0 01             	and    eax,0x1
10000adf:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000ae3:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000ae7:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
10000aeb:	80 b8 64 11 00 00 01 	cmp    BYTE PTR [eax+0x1164],0x1
10000af2:	19 c0                	sbb    eax,eax
10000af4:	83 e0 03             	and    eax,0x3
10000af7:	40                   	inc    eax
10000af8:	39 c7                	cmp    edi,eax
10000afa:	0f 8d 33 02 00 00    	jge    10000d33 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x513>
10000b00:	57                   	push   edi
10000b01:	ff 74 24 54          	push   DWORD PTR [esp+0x54]
10000b05:	e8 fc ff ff ff       	call   10000b06 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2e6>	10000b06: R_386_PC32	VGAVideo::setPlane(int)
10000b0a:	5a                   	pop    edx
10000b0b:	59                   	pop    ecx
10000b0c:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000b10:	80 b8 64 11 00 00 00 	cmp    BYTE PTR [eax+0x1164],0x0
10000b17:	0f 84 59 01 00 00    	je     10000c76 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x456>
10000b1d:	89 f9                	mov    ecx,edi
10000b1f:	b8 01 00 00 00       	mov    eax,0x1
10000b24:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10000b28:	d3 e0                	shl    eax,cl
10000b2a:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000b2e:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10000b32:	01 c7                	add    edi,eax
10000b34:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10000b38:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
10000b3c:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000b40:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10000b44:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
10000b48:	0f 8d 0d 01 00 00    	jge    10000c5b <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
10000b4e:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000b52:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
10000b56:	40                   	inc    eax
10000b57:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000b5b:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10000b5f:	85 c0                	test   eax,eax
10000b61:	0f 85 9e 00 00 00    	jne    10000c05 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3e5>
10000b67:	eb 2a                	jmp    10000b93 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x373>
10000b69:	85 c0                	test   eax,eax
10000b6b:	b9 aa 00 00 00       	mov    ecx,0xaa
10000b70:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000b74:	74 6d                	je     10000be3 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3c3>
10000b76:	88 0c 18             	mov    BYTE PTR [eax+ebx*1],cl
10000b79:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000b7d:	46                   	inc    esi
10000b7e:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000b84:	c1 f8 03             	sar    eax,0x3
10000b87:	01 c3                	add    ebx,eax
10000b89:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
10000b8d:	0f 84 c8 00 00 00    	je     10000c5b <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
10000b93:	56                   	push   esi
10000b94:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
10000b98:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000b9c:	e8 fc ff ff ff       	call   10000b9d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x37d>	10000b9d: R_386_PC32	monoPixelLookup(int, int, int)
10000ba1:	83 c4 0c             	add    esp,0xc
10000ba4:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000ba8:	56                   	push   esi
10000ba9:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000bad:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000bb1:	e8 fc ff ff ff       	call   10000bb2 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x392>	10000bb2: R_386_PC32	monoPixelLookup(int, int, int)
10000bb6:	83 c4 0c             	add    esp,0xc
10000bb9:	89 c7                	mov    edi,eax
10000bbb:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10000bbf:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000bc3:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000bc7:	21 ca                	and    edx,ecx
10000bc9:	21 f9                	and    ecx,edi
10000bcb:	89 d0                	mov    eax,edx
10000bcd:	89 ca                	mov    edx,ecx
10000bcf:	74 98                	je     10000b69 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x349>
10000bd1:	85 c0                	test   eax,eax
10000bd3:	b9 ff 00 00 00       	mov    ecx,0xff
10000bd8:	ba 55 00 00 00       	mov    edx,0x55
10000bdd:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000be1:	75 93                	jne    10000b76 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x356>
10000be3:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
10000be6:	eb 91                	jmp    10000b79 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x359>
10000be8:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000bec:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
10000bef:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000bf3:	46                   	inc    esi
10000bf4:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000bfa:	c1 f8 03             	sar    eax,0x3
10000bfd:	01 c3                	add    ebx,eax
10000bff:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
10000c03:	74 56                	je     10000c5b <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
10000c05:	56                   	push   esi
10000c06:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
10000c0a:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000c0e:	e8 fc ff ff ff       	call   10000c0f <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3ef>	10000c0f: R_386_PC32	monoPixelLookup(int, int, int)
10000c13:	83 c4 0c             	add    esp,0xc
10000c16:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000c1a:	56                   	push   esi
10000c1b:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000c1f:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000c23:	e8 fc ff ff ff       	call   10000c24 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x404>	10000c24: R_386_PC32	monoPixelLookup(int, int, int)
10000c28:	83 c4 0c             	add    esp,0xc
10000c2b:	89 c7                	mov    edi,eax
10000c2d:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10000c31:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000c35:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000c39:	21 c8                	and    eax,ecx
10000c3b:	83 f8 01             	cmp    eax,0x1
10000c3e:	19 d2                	sbb    edx,edx
10000c40:	f7 d2                	not    edx
10000c42:	83 e2 55             	and    edx,0x55
10000c45:	83 f8 01             	cmp    eax,0x1
10000c48:	19 c0                	sbb    eax,eax
10000c4a:	83 e0 ab             	and    eax,0xffffffab
10000c4d:	48                   	dec    eax
10000c4e:	85 cf                	test   edi,ecx
10000c50:	74 96                	je     10000be8 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3c8>
10000c52:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10000c56:	88 04 1f             	mov    BYTE PTR [edi+ebx*1],al
10000c59:	eb 94                	jmp    10000bef <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3cf>
10000c5b:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
10000c5f:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10000c63:	39 44 24 28          	cmp    DWORD PTR [esp+0x28],eax
10000c67:	0f 85 cf fe ff ff    	jne    10000b3c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x31c>
10000c6d:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10000c71:	e9 6d fe ff ff       	jmp    10000ae3 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2c3>
10000c76:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000c7a:	8a 4c 24 2c          	mov    cl,BYTE PTR [esp+0x2c]
10000c7e:	d3 f8                	sar    eax,cl
10000c80:	a8 01                	test   al,0x1
10000c82:	0f 84 92 00 00 00    	je     10000d1a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4fa>
10000c88:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000c8c:	d3 f8                	sar    eax,cl
10000c8e:	83 e0 01             	and    eax,0x1
10000c91:	83 f8 01             	cmp    eax,0x1
10000c94:	19 ff                	sbb    edi,edi
10000c96:	89 f9                	mov    ecx,edi
10000c98:	89 f8                	mov    eax,edi
10000c9a:	83 e1 56             	and    ecx,0x56
10000c9d:	83 e0 ab             	and    eax,0xffffffab
10000ca0:	49                   	dec    ecx
10000ca1:	05 ff 00 00 00       	add    eax,0xff
10000ca6:	88 4c 24 1c          	mov    BYTE PTR [esp+0x1c],cl
10000caa:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000cae:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000cb2:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
10000cb6:	7d b5                	jge    10000c6d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x44d>
10000cb8:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10000cbc:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10000cc0:	89 de                	mov    esi,ebx
10000cc2:	01 df                	add    edi,ebx
10000cc4:	8b 5c 24 54          	mov    ebx,DWORD PTR [esp+0x54]
10000cc8:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10000ccc:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
10000cd0:	01 df                	add    edi,ebx
10000cd2:	8d 1c 03             	lea    ebx,[ebx+eax*1]
10000cd5:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
10000cd9:	89 f2                	mov    edx,esi
10000cdb:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000cdf:	eb 1b                	jmp    10000cfc <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4dc>
10000ce1:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10000ce5:	88 0c 17             	mov    BYTE PTR [edi+edx*1],cl
10000ce8:	40                   	inc    eax
10000ce9:	8b 7c 24 50          	mov    edi,DWORD PTR [esp+0x50]
10000ced:	8b 8f 58 01 00 00    	mov    ecx,DWORD PTR [edi+0x158]
10000cf3:	c1 f9 03             	sar    ecx,0x3
10000cf6:	01 ca                	add    edx,ecx
10000cf8:	39 c3                	cmp    ebx,eax
10000cfa:	74 0e                	je     10000d0a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4ea>
10000cfc:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10000d00:	a8 01                	test   al,0x1
10000d02:	74 dd                	je     10000ce1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4c1>
10000d04:	8a 4c 24 1c          	mov    cl,BYTE PTR [esp+0x1c]
10000d08:	eb db                	jmp    10000ce5 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4c5>
10000d0a:	46                   	inc    esi
10000d0b:	39 74 24 20          	cmp    DWORD PTR [esp+0x20],esi
10000d0f:	75 c8                	jne    10000cd9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4b9>
10000d11:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10000d15:	e9 c9 fd ff ff       	jmp    10000ae3 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2c3>
10000d1a:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000d1e:	d3 fe                	sar    esi,cl
10000d20:	83 e6 01             	and    esi,0x1
10000d23:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
10000d27:	75 43                	jne    10000d6c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x54c>
10000d29:	c6 44 24 1c 00       	mov    BYTE PTR [esp+0x1c],0x0
10000d2e:	e9 7b ff ff ff       	jmp    10000cae <VGAVideo::putrect(int, int, int, int, unsigned int)+0x48e>
10000d33:	8b 7c 24 54          	mov    edi,DWORD PTR [esp+0x54]
10000d37:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10000d3b:	83 e0 f8             	and    eax,0xfffffff8
10000d3e:	8d 44 07 ff          	lea    eax,[edi+eax*1-0x1]
10000d42:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10000d46:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10000d4a:	ff 44 24 54          	inc    DWORD PTR [esp+0x54]
10000d4e:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10000d52:	0f 8f 41 fb ff ff    	jg     10000899 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x79>
10000d58:	e9 e9 fb ff ff       	jmp    10000946 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x126>
10000d5d:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000d61:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000d67:	e9 7e fc ff ff       	jmp    100009ea <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1ca>
10000d6c:	c6 44 24 1c aa       	mov    BYTE PTR [esp+0x1c],0xaa
10000d71:	c7 44 24 18 55 00 00 00 	mov    DWORD PTR [esp+0x18],0x55
10000d79:	e9 30 ff ff ff       	jmp    10000cae <VGAVideo::putrect(int, int, int, int, unsigned int)+0x48e>

10000d7e <VGAVideo::readPixelApprox(int, int)>:
10000d7e:	57                   	push   edi
10000d7f:	31 ff                	xor    edi,edi
10000d81:	56                   	push   esi
10000d82:	53                   	push   ebx
10000d83:	31 db                	xor    ebx,ebx
10000d85:	83 ec 08             	sub    esp,0x8
10000d88:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10000d8c:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10000d90:	8b 82 68 11 00 00    	mov    eax,DWORD PTR [edx+0x1168]
10000d96:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10000d9a:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000d9f:	0f af b2 58 01 00 00 	imul   esi,DWORD PTR [edx+0x158]
10000da6:	89 04 24             	mov    DWORD PTR [esp],eax
10000da9:	01 ce                	add    esi,ecx
10000dab:	b8 01 00 00 00       	mov    eax,0x1
10000db0:	c1 fe 03             	sar    esi,0x3
10000db3:	f7 d1                	not    ecx
10000db5:	83 e1 07             	and    ecx,0x7
10000db8:	d3 e0                	shl    eax,cl
10000dba:	80 ba 64 11 00 00 00 	cmp    BYTE PTR [edx+0x1164],0x0
10000dc1:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000dc5:	74 3c                	je     10000e03 <VGAVideo::readPixelApprox(int, int)+0x85>
10000dc7:	85 ff                	test   edi,edi
10000dc9:	75 3d                	jne    10000e08 <VGAVideo::readPixelApprox(int, int)+0x8a>
10000dcb:	01 db                	add    ebx,ebx
10000dcd:	b9 03 00 00 00       	mov    ecx,0x3
10000dd2:	29 f9                	sub    ecx,edi
10000dd4:	51                   	push   ecx
10000dd5:	52                   	push   edx
10000dd6:	89 54 24 20          	mov    DWORD PTR [esp+0x20],edx
10000dda:	e8 fc ff ff ff       	call   10000ddb <VGAVideo::readPixelApprox(int, int)+0x5d>	10000ddb: R_386_PC32	VGAVideo::setPlane(int)
10000ddf:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000de3:	0f b6 0c 30          	movzx  ecx,BYTE PTR [eax+esi*1]
10000de7:	58                   	pop    eax
10000de8:	5a                   	pop    edx
10000de9:	85 4c 24 04          	test   DWORD PTR [esp+0x4],ecx
10000ded:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10000df1:	0f 95 c1             	setne  cl
10000df4:	47                   	inc    edi
10000df5:	0f b6 c9             	movzx  ecx,cl
10000df8:	09 cb                	or     ebx,ecx
10000dfa:	80 ba 64 11 00 00 00 	cmp    BYTE PTR [edx+0x1164],0x0
10000e01:	75 c4                	jne    10000dc7 <VGAVideo::readPixelApprox(int, int)+0x49>
10000e03:	83 ff 04             	cmp    edi,0x4
10000e06:	75 c3                	jne    10000dcb <VGAVideo::readPixelApprox(int, int)+0x4d>
10000e08:	8b 04 9d 00 00 00 00 	mov    eax,DWORD PTR [ebx*4+0x0]	10000e0b: R_386_32	col4To16
10000e0f:	83 c4 08             	add    esp,0x8
10000e12:	5b                   	pop    ebx
10000e13:	5e                   	pop    esi
10000e14:	5f                   	pop    edi
10000e15:	c3                   	ret    

10000e16 <VGAVideo::savePixelsInSquare(int, int)>:
10000e16:	57                   	push   edi
10000e17:	b9 00 04 00 00       	mov    ecx,0x400
10000e1c:	56                   	push   esi
10000e1d:	53                   	push   ebx
10000e1e:	83 ec 20             	sub    esp,0x20
10000e21:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10000e25:	c7 44 24 14 00 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
10000e2d:	8d b8 64 01 00 00    	lea    edi,[eax+0x164]
10000e33:	31 c0                	xor    eax,eax
10000e35:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
10000e39:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10000e3b:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10000e3f:	8b 80 68 11 00 00    	mov    eax,DWORD PTR [eax+0x1168]
10000e45:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000e49:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000e4e:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000e52:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10000e56:	05 64 11 00 00       	add    eax,0x1164
10000e5b:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000e5f:	b8 03 00 00 00       	mov    eax,0x3
10000e64:	2b 44 24 14          	sub    eax,DWORD PTR [esp+0x14]
10000e68:	50                   	push   eax
10000e69:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
10000e6d:	e8 fc ff ff ff       	call   10000e6e <VGAVideo::savePixelsInSquare(int, int)+0x58>	10000e6e: R_386_PC32	VGAVideo::setPlane(int)
10000e72:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10000e76:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000e7a:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10000e7e:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000e82:	58                   	pop    eax
10000e83:	5a                   	pop    edx
10000e84:	83 ec 0c             	sub    esp,0xc
10000e87:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10000e8b:	e8 fc ff ff ff       	call   10000e8c <VGAVideo::savePixelsInSquare(int, int)+0x76>	10000e8c: R_386_PC32	Video::getHeight()
10000e90:	83 c4 10             	add    esp,0x10
10000e93:	39 44 24 04          	cmp    DWORD PTR [esp+0x4],eax
10000e97:	0f 8d 8f 00 00 00    	jge    10000f2c <VGAVideo::savePixelsInSquare(int, int)+0x116>
10000e9d:	83 7c 24 14 03       	cmp    DWORD PTR [esp+0x14],0x3
10000ea2:	0f 84 a0 00 00 00    	je     10000f48 <VGAVideo::savePixelsInSquare(int, int)+0x132>
10000ea8:	8b 5c 24 34          	mov    ebx,DWORD PTR [esp+0x34]
10000eac:	8b 74 24 10          	mov    esi,DWORD PTR [esp+0x10]
10000eb0:	89 d8                	mov    eax,ebx
10000eb2:	83 c0 20             	add    eax,0x20
10000eb5:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000eb9:	eb 47                	jmp    10000f02 <VGAVideo::savePixelsInSquare(int, int)+0xec>
10000ebb:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10000ebf:	89 d9                	mov    ecx,ebx
10000ec1:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10000ec5:	f7 d1                	not    ecx
10000ec7:	0f af 90 58 01 00 00 	imul   edx,DWORD PTR [eax+0x158]
10000ece:	83 e1 07             	and    ecx,0x7
10000ed1:	8b 06                	mov    eax,DWORD PTR [esi]
10000ed3:	01 da                	add    edx,ebx
10000ed5:	01 c0                	add    eax,eax
10000ed7:	c1 fa 03             	sar    edx,0x3
10000eda:	89 06                	mov    DWORD PTR [esi],eax
10000edc:	bf 01 00 00 00       	mov    edi,0x1
10000ee1:	d3 e7                	shl    edi,cl
10000ee3:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10000ee7:	0f b6 14 11          	movzx  edx,BYTE PTR [ecx+edx*1]
10000eeb:	85 d7                	test   edi,edx
10000eed:	0f 95 c2             	setne  dl
10000ef0:	43                   	inc    ebx
10000ef1:	0f b6 d2             	movzx  edx,dl
10000ef4:	83 c6 04             	add    esi,0x4
10000ef7:	09 d0                	or     eax,edx
10000ef9:	89 46 fc             	mov    DWORD PTR [esi-0x4],eax
10000efc:	3b 5c 24 0c          	cmp    ebx,DWORD PTR [esp+0xc]
10000f00:	74 13                	je     10000f15 <VGAVideo::savePixelsInSquare(int, int)+0xff>
10000f02:	83 ec 0c             	sub    esp,0xc
10000f05:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10000f09:	e8 fc ff ff ff       	call   10000f0a <VGAVideo::savePixelsInSquare(int, int)+0xf4>	10000f0a: R_386_PC32	Video::getWidth()
10000f0e:	83 c4 10             	add    esp,0x10
10000f11:	39 d8                	cmp    eax,ebx
10000f13:	7f a6                	jg     10000ebb <VGAVideo::savePixelsInSquare(int, int)+0xa5>
10000f15:	83 6c 24 10 80       	sub    DWORD PTR [esp+0x10],0xffffff80
10000f1a:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
10000f1e:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000f22:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
10000f26:	0f 85 58 ff ff ff    	jne    10000e84 <VGAVideo::savePixelsInSquare(int, int)+0x6e>
10000f2c:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
10000f30:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000f34:	83 f8 04             	cmp    eax,0x4
10000f37:	0f 85 22 ff ff ff    	jne    10000e5f <VGAVideo::savePixelsInSquare(int, int)+0x49>
10000f3d:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10000f41:	83 c4 20             	add    esp,0x20
10000f44:	5b                   	pop    ebx
10000f45:	5e                   	pop    esi
10000f46:	5f                   	pop    edi
10000f47:	c3                   	ret    
10000f48:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10000f4c:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10000f50:	89 f8                	mov    eax,edi
10000f52:	83 c0 20             	add    eax,0x20
10000f55:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000f59:	eb 55                	jmp    10000fb0 <VGAVideo::savePixelsInSquare(int, int)+0x19a>
10000f5b:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10000f5f:	89 f9                	mov    ecx,edi
10000f61:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10000f65:	f7 d1                	not    ecx
10000f67:	0f af 90 58 01 00 00 	imul   edx,DWORD PTR [eax+0x158]
10000f6e:	83 e1 07             	and    ecx,0x7
10000f71:	8b 03                	mov    eax,DWORD PTR [ebx]
10000f73:	01 fa                	add    edx,edi
10000f75:	01 c0                	add    eax,eax
10000f77:	c1 fa 03             	sar    edx,0x3
10000f7a:	89 03                	mov    DWORD PTR [ebx],eax
10000f7c:	be 01 00 00 00       	mov    esi,0x1
10000f81:	d3 e6                	shl    esi,cl
10000f83:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10000f87:	0f b6 14 11          	movzx  edx,BYTE PTR [ecx+edx*1]
10000f8b:	85 d6                	test   esi,edx
10000f8d:	0f 95 c2             	setne  dl
10000f90:	47                   	inc    edi
10000f91:	0f b6 d2             	movzx  edx,dl
10000f94:	83 c3 04             	add    ebx,0x4
10000f97:	09 d0                	or     eax,edx
10000f99:	89 43 fc             	mov    DWORD PTR [ebx-0x4],eax
10000f9c:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	10000f9f: R_386_32	col4To16
10000fa3:	89 43 fc             	mov    DWORD PTR [ebx-0x4],eax
10000fa6:	3b 7c 24 0c          	cmp    edi,DWORD PTR [esp+0xc]
10000faa:	0f 84 65 ff ff ff    	je     10000f15 <VGAVideo::savePixelsInSquare(int, int)+0xff>
10000fb0:	83 ec 0c             	sub    esp,0xc
10000fb3:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10000fb7:	e8 fc ff ff ff       	call   10000fb8 <VGAVideo::savePixelsInSquare(int, int)+0x1a2>	10000fb8: R_386_PC32	Video::getWidth()
10000fbc:	83 c4 10             	add    esp,0x10
10000fbf:	39 c7                	cmp    edi,eax
10000fc1:	7c 98                	jl     10000f5b <VGAVideo::savePixelsInSquare(int, int)+0x145>
10000fc3:	e9 4d ff ff ff       	jmp    10000f15 <VGAVideo::savePixelsInSquare(int, int)+0xff>

10000fc8 <VGAVideo::putpixel(int, int, unsigned int)>:
10000fc8:	57                   	push   edi
10000fc9:	56                   	push   esi
10000fca:	53                   	push   ebx
10000fcb:	83 ec 14             	sub    esp,0x14
10000fce:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
10000fd2:	8b 5c 24 28          	mov    ebx,DWORD PTR [esp+0x28]
10000fd6:	8b 86 68 11 00 00    	mov    eax,DWORD PTR [esi+0x1168]
10000fdc:	8a 96 64 11 00 00    	mov    dl,BYTE PTR [esi+0x1164]
10000fe2:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000fe7:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000feb:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000fef:	89 d8                	mov    eax,ebx
10000ff1:	f7 d0                	not    eax
10000ff3:	83 e0 07             	and    eax,0x7
10000ff6:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000ffa:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000ffe:	0f af 86 58 01 00 00 	imul   eax,DWORD PTR [esi+0x158]
10001005:	01 d8                	add    eax,ebx
10001007:	c1 f8 03             	sar    eax,0x3
1000100a:	84 d2                	test   dl,dl
1000100c:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10001010:	74 75                	je     10001087 <VGAVideo::putpixel(int, int, unsigned int)+0xbf>
10001012:	88 54 24 10          	mov    BYTE PTR [esp+0x10],dl
10001016:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
1000101a:	53                   	push   ebx
1000101b:	57                   	push   edi
1000101c:	e8 fc ff ff ff       	call   1000101d <VGAVideo::putpixel(int, int, unsigned int)+0x55>	1000101d: R_386_PC32	monoPixelLookup(int, int, int)
10001021:	83 c4 0c             	add    esp,0xc
10001024:	89 04 24             	mov    DWORD PTR [esp],eax
10001027:	8a 54 24 10          	mov    dl,BYTE PTR [esp+0x10]
1000102b:	b8 fe ff ff ff       	mov    eax,0xfffffffe
10001030:	8a 4c 24 04          	mov    cl,BYTE PTR [esp+0x4]
10001034:	31 db                	xor    ebx,ebx
10001036:	d3 c0                	rol    eax,cl
10001038:	84 d2                	test   dl,dl
1000103a:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
1000103e:	74 3b                	je     1000107b <VGAVideo::putpixel(int, int, unsigned int)+0xb3>
10001040:	85 db                	test   ebx,ebx
10001042:	75 3c                	jne    10001080 <VGAVideo::putpixel(int, int, unsigned int)+0xb8>
10001044:	53                   	push   ebx
10001045:	43                   	inc    ebx
10001046:	56                   	push   esi
10001047:	e8 fc ff ff ff       	call   10001048 <VGAVideo::putpixel(int, int, unsigned int)+0x80>	10001048: R_386_PC32	VGAVideo::setPlane(int)
1000104c:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10001050:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001054:	8a 44 24 18          	mov    al,BYTE PTR [esp+0x18]
10001058:	03 7c 24 14          	add    edi,DWORD PTR [esp+0x14]
1000105c:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10001060:	22 07                	and    al,BYTE PTR [edi]
10001062:	d1 7c 24 08          	sar    DWORD PTR [esp+0x8],1
10001066:	83 e2 01             	and    edx,0x1
10001069:	d3 e2                	shl    edx,cl
1000106b:	09 d0                	or     eax,edx
1000106d:	88 07                	mov    BYTE PTR [edi],al
1000106f:	8a 96 64 11 00 00    	mov    dl,BYTE PTR [esi+0x1164]
10001075:	58                   	pop    eax
10001076:	84 d2                	test   dl,dl
10001078:	59                   	pop    ecx
10001079:	75 c5                	jne    10001040 <VGAVideo::putpixel(int, int, unsigned int)+0x78>
1000107b:	83 fb 04             	cmp    ebx,0x4
1000107e:	75 c4                	jne    10001044 <VGAVideo::putpixel(int, int, unsigned int)+0x7c>
10001080:	83 c4 14             	add    esp,0x14
10001083:	5b                   	pop    ebx
10001084:	5e                   	pop    esi
10001085:	5f                   	pop    edi
10001086:	c3                   	ret    
10001087:	89 f9                	mov    ecx,edi
10001089:	89 f8                	mov    eax,edi
1000108b:	c1 f9 15             	sar    ecx,0x15
1000108e:	c1 f8 0a             	sar    eax,0xa
10001091:	83 e1 07             	and    ecx,0x7
10001094:	83 e0 38             	and    eax,0x38
10001097:	09 c1                	or     ecx,eax
10001099:	8d 04 3f             	lea    eax,[edi+edi*1]
1000109c:	25 c0 01 00 00       	and    eax,0x1c0
100010a1:	09 c8                	or     eax,ecx
100010a3:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
100010a7:	01 d9                	add    ecx,ebx
100010a9:	83 e1 01             	and    ecx,0x1
100010ac:	0f b6 84 41 00 00 00 00 	movzx  eax,BYTE PTR [ecx+eax*2+0x0]	100010b0: R_386_32	dither16Data
100010b4:	89 04 24             	mov    DWORD PTR [esp],eax
100010b7:	e9 6f ff ff ff       	jmp    1000102b <VGAVideo::putpixel(int, int, unsigned int)+0x63>

100010bc <VGAVideo::drawCursor(int, int, unsigned int*, int)>:
100010bc:	57                   	push   edi
100010bd:	56                   	push   esi
100010be:	53                   	push   ebx
100010bf:	83 ec 30             	sub    esp,0x30
100010c2:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
100010c6:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
100010ca:	83 f8 01             	cmp    eax,0x1
100010cd:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
100010d5:	19 db                	sbb    ebx,ebx
100010d7:	f7 d3                	not    ebx
100010d9:	83 e3 0f             	and    ebx,0xf
100010dc:	83 f8 01             	cmp    eax,0x1
100010df:	89 5c 24 24          	mov    DWORD PTR [esp+0x24],ebx
100010e3:	19 c0                	sbb    eax,eax
100010e5:	83 e0 0f             	and    eax,0xf
100010e8:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
100010ec:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100010f0:	83 c0 20             	add    eax,0x20
100010f3:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100010f7:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100010fb:	56                   	push   esi
100010fc:	e8 fc ff ff ff       	call   100010fd <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x41>	100010fd: R_386_PC32	VGAVideo::setPlane(int)
10001101:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10001105:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10001109:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000110d:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10001111:	58                   	pop    eax
10001112:	5a                   	pop    edx
10001113:	eb 17                	jmp    1000112c <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x70>
10001115:	ff 44 24 0c          	inc    DWORD PTR [esp+0xc]
10001119:	83 44 24 1c 04       	add    DWORD PTR [esp+0x1c],0x4
1000111e:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001122:	39 44 24 20          	cmp    DWORD PTR [esp+0x20],eax
10001126:	0f 84 c7 00 00 00    	je     100011f3 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x137>
1000112c:	83 ec 0c             	sub    esp,0xc
1000112f:	56                   	push   esi
10001130:	e8 fc ff ff ff       	call   10001131 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x75>	10001131: R_386_PC32	Video::getHeight()
10001135:	83 c4 10             	add    esp,0x10
10001138:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
1000113c:	0f 8d b1 00 00 00    	jge    100011f3 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x137>
10001142:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10001146:	8b 10                	mov    edx,DWORD PTR [eax]
10001148:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [eax+0x80]
1000114e:	89 54 24 14          	mov    DWORD PTR [esp+0x14],edx
10001152:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001156:	85 d2                	test   edx,edx
10001158:	75 04                	jne    1000115e <VGAVideo::drawCursor(int, int, unsigned int*, int)+0xa2>
1000115a:	85 c0                	test   eax,eax
1000115c:	74 b7                	je     10001115 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x59>
1000115e:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10001162:	8b 5c 24 44          	mov    ebx,DWORD PTR [esp+0x44]
10001166:	83 c0 20             	add    eax,0x20
10001169:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000116d:	89 df                	mov    edi,ebx
1000116f:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10001173:	2b 7c 24 44          	sub    edi,DWORD PTR [esp+0x44]
10001177:	0b 44 24 10          	or     eax,DWORD PTR [esp+0x10]
1000117b:	74 98                	je     10001115 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x59>
1000117d:	83 ec 0c             	sub    esp,0xc
10001180:	56                   	push   esi
10001181:	e8 fc ff ff ff       	call   10001182 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0xc6>	10001182: R_386_PC32	Video::getWidth()
10001186:	83 c4 10             	add    esp,0x10
10001189:	39 d8                	cmp    eax,ebx
1000118b:	7e 88                	jle    10001115 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x59>
1000118d:	f6 44 24 10 01       	test   BYTE PTR [esp+0x10],0x1
10001192:	75 59                	jne    100011ed <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x131>
10001194:	f6 44 24 14 01       	test   BYTE PTR [esp+0x14],0x1
10001199:	74 3e                	je     100011d9 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x11d>
1000119b:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
1000119f:	89 d9                	mov    ecx,ebx
100011a1:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100011a5:	f7 d1                	not    ecx
100011a7:	0f af 86 58 01 00 00 	imul   eax,DWORD PTR [esi+0x158]
100011ae:	83 e1 07             	and    ecx,0x7
100011b1:	01 f8                	add    eax,edi
100011b3:	83 e2 01             	and    edx,0x1
100011b6:	8b be 68 11 00 00    	mov    edi,DWORD PTR [esi+0x1168]
100011bc:	03 44 24 44          	add    eax,DWORD PTR [esp+0x44]
100011c0:	d3 e2                	shl    edx,cl
100011c2:	c1 f8 03             	sar    eax,0x3
100011c5:	8d bc 07 00 00 00 c2 	lea    edi,[edi+eax*1-0x3e000000]
100011cc:	b8 fe ff ff ff       	mov    eax,0xfffffffe
100011d1:	d3 c0                	rol    eax,cl
100011d3:	22 07                	and    al,BYTE PTR [edi]
100011d5:	09 d0                	or     eax,edx
100011d7:	88 07                	mov    BYTE PTR [edi],al
100011d9:	d1 6c 24 10          	shr    DWORD PTR [esp+0x10],1
100011dd:	d1 6c 24 14          	shr    DWORD PTR [esp+0x14],1
100011e1:	43                   	inc    ebx
100011e2:	39 5c 24 18          	cmp    DWORD PTR [esp+0x18],ebx
100011e6:	75 85                	jne    1000116d <VGAVideo::drawCursor(int, int, unsigned int*, int)+0xb1>
100011e8:	e9 28 ff ff ff       	jmp    10001115 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x59>
100011ed:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
100011f1:	eb ac                	jmp    1000119f <VGAVideo::drawCursor(int, int, unsigned int*, int)+0xe3>
100011f3:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
100011f7:	d1 6c 24 28          	shr    DWORD PTR [esp+0x28],1
100011fb:	d1 6c 24 24          	shr    DWORD PTR [esp+0x24],1
100011ff:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001203:	83 f8 04             	cmp    eax,0x4
10001206:	0f 85 eb fe ff ff    	jne    100010f7 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x3b>
1000120c:	83 c4 30             	add    esp,0x30
1000120f:	5b                   	pop    ebx
10001210:	5e                   	pop    esi
10001211:	5f                   	pop    edi
10001212:	c3                   	ret    
10001213:	90                   	nop

10001214 <VGAVideo::~VGAVideo()>:
10001214:	55                   	push   ebp
10001215:	89 e5                	mov    ebp,esp
10001217:	83 ec 08             	sub    esp,0x8
1000121a:	ba 08 00 00 00       	mov    edx,0x8	1000121b: R_386_32	vtable for VGAVideo
1000121f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001222:	89 10                	mov    DWORD PTR [eax],edx
10001224:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001227:	83 ec 0c             	sub    esp,0xc
1000122a:	50                   	push   eax
1000122b:	e8 fc ff ff ff       	call   1000122c <VGAVideo::~VGAVideo()+0x18>	1000122c: R_386_PC32	Video::~Video()
10001230:	83 c4 10             	add    esp,0x10
10001233:	90                   	nop
10001234:	c9                   	leave  
10001235:	c3                   	ret    

10001236 <VGAVideo::~VGAVideo()>:
10001236:	55                   	push   ebp
10001237:	89 e5                	mov    ebp,esp
10001239:	83 ec 08             	sub    esp,0x8
1000123c:	83 ec 0c             	sub    esp,0xc
1000123f:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001242:	e8 fc ff ff ff       	call   10001243 <VGAVideo::~VGAVideo()+0xd>	10001243: R_386_PC32	VGAVideo::~VGAVideo()
10001247:	83 c4 10             	add    esp,0x10
1000124a:	83 ec 08             	sub    esp,0x8
1000124d:	68 70 11 00 00       	push   0x1170
10001252:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001255:	e8 fc ff ff ff       	call   10001256 <VGAVideo::~VGAVideo()+0x20>	10001256: R_386_PC32	operator delete(void*, unsigned long)
1000125a:	83 c4 10             	add    esp,0x10
1000125d:	c9                   	leave  
1000125e:	c3                   	ret    
1000125f:	90                   	nop

10001260 <PHYS_RAM_TABLE_SIZE>:
10001260:	13 05 00 00                                         ....

10001264 <PHYS_HIGHEST_UNUSED_ADDRESS>:
10001264:	24 05 00 00                                         $...

10001268 <PHYS_RAM_TABLE>:
10001268:	00 06 00 00                                         ....

1000126c <PHYS_DMA_MEMORY_1>:
1000126c:	00 00 01 00                                         ....

10001270 <PHYS_PHYS_PAGE_BITMAP>:
10001270:	00 00 02 00                                         ....

10001274 <PHYS_VIRT_PAGE_BITMAP>:
10001274:	00 00 04 00                                         ....

10001278 <PHYS_DMA_MEMORY_2>:
10001278:	00 00 06 00                                         ....

1000127c <PHYS_ALLOCED_VIRT_PAGES>:
1000127c:	00 00 10 00                                         ....

10001280 <PHYS_KRNL_PAGE_DIRECTORY>:
10001280:	00 10 00 00                                         ....

10001284 <VIRT_KERNEL_BASE>:
10001284:	00 00 00 c0                                         ....

10001288 <VIRT_LOW_MEGS>:
10001288:	00 00 00 c2                                         ....

1000128c <VIRT_CPU_SPECIFIC>:
1000128c:	00 00 40 c2                                         ..@.

10001290 <VIRT_RECURSIVE_SPOT_1>:
10001290:	00 00 80 c2                                         ....

10001294 <VIRT_RECURSIVE_SPOT_2>:
10001294:	00 00 c0 c2                                         ....

10001298 <VIRT_DMA_MEMORY_1>:
10001298:	00 00 01 c2                                         ....

1000129c <SIZE_DMA_MEMORY_1>:
1000129c:	00 00 01 00                                         ....

100012a0 <VIRT_KRNL_PAGE_DIRECTORY>:
100012a0:	00 10 00 c2                                         ....

100012a4 <VIRT_PHYS_PAGE_BITMAP>:
100012a4:	00 00 02 c2                                         ....

100012a8 <SIZE_PHYS_PAGE_BITMAP>:
100012a8:	00 00 02 00                                         ....

100012ac <VIRT_VIRT_PAGE_BITMAP>:
100012ac:	00 00 04 c2                                         ....

100012b0 <SIZE_VIRT_PAGE_BITMAP>:
100012b0:	00 80 00 00                                         ....

100012b4 <VIRT_RAM_TABLE>:
100012b4:	00 06 00 c2                                         ....

100012b8 <VIRT_RAM_TABLE_SIZE>:
100012b8:	13 05 00 c2                                         ....

100012bc <VIRT_HIGHEST_UNUSED_ADDRESS>:
100012bc:	24 05 00 c2                                         $...

100012c0 <SIZE_APP_STACK_USER>:
100012c0:	00 00 18 00                                         ....

100012c4 <SIZE_APP_STACK_KRNL>:
100012c4:	00 00 08 00                                         ....

100012c8 <SIZE_APP_STACK_TOTAL>:
100012c8:	00 00 20 00                                         .. .

100012cc <VIRT_APP_DATA>:
100012cc:	00 00 00 10                                         ....

100012d0 <VIRT_APP_STACK_USER_TOP>:
100012d0:	00 00 00 02                                         ....

100012d4 <VIRT_APP_STACK_KRNL_TOP>:
100012d4:	00 00 e8 01                                         ....

100012d8 <VIRT_HEAP_MIN>:
100012d8:	00 00 00 c8                                         ....

100012dc <VIRT_HEAP_MAX>:
100012dc:	ff ff ff ef                                         ....

100012e0 <VIRT_SBRK_MIN>:
100012e0:	00 00 00 f0                                         ....

100012e4 <VIRT_SBRK_MAX>:
100012e4:	00 00 c0 ff                                         ....

100012e8 <VIRT_ALLOCED_VIRT_PAGES>:
100012e8:	00 00 10 c2                                         ....

100012ec <VIRT_ACPI_DRIVER>:
100012ec:	00 40 48 c2                                         .@H.

100012f0 <TERMINAL_KEYBUFFER_IN_SIZE>:
100012f0:	80 00 00 00                                         ....

100012f4 <TERMINAL_KEYBUFFER_OUT_SIZE>:
100012f4:	80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
10001304:	00 80 00 80 00 00 80 80 80 00 00 80 00 80 80 80     ................
10001314:	00 c8 c8 c8 80 80 80 00 00 ff 00 ff 00 00 ff ff     ................
10001324:	ff 00 00 ff 00 ff ff ff 00 ff ff ff 56 47 41 20     ............VGA 
10001334:	44 69 73 70 6c 61 79 00 43 3a 2f 42 61 6e 61 6e     Display.C:/Banan
10001344:	61 2f 53 79 73 74 65 6d 2f 56 47 41 2e 43 4f 4d     a/System/VGA.COM
10001354:	00 53 65 74 20 74 6f 20 76 69 64 65 6f 20 6d 6f     .Set to video mo
10001364:	64 65 20 25 64 0a 00 90                             de %d...

1000136c <vtable for VGAVideo>:
	...
	10001374: R_386_32	VGAVideo::~VGAVideo()
	10001378: R_386_32	VGAVideo::~VGAVideo()
	1000137c: R_386_32	VGAVideo::open(int, int, void*)
	10001380: R_386_32	VGAVideo::close(int, int, void*)
	10001384: R_386_32	Device::hibernate()
	10001388: R_386_32	Device::wake()
	1000138c: R_386_32	Device::detect()
	10001390: R_386_32	Device::disableLegacy()
	10001394: R_386_32	Device::powerSaving(PowerSavingLevel)
	10001398: R_386_32	VGAVideo::putpixel(int, int, unsigned int)
	1000139c: R_386_32	VGAVideo::putrect(int, int, int, int, unsigned int)
	100013a0: R_386_32	Video::putTGA(int, int, unsigned char*, int)
	100013a4: R_386_32	VGAVideo::drawCursor(int, int, unsigned int*, int)
	100013a8: R_386_32	VGAVideo::savePixelsInSquare(int, int)
	100013ac: R_386_32	VGAVideo::readPixelApprox(int, int)
	100013b0: R_386_32	VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)
	100013b4: R_386_32	VGAVideo::blit(unsigned int*, int, int, int, int)
	100013b8: R_386_32	Video::clearScreen(unsigned int)
