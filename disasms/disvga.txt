
packages/banana/32/0002/vga.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	53                   	push   ebx
10000004:	83 ec 14             	sub    esp,0x14
10000007:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000000a:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
1000000d:	c7 45 ec 6c 01 00 00 	mov    DWORD PTR [ebp-0x14],0x16c
10000014:	83 ec 0c             	sub    esp,0xc
10000017:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
1000001a:	e8 fc ff ff ff       	call   1000001b <start(void*)+0x1b>	1000001b: R_386_PC32	malloc
1000001f:	83 c4 10             	add    esp,0x10
10000022:	89 c3                	mov    ebx,eax
10000024:	83 ec 0c             	sub    esp,0xc
10000027:	53                   	push   ebx
10000028:	e8 fc ff ff ff       	call   10000029 <start(void*)+0x29>	10000029: R_386_PC32	VGAVideo::VGAVideo()
1000002d:	83 c4 10             	add    esp,0x10
10000030:	89 5d f0             	mov    DWORD PTR [ebp-0x10],ebx
10000033:	83 ec 08             	sub    esp,0x8
10000036:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000039:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000003c:	e8 fc ff ff ff       	call   1000003d <start(void*)+0x3d>	1000003d: R_386_PC32	Device::addChild(Device*)
10000041:	83 c4 10             	add    esp,0x10
10000044:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000047:	8b 00                	mov    eax,DWORD PTR [eax]
10000049:	83 c0 08             	add    eax,0x8
1000004c:	8b 00                	mov    eax,DWORD PTR [eax]
1000004e:	6a 00                	push   0x0
10000050:	6a 00                	push   0x0
10000052:	6a 00                	push   0x0
10000054:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000057:	ff d0                	call   eax
10000059:	83 c4 10             	add    esp,0x10
1000005c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000005f:	a3 00 00 00 00       	mov    ds:0x0,eax	10000060: R_386_32	screen
10000064:	90                   	nop
10000065:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000068:	c9                   	leave  
10000069:	c3                   	ret    

1000006a <VGAVideo::setPlane(int)>:
1000006a:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000006e:	39 0d 20 10 00 10    	cmp    DWORD PTR ds:0x10001020,ecx	10000070: R_386_32	.data
10000074:	74 2b                	je     100000a1 <VGAVideo::setPlane(int)+0x37>
10000076:	89 0d 20 10 00 10    	mov    DWORD PTR ds:0x10001020,ecx	10000078: R_386_32	.data
1000007c:	b0 04                	mov    al,0x4
1000007e:	ba ce 03 00 00       	mov    edx,0x3ce
10000083:	ee                   	out    dx,al
10000084:	ba cf 03 00 00       	mov    edx,0x3cf
10000089:	88 c8                	mov    al,cl
1000008b:	ee                   	out    dx,al
1000008c:	b0 02                	mov    al,0x2
1000008e:	ba c4 03 00 00       	mov    edx,0x3c4
10000093:	ee                   	out    dx,al
10000094:	b8 01 00 00 00       	mov    eax,0x1
10000099:	ba c5 03 00 00       	mov    edx,0x3c5
1000009e:	d3 e0                	shl    eax,cl
100000a0:	ee                   	out    dx,al
100000a1:	c3                   	ret    

100000a2 <VGAVideo::VGAVideo()>:
100000a2:	55                   	push   ebp
100000a3:	89 e5                	mov    ebp,esp
100000a5:	83 ec 08             	sub    esp,0x8
100000a8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000ab:	83 ec 08             	sub    esp,0x8
100000ae:	68 90 0f 00 10       	push   0x10000f90	100000af: R_386_32	.text
100000b3:	50                   	push   eax
100000b4:	e8 fc ff ff ff       	call   100000b5 <VGAVideo::VGAVideo()+0x13>	100000b5: R_386_PC32	Video::Video(char const*)
100000b9:	83 c4 10             	add    esp,0x10
100000bc:	ba 08 00 00 00       	mov    edx,0x8	100000bd: R_386_32	vtable for VGAVideo
100000c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c4:	89 10                	mov    DWORD PTR [eax],edx
100000c6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c9:	c7 80 64 01 00 00 00 00 0a 00 	mov    DWORD PTR [eax+0x164],0xa0000
100000d3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000d6:	c7 80 68 01 00 00 12 00 00 00 	mov    DWORD PTR [eax+0x168],0x12
100000e0:	90                   	nop
100000e1:	c9                   	leave  
100000e2:	c3                   	ret    
100000e3:	90                   	nop

100000e4 <VGAVideo::readPixelApprox(int, int)>:
100000e4:	b8 80 80 80 00       	mov    eax,0x808080
100000e9:	c3                   	ret    

100000ea <VGAVideo::close(int, int, void*)>:
100000ea:	31 c0                	xor    eax,eax
100000ec:	c3                   	ret    

100000ed <get_bios_area_video_type()>:
100000ed:	a1 10 04 00 00       	mov    eax,ds:0x410
100000f2:	83 e0 30             	and    eax,0x30
100000f5:	c3                   	ret    

100000f6 <VGAVideo::open(int, int, void*)>:
100000f6:	57                   	push   edi
100000f7:	56                   	push   esi
100000f8:	53                   	push   ebx
100000f9:	83 ec 40             	sub    esp,0x40
100000fc:	e8 fc ff ff ff       	call   100000fd <VGAVideo::open(int, int, void*)+0x7>	100000fd: R_386_PC32	get_bios_area_video_type()
10000101:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
10000105:	83 f8 30             	cmp    eax,0x30
10000108:	0f 94 83 61 01 00 00 	sete   BYTE PTR [ebx+0x161]
1000010f:	f6 05 01 00 00 00 08 	test   BYTE PTR ds:0x1,0x8	10000111: R_386_32	keBootSettings
10000116:	0f 84 25 03 00 00    	je     10000441 <VGAVideo::open(int, int, void*)+0x34b>
1000011c:	c6 83 61 01 00 00 01 	mov    BYTE PTR [ebx+0x161],0x1
10000123:	b8 11 00 00 00       	mov    eax,0x11
10000128:	83 ec 0c             	sub    esp,0xc
1000012b:	89 83 68 01 00 00    	mov    DWORD PTR [ebx+0x168],eax
10000131:	c7 83 58 01 00 00 80 02 00 00 	mov    DWORD PTR [ebx+0x158],0x280
1000013b:	c7 83 5c 01 00 00 e0 01 00 00 	mov    DWORD PTR [ebx+0x15c],0x1e0
10000145:	c7 83 64 01 00 00 00 00 0a 00 	mov    DWORD PTR [ebx+0x164],0xa0000
1000014f:	50                   	push   eax
10000150:	50                   	push   eax
10000151:	68 90 00 00 00       	push   0x90
10000156:	6a 00                	push   0x0
10000158:	68 9c 0f 00 10       	push   0x10000f9c	10000159: R_386_32	.text
1000015d:	e8 fc ff ff ff       	call   1000015e <VGAVideo::open(int, int, void*)+0x68>	1000015e: R_386_PC32	Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
10000162:	83 c4 20             	add    esp,0x20
10000165:	e8 fc ff ff ff       	call   10000166 <VGAVideo::open(int, int, void*)+0x70>	10000166: R_386_PC32	Vm::finish8086()
1000016a:	83 ec 08             	sub    esp,0x8
1000016d:	ff b3 68 01 00 00    	push   DWORD PTR [ebx+0x168]
10000173:	68 b5 0f 00 10       	push   0x10000fb5	10000174: R_386_32	.text
10000178:	e8 fc ff ff ff       	call   10000179 <VGAVideo::open(int, int, void*)+0x83>	10000179: R_386_PC32	Dbg::kprintf(char const*, ...)
1000017d:	8b 83 64 01 00 00    	mov    eax,DWORD PTR [ebx+0x164]
10000183:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000188:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000018c:	58                   	pop    eax
1000018d:	5a                   	pop    edx
1000018e:	6a 00                	push   0x0
10000190:	53                   	push   ebx
10000191:	e8 fc ff ff ff       	call   10000192 <VGAVideo::open(int, int, void*)+0x9c>	10000192: R_386_PC32	VGAVideo::setPlane(int)
10000196:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000019a:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
100001a0:	83 c4 10             	add    esp,0x10
100001a3:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
100001aa:	85 c9                	test   ecx,ecx
100001ac:	79 03                	jns    100001b1 <VGAVideo::open(int, int, void*)+0xbb>
100001ae:	83 c1 07             	add    ecx,0x7
100001b1:	c1 f9 03             	sar    ecx,0x3
100001b4:	31 c0                	xor    eax,eax
100001b6:	89 d7                	mov    edi,edx
100001b8:	f3 aa                	rep stos BYTE PTR es:[edi],al
100001ba:	80 bb 61 01 00 00 00 	cmp    BYTE PTR [ebx+0x161],0x0
100001c1:	0f 84 8b 02 00 00    	je     10000452 <VGAVideo::open(int, int, void*)+0x35c>
100001c7:	8d 7c 24 10          	lea    edi,[esp+0x10]
100001cb:	bb da 03 00 00       	mov    ebx,0x3da
100001d0:	be 60 0f 00 10       	mov    esi,0x10000f60	100001d1: R_386_32	.text
100001d5:	b9 0c 00 00 00       	mov    ecx,0xc
100001da:	89 da                	mov    edx,ebx
100001dc:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100001de:	ec                   	in     al,dx
100001df:	31 f6                	xor    esi,esi
100001e1:	b9 c0 03 00 00       	mov    ecx,0x3c0
100001e6:	89 f0                	mov    eax,esi
100001e8:	89 ca                	mov    edx,ecx
100001ea:	ee                   	out    dx,al
100001eb:	ee                   	out    dx,al
100001ec:	89 da                	mov    edx,ebx
100001ee:	ec                   	in     al,dx
100001ef:	b0 01                	mov    al,0x1
100001f1:	89 ca                	mov    edx,ecx
100001f3:	ee                   	out    dx,al
100001f4:	ee                   	out    dx,al
100001f5:	89 da                	mov    edx,ebx
100001f7:	ec                   	in     al,dx
100001f8:	b0 02                	mov    al,0x2
100001fa:	89 ca                	mov    edx,ecx
100001fc:	ee                   	out    dx,al
100001fd:	ee                   	out    dx,al
100001fe:	89 da                	mov    edx,ebx
10000200:	ec                   	in     al,dx
10000201:	b0 03                	mov    al,0x3
10000203:	89 ca                	mov    edx,ecx
10000205:	ee                   	out    dx,al
10000206:	ee                   	out    dx,al
10000207:	89 da                	mov    edx,ebx
10000209:	ec                   	in     al,dx
1000020a:	b0 04                	mov    al,0x4
1000020c:	89 ca                	mov    edx,ecx
1000020e:	ee                   	out    dx,al
1000020f:	ee                   	out    dx,al
10000210:	89 da                	mov    edx,ebx
10000212:	ec                   	in     al,dx
10000213:	b0 05                	mov    al,0x5
10000215:	89 ca                	mov    edx,ecx
10000217:	ee                   	out    dx,al
10000218:	ee                   	out    dx,al
10000219:	89 da                	mov    edx,ebx
1000021b:	ec                   	in     al,dx
1000021c:	b0 06                	mov    al,0x6
1000021e:	89 ca                	mov    edx,ecx
10000220:	ee                   	out    dx,al
10000221:	ee                   	out    dx,al
10000222:	89 da                	mov    edx,ebx
10000224:	ec                   	in     al,dx
10000225:	b0 07                	mov    al,0x7
10000227:	89 ca                	mov    edx,ecx
10000229:	ee                   	out    dx,al
1000022a:	ee                   	out    dx,al
1000022b:	89 da                	mov    edx,ebx
1000022d:	ec                   	in     al,dx
1000022e:	b0 08                	mov    al,0x8
10000230:	89 ca                	mov    edx,ecx
10000232:	ee                   	out    dx,al
10000233:	ee                   	out    dx,al
10000234:	89 da                	mov    edx,ebx
10000236:	ec                   	in     al,dx
10000237:	b0 09                	mov    al,0x9
10000239:	89 ca                	mov    edx,ecx
1000023b:	ee                   	out    dx,al
1000023c:	ee                   	out    dx,al
1000023d:	89 da                	mov    edx,ebx
1000023f:	ec                   	in     al,dx
10000240:	b0 0a                	mov    al,0xa
10000242:	89 ca                	mov    edx,ecx
10000244:	ee                   	out    dx,al
10000245:	ee                   	out    dx,al
10000246:	89 da                	mov    edx,ebx
10000248:	ec                   	in     al,dx
10000249:	b0 0b                	mov    al,0xb
1000024b:	89 ca                	mov    edx,ecx
1000024d:	ee                   	out    dx,al
1000024e:	ee                   	out    dx,al
1000024f:	89 da                	mov    edx,ebx
10000251:	ec                   	in     al,dx
10000252:	b0 0c                	mov    al,0xc
10000254:	89 ca                	mov    edx,ecx
10000256:	ee                   	out    dx,al
10000257:	ee                   	out    dx,al
10000258:	89 da                	mov    edx,ebx
1000025a:	ec                   	in     al,dx
1000025b:	b0 0d                	mov    al,0xd
1000025d:	89 ca                	mov    edx,ecx
1000025f:	ee                   	out    dx,al
10000260:	ee                   	out    dx,al
10000261:	89 da                	mov    edx,ebx
10000263:	ec                   	in     al,dx
10000264:	b0 0e                	mov    al,0xe
10000266:	89 ca                	mov    edx,ecx
10000268:	ee                   	out    dx,al
10000269:	ee                   	out    dx,al
1000026a:	89 da                	mov    edx,ebx
1000026c:	ec                   	in     al,dx
1000026d:	b0 0f                	mov    al,0xf
1000026f:	89 ca                	mov    edx,ecx
10000271:	ee                   	out    dx,al
10000272:	ee                   	out    dx,al
10000273:	89 da                	mov    edx,ebx
10000275:	ec                   	in     al,dx
10000276:	b0 20                	mov    al,0x20
10000278:	89 ca                	mov    edx,ecx
1000027a:	ee                   	out    dx,al
1000027b:	ba c8 03 00 00       	mov    edx,0x3c8
10000280:	89 f0                	mov    eax,esi
10000282:	ee                   	out    dx,al
10000283:	ba c9 03 00 00       	mov    edx,0x3c9
10000288:	0f b6 44 24 10       	movzx  eax,BYTE PTR [esp+0x10]
1000028d:	c1 f8 02             	sar    eax,0x2
10000290:	ee                   	out    dx,al
10000291:	0f b6 44 24 11       	movzx  eax,BYTE PTR [esp+0x11]
10000296:	c1 f8 02             	sar    eax,0x2
10000299:	ee                   	out    dx,al
1000029a:	0f b6 44 24 12       	movzx  eax,BYTE PTR [esp+0x12]
1000029f:	c1 f8 02             	sar    eax,0x2
100002a2:	ee                   	out    dx,al
100002a3:	0f b6 44 24 13       	movzx  eax,BYTE PTR [esp+0x13]
100002a8:	c1 f8 02             	sar    eax,0x2
100002ab:	ee                   	out    dx,al
100002ac:	0f b6 44 24 14       	movzx  eax,BYTE PTR [esp+0x14]
100002b1:	c1 f8 02             	sar    eax,0x2
100002b4:	ee                   	out    dx,al
100002b5:	0f b6 44 24 15       	movzx  eax,BYTE PTR [esp+0x15]
100002ba:	c1 f8 02             	sar    eax,0x2
100002bd:	ee                   	out    dx,al
100002be:	0f b6 44 24 16       	movzx  eax,BYTE PTR [esp+0x16]
100002c3:	c1 f8 02             	sar    eax,0x2
100002c6:	ee                   	out    dx,al
100002c7:	0f b6 44 24 17       	movzx  eax,BYTE PTR [esp+0x17]
100002cc:	c1 f8 02             	sar    eax,0x2
100002cf:	ee                   	out    dx,al
100002d0:	0f b6 44 24 18       	movzx  eax,BYTE PTR [esp+0x18]
100002d5:	c1 f8 02             	sar    eax,0x2
100002d8:	ee                   	out    dx,al
100002d9:	0f b6 44 24 19       	movzx  eax,BYTE PTR [esp+0x19]
100002de:	c1 f8 02             	sar    eax,0x2
100002e1:	ee                   	out    dx,al
100002e2:	0f b6 44 24 1a       	movzx  eax,BYTE PTR [esp+0x1a]
100002e7:	c1 f8 02             	sar    eax,0x2
100002ea:	ee                   	out    dx,al
100002eb:	0f b6 44 24 1b       	movzx  eax,BYTE PTR [esp+0x1b]
100002f0:	c1 f8 02             	sar    eax,0x2
100002f3:	ee                   	out    dx,al
100002f4:	0f b6 44 24 1c       	movzx  eax,BYTE PTR [esp+0x1c]
100002f9:	c1 f8 02             	sar    eax,0x2
100002fc:	ee                   	out    dx,al
100002fd:	0f b6 44 24 1d       	movzx  eax,BYTE PTR [esp+0x1d]
10000302:	c1 f8 02             	sar    eax,0x2
10000305:	ee                   	out    dx,al
10000306:	0f b6 44 24 1e       	movzx  eax,BYTE PTR [esp+0x1e]
1000030b:	c1 f8 02             	sar    eax,0x2
1000030e:	ee                   	out    dx,al
1000030f:	0f b6 44 24 1f       	movzx  eax,BYTE PTR [esp+0x1f]
10000314:	c1 f8 02             	sar    eax,0x2
10000317:	ee                   	out    dx,al
10000318:	0f b6 44 24 20       	movzx  eax,BYTE PTR [esp+0x20]
1000031d:	c1 f8 02             	sar    eax,0x2
10000320:	ee                   	out    dx,al
10000321:	0f b6 44 24 21       	movzx  eax,BYTE PTR [esp+0x21]
10000326:	c1 f8 02             	sar    eax,0x2
10000329:	ee                   	out    dx,al
1000032a:	0f b6 44 24 22       	movzx  eax,BYTE PTR [esp+0x22]
1000032f:	c1 f8 02             	sar    eax,0x2
10000332:	ee                   	out    dx,al
10000333:	0f b6 44 24 23       	movzx  eax,BYTE PTR [esp+0x23]
10000338:	c1 f8 02             	sar    eax,0x2
1000033b:	ee                   	out    dx,al
1000033c:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10000341:	c1 f8 02             	sar    eax,0x2
10000344:	ee                   	out    dx,al
10000345:	0f b6 44 24 25       	movzx  eax,BYTE PTR [esp+0x25]
1000034a:	c1 f8 02             	sar    eax,0x2
1000034d:	ee                   	out    dx,al
1000034e:	0f b6 44 24 26       	movzx  eax,BYTE PTR [esp+0x26]
10000353:	c1 f8 02             	sar    eax,0x2
10000356:	ee                   	out    dx,al
10000357:	0f b6 44 24 27       	movzx  eax,BYTE PTR [esp+0x27]
1000035c:	c1 f8 02             	sar    eax,0x2
1000035f:	ee                   	out    dx,al
10000360:	0f b6 44 24 28       	movzx  eax,BYTE PTR [esp+0x28]
10000365:	c1 f8 02             	sar    eax,0x2
10000368:	ee                   	out    dx,al
10000369:	0f b6 44 24 29       	movzx  eax,BYTE PTR [esp+0x29]
1000036e:	c1 f8 02             	sar    eax,0x2
10000371:	ee                   	out    dx,al
10000372:	0f b6 44 24 2a       	movzx  eax,BYTE PTR [esp+0x2a]
10000377:	c1 f8 02             	sar    eax,0x2
1000037a:	ee                   	out    dx,al
1000037b:	0f b6 44 24 2b       	movzx  eax,BYTE PTR [esp+0x2b]
10000380:	c1 f8 02             	sar    eax,0x2
10000383:	ee                   	out    dx,al
10000384:	0f b6 44 24 2c       	movzx  eax,BYTE PTR [esp+0x2c]
10000389:	c1 f8 02             	sar    eax,0x2
1000038c:	ee                   	out    dx,al
1000038d:	0f b6 44 24 2d       	movzx  eax,BYTE PTR [esp+0x2d]
10000392:	c1 f8 02             	sar    eax,0x2
10000395:	ee                   	out    dx,al
10000396:	0f b6 44 24 2e       	movzx  eax,BYTE PTR [esp+0x2e]
1000039b:	c1 f8 02             	sar    eax,0x2
1000039e:	ee                   	out    dx,al
1000039f:	0f b6 44 24 2f       	movzx  eax,BYTE PTR [esp+0x2f]
100003a4:	c1 f8 02             	sar    eax,0x2
100003a7:	ee                   	out    dx,al
100003a8:	0f b6 44 24 30       	movzx  eax,BYTE PTR [esp+0x30]
100003ad:	c1 f8 02             	sar    eax,0x2
100003b0:	ee                   	out    dx,al
100003b1:	0f b6 44 24 31       	movzx  eax,BYTE PTR [esp+0x31]
100003b6:	c1 f8 02             	sar    eax,0x2
100003b9:	ee                   	out    dx,al
100003ba:	0f b6 44 24 32       	movzx  eax,BYTE PTR [esp+0x32]
100003bf:	c1 f8 02             	sar    eax,0x2
100003c2:	ee                   	out    dx,al
100003c3:	0f b6 44 24 33       	movzx  eax,BYTE PTR [esp+0x33]
100003c8:	c1 f8 02             	sar    eax,0x2
100003cb:	ee                   	out    dx,al
100003cc:	0f b6 44 24 34       	movzx  eax,BYTE PTR [esp+0x34]
100003d1:	c1 f8 02             	sar    eax,0x2
100003d4:	ee                   	out    dx,al
100003d5:	0f b6 44 24 35       	movzx  eax,BYTE PTR [esp+0x35]
100003da:	c1 f8 02             	sar    eax,0x2
100003dd:	ee                   	out    dx,al
100003de:	0f b6 44 24 36       	movzx  eax,BYTE PTR [esp+0x36]
100003e3:	c1 f8 02             	sar    eax,0x2
100003e6:	ee                   	out    dx,al
100003e7:	0f b6 44 24 37       	movzx  eax,BYTE PTR [esp+0x37]
100003ec:	c1 f8 02             	sar    eax,0x2
100003ef:	ee                   	out    dx,al
100003f0:	0f b6 44 24 38       	movzx  eax,BYTE PTR [esp+0x38]
100003f5:	c1 f8 02             	sar    eax,0x2
100003f8:	ee                   	out    dx,al
100003f9:	0f b6 44 24 39       	movzx  eax,BYTE PTR [esp+0x39]
100003fe:	c1 f8 02             	sar    eax,0x2
10000401:	ee                   	out    dx,al
10000402:	0f b6 44 24 3a       	movzx  eax,BYTE PTR [esp+0x3a]
10000407:	c1 f8 02             	sar    eax,0x2
1000040a:	ee                   	out    dx,al
1000040b:	0f b6 44 24 3b       	movzx  eax,BYTE PTR [esp+0x3b]
10000410:	c1 f8 02             	sar    eax,0x2
10000413:	ee                   	out    dx,al
10000414:	0f b6 44 24 3c       	movzx  eax,BYTE PTR [esp+0x3c]
10000419:	c1 f8 02             	sar    eax,0x2
1000041c:	ee                   	out    dx,al
1000041d:	0f b6 44 24 3d       	movzx  eax,BYTE PTR [esp+0x3d]
10000422:	c1 f8 02             	sar    eax,0x2
10000425:	ee                   	out    dx,al
10000426:	0f b6 44 24 3e       	movzx  eax,BYTE PTR [esp+0x3e]
1000042b:	c1 f8 02             	sar    eax,0x2
1000042e:	ee                   	out    dx,al
1000042f:	0f b6 44 24 3f       	movzx  eax,BYTE PTR [esp+0x3f]
10000434:	c1 f8 02             	sar    eax,0x2
10000437:	ee                   	out    dx,al
10000438:	31 c0                	xor    eax,eax
1000043a:	83 c4 40             	add    esp,0x40
1000043d:	5b                   	pop    ebx
1000043e:	5e                   	pop    esi
1000043f:	5f                   	pop    edi
10000440:	c3                   	ret    
10000441:	83 f8 30             	cmp    eax,0x30
10000444:	0f 95 c0             	setne  al
10000447:	0f b6 c0             	movzx  eax,al
1000044a:	83 c0 11             	add    eax,0x11
1000044d:	e9 d6 fc ff ff       	jmp    10000128 <VGAVideo::open(int, int, void*)+0x32>
10000452:	83 ec 08             	sub    esp,0x8
10000455:	6a 01                	push   0x1
10000457:	53                   	push   ebx
10000458:	e8 fc ff ff ff       	call   10000459 <VGAVideo::open(int, int, void*)+0x363>	10000459: R_386_PC32	VGAVideo::setPlane(int)
1000045d:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000461:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
10000467:	83 c4 10             	add    esp,0x10
1000046a:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
10000471:	85 c9                	test   ecx,ecx
10000473:	78 7c                	js     100004f1 <VGAVideo::open(int, int, void*)+0x3fb>
10000475:	83 ec 08             	sub    esp,0x8
10000478:	31 c0                	xor    eax,eax
1000047a:	89 d7                	mov    edi,edx
1000047c:	c1 f9 03             	sar    ecx,0x3
1000047f:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000481:	6a 02                	push   0x2
10000483:	53                   	push   ebx
10000484:	e8 fc ff ff ff       	call   10000485 <VGAVideo::open(int, int, void*)+0x38f>	10000485: R_386_PC32	VGAVideo::setPlane(int)
10000489:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000048d:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
10000493:	83 c4 10             	add    esp,0x10
10000496:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
1000049d:	85 c9                	test   ecx,ecx
1000049f:	78 4b                	js     100004ec <VGAVideo::open(int, int, void*)+0x3f6>
100004a1:	83 ec 08             	sub    esp,0x8
100004a4:	31 c0                	xor    eax,eax
100004a6:	89 d7                	mov    edi,edx
100004a8:	c1 f9 03             	sar    ecx,0x3
100004ab:	f3 aa                	rep stos BYTE PTR es:[edi],al
100004ad:	6a 03                	push   0x3
100004af:	53                   	push   ebx
100004b0:	e8 fc ff ff ff       	call   100004b1 <VGAVideo::open(int, int, void*)+0x3bb>	100004b1: R_386_PC32	VGAVideo::setPlane(int)
100004b5:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100004b9:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
100004bf:	83 c4 10             	add    esp,0x10
100004c2:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
100004c9:	85 c9                	test   ecx,ecx
100004cb:	78 0e                	js     100004db <VGAVideo::open(int, int, void*)+0x3e5>
100004cd:	c1 f9 03             	sar    ecx,0x3
100004d0:	31 c0                	xor    eax,eax
100004d2:	89 d7                	mov    edi,edx
100004d4:	f3 aa                	rep stos BYTE PTR es:[edi],al
100004d6:	e9 ec fc ff ff       	jmp    100001c7 <VGAVideo::open(int, int, void*)+0xd1>
100004db:	83 c1 07             	add    ecx,0x7
100004de:	31 c0                	xor    eax,eax
100004e0:	c1 f9 03             	sar    ecx,0x3
100004e3:	89 d7                	mov    edi,edx
100004e5:	f3 aa                	rep stos BYTE PTR es:[edi],al
100004e7:	e9 db fc ff ff       	jmp    100001c7 <VGAVideo::open(int, int, void*)+0xd1>
100004ec:	83 c1 07             	add    ecx,0x7
100004ef:	eb b0                	jmp    100004a1 <VGAVideo::open(int, int, void*)+0x3ab>
100004f1:	83 c1 07             	add    ecx,0x7
100004f4:	e9 7c ff ff ff       	jmp    10000475 <VGAVideo::open(int, int, void*)+0x37f>

100004f9 <monoPixelLookup(int, int, int)>:
100004f9:	56                   	push   esi
100004fa:	53                   	push   ebx
100004fb:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
100004ff:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000503:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10000507:	89 da                	mov    edx,ebx
10000509:	01 c1                	add    ecx,eax
1000050b:	c1 fa 0e             	sar    edx,0xe
1000050e:	83 e1 01             	and    ecx,0x1
10000511:	01 c0                	add    eax,eax
10000513:	83 e2 03             	and    edx,0x3
10000516:	83 e0 02             	and    eax,0x2
10000519:	89 de                	mov    esi,ebx
1000051b:	09 c8                	or     eax,ecx
1000051d:	c1 fe 16             	sar    esi,0x16
10000520:	89 d9                	mov    ecx,ebx
10000522:	83 e6 03             	and    esi,0x3
10000525:	c1 f9 06             	sar    ecx,0x6
10000528:	83 e1 03             	and    ecx,0x3
1000052b:	81 fb bb bb bb 00    	cmp    ebx,0xbbbbbb
10000531:	74 1b                	je     1000054e <monoPixelLookup(int, int, int)+0x55>
10000533:	8d 1c 32             	lea    ebx,[edx+esi*1]
10000536:	8d 14 5a             	lea    edx,[edx+ebx*2]
10000539:	5b                   	pop    ebx
1000053a:	01 d1                	add    ecx,edx
1000053c:	5e                   	pop    esi
1000053d:	ba 80 ea ff 00       	mov    edx,0xffea80
10000542:	d3 ea                	shr    edx,cl
10000544:	88 c1                	mov    cl,al
10000546:	d3 ea                	shr    edx,cl
10000548:	89 d0                	mov    eax,edx
1000054a:	83 e0 01             	and    eax,0x1
1000054d:	c3                   	ret    
1000054e:	b8 01 00 00 00       	mov    eax,0x1
10000553:	5b                   	pop    ebx
10000554:	5e                   	pop    esi
10000555:	c3                   	ret    

10000556 <VGAVideo::blit(unsigned int*, int, int, int, int)>:
10000556:	83 ec 18             	sub    esp,0x18
10000559:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000055d:	8b 54 24 2c          	mov    edx,DWORD PTR [esp+0x2c]
10000561:	8b 08                	mov    ecx,DWORD PTR [eax]
10000563:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10000567:	52                   	push   edx
10000568:	ff 74 24 38          	push   DWORD PTR [esp+0x38]
1000056c:	52                   	push   edx
1000056d:	6a 00                	push   0x0
1000056f:	6a 00                	push   0x0
10000571:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
10000575:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
10000579:	50                   	push   eax
1000057a:	ff 51 38             	call   DWORD PTR [ecx+0x38]
1000057d:	83 c4 3c             	add    esp,0x3c
10000580:	c3                   	ret    
10000581:	90                   	nop

10000582 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)>:
10000582:	57                   	push   edi
10000583:	56                   	push   esi
10000584:	53                   	push   ebx
10000585:	83 ec 30             	sub    esp,0x30
10000588:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
1000058c:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
10000590:	8b 7c 24 48          	mov    edi,DWORD PTR [esp+0x48]
10000594:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10000598:	0f af be 58 01 00 00 	imul   edi,DWORD PTR [esi+0x158]
1000059f:	85 c9                	test   ecx,ecx
100005a1:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
100005a5:	0f 8e 18 02 00 00    	jle    100007c3 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x241>
100005ab:	8b 5c 24 54          	mov    ebx,DWORD PTR [esp+0x54]
100005af:	85 db                	test   ebx,ebx
100005b1:	0f 8e 0c 02 00 00    	jle    100007c3 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x241>
100005b7:	8d 3c 85 00 00 00 00 	lea    edi,[eax*4+0x0]
100005be:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
100005c2:	0f af 44 24 50       	imul   eax,DWORD PTR [esp+0x50]
100005c7:	03 4c 24 48          	add    ecx,DWORD PTR [esp+0x48]
100005cb:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
100005cf:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
100005d3:	8d 04 82             	lea    eax,[edx+eax*4]
100005d6:	89 4c 24 28          	mov    DWORD PTR [esp+0x28],ecx
100005da:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100005de:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
100005e2:	c7 44 24 14 00 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
100005ea:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100005ee:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100005f2:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100005f6:	eb 3f                	jmp    10000637 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xb5>
100005f8:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100005fc:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10000600:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10000604:	8d 59 01             	lea    ebx,[ecx+0x1]
10000607:	8b 00                	mov    eax,DWORD PTR [eax]
10000609:	8d 77 04             	lea    esi,[edi+0x4]
1000060c:	ff 37                	push   DWORD PTR [edi]
1000060e:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
10000612:	51                   	push   ecx
10000613:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
10000617:	ff 50 24             	call   DWORD PTR [eax+0x24]
1000061a:	ff 44 24 24          	inc    DWORD PTR [esp+0x24]
1000061e:	83 c4 10             	add    esp,0x10
10000621:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000625:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
10000629:	89 5c 24 18          	mov    DWORD PTR [esp+0x18],ebx
1000062d:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
10000631:	0f 8e 64 01 00 00    	jle    1000079b <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x219>
10000637:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000063b:	2b 44 24 14          	sub    eax,DWORD PTR [esp+0x14]
1000063f:	c1 f8 03             	sar    eax,0x3
10000642:	74 b4                	je     100005f8 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x76>
10000644:	f6 44 24 18 07       	test   BYTE PTR [esp+0x18],0x7
10000649:	75 ad                	jne    100005f8 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x76>
1000064b:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
1000064f:	83 f8 64             	cmp    eax,0x64
10000652:	7e 08                	jle    1000065c <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xda>
10000654:	c7 44 24 10 64 00 00 00 	mov    DWORD PTR [esp+0x10],0x64
1000065c:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000660:	8d 34 c5 00 00 00 00 	lea    esi,[eax*8+0x0]
10000667:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
1000066b:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
10000672:	0f 84 52 01 00 00    	je     100007ca <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x248>
10000678:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000067c:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10000680:	31 ff                	xor    edi,edi
10000682:	8d 1c 08             	lea    ebx,[eax+ecx*1]
10000685:	83 44 24 0c 04       	add    DWORD PTR [esp+0xc],0x4
1000068a:	8d 04 3b             	lea    eax,[ebx+edi*1]
1000068d:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10000691:	47                   	inc    edi
10000692:	ff 74 24 48          	push   DWORD PTR [esp+0x48]
10000696:	50                   	push   eax
10000697:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
1000069a:	e8 fc ff ff ff       	call   1000069b <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x119>	1000069b: R_386_PC32	monoPixelLookup(int, int, int)
1000069f:	83 c4 0c             	add    esp,0xc
100006a2:	88 87 bf 14 00 10    	mov    BYTE PTR [edi+0x100014bf],al	100006a4: R_386_32	.bss
100006a8:	39 f7                	cmp    edi,esi
100006aa:	7c d9                	jl     10000685 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x103>
100006ac:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
100006b0:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100006b4:	8b 91 64 01 00 00    	mov    edx,DWORD PTR [ecx+0x164]
100006ba:	03 44 24 20          	add    eax,DWORD PTR [esp+0x20]
100006be:	31 c9                	xor    ecx,ecx
100006c0:	c1 f8 03             	sar    eax,0x3
100006c3:	8d bc 10 00 00 00 c2 	lea    edi,[eax+edx*1-0x3e000000]
100006ca:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100006ce:	80 b8 61 01 00 00 01 	cmp    BYTE PTR [eax+0x161],0x1
100006d5:	19 c0                	sbb    eax,eax
100006d7:	83 e0 03             	and    eax,0x3
100006da:	40                   	inc    eax
100006db:	39 c1                	cmp    ecx,eax
100006dd:	0f 8d 9b 00 00 00    	jge    1000077e <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x1fc>
100006e3:	51                   	push   ecx
100006e4:	be 01 00 00 00       	mov    esi,0x1
100006e9:	89 4c 24 20          	mov    DWORD PTR [esp+0x20],ecx
100006ed:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
100006f1:	e8 fc ff ff ff       	call   100006f2 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x170>	100006f2: R_386_PC32	VGAVideo::setPlane(int)
100006f6:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
100006fa:	58                   	pop    eax
100006fb:	d3 e6                	shl    esi,cl
100006fd:	5a                   	pop    edx
100006fe:	31 c0                	xor    eax,eax
10000700:	0f b6 14 c5 c0 14 00 10 	movzx  edx,BYTE PTR [eax*8+0x100014c0]	10000704: R_386_32	.bss
10000708:	0f b6 1c c5 c1 14 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100014c1]	1000070c: R_386_32	.bss
10000710:	21 f2                	and    edx,esi
10000712:	21 f3                	and    ebx,esi
10000714:	01 d2                	add    edx,edx
10000716:	09 d3                	or     ebx,edx
10000718:	0f b6 14 c5 c2 14 00 10 	movzx  edx,BYTE PTR [eax*8+0x100014c2]	1000071c: R_386_32	.bss
10000720:	01 db                	add    ebx,ebx
10000722:	21 f2                	and    edx,esi
10000724:	09 da                	or     edx,ebx
10000726:	0f b6 1c c5 c3 14 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100014c3]	1000072a: R_386_32	.bss
1000072e:	01 d2                	add    edx,edx
10000730:	21 f3                	and    ebx,esi
10000732:	09 d3                	or     ebx,edx
10000734:	0f b6 14 c5 c4 14 00 10 	movzx  edx,BYTE PTR [eax*8+0x100014c4]	10000738: R_386_32	.bss
1000073c:	01 db                	add    ebx,ebx
1000073e:	21 f2                	and    edx,esi
10000740:	09 da                	or     edx,ebx
10000742:	0f b6 1c c5 c5 14 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100014c5]	10000746: R_386_32	.bss
1000074a:	01 d2                	add    edx,edx
1000074c:	21 f3                	and    ebx,esi
1000074e:	09 d3                	or     ebx,edx
10000750:	0f b6 14 c5 c6 14 00 10 	movzx  edx,BYTE PTR [eax*8+0x100014c6]	10000754: R_386_32	.bss
10000758:	01 db                	add    ebx,ebx
1000075a:	21 f2                	and    edx,esi
1000075c:	09 da                	or     edx,ebx
1000075e:	0f b6 1c c5 c7 14 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100014c7]	10000762: R_386_32	.bss
10000766:	01 d2                	add    edx,edx
10000768:	21 f3                	and    ebx,esi
1000076a:	09 da                	or     edx,ebx
1000076c:	d3 ea                	shr    edx,cl
1000076e:	88 14 07             	mov    BYTE PTR [edi+eax*1],dl
10000771:	40                   	inc    eax
10000772:	39 44 24 10          	cmp    DWORD PTR [esp+0x10],eax
10000776:	75 88                	jne    10000700 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x17e>
10000778:	41                   	inc    ecx
10000779:	e9 4c ff ff ff       	jmp    100006ca <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x148>
1000077e:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000782:	c1 e0 03             	shl    eax,0x3
10000785:	01 44 24 14          	add    DWORD PTR [esp+0x14],eax
10000789:	01 44 24 18          	add    DWORD PTR [esp+0x18],eax
1000078d:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000791:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
10000795:	0f 8f 9c fe ff ff    	jg     10000637 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xb5>
1000079b:	ff 44 24 48          	inc    DWORD PTR [esp+0x48]
1000079f:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
100007a3:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
100007a7:	8b bf 58 01 00 00    	mov    edi,DWORD PTR [edi+0x158]
100007ad:	01 4c 24 24          	add    DWORD PTR [esp+0x24],ecx
100007b1:	01 7c 24 20          	add    DWORD PTR [esp+0x20],edi
100007b5:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
100007b9:	39 44 24 48          	cmp    DWORD PTR [esp+0x48],eax
100007bd:	0f 85 1b fe ff ff    	jne    100005de <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x5c>
100007c3:	83 c4 30             	add    esp,0x30
100007c6:	5b                   	pop    ebx
100007c7:	5e                   	pop    esi
100007c8:	5f                   	pop    edi
100007c9:	c3                   	ret    
100007ca:	31 c9                	xor    ecx,ecx
100007cc:	83 44 24 0c 04       	add    DWORD PTR [esp+0xc],0x4
100007d1:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100007d5:	8b 40 fc             	mov    eax,DWORD PTR [eax-0x4]
100007d8:	89 c3                	mov    ebx,eax
100007da:	89 c2                	mov    edx,eax
100007dc:	c1 fb 15             	sar    ebx,0x15
100007df:	c1 fa 0a             	sar    edx,0xa
100007e2:	83 e3 07             	and    ebx,0x7
100007e5:	83 e2 38             	and    edx,0x38
100007e8:	09 d3                	or     ebx,edx
100007ea:	8d 14 00             	lea    edx,[eax+eax*1]
100007ed:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100007f1:	81 e2 c0 01 00 00    	and    edx,0x1c0
100007f7:	01 c8                	add    eax,ecx
100007f9:	09 da                	or     edx,ebx
100007fb:	83 e0 01             	and    eax,0x1
100007fe:	41                   	inc    ecx
100007ff:	8a 84 50 00 00 00 00 	mov    al,BYTE PTR [eax+edx*2+0x0]	10000802: R_386_32	dither16Data
10000806:	88 81 bf 14 00 10    	mov    BYTE PTR [ecx+0x100014bf],al	10000808: R_386_32	.bss
1000080c:	39 f1                	cmp    ecx,esi
1000080e:	7c bc                	jl     100007cc <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x24a>
10000810:	e9 97 fe ff ff       	jmp    100006ac <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x12a>
10000815:	90                   	nop

10000816 <VGAVideo::putrect(int, int, int, int, unsigned int)>:
10000816:	57                   	push   edi
10000817:	56                   	push   esi
10000818:	53                   	push   ebx
10000819:	83 ec 40             	sub    esp,0x40
1000081c:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000820:	8b 80 64 01 00 00    	mov    eax,DWORD PTR [eax+0x164]
10000826:	2d 00 00 00 3e       	sub    eax,0x3e000000
1000082b:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000082f:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10000833:	c1 f8 15             	sar    eax,0x15
10000836:	83 e0 07             	and    eax,0x7
10000839:	89 c2                	mov    edx,eax
1000083b:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
1000083f:	c1 f8 0a             	sar    eax,0xa
10000842:	83 e0 38             	and    eax,0x38
10000845:	09 d0                	or     eax,edx
10000847:	8b 54 24 64          	mov    edx,DWORD PTR [esp+0x64]
1000084b:	01 d2                	add    edx,edx
1000084d:	81 e2 c0 01 00 00    	and    edx,0x1c0
10000853:	09 d0                	or     eax,edx
10000855:	0f b6 bc 00 00 00 00 00 	movzx  edi,BYTE PTR [eax+eax*1+0x0]	10000859: R_386_32	dither16Data
1000085d:	0f b6 84 00 01 00 00 00 	movzx  eax,BYTE PTR [eax+eax*1+0x1]	10000861: R_386_32	dither16Data
10000865:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
10000869:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
1000086d:	8b 7c 24 60          	mov    edi,DWORD PTR [esp+0x60]
10000871:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10000875:	03 7c 24 58          	add    edi,DWORD PTR [esp+0x58]
10000879:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
1000087d:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10000881:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10000885:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
10000889:	0f 8d ad 00 00 00    	jge    1000093c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x126>
1000088f:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000893:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
10000897:	2b 7c 24 54          	sub    edi,DWORD PTR [esp+0x54]
1000089b:	8b 74 24 50          	mov    esi,DWORD PTR [esp+0x50]
1000089f:	89 7c 24 3c          	mov    DWORD PTR [esp+0x3c],edi
100008a3:	0f af 86 58 01 00 00 	imul   eax,DWORD PTR [esi+0x158]
100008aa:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
100008ae:	c1 f8 03             	sar    eax,0x3
100008b1:	c1 ff 03             	sar    edi,0x3
100008b4:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100008b8:	89 7c 24 38          	mov    DWORD PTR [esp+0x38],edi
100008bc:	74 11                	je     100008cf <VGAVideo::putrect(int, int, int, int, unsigned int)+0xb9>
100008be:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100008c2:	83 e0 07             	and    eax,0x7
100008c5:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100008c9:	0f 84 ff 01 00 00    	je     10000ace <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2b8>
100008cf:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
100008d3:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
100008d7:	a8 01                	test   al,0x1
100008d9:	0f 84 da 01 00 00    	je     10000ab9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2a3>
100008df:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100008e3:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
100008e7:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100008eb:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100008ef:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
100008f3:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
100008fa:	74 47                	je     10000943 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x12d>
100008fc:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000900:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
10000904:	7d 24                	jge    1000092a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
10000906:	8b 5c 24 58          	mov    ebx,DWORD PTR [esp+0x58]
1000090a:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
1000090e:	8b 00                	mov    eax,DWORD PTR [eax]
10000910:	ff 74 24 64          	push   DWORD PTR [esp+0x64]
10000914:	53                   	push   ebx
10000915:	43                   	inc    ebx
10000916:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
1000091a:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
1000091e:	ff 50 24             	call   DWORD PTR [eax+0x24]
10000921:	83 c4 10             	add    esp,0x10
10000924:	39 5c 24 0c          	cmp    DWORD PTR [esp+0xc],ebx
10000928:	75 e0                	jne    1000090a <VGAVideo::putrect(int, int, int, int, unsigned int)+0xf4>
1000092a:	ff 44 24 54          	inc    DWORD PTR [esp+0x54]
1000092e:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10000932:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10000936:	0f 8f 53 ff ff ff    	jg     1000088f <VGAVideo::putrect(int, int, int, int, unsigned int)+0x79>
1000093c:	83 c4 40             	add    esp,0x40
1000093f:	5b                   	pop    ebx
10000940:	5e                   	pop    esi
10000941:	5f                   	pop    edi
10000942:	c3                   	ret    
10000943:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000947:	c7 44 24 18 00 00 00 00 	mov    DWORD PTR [esp+0x18],0x0
1000094f:	f7 d0                	not    eax
10000951:	83 e0 07             	and    eax,0x7
10000954:	89 c7                	mov    edi,eax
10000956:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000095a:	89 f9                	mov    ecx,edi
1000095c:	b8 fe ff ff ff       	mov    eax,0xfffffffe
10000961:	d3 c0                	rol    eax,cl
10000963:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10000967:	83 ec 08             	sub    esp,0x8
1000096a:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
1000096e:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
10000972:	e8 fc ff ff ff       	call   10000973 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x15d>	10000973: R_386_PC32	VGAVideo::setPlane(int)
10000977:	83 c4 10             	add    esp,0x10
1000097a:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
1000097e:	39 7c 24 14          	cmp    DWORD PTR [esp+0x14],edi
10000982:	0f 84 c2 00 00 00    	je     10000a4a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x234>
10000988:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
1000098c:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10000990:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000994:	d3 fe                	sar    esi,cl
10000996:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
1000099a:	83 e6 01             	and    esi,0x1
1000099d:	d3 e6                	shl    esi,cl
1000099f:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
100009a3:	0f 8d aa 03 00 00    	jge    10000d53 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x53d>
100009a9:	8a 44 24 28          	mov    al,BYTE PTR [esp+0x28]
100009ad:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
100009b1:	89 c7                	mov    edi,eax
100009b3:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
100009b7:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100009bb:	83 c2 02             	add    edx,0x2
100009be:	8d 1c 08             	lea    ebx,[eax+ecx*1]
100009c1:	89 f8                	mov    eax,edi
100009c3:	22 03                	and    al,BYTE PTR [ebx]
100009c5:	09 f0                	or     eax,esi
100009c7:	88 03                	mov    BYTE PTR [ebx],al
100009c9:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
100009cd:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
100009d3:	89 c3                	mov    ebx,eax
100009d5:	c1 fb 02             	sar    ebx,0x2
100009d8:	01 d9                	add    ecx,ebx
100009da:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
100009de:	7f d7                	jg     100009b7 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1a1>
100009e0:	c1 f8 03             	sar    eax,0x3
100009e3:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
100009e7:	03 44 24 24          	add    eax,DWORD PTR [esp+0x24]
100009eb:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
100009ef:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
100009f3:	d3 fe                	sar    esi,cl
100009f5:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
100009f9:	83 e6 01             	and    esi,0x1
100009fc:	d3 e6                	shl    esi,cl
100009fe:	8d 4f 01             	lea    ecx,[edi+0x1]
10000a01:	83 7c 24 60 01       	cmp    DWORD PTR [esp+0x60],0x1
10000a06:	7e 2c                	jle    10000a34 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x21e>
10000a08:	8a 5c 24 28          	mov    bl,BYTE PTR [esp+0x28]
10000a0c:	89 df                	mov    edi,ebx
10000a0e:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
10000a12:	89 fa                	mov    edx,edi
10000a14:	01 c3                	add    ebx,eax
10000a16:	83 c1 02             	add    ecx,0x2
10000a19:	22 13                	and    dl,BYTE PTR [ebx]
10000a1b:	09 f2                	or     edx,esi
10000a1d:	88 13                	mov    BYTE PTR [ebx],dl
10000a1f:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
10000a23:	8b 93 58 01 00 00    	mov    edx,DWORD PTR [ebx+0x158]
10000a29:	c1 fa 02             	sar    edx,0x2
10000a2c:	01 d0                	add    eax,edx
10000a2e:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
10000a32:	7f da                	jg     10000a0e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1f8>
10000a34:	ff 44 24 18          	inc    DWORD PTR [esp+0x18]
10000a38:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10000a3c:	83 f8 04             	cmp    eax,0x4
10000a3f:	0f 85 22 ff ff ff    	jne    10000967 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x151>
10000a45:	e9 e0 fe ff ff       	jmp    1000092a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
10000a4a:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10000a4e:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000a52:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10000a56:	d3 f8                	sar    eax,cl
10000a58:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
10000a5c:	83 e0 01             	and    eax,0x1
10000a5f:	d3 e0                	shl    eax,cl
10000a61:	39 7c 24 58          	cmp    DWORD PTR [esp+0x58],edi
10000a65:	7d cd                	jge    10000a34 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x21e>
10000a67:	89 c7                	mov    edi,eax
10000a69:	0f b6 74 24 28       	movzx  esi,BYTE PTR [esp+0x28]
10000a6e:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10000a72:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10000a76:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000a7a:	42                   	inc    edx
10000a7b:	8d 1c 08             	lea    ebx,[eax+ecx*1]
10000a7e:	89 f0                	mov    eax,esi
10000a80:	22 03                	and    al,BYTE PTR [ebx]
10000a82:	88 44 24 1c          	mov    BYTE PTR [esp+0x1c],al
10000a86:	89 f8                	mov    eax,edi
10000a88:	0b 44 24 1c          	or     eax,DWORD PTR [esp+0x1c]
10000a8c:	88 03                	mov    BYTE PTR [ebx],al
10000a8e:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000a92:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000a98:	c1 f8 03             	sar    eax,0x3
10000a9b:	01 c1                	add    ecx,eax
10000a9d:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
10000aa1:	75 d3                	jne    10000a76 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x260>
10000aa3:	ff 44 24 18          	inc    DWORD PTR [esp+0x18]
10000aa7:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10000aab:	83 f8 04             	cmp    eax,0x4
10000aae:	0f 85 b3 fe ff ff    	jne    10000967 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x151>
10000ab4:	e9 71 fe ff ff       	jmp    1000092a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
10000ab9:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000abd:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000ac1:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000ac5:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000ac9:	e9 21 fe ff ff       	jmp    100008ef <VGAVideo::putrect(int, int, int, int, unsigned int)+0xd9>
10000ace:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000ad2:	83 e0 01             	and    eax,0x1
10000ad5:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000ad9:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000add:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
10000ae1:	80 b8 61 01 00 00 01 	cmp    BYTE PTR [eax+0x161],0x1
10000ae8:	19 c0                	sbb    eax,eax
10000aea:	83 e0 03             	and    eax,0x3
10000aed:	40                   	inc    eax
10000aee:	39 c7                	cmp    edi,eax
10000af0:	0f 8d 33 02 00 00    	jge    10000d29 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x513>
10000af6:	57                   	push   edi
10000af7:	ff 74 24 54          	push   DWORD PTR [esp+0x54]
10000afb:	e8 fc ff ff ff       	call   10000afc <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2e6>	10000afc: R_386_PC32	VGAVideo::setPlane(int)
10000b00:	5a                   	pop    edx
10000b01:	59                   	pop    ecx
10000b02:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000b06:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
10000b0d:	0f 84 59 01 00 00    	je     10000c6c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x456>
10000b13:	89 f9                	mov    ecx,edi
10000b15:	b8 01 00 00 00       	mov    eax,0x1
10000b1a:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10000b1e:	d3 e0                	shl    eax,cl
10000b20:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000b24:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10000b28:	01 c7                	add    edi,eax
10000b2a:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10000b2e:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
10000b32:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000b36:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10000b3a:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
10000b3e:	0f 8d 0d 01 00 00    	jge    10000c51 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
10000b44:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000b48:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
10000b4c:	40                   	inc    eax
10000b4d:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000b51:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10000b55:	85 c0                	test   eax,eax
10000b57:	0f 85 9e 00 00 00    	jne    10000bfb <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3e5>
10000b5d:	eb 2a                	jmp    10000b89 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x373>
10000b5f:	85 c0                	test   eax,eax
10000b61:	b9 aa 00 00 00       	mov    ecx,0xaa
10000b66:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000b6a:	74 6d                	je     10000bd9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3c3>
10000b6c:	88 0c 18             	mov    BYTE PTR [eax+ebx*1],cl
10000b6f:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000b73:	46                   	inc    esi
10000b74:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000b7a:	c1 f8 03             	sar    eax,0x3
10000b7d:	01 c3                	add    ebx,eax
10000b7f:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
10000b83:	0f 84 c8 00 00 00    	je     10000c51 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
10000b89:	56                   	push   esi
10000b8a:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
10000b8e:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000b92:	e8 fc ff ff ff       	call   10000b93 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x37d>	10000b93: R_386_PC32	monoPixelLookup(int, int, int)
10000b97:	83 c4 0c             	add    esp,0xc
10000b9a:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000b9e:	56                   	push   esi
10000b9f:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000ba3:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000ba7:	e8 fc ff ff ff       	call   10000ba8 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x392>	10000ba8: R_386_PC32	monoPixelLookup(int, int, int)
10000bac:	83 c4 0c             	add    esp,0xc
10000baf:	89 c7                	mov    edi,eax
10000bb1:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10000bb5:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000bb9:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000bbd:	21 ca                	and    edx,ecx
10000bbf:	21 f9                	and    ecx,edi
10000bc1:	89 d0                	mov    eax,edx
10000bc3:	89 ca                	mov    edx,ecx
10000bc5:	74 98                	je     10000b5f <VGAVideo::putrect(int, int, int, int, unsigned int)+0x349>
10000bc7:	85 c0                	test   eax,eax
10000bc9:	b9 ff 00 00 00       	mov    ecx,0xff
10000bce:	ba 55 00 00 00       	mov    edx,0x55
10000bd3:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000bd7:	75 93                	jne    10000b6c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x356>
10000bd9:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
10000bdc:	eb 91                	jmp    10000b6f <VGAVideo::putrect(int, int, int, int, unsigned int)+0x359>
10000bde:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000be2:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
10000be5:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000be9:	46                   	inc    esi
10000bea:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000bf0:	c1 f8 03             	sar    eax,0x3
10000bf3:	01 c3                	add    ebx,eax
10000bf5:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
10000bf9:	74 56                	je     10000c51 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
10000bfb:	56                   	push   esi
10000bfc:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
10000c00:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000c04:	e8 fc ff ff ff       	call   10000c05 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3ef>	10000c05: R_386_PC32	monoPixelLookup(int, int, int)
10000c09:	83 c4 0c             	add    esp,0xc
10000c0c:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000c10:	56                   	push   esi
10000c11:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000c15:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000c19:	e8 fc ff ff ff       	call   10000c1a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x404>	10000c1a: R_386_PC32	monoPixelLookup(int, int, int)
10000c1e:	83 c4 0c             	add    esp,0xc
10000c21:	89 c7                	mov    edi,eax
10000c23:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10000c27:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000c2b:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000c2f:	21 c8                	and    eax,ecx
10000c31:	83 f8 01             	cmp    eax,0x1
10000c34:	19 d2                	sbb    edx,edx
10000c36:	f7 d2                	not    edx
10000c38:	83 e2 55             	and    edx,0x55
10000c3b:	83 f8 01             	cmp    eax,0x1
10000c3e:	19 c0                	sbb    eax,eax
10000c40:	83 e0 ab             	and    eax,0xffffffab
10000c43:	48                   	dec    eax
10000c44:	85 cf                	test   edi,ecx
10000c46:	74 96                	je     10000bde <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3c8>
10000c48:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10000c4c:	88 04 1f             	mov    BYTE PTR [edi+ebx*1],al
10000c4f:	eb 94                	jmp    10000be5 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3cf>
10000c51:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
10000c55:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10000c59:	39 44 24 28          	cmp    DWORD PTR [esp+0x28],eax
10000c5d:	0f 85 cf fe ff ff    	jne    10000b32 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x31c>
10000c63:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10000c67:	e9 6d fe ff ff       	jmp    10000ad9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2c3>
10000c6c:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000c70:	8a 4c 24 2c          	mov    cl,BYTE PTR [esp+0x2c]
10000c74:	d3 f8                	sar    eax,cl
10000c76:	a8 01                	test   al,0x1
10000c78:	0f 84 92 00 00 00    	je     10000d10 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4fa>
10000c7e:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000c82:	d3 f8                	sar    eax,cl
10000c84:	83 e0 01             	and    eax,0x1
10000c87:	83 f8 01             	cmp    eax,0x1
10000c8a:	19 ff                	sbb    edi,edi
10000c8c:	89 f9                	mov    ecx,edi
10000c8e:	89 f8                	mov    eax,edi
10000c90:	83 e1 56             	and    ecx,0x56
10000c93:	83 e0 ab             	and    eax,0xffffffab
10000c96:	49                   	dec    ecx
10000c97:	05 ff 00 00 00       	add    eax,0xff
10000c9c:	88 4c 24 1c          	mov    BYTE PTR [esp+0x1c],cl
10000ca0:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000ca4:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000ca8:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
10000cac:	7d b5                	jge    10000c63 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x44d>
10000cae:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10000cb2:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10000cb6:	89 de                	mov    esi,ebx
10000cb8:	01 df                	add    edi,ebx
10000cba:	8b 5c 24 54          	mov    ebx,DWORD PTR [esp+0x54]
10000cbe:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10000cc2:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
10000cc6:	01 df                	add    edi,ebx
10000cc8:	8d 1c 03             	lea    ebx,[ebx+eax*1]
10000ccb:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
10000ccf:	89 f2                	mov    edx,esi
10000cd1:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000cd5:	eb 1b                	jmp    10000cf2 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4dc>
10000cd7:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10000cdb:	88 0c 17             	mov    BYTE PTR [edi+edx*1],cl
10000cde:	40                   	inc    eax
10000cdf:	8b 7c 24 50          	mov    edi,DWORD PTR [esp+0x50]
10000ce3:	8b 8f 58 01 00 00    	mov    ecx,DWORD PTR [edi+0x158]
10000ce9:	c1 f9 03             	sar    ecx,0x3
10000cec:	01 ca                	add    edx,ecx
10000cee:	39 c3                	cmp    ebx,eax
10000cf0:	74 0e                	je     10000d00 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4ea>
10000cf2:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10000cf6:	a8 01                	test   al,0x1
10000cf8:	74 dd                	je     10000cd7 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4c1>
10000cfa:	8a 4c 24 1c          	mov    cl,BYTE PTR [esp+0x1c]
10000cfe:	eb db                	jmp    10000cdb <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4c5>
10000d00:	46                   	inc    esi
10000d01:	39 74 24 20          	cmp    DWORD PTR [esp+0x20],esi
10000d05:	75 c8                	jne    10000ccf <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4b9>
10000d07:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10000d0b:	e9 c9 fd ff ff       	jmp    10000ad9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2c3>
10000d10:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000d14:	d3 fe                	sar    esi,cl
10000d16:	83 e6 01             	and    esi,0x1
10000d19:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
10000d1d:	75 43                	jne    10000d62 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x54c>
10000d1f:	c6 44 24 1c 00       	mov    BYTE PTR [esp+0x1c],0x0
10000d24:	e9 7b ff ff ff       	jmp    10000ca4 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x48e>
10000d29:	8b 7c 24 54          	mov    edi,DWORD PTR [esp+0x54]
10000d2d:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10000d31:	83 e0 f8             	and    eax,0xfffffff8
10000d34:	8d 44 07 ff          	lea    eax,[edi+eax*1-0x1]
10000d38:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10000d3c:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10000d40:	ff 44 24 54          	inc    DWORD PTR [esp+0x54]
10000d44:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10000d48:	0f 8f 41 fb ff ff    	jg     1000088f <VGAVideo::putrect(int, int, int, int, unsigned int)+0x79>
10000d4e:	e9 e9 fb ff ff       	jmp    1000093c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x126>
10000d53:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000d57:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000d5d:	e9 7e fc ff ff       	jmp    100009e0 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1ca>
10000d62:	c6 44 24 1c aa       	mov    BYTE PTR [esp+0x1c],0xaa
10000d67:	c7 44 24 18 55 00 00 00 	mov    DWORD PTR [esp+0x18],0x55
10000d6f:	e9 30 ff ff ff       	jmp    10000ca4 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x48e>

10000d74 <VGAVideo::putpixel(int, int, unsigned int)>:
10000d74:	57                   	push   edi
10000d75:	56                   	push   esi
10000d76:	53                   	push   ebx
10000d77:	83 ec 14             	sub    esp,0x14
10000d7a:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
10000d7e:	8b 5c 24 28          	mov    ebx,DWORD PTR [esp+0x28]
10000d82:	8b 86 64 01 00 00    	mov    eax,DWORD PTR [esi+0x164]
10000d88:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
10000d8e:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000d93:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000d97:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000d9b:	89 d8                	mov    eax,ebx
10000d9d:	f7 d0                	not    eax
10000d9f:	83 e0 07             	and    eax,0x7
10000da2:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000da6:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000daa:	0f af 86 58 01 00 00 	imul   eax,DWORD PTR [esi+0x158]
10000db1:	01 d8                	add    eax,ebx
10000db3:	c1 f8 03             	sar    eax,0x3
10000db6:	84 d2                	test   dl,dl
10000db8:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000dbc:	74 75                	je     10000e33 <VGAVideo::putpixel(int, int, unsigned int)+0xbf>
10000dbe:	88 54 24 10          	mov    BYTE PTR [esp+0x10],dl
10000dc2:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000dc6:	53                   	push   ebx
10000dc7:	57                   	push   edi
10000dc8:	e8 fc ff ff ff       	call   10000dc9 <VGAVideo::putpixel(int, int, unsigned int)+0x55>	10000dc9: R_386_PC32	monoPixelLookup(int, int, int)
10000dcd:	83 c4 0c             	add    esp,0xc
10000dd0:	89 04 24             	mov    DWORD PTR [esp],eax
10000dd3:	8a 54 24 10          	mov    dl,BYTE PTR [esp+0x10]
10000dd7:	b8 fe ff ff ff       	mov    eax,0xfffffffe
10000ddc:	8a 4c 24 04          	mov    cl,BYTE PTR [esp+0x4]
10000de0:	31 db                	xor    ebx,ebx
10000de2:	d3 c0                	rol    eax,cl
10000de4:	84 d2                	test   dl,dl
10000de6:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000dea:	74 3b                	je     10000e27 <VGAVideo::putpixel(int, int, unsigned int)+0xb3>
10000dec:	85 db                	test   ebx,ebx
10000dee:	75 3c                	jne    10000e2c <VGAVideo::putpixel(int, int, unsigned int)+0xb8>
10000df0:	53                   	push   ebx
10000df1:	43                   	inc    ebx
10000df2:	56                   	push   esi
10000df3:	e8 fc ff ff ff       	call   10000df4 <VGAVideo::putpixel(int, int, unsigned int)+0x80>	10000df4: R_386_PC32	VGAVideo::setPlane(int)
10000df8:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000dfc:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000e00:	8a 44 24 18          	mov    al,BYTE PTR [esp+0x18]
10000e04:	03 7c 24 14          	add    edi,DWORD PTR [esp+0x14]
10000e08:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10000e0c:	22 07                	and    al,BYTE PTR [edi]
10000e0e:	d1 7c 24 08          	sar    DWORD PTR [esp+0x8],1
10000e12:	83 e2 01             	and    edx,0x1
10000e15:	d3 e2                	shl    edx,cl
10000e17:	09 d0                	or     eax,edx
10000e19:	88 07                	mov    BYTE PTR [edi],al
10000e1b:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
10000e21:	58                   	pop    eax
10000e22:	84 d2                	test   dl,dl
10000e24:	59                   	pop    ecx
10000e25:	75 c5                	jne    10000dec <VGAVideo::putpixel(int, int, unsigned int)+0x78>
10000e27:	83 fb 04             	cmp    ebx,0x4
10000e2a:	75 c4                	jne    10000df0 <VGAVideo::putpixel(int, int, unsigned int)+0x7c>
10000e2c:	83 c4 14             	add    esp,0x14
10000e2f:	5b                   	pop    ebx
10000e30:	5e                   	pop    esi
10000e31:	5f                   	pop    edi
10000e32:	c3                   	ret    
10000e33:	89 f9                	mov    ecx,edi
10000e35:	89 f8                	mov    eax,edi
10000e37:	c1 f9 15             	sar    ecx,0x15
10000e3a:	c1 f8 0a             	sar    eax,0xa
10000e3d:	83 e1 07             	and    ecx,0x7
10000e40:	83 e0 38             	and    eax,0x38
10000e43:	09 c1                	or     ecx,eax
10000e45:	8d 04 3f             	lea    eax,[edi+edi*1]
10000e48:	25 c0 01 00 00       	and    eax,0x1c0
10000e4d:	09 c8                	or     eax,ecx
10000e4f:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
10000e53:	01 d9                	add    ecx,ebx
10000e55:	83 e1 01             	and    ecx,0x1
10000e58:	0f b6 84 41 00 00 00 00 	movzx  eax,BYTE PTR [ecx+eax*2+0x0]	10000e5c: R_386_32	dither16Data
10000e60:	89 04 24             	mov    DWORD PTR [esp],eax
10000e63:	e9 6f ff ff ff       	jmp    10000dd7 <VGAVideo::putpixel(int, int, unsigned int)+0x63>

10000e68 <VGAVideo::~VGAVideo()>:
10000e68:	55                   	push   ebp
10000e69:	89 e5                	mov    ebp,esp
10000e6b:	83 ec 08             	sub    esp,0x8
10000e6e:	ba 08 00 00 00       	mov    edx,0x8	10000e6f: R_386_32	vtable for VGAVideo
10000e73:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000e76:	89 10                	mov    DWORD PTR [eax],edx
10000e78:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000e7b:	83 ec 0c             	sub    esp,0xc
10000e7e:	50                   	push   eax
10000e7f:	e8 fc ff ff ff       	call   10000e80 <VGAVideo::~VGAVideo()+0x18>	10000e80: R_386_PC32	Video::~Video()
10000e84:	83 c4 10             	add    esp,0x10
10000e87:	90                   	nop
10000e88:	c9                   	leave  
10000e89:	c3                   	ret    

10000e8a <VGAVideo::~VGAVideo()>:
10000e8a:	55                   	push   ebp
10000e8b:	89 e5                	mov    ebp,esp
10000e8d:	83 ec 08             	sub    esp,0x8
10000e90:	83 ec 0c             	sub    esp,0xc
10000e93:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000e96:	e8 fc ff ff ff       	call   10000e97 <VGAVideo::~VGAVideo()+0xd>	10000e97: R_386_PC32	VGAVideo::~VGAVideo()
10000e9b:	83 c4 10             	add    esp,0x10
10000e9e:	83 ec 08             	sub    esp,0x8
10000ea1:	68 6c 01 00 00       	push   0x16c
10000ea6:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000ea9:	e8 fc ff ff ff       	call   10000eaa <VGAVideo::~VGAVideo()+0x20>	10000eaa: R_386_PC32	operator delete(void*, unsigned long)
10000eae:	83 c4 10             	add    esp,0x10
10000eb1:	c9                   	leave  
10000eb2:	c3                   	ret    
10000eb3:	66 90                	xchg   ax,ax
10000eb5:	66 90                	xchg   ax,ax
10000eb7:	66 90                	xchg   ax,ax
10000eb9:	66 90                	xchg   ax,ax
10000ebb:	66 90                	xchg   ax,ax
10000ebd:	66 90                	xchg   ax,ax
10000ebf:	90                   	nop

10000ec0 <PHYS_RAM_TABLE_SIZE>:
10000ec0:	13 05 00 00                                         ....

10000ec4 <PHYS_HIGHEST_UNUSED_ADDRESS>:
10000ec4:	24 05 00 00                                         $...

10000ec8 <PHYS_RAM_TABLE>:
10000ec8:	00 06 00 00                                         ....

10000ecc <PHYS_DMA_MEMORY_1>:
10000ecc:	00 00 01 00                                         ....

10000ed0 <PHYS_PHYS_PAGE_BITMAP>:
10000ed0:	00 00 02 00                                         ....

10000ed4 <PHYS_VIRT_PAGE_BITMAP>:
10000ed4:	00 00 04 00                                         ....

10000ed8 <PHYS_DMA_MEMORY_2>:
10000ed8:	00 00 06 00                                         ....

10000edc <PHYS_ALLOCED_VIRT_PAGES>:
10000edc:	00 00 10 00                                         ....

10000ee0 <PHYS_KRNL_PAGE_DIRECTORY>:
10000ee0:	00 10 00 00                                         ....

10000ee4 <VIRT_KERNEL_BASE>:
10000ee4:	00 00 00 c0                                         ....

10000ee8 <VIRT_LOW_MEGS>:
10000ee8:	00 00 00 c2                                         ....

10000eec <VIRT_CPU_SPECIFIC>:
10000eec:	00 00 40 c2                                         ..@.

10000ef0 <VIRT_RECURSIVE_SPOT_1>:
10000ef0:	00 00 80 c2                                         ....

10000ef4 <VIRT_RECURSIVE_SPOT_2>:
10000ef4:	00 00 c0 c2                                         ....

10000ef8 <VIRT_DMA_MEMORY_1>:
10000ef8:	00 00 01 c2                                         ....

10000efc <SIZE_DMA_MEMORY_1>:
10000efc:	00 00 01 00                                         ....

10000f00 <VIRT_DMA_MEMORY_2>:
10000f00:	00 00 06 c2                                         ....

10000f04 <SIZE_DMA_MEMORY_2>:
10000f04:	00 00 02 00                                         ....

10000f08 <VIRT_KRNL_PAGE_DIRECTORY>:
10000f08:	00 10 00 c2                                         ....

10000f0c <VIRT_PHYS_PAGE_BITMAP>:
10000f0c:	00 00 02 c2                                         ....

10000f10 <SIZE_PHYS_PAGE_BITMAP>:
10000f10:	00 00 02 00                                         ....

10000f14 <VIRT_VIRT_PAGE_BITMAP>:
10000f14:	00 00 04 c2                                         ....

10000f18 <SIZE_VIRT_PAGE_BITMAP>:
10000f18:	00 80 00 00                                         ....

10000f1c <VIRT_RAM_TABLE>:
10000f1c:	00 06 00 c2                                         ....

10000f20 <VIRT_RAM_TABLE_SIZE>:
10000f20:	13 05 00 c2                                         ....

10000f24 <VIRT_HIGHEST_UNUSED_ADDRESS>:
10000f24:	24 05 00 c2                                         $...

10000f28 <SIZE_APP_STACK_USER>:
10000f28:	00 00 18 00                                         ....

10000f2c <SIZE_APP_STACK_KRNL>:
10000f2c:	00 00 08 00                                         ....

10000f30 <SIZE_APP_STACK_TOTAL>:
10000f30:	00 00 20 00                                         .. .

10000f34 <VIRT_APP_DATA>:
10000f34:	00 00 00 10                                         ....

10000f38 <VIRT_APP_STACK_USER_TOP>:
10000f38:	00 00 00 02                                         ....

10000f3c <VIRT_APP_STACK_KRNL_TOP>:
10000f3c:	00 00 e8 01                                         ....

10000f40 <VIRT_HEAP_MIN>:
10000f40:	00 00 00 c8                                         ....

10000f44 <VIRT_HEAP_MAX>:
10000f44:	ff ff ff ef                                         ....

10000f48 <VIRT_SBRK_MIN>:
10000f48:	00 00 00 f0                                         ....

10000f4c <VIRT_SBRK_MAX>:
10000f4c:	00 00 c0 ff                                         ....

10000f50 <VIRT_ALLOCED_VIRT_PAGES>:
10000f50:	00 00 10 c2                                         ....

10000f54 <VIRT_ACPI_DRIVER>:
10000f54:	00 40 48 c2                                         .@H.

10000f58 <TERMINAL_KEYBUFFER_IN_SIZE>:
10000f58:	80 00 00 00                                         ....

10000f5c <TERMINAL_KEYBUFFER_OUT_SIZE>:
10000f5c:	80 00 00 00 00 00 00 00 00 80 00 80 00 00 80 80     ................
10000f6c:	80 00 00 80 00 80 80 80 00 c8 c8 c8 80 80 80 00     ................
10000f7c:	00 ff 00 ff 00 00 ff ff ff 00 00 ff 00 ff ff ff     ................
10000f8c:	00 ff ff ff 56 47 41 20 44 69 73 70 6c 61 79 00     ....VGA Display.
10000f9c:	43 3a 2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d     C:/Banana/System
10000fac:	2f 56 47 41 2e 43 4f 4d 00 53 65 74 20 74 6f 20     /VGA.COM.Set to 
10000fbc:	76 69 64 65 6f 20 6d 6f 64 65 20 25 64 0a 00 90     video mode %d...

10000fcc <vtable for VGAVideo>:
	...
	10000fd4: R_386_32	VGAVideo::~VGAVideo()
	10000fd8: R_386_32	VGAVideo::~VGAVideo()
	10000fdc: R_386_32	VGAVideo::open(int, int, void*)
	10000fe0: R_386_32	VGAVideo::close(int, int, void*)
	10000fe4: R_386_32	Device::hibernate()
	10000fe8: R_386_32	Device::wake()
	10000fec: R_386_32	Device::detect()
	10000ff0: R_386_32	Device::disableLegacy()
	10000ff4: R_386_32	Device::powerSaving(PowerSavingLevel)
	10000ff8: R_386_32	VGAVideo::putpixel(int, int, unsigned int)
	10000ffc: R_386_32	VGAVideo::putrect(int, int, int, int, unsigned int)
	10001000: R_386_32	Video::putTGA(int, int, unsigned char*, int)
	10001004: R_386_32	Video::drawCursor(int, int, unsigned int*, int)
	10001008: R_386_32	VGAVideo::readPixelApprox(int, int)
	1000100c: R_386_32	VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)
	10001010: R_386_32	VGAVideo::blit(unsigned int*, int, int, int, int)
	10001014: R_386_32	Video::clearScreen(unsigned int)
