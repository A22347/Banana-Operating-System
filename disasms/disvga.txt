
packages/banana/32/0002/vga.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	53                   	push   ebx
10000004:	83 ec 14             	sub    esp,0x14
10000007:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000000a:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
1000000d:	c7 45 ec 6c 01 00 00 	mov    DWORD PTR [ebp-0x14],0x16c
10000014:	83 ec 0c             	sub    esp,0xc
10000017:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
1000001a:	e8 fc ff ff ff       	call   1000001b <start(void*)+0x1b>	1000001b: R_386_PC32	malloc
1000001f:	83 c4 10             	add    esp,0x10
10000022:	89 c3                	mov    ebx,eax
10000024:	83 ec 0c             	sub    esp,0xc
10000027:	53                   	push   ebx
10000028:	e8 fc ff ff ff       	call   10000029 <start(void*)+0x29>	10000029: R_386_PC32	VGAVideo::VGAVideo()
1000002d:	83 c4 10             	add    esp,0x10
10000030:	89 5d f0             	mov    DWORD PTR [ebp-0x10],ebx
10000033:	83 ec 08             	sub    esp,0x8
10000036:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000039:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000003c:	e8 fc ff ff ff       	call   1000003d <start(void*)+0x3d>	1000003d: R_386_PC32	Device::addChild(Device*)
10000041:	83 c4 10             	add    esp,0x10
10000044:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000047:	8b 00                	mov    eax,DWORD PTR [eax]
10000049:	83 c0 08             	add    eax,0x8
1000004c:	8b 00                	mov    eax,DWORD PTR [eax]
1000004e:	6a 00                	push   0x0
10000050:	6a 00                	push   0x0
10000052:	6a 00                	push   0x0
10000054:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000057:	ff d0                	call   eax
10000059:	83 c4 10             	add    esp,0x10
1000005c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000005f:	a3 00 00 00 00       	mov    ds:0x0,eax	10000060: R_386_32	screen
10000064:	90                   	nop
10000065:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000068:	c9                   	leave  
10000069:	c3                   	ret    

1000006a <VGAVideo::setPlane(int)>:
1000006a:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000006e:	39 0d 80 12 00 10    	cmp    DWORD PTR ds:0x10001280,ecx	10000070: R_386_32	.data
10000074:	74 2b                	je     100000a1 <VGAVideo::setPlane(int)+0x37>
10000076:	89 0d 80 12 00 10    	mov    DWORD PTR ds:0x10001280,ecx	10000078: R_386_32	.data
1000007c:	b0 04                	mov    al,0x4
1000007e:	ba ce 03 00 00       	mov    edx,0x3ce
10000083:	ee                   	out    dx,al
10000084:	ba cf 03 00 00       	mov    edx,0x3cf
10000089:	88 c8                	mov    al,cl
1000008b:	ee                   	out    dx,al
1000008c:	b0 02                	mov    al,0x2
1000008e:	ba c4 03 00 00       	mov    edx,0x3c4
10000093:	ee                   	out    dx,al
10000094:	b8 01 00 00 00       	mov    eax,0x1
10000099:	ba c5 03 00 00       	mov    edx,0x3c5
1000009e:	d3 e0                	shl    eax,cl
100000a0:	ee                   	out    dx,al
100000a1:	c3                   	ret    

100000a2 <VGAVideo::VGAVideo()>:
100000a2:	55                   	push   ebp
100000a3:	89 e5                	mov    ebp,esp
100000a5:	83 ec 08             	sub    esp,0x8
100000a8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000ab:	83 ec 08             	sub    esp,0x8
100000ae:	68 e0 11 00 10       	push   0x100011e0	100000af: R_386_32	.text
100000b3:	50                   	push   eax
100000b4:	e8 fc ff ff ff       	call   100000b5 <VGAVideo::VGAVideo()+0x13>	100000b5: R_386_PC32	Video::Video(char const*)
100000b9:	83 c4 10             	add    esp,0x10
100000bc:	ba 08 00 00 00       	mov    edx,0x8	100000bd: R_386_32	vtable for VGAVideo
100000c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c4:	89 10                	mov    DWORD PTR [eax],edx
100000c6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c9:	c7 80 64 01 00 00 00 00 0a 00 	mov    DWORD PTR [eax+0x164],0xa0000
100000d3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000d6:	c7 80 68 01 00 00 12 00 00 00 	mov    DWORD PTR [eax+0x168],0x12
100000e0:	90                   	nop
100000e1:	c9                   	leave  
100000e2:	c3                   	ret    
100000e3:	90                   	nop

100000e4 <VGAVideo::close(int, int, void*)>:
100000e4:	31 c0                	xor    eax,eax
100000e6:	c3                   	ret    

100000e7 <get_bios_area_video_type()>:
100000e7:	a1 10 04 00 00       	mov    eax,ds:0x410
100000ec:	83 e0 30             	and    eax,0x30
100000ef:	c3                   	ret    

100000f0 <VGAVideo::open(int, int, void*)>:
100000f0:	57                   	push   edi
100000f1:	56                   	push   esi
100000f2:	53                   	push   ebx
100000f3:	83 ec 40             	sub    esp,0x40
100000f6:	e8 fc ff ff ff       	call   100000f7 <VGAVideo::open(int, int, void*)+0x7>	100000f7: R_386_PC32	get_bios_area_video_type()
100000fb:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
100000ff:	83 f8 30             	cmp    eax,0x30
10000102:	0f 94 83 61 01 00 00 	sete   BYTE PTR [ebx+0x161]
10000109:	f6 05 01 00 00 00 08 	test   BYTE PTR ds:0x1,0x8	1000010b: R_386_32	keBootSettings
10000110:	0f 84 25 03 00 00    	je     1000043b <VGAVideo::open(int, int, void*)+0x34b>
10000116:	c6 83 61 01 00 00 01 	mov    BYTE PTR [ebx+0x161],0x1
1000011d:	b8 11 00 00 00       	mov    eax,0x11
10000122:	83 ec 0c             	sub    esp,0xc
10000125:	89 83 68 01 00 00    	mov    DWORD PTR [ebx+0x168],eax
1000012b:	c7 83 58 01 00 00 80 02 00 00 	mov    DWORD PTR [ebx+0x158],0x280
10000135:	c7 83 5c 01 00 00 e0 01 00 00 	mov    DWORD PTR [ebx+0x15c],0x1e0
1000013f:	c7 83 64 01 00 00 00 00 0a 00 	mov    DWORD PTR [ebx+0x164],0xa0000
10000149:	50                   	push   eax
1000014a:	50                   	push   eax
1000014b:	68 90 00 00 00       	push   0x90
10000150:	6a 00                	push   0x0
10000152:	68 ec 11 00 10       	push   0x100011ec	10000153: R_386_32	.text
10000157:	e8 fc ff ff ff       	call   10000158 <VGAVideo::open(int, int, void*)+0x68>	10000158: R_386_PC32	Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
1000015c:	83 c4 20             	add    esp,0x20
1000015f:	e8 fc ff ff ff       	call   10000160 <VGAVideo::open(int, int, void*)+0x70>	10000160: R_386_PC32	Vm::finish8086()
10000164:	83 ec 08             	sub    esp,0x8
10000167:	ff b3 68 01 00 00    	push   DWORD PTR [ebx+0x168]
1000016d:	68 05 12 00 10       	push   0x10001205	1000016e: R_386_32	.text
10000172:	e8 fc ff ff ff       	call   10000173 <VGAVideo::open(int, int, void*)+0x83>	10000173: R_386_PC32	Dbg::kprintf(char const*, ...)
10000177:	8b 83 64 01 00 00    	mov    eax,DWORD PTR [ebx+0x164]
1000017d:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000182:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000186:	58                   	pop    eax
10000187:	5a                   	pop    edx
10000188:	6a 00                	push   0x0
1000018a:	53                   	push   ebx
1000018b:	e8 fc ff ff ff       	call   1000018c <VGAVideo::open(int, int, void*)+0x9c>	1000018c: R_386_PC32	VGAVideo::setPlane(int)
10000190:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000194:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
1000019a:	83 c4 10             	add    esp,0x10
1000019d:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
100001a4:	85 c9                	test   ecx,ecx
100001a6:	79 03                	jns    100001ab <VGAVideo::open(int, int, void*)+0xbb>
100001a8:	83 c1 07             	add    ecx,0x7
100001ab:	c1 f9 03             	sar    ecx,0x3
100001ae:	31 c0                	xor    eax,eax
100001b0:	89 d7                	mov    edi,edx
100001b2:	f3 aa                	rep stos BYTE PTR es:[edi],al
100001b4:	80 bb 61 01 00 00 00 	cmp    BYTE PTR [ebx+0x161],0x0
100001bb:	0f 84 8b 02 00 00    	je     1000044c <VGAVideo::open(int, int, void*)+0x35c>
100001c1:	8d 7c 24 10          	lea    edi,[esp+0x10]
100001c5:	bb da 03 00 00       	mov    ebx,0x3da
100001ca:	be 60 11 00 10       	mov    esi,0x10001160	100001cb: R_386_32	.text
100001cf:	b9 0c 00 00 00       	mov    ecx,0xc
100001d4:	89 da                	mov    edx,ebx
100001d6:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100001d8:	ec                   	in     al,dx
100001d9:	31 f6                	xor    esi,esi
100001db:	b9 c0 03 00 00       	mov    ecx,0x3c0
100001e0:	89 f0                	mov    eax,esi
100001e2:	89 ca                	mov    edx,ecx
100001e4:	ee                   	out    dx,al
100001e5:	ee                   	out    dx,al
100001e6:	89 da                	mov    edx,ebx
100001e8:	ec                   	in     al,dx
100001e9:	b0 01                	mov    al,0x1
100001eb:	89 ca                	mov    edx,ecx
100001ed:	ee                   	out    dx,al
100001ee:	ee                   	out    dx,al
100001ef:	89 da                	mov    edx,ebx
100001f1:	ec                   	in     al,dx
100001f2:	b0 02                	mov    al,0x2
100001f4:	89 ca                	mov    edx,ecx
100001f6:	ee                   	out    dx,al
100001f7:	ee                   	out    dx,al
100001f8:	89 da                	mov    edx,ebx
100001fa:	ec                   	in     al,dx
100001fb:	b0 03                	mov    al,0x3
100001fd:	89 ca                	mov    edx,ecx
100001ff:	ee                   	out    dx,al
10000200:	ee                   	out    dx,al
10000201:	89 da                	mov    edx,ebx
10000203:	ec                   	in     al,dx
10000204:	b0 04                	mov    al,0x4
10000206:	89 ca                	mov    edx,ecx
10000208:	ee                   	out    dx,al
10000209:	ee                   	out    dx,al
1000020a:	89 da                	mov    edx,ebx
1000020c:	ec                   	in     al,dx
1000020d:	b0 05                	mov    al,0x5
1000020f:	89 ca                	mov    edx,ecx
10000211:	ee                   	out    dx,al
10000212:	ee                   	out    dx,al
10000213:	89 da                	mov    edx,ebx
10000215:	ec                   	in     al,dx
10000216:	b0 06                	mov    al,0x6
10000218:	89 ca                	mov    edx,ecx
1000021a:	ee                   	out    dx,al
1000021b:	ee                   	out    dx,al
1000021c:	89 da                	mov    edx,ebx
1000021e:	ec                   	in     al,dx
1000021f:	b0 07                	mov    al,0x7
10000221:	89 ca                	mov    edx,ecx
10000223:	ee                   	out    dx,al
10000224:	ee                   	out    dx,al
10000225:	89 da                	mov    edx,ebx
10000227:	ec                   	in     al,dx
10000228:	b0 08                	mov    al,0x8
1000022a:	89 ca                	mov    edx,ecx
1000022c:	ee                   	out    dx,al
1000022d:	ee                   	out    dx,al
1000022e:	89 da                	mov    edx,ebx
10000230:	ec                   	in     al,dx
10000231:	b0 09                	mov    al,0x9
10000233:	89 ca                	mov    edx,ecx
10000235:	ee                   	out    dx,al
10000236:	ee                   	out    dx,al
10000237:	89 da                	mov    edx,ebx
10000239:	ec                   	in     al,dx
1000023a:	b0 0a                	mov    al,0xa
1000023c:	89 ca                	mov    edx,ecx
1000023e:	ee                   	out    dx,al
1000023f:	ee                   	out    dx,al
10000240:	89 da                	mov    edx,ebx
10000242:	ec                   	in     al,dx
10000243:	b0 0b                	mov    al,0xb
10000245:	89 ca                	mov    edx,ecx
10000247:	ee                   	out    dx,al
10000248:	ee                   	out    dx,al
10000249:	89 da                	mov    edx,ebx
1000024b:	ec                   	in     al,dx
1000024c:	b0 0c                	mov    al,0xc
1000024e:	89 ca                	mov    edx,ecx
10000250:	ee                   	out    dx,al
10000251:	ee                   	out    dx,al
10000252:	89 da                	mov    edx,ebx
10000254:	ec                   	in     al,dx
10000255:	b0 0d                	mov    al,0xd
10000257:	89 ca                	mov    edx,ecx
10000259:	ee                   	out    dx,al
1000025a:	ee                   	out    dx,al
1000025b:	89 da                	mov    edx,ebx
1000025d:	ec                   	in     al,dx
1000025e:	b0 0e                	mov    al,0xe
10000260:	89 ca                	mov    edx,ecx
10000262:	ee                   	out    dx,al
10000263:	ee                   	out    dx,al
10000264:	89 da                	mov    edx,ebx
10000266:	ec                   	in     al,dx
10000267:	b0 0f                	mov    al,0xf
10000269:	89 ca                	mov    edx,ecx
1000026b:	ee                   	out    dx,al
1000026c:	ee                   	out    dx,al
1000026d:	89 da                	mov    edx,ebx
1000026f:	ec                   	in     al,dx
10000270:	b0 20                	mov    al,0x20
10000272:	89 ca                	mov    edx,ecx
10000274:	ee                   	out    dx,al
10000275:	ba c8 03 00 00       	mov    edx,0x3c8
1000027a:	89 f0                	mov    eax,esi
1000027c:	ee                   	out    dx,al
1000027d:	ba c9 03 00 00       	mov    edx,0x3c9
10000282:	0f b6 44 24 10       	movzx  eax,BYTE PTR [esp+0x10]
10000287:	c1 f8 02             	sar    eax,0x2
1000028a:	ee                   	out    dx,al
1000028b:	0f b6 44 24 11       	movzx  eax,BYTE PTR [esp+0x11]
10000290:	c1 f8 02             	sar    eax,0x2
10000293:	ee                   	out    dx,al
10000294:	0f b6 44 24 12       	movzx  eax,BYTE PTR [esp+0x12]
10000299:	c1 f8 02             	sar    eax,0x2
1000029c:	ee                   	out    dx,al
1000029d:	0f b6 44 24 13       	movzx  eax,BYTE PTR [esp+0x13]
100002a2:	c1 f8 02             	sar    eax,0x2
100002a5:	ee                   	out    dx,al
100002a6:	0f b6 44 24 14       	movzx  eax,BYTE PTR [esp+0x14]
100002ab:	c1 f8 02             	sar    eax,0x2
100002ae:	ee                   	out    dx,al
100002af:	0f b6 44 24 15       	movzx  eax,BYTE PTR [esp+0x15]
100002b4:	c1 f8 02             	sar    eax,0x2
100002b7:	ee                   	out    dx,al
100002b8:	0f b6 44 24 16       	movzx  eax,BYTE PTR [esp+0x16]
100002bd:	c1 f8 02             	sar    eax,0x2
100002c0:	ee                   	out    dx,al
100002c1:	0f b6 44 24 17       	movzx  eax,BYTE PTR [esp+0x17]
100002c6:	c1 f8 02             	sar    eax,0x2
100002c9:	ee                   	out    dx,al
100002ca:	0f b6 44 24 18       	movzx  eax,BYTE PTR [esp+0x18]
100002cf:	c1 f8 02             	sar    eax,0x2
100002d2:	ee                   	out    dx,al
100002d3:	0f b6 44 24 19       	movzx  eax,BYTE PTR [esp+0x19]
100002d8:	c1 f8 02             	sar    eax,0x2
100002db:	ee                   	out    dx,al
100002dc:	0f b6 44 24 1a       	movzx  eax,BYTE PTR [esp+0x1a]
100002e1:	c1 f8 02             	sar    eax,0x2
100002e4:	ee                   	out    dx,al
100002e5:	0f b6 44 24 1b       	movzx  eax,BYTE PTR [esp+0x1b]
100002ea:	c1 f8 02             	sar    eax,0x2
100002ed:	ee                   	out    dx,al
100002ee:	0f b6 44 24 1c       	movzx  eax,BYTE PTR [esp+0x1c]
100002f3:	c1 f8 02             	sar    eax,0x2
100002f6:	ee                   	out    dx,al
100002f7:	0f b6 44 24 1d       	movzx  eax,BYTE PTR [esp+0x1d]
100002fc:	c1 f8 02             	sar    eax,0x2
100002ff:	ee                   	out    dx,al
10000300:	0f b6 44 24 1e       	movzx  eax,BYTE PTR [esp+0x1e]
10000305:	c1 f8 02             	sar    eax,0x2
10000308:	ee                   	out    dx,al
10000309:	0f b6 44 24 1f       	movzx  eax,BYTE PTR [esp+0x1f]
1000030e:	c1 f8 02             	sar    eax,0x2
10000311:	ee                   	out    dx,al
10000312:	0f b6 44 24 20       	movzx  eax,BYTE PTR [esp+0x20]
10000317:	c1 f8 02             	sar    eax,0x2
1000031a:	ee                   	out    dx,al
1000031b:	0f b6 44 24 21       	movzx  eax,BYTE PTR [esp+0x21]
10000320:	c1 f8 02             	sar    eax,0x2
10000323:	ee                   	out    dx,al
10000324:	0f b6 44 24 22       	movzx  eax,BYTE PTR [esp+0x22]
10000329:	c1 f8 02             	sar    eax,0x2
1000032c:	ee                   	out    dx,al
1000032d:	0f b6 44 24 23       	movzx  eax,BYTE PTR [esp+0x23]
10000332:	c1 f8 02             	sar    eax,0x2
10000335:	ee                   	out    dx,al
10000336:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
1000033b:	c1 f8 02             	sar    eax,0x2
1000033e:	ee                   	out    dx,al
1000033f:	0f b6 44 24 25       	movzx  eax,BYTE PTR [esp+0x25]
10000344:	c1 f8 02             	sar    eax,0x2
10000347:	ee                   	out    dx,al
10000348:	0f b6 44 24 26       	movzx  eax,BYTE PTR [esp+0x26]
1000034d:	c1 f8 02             	sar    eax,0x2
10000350:	ee                   	out    dx,al
10000351:	0f b6 44 24 27       	movzx  eax,BYTE PTR [esp+0x27]
10000356:	c1 f8 02             	sar    eax,0x2
10000359:	ee                   	out    dx,al
1000035a:	0f b6 44 24 28       	movzx  eax,BYTE PTR [esp+0x28]
1000035f:	c1 f8 02             	sar    eax,0x2
10000362:	ee                   	out    dx,al
10000363:	0f b6 44 24 29       	movzx  eax,BYTE PTR [esp+0x29]
10000368:	c1 f8 02             	sar    eax,0x2
1000036b:	ee                   	out    dx,al
1000036c:	0f b6 44 24 2a       	movzx  eax,BYTE PTR [esp+0x2a]
10000371:	c1 f8 02             	sar    eax,0x2
10000374:	ee                   	out    dx,al
10000375:	0f b6 44 24 2b       	movzx  eax,BYTE PTR [esp+0x2b]
1000037a:	c1 f8 02             	sar    eax,0x2
1000037d:	ee                   	out    dx,al
1000037e:	0f b6 44 24 2c       	movzx  eax,BYTE PTR [esp+0x2c]
10000383:	c1 f8 02             	sar    eax,0x2
10000386:	ee                   	out    dx,al
10000387:	0f b6 44 24 2d       	movzx  eax,BYTE PTR [esp+0x2d]
1000038c:	c1 f8 02             	sar    eax,0x2
1000038f:	ee                   	out    dx,al
10000390:	0f b6 44 24 2e       	movzx  eax,BYTE PTR [esp+0x2e]
10000395:	c1 f8 02             	sar    eax,0x2
10000398:	ee                   	out    dx,al
10000399:	0f b6 44 24 2f       	movzx  eax,BYTE PTR [esp+0x2f]
1000039e:	c1 f8 02             	sar    eax,0x2
100003a1:	ee                   	out    dx,al
100003a2:	0f b6 44 24 30       	movzx  eax,BYTE PTR [esp+0x30]
100003a7:	c1 f8 02             	sar    eax,0x2
100003aa:	ee                   	out    dx,al
100003ab:	0f b6 44 24 31       	movzx  eax,BYTE PTR [esp+0x31]
100003b0:	c1 f8 02             	sar    eax,0x2
100003b3:	ee                   	out    dx,al
100003b4:	0f b6 44 24 32       	movzx  eax,BYTE PTR [esp+0x32]
100003b9:	c1 f8 02             	sar    eax,0x2
100003bc:	ee                   	out    dx,al
100003bd:	0f b6 44 24 33       	movzx  eax,BYTE PTR [esp+0x33]
100003c2:	c1 f8 02             	sar    eax,0x2
100003c5:	ee                   	out    dx,al
100003c6:	0f b6 44 24 34       	movzx  eax,BYTE PTR [esp+0x34]
100003cb:	c1 f8 02             	sar    eax,0x2
100003ce:	ee                   	out    dx,al
100003cf:	0f b6 44 24 35       	movzx  eax,BYTE PTR [esp+0x35]
100003d4:	c1 f8 02             	sar    eax,0x2
100003d7:	ee                   	out    dx,al
100003d8:	0f b6 44 24 36       	movzx  eax,BYTE PTR [esp+0x36]
100003dd:	c1 f8 02             	sar    eax,0x2
100003e0:	ee                   	out    dx,al
100003e1:	0f b6 44 24 37       	movzx  eax,BYTE PTR [esp+0x37]
100003e6:	c1 f8 02             	sar    eax,0x2
100003e9:	ee                   	out    dx,al
100003ea:	0f b6 44 24 38       	movzx  eax,BYTE PTR [esp+0x38]
100003ef:	c1 f8 02             	sar    eax,0x2
100003f2:	ee                   	out    dx,al
100003f3:	0f b6 44 24 39       	movzx  eax,BYTE PTR [esp+0x39]
100003f8:	c1 f8 02             	sar    eax,0x2
100003fb:	ee                   	out    dx,al
100003fc:	0f b6 44 24 3a       	movzx  eax,BYTE PTR [esp+0x3a]
10000401:	c1 f8 02             	sar    eax,0x2
10000404:	ee                   	out    dx,al
10000405:	0f b6 44 24 3b       	movzx  eax,BYTE PTR [esp+0x3b]
1000040a:	c1 f8 02             	sar    eax,0x2
1000040d:	ee                   	out    dx,al
1000040e:	0f b6 44 24 3c       	movzx  eax,BYTE PTR [esp+0x3c]
10000413:	c1 f8 02             	sar    eax,0x2
10000416:	ee                   	out    dx,al
10000417:	0f b6 44 24 3d       	movzx  eax,BYTE PTR [esp+0x3d]
1000041c:	c1 f8 02             	sar    eax,0x2
1000041f:	ee                   	out    dx,al
10000420:	0f b6 44 24 3e       	movzx  eax,BYTE PTR [esp+0x3e]
10000425:	c1 f8 02             	sar    eax,0x2
10000428:	ee                   	out    dx,al
10000429:	0f b6 44 24 3f       	movzx  eax,BYTE PTR [esp+0x3f]
1000042e:	c1 f8 02             	sar    eax,0x2
10000431:	ee                   	out    dx,al
10000432:	31 c0                	xor    eax,eax
10000434:	83 c4 40             	add    esp,0x40
10000437:	5b                   	pop    ebx
10000438:	5e                   	pop    esi
10000439:	5f                   	pop    edi
1000043a:	c3                   	ret    
1000043b:	83 f8 30             	cmp    eax,0x30
1000043e:	0f 95 c0             	setne  al
10000441:	0f b6 c0             	movzx  eax,al
10000444:	83 c0 11             	add    eax,0x11
10000447:	e9 d6 fc ff ff       	jmp    10000122 <VGAVideo::open(int, int, void*)+0x32>
1000044c:	83 ec 08             	sub    esp,0x8
1000044f:	6a 01                	push   0x1
10000451:	53                   	push   ebx
10000452:	e8 fc ff ff ff       	call   10000453 <VGAVideo::open(int, int, void*)+0x363>	10000453: R_386_PC32	VGAVideo::setPlane(int)
10000457:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000045b:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
10000461:	83 c4 10             	add    esp,0x10
10000464:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
1000046b:	85 c9                	test   ecx,ecx
1000046d:	78 7c                	js     100004eb <VGAVideo::open(int, int, void*)+0x3fb>
1000046f:	83 ec 08             	sub    esp,0x8
10000472:	31 c0                	xor    eax,eax
10000474:	89 d7                	mov    edi,edx
10000476:	c1 f9 03             	sar    ecx,0x3
10000479:	f3 aa                	rep stos BYTE PTR es:[edi],al
1000047b:	6a 02                	push   0x2
1000047d:	53                   	push   ebx
1000047e:	e8 fc ff ff ff       	call   1000047f <VGAVideo::open(int, int, void*)+0x38f>	1000047f: R_386_PC32	VGAVideo::setPlane(int)
10000483:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000487:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
1000048d:	83 c4 10             	add    esp,0x10
10000490:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
10000497:	85 c9                	test   ecx,ecx
10000499:	78 4b                	js     100004e6 <VGAVideo::open(int, int, void*)+0x3f6>
1000049b:	83 ec 08             	sub    esp,0x8
1000049e:	31 c0                	xor    eax,eax
100004a0:	89 d7                	mov    edi,edx
100004a2:	c1 f9 03             	sar    ecx,0x3
100004a5:	f3 aa                	rep stos BYTE PTR es:[edi],al
100004a7:	6a 03                	push   0x3
100004a9:	53                   	push   ebx
100004aa:	e8 fc ff ff ff       	call   100004ab <VGAVideo::open(int, int, void*)+0x3bb>	100004ab: R_386_PC32	VGAVideo::setPlane(int)
100004af:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100004b3:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
100004b9:	83 c4 10             	add    esp,0x10
100004bc:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
100004c3:	85 c9                	test   ecx,ecx
100004c5:	78 0e                	js     100004d5 <VGAVideo::open(int, int, void*)+0x3e5>
100004c7:	c1 f9 03             	sar    ecx,0x3
100004ca:	31 c0                	xor    eax,eax
100004cc:	89 d7                	mov    edi,edx
100004ce:	f3 aa                	rep stos BYTE PTR es:[edi],al
100004d0:	e9 ec fc ff ff       	jmp    100001c1 <VGAVideo::open(int, int, void*)+0xd1>
100004d5:	83 c1 07             	add    ecx,0x7
100004d8:	31 c0                	xor    eax,eax
100004da:	c1 f9 03             	sar    ecx,0x3
100004dd:	89 d7                	mov    edi,edx
100004df:	f3 aa                	rep stos BYTE PTR es:[edi],al
100004e1:	e9 db fc ff ff       	jmp    100001c1 <VGAVideo::open(int, int, void*)+0xd1>
100004e6:	83 c1 07             	add    ecx,0x7
100004e9:	eb b0                	jmp    1000049b <VGAVideo::open(int, int, void*)+0x3ab>
100004eb:	83 c1 07             	add    ecx,0x7
100004ee:	e9 7c ff ff ff       	jmp    1000046f <VGAVideo::open(int, int, void*)+0x37f>

100004f3 <monoPixelLookup(int, int, int)>:
100004f3:	56                   	push   esi
100004f4:	53                   	push   ebx
100004f5:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
100004f9:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100004fd:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10000501:	89 da                	mov    edx,ebx
10000503:	01 c1                	add    ecx,eax
10000505:	c1 fa 0e             	sar    edx,0xe
10000508:	83 e1 01             	and    ecx,0x1
1000050b:	01 c0                	add    eax,eax
1000050d:	83 e2 03             	and    edx,0x3
10000510:	83 e0 02             	and    eax,0x2
10000513:	89 de                	mov    esi,ebx
10000515:	09 c8                	or     eax,ecx
10000517:	c1 fe 16             	sar    esi,0x16
1000051a:	89 d9                	mov    ecx,ebx
1000051c:	83 e6 03             	and    esi,0x3
1000051f:	c1 f9 06             	sar    ecx,0x6
10000522:	83 e1 03             	and    ecx,0x3
10000525:	81 fb bb bb bb 00    	cmp    ebx,0xbbbbbb
1000052b:	74 1b                	je     10000548 <monoPixelLookup(int, int, int)+0x55>
1000052d:	8d 1c 32             	lea    ebx,[edx+esi*1]
10000530:	8d 14 5a             	lea    edx,[edx+ebx*2]
10000533:	5b                   	pop    ebx
10000534:	01 d1                	add    ecx,edx
10000536:	5e                   	pop    esi
10000537:	ba 80 ea ff 00       	mov    edx,0xffea80
1000053c:	d3 ea                	shr    edx,cl
1000053e:	88 c1                	mov    cl,al
10000540:	d3 ea                	shr    edx,cl
10000542:	89 d0                	mov    eax,edx
10000544:	83 e0 01             	and    eax,0x1
10000547:	c3                   	ret    
10000548:	b8 01 00 00 00       	mov    eax,0x1
1000054d:	5b                   	pop    ebx
1000054e:	5e                   	pop    esi
1000054f:	c3                   	ret    

10000550 <VGAVideo::blit(unsigned int*, int, int, int, int)>:
10000550:	83 ec 18             	sub    esp,0x18
10000553:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10000557:	8b 54 24 2c          	mov    edx,DWORD PTR [esp+0x2c]
1000055b:	8b 08                	mov    ecx,DWORD PTR [eax]
1000055d:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10000561:	52                   	push   edx
10000562:	ff 74 24 38          	push   DWORD PTR [esp+0x38]
10000566:	52                   	push   edx
10000567:	6a 00                	push   0x0
10000569:	6a 00                	push   0x0
1000056b:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
1000056f:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
10000573:	50                   	push   eax
10000574:	ff 51 38             	call   DWORD PTR [ecx+0x38]
10000577:	83 c4 3c             	add    esp,0x3c
1000057a:	c3                   	ret    
1000057b:	90                   	nop

1000057c <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)>:
1000057c:	57                   	push   edi
1000057d:	56                   	push   esi
1000057e:	53                   	push   ebx
1000057f:	83 ec 30             	sub    esp,0x30
10000582:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10000586:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
1000058a:	8b 7c 24 48          	mov    edi,DWORD PTR [esp+0x48]
1000058e:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10000592:	0f af be 58 01 00 00 	imul   edi,DWORD PTR [esi+0x158]
10000599:	85 c9                	test   ecx,ecx
1000059b:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
1000059f:	0f 8e 18 02 00 00    	jle    100007bd <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x241>
100005a5:	8b 5c 24 54          	mov    ebx,DWORD PTR [esp+0x54]
100005a9:	85 db                	test   ebx,ebx
100005ab:	0f 8e 0c 02 00 00    	jle    100007bd <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x241>
100005b1:	8d 3c 85 00 00 00 00 	lea    edi,[eax*4+0x0]
100005b8:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
100005bc:	0f af 44 24 50       	imul   eax,DWORD PTR [esp+0x50]
100005c1:	03 4c 24 48          	add    ecx,DWORD PTR [esp+0x48]
100005c5:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
100005c9:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
100005cd:	8d 04 82             	lea    eax,[edx+eax*4]
100005d0:	89 4c 24 28          	mov    DWORD PTR [esp+0x28],ecx
100005d4:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100005d8:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
100005dc:	c7 44 24 14 00 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
100005e4:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100005e8:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100005ec:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100005f0:	eb 3f                	jmp    10000631 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xb5>
100005f2:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100005f6:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
100005fa:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100005fe:	8d 59 01             	lea    ebx,[ecx+0x1]
10000601:	8b 00                	mov    eax,DWORD PTR [eax]
10000603:	8d 77 04             	lea    esi,[edi+0x4]
10000606:	ff 37                	push   DWORD PTR [edi]
10000608:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
1000060c:	51                   	push   ecx
1000060d:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
10000611:	ff 50 24             	call   DWORD PTR [eax+0x24]
10000614:	ff 44 24 24          	inc    DWORD PTR [esp+0x24]
10000618:	83 c4 10             	add    esp,0x10
1000061b:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000061f:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
10000623:	89 5c 24 18          	mov    DWORD PTR [esp+0x18],ebx
10000627:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
1000062b:	0f 8e 64 01 00 00    	jle    10000795 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x219>
10000631:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000635:	2b 44 24 14          	sub    eax,DWORD PTR [esp+0x14]
10000639:	c1 f8 03             	sar    eax,0x3
1000063c:	74 b4                	je     100005f2 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x76>
1000063e:	f6 44 24 18 07       	test   BYTE PTR [esp+0x18],0x7
10000643:	75 ad                	jne    100005f2 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x76>
10000645:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000649:	83 f8 64             	cmp    eax,0x64
1000064c:	7e 08                	jle    10000656 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xda>
1000064e:	c7 44 24 10 64 00 00 00 	mov    DWORD PTR [esp+0x10],0x64
10000656:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000065a:	8d 34 c5 00 00 00 00 	lea    esi,[eax*8+0x0]
10000661:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10000665:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
1000066c:	0f 84 52 01 00 00    	je     100007c4 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x248>
10000672:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000676:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
1000067a:	31 ff                	xor    edi,edi
1000067c:	8d 1c 08             	lea    ebx,[eax+ecx*1]
1000067f:	83 44 24 0c 04       	add    DWORD PTR [esp+0xc],0x4
10000684:	8d 04 3b             	lea    eax,[ebx+edi*1]
10000687:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000068b:	47                   	inc    edi
1000068c:	ff 74 24 48          	push   DWORD PTR [esp+0x48]
10000690:	50                   	push   eax
10000691:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
10000694:	e8 fc ff ff ff       	call   10000695 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x119>	10000695: R_386_PC32	monoPixelLookup(int, int, int)
10000699:	83 c4 0c             	add    esp,0xc
1000069c:	88 87 1f 17 00 10    	mov    BYTE PTR [edi+0x1000171f],al	1000069e: R_386_32	.bss
100006a2:	39 f7                	cmp    edi,esi
100006a4:	7c d9                	jl     1000067f <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x103>
100006a6:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
100006aa:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100006ae:	8b 91 64 01 00 00    	mov    edx,DWORD PTR [ecx+0x164]
100006b4:	03 44 24 20          	add    eax,DWORD PTR [esp+0x20]
100006b8:	31 c9                	xor    ecx,ecx
100006ba:	c1 f8 03             	sar    eax,0x3
100006bd:	8d bc 10 00 00 00 c2 	lea    edi,[eax+edx*1-0x3e000000]
100006c4:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100006c8:	80 b8 61 01 00 00 01 	cmp    BYTE PTR [eax+0x161],0x1
100006cf:	19 c0                	sbb    eax,eax
100006d1:	83 e0 03             	and    eax,0x3
100006d4:	40                   	inc    eax
100006d5:	39 c1                	cmp    ecx,eax
100006d7:	0f 8d 9b 00 00 00    	jge    10000778 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x1fc>
100006dd:	51                   	push   ecx
100006de:	be 01 00 00 00       	mov    esi,0x1
100006e3:	89 4c 24 20          	mov    DWORD PTR [esp+0x20],ecx
100006e7:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
100006eb:	e8 fc ff ff ff       	call   100006ec <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x170>	100006ec: R_386_PC32	VGAVideo::setPlane(int)
100006f0:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
100006f4:	58                   	pop    eax
100006f5:	d3 e6                	shl    esi,cl
100006f7:	5a                   	pop    edx
100006f8:	31 c0                	xor    eax,eax
100006fa:	0f b6 14 c5 20 17 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001720]	100006fe: R_386_32	.bss
10000702:	0f b6 1c c5 21 17 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001721]	10000706: R_386_32	.bss
1000070a:	21 f2                	and    edx,esi
1000070c:	21 f3                	and    ebx,esi
1000070e:	01 d2                	add    edx,edx
10000710:	09 d3                	or     ebx,edx
10000712:	0f b6 14 c5 22 17 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001722]	10000716: R_386_32	.bss
1000071a:	01 db                	add    ebx,ebx
1000071c:	21 f2                	and    edx,esi
1000071e:	09 da                	or     edx,ebx
10000720:	0f b6 1c c5 23 17 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001723]	10000724: R_386_32	.bss
10000728:	01 d2                	add    edx,edx
1000072a:	21 f3                	and    ebx,esi
1000072c:	09 d3                	or     ebx,edx
1000072e:	0f b6 14 c5 24 17 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001724]	10000732: R_386_32	.bss
10000736:	01 db                	add    ebx,ebx
10000738:	21 f2                	and    edx,esi
1000073a:	09 da                	or     edx,ebx
1000073c:	0f b6 1c c5 25 17 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001725]	10000740: R_386_32	.bss
10000744:	01 d2                	add    edx,edx
10000746:	21 f3                	and    ebx,esi
10000748:	09 d3                	or     ebx,edx
1000074a:	0f b6 14 c5 26 17 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001726]	1000074e: R_386_32	.bss
10000752:	01 db                	add    ebx,ebx
10000754:	21 f2                	and    edx,esi
10000756:	09 da                	or     edx,ebx
10000758:	0f b6 1c c5 27 17 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001727]	1000075c: R_386_32	.bss
10000760:	01 d2                	add    edx,edx
10000762:	21 f3                	and    ebx,esi
10000764:	09 da                	or     edx,ebx
10000766:	d3 ea                	shr    edx,cl
10000768:	88 14 07             	mov    BYTE PTR [edi+eax*1],dl
1000076b:	40                   	inc    eax
1000076c:	39 44 24 10          	cmp    DWORD PTR [esp+0x10],eax
10000770:	75 88                	jne    100006fa <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x17e>
10000772:	41                   	inc    ecx
10000773:	e9 4c ff ff ff       	jmp    100006c4 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x148>
10000778:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000077c:	c1 e0 03             	shl    eax,0x3
1000077f:	01 44 24 14          	add    DWORD PTR [esp+0x14],eax
10000783:	01 44 24 18          	add    DWORD PTR [esp+0x18],eax
10000787:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000078b:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
1000078f:	0f 8f 9c fe ff ff    	jg     10000631 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xb5>
10000795:	ff 44 24 48          	inc    DWORD PTR [esp+0x48]
10000799:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
1000079d:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
100007a1:	8b bf 58 01 00 00    	mov    edi,DWORD PTR [edi+0x158]
100007a7:	01 4c 24 24          	add    DWORD PTR [esp+0x24],ecx
100007ab:	01 7c 24 20          	add    DWORD PTR [esp+0x20],edi
100007af:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
100007b3:	39 44 24 48          	cmp    DWORD PTR [esp+0x48],eax
100007b7:	0f 85 1b fe ff ff    	jne    100005d8 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x5c>
100007bd:	83 c4 30             	add    esp,0x30
100007c0:	5b                   	pop    ebx
100007c1:	5e                   	pop    esi
100007c2:	5f                   	pop    edi
100007c3:	c3                   	ret    
100007c4:	31 c9                	xor    ecx,ecx
100007c6:	83 44 24 0c 04       	add    DWORD PTR [esp+0xc],0x4
100007cb:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100007cf:	8b 40 fc             	mov    eax,DWORD PTR [eax-0x4]
100007d2:	89 c3                	mov    ebx,eax
100007d4:	89 c2                	mov    edx,eax
100007d6:	c1 fb 15             	sar    ebx,0x15
100007d9:	c1 fa 0a             	sar    edx,0xa
100007dc:	83 e3 07             	and    ebx,0x7
100007df:	83 e2 38             	and    edx,0x38
100007e2:	09 d3                	or     ebx,edx
100007e4:	8d 14 00             	lea    edx,[eax+eax*1]
100007e7:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100007eb:	81 e2 c0 01 00 00    	and    edx,0x1c0
100007f1:	01 c8                	add    eax,ecx
100007f3:	09 da                	or     edx,ebx
100007f5:	83 e0 01             	and    eax,0x1
100007f8:	41                   	inc    ecx
100007f9:	8a 84 50 00 00 00 00 	mov    al,BYTE PTR [eax+edx*2+0x0]	100007fc: R_386_32	dither16Data
10000800:	88 81 1f 17 00 10    	mov    BYTE PTR [ecx+0x1000171f],al	10000802: R_386_32	.bss
10000806:	39 f1                	cmp    ecx,esi
10000808:	7c bc                	jl     100007c6 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x24a>
1000080a:	e9 97 fe ff ff       	jmp    100006a6 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x12a>
1000080f:	90                   	nop

10000810 <VGAVideo::putrect(int, int, int, int, unsigned int)>:
10000810:	57                   	push   edi
10000811:	56                   	push   esi
10000812:	53                   	push   ebx
10000813:	83 ec 40             	sub    esp,0x40
10000816:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
1000081a:	8b 80 64 01 00 00    	mov    eax,DWORD PTR [eax+0x164]
10000820:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000825:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000829:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
1000082d:	c1 f8 15             	sar    eax,0x15
10000830:	83 e0 07             	and    eax,0x7
10000833:	89 c2                	mov    edx,eax
10000835:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10000839:	c1 f8 0a             	sar    eax,0xa
1000083c:	83 e0 38             	and    eax,0x38
1000083f:	09 d0                	or     eax,edx
10000841:	8b 54 24 64          	mov    edx,DWORD PTR [esp+0x64]
10000845:	01 d2                	add    edx,edx
10000847:	81 e2 c0 01 00 00    	and    edx,0x1c0
1000084d:	09 d0                	or     eax,edx
1000084f:	0f b6 bc 00 00 00 00 00 	movzx  edi,BYTE PTR [eax+eax*1+0x0]	10000853: R_386_32	dither16Data
10000857:	0f b6 84 00 01 00 00 00 	movzx  eax,BYTE PTR [eax+eax*1+0x1]	1000085b: R_386_32	dither16Data
1000085f:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
10000863:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000867:	8b 7c 24 60          	mov    edi,DWORD PTR [esp+0x60]
1000086b:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
1000086f:	03 7c 24 58          	add    edi,DWORD PTR [esp+0x58]
10000873:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10000877:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000087b:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
1000087f:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
10000883:	0f 8d ad 00 00 00    	jge    10000936 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x126>
10000889:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
1000088d:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
10000891:	2b 7c 24 54          	sub    edi,DWORD PTR [esp+0x54]
10000895:	8b 74 24 50          	mov    esi,DWORD PTR [esp+0x50]
10000899:	89 7c 24 3c          	mov    DWORD PTR [esp+0x3c],edi
1000089d:	0f af 86 58 01 00 00 	imul   eax,DWORD PTR [esi+0x158]
100008a4:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
100008a8:	c1 f8 03             	sar    eax,0x3
100008ab:	c1 ff 03             	sar    edi,0x3
100008ae:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100008b2:	89 7c 24 38          	mov    DWORD PTR [esp+0x38],edi
100008b6:	74 11                	je     100008c9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xb9>
100008b8:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100008bc:	83 e0 07             	and    eax,0x7
100008bf:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100008c3:	0f 84 ff 01 00 00    	je     10000ac8 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2b8>
100008c9:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
100008cd:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
100008d1:	a8 01                	test   al,0x1
100008d3:	0f 84 da 01 00 00    	je     10000ab3 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2a3>
100008d9:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100008dd:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
100008e1:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100008e5:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100008e9:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
100008ed:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
100008f4:	74 47                	je     1000093d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x12d>
100008f6:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100008fa:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
100008fe:	7d 24                	jge    10000924 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
10000900:	8b 5c 24 58          	mov    ebx,DWORD PTR [esp+0x58]
10000904:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000908:	8b 00                	mov    eax,DWORD PTR [eax]
1000090a:	ff 74 24 64          	push   DWORD PTR [esp+0x64]
1000090e:	53                   	push   ebx
1000090f:	43                   	inc    ebx
10000910:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
10000914:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
10000918:	ff 50 24             	call   DWORD PTR [eax+0x24]
1000091b:	83 c4 10             	add    esp,0x10
1000091e:	39 5c 24 0c          	cmp    DWORD PTR [esp+0xc],ebx
10000922:	75 e0                	jne    10000904 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xf4>
10000924:	ff 44 24 54          	inc    DWORD PTR [esp+0x54]
10000928:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
1000092c:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10000930:	0f 8f 53 ff ff ff    	jg     10000889 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x79>
10000936:	83 c4 40             	add    esp,0x40
10000939:	5b                   	pop    ebx
1000093a:	5e                   	pop    esi
1000093b:	5f                   	pop    edi
1000093c:	c3                   	ret    
1000093d:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000941:	c7 44 24 18 00 00 00 00 	mov    DWORD PTR [esp+0x18],0x0
10000949:	f7 d0                	not    eax
1000094b:	83 e0 07             	and    eax,0x7
1000094e:	89 c7                	mov    edi,eax
10000950:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10000954:	89 f9                	mov    ecx,edi
10000956:	b8 fe ff ff ff       	mov    eax,0xfffffffe
1000095b:	d3 c0                	rol    eax,cl
1000095d:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10000961:	83 ec 08             	sub    esp,0x8
10000964:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10000968:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
1000096c:	e8 fc ff ff ff       	call   1000096d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x15d>	1000096d: R_386_PC32	VGAVideo::setPlane(int)
10000971:	83 c4 10             	add    esp,0x10
10000974:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000978:	39 7c 24 14          	cmp    DWORD PTR [esp+0x14],edi
1000097c:	0f 84 c2 00 00 00    	je     10000a44 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x234>
10000982:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10000986:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
1000098a:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000098e:	d3 fe                	sar    esi,cl
10000990:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
10000994:	83 e6 01             	and    esi,0x1
10000997:	d3 e6                	shl    esi,cl
10000999:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
1000099d:	0f 8d aa 03 00 00    	jge    10000d4d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x53d>
100009a3:	8a 44 24 28          	mov    al,BYTE PTR [esp+0x28]
100009a7:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
100009ab:	89 c7                	mov    edi,eax
100009ad:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
100009b1:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100009b5:	83 c2 02             	add    edx,0x2
100009b8:	8d 1c 08             	lea    ebx,[eax+ecx*1]
100009bb:	89 f8                	mov    eax,edi
100009bd:	22 03                	and    al,BYTE PTR [ebx]
100009bf:	09 f0                	or     eax,esi
100009c1:	88 03                	mov    BYTE PTR [ebx],al
100009c3:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
100009c7:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
100009cd:	89 c3                	mov    ebx,eax
100009cf:	c1 fb 02             	sar    ebx,0x2
100009d2:	01 d9                	add    ecx,ebx
100009d4:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
100009d8:	7f d7                	jg     100009b1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1a1>
100009da:	c1 f8 03             	sar    eax,0x3
100009dd:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
100009e1:	03 44 24 24          	add    eax,DWORD PTR [esp+0x24]
100009e5:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
100009e9:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
100009ed:	d3 fe                	sar    esi,cl
100009ef:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
100009f3:	83 e6 01             	and    esi,0x1
100009f6:	d3 e6                	shl    esi,cl
100009f8:	8d 4f 01             	lea    ecx,[edi+0x1]
100009fb:	83 7c 24 60 01       	cmp    DWORD PTR [esp+0x60],0x1
10000a00:	7e 2c                	jle    10000a2e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x21e>
10000a02:	8a 5c 24 28          	mov    bl,BYTE PTR [esp+0x28]
10000a06:	89 df                	mov    edi,ebx
10000a08:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
10000a0c:	89 fa                	mov    edx,edi
10000a0e:	01 c3                	add    ebx,eax
10000a10:	83 c1 02             	add    ecx,0x2
10000a13:	22 13                	and    dl,BYTE PTR [ebx]
10000a15:	09 f2                	or     edx,esi
10000a17:	88 13                	mov    BYTE PTR [ebx],dl
10000a19:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
10000a1d:	8b 93 58 01 00 00    	mov    edx,DWORD PTR [ebx+0x158]
10000a23:	c1 fa 02             	sar    edx,0x2
10000a26:	01 d0                	add    eax,edx
10000a28:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
10000a2c:	7f da                	jg     10000a08 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1f8>
10000a2e:	ff 44 24 18          	inc    DWORD PTR [esp+0x18]
10000a32:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10000a36:	83 f8 04             	cmp    eax,0x4
10000a39:	0f 85 22 ff ff ff    	jne    10000961 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x151>
10000a3f:	e9 e0 fe ff ff       	jmp    10000924 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
10000a44:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10000a48:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000a4c:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10000a50:	d3 f8                	sar    eax,cl
10000a52:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
10000a56:	83 e0 01             	and    eax,0x1
10000a59:	d3 e0                	shl    eax,cl
10000a5b:	39 7c 24 58          	cmp    DWORD PTR [esp+0x58],edi
10000a5f:	7d cd                	jge    10000a2e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x21e>
10000a61:	89 c7                	mov    edi,eax
10000a63:	0f b6 74 24 28       	movzx  esi,BYTE PTR [esp+0x28]
10000a68:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10000a6c:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10000a70:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000a74:	42                   	inc    edx
10000a75:	8d 1c 08             	lea    ebx,[eax+ecx*1]
10000a78:	89 f0                	mov    eax,esi
10000a7a:	22 03                	and    al,BYTE PTR [ebx]
10000a7c:	88 44 24 1c          	mov    BYTE PTR [esp+0x1c],al
10000a80:	89 f8                	mov    eax,edi
10000a82:	0b 44 24 1c          	or     eax,DWORD PTR [esp+0x1c]
10000a86:	88 03                	mov    BYTE PTR [ebx],al
10000a88:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000a8c:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000a92:	c1 f8 03             	sar    eax,0x3
10000a95:	01 c1                	add    ecx,eax
10000a97:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
10000a9b:	75 d3                	jne    10000a70 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x260>
10000a9d:	ff 44 24 18          	inc    DWORD PTR [esp+0x18]
10000aa1:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10000aa5:	83 f8 04             	cmp    eax,0x4
10000aa8:	0f 85 b3 fe ff ff    	jne    10000961 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x151>
10000aae:	e9 71 fe ff ff       	jmp    10000924 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
10000ab3:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000ab7:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000abb:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000abf:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000ac3:	e9 21 fe ff ff       	jmp    100008e9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xd9>
10000ac8:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000acc:	83 e0 01             	and    eax,0x1
10000acf:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000ad3:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000ad7:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
10000adb:	80 b8 61 01 00 00 01 	cmp    BYTE PTR [eax+0x161],0x1
10000ae2:	19 c0                	sbb    eax,eax
10000ae4:	83 e0 03             	and    eax,0x3
10000ae7:	40                   	inc    eax
10000ae8:	39 c7                	cmp    edi,eax
10000aea:	0f 8d 33 02 00 00    	jge    10000d23 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x513>
10000af0:	57                   	push   edi
10000af1:	ff 74 24 54          	push   DWORD PTR [esp+0x54]
10000af5:	e8 fc ff ff ff       	call   10000af6 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2e6>	10000af6: R_386_PC32	VGAVideo::setPlane(int)
10000afa:	5a                   	pop    edx
10000afb:	59                   	pop    ecx
10000afc:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000b00:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
10000b07:	0f 84 59 01 00 00    	je     10000c66 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x456>
10000b0d:	89 f9                	mov    ecx,edi
10000b0f:	b8 01 00 00 00       	mov    eax,0x1
10000b14:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10000b18:	d3 e0                	shl    eax,cl
10000b1a:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000b1e:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10000b22:	01 c7                	add    edi,eax
10000b24:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10000b28:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
10000b2c:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000b30:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10000b34:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
10000b38:	0f 8d 0d 01 00 00    	jge    10000c4b <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
10000b3e:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000b42:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
10000b46:	40                   	inc    eax
10000b47:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000b4b:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10000b4f:	85 c0                	test   eax,eax
10000b51:	0f 85 9e 00 00 00    	jne    10000bf5 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3e5>
10000b57:	eb 2a                	jmp    10000b83 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x373>
10000b59:	85 c0                	test   eax,eax
10000b5b:	b9 aa 00 00 00       	mov    ecx,0xaa
10000b60:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000b64:	74 6d                	je     10000bd3 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3c3>
10000b66:	88 0c 18             	mov    BYTE PTR [eax+ebx*1],cl
10000b69:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000b6d:	46                   	inc    esi
10000b6e:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000b74:	c1 f8 03             	sar    eax,0x3
10000b77:	01 c3                	add    ebx,eax
10000b79:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
10000b7d:	0f 84 c8 00 00 00    	je     10000c4b <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
10000b83:	56                   	push   esi
10000b84:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
10000b88:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000b8c:	e8 fc ff ff ff       	call   10000b8d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x37d>	10000b8d: R_386_PC32	monoPixelLookup(int, int, int)
10000b91:	83 c4 0c             	add    esp,0xc
10000b94:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000b98:	56                   	push   esi
10000b99:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000b9d:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000ba1:	e8 fc ff ff ff       	call   10000ba2 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x392>	10000ba2: R_386_PC32	monoPixelLookup(int, int, int)
10000ba6:	83 c4 0c             	add    esp,0xc
10000ba9:	89 c7                	mov    edi,eax
10000bab:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10000baf:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000bb3:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000bb7:	21 ca                	and    edx,ecx
10000bb9:	21 f9                	and    ecx,edi
10000bbb:	89 d0                	mov    eax,edx
10000bbd:	89 ca                	mov    edx,ecx
10000bbf:	74 98                	je     10000b59 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x349>
10000bc1:	85 c0                	test   eax,eax
10000bc3:	b9 ff 00 00 00       	mov    ecx,0xff
10000bc8:	ba 55 00 00 00       	mov    edx,0x55
10000bcd:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000bd1:	75 93                	jne    10000b66 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x356>
10000bd3:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
10000bd6:	eb 91                	jmp    10000b69 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x359>
10000bd8:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000bdc:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
10000bdf:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000be3:	46                   	inc    esi
10000be4:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000bea:	c1 f8 03             	sar    eax,0x3
10000bed:	01 c3                	add    ebx,eax
10000bef:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
10000bf3:	74 56                	je     10000c4b <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
10000bf5:	56                   	push   esi
10000bf6:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
10000bfa:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000bfe:	e8 fc ff ff ff       	call   10000bff <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3ef>	10000bff: R_386_PC32	monoPixelLookup(int, int, int)
10000c03:	83 c4 0c             	add    esp,0xc
10000c06:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000c0a:	56                   	push   esi
10000c0b:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000c0f:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000c13:	e8 fc ff ff ff       	call   10000c14 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x404>	10000c14: R_386_PC32	monoPixelLookup(int, int, int)
10000c18:	83 c4 0c             	add    esp,0xc
10000c1b:	89 c7                	mov    edi,eax
10000c1d:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10000c21:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000c25:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000c29:	21 c8                	and    eax,ecx
10000c2b:	83 f8 01             	cmp    eax,0x1
10000c2e:	19 d2                	sbb    edx,edx
10000c30:	f7 d2                	not    edx
10000c32:	83 e2 55             	and    edx,0x55
10000c35:	83 f8 01             	cmp    eax,0x1
10000c38:	19 c0                	sbb    eax,eax
10000c3a:	83 e0 ab             	and    eax,0xffffffab
10000c3d:	48                   	dec    eax
10000c3e:	85 cf                	test   edi,ecx
10000c40:	74 96                	je     10000bd8 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3c8>
10000c42:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10000c46:	88 04 1f             	mov    BYTE PTR [edi+ebx*1],al
10000c49:	eb 94                	jmp    10000bdf <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3cf>
10000c4b:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
10000c4f:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10000c53:	39 44 24 28          	cmp    DWORD PTR [esp+0x28],eax
10000c57:	0f 85 cf fe ff ff    	jne    10000b2c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x31c>
10000c5d:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10000c61:	e9 6d fe ff ff       	jmp    10000ad3 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2c3>
10000c66:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000c6a:	8a 4c 24 2c          	mov    cl,BYTE PTR [esp+0x2c]
10000c6e:	d3 f8                	sar    eax,cl
10000c70:	a8 01                	test   al,0x1
10000c72:	0f 84 92 00 00 00    	je     10000d0a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4fa>
10000c78:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000c7c:	d3 f8                	sar    eax,cl
10000c7e:	83 e0 01             	and    eax,0x1
10000c81:	83 f8 01             	cmp    eax,0x1
10000c84:	19 ff                	sbb    edi,edi
10000c86:	89 f9                	mov    ecx,edi
10000c88:	89 f8                	mov    eax,edi
10000c8a:	83 e1 56             	and    ecx,0x56
10000c8d:	83 e0 ab             	and    eax,0xffffffab
10000c90:	49                   	dec    ecx
10000c91:	05 ff 00 00 00       	add    eax,0xff
10000c96:	88 4c 24 1c          	mov    BYTE PTR [esp+0x1c],cl
10000c9a:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000c9e:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000ca2:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
10000ca6:	7d b5                	jge    10000c5d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x44d>
10000ca8:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10000cac:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10000cb0:	89 de                	mov    esi,ebx
10000cb2:	01 df                	add    edi,ebx
10000cb4:	8b 5c 24 54          	mov    ebx,DWORD PTR [esp+0x54]
10000cb8:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10000cbc:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
10000cc0:	01 df                	add    edi,ebx
10000cc2:	8d 1c 03             	lea    ebx,[ebx+eax*1]
10000cc5:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
10000cc9:	89 f2                	mov    edx,esi
10000ccb:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000ccf:	eb 1b                	jmp    10000cec <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4dc>
10000cd1:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10000cd5:	88 0c 17             	mov    BYTE PTR [edi+edx*1],cl
10000cd8:	40                   	inc    eax
10000cd9:	8b 7c 24 50          	mov    edi,DWORD PTR [esp+0x50]
10000cdd:	8b 8f 58 01 00 00    	mov    ecx,DWORD PTR [edi+0x158]
10000ce3:	c1 f9 03             	sar    ecx,0x3
10000ce6:	01 ca                	add    edx,ecx
10000ce8:	39 c3                	cmp    ebx,eax
10000cea:	74 0e                	je     10000cfa <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4ea>
10000cec:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10000cf0:	a8 01                	test   al,0x1
10000cf2:	74 dd                	je     10000cd1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4c1>
10000cf4:	8a 4c 24 1c          	mov    cl,BYTE PTR [esp+0x1c]
10000cf8:	eb db                	jmp    10000cd5 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4c5>
10000cfa:	46                   	inc    esi
10000cfb:	39 74 24 20          	cmp    DWORD PTR [esp+0x20],esi
10000cff:	75 c8                	jne    10000cc9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4b9>
10000d01:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10000d05:	e9 c9 fd ff ff       	jmp    10000ad3 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2c3>
10000d0a:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000d0e:	d3 fe                	sar    esi,cl
10000d10:	83 e6 01             	and    esi,0x1
10000d13:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
10000d17:	75 43                	jne    10000d5c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x54c>
10000d19:	c6 44 24 1c 00       	mov    BYTE PTR [esp+0x1c],0x0
10000d1e:	e9 7b ff ff ff       	jmp    10000c9e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x48e>
10000d23:	8b 7c 24 54          	mov    edi,DWORD PTR [esp+0x54]
10000d27:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10000d2b:	83 e0 f8             	and    eax,0xfffffff8
10000d2e:	8d 44 07 ff          	lea    eax,[edi+eax*1-0x1]
10000d32:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10000d36:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10000d3a:	ff 44 24 54          	inc    DWORD PTR [esp+0x54]
10000d3e:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10000d42:	0f 8f 41 fb ff ff    	jg     10000889 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x79>
10000d48:	e9 e9 fb ff ff       	jmp    10000936 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x126>
10000d4d:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000d51:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000d57:	e9 7e fc ff ff       	jmp    100009da <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1ca>
10000d5c:	c6 44 24 1c aa       	mov    BYTE PTR [esp+0x1c],0xaa
10000d61:	c7 44 24 18 55 00 00 00 	mov    DWORD PTR [esp+0x18],0x55
10000d69:	e9 30 ff ff ff       	jmp    10000c9e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x48e>

10000d6e <VGAVideo::readPixelApprox(int, int)>:
10000d6e:	57                   	push   edi
10000d6f:	b9 10 00 00 00       	mov    ecx,0x10
10000d74:	56                   	push   esi
10000d75:	be a0 11 00 10       	mov    esi,0x100011a0	10000d76: R_386_32	.text
10000d7a:	53                   	push   ebx
10000d7b:	83 ec 48             	sub    esp,0x48
10000d7e:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10000d82:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10000d86:	8d 7c 24 08          	lea    edi,[esp+0x8]
10000d8a:	8b 5c 24 60          	mov    ebx,DWORD PTR [esp+0x60]
10000d8e:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10000d90:	0f af 9a 58 01 00 00 	imul   ebx,DWORD PTR [edx+0x158]
10000d97:	8b b2 64 01 00 00    	mov    esi,DWORD PTR [edx+0x164]
10000d9d:	01 c3                	add    ebx,eax
10000d9f:	81 ee 00 00 00 3e    	sub    esi,0x3e000000
10000da5:	f7 d0                	not    eax
10000da7:	c1 fb 03             	sar    ebx,0x3
10000daa:	89 c1                	mov    ecx,eax
10000dac:	31 ff                	xor    edi,edi
10000dae:	83 e1 07             	and    ecx,0x7
10000db1:	b8 fe ff ff ff       	mov    eax,0xfffffffe
10000db6:	d3 c0                	rol    eax,cl
10000db8:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000dbc:	31 c0                	xor    eax,eax
10000dbe:	80 ba 61 01 00 00 00 	cmp    BYTE PTR [edx+0x161],0x0
10000dc5:	74 39                	je     10000e00 <VGAVideo::readPixelApprox(int, int)+0x92>
10000dc7:	85 ff                	test   edi,edi
10000dc9:	75 3a                	jne    10000e05 <VGAVideo::readPixelApprox(int, int)+0x97>
10000dcb:	89 04 24             	mov    DWORD PTR [esp],eax
10000dce:	57                   	push   edi
10000dcf:	52                   	push   edx
10000dd0:	89 54 24 60          	mov    DWORD PTR [esp+0x60],edx
10000dd4:	e8 fc ff ff ff       	call   10000dd5 <VGAVideo::readPixelApprox(int, int)+0x67>	10000dd5: R_386_PC32	VGAVideo::setPlane(int)
10000dd9:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000ddd:	0f b6 0c 1e          	movzx  ecx,BYTE PTR [esi+ebx*1]
10000de1:	01 c0                	add    eax,eax
10000de3:	83 c4 08             	add    esp,0x8
10000de6:	85 4c 24 04          	test   DWORD PTR [esp+0x4],ecx
10000dea:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10000dee:	0f 95 c1             	setne  cl
10000df1:	47                   	inc    edi
10000df2:	0f b6 c9             	movzx  ecx,cl
10000df5:	09 c8                	or     eax,ecx
10000df7:	80 ba 61 01 00 00 00 	cmp    BYTE PTR [edx+0x161],0x0
10000dfe:	75 c7                	jne    10000dc7 <VGAVideo::readPixelApprox(int, int)+0x59>
10000e00:	83 ff 04             	cmp    edi,0x4
10000e03:	75 c6                	jne    10000dcb <VGAVideo::readPixelApprox(int, int)+0x5d>
10000e05:	8b 44 84 08          	mov    eax,DWORD PTR [esp+eax*4+0x8]
10000e09:	83 c4 48             	add    esp,0x48
10000e0c:	5b                   	pop    ebx
10000e0d:	5e                   	pop    esi
10000e0e:	5f                   	pop    edi
10000e0f:	c3                   	ret    

10000e10 <VGAVideo::putpixel(int, int, unsigned int)>:
10000e10:	57                   	push   edi
10000e11:	56                   	push   esi
10000e12:	53                   	push   ebx
10000e13:	83 ec 14             	sub    esp,0x14
10000e16:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
10000e1a:	8b 5c 24 28          	mov    ebx,DWORD PTR [esp+0x28]
10000e1e:	8b 86 64 01 00 00    	mov    eax,DWORD PTR [esi+0x164]
10000e24:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
10000e2a:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000e2f:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000e33:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000e37:	89 d8                	mov    eax,ebx
10000e39:	f7 d0                	not    eax
10000e3b:	83 e0 07             	and    eax,0x7
10000e3e:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000e42:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000e46:	0f af 86 58 01 00 00 	imul   eax,DWORD PTR [esi+0x158]
10000e4d:	01 d8                	add    eax,ebx
10000e4f:	c1 f8 03             	sar    eax,0x3
10000e52:	84 d2                	test   dl,dl
10000e54:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000e58:	74 75                	je     10000ecf <VGAVideo::putpixel(int, int, unsigned int)+0xbf>
10000e5a:	88 54 24 10          	mov    BYTE PTR [esp+0x10],dl
10000e5e:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000e62:	53                   	push   ebx
10000e63:	57                   	push   edi
10000e64:	e8 fc ff ff ff       	call   10000e65 <VGAVideo::putpixel(int, int, unsigned int)+0x55>	10000e65: R_386_PC32	monoPixelLookup(int, int, int)
10000e69:	83 c4 0c             	add    esp,0xc
10000e6c:	89 04 24             	mov    DWORD PTR [esp],eax
10000e6f:	8a 54 24 10          	mov    dl,BYTE PTR [esp+0x10]
10000e73:	b8 fe ff ff ff       	mov    eax,0xfffffffe
10000e78:	8a 4c 24 04          	mov    cl,BYTE PTR [esp+0x4]
10000e7c:	31 db                	xor    ebx,ebx
10000e7e:	d3 c0                	rol    eax,cl
10000e80:	84 d2                	test   dl,dl
10000e82:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000e86:	74 3b                	je     10000ec3 <VGAVideo::putpixel(int, int, unsigned int)+0xb3>
10000e88:	85 db                	test   ebx,ebx
10000e8a:	75 3c                	jne    10000ec8 <VGAVideo::putpixel(int, int, unsigned int)+0xb8>
10000e8c:	53                   	push   ebx
10000e8d:	43                   	inc    ebx
10000e8e:	56                   	push   esi
10000e8f:	e8 fc ff ff ff       	call   10000e90 <VGAVideo::putpixel(int, int, unsigned int)+0x80>	10000e90: R_386_PC32	VGAVideo::setPlane(int)
10000e94:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000e98:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000e9c:	8a 44 24 18          	mov    al,BYTE PTR [esp+0x18]
10000ea0:	03 7c 24 14          	add    edi,DWORD PTR [esp+0x14]
10000ea4:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10000ea8:	22 07                	and    al,BYTE PTR [edi]
10000eaa:	d1 7c 24 08          	sar    DWORD PTR [esp+0x8],1
10000eae:	83 e2 01             	and    edx,0x1
10000eb1:	d3 e2                	shl    edx,cl
10000eb3:	09 d0                	or     eax,edx
10000eb5:	88 07                	mov    BYTE PTR [edi],al
10000eb7:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
10000ebd:	58                   	pop    eax
10000ebe:	84 d2                	test   dl,dl
10000ec0:	59                   	pop    ecx
10000ec1:	75 c5                	jne    10000e88 <VGAVideo::putpixel(int, int, unsigned int)+0x78>
10000ec3:	83 fb 04             	cmp    ebx,0x4
10000ec6:	75 c4                	jne    10000e8c <VGAVideo::putpixel(int, int, unsigned int)+0x7c>
10000ec8:	83 c4 14             	add    esp,0x14
10000ecb:	5b                   	pop    ebx
10000ecc:	5e                   	pop    esi
10000ecd:	5f                   	pop    edi
10000ece:	c3                   	ret    
10000ecf:	89 f9                	mov    ecx,edi
10000ed1:	89 f8                	mov    eax,edi
10000ed3:	c1 f9 15             	sar    ecx,0x15
10000ed6:	c1 f8 0a             	sar    eax,0xa
10000ed9:	83 e1 07             	and    ecx,0x7
10000edc:	83 e0 38             	and    eax,0x38
10000edf:	09 c1                	or     ecx,eax
10000ee1:	8d 04 3f             	lea    eax,[edi+edi*1]
10000ee4:	25 c0 01 00 00       	and    eax,0x1c0
10000ee9:	09 c8                	or     eax,ecx
10000eeb:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
10000eef:	01 d9                	add    ecx,ebx
10000ef1:	83 e1 01             	and    ecx,0x1
10000ef4:	0f b6 84 41 00 00 00 00 	movzx  eax,BYTE PTR [ecx+eax*2+0x0]	10000ef8: R_386_32	dither16Data
10000efc:	89 04 24             	mov    DWORD PTR [esp],eax
10000eff:	e9 6f ff ff ff       	jmp    10000e73 <VGAVideo::putpixel(int, int, unsigned int)+0x63>

10000f04 <VGAVideo::drawCursor(int, int, unsigned int*, int)>:
10000f04:	57                   	push   edi
10000f05:	56                   	push   esi
10000f06:	53                   	push   ebx
10000f07:	83 ec 30             	sub    esp,0x30
10000f0a:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000f0e:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
10000f12:	83 f8 01             	cmp    eax,0x1
10000f15:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
10000f1d:	19 db                	sbb    ebx,ebx
10000f1f:	f7 d3                	not    ebx
10000f21:	83 e3 0f             	and    ebx,0xf
10000f24:	83 f8 01             	cmp    eax,0x1
10000f27:	89 5c 24 24          	mov    DWORD PTR [esp+0x24],ebx
10000f2b:	19 c0                	sbb    eax,eax
10000f2d:	83 e0 0f             	and    eax,0xf
10000f30:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10000f34:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10000f38:	83 c0 20             	add    eax,0x20
10000f3b:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10000f3f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000f43:	56                   	push   esi
10000f44:	e8 fc ff ff ff       	call   10000f45 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x41>	10000f45: R_386_PC32	VGAVideo::setPlane(int)
10000f49:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000f4d:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000f51:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000f55:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10000f59:	58                   	pop    eax
10000f5a:	5a                   	pop    edx
10000f5b:	eb 17                	jmp    10000f74 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x70>
10000f5d:	ff 44 24 0c          	inc    DWORD PTR [esp+0xc]
10000f61:	83 44 24 1c 04       	add    DWORD PTR [esp+0x1c],0x4
10000f66:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000f6a:	39 44 24 20          	cmp    DWORD PTR [esp+0x20],eax
10000f6e:	0f 84 c7 00 00 00    	je     1000103b <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x137>
10000f74:	83 ec 0c             	sub    esp,0xc
10000f77:	56                   	push   esi
10000f78:	e8 fc ff ff ff       	call   10000f79 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x75>	10000f79: R_386_PC32	Video::getHeight()
10000f7d:	83 c4 10             	add    esp,0x10
10000f80:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
10000f84:	0f 8d b1 00 00 00    	jge    1000103b <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x137>
10000f8a:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10000f8e:	8b 10                	mov    edx,DWORD PTR [eax]
10000f90:	8b 80 80 00 00 00    	mov    eax,DWORD PTR [eax+0x80]
10000f96:	89 54 24 14          	mov    DWORD PTR [esp+0x14],edx
10000f9a:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000f9e:	85 d2                	test   edx,edx
10000fa0:	75 04                	jne    10000fa6 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0xa2>
10000fa2:	85 c0                	test   eax,eax
10000fa4:	74 b7                	je     10000f5d <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x59>
10000fa6:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10000faa:	8b 5c 24 44          	mov    ebx,DWORD PTR [esp+0x44]
10000fae:	83 c0 20             	add    eax,0x20
10000fb1:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000fb5:	89 df                	mov    edi,ebx
10000fb7:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000fbb:	2b 7c 24 44          	sub    edi,DWORD PTR [esp+0x44]
10000fbf:	0b 44 24 10          	or     eax,DWORD PTR [esp+0x10]
10000fc3:	74 98                	je     10000f5d <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x59>
10000fc5:	83 ec 0c             	sub    esp,0xc
10000fc8:	56                   	push   esi
10000fc9:	e8 fc ff ff ff       	call   10000fca <VGAVideo::drawCursor(int, int, unsigned int*, int)+0xc6>	10000fca: R_386_PC32	Video::getWidth()
10000fce:	83 c4 10             	add    esp,0x10
10000fd1:	39 d8                	cmp    eax,ebx
10000fd3:	7e 88                	jle    10000f5d <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x59>
10000fd5:	f6 44 24 10 01       	test   BYTE PTR [esp+0x10],0x1
10000fda:	75 59                	jne    10001035 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x131>
10000fdc:	f6 44 24 14 01       	test   BYTE PTR [esp+0x14],0x1
10000fe1:	74 3e                	je     10001021 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x11d>
10000fe3:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10000fe7:	89 d9                	mov    ecx,ebx
10000fe9:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000fed:	f7 d1                	not    ecx
10000fef:	0f af 86 58 01 00 00 	imul   eax,DWORD PTR [esi+0x158]
10000ff6:	83 e1 07             	and    ecx,0x7
10000ff9:	01 f8                	add    eax,edi
10000ffb:	83 e2 01             	and    edx,0x1
10000ffe:	8b be 64 01 00 00    	mov    edi,DWORD PTR [esi+0x164]
10001004:	03 44 24 44          	add    eax,DWORD PTR [esp+0x44]
10001008:	d3 e2                	shl    edx,cl
1000100a:	c1 f8 03             	sar    eax,0x3
1000100d:	8d bc 07 00 00 00 c2 	lea    edi,[edi+eax*1-0x3e000000]
10001014:	b8 fe ff ff ff       	mov    eax,0xfffffffe
10001019:	d3 c0                	rol    eax,cl
1000101b:	22 07                	and    al,BYTE PTR [edi]
1000101d:	09 d0                	or     eax,edx
1000101f:	88 07                	mov    BYTE PTR [edi],al
10001021:	d1 6c 24 10          	shr    DWORD PTR [esp+0x10],1
10001025:	d1 6c 24 14          	shr    DWORD PTR [esp+0x14],1
10001029:	43                   	inc    ebx
1000102a:	39 5c 24 18          	cmp    DWORD PTR [esp+0x18],ebx
1000102e:	75 85                	jne    10000fb5 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0xb1>
10001030:	e9 28 ff ff ff       	jmp    10000f5d <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x59>
10001035:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
10001039:	eb ac                	jmp    10000fe7 <VGAVideo::drawCursor(int, int, unsigned int*, int)+0xe3>
1000103b:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
1000103f:	d1 6c 24 28          	shr    DWORD PTR [esp+0x28],1
10001043:	d1 6c 24 24          	shr    DWORD PTR [esp+0x24],1
10001047:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
1000104b:	83 f8 04             	cmp    eax,0x4
1000104e:	0f 85 eb fe ff ff    	jne    10000f3f <VGAVideo::drawCursor(int, int, unsigned int*, int)+0x3b>
10001054:	83 c4 30             	add    esp,0x30
10001057:	5b                   	pop    ebx
10001058:	5e                   	pop    esi
10001059:	5f                   	pop    edi
1000105a:	c3                   	ret    
1000105b:	90                   	nop

1000105c <VGAVideo::~VGAVideo()>:
1000105c:	55                   	push   ebp
1000105d:	89 e5                	mov    ebp,esp
1000105f:	83 ec 08             	sub    esp,0x8
10001062:	ba 08 00 00 00       	mov    edx,0x8	10001063: R_386_32	vtable for VGAVideo
10001067:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000106a:	89 10                	mov    DWORD PTR [eax],edx
1000106c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000106f:	83 ec 0c             	sub    esp,0xc
10001072:	50                   	push   eax
10001073:	e8 fc ff ff ff       	call   10001074 <VGAVideo::~VGAVideo()+0x18>	10001074: R_386_PC32	Video::~Video()
10001078:	83 c4 10             	add    esp,0x10
1000107b:	90                   	nop
1000107c:	c9                   	leave  
1000107d:	c3                   	ret    

1000107e <VGAVideo::~VGAVideo()>:
1000107e:	55                   	push   ebp
1000107f:	89 e5                	mov    ebp,esp
10001081:	83 ec 08             	sub    esp,0x8
10001084:	83 ec 0c             	sub    esp,0xc
10001087:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000108a:	e8 fc ff ff ff       	call   1000108b <VGAVideo::~VGAVideo()+0xd>	1000108b: R_386_PC32	VGAVideo::~VGAVideo()
1000108f:	83 c4 10             	add    esp,0x10
10001092:	83 ec 08             	sub    esp,0x8
10001095:	68 6c 01 00 00       	push   0x16c
1000109a:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000109d:	e8 fc ff ff ff       	call   1000109e <VGAVideo::~VGAVideo()+0x20>	1000109e: R_386_PC32	operator delete(void*, unsigned long)
100010a2:	83 c4 10             	add    esp,0x10
100010a5:	c9                   	leave  
100010a6:	c3                   	ret    
100010a7:	66 90                	xchg   ax,ax
100010a9:	66 90                	xchg   ax,ax
100010ab:	66 90                	xchg   ax,ax
100010ad:	66 90                	xchg   ax,ax
100010af:	66 90                	xchg   ax,ax
100010b1:	66 90                	xchg   ax,ax
100010b3:	66 90                	xchg   ax,ax
100010b5:	66 90                	xchg   ax,ax
100010b7:	66 90                	xchg   ax,ax
100010b9:	66 90                	xchg   ax,ax
100010bb:	66 90                	xchg   ax,ax
100010bd:	66 90                	xchg   ax,ax
100010bf:	90                   	nop

100010c0 <PHYS_RAM_TABLE_SIZE>:
100010c0:	13 05 00 00                                         ....

100010c4 <PHYS_HIGHEST_UNUSED_ADDRESS>:
100010c4:	24 05 00 00                                         $...

100010c8 <PHYS_RAM_TABLE>:
100010c8:	00 06 00 00                                         ....

100010cc <PHYS_DMA_MEMORY_1>:
100010cc:	00 00 01 00                                         ....

100010d0 <PHYS_PHYS_PAGE_BITMAP>:
100010d0:	00 00 02 00                                         ....

100010d4 <PHYS_VIRT_PAGE_BITMAP>:
100010d4:	00 00 04 00                                         ....

100010d8 <PHYS_DMA_MEMORY_2>:
100010d8:	00 00 06 00                                         ....

100010dc <PHYS_ALLOCED_VIRT_PAGES>:
100010dc:	00 00 10 00                                         ....

100010e0 <PHYS_KRNL_PAGE_DIRECTORY>:
100010e0:	00 10 00 00                                         ....

100010e4 <VIRT_KERNEL_BASE>:
100010e4:	00 00 00 c0                                         ....

100010e8 <VIRT_LOW_MEGS>:
100010e8:	00 00 00 c2                                         ....

100010ec <VIRT_CPU_SPECIFIC>:
100010ec:	00 00 40 c2                                         ..@.

100010f0 <VIRT_RECURSIVE_SPOT_1>:
100010f0:	00 00 80 c2                                         ....

100010f4 <VIRT_RECURSIVE_SPOT_2>:
100010f4:	00 00 c0 c2                                         ....

100010f8 <VIRT_DMA_MEMORY_1>:
100010f8:	00 00 01 c2                                         ....

100010fc <SIZE_DMA_MEMORY_1>:
100010fc:	00 00 01 00                                         ....

10001100 <VIRT_KRNL_PAGE_DIRECTORY>:
10001100:	00 10 00 c2                                         ....

10001104 <VIRT_PHYS_PAGE_BITMAP>:
10001104:	00 00 02 c2                                         ....

10001108 <SIZE_PHYS_PAGE_BITMAP>:
10001108:	00 00 02 00                                         ....

1000110c <VIRT_VIRT_PAGE_BITMAP>:
1000110c:	00 00 04 c2                                         ....

10001110 <SIZE_VIRT_PAGE_BITMAP>:
10001110:	00 80 00 00                                         ....

10001114 <VIRT_RAM_TABLE>:
10001114:	00 06 00 c2                                         ....

10001118 <VIRT_RAM_TABLE_SIZE>:
10001118:	13 05 00 c2                                         ....

1000111c <VIRT_HIGHEST_UNUSED_ADDRESS>:
1000111c:	24 05 00 c2                                         $...

10001120 <SIZE_APP_STACK_USER>:
10001120:	00 00 18 00                                         ....

10001124 <SIZE_APP_STACK_KRNL>:
10001124:	00 00 08 00                                         ....

10001128 <SIZE_APP_STACK_TOTAL>:
10001128:	00 00 20 00                                         .. .

1000112c <VIRT_APP_DATA>:
1000112c:	00 00 00 10                                         ....

10001130 <VIRT_APP_STACK_USER_TOP>:
10001130:	00 00 00 02                                         ....

10001134 <VIRT_APP_STACK_KRNL_TOP>:
10001134:	00 00 e8 01                                         ....

10001138 <VIRT_HEAP_MIN>:
10001138:	00 00 00 c8                                         ....

1000113c <VIRT_HEAP_MAX>:
1000113c:	ff ff ff ef                                         ....

10001140 <VIRT_SBRK_MIN>:
10001140:	00 00 00 f0                                         ....

10001144 <VIRT_SBRK_MAX>:
10001144:	00 00 c0 ff                                         ....

10001148 <VIRT_ALLOCED_VIRT_PAGES>:
10001148:	00 00 10 c2                                         ....

1000114c <VIRT_ACPI_DRIVER>:
1000114c:	00 40 48 c2                                         .@H.

10001150 <TERMINAL_KEYBUFFER_IN_SIZE>:
10001150:	80 00 00 00                                         ....

10001154 <TERMINAL_KEYBUFFER_OUT_SIZE>:
10001154:	80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
10001164:	00 80 00 80 00 00 80 80 80 00 00 80 00 80 80 80     ................
10001174:	00 c8 c8 c8 80 80 80 00 00 ff 00 ff 00 00 ff ff     ................
10001184:	ff 00 00 ff 00 ff ff ff 00 ff ff ff 00 00 00 00     ................
	...
100011a4:	80 00 00 00 00 80 00 00 80 80 00 00 00 00 80 00     ................
100011b4:	80 00 80 00 00 80 80 00 c8 c8 c8 00 80 80 80 00     ................
100011c4:	ff 00 00 00 00 ff 00 00 ff ff 00 00 00 00 ff 00     ................
100011d4:	ff 00 ff 00 00 ff ff 00 ff ff ff 00 56 47 41 20     ............VGA 
100011e4:	44 69 73 70 6c 61 79 00 43 3a 2f 42 61 6e 61 6e     Display.C:/Banan
100011f4:	61 2f 53 79 73 74 65 6d 2f 56 47 41 2e 43 4f 4d     a/System/VGA.COM
10001204:	00 53 65 74 20 74 6f 20 76 69 64 65 6f 20 6d 6f     .Set to video mo
10001214:	64 65 20 25 64 0a 00 90                             de %d...

1000121c <vtable for VGAVideo>:
	...
	10001224: R_386_32	VGAVideo::~VGAVideo()
	10001228: R_386_32	VGAVideo::~VGAVideo()
	1000122c: R_386_32	VGAVideo::open(int, int, void*)
	10001230: R_386_32	VGAVideo::close(int, int, void*)
	10001234: R_386_32	Device::hibernate()
	10001238: R_386_32	Device::wake()
	1000123c: R_386_32	Device::detect()
	10001240: R_386_32	Device::disableLegacy()
	10001244: R_386_32	Device::powerSaving(PowerSavingLevel)
	10001248: R_386_32	VGAVideo::putpixel(int, int, unsigned int)
	1000124c: R_386_32	VGAVideo::putrect(int, int, int, int, unsigned int)
	10001250: R_386_32	Video::putTGA(int, int, unsigned char*, int)
	10001254: R_386_32	VGAVideo::drawCursor(int, int, unsigned int*, int)
	10001258: R_386_32	VGAVideo::readPixelApprox(int, int)
	1000125c: R_386_32	VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)
	10001260: R_386_32	VGAVideo::blit(unsigned int*, int, int, int, int)
	10001264: R_386_32	Video::clearScreen(unsigned int)
