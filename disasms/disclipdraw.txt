
packages/banana/32/0001/clipdraw.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <NiBegin(void*)>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	83 ec 0c             	sub    esp,0xc
10000009:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000000c:	e8 fc ff ff ff       	call   1000000d <NiBegin(void*)+0xd>	1000000d: R_386_PC32	NiMain(void*)
10000011:	83 c4 10             	add    esp,0x10
10000014:	90                   	nop
10000015:	c9                   	leave  
10000016:	c3                   	ret    

10000017 <kernelMouseHandler(int, int, int, int)>:
10000017:	55                   	push   ebp
10000018:	89 e5                	mov    ebp,esp
1000001a:	83 ec 18             	sub    esp,0x18
1000001d:	a1 00 00 00 00       	mov    eax,ds:0x0	1000001e: R_386_32	screen
10000022:	83 ec 08             	sub    esp,0x8
10000025:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10000028:	6a 00                	push   0x0
1000002a:	6a 00                	push   0x0
1000002c:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000002f:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000032:	50                   	push   eax
10000033:	e8 fc ff ff ff       	call   10000034 <kernelMouseHandler(int, int, int, int)+0x1d>	10000034: R_386_PC32	handleMouse(Video*, int, int, int, int, int)
10000038:	83 c4 20             	add    esp,0x20
1000003b:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000003e:	80 7d f7 00          	cmp    BYTE PTR [ebp-0x9],0x0
10000042:	74 19                	je     1000005d <kernelMouseHandler(int, int, int, int)+0x46>
10000044:	a1 00 00 00 00       	mov    eax,ds:0x0	10000045: R_386_32	desktopWindow
10000049:	89 c2                	mov    edx,eax
1000004b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000004c: R_386_32	screen
10000050:	83 ec 08             	sub    esp,0x8
10000053:	50                   	push   eax
10000054:	52                   	push   edx
10000055:	e8 fc ff ff ff       	call   10000056 <kernelMouseHandler(int, int, int, int)+0x3f>	10000056: R_386_PC32	NFrame::repaint(Video*)
1000005a:	83 c4 10             	add    esp,0x10
1000005d:	90                   	nop
1000005e:	c9                   	leave  
1000005f:	c3                   	ret    

10000060 <drawVGAChar(int, int, int, int, int)>:
10000060:	55                   	push   ebp
10000061:	89 e5                	mov    ebp,esp
10000063:	57                   	push   edi
10000064:	56                   	push   esi
10000065:	53                   	push   ebx
10000066:	83 ec 1c             	sub    esp,0x1c
10000069:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10000070:	83 7d e4 0f          	cmp    DWORD PTR [ebp-0x1c],0xf
10000074:	7f 76                	jg     100000ec <drawVGAChar(int, int, int, int, int)+0x8c>
10000076:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000079:	c1 e0 04             	shl    eax,0x4
1000007c:	89 c2                	mov    edx,eax
1000007e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000081:	01 d0                	add    eax,edx
10000083:	8a 80 00 00 00 00    	mov    al,BYTE PTR [eax+0x0]	10000085: R_386_32	cp
10000089:	88 45 e3             	mov    BYTE PTR [ebp-0x1d],al
1000008c:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [ebp-0x24],0x0
10000093:	83 7d dc 07          	cmp    DWORD PTR [ebp-0x24],0x7
10000097:	7f 4e                	jg     100000e7 <drawVGAChar(int, int, int, int, int)+0x87>
10000099:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	1000009b: R_386_32	screen
1000009f:	a1 00 00 00 00       	mov    eax,ds:0x0	100000a0: R_386_32	screen
100000a4:	8b 00                	mov    eax,DWORD PTR [eax]
100000a6:	83 c0 24             	add    eax,0x24
100000a9:	8b 10                	mov    edx,DWORD PTR [eax]
100000ab:	8a 45 e3             	mov    al,BYTE PTR [ebp-0x1d]
100000ae:	84 c0                	test   al,al
100000b0:	79 05                	jns    100000b7 <drawVGAChar(int, int, int, int, int)+0x57>
100000b2:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
100000b5:	eb 03                	jmp    100000ba <drawVGAChar(int, int, int, int, int)+0x5a>
100000b7:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100000ba:	8b 5d 0c             	mov    ebx,DWORD PTR [ebp+0xc]
100000bd:	89 de                	mov    esi,ebx
100000bf:	c1 e6 04             	shl    esi,0x4
100000c2:	8b 5d e4             	mov    ebx,DWORD PTR [ebp-0x1c]
100000c5:	01 de                	add    esi,ebx
100000c7:	8b 5d 08             	mov    ebx,DWORD PTR [ebp+0x8]
100000ca:	8d 3c dd 00 00 00 00 	lea    edi,[ebx*8+0x0]
100000d1:	8b 5d dc             	mov    ebx,DWORD PTR [ebp-0x24]
100000d4:	01 fb                	add    ebx,edi
100000d6:	50                   	push   eax
100000d7:	56                   	push   esi
100000d8:	53                   	push   ebx
100000d9:	51                   	push   ecx
100000da:	ff d2                	call   edx
100000dc:	83 c4 10             	add    esp,0x10
100000df:	d0 65 e3             	shl    BYTE PTR [ebp-0x1d],1
100000e2:	ff 45 dc             	inc    DWORD PTR [ebp-0x24]
100000e5:	eb ac                	jmp    10000093 <drawVGAChar(int, int, int, int, int)+0x33>
100000e7:	ff 45 e4             	inc    DWORD PTR [ebp-0x1c]
100000ea:	eb 84                	jmp    10000070 <drawVGAChar(int, int, int, int, int)+0x10>
100000ec:	90                   	nop
100000ed:	8d 65 f4             	lea    esp,[ebp-0xc]
100000f0:	5b                   	pop    ebx
100000f1:	5e                   	pop    esi
100000f2:	5f                   	pop    edi
100000f3:	5d                   	pop    ebp
100000f4:	c3                   	ret    

100000f5 <kernelPanicHandler(char*)>:
100000f5:	55                   	push   ebp
100000f6:	89 e5                	mov    ebp,esp
100000f8:	83 ec 18             	sub    esp,0x18
100000fb:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100000fd: R_386_32	screen
10000101:	a1 00 00 00 00       	mov    eax,ds:0x0	10000102: R_386_32	screen
10000106:	8b 00                	mov    eax,DWORD PTR [eax]
10000108:	83 c0 40             	add    eax,0x40
1000010b:	8b 00                	mov    eax,DWORD PTR [eax]
1000010d:	83 ec 08             	sub    esp,0x8
10000110:	68 80 00 00 00       	push   0x80
10000115:	52                   	push   edx
10000116:	ff d0                	call   eax
10000118:	83 c4 10             	add    esp,0x10
1000011b:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000122:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000125:	05 72 3d 00 10       	add    eax,0x10003d72	10000126: R_386_32	.text
1000012a:	8a 00                	mov    al,BYTE PTR [eax]
1000012c:	84 c0                	test   al,al
1000012e:	74 31                	je     10000161 <kernelPanicHandler(char*)+0x6c>
10000130:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000133:	05 72 3d 00 10       	add    eax,0x10003d72	10000134: R_386_32	.text
10000138:	8a 00                	mov    al,BYTE PTR [eax]
1000013a:	0f be c0             	movsx  eax,al
1000013d:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000140:	83 c2 06             	add    edx,0x6
10000143:	83 ec 0c             	sub    esp,0xc
10000146:	68 ff ff ff 00       	push   0xffffff
1000014b:	68 80 00 00 00       	push   0x80
10000150:	50                   	push   eax
10000151:	6a 02                	push   0x2
10000153:	52                   	push   edx
10000154:	e8 fc ff ff ff       	call   10000155 <kernelPanicHandler(char*)+0x60>	10000155: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000159:	83 c4 20             	add    esp,0x20
1000015c:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000015f:	eb c1                	jmp    10000122 <kernelPanicHandler(char*)+0x2d>
10000161:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000168:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000016b:	05 80 3d 00 10       	add    eax,0x10003d80	1000016c: R_386_32	.text
10000170:	8a 00                	mov    al,BYTE PTR [eax]
10000172:	84 c0                	test   al,al
10000174:	74 31                	je     100001a7 <kernelPanicHandler(char*)+0xb2>
10000176:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000179:	05 80 3d 00 10       	add    eax,0x10003d80	1000017a: R_386_32	.text
1000017e:	8a 00                	mov    al,BYTE PTR [eax]
10000180:	0f be c0             	movsx  eax,al
10000183:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
10000186:	83 c2 06             	add    edx,0x6
10000189:	83 ec 0c             	sub    esp,0xc
1000018c:	68 80 00 00 00       	push   0x80
10000191:	68 ff ff ff 00       	push   0xffffff
10000196:	50                   	push   eax
10000197:	6a 04                	push   0x4
10000199:	52                   	push   edx
1000019a:	e8 fc ff ff ff       	call   1000019b <kernelPanicHandler(char*)+0xa6>	1000019b: R_386_PC32	drawVGAChar(int, int, int, int, int)
1000019f:	83 c4 20             	add    esp,0x20
100001a2:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100001a5:	eb c1                	jmp    10000168 <kernelPanicHandler(char*)+0x73>
100001a7:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [ebp-0x14],0x0
100001ae:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100001b1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100001b4:	01 d0                	add    eax,edx
100001b6:	8a 00                	mov    al,BYTE PTR [eax]
100001b8:	84 c0                	test   al,al
100001ba:	74 31                	je     100001ed <kernelPanicHandler(char*)+0xf8>
100001bc:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100001bf:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100001c2:	01 d0                	add    eax,edx
100001c4:	8a 00                	mov    al,BYTE PTR [eax]
100001c6:	0f be c0             	movsx  eax,al
100001c9:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100001cc:	83 c2 0a             	add    edx,0xa
100001cf:	83 ec 0c             	sub    esp,0xc
100001d2:	68 80 00 00 00       	push   0x80
100001d7:	68 ff ff ff 00       	push   0xffffff
100001dc:	50                   	push   eax
100001dd:	6a 06                	push   0x6
100001df:	52                   	push   edx
100001e0:	e8 fc ff ff ff       	call   100001e1 <kernelPanicHandler(char*)+0xec>	100001e1: R_386_PC32	drawVGAChar(int, int, int, int, int)
100001e5:	83 c4 20             	add    esp,0x20
100001e8:	ff 45 ec             	inc    DWORD PTR [ebp-0x14]
100001eb:	eb c1                	jmp    100001ae <kernelPanicHandler(char*)+0xb9>
100001ed:	f4                   	hlt    
100001ee:	eb fd                	jmp    100001ed <kernelPanicHandler(char*)+0xf8>

100001f0 <NiMain(void*)>:
100001f0:	55                   	push   ebp
100001f1:	89 e5                	mov    ebp,esp
100001f3:	57                   	push   edi
100001f4:	56                   	push   esi
100001f5:	53                   	push   ebx
100001f6:	83 ec 2c             	sub    esp,0x2c
100001f9:	83 ec 0c             	sub    esp,0xc
100001fc:	68 b2 3d 00 10       	push   0x10003db2	100001fd: R_386_32	.text
10000201:	e8 fc ff ff ff       	call   10000202 <NiMain(void*)+0x12>	10000202: R_386_PC32	Dbg::kprintf(char const*, ...)
10000206:	83 c4 10             	add    esp,0x10
10000209:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000020b: R_386_32	guiPanicHandler
	1000020f: R_386_32	kernelPanicHandler(char*)
10000213:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10000215: R_386_32	screen
10000219:	a1 00 00 00 00       	mov    eax,ds:0x0	1000021a: R_386_32	screen
1000021e:	8b 00                	mov    eax,DWORD PTR [eax]
10000220:	83 c0 40             	add    eax,0x40
10000223:	8b 00                	mov    eax,DWORD PTR [eax]
10000225:	83 ec 08             	sub    esp,0x8
10000228:	68 80 80 00 00       	push   0x8080
1000022d:	52                   	push   edx
1000022e:	ff d0                	call   eax
10000230:	83 c4 10             	add    esp,0x10
10000233:	c7 05 00 00 00 00 32 00 00 00 	mov    DWORD PTR ds:0x0,0x32	10000235: R_386_32	mouseX
1000023d:	c7 05 00 00 00 00 32 00 00 00 	mov    DWORD PTR ds:0x0,0x32	1000023f: R_386_32	mouseY
10000247:	c7 45 d4 7c 00 00 00 	mov    DWORD PTR [ebp-0x2c],0x7c
1000024e:	83 ec 0c             	sub    esp,0xc
10000251:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
10000254:	e8 fc ff ff ff       	call   10000255 <NiMain(void*)+0x65>	10000255: R_386_PC32	malloc
10000259:	83 c4 10             	add    esp,0x10
1000025c:	89 c3                	mov    ebx,eax
1000025e:	83 ec 04             	sub    esp,0x4
10000261:	6a 00                	push   0x0
10000263:	68 ce 3d 00 10       	push   0x10003dce	10000264: R_386_32	.text
10000268:	68 5e 01 00 00       	push   0x15e
1000026d:	68 5e 01 00 00       	push   0x15e
10000272:	6a 32                	push   0x32
10000274:	6a 50                	push   0x50
10000276:	53                   	push   ebx
10000277:	e8 fc ff ff ff       	call   10000278 <NiMain(void*)+0x88>	10000278: R_386_PC32	NWindow::NWindow(int, int, int, int, char const*, int)
1000027c:	83 c4 20             	add    esp,0x20
1000027f:	89 5d e4             	mov    DWORD PTR [ebp-0x1c],ebx
10000282:	c7 45 d8 7c 00 00 00 	mov    DWORD PTR [ebp-0x28],0x7c
10000289:	83 ec 0c             	sub    esp,0xc
1000028c:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
1000028f:	e8 fc ff ff ff       	call   10000290 <NiMain(void*)+0xa0>	10000290: R_386_PC32	malloc
10000294:	83 c4 10             	add    esp,0x10
10000297:	89 c3                	mov    ebx,eax
10000299:	83 ec 04             	sub    esp,0x4
1000029c:	6a 00                	push   0x0
1000029e:	68 ce 3d 00 10       	push   0x10003dce	1000029f: R_386_32	.text
100002a3:	68 c2 01 00 00       	push   0x1c2
100002a8:	68 c2 01 00 00       	push   0x1c2
100002ad:	6a 58                	push   0x58
100002af:	68 b4 00 00 00       	push   0xb4
100002b4:	53                   	push   ebx
100002b5:	e8 fc ff ff ff       	call   100002b6 <NiMain(void*)+0xc6>	100002b6: R_386_PC32	NWindow::NWindow(int, int, int, int, char const*, int)
100002ba:	83 c4 20             	add    esp,0x20
100002bd:	89 5d e0             	mov    DWORD PTR [ebp-0x20],ebx
100002c0:	a1 00 00 00 00       	mov    eax,ds:0x0	100002c1: R_386_32	screen
100002c5:	83 ec 0c             	sub    esp,0xc
100002c8:	50                   	push   eax
100002c9:	e8 fc ff ff ff       	call   100002ca <NiMain(void*)+0xda>	100002ca: R_386_PC32	Video::getWidth()
100002ce:	83 c4 10             	add    esp,0x10
100002d1:	89 c6                	mov    esi,eax
100002d3:	a1 00 00 00 00       	mov    eax,ds:0x0	100002d4: R_386_32	screen
100002d8:	83 ec 0c             	sub    esp,0xc
100002db:	50                   	push   eax
100002dc:	e8 fc ff ff ff       	call   100002dd <NiMain(void*)+0xed>	100002dd: R_386_PC32	Video::getHeight()
100002e1:	83 c4 10             	add    esp,0x10
100002e4:	89 c7                	mov    edi,eax
100002e6:	c7 45 dc 7c 00 00 00 	mov    DWORD PTR [ebp-0x24],0x7c
100002ed:	83 ec 0c             	sub    esp,0xc
100002f0:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
100002f3:	e8 fc ff ff ff       	call   100002f4 <NiMain(void*)+0x104>	100002f4: R_386_PC32	malloc
100002f8:	83 c4 10             	add    esp,0x10
100002fb:	89 c3                	mov    ebx,eax
100002fd:	83 ec 04             	sub    esp,0x4
10000300:	68 80 80 00 00       	push   0x8080
10000305:	68 80 80 00 00       	push   0x8080
1000030a:	57                   	push   edi
1000030b:	56                   	push   esi
1000030c:	6a 00                	push   0x0
1000030e:	6a 00                	push   0x0
10000310:	53                   	push   ebx
10000311:	e8 fc ff ff ff       	call   10000312 <NiMain(void*)+0x122>	10000312: R_386_PC32	NButton::NButton(int, int, int, int, int, int)
10000316:	83 c4 20             	add    esp,0x20
10000319:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	1000031b: R_386_32	desktopWindow
1000031f:	a1 00 00 00 00       	mov    eax,ds:0x0	10000320: R_386_32	desktopWindow
10000324:	83 ec 08             	sub    esp,0x8
10000327:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
1000032a:	50                   	push   eax
1000032b:	e8 fc ff ff ff       	call   1000032c <NiMain(void*)+0x13c>	1000032c: R_386_PC32	NFrame::addChild(NFrame*)
10000330:	83 c4 10             	add    esp,0x10
10000333:	a1 00 00 00 00       	mov    eax,ds:0x0	10000334: R_386_32	desktopWindow
10000338:	83 ec 08             	sub    esp,0x8
1000033b:	ff 75 e0             	push   DWORD PTR [ebp-0x20]
1000033e:	50                   	push   eax
1000033f:	e8 fc ff ff ff       	call   10000340 <NiMain(void*)+0x150>	10000340: R_386_PC32	NFrame::addChild(NFrame*)
10000344:	83 c4 10             	add    esp,0x10
10000347:	a1 00 00 00 00       	mov    eax,ds:0x0	10000348: R_386_32	screen
1000034c:	83 ec 0c             	sub    esp,0xc
1000034f:	50                   	push   eax
10000350:	e8 fc ff ff ff       	call   10000351 <NiMain(void*)+0x161>	10000351: R_386_PC32	mouseInit(Video*)
10000355:	83 c4 10             	add    esp,0x10
10000358:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000035a: R_386_32	guiMouseHandler
	1000035e: R_386_32	kernelMouseHandler(int, int, int, int)
10000362:	a1 00 00 00 00       	mov    eax,ds:0x0	10000363: R_386_32	desktopWindow
10000367:	83 ec 0c             	sub    esp,0xc
1000036a:	50                   	push   eax
1000036b:	e8 fc ff ff ff       	call   1000036c <NiMain(void*)+0x17c>	1000036c: R_386_PC32	NFrame::tryInvalidate()
10000370:	83 c4 10             	add    esp,0x10
10000373:	a1 00 00 00 00       	mov    eax,ds:0x0	10000374: R_386_32	desktopWindow
10000378:	89 c2                	mov    edx,eax
1000037a:	a1 00 00 00 00       	mov    eax,ds:0x0	1000037b: R_386_32	screen
1000037f:	83 ec 08             	sub    esp,0x8
10000382:	50                   	push   eax
10000383:	52                   	push   edx
10000384:	e8 fc ff ff ff       	call   10000385 <NiMain(void*)+0x195>	10000385: R_386_PC32	NFrame::repaint(Video*)
10000389:	83 c4 10             	add    esp,0x10
1000038c:	83 ec 0c             	sub    esp,0xc
1000038f:	6a 02                	push   0x2
10000391:	e8 fc ff ff ff       	call   10000392 <NiMain(void*)+0x1a2>	10000392: R_386_PC32	blockTask(TaskState)
10000396:	83 c4 10             	add    esp,0x10
10000399:	eb f1                	jmp    1000038c <NiMain(void*)+0x19c>

1000039b <mouseInit(Video*)>:
1000039b:	55                   	push   ebp
1000039c:	89 e5                	mov    ebp,esp
1000039e:	57                   	push   edi
1000039f:	56                   	push   esi
100003a0:	53                   	push   ebx
100003a1:	83 ec 4c             	sub    esp,0x4c
100003a4:	8d 45 b0             	lea    eax,[ebp-0x50]
100003a7:	68 00 00 00 00       	push   0x0	100003a8: R_386_32	___mouse_data
100003ac:	6a 00                	push   0x0
100003ae:	6a 00                	push   0x0
100003b0:	50                   	push   eax
100003b1:	e8 fc ff ff ff       	call   100003b2 <mouseInit(Video*)+0x17>	100003b2: R_386_PC32	createTightCursorRegion(int, int, unsigned int*)
100003b6:	83 c4 0c             	add    esp,0xc
100003b9:	bb 00 00 00 00       	mov    ebx,0x0	100003ba: R_386_32	tightMouseRegionOld
100003be:	8d 45 b0             	lea    eax,[ebp-0x50]
100003c1:	ba 19 00 00 00       	mov    edx,0x19
100003c6:	89 df                	mov    edi,ebx
100003c8:	89 c6                	mov    esi,eax
100003ca:	89 d1                	mov    ecx,edx
100003cc:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100003ce:	8d 45 cc             	lea    eax,[ebp-0x34]
100003d1:	68 00 00 00 00       	push   0x0	100003d2: R_386_32	___mouse_data
100003d6:	6a 00                	push   0x0
100003d8:	6a 00                	push   0x0
100003da:	50                   	push   eax
100003db:	e8 fc ff ff ff       	call   100003dc <mouseInit(Video*)+0x41>	100003dc: R_386_PC32	createTightCursorRegion(int, int, unsigned int*)
100003e0:	83 c4 0c             	add    esp,0xc
100003e3:	bb 00 00 00 00       	mov    ebx,0x0	100003e4: R_386_32	tightMouseRegionNew
100003e8:	8d 45 cc             	lea    eax,[ebp-0x34]
100003eb:	ba 19 00 00 00       	mov    edx,0x19
100003f0:	89 df                	mov    edi,ebx
100003f2:	89 c6                	mov    esi,eax
100003f4:	89 d1                	mov    ecx,edx
100003f6:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100003f8:	90                   	nop
100003f9:	8d 65 f4             	lea    esp,[ebp-0xc]
100003fc:	5b                   	pop    ebx
100003fd:	5e                   	pop    esi
100003fe:	5f                   	pop    edi
100003ff:	5d                   	pop    ebp
10000400:	c3                   	ret    

10000401 <hideCursor(Video*, int, int, int, int)>:
10000401:	55                   	push   ebp
10000402:	89 e5                	mov    ebp,esp
10000404:	57                   	push   edi
10000405:	56                   	push   esi
10000406:	53                   	push   ebx
10000407:	83 ec 3c             	sub    esp,0x3c
1000040a:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000040d:	a3 10 00 00 00       	mov    ds:0x10,eax	1000040e: R_386_32	tightMouseRegionOld
10000412:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000415:	a3 14 00 00 00       	mov    ds:0x14,eax	10000416: R_386_32	tightMouseRegionOld
1000041a:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000041d:	a3 10 00 00 00       	mov    ds:0x10,eax	1000041e: R_386_32	tightMouseRegionNew
10000422:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10000425:	a3 14 00 00 00       	mov    ds:0x14,eax	10000426: R_386_32	tightMouseRegionNew
1000042a:	8d 45 cc             	lea    eax,[ebp-0x34]
1000042d:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10000430:	83 ec 04             	sub    esp,0x4
10000433:	83 ec 1c             	sub    esp,0x1c
10000436:	89 e0                	mov    eax,esp
10000438:	89 c2                	mov    edx,eax
1000043a:	bb 00 00 00 00       	mov    ebx,0x0	1000043b: R_386_32	tightMouseRegionNew
1000043f:	b8 07 00 00 00       	mov    eax,0x7
10000444:	89 d7                	mov    edi,edx
10000446:	89 de                	mov    esi,ebx
10000448:	89 c1                	mov    ecx,eax
1000044a:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000044c:	83 ec 1c             	sub    esp,0x1c
1000044f:	89 e0                	mov    eax,esp
10000451:	89 c2                	mov    edx,eax
10000453:	bb 00 00 00 00       	mov    ebx,0x0	10000454: R_386_32	tightMouseRegionOld
10000458:	b8 07 00 00 00       	mov    eax,0x7
1000045d:	89 d7                	mov    edi,edx
1000045f:	89 de                	mov    esi,ebx
10000461:	89 c1                	mov    ecx,eax
10000463:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10000465:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10000468:	e8 fc ff ff ff       	call   10000469 <hideCursor(Video*, int, int, int, int)+0x68>	10000469: R_386_PC32	getRegionDifference(Region, Region)
1000046d:	83 c4 3c             	add    esp,0x3c
10000470:	a1 00 00 00 00       	mov    eax,ds:0x0	10000471: R_386_32	desktopWindow
10000475:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10000478:	83 ec 0c             	sub    esp,0xc
1000047b:	83 ec 1c             	sub    esp,0x1c
1000047e:	89 e0                	mov    eax,esp
10000480:	89 c3                	mov    ebx,eax
10000482:	8d 45 cc             	lea    eax,[ebp-0x34]
10000485:	ba 07 00 00 00       	mov    edx,0x7
1000048a:	89 df                	mov    edi,ebx
1000048c:	89 c6                	mov    esi,eax
1000048e:	89 d1                	mov    ecx,edx
10000490:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10000492:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000495:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10000498:	e8 fc ff ff ff       	call   10000499 <hideCursor(Video*, int, int, int, int)+0x98>	10000499: R_386_PC32	NFrame::repaintCursorRegion(Video*, Region)
1000049d:	83 c4 30             	add    esp,0x30
100004a0:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100004a3:	83 ec 0c             	sub    esp,0xc
100004a6:	50                   	push   eax
100004a7:	e8 fc ff ff ff       	call   100004a8 <hideCursor(Video*, int, int, int, int)+0xa7>	100004a8: R_386_PC32	free
100004ac:	83 c4 10             	add    esp,0x10
100004af:	90                   	nop
100004b0:	8d 65 f4             	lea    esp,[ebp-0xc]
100004b3:	5b                   	pop    ebx
100004b4:	5e                   	pop    esi
100004b5:	5f                   	pop    edi
100004b6:	5d                   	pop    ebp
100004b7:	c3                   	ret    

100004b8 <showCursor(Video*)>:
100004b8:	55                   	push   ebp
100004b9:	89 e5                	mov    ebp,esp
100004bb:	83 ec 08             	sub    esp,0x8
100004be:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100004c0: R_386_32	mouseY
100004c4:	a1 00 00 00 00       	mov    eax,ds:0x0	100004c5: R_386_32	mouseX
100004c9:	68 00 00 00 00       	push   0x0	100004ca: R_386_32	___mouse_data
100004ce:	52                   	push   edx
100004cf:	50                   	push   eax
100004d0:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100004d3:	e8 fc ff ff ff       	call   100004d4 <showCursor(Video*)+0x1c>	100004d4: R_386_PC32	videoDrawCursor(Video*, int, int, unsigned int*)
100004d8:	83 c4 10             	add    esp,0x10
100004db:	90                   	nop
100004dc:	c9                   	leave  
100004dd:	c3                   	ret    

100004de <handleMouse(Video*, int, int, int, int, int)>:
100004de:	55                   	push   ebp
100004df:	89 e5                	mov    ebp,esp
100004e1:	53                   	push   ebx
100004e2:	83 ec 44             	sub    esp,0x44
100004e5:	c6 45 f7 00          	mov    BYTE PTR [ebp-0x9],0x0
100004e9:	a1 00 00 00 00       	mov    eax,ds:0x0	100004ea: R_386_32	mouseX
100004ee:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
100004f1:	a1 00 00 00 00       	mov    eax,ds:0x0	100004f2: R_386_32	mouseY
100004f6:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
100004f9:	a1 00 00 00 00       	mov    eax,ds:0x0	100004fa: R_386_32	mouseButtons
100004fe:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
10000501:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10000503: R_386_32	mouseX
10000507:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000050a:	01 d0                	add    eax,edx
1000050c:	a3 00 00 00 00       	mov    ds:0x0,eax	1000050d: R_386_32	mouseX
10000511:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10000513: R_386_32	mouseY
10000517:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
1000051a:	01 d0                	add    eax,edx
1000051c:	a3 00 00 00 00       	mov    ds:0x0,eax	1000051d: R_386_32	mouseY
10000521:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10000524:	a3 00 00 00 00       	mov    ds:0x0,eax	10000525: R_386_32	mouseButtons
10000529:	a1 00 00 00 00       	mov    eax,ds:0x0	1000052a: R_386_32	mouseX
1000052e:	85 c0                	test   eax,eax
10000530:	79 0a                	jns    1000053c <handleMouse(Video*, int, int, int, int, int)+0x5e>
10000532:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000534: R_386_32	mouseX
1000053c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000053d: R_386_32	mouseY
10000541:	85 c0                	test   eax,eax
10000543:	79 0a                	jns    1000054f <handleMouse(Video*, int, int, int, int, int)+0x71>
10000545:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000547: R_386_32	mouseY
1000054f:	83 ec 0c             	sub    esp,0xc
10000552:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000555:	e8 fc ff ff ff       	call   10000556 <handleMouse(Video*, int, int, int, int, int)+0x78>	10000556: R_386_PC32	Video::getWidth()
1000055a:	83 c4 10             	add    esp,0x10
1000055d:	89 c2                	mov    edx,eax
1000055f:	a1 00 00 00 00       	mov    eax,ds:0x0	10000560: R_386_32	mouseX
10000564:	39 c2                	cmp    edx,eax
10000566:	0f 9e c0             	setle  al
10000569:	84 c0                	test   al,al
1000056b:	74 14                	je     10000581 <handleMouse(Video*, int, int, int, int, int)+0xa3>
1000056d:	83 ec 0c             	sub    esp,0xc
10000570:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000573:	e8 fc ff ff ff       	call   10000574 <handleMouse(Video*, int, int, int, int, int)+0x96>	10000574: R_386_PC32	Video::getWidth()
10000578:	83 c4 10             	add    esp,0x10
1000057b:	48                   	dec    eax
1000057c:	a3 00 00 00 00       	mov    ds:0x0,eax	1000057d: R_386_32	mouseX
10000581:	83 ec 0c             	sub    esp,0xc
10000584:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000587:	e8 fc ff ff ff       	call   10000588 <handleMouse(Video*, int, int, int, int, int)+0xaa>	10000588: R_386_PC32	Video::getHeight()
1000058c:	83 c4 10             	add    esp,0x10
1000058f:	89 c2                	mov    edx,eax
10000591:	a1 00 00 00 00       	mov    eax,ds:0x0	10000592: R_386_32	mouseY
10000596:	39 c2                	cmp    edx,eax
10000598:	0f 9e c0             	setle  al
1000059b:	84 c0                	test   al,al
1000059d:	74 14                	je     100005b3 <handleMouse(Video*, int, int, int, int, int)+0xd5>
1000059f:	83 ec 0c             	sub    esp,0xc
100005a2:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100005a5:	e8 fc ff ff ff       	call   100005a6 <handleMouse(Video*, int, int, int, int, int)+0xc8>	100005a6: R_386_PC32	Video::getHeight()
100005aa:	83 c4 10             	add    esp,0x10
100005ad:	48                   	dec    eax
100005ae:	a3 00 00 00 00       	mov    ds:0x0,eax	100005af: R_386_32	mouseY
100005b3:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100005b5: R_386_32	mouseY
100005b9:	a1 00 00 00 00       	mov    eax,ds:0x0	100005ba: R_386_32	mouseX
100005be:	83 ec 0c             	sub    esp,0xc
100005c1:	52                   	push   edx
100005c2:	50                   	push   eax
100005c3:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
100005c6:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100005c9:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100005cc:	e8 fc ff ff ff       	call   100005cd <handleMouse(Video*, int, int, int, int, int)+0xef>	100005cd: R_386_PC32	hideCursor(Video*, int, int, int, int)
100005d1:	83 c4 20             	add    esp,0x20
100005d4:	a1 00 00 00 00       	mov    eax,ds:0x0	100005d5: R_386_32	desktopWindow
100005d9:	89 c1                	mov    ecx,eax
100005db:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100005dd: R_386_32	mouseY
100005e1:	a1 00 00 00 00       	mov    eax,ds:0x0	100005e2: R_386_32	mouseX
100005e6:	83 ec 0c             	sub    esp,0xc
100005e9:	6a 01                	push   0x1
100005eb:	52                   	push   edx
100005ec:	50                   	push   eax
100005ed:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100005f0:	51                   	push   ecx
100005f1:	e8 fc ff ff ff       	call   100005f2 <handleMouse(Video*, int, int, int, int, int)+0x114>	100005f2: R_386_PC32	NFrame::getPixelOwner(Video*, int, int, bool)
100005f6:	83 c4 20             	add    esp,0x20
100005f9:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
100005fc:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
100005ff:	83 e0 01             	and    eax,0x1
10000602:	85 c0                	test   eax,eax
10000604:	75 4c                	jne    10000652 <handleMouse(Video*, int, int, int, int, int)+0x174>
10000606:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
10000609:	83 e0 01             	and    eax,0x1
1000060c:	85 c0                	test   eax,eax
1000060e:	74 42                	je     10000652 <handleMouse(Video*, int, int, int, int, int)+0x174>
10000610:	a1 00 00 00 00       	mov    eax,ds:0x0	10000611: R_386_32	draggingWindow
10000615:	85 c0                	test   eax,eax
10000617:	74 1e                	je     10000637 <handleMouse(Video*, int, int, int, int, int)+0x159>
10000619:	a0 00 00 00 00       	mov    al,ds:0x0	1000061a: R_386_32	startedDragging
1000061e:	84 c0                	test   al,al
10000620:	74 15                	je     10000637 <handleMouse(Video*, int, int, int, int, int)+0x159>
10000622:	a1 00 00 00 00       	mov    eax,ds:0x0	10000623: R_386_32	draggingWindow
10000627:	83 ec 0c             	sub    esp,0xc
1000062a:	50                   	push   eax
1000062b:	e8 fc ff ff ff       	call   1000062c <handleMouse(Video*, int, int, int, int, int)+0x14e>	1000062c: R_386_PC32	NFrame::endDragState()
10000630:	83 c4 10             	add    esp,0x10
10000633:	c6 45 f7 01          	mov    BYTE PTR [ebp-0x9],0x1
10000637:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10000639: R_386_32	startedDragging
1000063e:	c7 05 00 00 00 00 01 00 00 00 	mov    DWORD PTR ds:0x0,0x1	10000640: R_386_32	dragMode
10000648:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000064a: R_386_32	draggingWindow
10000652:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10000655:	83 e0 01             	and    eax,0x1
10000658:	85 c0                	test   eax,eax
1000065a:	0f 84 14 01 00 00    	je     10000774 <handleMouse(Video*, int, int, int, int, int)+0x296>
10000660:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
10000663:	83 e0 01             	and    eax,0x1
10000666:	85 c0                	test   eax,eax
10000668:	0f 85 06 01 00 00    	jne    10000774 <handleMouse(Video*, int, int, int, int, int)+0x296>
1000066e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000066f: R_386_32	draggingWindow
10000673:	85 c0                	test   eax,eax
10000675:	0f 85 f9 00 00 00    	jne    10000774 <handleMouse(Video*, int, int, int, int, int)+0x296>
1000067b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000067c: R_386_32	desktopWindow
10000680:	39 45 e4             	cmp    DWORD PTR [ebp-0x1c],eax
10000683:	0f 84 eb 00 00 00    	je     10000774 <handleMouse(Video*, int, int, int, int, int)+0x296>
10000689:	83 ec 0c             	sub    esp,0xc
1000068c:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
1000068f:	e8 fc ff ff ff       	call   10000690 <handleMouse(Video*, int, int, int, int, int)+0x1b2>	10000690: R_386_PC32	NFrame::raise()
10000694:	83 c4 10             	add    esp,0x10
10000697:	8b 1d 00 00 00 00    	mov    ebx,DWORD PTR ds:0x0	10000699: R_386_32	mouseX
1000069d:	83 ec 0c             	sub    esp,0xc
100006a0:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
100006a3:	e8 fc ff ff ff       	call   100006a4 <handleMouse(Video*, int, int, int, int, int)+0x1c6>	100006a4: R_386_PC32	NFrame::getAbsX()
100006a8:	83 c4 10             	add    esp,0x10
100006ab:	29 c3                	sub    ebx,eax
100006ad:	89 d8                	mov    eax,ebx
100006af:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
100006b2:	8b 1d 00 00 00 00    	mov    ebx,DWORD PTR ds:0x0	100006b4: R_386_32	mouseY
100006b8:	83 ec 0c             	sub    esp,0xc
100006bb:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
100006be:	e8 fc ff ff ff       	call   100006bf <handleMouse(Video*, int, int, int, int, int)+0x1e1>	100006bf: R_386_PC32	NFrame::getAbsY()
100006c3:	83 c4 10             	add    esp,0x10
100006c6:	29 c3                	sub    ebx,eax
100006c8:	89 d8                	mov    eax,ebx
100006ca:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
100006cd:	83 7d dc 00          	cmp    DWORD PTR [ebp-0x24],0x0
100006d1:	78 17                	js     100006ea <handleMouse(Video*, int, int, int, int, int)+0x20c>
100006d3:	83 ec 0c             	sub    esp,0xc
100006d6:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
100006d9:	e8 fc ff ff ff       	call   100006da <handleMouse(Video*, int, int, int, int, int)+0x1fc>	100006da: R_386_PC32	NFrame::getTitlebarHeight()
100006de:	83 c4 10             	add    esp,0x10
100006e1:	39 45 dc             	cmp    DWORD PTR [ebp-0x24],eax
100006e4:	7d 04                	jge    100006ea <handleMouse(Video*, int, int, int, int, int)+0x20c>
100006e6:	b0 01                	mov    al,0x1
100006e8:	eb 02                	jmp    100006ec <handleMouse(Video*, int, int, int, int, int)+0x20e>
100006ea:	b0 00                	mov    al,0x0
100006ec:	84 c0                	test   al,al
100006ee:	74 1b                	je     1000070b <handleMouse(Video*, int, int, int, int, int)+0x22d>
100006f0:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100006f3:	a3 00 00 00 00       	mov    ds:0x0,eax	100006f4: R_386_32	draggingWindow
100006f8:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100006fa: R_386_32	startedDragging
100006ff:	c7 05 00 00 00 00 01 00 00 00 	mov    DWORD PTR ds:0x0,0x1	10000701: R_386_32	dragMode
10000709:	eb 65                	jmp    10000770 <handleMouse(Video*, int, int, int, int, int)+0x292>
1000070b:	83 ec 0c             	sub    esp,0xc
1000070e:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10000711:	e8 fc ff ff ff       	call   10000712 <handleMouse(Video*, int, int, int, int, int)+0x234>	10000712: R_386_PC32	NFrame::getHeight()
10000716:	83 c4 10             	add    esp,0x10
10000719:	83 e8 0c             	sub    eax,0xc
1000071c:	39 45 dc             	cmp    DWORD PTR [ebp-0x24],eax
1000071f:	7c 1a                	jl     1000073b <handleMouse(Video*, int, int, int, int, int)+0x25d>
10000721:	83 ec 0c             	sub    esp,0xc
10000724:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10000727:	e8 fc ff ff ff       	call   10000728 <handleMouse(Video*, int, int, int, int, int)+0x24a>	10000728: R_386_PC32	NFrame::getWidth()
1000072c:	83 c4 10             	add    esp,0x10
1000072f:	83 e8 0c             	sub    eax,0xc
10000732:	39 45 e0             	cmp    DWORD PTR [ebp-0x20],eax
10000735:	7c 04                	jl     1000073b <handleMouse(Video*, int, int, int, int, int)+0x25d>
10000737:	b0 01                	mov    al,0x1
10000739:	eb 02                	jmp    1000073d <handleMouse(Video*, int, int, int, int, int)+0x25f>
1000073b:	b0 00                	mov    al,0x0
1000073d:	84 c0                	test   al,al
1000073f:	74 1b                	je     1000075c <handleMouse(Video*, int, int, int, int, int)+0x27e>
10000741:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000744:	a3 00 00 00 00       	mov    ds:0x0,eax	10000745: R_386_32	draggingWindow
10000749:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	1000074b: R_386_32	startedDragging
10000750:	c7 05 00 00 00 00 02 00 00 00 	mov    DWORD PTR ds:0x0,0x2	10000752: R_386_32	dragMode
1000075a:	eb 14                	jmp    10000770 <handleMouse(Video*, int, int, int, int, int)+0x292>
1000075c:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	1000075e: R_386_32	draggingWindow
10000766:	c7 05 00 00 00 00 01 00 00 00 	mov    DWORD PTR ds:0x0,0x1	10000768: R_386_32	dragMode
10000770:	c6 45 f7 01          	mov    BYTE PTR [ebp-0x9],0x1
10000774:	a1 00 00 00 00       	mov    eax,ds:0x0	10000775: R_386_32	draggingWindow
10000779:	85 c0                	test   eax,eax
1000077b:	0f 84 fe 00 00 00    	je     1000087f <handleMouse(Video*, int, int, int, int, int)+0x3a1>
10000781:	83 7d 0c 00          	cmp    DWORD PTR [ebp+0xc],0x0
10000785:	75 0a                	jne    10000791 <handleMouse(Video*, int, int, int, int, int)+0x2b3>
10000787:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
1000078b:	0f 84 ee 00 00 00    	je     1000087f <handleMouse(Video*, int, int, int, int, int)+0x3a1>
10000791:	a1 00 00 00 00       	mov    eax,ds:0x0	10000792: R_386_32	draggingWindow
10000796:	83 ec 0c             	sub    esp,0xc
10000799:	50                   	push   eax
1000079a:	e8 fc ff ff ff       	call   1000079b <handleMouse(Video*, int, int, int, int, int)+0x2bd>	1000079b: R_386_PC32	NFrame::getX()
1000079f:	83 c4 10             	add    esp,0x10
100007a2:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
100007a5:	a1 00 00 00 00       	mov    eax,ds:0x0	100007a6: R_386_32	draggingWindow
100007aa:	83 ec 0c             	sub    esp,0xc
100007ad:	50                   	push   eax
100007ae:	e8 fc ff ff ff       	call   100007af <handleMouse(Video*, int, int, int, int, int)+0x2d1>	100007af: R_386_PC32	NFrame::getY()
100007b3:	83 c4 10             	add    esp,0x10
100007b6:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
100007b9:	a1 00 00 00 00       	mov    eax,ds:0x0	100007ba: R_386_32	draggingWindow
100007be:	83 ec 0c             	sub    esp,0xc
100007c1:	50                   	push   eax
100007c2:	e8 fc ff ff ff       	call   100007c3 <handleMouse(Video*, int, int, int, int, int)+0x2e5>	100007c3: R_386_PC32	NFrame::getWidth()
100007c7:	83 c4 10             	add    esp,0x10
100007ca:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100007cd:	a1 00 00 00 00       	mov    eax,ds:0x0	100007ce: R_386_32	draggingWindow
100007d2:	83 ec 0c             	sub    esp,0xc
100007d5:	50                   	push   eax
100007d6:	e8 fc ff ff ff       	call   100007d7 <handleMouse(Video*, int, int, int, int, int)+0x2f9>	100007d7: R_386_PC32	NFrame::getHeight()
100007db:	83 c4 10             	add    esp,0x10
100007de:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100007e1:	a1 00 00 00 00       	mov    eax,ds:0x0	100007e2: R_386_32	mouseX
100007e6:	2b 45 f0             	sub    eax,DWORD PTR [ebp-0x10]
100007e9:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100007ec:	a1 00 00 00 00       	mov    eax,ds:0x0	100007ed: R_386_32	mouseY
100007f1:	2b 45 ec             	sub    eax,DWORD PTR [ebp-0x14]
100007f4:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100007f7:	a0 00 00 00 00       	mov    al,ds:0x0	100007f8: R_386_32	startedDragging
100007fc:	83 f0 01             	xor    eax,0x1
100007ff:	84 c0                	test   al,al
10000801:	74 18                	je     1000081b <handleMouse(Video*, int, int, int, int, int)+0x33d>
10000803:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10000805: R_386_32	startedDragging
1000080a:	a1 00 00 00 00       	mov    eax,ds:0x0	1000080b: R_386_32	draggingWindow
1000080f:	83 ec 0c             	sub    esp,0xc
10000812:	50                   	push   eax
10000813:	e8 fc ff ff ff       	call   10000814 <handleMouse(Video*, int, int, int, int, int)+0x336>	10000814: R_386_PC32	NFrame::startDragState()
10000818:	83 c4 10             	add    esp,0x10
1000081b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000081c: R_386_32	dragMode
10000820:	83 f8 01             	cmp    eax,0x1
10000823:	75 25                	jne    1000084a <handleMouse(Video*, int, int, int, int, int)+0x36c>
10000825:	a1 00 00 00 00       	mov    eax,ds:0x0	10000826: R_386_32	draggingWindow
1000082a:	8b 4d d4             	mov    ecx,DWORD PTR [ebp-0x2c]
1000082d:	8b 55 c4             	mov    edx,DWORD PTR [ebp-0x3c]
10000830:	01 d1                	add    ecx,edx
10000832:	8b 5d d8             	mov    ebx,DWORD PTR [ebp-0x28]
10000835:	8b 55 c8             	mov    edx,DWORD PTR [ebp-0x38]
10000838:	01 da                	add    edx,ebx
1000083a:	83 ec 04             	sub    esp,0x4
1000083d:	51                   	push   ecx
1000083e:	52                   	push   edx
1000083f:	50                   	push   eax
10000840:	e8 fc ff ff ff       	call   10000841 <handleMouse(Video*, int, int, int, int, int)+0x363>	10000841: R_386_PC32	NFrame::setPosition(int, int)
10000845:	83 c4 10             	add    esp,0x10
10000848:	eb 31                	jmp    1000087b <handleMouse(Video*, int, int, int, int, int)+0x39d>
1000084a:	a1 00 00 00 00       	mov    eax,ds:0x0	1000084b: R_386_32	dragMode
1000084f:	83 f8 02             	cmp    eax,0x2
10000852:	75 27                	jne    1000087b <handleMouse(Video*, int, int, int, int, int)+0x39d>
10000854:	a1 00 00 00 00       	mov    eax,ds:0x0	10000855: R_386_32	draggingWindow
10000859:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	1000085b: R_386_32	mouseY
1000085f:	89 d1                	mov    ecx,edx
10000861:	2b 4d d4             	sub    ecx,DWORD PTR [ebp-0x2c]
10000864:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10000866: R_386_32	mouseX
1000086a:	2b 55 d8             	sub    edx,DWORD PTR [ebp-0x28]
1000086d:	83 ec 04             	sub    esp,0x4
10000870:	51                   	push   ecx
10000871:	52                   	push   edx
10000872:	50                   	push   eax
10000873:	e8 fc ff ff ff       	call   10000874 <handleMouse(Video*, int, int, int, int, int)+0x396>	10000874: R_386_PC32	NFrame::setSize(int, int)
10000878:	83 c4 10             	add    esp,0x10
1000087b:	c6 45 f7 01          	mov    BYTE PTR [ebp-0x9],0x1
1000087f:	83 ec 0c             	sub    esp,0xc
10000882:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000885:	e8 fc ff ff ff       	call   10000886 <handleMouse(Video*, int, int, int, int, int)+0x3a8>	10000886: R_386_PC32	showCursor(Video*)
1000088a:	83 c4 10             	add    esp,0x10
1000088d:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
10000890:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000893:	c9                   	leave  
10000894:	c3                   	ret    

10000895 <__static_initialization_and_destruction_0(int, int)>:
10000895:	83 ec 0c             	sub    esp,0xc
10000898:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000089c:	81 7c 24 14 ff ff 00 00 	cmp    DWORD PTR [esp+0x14],0xffff
100008a4:	75 20                	jne    100008c6 <__static_initialization_and_destruction_0(int, int)+0x31>
100008a6:	48                   	dec    eax
100008a7:	75 1d                	jne    100008c6 <__static_initialization_and_destruction_0(int, int)+0x31>
100008a9:	83 ec 0c             	sub    esp,0xc
100008ac:	68 00 00 00 00       	push   0x0	100008ad: R_386_32	tightMouseRegionOld
100008b1:	e8 fc ff ff ff       	call   100008b2 <__static_initialization_and_destruction_0(int, int)+0x1d>	100008b2: R_386_PC32	Region::Region()
100008b6:	c7 44 24 20 00 00 00 00 	mov    DWORD PTR [esp+0x20],0x0	100008ba: R_386_32	tightMouseRegionNew
100008be:	83 c4 1c             	add    esp,0x1c
100008c1:	e9 fc ff ff ff       	jmp    100008c2 <__static_initialization_and_destruction_0(int, int)+0x2d>	100008c2: R_386_PC32	Region::Region()
100008c6:	83 c4 0c             	add    esp,0xc
100008c9:	c3                   	ret    

100008ca <drawCharacter(Video*, Region, int, int, unsigned int, char)>:
100008ca:	55                   	push   ebp
100008cb:	57                   	push   edi
100008cc:	56                   	push   esi
100008cd:	53                   	push   ebx
100008ce:	83 ec 3c             	sub    esp,0x3c
100008d1:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100008d5:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100008d9:	31 ff                	xor    edi,edi
100008db:	31 f6                	xor    esi,esi
100008dd:	0f be 44 24 7c       	movsx  eax,BYTE PTR [esp+0x7c]
100008e2:	89 c5                	mov    ebp,eax
100008e4:	39 74 24 5c          	cmp    DWORD PTR [esp+0x5c],esi
100008e8:	0f 8e 15 01 00 00    	jle    10000a03 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x139>
100008ee:	8b 44 24 74          	mov    eax,DWORD PTR [esp+0x74]
100008f2:	83 c0 0c             	add    eax,0xc
100008f5:	39 f0                	cmp    eax,esi
100008f7:	0f 8e 06 01 00 00    	jle    10000a03 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x139>
100008fd:	8d 04 bd 00 00 00 00 	lea    eax,[edi*4+0x0]
10000904:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
10000908:	8b 14 b9             	mov    edx,DWORD PTR [ecx+edi*4]
1000090b:	0f b7 ca             	movzx  ecx,dx
1000090e:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
10000912:	c1 ea 10             	shr    edx,0x10
10000915:	89 54 24 24          	mov    DWORD PTR [esp+0x24],edx
10000919:	8d 7c 0f 01          	lea    edi,[edi+ecx*1+0x1]
1000091d:	8d 0c 16             	lea    ecx,[esi+edx*1]
10000920:	89 4c 24 18          	mov    DWORD PTR [esp+0x18],ecx
10000924:	3b 4c 24 74          	cmp    ecx,DWORD PTR [esp+0x74]
10000928:	7d 06                	jge    10000930 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x66>
1000092a:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
1000092e:	eb b4                	jmp    100008e4 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x1a>
10000930:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10000934:	8d 44 03 04          	lea    eax,[ebx+eax*1+0x4]
10000938:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
1000093c:	31 db                	xor    ebx,ebx
1000093e:	c6 44 24 1f 00       	mov    BYTE PTR [esp+0x1f],0x0
10000943:	39 5c 24 58          	cmp    DWORD PTR [esp+0x58],ebx
10000947:	7e e1                	jle    1000092a <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x60>
10000949:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000094d:	39 18                	cmp    DWORD PTR [eax],ebx
1000094f:	75 0e                	jne    1000095f <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x95>
10000951:	83 44 24 10 04       	add    DWORD PTR [esp+0x10],0x4
10000956:	80 74 24 1f 01       	xor    BYTE PTR [esp+0x1f],0x1
1000095b:	ff 4c 24 0c          	dec    DWORD PTR [esp+0xc]
1000095f:	89 d9                	mov    ecx,ebx
10000961:	2b 4c 24 70          	sub    ecx,DWORD PTR [esp+0x70]
10000965:	83 f9 07             	cmp    ecx,0x7
10000968:	77 6d                	ja     100009d7 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x10d>
1000096a:	80 7c 24 1f 00       	cmp    BYTE PTR [esp+0x1f],0x0
1000096f:	74 66                	je     100009d7 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x10d>
10000971:	89 f0                	mov    eax,esi
10000973:	2b 44 24 74          	sub    eax,DWORD PTR [esp+0x74]
10000977:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
1000097b:	31 c0                	xor    eax,eax
1000097d:	3b 44 24 24          	cmp    eax,DWORD PTR [esp+0x24]
10000981:	7d 54                	jge    100009d7 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x10d>
10000983:	83 7c 24 14 0b       	cmp    DWORD PTR [esp+0x14],0xb
10000988:	77 46                	ja     100009d0 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x106>
1000098a:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000098e:	c1 e2 07             	shl    edx,0x7
10000991:	0f b6 94 2a 00 00 00 00 	movzx  edx,BYTE PTR [edx+ebp*1+0x0]	10000995: R_386_32	font_array
10000999:	d3 e2                	shl    edx,cl
1000099b:	80 e2 80             	and    dl,0x80
1000099e:	74 30                	je     100009d0 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x106>
100009a0:	89 4c 24 2c          	mov    DWORD PTR [esp+0x2c],ecx
100009a4:	ff 74 24 78          	push   DWORD PTR [esp+0x78]
100009a8:	8b 54 24 6c          	mov    edx,DWORD PTR [esp+0x6c]
100009ac:	01 f2                	add    edx,esi
100009ae:	01 c2                	add    edx,eax
100009b0:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100009b4:	52                   	push   edx
100009b5:	8b 54 24 6c          	mov    edx,DWORD PTR [esp+0x6c]
100009b9:	01 da                	add    edx,ebx
100009bb:	52                   	push   edx
100009bc:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
100009c0:	e8 fc ff ff ff       	call   100009c1 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0xf7>	100009c1: R_386_PC32	videoPutpixel(Video*, int, int, unsigned int)
100009c5:	83 c4 10             	add    esp,0x10
100009c8:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
100009cc:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
100009d0:	40                   	inc    eax
100009d1:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
100009d5:	eb a6                	jmp    1000097d <drawCharacter(Video*, Region, int, int, unsigned int, char)+0xb3>
100009d7:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
100009dc:	74 10                	je     100009ee <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x124>
100009de:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100009e2:	8b 00                	mov    eax,DWORD PTR [eax]
100009e4:	3b 44 24 70          	cmp    eax,DWORD PTR [esp+0x70]
100009e8:	73 04                	jae    100009ee <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x124>
100009ea:	89 c3                	mov    ebx,eax
100009ec:	eb 01                	jmp    100009ef <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x125>
100009ee:	43                   	inc    ebx
100009ef:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
100009f3:	83 c0 08             	add    eax,0x8
100009f6:	39 d8                	cmp    eax,ebx
100009f8:	0f 8d 45 ff ff ff    	jge    10000943 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x79>
100009fe:	e9 27 ff ff ff       	jmp    1000092a <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x60>
10000a03:	b8 08 00 0c 00       	mov    eax,0xc0008
10000a08:	83 c4 3c             	add    esp,0x3c
10000a0b:	5b                   	pop    ebx
10000a0c:	5e                   	pop    esi
10000a0d:	5f                   	pop    edi
10000a0e:	5d                   	pop    ebp
10000a0f:	c3                   	ret    

10000a10 <fillRegion(Video*, Region, unsigned int)>:
10000a10:	55                   	push   ebp
10000a11:	57                   	push   edi
10000a12:	56                   	push   esi
10000a13:	53                   	push   ebx
10000a14:	83 ec 2c             	sub    esp,0x2c
10000a17:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10000a1b:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000a1f:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000a23:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000a27:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
10000a2b:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000a2f:	31 ed                	xor    ebp,ebp
10000a31:	c7 44 24 08 00 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
10000a39:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000a3d:	39 44 24 4c          	cmp    DWORD PTR [esp+0x4c],eax
10000a41:	0f 8e b6 00 00 00    	jle    10000afd <fillRegion(Video*, Region, unsigned int)+0xed>
10000a47:	8d 45 01             	lea    eax,[ebp+0x1]
10000a4a:	8d 14 ad 00 00 00 00 	lea    edx,[ebp*4+0x0]
10000a51:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000a55:	8b 0c ae             	mov    ecx,DWORD PTR [esi+ebp*4]
10000a58:	83 f9 ff             	cmp    ecx,0xffffffff
10000a5b:	0f 84 9c 00 00 00    	je     10000afd <fillRegion(Video*, Region, unsigned int)+0xed>
10000a61:	0f b7 f1             	movzx  esi,cx
10000a64:	c1 e9 10             	shr    ecx,0x10
10000a67:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
10000a6b:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
10000a6f:	8d 7c 17 04          	lea    edi,[edi+edx*1+0x4]
10000a73:	8d 2c 30             	lea    ebp,[eax+esi*1]
10000a76:	31 db                	xor    ebx,ebx
10000a78:	c6 44 24 13 00       	mov    BYTE PTR [esp+0x13],0x0
10000a7d:	39 5c 24 48          	cmp    DWORD PTR [esp+0x48],ebx
10000a81:	7e 6d                	jle    10000af0 <fillRegion(Video*, Region, unsigned int)+0xe0>
10000a83:	39 1f                	cmp    DWORD PTR [edi],ebx
10000a85:	75 09                	jne    10000a90 <fillRegion(Video*, Region, unsigned int)+0x80>
10000a87:	83 c7 04             	add    edi,0x4
10000a8a:	80 74 24 13 01       	xor    BYTE PTR [esp+0x13],0x1
10000a8f:	4e                   	dec    esi
10000a90:	80 7c 24 13 00       	cmp    BYTE PTR [esp+0x13],0x0
10000a95:	74 55                	je     10000aec <fillRegion(Video*, Region, unsigned int)+0xdc>
10000a97:	8b 07                	mov    eax,DWORD PTR [edi]
10000a99:	29 d8                	sub    eax,ebx
10000a9b:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10000a9f:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
10000aa3:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10000aa7:	01 da                	add    edx,ebx
10000aa9:	80 7c 24 5c 00       	cmp    BYTE PTR [esp+0x5c],0x0
10000aae:	74 19                	je     10000ac9 <fillRegion(Video*, Region, unsigned int)+0xb9>
10000ab0:	83 ec 08             	sub    esp,0x8
10000ab3:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
10000ab7:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
10000abb:	50                   	push   eax
10000abc:	51                   	push   ecx
10000abd:	52                   	push   edx
10000abe:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
10000ac2:	e8 fc ff ff ff       	call   10000ac3 <fillRegion(Video*, Region, unsigned int)+0xb3>	10000ac3: R_386_PC32	videoDrawRectDotted(Video*, int, int, int, int, unsigned int)
10000ac7:	eb 17                	jmp    10000ae0 <fillRegion(Video*, Region, unsigned int)+0xd0>
10000ac9:	83 ec 08             	sub    esp,0x8
10000acc:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
10000ad0:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
10000ad4:	50                   	push   eax
10000ad5:	51                   	push   ecx
10000ad6:	52                   	push   edx
10000ad7:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
10000adb:	e8 fc ff ff ff       	call   10000adc <fillRegion(Video*, Region, unsigned int)+0xcc>	10000adc: R_386_PC32	videoDrawRect(Video*, int, int, int, int, unsigned int)
10000ae0:	83 c4 20             	add    esp,0x20
10000ae3:	43                   	inc    ebx
10000ae4:	85 f6                	test   esi,esi
10000ae6:	74 95                	je     10000a7d <fillRegion(Video*, Region, unsigned int)+0x6d>
10000ae8:	8b 1f                	mov    ebx,DWORD PTR [edi]
10000aea:	eb 91                	jmp    10000a7d <fillRegion(Video*, Region, unsigned int)+0x6d>
10000aec:	85 f6                	test   esi,esi
10000aee:	75 f8                	jne    10000ae8 <fillRegion(Video*, Region, unsigned int)+0xd8>
10000af0:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
10000af4:	01 5c 24 08          	add    DWORD PTR [esp+0x8],ebx
10000af8:	e9 3c ff ff ff       	jmp    10000a39 <fillRegion(Video*, Region, unsigned int)+0x29>
10000afd:	83 c4 2c             	add    esp,0x2c
10000b00:	5b                   	pop    ebx
10000b01:	5e                   	pop    esi
10000b02:	5f                   	pop    edi
10000b03:	5d                   	pop    ebp
10000b04:	c3                   	ret    

10000b05 <sqrt(double)>:
10000b05:	55                   	push   ebp
10000b06:	89 e5                	mov    ebp,esp
10000b08:	57                   	push   edi
10000b09:	56                   	push   esi
10000b0a:	53                   	push   ebx
10000b0b:	83 ec 0c             	sub    esp,0xc
10000b0e:	8d 45 e8             	lea    eax,[ebp-0x18]
10000b11:	8d 5d 08             	lea    ebx,[ebp+0x8]
10000b14:	ba 02 00 00 00       	mov    edx,0x2
10000b19:	89 c7                	mov    edi,eax
10000b1b:	89 de                	mov    esi,ebx
10000b1d:	89 d1                	mov    ecx,edx
10000b1f:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10000b21:	dd 45 e8             	fld    QWORD PTR [ebp-0x18]
10000b24:	dd 05 18 3e 00 10    	fld    QWORD PTR ds:0x10003e18	10000b26: R_386_32	.text
10000b2a:	de f9                	fdivp  st(1),st
10000b2c:	83 c4 0c             	add    esp,0xc
10000b2f:	5b                   	pop    ebx
10000b30:	5e                   	pop    esi
10000b31:	5f                   	pop    edi
10000b32:	5d                   	pop    ebp
10000b33:	c3                   	ret    

10000b34 <readUnaligned32(unsigned char*)>:
10000b34:	55                   	push   ebp
10000b35:	89 e5                	mov    ebp,esp
10000b37:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000b3a:	8b 00                	mov    eax,DWORD PTR [eax]
10000b3c:	5d                   	pop    ebp
10000b3d:	c3                   	ret    

10000b3e <writeUnaligned32(unsigned char*, unsigned int)>:
10000b3e:	55                   	push   ebp
10000b3f:	89 e5                	mov    ebp,esp
10000b41:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000b44:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
10000b47:	89 10                	mov    DWORD PTR [eax],edx
10000b49:	90                   	nop
10000b4a:	5d                   	pop    ebp
10000b4b:	c3                   	ret    

10000b4c <createTightCursorRegion(int, int, unsigned int*)>:
10000b4c:	55                   	push   ebp
10000b4d:	89 e5                	mov    ebp,esp
10000b4f:	83 ec 78             	sub    esp,0x78
10000b52:	83 ec 0c             	sub    esp,0xc
10000b55:	6a 20                	push   0x20
10000b57:	6a 20                	push   0x20
10000b59:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10000b5c:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10000b5f:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000b62:	e8 fc ff ff ff       	call   10000b63 <createTightCursorRegion(int, int, unsigned int*)+0x17>	10000b63: R_386_PC32	Region::Region(int, int, int, int)
10000b67:	83 c4 20             	add    esp,0x20
10000b6a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000b6d:	c7 40 0c 84 08 00 00 	mov    DWORD PTR [eax+0xc],0x884
10000b74:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000b77:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000b7a:	83 ec 0c             	sub    esp,0xc
10000b7d:	50                   	push   eax
10000b7e:	e8 fc ff ff ff       	call   10000b7f <createTightCursorRegion(int, int, unsigned int*)+0x33>	10000b7f: R_386_PC32	malloc
10000b83:	83 c4 10             	add    esp,0x10
10000b86:	89 c2                	mov    edx,eax
10000b88:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000b8b:	89 10                	mov    DWORD PTR [eax],edx
10000b8d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000b90:	8b 00                	mov    eax,DWORD PTR [eax]
10000b92:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10000b95:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000b9c:	83 7d f0 1f          	cmp    DWORD PTR [ebp-0x10],0x1f
10000ba0:	0f 8f ed 00 00 00    	jg     10000c93 <createTightCursorRegion(int, int, unsigned int*)+0x147>
10000ba6:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000ba9:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10000bb0:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000bb3:	01 d0                	add    eax,edx
10000bb5:	8b 00                	mov    eax,DWORD PTR [eax]
10000bb7:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000bba:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000bbd:	83 c0 20             	add    eax,0x20
10000bc0:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10000bc7:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000bca:	01 d0                	add    eax,edx
10000bcc:	8b 00                	mov    eax,DWORD PTR [eax]
10000bce:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
10000bd1:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10000bd8:	c6 45 e3 00          	mov    BYTE PTR [ebp-0x1d],0x0
10000bdc:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [ebp-0x24],0x0
10000be3:	83 7d dc 1f          	cmp    DWORD PTR [ebp-0x24],0x1f
10000be7:	7f 46                	jg     10000c2f <createTightCursorRegion(int, int, unsigned int*)+0xe3>
10000be9:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
10000bec:	83 e0 01             	and    eax,0x1
10000bef:	85 c0                	test   eax,eax
10000bf1:	75 0a                	jne    10000bfd <createTightCursorRegion(int, int, unsigned int*)+0xb1>
10000bf3:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000bf6:	83 e0 01             	and    eax,0x1
10000bf9:	85 c0                	test   eax,eax
10000bfb:	74 04                	je     10000c01 <createTightCursorRegion(int, int, unsigned int*)+0xb5>
10000bfd:	b0 01                	mov    al,0x1
10000bff:	eb 02                	jmp    10000c03 <createTightCursorRegion(int, int, unsigned int*)+0xb7>
10000c01:	b0 00                	mov    al,0x0
10000c03:	88 45 d7             	mov    BYTE PTR [ebp-0x29],al
10000c06:	8a 45 e3             	mov    al,BYTE PTR [ebp-0x1d]
10000c09:	3a 45 d7             	cmp    al,BYTE PTR [ebp-0x29]
10000c0c:	74 16                	je     10000c24 <createTightCursorRegion(int, int, unsigned int*)+0xd8>
10000c0e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000c11:	8d 50 01             	lea    edx,[eax+0x1]
10000c14:	89 55 e4             	mov    DWORD PTR [ebp-0x1c],edx
10000c17:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10000c1a:	89 54 85 94          	mov    DWORD PTR [ebp+eax*4-0x6c],edx
10000c1e:	8a 45 d7             	mov    al,BYTE PTR [ebp-0x29]
10000c21:	88 45 e3             	mov    BYTE PTR [ebp-0x1d],al
10000c24:	d1 6d e8             	shr    DWORD PTR [ebp-0x18],1
10000c27:	d1 6d ec             	shr    DWORD PTR [ebp-0x14],1
10000c2a:	ff 45 dc             	inc    DWORD PTR [ebp-0x24]
10000c2d:	eb b4                	jmp    10000be3 <createTightCursorRegion(int, int, unsigned int*)+0x97>
10000c2f:	80 7d e3 00          	cmp    BYTE PTR [ebp-0x1d],0x0
10000c33:	74 11                	je     10000c46 <createTightCursorRegion(int, int, unsigned int*)+0xfa>
10000c35:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000c38:	8d 50 01             	lea    edx,[eax+0x1]
10000c3b:	89 55 e4             	mov    DWORD PTR [ebp-0x1c],edx
10000c3e:	c7 44 85 94 20 00 00 00 	mov    DWORD PTR [ebp+eax*4-0x6c],0x20
10000c46:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000c49:	0d 00 00 01 00       	or     eax,0x10000
10000c4e:	89 c1                	mov    ecx,eax
10000c50:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000c53:	8d 50 04             	lea    edx,[eax+0x4]
10000c56:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10000c59:	89 ca                	mov    edx,ecx
10000c5b:	89 10                	mov    DWORD PTR [eax],edx
10000c5d:	c7 45 d8 00 00 00 00 	mov    DWORD PTR [ebp-0x28],0x0
10000c64:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10000c67:	3b 45 e4             	cmp    eax,DWORD PTR [ebp-0x1c]
10000c6a:	7d 19                	jge    10000c85 <createTightCursorRegion(int, int, unsigned int*)+0x139>
10000c6c:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10000c6f:	8b 4c 85 94          	mov    ecx,DWORD PTR [ebp+eax*4-0x6c]
10000c73:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000c76:	8d 50 04             	lea    edx,[eax+0x4]
10000c79:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10000c7c:	89 ca                	mov    edx,ecx
10000c7e:	89 10                	mov    DWORD PTR [eax],edx
10000c80:	ff 45 d8             	inc    DWORD PTR [ebp-0x28]
10000c83:	eb df                	jmp    10000c64 <createTightCursorRegion(int, int, unsigned int*)+0x118>
10000c85:	d1 6d e8             	shr    DWORD PTR [ebp-0x18],1
10000c88:	d1 6d ec             	shr    DWORD PTR [ebp-0x14],1
10000c8b:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000c8e:	e9 09 ff ff ff       	jmp    10000b9c <createTightCursorRegion(int, int, unsigned int*)+0x50>
10000c93:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000c96:	8d 50 04             	lea    edx,[eax+0x4]
10000c99:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10000c9c:	c7 00 ff ff ff ff    	mov    DWORD PTR [eax],0xffffffff
10000ca2:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10000ca5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000ca8:	8b 00                	mov    eax,DWORD PTR [eax]
10000caa:	29 c2                	sub    edx,eax
10000cac:	89 d0                	mov    eax,edx
10000cae:	89 c2                	mov    edx,eax
10000cb0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000cb3:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
10000cb6:	90                   	nop
10000cb7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000cba:	c9                   	leave  
10000cbb:	c2 04 00             	ret    0x4

10000cbe <createEllipseRegion(int, int, int, int)>:
10000cbe:	55                   	push   ebp
10000cbf:	89 e5                	mov    ebp,esp
10000cc1:	83 ec 38             	sub    esp,0x38
10000cc4:	83 ec 0c             	sub    esp,0xc
10000cc7:	ff 75 18             	push   DWORD PTR [ebp+0x18]
10000cca:	ff 75 14             	push   DWORD PTR [ebp+0x14]
10000ccd:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10000cd0:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10000cd3:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000cd6:	e8 fc ff ff ff       	call   10000cd7 <createEllipseRegion(int, int, int, int)+0x19>	10000cd7: R_386_PC32	Region::Region(int, int, int, int)
10000cdb:	83 c4 20             	add    esp,0x20
10000cde:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10000ce1:	6b c0 0c             	imul   eax,eax,0xc
10000ce4:	8d 50 04             	lea    edx,[eax+0x4]
10000ce7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000cea:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
10000ced:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000cf0:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000cf3:	83 ec 0c             	sub    esp,0xc
10000cf6:	50                   	push   eax
10000cf7:	e8 fc ff ff ff       	call   10000cf8 <createEllipseRegion(int, int, int, int)+0x3a>	10000cf8: R_386_PC32	malloc
10000cfc:	83 c4 10             	add    esp,0x10
10000cff:	89 c2                	mov    edx,eax
10000d01:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000d04:	89 10                	mov    DWORD PTR [eax],edx
10000d06:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000d09:	8b 00                	mov    eax,DWORD PTR [eax]
10000d0b:	85 c0                	test   eax,eax
10000d0d:	75 10                	jne    10000d1f <createEllipseRegion(int, int, int, int)+0x61>
10000d0f:	83 ec 0c             	sub    esp,0xc
10000d12:	68 10 3e 00 10       	push   0x10003e10	10000d13: R_386_32	.text
10000d17:	e8 fc ff ff ff       	call   10000d18 <createEllipseRegion(int, int, int, int)+0x5a>	10000d18: R_386_PC32	KePanic(char const*)
10000d1c:	83 c4 10             	add    esp,0x10
10000d1f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000d22:	8b 00                	mov    eax,DWORD PTR [eax]
10000d24:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10000d27:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000d2e:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000d31:	3b 45 18             	cmp    eax,DWORD PTR [ebp+0x18]
10000d34:	0f 8d a5 00 00 00    	jge    10000ddf <createEllipseRegion(int, int, int, int)+0x121>
10000d3a:	db 45 f0             	fild   DWORD PTR [ebp-0x10]
10000d3d:	d9 c0                	fld    st(0)
10000d3f:	de c1                	faddp  st(1),st
10000d41:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10000d44:	48                   	dec    eax
10000d45:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10000d48:	db 45 d0             	fild   DWORD PTR [ebp-0x30]
10000d4b:	de f9                	fdivp  st(1),st
10000d4d:	d9 e8                	fld1   
10000d4f:	de e1                	fsubrp st(1),st
10000d51:	dd 5d e8             	fstp   QWORD PTR [ebp-0x18]
10000d54:	dd 45 e8             	fld    QWORD PTR [ebp-0x18]
10000d57:	dc 4d e8             	fmul   QWORD PTR [ebp-0x18]
10000d5a:	d9 e8                	fld1   
10000d5c:	de e1                	fsubrp st(1),st
10000d5e:	83 ec 08             	sub    esp,0x8
10000d61:	8d 64 24 f8          	lea    esp,[esp-0x8]
10000d65:	dd 1c 24             	fstp   QWORD PTR [esp]
10000d68:	e8 fc ff ff ff       	call   10000d69 <createEllipseRegion(int, int, int, int)+0xab>	10000d69: R_386_PC32	sqrt(double)
10000d6d:	83 c4 10             	add    esp,0x10
10000d70:	db 45 14             	fild   DWORD PTR [ebp+0x14]
10000d73:	de c9                	fmulp  st(1),st
10000d75:	dd 5d e0             	fstp   QWORD PTR [ebp-0x20]
10000d78:	db 45 14             	fild   DWORD PTR [ebp+0x14]
10000d7b:	dc 65 e0             	fsub   QWORD PTR [ebp-0x20]
10000d7e:	dd 05 20 3e 00 10    	fld    QWORD PTR ds:0x10003e20	10000d80: R_386_32	.text
10000d84:	de f9                	fdivp  st(1),st
10000d86:	d9 7d d6             	fnstcw WORD PTR [ebp-0x2a]
10000d89:	66 8b 45 d6          	mov    ax,WORD PTR [ebp-0x2a]
10000d8d:	80 cc 0c             	or     ah,0xc
10000d90:	66 89 45 d4          	mov    WORD PTR [ebp-0x2c],ax
10000d94:	d9 6d d4             	fldcw  WORD PTR [ebp-0x2c]
10000d97:	db 5d dc             	fistp  DWORD PTR [ebp-0x24]
10000d9a:	d9 6d d6             	fldcw  WORD PTR [ebp-0x2a]
10000d9d:	db 45 dc             	fild   DWORD PTR [ebp-0x24]
10000da0:	dc 45 e0             	fadd   QWORD PTR [ebp-0x20]
10000da3:	d9 6d d4             	fldcw  WORD PTR [ebp-0x2c]
10000da6:	db 5d d8             	fistp  DWORD PTR [ebp-0x28]
10000da9:	d9 6d d6             	fldcw  WORD PTR [ebp-0x2a]
10000dac:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000daf:	8d 50 04             	lea    edx,[eax+0x4]
10000db2:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10000db5:	c7 00 02 00 01 00    	mov    DWORD PTR [eax],0x10002
10000dbb:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000dbe:	8d 50 04             	lea    edx,[eax+0x4]
10000dc1:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10000dc4:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10000dc7:	89 10                	mov    DWORD PTR [eax],edx
10000dc9:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000dcc:	8d 50 04             	lea    edx,[eax+0x4]
10000dcf:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10000dd2:	8b 55 d8             	mov    edx,DWORD PTR [ebp-0x28]
10000dd5:	89 10                	mov    DWORD PTR [eax],edx
10000dd7:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000dda:	e9 4f ff ff ff       	jmp    10000d2e <createEllipseRegion(int, int, int, int)+0x70>
10000ddf:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000de2:	8d 50 04             	lea    edx,[eax+0x4]
10000de5:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10000de8:	c7 00 ff ff ff ff    	mov    DWORD PTR [eax],0xffffffff
10000dee:	90                   	nop
10000def:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000df2:	c9                   	leave  
10000df3:	c2 04 00             	ret    0x4

10000df6 <createPolygonRegion(int*, int*, int)>:
10000df6:	55                   	push   ebp
10000df7:	89 e5                	mov    ebp,esp
10000df9:	83 ec 28             	sub    esp,0x28
10000dfc:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000dff:	8b 00                	mov    eax,DWORD PTR [eax]
10000e01:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10000e04:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000e07:	8b 00                	mov    eax,DWORD PTR [eax]
10000e09:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000e0c:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000e0f:	8b 00                	mov    eax,DWORD PTR [eax]
10000e11:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000e14:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000e17:	8b 00                	mov    eax,DWORD PTR [eax]
10000e19:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
10000e1c:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10000e23:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000e26:	3b 45 14             	cmp    eax,DWORD PTR [ebp+0x14]
10000e29:	0f 8d b0 00 00 00    	jge    10000edf <createPolygonRegion(int*, int*, int)+0xe9>
10000e2f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000e32:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10000e39:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000e3c:	01 d0                	add    eax,edx
10000e3e:	8b 00                	mov    eax,DWORD PTR [eax]
10000e40:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
10000e43:	7e 14                	jle    10000e59 <createPolygonRegion(int*, int*, int)+0x63>
10000e45:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000e48:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10000e4f:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000e52:	01 d0                	add    eax,edx
10000e54:	8b 00                	mov    eax,DWORD PTR [eax]
10000e56:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10000e59:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000e5c:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10000e63:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000e66:	01 d0                	add    eax,edx
10000e68:	8b 00                	mov    eax,DWORD PTR [eax]
10000e6a:	39 45 f0             	cmp    DWORD PTR [ebp-0x10],eax
10000e6d:	7e 14                	jle    10000e83 <createPolygonRegion(int*, int*, int)+0x8d>
10000e6f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000e72:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10000e79:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000e7c:	01 d0                	add    eax,edx
10000e7e:	8b 00                	mov    eax,DWORD PTR [eax]
10000e80:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10000e83:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000e86:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10000e8d:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000e90:	01 d0                	add    eax,edx
10000e92:	8b 00                	mov    eax,DWORD PTR [eax]
10000e94:	39 45 ec             	cmp    DWORD PTR [ebp-0x14],eax
10000e97:	7d 14                	jge    10000ead <createPolygonRegion(int*, int*, int)+0xb7>
10000e99:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000e9c:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10000ea3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000ea6:	01 d0                	add    eax,edx
10000ea8:	8b 00                	mov    eax,DWORD PTR [eax]
10000eaa:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000ead:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000eb0:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10000eb7:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000eba:	01 d0                	add    eax,edx
10000ebc:	8b 00                	mov    eax,DWORD PTR [eax]
10000ebe:	39 45 e8             	cmp    DWORD PTR [ebp-0x18],eax
10000ec1:	7d 14                	jge    10000ed7 <createPolygonRegion(int*, int*, int)+0xe1>
10000ec3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000ec6:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10000ecd:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000ed0:	01 d0                	add    eax,edx
10000ed2:	8b 00                	mov    eax,DWORD PTR [eax]
10000ed4:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
10000ed7:	ff 45 e4             	inc    DWORD PTR [ebp-0x1c]
10000eda:	e9 44 ff ff ff       	jmp    10000e23 <createPolygonRegion(int*, int*, int)+0x2d>
10000edf:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000ee2:	2b 45 f4             	sub    eax,DWORD PTR [ebp-0xc]
10000ee5:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10000ee8:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
10000eeb:	2b 45 f0             	sub    eax,DWORD PTR [ebp-0x10]
10000eee:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10000ef1:	83 ec 0c             	sub    esp,0xc
10000ef4:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
10000ef7:	ff 75 e0             	push   DWORD PTR [ebp-0x20]
10000efa:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000efd:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000f00:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000f03:	e8 fc ff ff ff       	call   10000f04 <createPolygonRegion(int*, int*, int)+0x10e>	10000f04: R_386_PC32	Region::Region(int, int, int, int)
10000f08:	83 c4 20             	add    esp,0x20
10000f0b:	90                   	nop
10000f0c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000f0f:	c9                   	leave  
10000f10:	c2 04 00             	ret    0x4

10000f13 <createSlowRoundedRectangleRegion(int, int, int, int, int)>:
10000f13:	55                   	push   ebp
10000f14:	89 e5                	mov    ebp,esp
10000f16:	57                   	push   edi
10000f17:	56                   	push   esi
10000f18:	53                   	push   ebx
10000f19:	81 ec 3c 01 00 00    	sub    esp,0x13c
10000f1f:	8d 45 cc             	lea    eax,[ebp-0x34]
10000f22:	83 ec 0c             	sub    esp,0xc
10000f25:	ff 75 18             	push   DWORD PTR [ebp+0x18]
10000f28:	ff 75 14             	push   DWORD PTR [ebp+0x14]
10000f2b:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10000f2e:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10000f31:	50                   	push   eax
10000f32:	e8 fc ff ff ff       	call   10000f33 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x20>	10000f33: R_386_PC32	createRectangleRegion(int, int, int, int)
10000f37:	83 c4 1c             	add    esp,0x1c
10000f3a:	8d 45 b0             	lea    eax,[ebp-0x50]
10000f3d:	83 ec 0c             	sub    esp,0xc
10000f40:	ff 75 1c             	push   DWORD PTR [ebp+0x1c]
10000f43:	ff 75 1c             	push   DWORD PTR [ebp+0x1c]
10000f46:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10000f49:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10000f4c:	50                   	push   eax
10000f4d:	e8 fc ff ff ff       	call   10000f4e <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x3b>	10000f4e: R_386_PC32	createRectangleRegion(int, int, int, int)
10000f52:	83 c4 1c             	add    esp,0x1c
10000f55:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10000f58:	01 c0                	add    eax,eax
10000f5a:	89 c1                	mov    ecx,eax
10000f5c:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10000f5f:	01 c0                	add    eax,eax
10000f61:	89 c2                	mov    edx,eax
10000f63:	8d 45 94             	lea    eax,[ebp-0x6c]
10000f66:	83 ec 0c             	sub    esp,0xc
10000f69:	51                   	push   ecx
10000f6a:	52                   	push   edx
10000f6b:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10000f6e:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10000f71:	50                   	push   eax
10000f72:	e8 fc ff ff ff       	call   10000f73 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x60>	10000f73: R_386_PC32	createEllipseRegion(int, int, int, int)
10000f77:	83 c4 1c             	add    esp,0x1c
10000f7a:	8d 85 78 ff ff ff    	lea    eax,[ebp-0x88]
10000f80:	89 85 c4 fe ff ff    	mov    DWORD PTR [ebp-0x13c],eax
10000f86:	83 ec 04             	sub    esp,0x4
10000f89:	83 ec 1c             	sub    esp,0x1c
10000f8c:	89 e0                	mov    eax,esp
10000f8e:	89 c3                	mov    ebx,eax
10000f90:	8d 45 b0             	lea    eax,[ebp-0x50]
10000f93:	ba 07 00 00 00       	mov    edx,0x7
10000f98:	89 df                	mov    edi,ebx
10000f9a:	89 c6                	mov    esi,eax
10000f9c:	89 d1                	mov    ecx,edx
10000f9e:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10000fa0:	83 ec 1c             	sub    esp,0x1c
10000fa3:	89 e0                	mov    eax,esp
10000fa5:	89 c3                	mov    ebx,eax
10000fa7:	8d 45 cc             	lea    eax,[ebp-0x34]
10000faa:	ba 07 00 00 00       	mov    edx,0x7
10000faf:	89 df                	mov    edi,ebx
10000fb1:	89 c6                	mov    esi,eax
10000fb3:	89 d1                	mov    ecx,edx
10000fb5:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10000fb7:	ff b5 c4 fe ff ff    	push   DWORD PTR [ebp-0x13c]
10000fbd:	e8 fc ff ff ff       	call   10000fbe <createSlowRoundedRectangleRegion(int, int, int, int, int)+0xab>	10000fbe: R_386_PC32	getRegionDifference(Region, Region)
10000fc2:	83 c4 3c             	add    esp,0x3c
10000fc5:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
10000fc8:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000fcb:	2b 45 1c             	sub    eax,DWORD PTR [ebp+0x1c]
10000fce:	01 d0                	add    eax,edx
10000fd0:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
10000fd3:	8d 85 5c ff ff ff    	lea    eax,[ebp-0xa4]
10000fd9:	89 85 c4 fe ff ff    	mov    DWORD PTR [ebp-0x13c],eax
10000fdf:	83 ec 04             	sub    esp,0x4
10000fe2:	83 ec 1c             	sub    esp,0x1c
10000fe5:	89 e0                	mov    eax,esp
10000fe7:	89 c3                	mov    ebx,eax
10000fe9:	8d 45 b0             	lea    eax,[ebp-0x50]
10000fec:	ba 07 00 00 00       	mov    edx,0x7
10000ff1:	89 df                	mov    edi,ebx
10000ff3:	89 c6                	mov    esi,eax
10000ff5:	89 d1                	mov    ecx,edx
10000ff7:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10000ff9:	83 ec 1c             	sub    esp,0x1c
10000ffc:	89 e0                	mov    eax,esp
10000ffe:	89 c3                	mov    ebx,eax
10001000:	8d 85 78 ff ff ff    	lea    eax,[ebp-0x88]
10001006:	ba 07 00 00 00       	mov    edx,0x7
1000100b:	89 df                	mov    edi,ebx
1000100d:	89 c6                	mov    esi,eax
1000100f:	89 d1                	mov    ecx,edx
10001011:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001013:	ff b5 c4 fe ff ff    	push   DWORD PTR [ebp-0x13c]
10001019:	e8 fc ff ff ff       	call   1000101a <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x107>	1000101a: R_386_PC32	getRegionDifference(Region, Region)
1000101e:	83 c4 3c             	add    esp,0x3c
10001021:	8b 55 c4             	mov    edx,DWORD PTR [ebp-0x3c]
10001024:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001027:	2b 45 1c             	sub    eax,DWORD PTR [ebp+0x1c]
1000102a:	01 d0                	add    eax,edx
1000102c:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000102f:	8d 85 40 ff ff ff    	lea    eax,[ebp-0xc0]
10001035:	89 85 c4 fe ff ff    	mov    DWORD PTR [ebp-0x13c],eax
1000103b:	83 ec 04             	sub    esp,0x4
1000103e:	83 ec 1c             	sub    esp,0x1c
10001041:	89 e0                	mov    eax,esp
10001043:	89 c3                	mov    ebx,eax
10001045:	8d 45 b0             	lea    eax,[ebp-0x50]
10001048:	ba 07 00 00 00       	mov    edx,0x7
1000104d:	89 df                	mov    edi,ebx
1000104f:	89 c6                	mov    esi,eax
10001051:	89 d1                	mov    ecx,edx
10001053:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001055:	83 ec 1c             	sub    esp,0x1c
10001058:	89 e0                	mov    eax,esp
1000105a:	89 c3                	mov    ebx,eax
1000105c:	8d 85 5c ff ff ff    	lea    eax,[ebp-0xa4]
10001062:	ba 07 00 00 00       	mov    edx,0x7
10001067:	89 df                	mov    edi,ebx
10001069:	89 c6                	mov    esi,eax
1000106b:	89 d1                	mov    ecx,edx
1000106d:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000106f:	ff b5 c4 fe ff ff    	push   DWORD PTR [ebp-0x13c]
10001075:	e8 fc ff ff ff       	call   10001076 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x163>	10001076: R_386_PC32	getRegionDifference(Region, Region)
1000107a:	83 c4 3c             	add    esp,0x3c
1000107d:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
10001080:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10001083:	2b 45 1c             	sub    eax,DWORD PTR [ebp+0x1c]
10001086:	29 c2                	sub    edx,eax
10001088:	89 d0                	mov    eax,edx
1000108a:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
1000108d:	8d 85 24 ff ff ff    	lea    eax,[ebp-0xdc]
10001093:	89 85 c4 fe ff ff    	mov    DWORD PTR [ebp-0x13c],eax
10001099:	83 ec 04             	sub    esp,0x4
1000109c:	83 ec 1c             	sub    esp,0x1c
1000109f:	89 e0                	mov    eax,esp
100010a1:	89 c3                	mov    ebx,eax
100010a3:	8d 45 b0             	lea    eax,[ebp-0x50]
100010a6:	ba 07 00 00 00       	mov    edx,0x7
100010ab:	89 df                	mov    edi,ebx
100010ad:	89 c6                	mov    esi,eax
100010af:	89 d1                	mov    ecx,edx
100010b1:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100010b3:	83 ec 1c             	sub    esp,0x1c
100010b6:	89 e0                	mov    eax,esp
100010b8:	89 c3                	mov    ebx,eax
100010ba:	8d 85 40 ff ff ff    	lea    eax,[ebp-0xc0]
100010c0:	ba 07 00 00 00       	mov    edx,0x7
100010c5:	89 df                	mov    edi,ebx
100010c7:	89 c6                	mov    esi,eax
100010c9:	89 d1                	mov    ecx,edx
100010cb:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100010cd:	ff b5 c4 fe ff ff    	push   DWORD PTR [ebp-0x13c]
100010d3:	e8 fc ff ff ff       	call   100010d4 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x1c1>	100010d4: R_386_PC32	getRegionDifference(Region, Region)
100010d8:	83 c4 3c             	add    esp,0x3c
100010db:	8d 85 08 ff ff ff    	lea    eax,[ebp-0xf8]
100010e1:	89 85 c4 fe ff ff    	mov    DWORD PTR [ebp-0x13c],eax
100010e7:	83 ec 04             	sub    esp,0x4
100010ea:	83 ec 1c             	sub    esp,0x1c
100010ed:	89 e0                	mov    eax,esp
100010ef:	89 c3                	mov    ebx,eax
100010f1:	8d 45 94             	lea    eax,[ebp-0x6c]
100010f4:	ba 07 00 00 00       	mov    edx,0x7
100010f9:	89 df                	mov    edi,ebx
100010fb:	89 c6                	mov    esi,eax
100010fd:	89 d1                	mov    ecx,edx
100010ff:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001101:	83 ec 1c             	sub    esp,0x1c
10001104:	89 e0                	mov    eax,esp
10001106:	89 c3                	mov    ebx,eax
10001108:	8d 85 24 ff ff ff    	lea    eax,[ebp-0xdc]
1000110e:	ba 07 00 00 00       	mov    edx,0x7
10001113:	89 df                	mov    edi,ebx
10001115:	89 c6                	mov    esi,eax
10001117:	89 d1                	mov    ecx,edx
10001119:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000111b:	ff b5 c4 fe ff ff    	push   DWORD PTR [ebp-0x13c]
10001121:	e8 fc ff ff ff       	call   10001122 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x20f>	10001122: R_386_PC32	getRegionUnion(Region, Region)
10001126:	83 c4 3c             	add    esp,0x3c
10001129:	8b 55 a4             	mov    edx,DWORD PTR [ebp-0x5c]
1000112c:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
1000112f:	01 c0                	add    eax,eax
10001131:	89 c1                	mov    ecx,eax
10001133:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10001136:	29 c8                	sub    eax,ecx
10001138:	01 d0                	add    eax,edx
1000113a:	89 45 a4             	mov    DWORD PTR [ebp-0x5c],eax
1000113d:	8d 85 ec fe ff ff    	lea    eax,[ebp-0x114]
10001143:	89 85 c4 fe ff ff    	mov    DWORD PTR [ebp-0x13c],eax
10001149:	83 ec 04             	sub    esp,0x4
1000114c:	83 ec 1c             	sub    esp,0x1c
1000114f:	89 e0                	mov    eax,esp
10001151:	89 c3                	mov    ebx,eax
10001153:	8d 45 94             	lea    eax,[ebp-0x6c]
10001156:	ba 07 00 00 00       	mov    edx,0x7
1000115b:	89 df                	mov    edi,ebx
1000115d:	89 c6                	mov    esi,eax
1000115f:	89 d1                	mov    ecx,edx
10001161:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001163:	83 ec 1c             	sub    esp,0x1c
10001166:	89 e0                	mov    eax,esp
10001168:	89 c3                	mov    ebx,eax
1000116a:	8d 85 08 ff ff ff    	lea    eax,[ebp-0xf8]
10001170:	ba 07 00 00 00       	mov    edx,0x7
10001175:	89 df                	mov    edi,ebx
10001177:	89 c6                	mov    esi,eax
10001179:	89 d1                	mov    ecx,edx
1000117b:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000117d:	ff b5 c4 fe ff ff    	push   DWORD PTR [ebp-0x13c]
10001183:	e8 fc ff ff ff       	call   10001184 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x271>	10001184: R_386_PC32	getRegionUnion(Region, Region)
10001188:	83 c4 3c             	add    esp,0x3c
1000118b:	8b 55 a8             	mov    edx,DWORD PTR [ebp-0x58]
1000118e:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10001191:	01 c0                	add    eax,eax
10001193:	89 c1                	mov    ecx,eax
10001195:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001198:	29 c8                	sub    eax,ecx
1000119a:	01 d0                	add    eax,edx
1000119c:	89 45 a8             	mov    DWORD PTR [ebp-0x58],eax
1000119f:	8d 85 d0 fe ff ff    	lea    eax,[ebp-0x130]
100011a5:	89 85 c4 fe ff ff    	mov    DWORD PTR [ebp-0x13c],eax
100011ab:	83 ec 04             	sub    esp,0x4
100011ae:	83 ec 1c             	sub    esp,0x1c
100011b1:	89 e0                	mov    eax,esp
100011b3:	89 c3                	mov    ebx,eax
100011b5:	8d 45 94             	lea    eax,[ebp-0x6c]
100011b8:	ba 07 00 00 00       	mov    edx,0x7
100011bd:	89 df                	mov    edi,ebx
100011bf:	89 c6                	mov    esi,eax
100011c1:	89 d1                	mov    ecx,edx
100011c3:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100011c5:	83 ec 1c             	sub    esp,0x1c
100011c8:	89 e0                	mov    eax,esp
100011ca:	89 c3                	mov    ebx,eax
100011cc:	8d 85 ec fe ff ff    	lea    eax,[ebp-0x114]
100011d2:	ba 07 00 00 00       	mov    edx,0x7
100011d7:	89 df                	mov    edi,ebx
100011d9:	89 c6                	mov    esi,eax
100011db:	89 d1                	mov    ecx,edx
100011dd:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100011df:	ff b5 c4 fe ff ff    	push   DWORD PTR [ebp-0x13c]
100011e5:	e8 fc ff ff ff       	call   100011e6 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x2d3>	100011e6: R_386_PC32	getRegionUnion(Region, Region)
100011ea:	83 c4 3c             	add    esp,0x3c
100011ed:	8b 55 a4             	mov    edx,DWORD PTR [ebp-0x5c]
100011f0:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
100011f3:	01 c0                	add    eax,eax
100011f5:	89 c1                	mov    ecx,eax
100011f7:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
100011fa:	29 c8                	sub    eax,ecx
100011fc:	29 c2                	sub    edx,eax
100011fe:	89 d0                	mov    eax,edx
10001200:	89 45 a4             	mov    DWORD PTR [ebp-0x5c],eax
10001203:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001206:	89 85 c4 fe ff ff    	mov    DWORD PTR [ebp-0x13c],eax
1000120c:	83 ec 04             	sub    esp,0x4
1000120f:	83 ec 1c             	sub    esp,0x1c
10001212:	89 e0                	mov    eax,esp
10001214:	89 c3                	mov    ebx,eax
10001216:	8d 45 94             	lea    eax,[ebp-0x6c]
10001219:	ba 07 00 00 00       	mov    edx,0x7
1000121e:	89 df                	mov    edi,ebx
10001220:	89 c6                	mov    esi,eax
10001222:	89 d1                	mov    ecx,edx
10001224:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001226:	83 ec 1c             	sub    esp,0x1c
10001229:	89 e0                	mov    eax,esp
1000122b:	89 c3                	mov    ebx,eax
1000122d:	8d 85 d0 fe ff ff    	lea    eax,[ebp-0x130]
10001233:	ba 07 00 00 00       	mov    edx,0x7
10001238:	89 df                	mov    edi,ebx
1000123a:	89 c6                	mov    esi,eax
1000123c:	89 d1                	mov    ecx,edx
1000123e:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001240:	ff b5 c4 fe ff ff    	push   DWORD PTR [ebp-0x13c]
10001246:	e8 fc ff ff ff       	call   10001247 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x334>	10001247: R_386_PC32	getRegionUnion(Region, Region)
1000124b:	83 c4 3c             	add    esp,0x3c
1000124e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10001251:	83 ec 0c             	sub    esp,0xc
10001254:	50                   	push   eax
10001255:	e8 fc ff ff ff       	call   10001256 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x343>	10001256: R_386_PC32	free
1000125a:	83 c4 10             	add    esp,0x10
1000125d:	8b 45 b0             	mov    eax,DWORD PTR [ebp-0x50]
10001260:	83 ec 0c             	sub    esp,0xc
10001263:	50                   	push   eax
10001264:	e8 fc ff ff ff       	call   10001265 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x352>	10001265: R_386_PC32	free
10001269:	83 c4 10             	add    esp,0x10
1000126c:	8b 45 94             	mov    eax,DWORD PTR [ebp-0x6c]
1000126f:	83 ec 0c             	sub    esp,0xc
10001272:	50                   	push   eax
10001273:	e8 fc ff ff ff       	call   10001274 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x361>	10001274: R_386_PC32	free
10001278:	83 c4 10             	add    esp,0x10
1000127b:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [ebp-0x88]
10001281:	83 ec 0c             	sub    esp,0xc
10001284:	50                   	push   eax
10001285:	e8 fc ff ff ff       	call   10001286 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x373>	10001286: R_386_PC32	free
1000128a:	83 c4 10             	add    esp,0x10
1000128d:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
10001293:	83 ec 0c             	sub    esp,0xc
10001296:	50                   	push   eax
10001297:	e8 fc ff ff ff       	call   10001298 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x385>	10001298: R_386_PC32	free
1000129c:	83 c4 10             	add    esp,0x10
1000129f:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
100012a5:	83 ec 0c             	sub    esp,0xc
100012a8:	50                   	push   eax
100012a9:	e8 fc ff ff ff       	call   100012aa <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x397>	100012aa: R_386_PC32	free
100012ae:	83 c4 10             	add    esp,0x10
100012b1:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
100012b7:	83 ec 0c             	sub    esp,0xc
100012ba:	50                   	push   eax
100012bb:	e8 fc ff ff ff       	call   100012bc <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x3a9>	100012bc: R_386_PC32	free
100012c0:	83 c4 10             	add    esp,0x10
100012c3:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [ebp-0xf8]
100012c9:	83 ec 0c             	sub    esp,0xc
100012cc:	50                   	push   eax
100012cd:	e8 fc ff ff ff       	call   100012ce <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x3bb>	100012ce: R_386_PC32	free
100012d2:	83 c4 10             	add    esp,0x10
100012d5:	8b 85 ec fe ff ff    	mov    eax,DWORD PTR [ebp-0x114]
100012db:	83 ec 0c             	sub    esp,0xc
100012de:	50                   	push   eax
100012df:	e8 fc ff ff ff       	call   100012e0 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x3cd>	100012e0: R_386_PC32	free
100012e4:	83 c4 10             	add    esp,0x10
100012e7:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [ebp-0x130]
100012ed:	83 ec 0c             	sub    esp,0xc
100012f0:	50                   	push   eax
100012f1:	e8 fc ff ff ff       	call   100012f2 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x3df>	100012f2: R_386_PC32	free
100012f6:	83 c4 10             	add    esp,0x10
100012f9:	90                   	nop
100012fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100012fd:	8d 65 f4             	lea    esp,[ebp-0xc]
10001300:	5b                   	pop    ebx
10001301:	5e                   	pop    esi
10001302:	5f                   	pop    edi
10001303:	5d                   	pop    ebp
10001304:	c2 04 00             	ret    0x4

10001307 <createRectangleRegion(int, int, int, int)>:
10001307:	55                   	push   ebp
10001308:	89 e5                	mov    ebp,esp
1000130a:	83 ec 08             	sub    esp,0x8
1000130d:	83 ec 0c             	sub    esp,0xc
10001310:	ff 75 18             	push   DWORD PTR [ebp+0x18]
10001313:	ff 75 14             	push   DWORD PTR [ebp+0x14]
10001316:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10001319:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000131c:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000131f:	e8 fc ff ff ff       	call   10001320 <createRectangleRegion(int, int, int, int)+0x19>	10001320: R_386_PC32	Region::Region(int, int, int, int)
10001324:	83 c4 20             	add    esp,0x20
10001327:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000132a:	c7 40 0c 10 00 00 00 	mov    DWORD PTR [eax+0xc],0x10
10001331:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001334:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10001337:	83 ec 0c             	sub    esp,0xc
1000133a:	50                   	push   eax
1000133b:	e8 fc ff ff ff       	call   1000133c <createRectangleRegion(int, int, int, int)+0x35>	1000133c: R_386_PC32	malloc
10001340:	83 c4 10             	add    esp,0x10
10001343:	89 c2                	mov    edx,eax
10001345:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001348:	89 10                	mov    DWORD PTR [eax],edx
1000134a:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000134d:	c1 e0 10             	shl    eax,0x10
10001350:	83 c8 02             	or     eax,0x2
10001353:	89 c2                	mov    edx,eax
10001355:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001358:	8b 00                	mov    eax,DWORD PTR [eax]
1000135a:	89 10                	mov    DWORD PTR [eax],edx
1000135c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000135f:	8b 00                	mov    eax,DWORD PTR [eax]
10001361:	83 c0 04             	add    eax,0x4
10001364:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000136a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000136d:	8b 00                	mov    eax,DWORD PTR [eax]
1000136f:	8d 50 08             	lea    edx,[eax+0x8]
10001372:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10001375:	89 02                	mov    DWORD PTR [edx],eax
10001377:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000137a:	8b 00                	mov    eax,DWORD PTR [eax]
1000137c:	83 c0 0c             	add    eax,0xc
1000137f:	c7 00 ff ff ff ff    	mov    DWORD PTR [eax],0xffffffff
10001385:	90                   	nop
10001386:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001389:	c9                   	leave  
1000138a:	c2 04 00             	ret    0x4

1000138d <createBorderRegion(int, int, int, int, int)>:
1000138d:	55                   	push   ebp
1000138e:	89 e5                	mov    ebp,esp
10001390:	83 ec 18             	sub    esp,0x18
10001393:	83 ec 0c             	sub    esp,0xc
10001396:	ff 75 18             	push   DWORD PTR [ebp+0x18]
10001399:	ff 75 14             	push   DWORD PTR [ebp+0x14]
1000139c:	ff 75 10             	push   DWORD PTR [ebp+0x10]
1000139f:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100013a2:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100013a5:	e8 fc ff ff ff       	call   100013a6 <createBorderRegion(int, int, int, int, int)+0x19>	100013a6: R_386_PC32	Region::Region(int, int, int, int)
100013aa:	83 c4 20             	add    esp,0x20
100013ad:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100013b0:	c7 40 0c 30 00 00 00 	mov    DWORD PTR [eax+0xc],0x30
100013b7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100013ba:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
100013bd:	83 ec 0c             	sub    esp,0xc
100013c0:	50                   	push   eax
100013c1:	e8 fc ff ff ff       	call   100013c2 <createBorderRegion(int, int, int, int, int)+0x35>	100013c2: R_386_PC32	malloc
100013c6:	83 c4 10             	add    esp,0x10
100013c9:	89 c2                	mov    edx,eax
100013cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100013ce:	89 10                	mov    DWORD PTR [eax],edx
100013d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100013d3:	8b 00                	mov    eax,DWORD PTR [eax]
100013d5:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
100013d8:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
100013db:	c1 e0 10             	shl    eax,0x10
100013de:	83 c8 02             	or     eax,0x2
100013e1:	89 c1                	mov    ecx,eax
100013e3:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
100013e6:	8d 50 04             	lea    edx,[eax+0x4]
100013e9:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
100013ec:	89 ca                	mov    edx,ecx
100013ee:	89 10                	mov    DWORD PTR [eax],edx
100013f0:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
100013f3:	8d 50 04             	lea    edx,[eax+0x4]
100013f6:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
100013f9:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100013ff:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10001402:	8d 50 04             	lea    edx,[eax+0x4]
10001405:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10001408:	8b 55 14             	mov    edx,DWORD PTR [ebp+0x14]
1000140b:	89 10                	mov    DWORD PTR [eax],edx
1000140d:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10001410:	01 c0                	add    eax,eax
10001412:	89 c2                	mov    edx,eax
10001414:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001417:	29 d0                	sub    eax,edx
10001419:	c1 e0 10             	shl    eax,0x10
1000141c:	83 c8 04             	or     eax,0x4
1000141f:	89 c1                	mov    ecx,eax
10001421:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10001424:	8d 50 04             	lea    edx,[eax+0x4]
10001427:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
1000142a:	89 ca                	mov    edx,ecx
1000142c:	89 10                	mov    DWORD PTR [eax],edx
1000142e:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10001431:	8d 50 04             	lea    edx,[eax+0x4]
10001434:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10001437:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000143d:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10001440:	8d 50 04             	lea    edx,[eax+0x4]
10001443:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10001446:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10001449:	89 10                	mov    DWORD PTR [eax],edx
1000144b:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000144e:	2b 45 1c             	sub    eax,DWORD PTR [ebp+0x1c]
10001451:	89 c1                	mov    ecx,eax
10001453:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10001456:	8d 50 04             	lea    edx,[eax+0x4]
10001459:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
1000145c:	89 ca                	mov    edx,ecx
1000145e:	89 10                	mov    DWORD PTR [eax],edx
10001460:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10001463:	8d 50 04             	lea    edx,[eax+0x4]
10001466:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10001469:	8b 55 14             	mov    edx,DWORD PTR [ebp+0x14]
1000146c:	89 10                	mov    DWORD PTR [eax],edx
1000146e:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10001471:	c1 e0 10             	shl    eax,0x10
10001474:	83 c8 02             	or     eax,0x2
10001477:	89 c1                	mov    ecx,eax
10001479:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000147c:	8d 50 04             	lea    edx,[eax+0x4]
1000147f:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10001482:	89 ca                	mov    edx,ecx
10001484:	89 10                	mov    DWORD PTR [eax],edx
10001486:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10001489:	8d 50 04             	lea    edx,[eax+0x4]
1000148c:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
1000148f:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10001495:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10001498:	8d 50 04             	lea    edx,[eax+0x4]
1000149b:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
1000149e:	8b 55 14             	mov    edx,DWORD PTR [ebp+0x14]
100014a1:	89 10                	mov    DWORD PTR [eax],edx
100014a3:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
100014a6:	8d 50 04             	lea    edx,[eax+0x4]
100014a9:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
100014ac:	c7 00 ff ff ff ff    	mov    DWORD PTR [eax],0xffffffff
100014b2:	90                   	nop
100014b3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100014b6:	c9                   	leave  
100014b7:	c2 04 00             	ret    0x4

100014ba <createAntRegion(int, int, int, int, int)>:
100014ba:	55                   	push   ebp
100014bb:	89 e5                	mov    ebp,esp
100014bd:	83 ec 08             	sub    esp,0x8
100014c0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100014c3:	83 ec 08             	sub    esp,0x8
100014c6:	ff 75 1c             	push   DWORD PTR [ebp+0x1c]
100014c9:	ff 75 18             	push   DWORD PTR [ebp+0x18]
100014cc:	ff 75 14             	push   DWORD PTR [ebp+0x14]
100014cf:	ff 75 10             	push   DWORD PTR [ebp+0x10]
100014d2:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100014d5:	50                   	push   eax
100014d6:	e8 fc ff ff ff       	call   100014d7 <createAntRegion(int, int, int, int, int)+0x1d>	100014d7: R_386_PC32	createBorderRegion(int, int, int, int, int)
100014db:	83 c4 1c             	add    esp,0x1c
100014de:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100014e1:	c6 40 18 01          	mov    BYTE PTR [eax+0x18],0x1
100014e5:	90                   	nop
100014e6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100014e9:	c9                   	leave  
100014ea:	c2 04 00             	ret    0x4

100014ed <compressScanlineAndAddToRegion(Region*, int, unsigned int*, unsigned int, unsigned int)>:
100014ed:	55                   	push   ebp
100014ee:	89 e5                	mov    ebp,esp
100014f0:	57                   	push   edi
100014f1:	56                   	push   esi
100014f2:	53                   	push   ebx
100014f3:	83 ec 20             	sub    esp,0x20
100014f6:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100014f9:	c1 e0 10             	shl    eax,0x10
100014fc:	89 c1                	mov    ecx,eax
100014fe:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001501:	8b 18                	mov    ebx,DWORD PTR [eax]
10001503:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10001506:	be 04 00 00 00       	mov    esi,0x4
1000150b:	99                   	cdq    
1000150c:	f7 fe                	idiv   esi
1000150e:	c1 e0 02             	shl    eax,0x2
10001511:	8d 14 03             	lea    edx,[ebx+eax*1]
10001514:	89 c8                	mov    eax,ecx
10001516:	0b 45 14             	or     eax,DWORD PTR [ebp+0x14]
10001519:	89 02                	mov    DWORD PTR [edx],eax
1000151b:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000151e:	8d 0c 85 00 00 00 00 	lea    ecx,[eax*4+0x0]
10001525:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001528:	8b 18                	mov    ebx,DWORD PTR [eax]
1000152a:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000152d:	bf 04 00 00 00       	mov    edi,0x4
10001532:	99                   	cdq    
10001533:	f7 ff                	idiv   edi
10001535:	40                   	inc    eax
10001536:	c1 e0 02             	shl    eax,0x2
10001539:	01 d8                	add    eax,ebx
1000153b:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
1000153e:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10001541:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10001544:	89 4d e8             	mov    DWORD PTR [ebp-0x18],ecx
10001547:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
1000154a:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
1000154d:	8b 4d e8             	mov    ecx,DWORD PTR [ebp-0x18]
10001550:	89 c6                	mov    esi,eax
10001552:	89 d7                	mov    edi,edx
10001554:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10001556:	89 c8                	mov    eax,ecx
10001558:	89 fa                	mov    edx,edi
1000155a:	89 f3                	mov    ebx,esi
1000155c:	89 5d e4             	mov    DWORD PTR [ebp-0x1c],ebx
1000155f:	89 55 e0             	mov    DWORD PTR [ebp-0x20],edx
10001562:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10001565:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10001568:	40                   	inc    eax
10001569:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10001570:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10001573:	01 d0                	add    eax,edx
10001575:	89 45 0c             	mov    DWORD PTR [ebp+0xc],eax
10001578:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000157b:	83 c4 20             	add    esp,0x20
1000157e:	5b                   	pop    ebx
1000157f:	5e                   	pop    esi
10001580:	5f                   	pop    edi
10001581:	5d                   	pop    ebp
10001582:	c3                   	ret    

10001583 <performRegionOperation(Region, Region, RegionOperation)>:
10001583:	55                   	push   ebp
10001584:	89 e5                	mov    ebp,esp
10001586:	57                   	push   edi
10001587:	56                   	push   esi
10001588:	53                   	push   ebx
10001589:	81 ec bc 20 00 00    	sub    esp,0x20bc
1000158f:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10001592:	8b 45 38             	mov    eax,DWORD PTR [ebp+0x38]
10001595:	39 c2                	cmp    edx,eax
10001597:	7d 05                	jge    1000159e <performRegionOperation(Region, Region, RegionOperation)+0x1b>
10001599:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
1000159c:	eb 03                	jmp    100015a1 <performRegionOperation(Region, Region, RegionOperation)+0x1e>
1000159e:	8b 45 38             	mov    eax,DWORD PTR [ebp+0x38]
100015a1:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
100015a4:	8b 55 20             	mov    edx,DWORD PTR [ebp+0x20]
100015a7:	8b 45 3c             	mov    eax,DWORD PTR [ebp+0x3c]
100015aa:	39 c2                	cmp    edx,eax
100015ac:	7d 05                	jge    100015b3 <performRegionOperation(Region, Region, RegionOperation)+0x30>
100015ae:	8b 45 20             	mov    eax,DWORD PTR [ebp+0x20]
100015b1:	eb 03                	jmp    100015b6 <performRegionOperation(Region, Region, RegionOperation)+0x33>
100015b3:	8b 45 3c             	mov    eax,DWORD PTR [ebp+0x3c]
100015b6:	89 45 b0             	mov    DWORD PTR [ebp-0x50],eax
100015b9:	8b 55 38             	mov    edx,DWORD PTR [ebp+0x38]
100015bc:	8b 45 2c             	mov    eax,DWORD PTR [ebp+0x2c]
100015bf:	8d 0c 02             	lea    ecx,[edx+eax*1]
100015c2:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
100015c5:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
100015c8:	01 c2                	add    edx,eax
100015ca:	89 c8                	mov    eax,ecx
100015cc:	39 d0                	cmp    eax,edx
100015ce:	7d 02                	jge    100015d2 <performRegionOperation(Region, Region, RegionOperation)+0x4f>
100015d0:	89 d0                	mov    eax,edx
100015d2:	2b 45 b4             	sub    eax,DWORD PTR [ebp-0x4c]
100015d5:	89 45 ac             	mov    DWORD PTR [ebp-0x54],eax
100015d8:	8b 55 3c             	mov    edx,DWORD PTR [ebp+0x3c]
100015db:	8b 45 30             	mov    eax,DWORD PTR [ebp+0x30]
100015de:	8d 0c 02             	lea    ecx,[edx+eax*1]
100015e1:	8b 55 20             	mov    edx,DWORD PTR [ebp+0x20]
100015e4:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
100015e7:	01 c2                	add    edx,eax
100015e9:	89 c8                	mov    eax,ecx
100015eb:	39 d0                	cmp    eax,edx
100015ed:	7d 02                	jge    100015f1 <performRegionOperation(Region, Region, RegionOperation)+0x6e>
100015ef:	89 d0                	mov    eax,edx
100015f1:	2b 45 b0             	sub    eax,DWORD PTR [ebp-0x50]
100015f4:	89 45 a8             	mov    DWORD PTR [ebp-0x58],eax
100015f7:	8b 55 20             	mov    edx,DWORD PTR [ebp+0x20]
100015fa:	8b 45 3c             	mov    eax,DWORD PTR [ebp+0x3c]
100015fd:	39 c2                	cmp    edx,eax
100015ff:	7c 0c                	jl     1000160d <performRegionOperation(Region, Region, RegionOperation)+0x8a>
10001601:	8b 55 20             	mov    edx,DWORD PTR [ebp+0x20]
10001604:	8b 45 3c             	mov    eax,DWORD PTR [ebp+0x3c]
10001607:	29 c2                	sub    edx,eax
10001609:	89 d0                	mov    eax,edx
1000160b:	eb 05                	jmp    10001612 <performRegionOperation(Region, Region, RegionOperation)+0x8f>
1000160d:	b8 00 00 00 00       	mov    eax,0x0
10001612:	89 45 a4             	mov    DWORD PTR [ebp-0x5c],eax
10001615:	8b 55 3c             	mov    edx,DWORD PTR [ebp+0x3c]
10001618:	8b 45 20             	mov    eax,DWORD PTR [ebp+0x20]
1000161b:	39 c2                	cmp    edx,eax
1000161d:	7c 0c                	jl     1000162b <performRegionOperation(Region, Region, RegionOperation)+0xa8>
1000161f:	8b 55 3c             	mov    edx,DWORD PTR [ebp+0x3c]
10001622:	8b 45 20             	mov    eax,DWORD PTR [ebp+0x20]
10001625:	29 c2                	sub    edx,eax
10001627:	89 d0                	mov    eax,edx
10001629:	eb 05                	jmp    10001630 <performRegionOperation(Region, Region, RegionOperation)+0xad>
1000162b:	b8 00 00 00 00       	mov    eax,0x0
10001630:	89 45 a0             	mov    DWORD PTR [ebp-0x60],eax
10001633:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10001636:	8b 45 38             	mov    eax,DWORD PTR [ebp+0x38]
10001639:	39 c2                	cmp    edx,eax
1000163b:	7c 0c                	jl     10001649 <performRegionOperation(Region, Region, RegionOperation)+0xc6>
1000163d:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10001640:	8b 45 38             	mov    eax,DWORD PTR [ebp+0x38]
10001643:	29 c2                	sub    edx,eax
10001645:	89 d0                	mov    eax,edx
10001647:	eb 05                	jmp    1000164e <performRegionOperation(Region, Region, RegionOperation)+0xcb>
10001649:	b8 00 00 00 00       	mov    eax,0x0
1000164e:	89 45 9c             	mov    DWORD PTR [ebp-0x64],eax
10001651:	8b 55 38             	mov    edx,DWORD PTR [ebp+0x38]
10001654:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10001657:	39 c2                	cmp    edx,eax
10001659:	7c 0c                	jl     10001667 <performRegionOperation(Region, Region, RegionOperation)+0xe4>
1000165b:	8b 55 38             	mov    edx,DWORD PTR [ebp+0x38]
1000165e:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10001661:	29 c2                	sub    edx,eax
10001663:	89 d0                	mov    eax,edx
10001665:	eb 05                	jmp    1000166c <performRegionOperation(Region, Region, RegionOperation)+0xe9>
10001667:	b8 00 00 00 00       	mov    eax,0x0
1000166c:	89 45 98             	mov    DWORD PTR [ebp-0x68],eax
1000166f:	83 ec 0c             	sub    esp,0xc
10001672:	ff 75 a8             	push   DWORD PTR [ebp-0x58]
10001675:	ff 75 ac             	push   DWORD PTR [ebp-0x54]
10001678:	ff 75 b0             	push   DWORD PTR [ebp-0x50]
1000167b:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
1000167e:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001681:	e8 fc ff ff ff       	call   10001682 <performRegionOperation(Region, Region, RegionOperation)+0xff>	10001682: R_386_PC32	Region::Region(int, int, int, int)
10001686:	83 c4 20             	add    esp,0x20
10001689:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
1000168c:	8b 45 34             	mov    eax,DWORD PTR [ebp+0x34]
1000168f:	01 d0                	add    eax,edx
10001691:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10001698:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000169b:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
1000169e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100016a1:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
100016a4:	83 ec 08             	sub    esp,0x8
100016a7:	6a 01                	push   0x1
100016a9:	50                   	push   eax
100016aa:	e8 fc ff ff ff       	call   100016ab <performRegionOperation(Region, Region, RegionOperation)+0x128>	100016ab: R_386_PC32	calloc
100016af:	83 c4 10             	add    esp,0x10
100016b2:	89 c2                	mov    edx,eax
100016b4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100016b7:	89 10                	mov    DWORD PTR [eax],edx
100016b9:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
100016c0:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100016c3:	89 85 5c ff ff ff    	mov    DWORD PTR [ebp-0xa4],eax
100016c9:	8b 45 28             	mov    eax,DWORD PTR [ebp+0x28]
100016cc:	89 85 60 ff ff ff    	mov    DWORD PTR [ebp-0xa0],eax
100016d2:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100016d5:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
100016d8:	c1 e2 02             	shl    edx,0x2
100016db:	01 d0                	add    eax,edx
100016dd:	89 85 54 ff ff ff    	mov    DWORD PTR [ebp-0xac],eax
100016e3:	8b 45 28             	mov    eax,DWORD PTR [ebp+0x28]
100016e6:	8b 55 34             	mov    edx,DWORD PTR [ebp+0x34]
100016e9:	c1 e2 02             	shl    edx,0x2
100016ec:	01 d0                	add    eax,edx
100016ee:	89 85 58 ff ff ff    	mov    DWORD PTR [ebp-0xa8],eax
100016f4:	c7 45 94 00 02 00 00 	mov    DWORD PTR [ebp-0x6c],0x200
100016fb:	c7 85 44 ef ff ff 00 00 00 00 	mov    DWORD PTR [ebp-0x10bc],0x0
10001705:	c7 85 48 ef ff ff 00 00 00 00 	mov    DWORD PTR [ebp-0x10b8],0x0
1000170f:	c7 85 44 df ff ff ff ff ff ff 	mov    DWORD PTR [ebp-0x20bc],0xffffffff
10001719:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10001720:	c7 45 dc ff ff ff ff 	mov    DWORD PTR [ebp-0x24],0xffffffff
10001727:	c7 45 d8 00 00 00 00 	mov    DWORD PTR [ebp-0x28],0x0
1000172e:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10001731:	3b 45 a8             	cmp    eax,DWORD PTR [ebp-0x58]
10001734:	0f 8d ea 03 00 00    	jge    10001b24 <performRegionOperation(Region, Region, RegionOperation)+0x5a1>
1000173a:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
1000173d:	2b 45 a4             	sub    eax,DWORD PTR [ebp-0x5c]
10001740:	89 45 90             	mov    DWORD PTR [ebp-0x70],eax
10001743:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10001746:	2b 45 a0             	sub    eax,DWORD PTR [ebp-0x60]
10001749:	89 45 8c             	mov    DWORD PTR [ebp-0x74],eax
1000174c:	83 7d 90 00          	cmp    DWORD PTR [ebp-0x70],0x0
10001750:	78 0c                	js     1000175e <performRegionOperation(Region, Region, RegionOperation)+0x1db>
10001752:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10001755:	39 45 90             	cmp    DWORD PTR [ebp-0x70],eax
10001758:	7d 04                	jge    1000175e <performRegionOperation(Region, Region, RegionOperation)+0x1db>
1000175a:	b0 01                	mov    al,0x1
1000175c:	eb 02                	jmp    10001760 <performRegionOperation(Region, Region, RegionOperation)+0x1dd>
1000175e:	b0 00                	mov    al,0x0
10001760:	88 85 42 df ff ff    	mov    BYTE PTR [ebp-0x20be],al
10001766:	83 7d 8c 00          	cmp    DWORD PTR [ebp-0x74],0x0
1000176a:	78 0c                	js     10001778 <performRegionOperation(Region, Region, RegionOperation)+0x1f5>
1000176c:	8b 45 30             	mov    eax,DWORD PTR [ebp+0x30]
1000176f:	39 45 8c             	cmp    DWORD PTR [ebp-0x74],eax
10001772:	7d 04                	jge    10001778 <performRegionOperation(Region, Region, RegionOperation)+0x1f5>
10001774:	b0 01                	mov    al,0x1
10001776:	eb 02                	jmp    1000177a <performRegionOperation(Region, Region, RegionOperation)+0x1f7>
10001778:	b0 00                	mov    al,0x0
1000177a:	88 85 43 df ff ff    	mov    BYTE PTR [ebp-0x20bd],al
10001780:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [ebp-0x2c],0x0
10001787:	83 7d d4 01          	cmp    DWORD PTR [ebp-0x2c],0x1
1000178b:	0f 8f 04 01 00 00    	jg     10001895 <performRegionOperation(Region, Region, RegionOperation)+0x312>
10001791:	8d 95 42 df ff ff    	lea    edx,[ebp-0x20be]
10001797:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
1000179a:	01 d0                	add    eax,edx
1000179c:	8a 00                	mov    al,BYTE PTR [eax]
1000179e:	83 f0 01             	xor    eax,0x1
100017a1:	84 c0                	test   al,al
100017a3:	74 0e                	je     100017b3 <performRegionOperation(Region, Region, RegionOperation)+0x230>
100017a5:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
100017a8:	c7 84 85 44 ef ff ff 00 00 00 00 	mov    DWORD PTR [ebp+eax*4-0x10bc],0x0
100017b3:	8d 95 42 df ff ff    	lea    edx,[ebp-0x20be]
100017b9:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
100017bc:	01 d0                	add    eax,edx
100017be:	8a 00                	mov    al,BYTE PTR [eax]
100017c0:	84 c0                	test   al,al
100017c2:	0f 84 c5 00 00 00    	je     1000188d <performRegionOperation(Region, Region, RegionOperation)+0x30a>
100017c8:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
100017cb:	8b 84 85 44 ef ff ff 	mov    eax,DWORD PTR [ebp+eax*4-0x10bc]
100017d2:	85 c0                	test   eax,eax
100017d4:	0f 85 b3 00 00 00    	jne    1000188d <performRegionOperation(Region, Region, RegionOperation)+0x30a>
100017da:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
100017dd:	8b 84 85 5c ff ff ff 	mov    eax,DWORD PTR [ebp+eax*4-0xa4]
100017e4:	8b 00                	mov    eax,DWORD PTR [eax]
100017e6:	89 45 88             	mov    DWORD PTR [ebp-0x78],eax
100017e9:	83 7d 88 ff          	cmp    DWORD PTR [ebp-0x78],0xffffffff
100017ed:	75 13                	jne    10001802 <performRegionOperation(Region, Region, RegionOperation)+0x27f>
100017ef:	8d 95 42 df ff ff    	lea    edx,[ebp-0x20be]
100017f5:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
100017f8:	01 d0                	add    eax,edx
100017fa:	c6 00 00             	mov    BYTE PTR [eax],0x0
100017fd:	e9 8b 00 00 00       	jmp    1000188d <performRegionOperation(Region, Region, RegionOperation)+0x30a>
10001802:	8b 45 88             	mov    eax,DWORD PTR [ebp-0x78]
10001805:	0f b7 d0             	movzx  edx,ax
10001808:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
1000180b:	89 94 85 4c ef ff ff 	mov    DWORD PTR [ebp+eax*4-0x10b4],edx
10001812:	8b 45 88             	mov    eax,DWORD PTR [ebp-0x78]
10001815:	c1 e8 10             	shr    eax,0x10
10001818:	89 c2                	mov    edx,eax
1000181a:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
1000181d:	89 94 85 44 ef ff ff 	mov    DWORD PTR [ebp+eax*4-0x10bc],edx
10001824:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10001827:	8b 84 85 5c ff ff ff 	mov    eax,DWORD PTR [ebp+eax*4-0xa4]
1000182e:	8d 50 04             	lea    edx,[eax+0x4]
10001831:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10001834:	89 94 85 5c ff ff ff 	mov    DWORD PTR [ebp+eax*4-0xa4],edx
1000183b:	c7 45 d0 00 00 00 00 	mov    DWORD PTR [ebp-0x30],0x0
10001842:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10001845:	8b 84 85 4c ef ff ff 	mov    eax,DWORD PTR [ebp+eax*4-0x10b4]
1000184c:	39 45 d0             	cmp    DWORD PTR [ebp-0x30],eax
1000184f:	7d 3c                	jge    1000188d <performRegionOperation(Region, Region, RegionOperation)+0x30a>
10001851:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10001854:	8b 84 85 5c ff ff ff 	mov    eax,DWORD PTR [ebp+eax*4-0xa4]
1000185b:	8b 00                	mov    eax,DWORD PTR [eax]
1000185d:	8b 55 d4             	mov    edx,DWORD PTR [ebp-0x2c]
10001860:	89 d1                	mov    ecx,edx
10001862:	c1 e1 09             	shl    ecx,0x9
10001865:	8b 55 d0             	mov    edx,DWORD PTR [ebp-0x30]
10001868:	01 ca                	add    edx,ecx
1000186a:	89 84 95 54 ef ff ff 	mov    DWORD PTR [ebp+edx*4-0x10ac],eax
10001871:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10001874:	8b 84 85 5c ff ff ff 	mov    eax,DWORD PTR [ebp+eax*4-0xa4]
1000187b:	8d 50 04             	lea    edx,[eax+0x4]
1000187e:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10001881:	89 94 85 5c ff ff ff 	mov    DWORD PTR [ebp+eax*4-0xa4],edx
10001888:	ff 45 d0             	inc    DWORD PTR [ebp-0x30]
1000188b:	eb b5                	jmp    10001842 <performRegionOperation(Region, Region, RegionOperation)+0x2bf>
1000188d:	ff 45 d4             	inc    DWORD PTR [ebp-0x2c]
10001890:	e9 f2 fe ff ff       	jmp    10001787 <performRegionOperation(Region, Region, RegionOperation)+0x204>
10001895:	c7 45 cc 00 00 00 00 	mov    DWORD PTR [ebp-0x34],0x0
1000189c:	c7 45 c8 00 00 00 00 	mov    DWORD PTR [ebp-0x38],0x0
100018a3:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [ebp-0x3c],0x0
100018aa:	c6 45 c3 00          	mov    BYTE PTR [ebp-0x3d],0x0
100018ae:	c6 45 c2 00          	mov    BYTE PTR [ebp-0x3e],0x0
100018b2:	c6 45 c1 00          	mov    BYTE PTR [ebp-0x3f],0x0
100018b6:	c6 45 c0 01          	mov    BYTE PTR [ebp-0x40],0x1
100018ba:	8b 85 44 ef ff ff    	mov    eax,DWORD PTR [ebp-0x10bc]
100018c0:	85 c0                	test   eax,eax
100018c2:	74 0b                	je     100018cf <performRegionOperation(Region, Region, RegionOperation)+0x34c>
100018c4:	8b 85 4c ef ff ff    	mov    eax,DWORD PTR [ebp-0x10b4]
100018ca:	39 45 c8             	cmp    DWORD PTR [ebp-0x38],eax
100018cd:	7c 1d                	jl     100018ec <performRegionOperation(Region, Region, RegionOperation)+0x369>
100018cf:	8b 85 48 ef ff ff    	mov    eax,DWORD PTR [ebp-0x10b8]
100018d5:	85 c0                	test   eax,eax
100018d7:	0f 84 6f 01 00 00    	je     10001a4c <performRegionOperation(Region, Region, RegionOperation)+0x4c9>
100018dd:	8b 85 50 ef ff ff    	mov    eax,DWORD PTR [ebp-0x10b0]
100018e3:	39 45 c4             	cmp    DWORD PTR [ebp-0x3c],eax
100018e6:	0f 8d 60 01 00 00    	jge    10001a4c <performRegionOperation(Region, Region, RegionOperation)+0x4c9>
100018ec:	8b 85 4c ef ff ff    	mov    eax,DWORD PTR [ebp-0x10b4]
100018f2:	39 45 c8             	cmp    DWORD PTR [ebp-0x38],eax
100018f5:	7d 1b                	jge    10001912 <performRegionOperation(Region, Region, RegionOperation)+0x38f>
100018f7:	8b 85 44 ef ff ff    	mov    eax,DWORD PTR [ebp-0x10bc]
100018fd:	85 c0                	test   eax,eax
100018ff:	74 11                	je     10001912 <performRegionOperation(Region, Region, RegionOperation)+0x38f>
10001901:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10001904:	8b 94 85 54 ef ff ff 	mov    edx,DWORD PTR [ebp+eax*4-0x10ac]
1000190b:	8b 45 9c             	mov    eax,DWORD PTR [ebp-0x64]
1000190e:	01 d0                	add    eax,edx
10001910:	eb 05                	jmp    10001917 <performRegionOperation(Region, Region, RegionOperation)+0x394>
10001912:	b8 ff ff ff ff       	mov    eax,0xffffffff
10001917:	89 45 84             	mov    DWORD PTR [ebp-0x7c],eax
1000191a:	8b 85 50 ef ff ff    	mov    eax,DWORD PTR [ebp-0x10b0]
10001920:	39 45 c4             	cmp    DWORD PTR [ebp-0x3c],eax
10001923:	7d 20                	jge    10001945 <performRegionOperation(Region, Region, RegionOperation)+0x3c2>
10001925:	8b 85 48 ef ff ff    	mov    eax,DWORD PTR [ebp-0x10b8]
1000192b:	85 c0                	test   eax,eax
1000192d:	74 16                	je     10001945 <performRegionOperation(Region, Region, RegionOperation)+0x3c2>
1000192f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10001932:	05 00 02 00 00       	add    eax,0x200
10001937:	8b 94 85 54 ef ff ff 	mov    edx,DWORD PTR [ebp+eax*4-0x10ac]
1000193e:	8b 45 98             	mov    eax,DWORD PTR [ebp-0x68]
10001941:	01 d0                	add    eax,edx
10001943:	eb 05                	jmp    1000194a <performRegionOperation(Region, Region, RegionOperation)+0x3c7>
10001945:	b8 ff ff ff ff       	mov    eax,0xffffffff
1000194a:	89 45 80             	mov    DWORD PTR [ebp-0x80],eax
1000194d:	83 7d 84 ff          	cmp    DWORD PTR [ebp-0x7c],0xffffffff
10001951:	75 04                	jne    10001957 <performRegionOperation(Region, Region, RegionOperation)+0x3d4>
10001953:	c6 45 c3 00          	mov    BYTE PTR [ebp-0x3d],0x0
10001957:	83 7d 80 ff          	cmp    DWORD PTR [ebp-0x80],0xffffffff
1000195b:	75 04                	jne    10001961 <performRegionOperation(Region, Region, RegionOperation)+0x3de>
1000195d:	c6 45 c2 00          	mov    BYTE PTR [ebp-0x3e],0x0
10001961:	8b 45 84             	mov    eax,DWORD PTR [ebp-0x7c]
10001964:	89 45 bc             	mov    DWORD PTR [ebp-0x44],eax
10001967:	83 7d 84 ff          	cmp    DWORD PTR [ebp-0x7c],0xffffffff
1000196b:	74 15                	je     10001982 <performRegionOperation(Region, Region, RegionOperation)+0x3ff>
1000196d:	8b 45 84             	mov    eax,DWORD PTR [ebp-0x7c]
10001970:	3b 45 80             	cmp    eax,DWORD PTR [ebp-0x80]
10001973:	7e 06                	jle    1000197b <performRegionOperation(Region, Region, RegionOperation)+0x3f8>
10001975:	83 7d 80 ff          	cmp    DWORD PTR [ebp-0x80],0xffffffff
10001979:	75 07                	jne    10001982 <performRegionOperation(Region, Region, RegionOperation)+0x3ff>
1000197b:	80 75 c3 01          	xor    BYTE PTR [ebp-0x3d],0x1
1000197f:	ff 45 c8             	inc    DWORD PTR [ebp-0x38]
10001982:	83 7d 80 ff          	cmp    DWORD PTR [ebp-0x80],0xffffffff
10001986:	74 1b                	je     100019a3 <performRegionOperation(Region, Region, RegionOperation)+0x420>
10001988:	8b 45 80             	mov    eax,DWORD PTR [ebp-0x80]
1000198b:	3b 45 84             	cmp    eax,DWORD PTR [ebp-0x7c]
1000198e:	7e 06                	jle    10001996 <performRegionOperation(Region, Region, RegionOperation)+0x413>
10001990:	83 7d 84 ff          	cmp    DWORD PTR [ebp-0x7c],0xffffffff
10001994:	75 0d                	jne    100019a3 <performRegionOperation(Region, Region, RegionOperation)+0x420>
10001996:	80 75 c2 01          	xor    BYTE PTR [ebp-0x3e],0x1
1000199a:	ff 45 c4             	inc    DWORD PTR [ebp-0x3c]
1000199d:	8b 45 80             	mov    eax,DWORD PTR [ebp-0x80]
100019a0:	89 45 bc             	mov    DWORD PTR [ebp-0x44],eax
100019a3:	8a 45 c3             	mov    al,BYTE PTR [ebp-0x3d]
100019a6:	88 45 bb             	mov    BYTE PTR [ebp-0x45],al
100019a9:	83 7d 44 01          	cmp    DWORD PTR [ebp+0x44],0x1
100019ad:	74 35                	je     100019e4 <performRegionOperation(Region, Region, RegionOperation)+0x461>
100019af:	83 7d 44 01          	cmp    DWORD PTR [ebp+0x44],0x1
100019b3:	7f 08                	jg     100019bd <performRegionOperation(Region, Region, RegionOperation)+0x43a>
100019b5:	83 7d 44 00          	cmp    DWORD PTR [ebp+0x44],0x0
100019b9:	74 3d                	je     100019f8 <performRegionOperation(Region, Region, RegionOperation)+0x475>
100019bb:	eb 50                	jmp    10001a0d <performRegionOperation(Region, Region, RegionOperation)+0x48a>
100019bd:	83 7d 44 02          	cmp    DWORD PTR [ebp+0x44],0x2
100019c1:	74 08                	je     100019cb <performRegionOperation(Region, Region, RegionOperation)+0x448>
100019c3:	83 7d 44 03          	cmp    DWORD PTR [ebp+0x44],0x3
100019c7:	74 37                	je     10001a00 <performRegionOperation(Region, Region, RegionOperation)+0x47d>
100019c9:	eb 42                	jmp    10001a0d <performRegionOperation(Region, Region, RegionOperation)+0x48a>
100019cb:	0f b6 55 bb          	movzx  edx,BYTE PTR [ebp-0x45]
100019cf:	8a 45 c2             	mov    al,BYTE PTR [ebp-0x3e]
100019d2:	83 f0 01             	xor    eax,0x1
100019d5:	0f b6 c0             	movzx  eax,al
100019d8:	21 d0                	and    eax,edx
100019da:	85 c0                	test   eax,eax
100019dc:	0f 95 c0             	setne  al
100019df:	88 45 bb             	mov    BYTE PTR [ebp-0x45],al
100019e2:	eb 29                	jmp    10001a0d <performRegionOperation(Region, Region, RegionOperation)+0x48a>
100019e4:	0f b6 55 bb          	movzx  edx,BYTE PTR [ebp-0x45]
100019e8:	0f b6 45 c2          	movzx  eax,BYTE PTR [ebp-0x3e]
100019ec:	21 d0                	and    eax,edx
100019ee:	85 c0                	test   eax,eax
100019f0:	0f 95 c0             	setne  al
100019f3:	88 45 bb             	mov    BYTE PTR [ebp-0x45],al
100019f6:	eb 15                	jmp    10001a0d <performRegionOperation(Region, Region, RegionOperation)+0x48a>
100019f8:	8a 45 c2             	mov    al,BYTE PTR [ebp-0x3e]
100019fb:	08 45 bb             	or     BYTE PTR [ebp-0x45],al
100019fe:	eb 0d                	jmp    10001a0d <performRegionOperation(Region, Region, RegionOperation)+0x48a>
10001a00:	8a 45 bb             	mov    al,BYTE PTR [ebp-0x45]
10001a03:	3a 45 c2             	cmp    al,BYTE PTR [ebp-0x3e]
10001a06:	0f 95 c0             	setne  al
10001a09:	88 45 bb             	mov    BYTE PTR [ebp-0x45],al
10001a0c:	90                   	nop
10001a0d:	8a 45 bb             	mov    al,BYTE PTR [ebp-0x45]
10001a10:	3a 45 c1             	cmp    al,BYTE PTR [ebp-0x3f]
10001a13:	0f 84 a1 fe ff ff    	je     100018ba <performRegionOperation(Region, Region, RegionOperation)+0x337>
10001a19:	8a 45 bb             	mov    al,BYTE PTR [ebp-0x45]
10001a1c:	88 45 c1             	mov    BYTE PTR [ebp-0x3f],al
10001a1f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10001a22:	8b 94 85 44 df ff ff 	mov    edx,DWORD PTR [ebp+eax*4-0x20bc]
10001a29:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
10001a2c:	39 c2                	cmp    edx,eax
10001a2e:	74 04                	je     10001a34 <performRegionOperation(Region, Region, RegionOperation)+0x4b1>
10001a30:	c6 45 c0 00          	mov    BYTE PTR [ebp-0x40],0x0
10001a34:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10001a37:	8d 50 01             	lea    edx,[eax+0x1]
10001a3a:	89 55 cc             	mov    DWORD PTR [ebp-0x34],edx
10001a3d:	8b 55 bc             	mov    edx,DWORD PTR [ebp-0x44]
10001a40:	89 94 85 44 e7 ff ff 	mov    DWORD PTR [ebp+eax*4-0x18bc],edx
10001a47:	e9 6e fe ff ff       	jmp    100018ba <performRegionOperation(Region, Region, RegionOperation)+0x337>
10001a4c:	80 7d c0 00          	cmp    BYTE PTR [ebp-0x40],0x0
10001a50:	74 10                	je     10001a62 <performRegionOperation(Region, Region, RegionOperation)+0x4df>
10001a52:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10001a55:	3b 45 dc             	cmp    eax,DWORD PTR [ebp-0x24]
10001a58:	75 08                	jne    10001a62 <performRegionOperation(Region, Region, RegionOperation)+0x4df>
10001a5a:	ff 45 e0             	inc    DWORD PTR [ebp-0x20]
10001a5d:	e9 8c 00 00 00       	jmp    10001aee <performRegionOperation(Region, Region, RegionOperation)+0x56b>
10001a62:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
10001a66:	74 23                	je     10001a8b <performRegionOperation(Region, Region, RegionOperation)+0x508>
10001a68:	8b 55 e0             	mov    edx,DWORD PTR [ebp-0x20]
10001a6b:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10001a6e:	83 ec 0c             	sub    esp,0xc
10001a71:	52                   	push   edx
10001a72:	50                   	push   eax
10001a73:	8d 85 44 df ff ff    	lea    eax,[ebp-0x20bc]
10001a79:	50                   	push   eax
10001a7a:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10001a7d:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001a80:	e8 fc ff ff ff       	call   10001a81 <performRegionOperation(Region, Region, RegionOperation)+0x4fe>	10001a81: R_386_PC32	compressScanlineAndAddToRegion(Region*, int, unsigned int*, unsigned int, unsigned int)
10001a85:	83 c4 20             	add    esp,0x20
10001a88:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10001a8b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10001a8e:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10001a91:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10001a94:	c1 e0 02             	shl    eax,0x2
10001a97:	89 c2                	mov    edx,eax
10001a99:	8d 85 44 df ff ff    	lea    eax,[ebp-0x20bc]
10001a9f:	89 85 78 ff ff ff    	mov    DWORD PTR [ebp-0x88],eax
10001aa5:	8d 85 44 e7 ff ff    	lea    eax,[ebp-0x18bc]
10001aab:	89 85 74 ff ff ff    	mov    DWORD PTR [ebp-0x8c],eax
10001ab1:	89 95 70 ff ff ff    	mov    DWORD PTR [ebp-0x90],edx
10001ab7:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [ebp-0x8c]
10001abd:	8b 95 78 ff ff ff    	mov    edx,DWORD PTR [ebp-0x88]
10001ac3:	8b 8d 70 ff ff ff    	mov    ecx,DWORD PTR [ebp-0x90]
10001ac9:	89 c6                	mov    esi,eax
10001acb:	89 d7                	mov    edi,edx
10001acd:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10001acf:	89 c8                	mov    eax,ecx
10001ad1:	89 fa                	mov    edx,edi
10001ad3:	89 f3                	mov    ebx,esi
10001ad5:	89 9d 6c ff ff ff    	mov    DWORD PTR [ebp-0x94],ebx
10001adb:	89 95 68 ff ff ff    	mov    DWORD PTR [ebp-0x98],edx
10001ae1:	89 85 64 ff ff ff    	mov    DWORD PTR [ebp-0x9c],eax
10001ae7:	c7 45 e0 01 00 00 00 	mov    DWORD PTR [ebp-0x20],0x1
10001aee:	8b 85 44 ef ff ff    	mov    eax,DWORD PTR [ebp-0x10bc]
10001af4:	85 c0                	test   eax,eax
10001af6:	74 0d                	je     10001b05 <performRegionOperation(Region, Region, RegionOperation)+0x582>
10001af8:	8b 85 44 ef ff ff    	mov    eax,DWORD PTR [ebp-0x10bc]
10001afe:	48                   	dec    eax
10001aff:	89 85 44 ef ff ff    	mov    DWORD PTR [ebp-0x10bc],eax
10001b05:	8b 85 48 ef ff ff    	mov    eax,DWORD PTR [ebp-0x10b8]
10001b0b:	85 c0                	test   eax,eax
10001b0d:	74 0d                	je     10001b1c <performRegionOperation(Region, Region, RegionOperation)+0x599>
10001b0f:	8b 85 48 ef ff ff    	mov    eax,DWORD PTR [ebp-0x10b8]
10001b15:	48                   	dec    eax
10001b16:	89 85 48 ef ff ff    	mov    DWORD PTR [ebp-0x10b8],eax
10001b1c:	ff 45 d8             	inc    DWORD PTR [ebp-0x28]
10001b1f:	e9 0a fc ff ff       	jmp    1000172e <performRegionOperation(Region, Region, RegionOperation)+0x1ab>
10001b24:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
10001b28:	74 23                	je     10001b4d <performRegionOperation(Region, Region, RegionOperation)+0x5ca>
10001b2a:	8b 55 e0             	mov    edx,DWORD PTR [ebp-0x20]
10001b2d:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10001b30:	83 ec 0c             	sub    esp,0xc
10001b33:	52                   	push   edx
10001b34:	50                   	push   eax
10001b35:	8d 85 44 df ff ff    	lea    eax,[ebp-0x20bc]
10001b3b:	50                   	push   eax
10001b3c:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10001b3f:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001b42:	e8 fc ff ff ff       	call   10001b43 <performRegionOperation(Region, Region, RegionOperation)+0x5c0>	10001b43: R_386_PC32	compressScanlineAndAddToRegion(Region*, int, unsigned int*, unsigned int, unsigned int)
10001b47:	83 c4 20             	add    esp,0x20
10001b4a:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10001b4d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001b50:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10001b53:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
10001b56:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001b59:	8b 08                	mov    ecx,DWORD PTR [eax]
10001b5b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001b5e:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10001b61:	bb 04 00 00 00       	mov    ebx,0x4
10001b66:	99                   	cdq    
10001b67:	f7 fb                	idiv   ebx
10001b69:	c1 e0 02             	shl    eax,0x2
10001b6c:	01 c8                	add    eax,ecx
10001b6e:	c7 00 ff ff ff ff    	mov    DWORD PTR [eax],0xffffffff
10001b74:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001b77:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10001b7a:	8d 50 04             	lea    edx,[eax+0x4]
10001b7d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001b80:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
10001b83:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001b86:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10001b89:	89 c2                	mov    edx,eax
10001b8b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001b8e:	8b 00                	mov    eax,DWORD PTR [eax]
10001b90:	83 ec 08             	sub    esp,0x8
10001b93:	52                   	push   edx
10001b94:	50                   	push   eax
10001b95:	e8 fc ff ff ff       	call   10001b96 <performRegionOperation(Region, Region, RegionOperation)+0x613>	10001b96: R_386_PC32	realloc
10001b9a:	83 c4 10             	add    esp,0x10
10001b9d:	89 85 7c ff ff ff    	mov    DWORD PTR [ebp-0x84],eax
10001ba3:	83 bd 7c ff ff ff 00 	cmp    DWORD PTR [ebp-0x84],0x0
10001baa:	75 10                	jne    10001bbc <performRegionOperation(Region, Region, RegionOperation)+0x639>
10001bac:	83 ec 0c             	sub    esp,0xc
10001baf:	68 10 3e 00 10       	push   0x10003e10	10001bb0: R_386_32	.text
10001bb4:	e8 fc ff ff ff       	call   10001bb5 <performRegionOperation(Region, Region, RegionOperation)+0x632>	10001bb5: R_386_PC32	KePanic(char const*)
10001bb9:	83 c4 10             	add    esp,0x10
10001bbc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001bbf:	8b 95 7c ff ff ff    	mov    edx,DWORD PTR [ebp-0x84]
10001bc5:	89 10                	mov    DWORD PTR [eax],edx
10001bc7:	90                   	nop
10001bc8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001bcb:	8d 65 f4             	lea    esp,[ebp-0xc]
10001bce:	5b                   	pop    ebx
10001bcf:	5e                   	pop    esi
10001bd0:	5f                   	pop    edi
10001bd1:	5d                   	pop    ebp
10001bd2:	c2 04 00             	ret    0x4

10001bd5 <getRegionUnion(Region, Region)>:
10001bd5:	55                   	push   ebp
10001bd6:	89 e5                	mov    ebp,esp
10001bd8:	57                   	push   edi
10001bd9:	56                   	push   esi
10001bda:	53                   	push   ebx
10001bdb:	83 ec 1c             	sub    esp,0x1c
10001bde:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001be1:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10001be4:	6a 00                	push   0x0
10001be6:	83 ec 1c             	sub    esp,0x1c
10001be9:	89 e0                	mov    eax,esp
10001beb:	89 c3                	mov    ebx,eax
10001bed:	8d 45 28             	lea    eax,[ebp+0x28]
10001bf0:	ba 07 00 00 00       	mov    edx,0x7
10001bf5:	89 df                	mov    edi,ebx
10001bf7:	89 c6                	mov    esi,eax
10001bf9:	89 d1                	mov    ecx,edx
10001bfb:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001bfd:	83 ec 1c             	sub    esp,0x1c
10001c00:	89 e0                	mov    eax,esp
10001c02:	89 c3                	mov    ebx,eax
10001c04:	8d 45 0c             	lea    eax,[ebp+0xc]
10001c07:	ba 07 00 00 00       	mov    edx,0x7
10001c0c:	89 df                	mov    edi,ebx
10001c0e:	89 c6                	mov    esi,eax
10001c10:	89 d1                	mov    ecx,edx
10001c12:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001c14:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10001c17:	e8 fc ff ff ff       	call   10001c18 <getRegionUnion(Region, Region)+0x43>	10001c18: R_386_PC32	performRegionOperation(Region, Region, RegionOperation)
10001c1c:	83 c4 3c             	add    esp,0x3c
10001c1f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001c22:	8d 65 f4             	lea    esp,[ebp-0xc]
10001c25:	5b                   	pop    ebx
10001c26:	5e                   	pop    esi
10001c27:	5f                   	pop    edi
10001c28:	5d                   	pop    ebp
10001c29:	c2 04 00             	ret    0x4

10001c2c <getRegionDifference(Region, Region)>:
10001c2c:	55                   	push   ebp
10001c2d:	89 e5                	mov    ebp,esp
10001c2f:	57                   	push   edi
10001c30:	56                   	push   esi
10001c31:	53                   	push   ebx
10001c32:	83 ec 1c             	sub    esp,0x1c
10001c35:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001c38:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10001c3b:	6a 02                	push   0x2
10001c3d:	83 ec 1c             	sub    esp,0x1c
10001c40:	89 e0                	mov    eax,esp
10001c42:	89 c3                	mov    ebx,eax
10001c44:	8d 45 28             	lea    eax,[ebp+0x28]
10001c47:	ba 07 00 00 00       	mov    edx,0x7
10001c4c:	89 df                	mov    edi,ebx
10001c4e:	89 c6                	mov    esi,eax
10001c50:	89 d1                	mov    ecx,edx
10001c52:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001c54:	83 ec 1c             	sub    esp,0x1c
10001c57:	89 e0                	mov    eax,esp
10001c59:	89 c3                	mov    ebx,eax
10001c5b:	8d 45 0c             	lea    eax,[ebp+0xc]
10001c5e:	ba 07 00 00 00       	mov    edx,0x7
10001c63:	89 df                	mov    edi,ebx
10001c65:	89 c6                	mov    esi,eax
10001c67:	89 d1                	mov    ecx,edx
10001c69:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001c6b:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10001c6e:	e8 fc ff ff ff       	call   10001c6f <getRegionDifference(Region, Region)+0x43>	10001c6f: R_386_PC32	performRegionOperation(Region, Region, RegionOperation)
10001c73:	83 c4 3c             	add    esp,0x3c
10001c76:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001c79:	8d 65 f4             	lea    esp,[ebp-0xc]
10001c7c:	5b                   	pop    ebx
10001c7d:	5e                   	pop    esi
10001c7e:	5f                   	pop    edi
10001c7f:	5d                   	pop    ebp
10001c80:	c2 04 00             	ret    0x4

10001c83 <getRegionIntersection(Region, Region)>:
10001c83:	55                   	push   ebp
10001c84:	89 e5                	mov    ebp,esp
10001c86:	57                   	push   edi
10001c87:	56                   	push   esi
10001c88:	53                   	push   ebx
10001c89:	83 ec 1c             	sub    esp,0x1c
10001c8c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001c8f:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10001c92:	6a 01                	push   0x1
10001c94:	83 ec 1c             	sub    esp,0x1c
10001c97:	89 e0                	mov    eax,esp
10001c99:	89 c3                	mov    ebx,eax
10001c9b:	8d 45 28             	lea    eax,[ebp+0x28]
10001c9e:	ba 07 00 00 00       	mov    edx,0x7
10001ca3:	89 df                	mov    edi,ebx
10001ca5:	89 c6                	mov    esi,eax
10001ca7:	89 d1                	mov    ecx,edx
10001ca9:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001cab:	83 ec 1c             	sub    esp,0x1c
10001cae:	89 e0                	mov    eax,esp
10001cb0:	89 c3                	mov    ebx,eax
10001cb2:	8d 45 0c             	lea    eax,[ebp+0xc]
10001cb5:	ba 07 00 00 00       	mov    edx,0x7
10001cba:	89 df                	mov    edi,ebx
10001cbc:	89 c6                	mov    esi,eax
10001cbe:	89 d1                	mov    ecx,edx
10001cc0:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001cc2:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10001cc5:	e8 fc ff ff ff       	call   10001cc6 <getRegionIntersection(Region, Region)+0x43>	10001cc6: R_386_PC32	performRegionOperation(Region, Region, RegionOperation)
10001cca:	83 c4 3c             	add    esp,0x3c
10001ccd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001cd0:	8d 65 f4             	lea    esp,[ebp-0xc]
10001cd3:	5b                   	pop    ebx
10001cd4:	5e                   	pop    esi
10001cd5:	5f                   	pop    edi
10001cd6:	5d                   	pop    ebp
10001cd7:	c2 04 00             	ret    0x4

10001cda <getRegionXOR(Region, Region)>:
10001cda:	55                   	push   ebp
10001cdb:	89 e5                	mov    ebp,esp
10001cdd:	57                   	push   edi
10001cde:	56                   	push   esi
10001cdf:	53                   	push   ebx
10001ce0:	83 ec 1c             	sub    esp,0x1c
10001ce3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001ce6:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10001ce9:	6a 03                	push   0x3
10001ceb:	83 ec 1c             	sub    esp,0x1c
10001cee:	89 e0                	mov    eax,esp
10001cf0:	89 c3                	mov    ebx,eax
10001cf2:	8d 45 28             	lea    eax,[ebp+0x28]
10001cf5:	ba 07 00 00 00       	mov    edx,0x7
10001cfa:	89 df                	mov    edi,ebx
10001cfc:	89 c6                	mov    esi,eax
10001cfe:	89 d1                	mov    ecx,edx
10001d00:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001d02:	83 ec 1c             	sub    esp,0x1c
10001d05:	89 e0                	mov    eax,esp
10001d07:	89 c3                	mov    ebx,eax
10001d09:	8d 45 0c             	lea    eax,[ebp+0xc]
10001d0c:	ba 07 00 00 00       	mov    edx,0x7
10001d11:	89 df                	mov    edi,ebx
10001d13:	89 c6                	mov    esi,eax
10001d15:	89 d1                	mov    ecx,edx
10001d17:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001d19:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10001d1c:	e8 fc ff ff ff       	call   10001d1d <getRegionXOR(Region, Region)+0x43>	10001d1d: R_386_PC32	performRegionOperation(Region, Region, RegionOperation)
10001d21:	83 c4 3c             	add    esp,0x3c
10001d24:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001d27:	8d 65 f4             	lea    esp,[ebp-0xc]
10001d2a:	5b                   	pop    ebx
10001d2b:	5e                   	pop    esi
10001d2c:	5f                   	pop    edi
10001d2d:	5d                   	pop    ebp
10001d2e:	c2 04 00             	ret    0x4

10001d31 <isPointInRegion(Region, int, int)>:
10001d31:	55                   	push   ebp
10001d32:	89 e5                	mov    ebp,esp
10001d34:	83 ec 20             	sub    esp,0x20
10001d37:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [ebp-0x4],0x0
10001d3e:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
10001d45:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10001d48:	39 45 fc             	cmp    DWORD PTR [ebp-0x4],eax
10001d4b:	0f 8d 0e 01 00 00    	jge    10001e5f <isPointInRegion(Region, int, int)+0x12e>
10001d51:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10001d54:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10001d57:	8d 50 01             	lea    edx,[eax+0x1]
10001d5a:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10001d5d:	c1 e0 02             	shl    eax,0x2
10001d60:	01 c8                	add    eax,ecx
10001d62:	8b 00                	mov    eax,DWORD PTR [eax]
10001d64:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10001d67:	83 7d e4 ff          	cmp    DWORD PTR [ebp-0x1c],0xffffffff
10001d6b:	75 07                	jne    10001d74 <isPointInRegion(Region, int, int)+0x43>
10001d6d:	b0 00                	mov    al,0x0
10001d6f:	e9 ed 00 00 00       	jmp    10001e61 <isPointInRegion(Region, int, int)+0x130>
10001d74:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10001d77:	25 ff ff 00 00       	and    eax,0xffff
10001d7c:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10001d7f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10001d82:	c1 e8 10             	shr    eax,0x10
10001d85:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10001d88:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001d8b:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10001d8e:	c1 e2 02             	shl    edx,0x2
10001d91:	01 d0                	add    eax,edx
10001d93:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10001d96:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10001d99:	01 45 f8             	add    DWORD PTR [ebp-0x8],eax
10001d9c:	c6 45 ef 00          	mov    BYTE PTR [ebp-0x11],0x0
10001da0:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [ebp-0x18],0x0
10001da7:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10001daa:	39 45 e8             	cmp    DWORD PTR [ebp-0x18],eax
10001dad:	0f 8d 90 00 00 00    	jge    10001e43 <isPointInRegion(Region, int, int)+0x112>
10001db3:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001db6:	8b 10                	mov    edx,DWORD PTR [eax]
10001db8:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
10001dbb:	39 c2                	cmp    edx,eax
10001dbd:	75 0b                	jne    10001dca <isPointInRegion(Region, int, int)+0x99>
10001dbf:	83 45 f0 04          	add    DWORD PTR [ebp-0x10],0x4
10001dc3:	80 75 ef 01          	xor    BYTE PTR [ebp-0x11],0x1
10001dc7:	ff 4d f4             	dec    DWORD PTR [ebp-0xc]
10001dca:	80 7d ef 00          	cmp    BYTE PTR [ebp-0x11],0x0
10001dce:	74 4d                	je     10001e1d <isPointInRegion(Region, int, int)+0xec>
10001dd0:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10001dd3:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10001dd6:	01 d0                	add    eax,edx
10001dd8:	39 45 28             	cmp    DWORD PTR [ebp+0x28],eax
10001ddb:	7c 40                	jl     10001e1d <isPointInRegion(Region, int, int)+0xec>
10001ddd:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10001de0:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10001de3:	01 c2                	add    edx,eax
10001de5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10001de8:	01 d0                	add    eax,edx
10001dea:	39 45 28             	cmp    DWORD PTR [ebp+0x28],eax
10001ded:	7d 2e                	jge    10001e1d <isPointInRegion(Region, int, int)+0xec>
10001def:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
10001df2:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
10001df5:	01 d0                	add    eax,edx
10001df7:	39 45 24             	cmp    DWORD PTR [ebp+0x24],eax
10001dfa:	7c 21                	jl     10001e1d <isPointInRegion(Region, int, int)+0xec>
10001dfc:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
10001dff:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
10001e02:	01 d0                	add    eax,edx
10001e04:	89 c2                	mov    edx,eax
10001e06:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001e09:	8b 00                	mov    eax,DWORD PTR [eax]
10001e0b:	01 c2                	add    edx,eax
10001e0d:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
10001e10:	29 c2                	sub    edx,eax
10001e12:	8b 45 24             	mov    eax,DWORD PTR [ebp+0x24]
10001e15:	39 c2                	cmp    edx,eax
10001e17:	76 04                	jbe    10001e1d <isPointInRegion(Region, int, int)+0xec>
10001e19:	b0 01                	mov    al,0x1
10001e1b:	eb 44                	jmp    10001e61 <isPointInRegion(Region, int, int)+0x130>
10001e1d:	83 7d f4 00          	cmp    DWORD PTR [ebp-0xc],0x0
10001e21:	74 0d                	je     10001e30 <isPointInRegion(Region, int, int)+0xff>
10001e23:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001e26:	8b 00                	mov    eax,DWORD PTR [eax]
10001e28:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
10001e2b:	e9 77 ff ff ff       	jmp    10001da7 <isPointInRegion(Region, int, int)+0x76>
10001e30:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
10001e33:	83 f0 01             	xor    eax,0x1
10001e36:	84 c0                	test   al,al
10001e38:	75 08                	jne    10001e42 <isPointInRegion(Region, int, int)+0x111>
10001e3a:	ff 45 e8             	inc    DWORD PTR [ebp-0x18]
10001e3d:	e9 65 ff ff ff       	jmp    10001da7 <isPointInRegion(Region, int, int)+0x76>
10001e42:	90                   	nop
10001e43:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10001e46:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10001e49:	01 d0                	add    eax,edx
10001e4b:	39 45 28             	cmp    DWORD PTR [ebp+0x28],eax
10001e4e:	75 04                	jne    10001e54 <isPointInRegion(Region, int, int)+0x123>
10001e50:	b0 00                	mov    al,0x0
10001e52:	eb 0d                	jmp    10001e61 <isPointInRegion(Region, int, int)+0x130>
10001e54:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10001e57:	01 45 fc             	add    DWORD PTR [ebp-0x4],eax
10001e5a:	e9 e6 fe ff ff       	jmp    10001d45 <isPointInRegion(Region, int, int)+0x14>
10001e5f:	b0 00                	mov    al,0x0
10001e61:	c9                   	leave  
10001e62:	c3                   	ret    

10001e63 <videoDrawRect(Video*, int, int, int, int, unsigned int)>:
10001e63:	55                   	push   ebp
10001e64:	89 e5                	mov    ebp,esp
10001e66:	83 ec 08             	sub    esp,0x8
10001e69:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001e6c:	8b 00                	mov    eax,DWORD PTR [eax]
10001e6e:	83 c0 28             	add    eax,0x28
10001e71:	8b 00                	mov    eax,DWORD PTR [eax]
10001e73:	83 ec 08             	sub    esp,0x8
10001e76:	ff 75 1c             	push   DWORD PTR [ebp+0x1c]
10001e79:	ff 75 18             	push   DWORD PTR [ebp+0x18]
10001e7c:	ff 75 14             	push   DWORD PTR [ebp+0x14]
10001e7f:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10001e82:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10001e85:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001e88:	ff d0                	call   eax
10001e8a:	83 c4 20             	add    esp,0x20
10001e8d:	90                   	nop
10001e8e:	c9                   	leave  
10001e8f:	c3                   	ret    

10001e90 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)>:
10001e90:	55                   	push   ebp
10001e91:	89 e5                	mov    ebp,esp
10001e93:	53                   	push   ebx
10001e94:	83 ec 14             	sub    esp,0x14
10001e97:	83 ec 0c             	sub    esp,0xc
10001e9a:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001e9d:	e8 fc ff ff ff       	call   10001e9e <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xe>	10001e9e: R_386_PC32	Video::getWidth()
10001ea2:	83 c4 10             	add    esp,0x10
10001ea5:	39 45 0c             	cmp    DWORD PTR [ebp+0xc],eax
10001ea8:	0f 9f c0             	setg   al
10001eab:	84 c0                	test   al,al
10001ead:	0f 85 44 01 00 00    	jne    10001ff7 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x167>
10001eb3:	83 ec 0c             	sub    esp,0xc
10001eb6:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001eb9:	e8 fc ff ff ff       	call   10001eba <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x2a>	10001eba: R_386_PC32	Video::getHeight()
10001ebe:	83 c4 10             	add    esp,0x10
10001ec1:	39 45 10             	cmp    DWORD PTR [ebp+0x10],eax
10001ec4:	0f 9f c0             	setg   al
10001ec7:	84 c0                	test   al,al
10001ec9:	0f 85 2b 01 00 00    	jne    10001ffa <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x16a>
10001ecf:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
10001ed2:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10001ed5:	01 d0                	add    eax,edx
10001ed7:	85 c0                	test   eax,eax
10001ed9:	0f 88 1e 01 00 00    	js     10001ffd <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x16d>
10001edf:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
10001ee2:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001ee5:	01 d0                	add    eax,edx
10001ee7:	85 c0                	test   eax,eax
10001ee9:	0f 88 11 01 00 00    	js     10002000 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x170>
10001eef:	83 7d 0c 00          	cmp    DWORD PTR [ebp+0xc],0x0
10001ef3:	79 0d                	jns    10001f02 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x72>
10001ef5:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10001ef8:	01 45 14             	add    DWORD PTR [ebp+0x14],eax
10001efb:	c7 45 0c 00 00 00 00 	mov    DWORD PTR [ebp+0xc],0x0
10001f02:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
10001f06:	79 0d                	jns    10001f15 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x85>
10001f08:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10001f0b:	01 45 18             	add    DWORD PTR [ebp+0x18],eax
10001f0e:	c7 45 10 00 00 00 00 	mov    DWORD PTR [ebp+0x10],0x0
10001f15:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
10001f18:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10001f1b:	8d 1c 02             	lea    ebx,[edx+eax*1]
10001f1e:	83 ec 0c             	sub    esp,0xc
10001f21:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001f24:	e8 fc ff ff ff       	call   10001f25 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x95>	10001f25: R_386_PC32	Video::getWidth()
10001f29:	83 c4 10             	add    esp,0x10
10001f2c:	39 c3                	cmp    ebx,eax
10001f2e:	0f 9f c0             	setg   al
10001f31:	84 c0                	test   al,al
10001f33:	74 14                	je     10001f49 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xb9>
10001f35:	83 ec 0c             	sub    esp,0xc
10001f38:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001f3b:	e8 fc ff ff ff       	call   10001f3c <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xac>	10001f3c: R_386_PC32	Video::getWidth()
10001f40:	83 c4 10             	add    esp,0x10
10001f43:	2b 45 0c             	sub    eax,DWORD PTR [ebp+0xc]
10001f46:	89 45 14             	mov    DWORD PTR [ebp+0x14],eax
10001f49:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
10001f4c:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001f4f:	8d 1c 02             	lea    ebx,[edx+eax*1]
10001f52:	83 ec 0c             	sub    esp,0xc
10001f55:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001f58:	e8 fc ff ff ff       	call   10001f59 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xc9>	10001f59: R_386_PC32	Video::getHeight()
10001f5d:	83 c4 10             	add    esp,0x10
10001f60:	39 c3                	cmp    ebx,eax
10001f62:	0f 9f c0             	setg   al
10001f65:	84 c0                	test   al,al
10001f67:	74 14                	je     10001f7d <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xed>
10001f69:	83 ec 0c             	sub    esp,0xc
10001f6c:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001f6f:	e8 fc ff ff ff       	call   10001f70 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xe0>	10001f70: R_386_PC32	Video::getHeight()
10001f74:	83 c4 10             	add    esp,0x10
10001f77:	2b 45 10             	sub    eax,DWORD PTR [ebp+0x10]
10001f7a:	89 45 18             	mov    DWORD PTR [ebp+0x18],eax
10001f7d:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10001f84:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10001f87:	3b 45 18             	cmp    eax,DWORD PTR [ebp+0x18]
10001f8a:	7d 75                	jge    10002001 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x171>
10001f8c:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
10001f8f:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10001f92:	01 c2                	add    edx,eax
10001f94:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10001f97:	01 d0                	add    eax,edx
10001f99:	83 e0 01             	and    eax,0x1
10001f9c:	85 c0                	test   eax,eax
10001f9e:	74 0a                	je     10001faa <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x11a>
10001fa0:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10001fa3:	35 ff ff ff 00       	xor    eax,0xffffff
10001fa8:	eb 03                	jmp    10001fad <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x11d>
10001faa:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10001fad:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10001fb0:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [ebp-0x14],0x0
10001fb7:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10001fba:	3b 45 14             	cmp    eax,DWORD PTR [ebp+0x14]
10001fbd:	7d 33                	jge    10001ff2 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x162>
10001fbf:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001fc2:	8b 00                	mov    eax,DWORD PTR [eax]
10001fc4:	83 c0 24             	add    eax,0x24
10001fc7:	8b 00                	mov    eax,DWORD PTR [eax]
10001fc9:	8b 4d 10             	mov    ecx,DWORD PTR [ebp+0x10]
10001fcc:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001fcf:	01 d1                	add    ecx,edx
10001fd1:	8b 5d 0c             	mov    ebx,DWORD PTR [ebp+0xc]
10001fd4:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
10001fd7:	01 da                	add    edx,ebx
10001fd9:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10001fdc:	51                   	push   ecx
10001fdd:	52                   	push   edx
10001fde:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001fe1:	ff d0                	call   eax
10001fe3:	83 c4 10             	add    esp,0x10
10001fe6:	81 75 f0 ff ff ff 00 	xor    DWORD PTR [ebp-0x10],0xffffff
10001fed:	ff 45 ec             	inc    DWORD PTR [ebp-0x14]
10001ff0:	eb c5                	jmp    10001fb7 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x127>
10001ff2:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10001ff5:	eb 8d                	jmp    10001f84 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xf4>
10001ff7:	90                   	nop
10001ff8:	eb 07                	jmp    10002001 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x171>
10001ffa:	90                   	nop
10001ffb:	eb 04                	jmp    10002001 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x171>
10001ffd:	90                   	nop
10001ffe:	eb 01                	jmp    10002001 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x171>
10002000:	90                   	nop
10002001:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10002004:	c9                   	leave  
10002005:	c3                   	ret    

10002006 <videoPutpixel(Video*, int, int, unsigned int)>:
10002006:	55                   	push   ebp
10002007:	89 e5                	mov    ebp,esp
10002009:	83 ec 08             	sub    esp,0x8
1000200c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000200f:	8b 00                	mov    eax,DWORD PTR [eax]
10002011:	83 c0 24             	add    eax,0x24
10002014:	8b 00                	mov    eax,DWORD PTR [eax]
10002016:	ff 75 14             	push   DWORD PTR [ebp+0x14]
10002019:	ff 75 10             	push   DWORD PTR [ebp+0x10]
1000201c:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000201f:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002022:	ff d0                	call   eax
10002024:	83 c4 10             	add    esp,0x10
10002027:	90                   	nop
10002028:	c9                   	leave  
10002029:	c3                   	ret    

1000202a <videoDrawCursor(Video*, int, int, unsigned int*)>:
1000202a:	55                   	push   ebp
1000202b:	89 e5                	mov    ebp,esp
1000202d:	83 ec 08             	sub    esp,0x8
10002030:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002033:	8b 00                	mov    eax,DWORD PTR [eax]
10002035:	83 c0 30             	add    eax,0x30
10002038:	8b 00                	mov    eax,DWORD PTR [eax]
1000203a:	83 ec 0c             	sub    esp,0xc
1000203d:	6a 00                	push   0x0
1000203f:	ff 75 14             	push   DWORD PTR [ebp+0x14]
10002042:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10002045:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10002048:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000204b:	ff d0                	call   eax
1000204d:	83 c4 20             	add    esp,0x20
10002050:	90                   	nop
10002051:	c9                   	leave  
10002052:	c3                   	ret    
10002053:	90                   	nop

10002054 <Region::Region()>:
10002054:	55                   	push   ebp
10002055:	89 e5                	mov    ebp,esp
10002057:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000205a:	c7 40 04 39 94 60 f9 	mov    DWORD PTR [eax+0x4],0xf9609439
10002061:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002064:	c7 40 08 72 28 c1 f2 	mov    DWORD PTR [eax+0x8],0xf2c12872
1000206b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000206e:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10002074:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002077:	c7 40 0c ab bc 21 ec 	mov    DWORD PTR [eax+0xc],0xec21bcab
1000207e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002081:	c7 40 10 e4 50 82 e5 	mov    DWORD PTR [eax+0x10],0xe58250e4
10002088:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000208b:	c7 40 14 1d e5 e2 de 	mov    DWORD PTR [eax+0x14],0xdee2e51d
10002092:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002095:	c6 40 18 00          	mov    BYTE PTR [eax+0x18],0x0
10002099:	90                   	nop
1000209a:	5d                   	pop    ebp
1000209b:	c3                   	ret    

1000209c <NFrame::Graphics::Graphics(Video*, Region)>:
1000209c:	55                   	push   ebp
1000209d:	89 e5                	mov    ebp,esp
1000209f:	57                   	push   edi
100020a0:	56                   	push   esi
100020a1:	53                   	push   ebx
100020a2:	83 ec 0c             	sub    esp,0xc
100020a5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100020a8:	83 c0 04             	add    eax,0x4
100020ab:	83 ec 0c             	sub    esp,0xc
100020ae:	50                   	push   eax
100020af:	e8 fc ff ff ff       	call   100020b0 <NFrame::Graphics::Graphics(Video*, Region)+0x14>	100020b0: R_386_PC32	Region::Region()
100020b4:	83 c4 10             	add    esp,0x10
100020b7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100020ba:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
100020bd:	89 10                	mov    DWORD PTR [eax],edx
100020bf:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100020c2:	8d 58 04             	lea    ebx,[eax+0x4]
100020c5:	8d 45 10             	lea    eax,[ebp+0x10]
100020c8:	ba 19 00 00 00       	mov    edx,0x19
100020cd:	89 df                	mov    edi,ebx
100020cf:	89 c6                	mov    esi,eax
100020d1:	89 d1                	mov    ecx,edx
100020d3:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100020d5:	90                   	nop
100020d6:	8d 65 f4             	lea    esp,[ebp-0xc]
100020d9:	5b                   	pop    ebx
100020da:	5e                   	pop    esi
100020db:	5f                   	pop    edi
100020dc:	5d                   	pop    ebp
100020dd:	c3                   	ret    

100020de <NFrame::paintClippedCommon(Region, NFrame::Graphics, unsigned int)>:
100020de:	55                   	push   ebp
100020df:	89 e5                	mov    ebp,esp
100020e1:	57                   	push   edi
100020e2:	56                   	push   esi
100020e3:	53                   	push   ebx
100020e4:	83 ec 3c             	sub    esp,0x3c
100020e7:	8d 45 cc             	lea    eax,[ebp-0x34]
100020ea:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100020ed:	83 ec 04             	sub    esp,0x4
100020f0:	83 ec 1c             	sub    esp,0x1c
100020f3:	89 e0                	mov    eax,esp
100020f5:	89 c3                	mov    ebx,eax
100020f7:	8d 45 0c             	lea    eax,[ebp+0xc]
100020fa:	ba 07 00 00 00       	mov    edx,0x7
100020ff:	89 df                	mov    edi,ebx
10002101:	89 c6                	mov    esi,eax
10002103:	89 d1                	mov    ecx,edx
10002105:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002107:	83 ec 1c             	sub    esp,0x1c
1000210a:	89 e0                	mov    eax,esp
1000210c:	89 c3                	mov    ebx,eax
1000210e:	8d 45 2c             	lea    eax,[ebp+0x2c]
10002111:	ba 07 00 00 00       	mov    edx,0x7
10002116:	89 df                	mov    edi,ebx
10002118:	89 c6                	mov    esi,eax
1000211a:	89 d1                	mov    ecx,edx
1000211c:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000211e:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10002121:	e8 fc ff ff ff       	call   10002122 <NFrame::paintClippedCommon(Region, NFrame::Graphics, unsigned int)+0x44>	10002122: R_386_PC32	getRegionIntersection(Region, Region)
10002126:	83 c4 3c             	add    esp,0x3c
10002129:	8b 45 28             	mov    eax,DWORD PTR [ebp+0x28]
1000212c:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000212f:	83 ec 0c             	sub    esp,0xc
10002132:	ff 75 48             	push   DWORD PTR [ebp+0x48]
10002135:	83 ec 1c             	sub    esp,0x1c
10002138:	89 e0                	mov    eax,esp
1000213a:	89 c3                	mov    ebx,eax
1000213c:	8d 45 cc             	lea    eax,[ebp-0x34]
1000213f:	ba 07 00 00 00       	mov    edx,0x7
10002144:	89 df                	mov    edi,ebx
10002146:	89 c6                	mov    esi,eax
10002148:	89 d1                	mov    ecx,edx
1000214a:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000214c:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
1000214f:	e8 fc ff ff ff       	call   10002150 <NFrame::paintClippedCommon(Region, NFrame::Graphics, unsigned int)+0x72>	10002150: R_386_PC32	fillRegion(Video*, Region, unsigned int)
10002154:	83 c4 30             	add    esp,0x30
10002157:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000215a:	83 ec 0c             	sub    esp,0xc
1000215d:	50                   	push   eax
1000215e:	e8 fc ff ff ff       	call   1000215f <NFrame::paintClippedCommon(Region, NFrame::Graphics, unsigned int)+0x81>	1000215f: R_386_PC32	free
10002163:	83 c4 10             	add    esp,0x10
10002166:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10002169:	83 ec 0c             	sub    esp,0xc
1000216c:	50                   	push   eax
1000216d:	e8 fc ff ff ff       	call   1000216e <NFrame::paintClippedCommon(Region, NFrame::Graphics, unsigned int)+0x90>	1000216e: R_386_PC32	free
10002172:	83 c4 10             	add    esp,0x10
10002175:	90                   	nop
10002176:	8d 65 f4             	lea    esp,[ebp-0xc]
10002179:	5b                   	pop    ebx
1000217a:	5e                   	pop    esi
1000217b:	5f                   	pop    edi
1000217c:	5d                   	pop    ebp
1000217d:	c3                   	ret    

1000217e <NFrame::markRegionAsDirty(Region)>:
1000217e:	55                   	push   ebp
1000217f:	89 e5                	mov    ebp,esp
10002181:	57                   	push   edi
10002182:	56                   	push   esi
10002183:	53                   	push   ebx
10002184:	83 ec 3c             	sub    esp,0x3c
10002187:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000218a:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
1000218d:	85 c0                	test   eax,eax
1000218f:	74 2d                	je     100021be <NFrame::markRegionAsDirty(Region)+0x40>
10002191:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002194:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10002197:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000219a:	83 ec 1c             	sub    esp,0x1c
1000219d:	89 e0                	mov    eax,esp
1000219f:	89 c3                	mov    ebx,eax
100021a1:	8d 45 0c             	lea    eax,[ebp+0xc]
100021a4:	ba 07 00 00 00       	mov    edx,0x7
100021a9:	89 df                	mov    edi,ebx
100021ab:	89 c6                	mov    esi,eax
100021ad:	89 d1                	mov    ecx,edx
100021af:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100021b1:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
100021b4:	e8 fc ff ff ff       	call   100021b5 <NFrame::markRegionAsDirty(Region)+0x37>	100021b5: R_386_PC32	NFrame::markRegionAsDirty(Region)
100021b9:	83 c4 20             	add    esp,0x20
100021bc:	eb 6b                	jmp    10002229 <NFrame::markRegionAsDirty(Region)+0xab>
100021be:	8d 45 cc             	lea    eax,[ebp-0x34]
100021c1:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100021c4:	83 ec 04             	sub    esp,0x4
100021c7:	83 ec 1c             	sub    esp,0x1c
100021ca:	89 e0                	mov    eax,esp
100021cc:	89 c3                	mov    ebx,eax
100021ce:	8d 45 0c             	lea    eax,[ebp+0xc]
100021d1:	ba 07 00 00 00       	mov    edx,0x7
100021d6:	89 df                	mov    edi,ebx
100021d8:	89 c6                	mov    esi,eax
100021da:	89 d1                	mov    ecx,edx
100021dc:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100021de:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100021e1:	83 ec 1c             	sub    esp,0x1c
100021e4:	89 e2                	mov    edx,esp
100021e6:	8d 58 4c             	lea    ebx,[eax+0x4c]
100021e9:	b8 07 00 00 00       	mov    eax,0x7
100021ee:	89 d7                	mov    edi,edx
100021f0:	89 de                	mov    esi,ebx
100021f2:	89 c1                	mov    ecx,eax
100021f4:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100021f6:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
100021f9:	e8 fc ff ff ff       	call   100021fa <NFrame::markRegionAsDirty(Region)+0x7c>	100021fa: R_386_PC32	getRegionUnion(Region, Region)
100021fe:	83 c4 3c             	add    esp,0x3c
10002201:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002204:	8b 40 4c             	mov    eax,DWORD PTR [eax+0x4c]
10002207:	83 ec 0c             	sub    esp,0xc
1000220a:	50                   	push   eax
1000220b:	e8 fc ff ff ff       	call   1000220c <NFrame::markRegionAsDirty(Region)+0x8e>	1000220c: R_386_PC32	free
10002210:	83 c4 10             	add    esp,0x10
10002213:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002216:	8d 58 4c             	lea    ebx,[eax+0x4c]
10002219:	8d 45 cc             	lea    eax,[ebp-0x34]
1000221c:	ba 19 00 00 00       	mov    edx,0x19
10002221:	89 df                	mov    edi,ebx
10002223:	89 c6                	mov    esi,eax
10002225:	89 d1                	mov    ecx,edx
10002227:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002229:	90                   	nop
1000222a:	8d 65 f4             	lea    esp,[ebp-0xc]
1000222d:	5b                   	pop    ebx
1000222e:	5e                   	pop    esi
1000222f:	5f                   	pop    edi
10002230:	5d                   	pop    ebp
10002231:	c3                   	ret    

10002232 <NFrame::invalidate()>:
10002232:	55                   	push   ebp
10002233:	89 e5                	mov    ebp,esp
10002235:	57                   	push   edi
10002236:	56                   	push   esi
10002237:	53                   	push   ebx
10002238:	83 ec 2c             	sub    esp,0x2c
1000223b:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
1000223e:	8d 45 cc             	lea    eax,[ebp-0x34]
10002241:	8d 5a 14             	lea    ebx,[edx+0x14]
10002244:	ba 07 00 00 00       	mov    edx,0x7
10002249:	89 c7                	mov    edi,eax
1000224b:	89 de                	mov    esi,ebx
1000224d:	89 d1                	mov    ecx,edx
1000224f:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002251:	83 ec 0c             	sub    esp,0xc
10002254:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002257:	e8 fc ff ff ff       	call   10002258 <NFrame::invalidate()+0x26>	10002258: R_386_PC32	NFrame::getAbsX()
1000225c:	83 c4 10             	add    esp,0x10
1000225f:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10002262:	83 ec 0c             	sub    esp,0xc
10002265:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002268:	e8 fc ff ff ff       	call   10002269 <NFrame::invalidate()+0x37>	10002269: R_386_PC32	NFrame::getAbsY()
1000226d:	83 c4 10             	add    esp,0x10
10002270:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10002273:	83 ec 1c             	sub    esp,0x1c
10002276:	89 e0                	mov    eax,esp
10002278:	89 c3                	mov    ebx,eax
1000227a:	8d 45 cc             	lea    eax,[ebp-0x34]
1000227d:	ba 07 00 00 00       	mov    edx,0x7
10002282:	89 df                	mov    edi,ebx
10002284:	89 c6                	mov    esi,eax
10002286:	89 d1                	mov    ecx,edx
10002288:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000228a:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000228d:	e8 fc ff ff ff       	call   1000228e <NFrame::invalidate()+0x5c>	1000228e: R_386_PC32	NFrame::markRegionAsDirty(Region)
10002292:	83 c4 20             	add    esp,0x20
10002295:	90                   	nop
10002296:	8d 65 f4             	lea    esp,[ebp-0xc]
10002299:	5b                   	pop    ebx
1000229a:	5e                   	pop    esi
1000229b:	5f                   	pop    edi
1000229c:	5d                   	pop    ebp
1000229d:	c3                   	ret    

1000229e <NFrame::repaintAux(Video*, Region, bool)>:
1000229e:	55                   	push   ebp
1000229f:	89 e5                	mov    ebp,esp
100022a1:	57                   	push   edi
100022a2:	56                   	push   esi
100022a3:	53                   	push   ebx
100022a4:	81 ec 2c 01 00 00    	sub    esp,0x12c
100022aa:	8b 45 30             	mov    eax,DWORD PTR [ebp+0x30]
100022ad:	88 85 d4 fe ff ff    	mov    BYTE PTR [ebp-0x12c],al
100022b3:	8d 45 84             	lea    eax,[ebp-0x7c]
100022b6:	83 ec 08             	sub    esp,0x8
100022b9:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100022bc:	50                   	push   eax
100022bd:	e8 fc ff ff ff       	call   100022be <NFrame::repaintAux(Video*, Region, bool)+0x20>	100022be: R_386_PC32	NFrame::getDrawRegion()
100022c2:	83 c4 0c             	add    esp,0xc
100022c5:	83 ec 0c             	sub    esp,0xc
100022c8:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100022cb:	e8 fc ff ff ff       	call   100022cc <NFrame::repaintAux(Video*, Region, bool)+0x2e>	100022cc: R_386_PC32	NFrame::getAbsX()
100022d0:	83 c4 10             	add    esp,0x10
100022d3:	89 45 94             	mov    DWORD PTR [ebp-0x6c],eax
100022d6:	83 ec 0c             	sub    esp,0xc
100022d9:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100022dc:	e8 fc ff ff ff       	call   100022dd <NFrame::repaintAux(Video*, Region, bool)+0x3f>	100022dd: R_386_PC32	NFrame::getAbsY()
100022e1:	83 c4 10             	add    esp,0x10
100022e4:	89 45 98             	mov    DWORD PTR [ebp-0x68],eax
100022e7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100022ea:	89 85 d0 fe ff ff    	mov    DWORD PTR [ebp-0x130],eax
100022f0:	83 ec 04             	sub    esp,0x4
100022f3:	83 ec 1c             	sub    esp,0x1c
100022f6:	89 e0                	mov    eax,esp
100022f8:	89 c3                	mov    ebx,eax
100022fa:	8d 45 14             	lea    eax,[ebp+0x14]
100022fd:	ba 07 00 00 00       	mov    edx,0x7
10002302:	89 df                	mov    edi,ebx
10002304:	89 c6                	mov    esi,eax
10002306:	89 d1                	mov    ecx,edx
10002308:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000230a:	83 ec 1c             	sub    esp,0x1c
1000230d:	89 e0                	mov    eax,esp
1000230f:	89 c3                	mov    ebx,eax
10002311:	8d 45 84             	lea    eax,[ebp-0x7c]
10002314:	ba 07 00 00 00       	mov    edx,0x7
10002319:	89 df                	mov    edi,ebx
1000231b:	89 c6                	mov    esi,eax
1000231d:	89 d1                	mov    ecx,edx
1000231f:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002321:	ff b5 d0 fe ff ff    	push   DWORD PTR [ebp-0x130]
10002327:	e8 fc ff ff ff       	call   10002328 <NFrame::repaintAux(Video*, Region, bool)+0x8a>	10002328: R_386_PC32	getRegionIntersection(Region, Region)
1000232c:	83 c4 3c             	add    esp,0x3c
1000232f:	8b 45 84             	mov    eax,DWORD PTR [ebp-0x7c]
10002332:	83 ec 0c             	sub    esp,0xc
10002335:	50                   	push   eax
10002336:	e8 fc ff ff ff       	call   10002337 <NFrame::repaintAux(Video*, Region, bool)+0x99>	10002337: R_386_PC32	free
1000233b:	83 c4 10             	add    esp,0x10
1000233e:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002341:	8b 00                	mov    eax,DWORD PTR [eax]
10002343:	8b 00                	mov    eax,DWORD PTR [eax]
10002345:	89 85 d0 fe ff ff    	mov    DWORD PTR [ebp-0x130],eax
1000234b:	83 ec 0c             	sub    esp,0xc
1000234e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002351:	83 ec 1c             	sub    esp,0x1c
10002354:	89 e2                	mov    edx,esp
10002356:	89 c3                	mov    ebx,eax
10002358:	b8 07 00 00 00       	mov    eax,0x7
1000235d:	89 d7                	mov    edi,edx
1000235f:	89 de                	mov    esi,ebx
10002361:	89 c1                	mov    ecx,eax
10002363:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002365:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10002368:	8d 45 a0             	lea    eax,[ebp-0x60]
1000236b:	50                   	push   eax
1000236c:	e8 fc ff ff ff       	call   1000236d <NFrame::repaintAux(Video*, Region, bool)+0xcf>	1000236d: R_386_PC32	NFrame::Graphics::Graphics(Video*, Region)
10002371:	83 c4 30             	add    esp,0x30
10002374:	83 ec 0c             	sub    esp,0xc
10002377:	83 ec 20             	sub    esp,0x20
1000237a:	89 e0                	mov    eax,esp
1000237c:	89 c3                	mov    ebx,eax
1000237e:	8d 45 a0             	lea    eax,[ebp-0x60]
10002381:	ba 08 00 00 00       	mov    edx,0x8
10002386:	89 df                	mov    edi,ebx
10002388:	89 c6                	mov    esi,eax
1000238a:	89 d1                	mov    ecx,edx
1000238c:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000238e:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10002391:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [ebp-0x130]
10002397:	ff d0                	call   eax
10002399:	83 c4 30             	add    esp,0x30
1000239c:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
1000239f:	8d 85 68 ff ff ff    	lea    eax,[ebp-0x98]
100023a5:	8d 5a 14             	lea    ebx,[edx+0x14]
100023a8:	ba 07 00 00 00       	mov    edx,0x7
100023ad:	89 c7                	mov    edi,eax
100023af:	89 de                	mov    esi,ebx
100023b1:	89 d1                	mov    ecx,edx
100023b3:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100023b5:	83 ec 0c             	sub    esp,0xc
100023b8:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100023bb:	e8 fc ff ff ff       	call   100023bc <NFrame::repaintAux(Video*, Region, bool)+0x11e>	100023bc: R_386_PC32	NFrame::getAbsX()
100023c0:	83 c4 10             	add    esp,0x10
100023c3:	89 85 78 ff ff ff    	mov    DWORD PTR [ebp-0x88],eax
100023c9:	83 ec 0c             	sub    esp,0xc
100023cc:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100023cf:	e8 fc ff ff ff       	call   100023d0 <NFrame::repaintAux(Video*, Region, bool)+0x132>	100023d0: R_386_PC32	NFrame::getAbsY()
100023d4:	83 c4 10             	add    esp,0x10
100023d7:	89 85 7c ff ff ff    	mov    DWORD PTR [ebp-0x84],eax
100023dd:	8d 85 4c ff ff ff    	lea    eax,[ebp-0xb4]
100023e3:	89 85 d0 fe ff ff    	mov    DWORD PTR [ebp-0x130],eax
100023e9:	83 ec 04             	sub    esp,0x4
100023ec:	83 ec 1c             	sub    esp,0x1c
100023ef:	89 e0                	mov    eax,esp
100023f1:	89 c3                	mov    ebx,eax
100023f3:	8d 85 68 ff ff ff    	lea    eax,[ebp-0x98]
100023f9:	ba 07 00 00 00       	mov    edx,0x7
100023fe:	89 df                	mov    edi,ebx
10002400:	89 c6                	mov    esi,eax
10002402:	89 d1                	mov    ecx,edx
10002404:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002406:	83 ec 1c             	sub    esp,0x1c
10002409:	89 e0                	mov    eax,esp
1000240b:	89 c3                	mov    ebx,eax
1000240d:	8d 45 14             	lea    eax,[ebp+0x14]
10002410:	ba 07 00 00 00       	mov    edx,0x7
10002415:	89 df                	mov    edi,ebx
10002417:	89 c6                	mov    esi,eax
10002419:	89 d1                	mov    ecx,edx
1000241b:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000241d:	ff b5 d0 fe ff ff    	push   DWORD PTR [ebp-0x130]
10002423:	e8 fc ff ff ff       	call   10002424 <NFrame::repaintAux(Video*, Region, bool)+0x186>	10002424: R_386_PC32	getRegionIntersection(Region, Region)
10002428:	83 c4 3c             	add    esp,0x3c
1000242b:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10002432:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002435:	8b 40 08             	mov    eax,DWORD PTR [eax+0x8]
10002438:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
1000243b:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
1000243f:	0f 84 8d 01 00 00    	je     100025d2 <NFrame::repaintAux(Video*, Region, bool)+0x334>
10002445:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10002448:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
1000244b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000244e:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10002451:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10002454:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10002457:	8b 00                	mov    eax,DWORD PTR [eax]
10002459:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
1000245c:	84 c0                	test   al,al
1000245e:	74 1a                	je     1000247a <NFrame::repaintAux(Video*, Region, bool)+0x1dc>
10002460:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10002463:	8b 00                	mov    eax,DWORD PTR [eax]
10002465:	8a 40 69             	mov    al,BYTE PTR [eax+0x69]
10002468:	84 c0                	test   al,al
1000246a:	0f 84 5c 01 00 00    	je     100025cc <NFrame::repaintAux(Video*, Region, bool)+0x32e>
10002470:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10002473:	8b 00                	mov    eax,DWORD PTR [eax]
10002475:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10002478:	eb c1                	jmp    1000243b <NFrame::repaintAux(Video*, Region, bool)+0x19d>
1000247a:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
1000247d:	8b 00                	mov    eax,DWORD PTR [eax]
1000247f:	89 85 d0 fe ff ff    	mov    DWORD PTR [ebp-0x130],eax
10002485:	8d 9d 30 ff ff ff    	lea    ebx,[ebp-0xd0]
1000248b:	89 9d cc fe ff ff    	mov    DWORD PTR [ebp-0x134],ebx
10002491:	83 ec 04             	sub    esp,0x4
10002494:	6a 01                	push   0x1
10002496:	83 ec 1c             	sub    esp,0x1c
10002499:	89 e0                	mov    eax,esp
1000249b:	89 c3                	mov    ebx,eax
1000249d:	8d 85 4c ff ff ff    	lea    eax,[ebp-0xb4]
100024a3:	ba 07 00 00 00       	mov    edx,0x7
100024a8:	89 df                	mov    edi,ebx
100024aa:	89 c6                	mov    esi,eax
100024ac:	89 d1                	mov    ecx,edx
100024ae:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100024b0:	ff 75 10             	push   DWORD PTR [ebp+0x10]
100024b3:	ff b5 d0 fe ff ff    	push   DWORD PTR [ebp-0x130]
100024b9:	ff b5 cc fe ff ff    	push   DWORD PTR [ebp-0x134]
100024bf:	e8 fc ff ff ff       	call   100024c0 <NFrame::repaintAux(Video*, Region, bool)+0x222>	100024c0: R_386_PC32	NFrame::repaintAux(Video*, Region, bool)
100024c4:	83 c4 2c             	add    esp,0x2c
100024c7:	8d 85 14 ff ff ff    	lea    eax,[ebp-0xec]
100024cd:	89 85 d0 fe ff ff    	mov    DWORD PTR [ebp-0x130],eax
100024d3:	83 ec 04             	sub    esp,0x4
100024d6:	83 ec 1c             	sub    esp,0x1c
100024d9:	89 e0                	mov    eax,esp
100024db:	89 c3                	mov    ebx,eax
100024dd:	8d 85 30 ff ff ff    	lea    eax,[ebp-0xd0]
100024e3:	ba 07 00 00 00       	mov    edx,0x7
100024e8:	89 df                	mov    edi,ebx
100024ea:	89 c6                	mov    esi,eax
100024ec:	89 d1                	mov    ecx,edx
100024ee:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100024f0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100024f3:	83 ec 1c             	sub    esp,0x1c
100024f6:	89 e2                	mov    edx,esp
100024f8:	89 c3                	mov    ebx,eax
100024fa:	b8 07 00 00 00       	mov    eax,0x7
100024ff:	89 d7                	mov    edi,edx
10002501:	89 de                	mov    esi,ebx
10002503:	89 c1                	mov    ecx,eax
10002505:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002507:	ff b5 d0 fe ff ff    	push   DWORD PTR [ebp-0x130]
1000250d:	e8 fc ff ff ff       	call   1000250e <NFrame::repaintAux(Video*, Region, bool)+0x270>	1000250e: R_386_PC32	getRegionUnion(Region, Region)
10002512:	83 c4 3c             	add    esp,0x3c
10002515:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002518:	8b 00                	mov    eax,DWORD PTR [eax]
1000251a:	83 ec 0c             	sub    esp,0xc
1000251d:	50                   	push   eax
1000251e:	e8 fc ff ff ff       	call   1000251f <NFrame::repaintAux(Video*, Region, bool)+0x281>	1000251f: R_386_PC32	free
10002523:	83 c4 10             	add    esp,0x10
10002526:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002529:	89 c3                	mov    ebx,eax
1000252b:	8d 85 14 ff ff ff    	lea    eax,[ebp-0xec]
10002531:	ba 19 00 00 00       	mov    edx,0x19
10002536:	89 df                	mov    edi,ebx
10002538:	89 c6                	mov    esi,eax
1000253a:	89 d1                	mov    ecx,edx
1000253c:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000253e:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10002544:	89 85 d0 fe ff ff    	mov    DWORD PTR [ebp-0x130],eax
1000254a:	83 ec 04             	sub    esp,0x4
1000254d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002550:	83 ec 1c             	sub    esp,0x1c
10002553:	89 e2                	mov    edx,esp
10002555:	89 c3                	mov    ebx,eax
10002557:	b8 07 00 00 00       	mov    eax,0x7
1000255c:	89 d7                	mov    edi,edx
1000255e:	89 de                	mov    esi,ebx
10002560:	89 c1                	mov    ecx,eax
10002562:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002564:	83 ec 1c             	sub    esp,0x1c
10002567:	89 e0                	mov    eax,esp
10002569:	89 c3                	mov    ebx,eax
1000256b:	8d 85 4c ff ff ff    	lea    eax,[ebp-0xb4]
10002571:	ba 07 00 00 00       	mov    edx,0x7
10002576:	89 df                	mov    edi,ebx
10002578:	89 c6                	mov    esi,eax
1000257a:	89 d1                	mov    ecx,edx
1000257c:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000257e:	ff b5 d0 fe ff ff    	push   DWORD PTR [ebp-0x130]
10002584:	e8 fc ff ff ff       	call   10002585 <NFrame::repaintAux(Video*, Region, bool)+0x2e7>	10002585: R_386_PC32	getRegionDifference(Region, Region)
10002589:	83 c4 3c             	add    esp,0x3c
1000258c:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
10002592:	83 ec 0c             	sub    esp,0xc
10002595:	50                   	push   eax
10002596:	e8 fc ff ff ff       	call   10002597 <NFrame::repaintAux(Video*, Region, bool)+0x2f9>	10002597: R_386_PC32	free
1000259b:	83 c4 10             	add    esp,0x10
1000259e:	8d 85 4c ff ff ff    	lea    eax,[ebp-0xb4]
100025a4:	8d 95 f8 fe ff ff    	lea    edx,[ebp-0x108]
100025aa:	b9 19 00 00 00       	mov    ecx,0x19
100025af:	89 c7                	mov    edi,eax
100025b1:	89 d6                	mov    esi,edx
100025b3:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100025b5:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
100025bb:	83 ec 0c             	sub    esp,0xc
100025be:	50                   	push   eax
100025bf:	e8 fc ff ff ff       	call   100025c0 <NFrame::repaintAux(Video*, Region, bool)+0x322>	100025c0: R_386_PC32	free
100025c4:	83 c4 10             	add    esp,0x10
100025c7:	e9 6f fe ff ff       	jmp    1000243b <NFrame::repaintAux(Video*, Region, bool)+0x19d>
100025cc:	90                   	nop
100025cd:	e9 69 fe ff ff       	jmp    1000243b <NFrame::repaintAux(Video*, Region, bool)+0x19d>
100025d2:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
100025d8:	83 ec 0c             	sub    esp,0xc
100025db:	50                   	push   eax
100025dc:	e8 fc ff ff ff       	call   100025dd <NFrame::repaintAux(Video*, Region, bool)+0x33f>	100025dd: R_386_PC32	free
100025e1:	83 c4 10             	add    esp,0x10
100025e4:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100025e7:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100025ea:	85 c0                	test   eax,eax
100025ec:	75 48                	jne    10002636 <NFrame::repaintAux(Video*, Region, bool)+0x398>
100025ee:	80 bd d4 fe ff ff 00 	cmp    BYTE PTR [ebp-0x12c],0x0
100025f5:	74 3f                	je     10002636 <NFrame::repaintAux(Video*, Region, bool)+0x398>
100025f7:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100025fa:	8b 40 4c             	mov    eax,DWORD PTR [eax+0x4c]
100025fd:	83 ec 0c             	sub    esp,0xc
10002600:	50                   	push   eax
10002601:	e8 fc ff ff ff       	call   10002602 <NFrame::repaintAux(Video*, Region, bool)+0x364>	10002602: R_386_PC32	free
10002606:	83 c4 10             	add    esp,0x10
10002609:	8d 45 c0             	lea    eax,[ebp-0x40]
1000260c:	83 ec 0c             	sub    esp,0xc
1000260f:	6a 01                	push   0x1
10002611:	6a 00                	push   0x0
10002613:	6a 00                	push   0x0
10002615:	6a 00                	push   0x0
10002617:	50                   	push   eax
10002618:	e8 fc ff ff ff       	call   10002619 <NFrame::repaintAux(Video*, Region, bool)+0x37b>	10002619: R_386_PC32	createRectangleRegion(int, int, int, int)
1000261d:	83 c4 1c             	add    esp,0x1c
10002620:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002623:	8d 58 4c             	lea    ebx,[eax+0x4c]
10002626:	8d 45 c0             	lea    eax,[ebp-0x40]
10002629:	ba 19 00 00 00       	mov    edx,0x19
1000262e:	89 df                	mov    edi,ebx
10002630:	89 c6                	mov    esi,eax
10002632:	89 d1                	mov    ecx,edx
10002634:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002636:	83 7d e4 00          	cmp    DWORD PTR [ebp-0x1c],0x0
1000263a:	0f 84 80 00 00 00    	je     100026c0 <NFrame::repaintAux(Video*, Region, bool)+0x422>
10002640:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10002643:	8d 85 dc fe ff ff    	lea    eax,[ebp-0x124]
10002649:	8d 5a 30             	lea    ebx,[edx+0x30]
1000264c:	ba 07 00 00 00       	mov    edx,0x7
10002651:	89 c7                	mov    edi,eax
10002653:	89 de                	mov    esi,ebx
10002655:	89 d1                	mov    ecx,edx
10002657:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002659:	83 ec 0c             	sub    esp,0xc
1000265c:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000265f:	e8 fc ff ff ff       	call   10002660 <NFrame::repaintAux(Video*, Region, bool)+0x3c2>	10002660: R_386_PC32	NFrame::getAbsX()
10002664:	83 c4 10             	add    esp,0x10
10002667:	89 c2                	mov    edx,eax
10002669:	8b 85 ec fe ff ff    	mov    eax,DWORD PTR [ebp-0x114]
1000266f:	01 d0                	add    eax,edx
10002671:	89 85 ec fe ff ff    	mov    DWORD PTR [ebp-0x114],eax
10002677:	83 ec 0c             	sub    esp,0xc
1000267a:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000267d:	e8 fc ff ff ff       	call   1000267e <NFrame::repaintAux(Video*, Region, bool)+0x3e0>	1000267e: R_386_PC32	NFrame::getAbsY()
10002682:	83 c4 10             	add    esp,0x10
10002685:	89 c2                	mov    edx,eax
10002687:	8b 85 f0 fe ff ff    	mov    eax,DWORD PTR [ebp-0x110]
1000268d:	01 d0                	add    eax,edx
1000268f:	89 85 f0 fe ff ff    	mov    DWORD PTR [ebp-0x110],eax
10002695:	83 ec 0c             	sub    esp,0xc
10002698:	6a 00                	push   0x0
1000269a:	83 ec 1c             	sub    esp,0x1c
1000269d:	89 e0                	mov    eax,esp
1000269f:	89 c3                	mov    ebx,eax
100026a1:	8d 85 dc fe ff ff    	lea    eax,[ebp-0x124]
100026a7:	ba 07 00 00 00       	mov    edx,0x7
100026ac:	89 df                	mov    edi,ebx
100026ae:	89 c6                	mov    esi,eax
100026b0:	89 d1                	mov    ecx,edx
100026b2:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100026b4:	ff 75 10             	push   DWORD PTR [ebp+0x10]
100026b7:	e8 fc ff ff ff       	call   100026b8 <NFrame::repaintAux(Video*, Region, bool)+0x41a>	100026b8: R_386_PC32	fillRegion(Video*, Region, unsigned int)
100026bc:	83 c4 30             	add    esp,0x30
100026bf:	90                   	nop
100026c0:	90                   	nop
100026c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100026c4:	8d 65 f4             	lea    esp,[ebp-0xc]
100026c7:	5b                   	pop    ebx
100026c8:	5e                   	pop    esi
100026c9:	5f                   	pop    edi
100026ca:	5d                   	pop    ebp
100026cb:	c2 04 00             	ret    0x4

100026ce <NFrame::NFrame(Region)>:
100026ce:	55                   	push   ebp
100026cf:	89 e5                	mov    ebp,esp
100026d1:	57                   	push   edi
100026d2:	56                   	push   esi
100026d3:	53                   	push   ebx
100026d4:	83 ec 2c             	sub    esp,0x2c
100026d7:	ba 08 00 00 00       	mov    edx,0x8	100026d8: R_386_32	vtable for NFrame
100026dc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100026df:	89 10                	mov    DWORD PTR [eax],edx
100026e1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100026e4:	83 c0 04             	add    eax,0x4
100026e7:	83 ec 0c             	sub    esp,0xc
100026ea:	50                   	push   eax
100026eb:	e8 fc ff ff ff       	call   100026ec <NFrame::NFrame(Region)+0x1e>	100026ec: R_386_PC32	LinkedList2<NFrame*>::LinkedList2()
100026f0:	83 c4 10             	add    esp,0x10
100026f3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100026f6:	83 c0 14             	add    eax,0x14
100026f9:	83 ec 0c             	sub    esp,0xc
100026fc:	50                   	push   eax
100026fd:	e8 fc ff ff ff       	call   100026fe <NFrame::NFrame(Region)+0x30>	100026fe: R_386_PC32	Region::Region()
10002702:	83 c4 10             	add    esp,0x10
10002705:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002708:	83 c0 30             	add    eax,0x30
1000270b:	83 ec 0c             	sub    esp,0xc
1000270e:	50                   	push   eax
1000270f:	e8 fc ff ff ff       	call   10002710 <NFrame::NFrame(Region)+0x42>	10002710: R_386_PC32	Region::Region()
10002714:	83 c4 10             	add    esp,0x10
10002717:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000271a:	83 c0 4c             	add    eax,0x4c
1000271d:	83 ec 0c             	sub    esp,0xc
10002720:	50                   	push   eax
10002721:	e8 fc ff ff ff       	call   10002722 <NFrame::NFrame(Region)+0x54>	10002722: R_386_PC32	Region::Region()
10002726:	83 c4 10             	add    esp,0x10
10002729:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000272c:	c6 40 68 00          	mov    BYTE PTR [eax+0x68],0x0
10002730:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002733:	c6 40 69 00          	mov    BYTE PTR [eax+0x69],0x0
10002737:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000273a:	c7 40 6c 00 00 00 00 	mov    DWORD PTR [eax+0x6c],0x0
10002741:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002744:	c7 40 70 18 00 00 00 	mov    DWORD PTR [eax+0x70],0x18
1000274b:	8d 45 cc             	lea    eax,[ebp-0x34]
1000274e:	83 ec 0c             	sub    esp,0xc
10002751:	6a 01                	push   0x1
10002753:	6a 00                	push   0x0
10002755:	6a 00                	push   0x0
10002757:	6a 00                	push   0x0
10002759:	50                   	push   eax
1000275a:	e8 fc ff ff ff       	call   1000275b <NFrame::NFrame(Region)+0x8d>	1000275b: R_386_PC32	createRectangleRegion(int, int, int, int)
1000275f:	83 c4 1c             	add    esp,0x1c
10002762:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002765:	8d 58 4c             	lea    ebx,[eax+0x4c]
10002768:	8d 45 cc             	lea    eax,[ebp-0x34]
1000276b:	ba 19 00 00 00       	mov    edx,0x19
10002770:	89 df                	mov    edi,ebx
10002772:	89 c6                	mov    esi,eax
10002774:	89 d1                	mov    ecx,edx
10002776:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002778:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000277b:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
10002782:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002785:	8d 58 14             	lea    ebx,[eax+0x14]
10002788:	8d 45 0c             	lea    eax,[ebp+0xc]
1000278b:	ba 19 00 00 00       	mov    edx,0x19
10002790:	89 df                	mov    edi,ebx
10002792:	89 c6                	mov    esi,eax
10002794:	89 d1                	mov    ecx,edx
10002796:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002798:	90                   	nop
10002799:	8d 65 f4             	lea    esp,[ebp-0xc]
1000279c:	5b                   	pop    ebx
1000279d:	5e                   	pop    esi
1000279e:	5f                   	pop    edi
1000279f:	5d                   	pop    ebp
100027a0:	c3                   	ret    
100027a1:	90                   	nop

100027a2 <NFrame::NFrame(int, int, int, int)>:
100027a2:	55                   	push   ebp
100027a3:	89 e5                	mov    ebp,esp
100027a5:	57                   	push   edi
100027a6:	56                   	push   esi
100027a7:	53                   	push   ebx
100027a8:	83 ec 4c             	sub    esp,0x4c
100027ab:	ba 08 00 00 00       	mov    edx,0x8	100027ac: R_386_32	vtable for NFrame
100027b0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100027b3:	89 10                	mov    DWORD PTR [eax],edx
100027b5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100027b8:	83 c0 04             	add    eax,0x4
100027bb:	83 ec 0c             	sub    esp,0xc
100027be:	50                   	push   eax
100027bf:	e8 fc ff ff ff       	call   100027c0 <NFrame::NFrame(int, int, int, int)+0x1e>	100027c0: R_386_PC32	LinkedList2<NFrame*>::LinkedList2()
100027c4:	83 c4 10             	add    esp,0x10
100027c7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100027ca:	83 c0 14             	add    eax,0x14
100027cd:	83 ec 0c             	sub    esp,0xc
100027d0:	50                   	push   eax
100027d1:	e8 fc ff ff ff       	call   100027d2 <NFrame::NFrame(int, int, int, int)+0x30>	100027d2: R_386_PC32	Region::Region()
100027d6:	83 c4 10             	add    esp,0x10
100027d9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100027dc:	83 c0 30             	add    eax,0x30
100027df:	83 ec 0c             	sub    esp,0xc
100027e2:	50                   	push   eax
100027e3:	e8 fc ff ff ff       	call   100027e4 <NFrame::NFrame(int, int, int, int)+0x42>	100027e4: R_386_PC32	Region::Region()
100027e8:	83 c4 10             	add    esp,0x10
100027eb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100027ee:	83 c0 4c             	add    eax,0x4c
100027f1:	83 ec 0c             	sub    esp,0xc
100027f4:	50                   	push   eax
100027f5:	e8 fc ff ff ff       	call   100027f6 <NFrame::NFrame(int, int, int, int)+0x54>	100027f6: R_386_PC32	Region::Region()
100027fa:	83 c4 10             	add    esp,0x10
100027fd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002800:	c6 40 68 00          	mov    BYTE PTR [eax+0x68],0x0
10002804:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002807:	c6 40 69 00          	mov    BYTE PTR [eax+0x69],0x0
1000280b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000280e:	c7 40 6c 00 00 00 00 	mov    DWORD PTR [eax+0x6c],0x0
10002815:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002818:	c7 40 70 18 00 00 00 	mov    DWORD PTR [eax+0x70],0x18
1000281f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002822:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
10002829:	8d 45 b0             	lea    eax,[ebp-0x50]
1000282c:	83 ec 0c             	sub    esp,0xc
1000282f:	6a 01                	push   0x1
10002831:	6a 00                	push   0x0
10002833:	6a 00                	push   0x0
10002835:	6a 00                	push   0x0
10002837:	50                   	push   eax
10002838:	e8 fc ff ff ff       	call   10002839 <NFrame::NFrame(int, int, int, int)+0x97>	10002839: R_386_PC32	createRectangleRegion(int, int, int, int)
1000283d:	83 c4 1c             	add    esp,0x1c
10002840:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002843:	8d 58 4c             	lea    ebx,[eax+0x4c]
10002846:	8d 45 b0             	lea    eax,[ebp-0x50]
10002849:	ba 19 00 00 00       	mov    edx,0x19
1000284e:	89 df                	mov    edi,ebx
10002850:	89 c6                	mov    esi,eax
10002852:	89 d1                	mov    ecx,edx
10002854:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002856:	8d 45 cc             	lea    eax,[ebp-0x34]
10002859:	83 ec 0c             	sub    esp,0xc
1000285c:	ff 75 18             	push   DWORD PTR [ebp+0x18]
1000285f:	ff 75 14             	push   DWORD PTR [ebp+0x14]
10002862:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10002865:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10002868:	50                   	push   eax
10002869:	e8 fc ff ff ff       	call   1000286a <NFrame::NFrame(int, int, int, int)+0xc8>	1000286a: R_386_PC32	createRectangleRegion(int, int, int, int)
1000286e:	83 c4 1c             	add    esp,0x1c
10002871:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002874:	8d 58 14             	lea    ebx,[eax+0x14]
10002877:	8d 45 cc             	lea    eax,[ebp-0x34]
1000287a:	ba 19 00 00 00       	mov    edx,0x19
1000287f:	89 df                	mov    edi,ebx
10002881:	89 c6                	mov    esi,eax
10002883:	89 d1                	mov    ecx,edx
10002885:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002887:	90                   	nop
10002888:	8d 65 f4             	lea    esp,[ebp-0xc]
1000288b:	5b                   	pop    ebx
1000288c:	5e                   	pop    esi
1000288d:	5f                   	pop    edi
1000288e:	5d                   	pop    ebp
1000288f:	c3                   	ret    

10002890 <NFrame::addChild(NFrame*)>:
10002890:	55                   	push   ebp
10002891:	89 e5                	mov    ebp,esp
10002893:	83 ec 08             	sub    esp,0x8
10002896:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002899:	83 c0 04             	add    eax,0x4
1000289c:	83 ec 08             	sub    esp,0x8
1000289f:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100028a2:	50                   	push   eax
100028a3:	e8 fc ff ff ff       	call   100028a4 <NFrame::addChild(NFrame*)+0x14>	100028a4: R_386_PC32	LinkedList2<NFrame*>::prependNode(NFrame*)
100028a8:	83 c4 10             	add    esp,0x10
100028ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100028ae:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100028b1:	89 50 10             	mov    DWORD PTR [eax+0x10],edx
100028b4:	90                   	nop
100028b5:	c9                   	leave  
100028b6:	c3                   	ret    
100028b7:	90                   	nop

100028b8 <NFrame::getDirtyRegion()>:
100028b8:	55                   	push   ebp
100028b9:	89 e5                	mov    ebp,esp
100028bb:	57                   	push   edi
100028bc:	56                   	push   esi
100028bd:	53                   	push   ebx
100028be:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100028c1:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100028c4:	8d 58 4c             	lea    ebx,[eax+0x4c]
100028c7:	b8 07 00 00 00       	mov    eax,0x7
100028cc:	89 d7                	mov    edi,edx
100028ce:	89 de                	mov    esi,ebx
100028d0:	89 c1                	mov    ecx,eax
100028d2:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100028d4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100028d7:	5b                   	pop    ebx
100028d8:	5e                   	pop    esi
100028d9:	5f                   	pop    edi
100028da:	5d                   	pop    ebp
100028db:	c2 04 00             	ret    0x4

100028de <NFrame::getDrawRegion()>:
100028de:	55                   	push   ebp
100028df:	89 e5                	mov    ebp,esp
100028e1:	57                   	push   edi
100028e2:	56                   	push   esi
100028e3:	53                   	push   ebx
100028e4:	83 ec 7c             	sub    esp,0x7c
100028e7:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100028ea:	8b 48 28             	mov    ecx,DWORD PTR [eax+0x28]
100028ed:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100028f0:	8b 50 24             	mov    edx,DWORD PTR [eax+0x24]
100028f3:	8d 45 c4             	lea    eax,[ebp-0x3c]
100028f6:	83 ec 0c             	sub    esp,0xc
100028f9:	6a 01                	push   0x1
100028fb:	6a 00                	push   0x0
100028fd:	51                   	push   ecx
100028fe:	52                   	push   edx
100028ff:	50                   	push   eax
10002900:	e8 fc ff ff ff       	call   10002901 <NFrame::getDrawRegion()+0x23>	10002901: R_386_PC32	createRectangleRegion(int, int, int, int)
10002905:	83 c4 1c             	add    esp,0x1c
10002908:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000290b:	8b 40 08             	mov    eax,DWORD PTR [eax+0x8]
1000290e:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10002911:	83 7d e4 00          	cmp    DWORD PTR [ebp-0x1c],0x0
10002915:	0f 84 c0 00 00 00    	je     100029db <NFrame::getDrawRegion()+0xfd>
1000291b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000291e:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10002921:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10002924:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10002927:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000292a:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000292d:	8b 00                	mov    eax,DWORD PTR [eax]
1000292f:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
10002932:	84 c0                	test   al,al
10002934:	0f 85 9b 00 00 00    	jne    100029d5 <NFrame::getDrawRegion()+0xf7>
1000293a:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000293d:	8b 10                	mov    edx,DWORD PTR [eax]
1000293f:	8d 45 a8             	lea    eax,[ebp-0x58]
10002942:	8d 5a 14             	lea    ebx,[edx+0x14]
10002945:	ba 07 00 00 00       	mov    edx,0x7
1000294a:	89 c7                	mov    edi,eax
1000294c:	89 de                	mov    esi,ebx
1000294e:	89 d1                	mov    ecx,edx
10002950:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002952:	8b 55 b8             	mov    edx,DWORD PTR [ebp-0x48]
10002955:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002958:	8b 40 24             	mov    eax,DWORD PTR [eax+0x24]
1000295b:	01 d0                	add    eax,edx
1000295d:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
10002960:	8b 55 bc             	mov    edx,DWORD PTR [ebp-0x44]
10002963:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002966:	8b 40 28             	mov    eax,DWORD PTR [eax+0x28]
10002969:	01 d0                	add    eax,edx
1000296b:	89 45 bc             	mov    DWORD PTR [ebp-0x44],eax
1000296e:	8d 45 8c             	lea    eax,[ebp-0x74]
10002971:	89 45 84             	mov    DWORD PTR [ebp-0x7c],eax
10002974:	83 ec 04             	sub    esp,0x4
10002977:	83 ec 1c             	sub    esp,0x1c
1000297a:	89 e0                	mov    eax,esp
1000297c:	89 c3                	mov    ebx,eax
1000297e:	8d 45 a8             	lea    eax,[ebp-0x58]
10002981:	ba 07 00 00 00       	mov    edx,0x7
10002986:	89 df                	mov    edi,ebx
10002988:	89 c6                	mov    esi,eax
1000298a:	89 d1                	mov    ecx,edx
1000298c:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000298e:	83 ec 1c             	sub    esp,0x1c
10002991:	89 e0                	mov    eax,esp
10002993:	89 c3                	mov    ebx,eax
10002995:	8d 45 c4             	lea    eax,[ebp-0x3c]
10002998:	ba 07 00 00 00       	mov    edx,0x7
1000299d:	89 df                	mov    edi,ebx
1000299f:	89 c6                	mov    esi,eax
100029a1:	89 d1                	mov    ecx,edx
100029a3:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100029a5:	ff 75 84             	push   DWORD PTR [ebp-0x7c]
100029a8:	e8 fc ff ff ff       	call   100029a9 <NFrame::getDrawRegion()+0xcb>	100029a9: R_386_PC32	getRegionUnion(Region, Region)
100029ad:	83 c4 3c             	add    esp,0x3c
100029b0:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100029b3:	83 ec 0c             	sub    esp,0xc
100029b6:	50                   	push   eax
100029b7:	e8 fc ff ff ff       	call   100029b8 <NFrame::getDrawRegion()+0xda>	100029b8: R_386_PC32	free
100029bc:	83 c4 10             	add    esp,0x10
100029bf:	8d 45 c4             	lea    eax,[ebp-0x3c]
100029c2:	8d 55 8c             	lea    edx,[ebp-0x74]
100029c5:	b9 19 00 00 00       	mov    ecx,0x19
100029ca:	89 c7                	mov    edi,eax
100029cc:	89 d6                	mov    esi,edx
100029ce:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100029d0:	e9 3c ff ff ff       	jmp    10002911 <NFrame::getDrawRegion()+0x33>
100029d5:	90                   	nop
100029d6:	e9 36 ff ff ff       	jmp    10002911 <NFrame::getDrawRegion()+0x33>
100029db:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100029de:	89 45 84             	mov    DWORD PTR [ebp-0x7c],eax
100029e1:	83 ec 04             	sub    esp,0x4
100029e4:	83 ec 1c             	sub    esp,0x1c
100029e7:	89 e0                	mov    eax,esp
100029e9:	89 c3                	mov    ebx,eax
100029eb:	8d 45 c4             	lea    eax,[ebp-0x3c]
100029ee:	ba 07 00 00 00       	mov    edx,0x7
100029f3:	89 df                	mov    edi,ebx
100029f5:	89 c6                	mov    esi,eax
100029f7:	89 d1                	mov    ecx,edx
100029f9:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100029fb:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100029fe:	83 ec 1c             	sub    esp,0x1c
10002a01:	89 e2                	mov    edx,esp
10002a03:	8d 58 14             	lea    ebx,[eax+0x14]
10002a06:	b8 07 00 00 00       	mov    eax,0x7
10002a0b:	89 d7                	mov    edi,edx
10002a0d:	89 de                	mov    esi,ebx
10002a0f:	89 c1                	mov    ecx,eax
10002a11:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002a13:	ff 75 84             	push   DWORD PTR [ebp-0x7c]
10002a16:	e8 fc ff ff ff       	call   10002a17 <NFrame::getDrawRegion()+0x139>	10002a17: R_386_PC32	getRegionDifference(Region, Region)
10002a1b:	83 c4 3c             	add    esp,0x3c
10002a1e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10002a21:	83 ec 0c             	sub    esp,0xc
10002a24:	50                   	push   eax
10002a25:	e8 fc ff ff ff       	call   10002a26 <NFrame::getDrawRegion()+0x148>	10002a26: R_386_PC32	free
10002a2a:	83 c4 10             	add    esp,0x10
10002a2d:	90                   	nop
10002a2e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002a31:	8d 65 f4             	lea    esp,[ebp-0xc]
10002a34:	5b                   	pop    ebx
10002a35:	5e                   	pop    esi
10002a36:	5f                   	pop    edi
10002a37:	5d                   	pop    ebp
10002a38:	c2 04 00             	ret    0x4
10002a3b:	90                   	nop

10002a3c <NFrame::regenerateRegion()>:
10002a3c:	55                   	push   ebp
10002a3d:	89 e5                	mov    ebp,esp
10002a3f:	57                   	push   edi
10002a40:	56                   	push   esi
10002a41:	53                   	push   ebx
10002a42:	83 ec 6c             	sub    esp,0x6c
10002a45:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10002a48:	8d 45 94             	lea    eax,[ebp-0x6c]
10002a4b:	8d 5a 14             	lea    ebx,[edx+0x14]
10002a4e:	ba 07 00 00 00       	mov    edx,0x7
10002a53:	89 c7                	mov    edi,eax
10002a55:	89 de                	mov    esi,ebx
10002a57:	89 d1                	mov    ecx,edx
10002a59:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002a5b:	8b 75 9c             	mov    esi,DWORD PTR [ebp-0x64]
10002a5e:	8b 5d 98             	mov    ebx,DWORD PTR [ebp-0x68]
10002a61:	8b 4d a8             	mov    ecx,DWORD PTR [ebp-0x58]
10002a64:	8b 55 a4             	mov    edx,DWORD PTR [ebp-0x5c]
10002a67:	8d 45 b0             	lea    eax,[ebp-0x50]
10002a6a:	83 ec 0c             	sub    esp,0xc
10002a6d:	56                   	push   esi
10002a6e:	53                   	push   ebx
10002a6f:	51                   	push   ecx
10002a70:	52                   	push   edx
10002a71:	50                   	push   eax
10002a72:	e8 fc ff ff ff       	call   10002a73 <NFrame::regenerateRegion()+0x37>	10002a73: R_386_PC32	createRectangleRegion(int, int, int, int)
10002a77:	83 c4 1c             	add    esp,0x1c
10002a7a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002a7d:	8d 58 14             	lea    ebx,[eax+0x14]
10002a80:	8d 45 b0             	lea    eax,[ebp-0x50]
10002a83:	ba 19 00 00 00       	mov    edx,0x19
10002a88:	89 df                	mov    edi,ebx
10002a8a:	89 c6                	mov    esi,eax
10002a8c:	89 d1                	mov    ecx,edx
10002a8e:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002a90:	8b 45 94             	mov    eax,DWORD PTR [ebp-0x6c]
10002a93:	83 ec 0c             	sub    esp,0xc
10002a96:	50                   	push   eax
10002a97:	e8 fc ff ff ff       	call   10002a98 <NFrame::regenerateRegion()+0x5c>	10002a98: R_386_PC32	free
10002a9c:	83 c4 10             	add    esp,0x10
10002a9f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002aa2:	8a 40 69             	mov    al,BYTE PTR [eax+0x69]
10002aa5:	84 c0                	test   al,al
10002aa7:	74 68                	je     10002b11 <NFrame::regenerateRegion()+0xd5>
10002aa9:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10002aac:	8d 45 94             	lea    eax,[ebp-0x6c]
10002aaf:	8d 5a 30             	lea    ebx,[edx+0x30]
10002ab2:	ba 19 00 00 00       	mov    edx,0x19
10002ab7:	89 c7                	mov    edi,eax
10002ab9:	89 de                	mov    esi,ebx
10002abb:	89 d1                	mov    ecx,edx
10002abd:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002abf:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002ac2:	8b 70 1c             	mov    esi,DWORD PTR [eax+0x1c]
10002ac5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002ac8:	8b 58 18             	mov    ebx,DWORD PTR [eax+0x18]
10002acb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002ace:	8b 48 28             	mov    ecx,DWORD PTR [eax+0x28]
10002ad1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002ad4:	8b 50 24             	mov    edx,DWORD PTR [eax+0x24]
10002ad7:	8d 45 cc             	lea    eax,[ebp-0x34]
10002ada:	83 ec 08             	sub    esp,0x8
10002add:	6a 03                	push   0x3
10002adf:	56                   	push   esi
10002ae0:	53                   	push   ebx
10002ae1:	51                   	push   ecx
10002ae2:	52                   	push   edx
10002ae3:	50                   	push   eax
10002ae4:	e8 fc ff ff ff       	call   10002ae5 <NFrame::regenerateRegion()+0xa9>	10002ae5: R_386_PC32	createAntRegion(int, int, int, int, int)
10002ae9:	83 c4 1c             	add    esp,0x1c
10002aec:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002aef:	8d 58 30             	lea    ebx,[eax+0x30]
10002af2:	8d 45 cc             	lea    eax,[ebp-0x34]
10002af5:	ba 19 00 00 00       	mov    edx,0x19
10002afa:	89 df                	mov    edi,ebx
10002afc:	89 c6                	mov    esi,eax
10002afe:	89 d1                	mov    ecx,edx
10002b00:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002b02:	8b 45 94             	mov    eax,DWORD PTR [ebp-0x6c]
10002b05:	83 ec 0c             	sub    esp,0xc
10002b08:	50                   	push   eax
10002b09:	e8 fc ff ff ff       	call   10002b0a <NFrame::regenerateRegion()+0xce>	10002b0a: R_386_PC32	free
10002b0e:	83 c4 10             	add    esp,0x10
10002b11:	90                   	nop
10002b12:	8d 65 f4             	lea    esp,[ebp-0xc]
10002b15:	5b                   	pop    ebx
10002b16:	5e                   	pop    esi
10002b17:	5f                   	pop    edi
10002b18:	5d                   	pop    ebp
10002b19:	c3                   	ret    

10002b1a <NFrame::isHiddenOverall()>:
10002b1a:	55                   	push   ebp
10002b1b:	89 e5                	mov    ebp,esp
10002b1d:	83 ec 08             	sub    esp,0x8
10002b20:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002b23:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
10002b26:	84 c0                	test   al,al
10002b28:	75 20                	jne    10002b4a <NFrame::isHiddenOverall()+0x30>
10002b2a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002b2d:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10002b30:	85 c0                	test   eax,eax
10002b32:	74 1a                	je     10002b4e <NFrame::isHiddenOverall()+0x34>
10002b34:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002b37:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10002b3a:	83 ec 0c             	sub    esp,0xc
10002b3d:	50                   	push   eax
10002b3e:	e8 fc ff ff ff       	call   10002b3f <NFrame::isHiddenOverall()+0x25>	10002b3f: R_386_PC32	NFrame::isHiddenOverall()
10002b43:	83 c4 10             	add    esp,0x10
10002b46:	84 c0                	test   al,al
10002b48:	74 04                	je     10002b4e <NFrame::isHiddenOverall()+0x34>
10002b4a:	b0 01                	mov    al,0x1
10002b4c:	eb 02                	jmp    10002b50 <NFrame::isHiddenOverall()+0x36>
10002b4e:	b0 00                	mov    al,0x0
10002b50:	c9                   	leave  
10002b51:	c3                   	ret    

10002b52 <NFrame::tryInvalidate()>:
10002b52:	55                   	push   ebp
10002b53:	89 e5                	mov    ebp,esp
10002b55:	57                   	push   edi
10002b56:	56                   	push   esi
10002b57:	53                   	push   ebx
10002b58:	83 ec 2c             	sub    esp,0x2c
10002b5b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002b5e:	8a 40 69             	mov    al,BYTE PTR [eax+0x69]
10002b61:	84 c0                	test   al,al
10002b63:	74 5c                	je     10002bc1 <NFrame::tryInvalidate()+0x6f>
10002b65:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10002b68:	8d 45 cc             	lea    eax,[ebp-0x34]
10002b6b:	8d 5a 30             	lea    ebx,[edx+0x30]
10002b6e:	ba 07 00 00 00       	mov    edx,0x7
10002b73:	89 c7                	mov    edi,eax
10002b75:	89 de                	mov    esi,ebx
10002b77:	89 d1                	mov    ecx,edx
10002b79:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002b7b:	83 ec 0c             	sub    esp,0xc
10002b7e:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002b81:	e8 fc ff ff ff       	call   10002b82 <NFrame::tryInvalidate()+0x30>	10002b82: R_386_PC32	NFrame::getAbsX()
10002b86:	83 c4 10             	add    esp,0x10
10002b89:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10002b8c:	83 ec 0c             	sub    esp,0xc
10002b8f:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002b92:	e8 fc ff ff ff       	call   10002b93 <NFrame::tryInvalidate()+0x41>	10002b93: R_386_PC32	NFrame::getAbsY()
10002b97:	83 c4 10             	add    esp,0x10
10002b9a:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10002b9d:	83 ec 1c             	sub    esp,0x1c
10002ba0:	89 e0                	mov    eax,esp
10002ba2:	89 c3                	mov    ebx,eax
10002ba4:	8d 45 cc             	lea    eax,[ebp-0x34]
10002ba7:	ba 07 00 00 00       	mov    edx,0x7
10002bac:	89 df                	mov    edi,ebx
10002bae:	89 c6                	mov    esi,eax
10002bb0:	89 d1                	mov    ecx,edx
10002bb2:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002bb4:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002bb7:	e8 fc ff ff ff       	call   10002bb8 <NFrame::tryInvalidate()+0x66>	10002bb8: R_386_PC32	NFrame::markRegionAsDirty(Region)
10002bbc:	83 c4 20             	add    esp,0x20
10002bbf:	eb 23                	jmp    10002be4 <NFrame::tryInvalidate()+0x92>
10002bc1:	83 ec 0c             	sub    esp,0xc
10002bc4:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002bc7:	e8 fc ff ff ff       	call   10002bc8 <NFrame::tryInvalidate()+0x76>	10002bc8: R_386_PC32	NFrame::isHiddenOverall()
10002bcc:	83 c4 10             	add    esp,0x10
10002bcf:	83 f0 01             	xor    eax,0x1
10002bd2:	84 c0                	test   al,al
10002bd4:	74 0e                	je     10002be4 <NFrame::tryInvalidate()+0x92>
10002bd6:	83 ec 0c             	sub    esp,0xc
10002bd9:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002bdc:	e8 fc ff ff ff       	call   10002bdd <NFrame::tryInvalidate()+0x8b>	10002bdd: R_386_PC32	NFrame::invalidate()
10002be1:	83 c4 10             	add    esp,0x10
10002be4:	8d 65 f4             	lea    esp,[ebp-0xc]
10002be7:	5b                   	pop    ebx
10002be8:	5e                   	pop    esi
10002be9:	5f                   	pop    edi
10002bea:	5d                   	pop    ebp
10002beb:	c3                   	ret    

10002bec <NFrame::getAbsX()>:
10002bec:	55                   	push   ebp
10002bed:	89 e5                	mov    ebp,esp
10002bef:	83 ec 08             	sub    esp,0x8
10002bf2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002bf5:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10002bf8:	85 c0                	test   eax,eax
10002bfa:	74 1e                	je     10002c1a <NFrame::getAbsX()+0x2e>
10002bfc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002bff:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10002c02:	83 ec 0c             	sub    esp,0xc
10002c05:	50                   	push   eax
10002c06:	e8 fc ff ff ff       	call   10002c07 <NFrame::getAbsX()+0x1b>	10002c07: R_386_PC32	NFrame::getAbsX()
10002c0b:	83 c4 10             	add    esp,0x10
10002c0e:	89 c2                	mov    edx,eax
10002c10:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002c13:	8b 40 24             	mov    eax,DWORD PTR [eax+0x24]
10002c16:	01 d0                	add    eax,edx
10002c18:	eb 06                	jmp    10002c20 <NFrame::getAbsX()+0x34>
10002c1a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002c1d:	8b 40 24             	mov    eax,DWORD PTR [eax+0x24]
10002c20:	c9                   	leave  
10002c21:	c3                   	ret    

10002c22 <NFrame::getAbsY()>:
10002c22:	55                   	push   ebp
10002c23:	89 e5                	mov    ebp,esp
10002c25:	83 ec 08             	sub    esp,0x8
10002c28:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002c2b:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10002c2e:	85 c0                	test   eax,eax
10002c30:	74 1e                	je     10002c50 <NFrame::getAbsY()+0x2e>
10002c32:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002c35:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10002c38:	83 ec 0c             	sub    esp,0xc
10002c3b:	50                   	push   eax
10002c3c:	e8 fc ff ff ff       	call   10002c3d <NFrame::getAbsY()+0x1b>	10002c3d: R_386_PC32	NFrame::getAbsY()
10002c41:	83 c4 10             	add    esp,0x10
10002c44:	89 c2                	mov    edx,eax
10002c46:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002c49:	8b 40 28             	mov    eax,DWORD PTR [eax+0x28]
10002c4c:	01 d0                	add    eax,edx
10002c4e:	eb 06                	jmp    10002c56 <NFrame::getAbsY()+0x34>
10002c50:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002c53:	8b 40 28             	mov    eax,DWORD PTR [eax+0x28]
10002c56:	c9                   	leave  
10002c57:	c3                   	ret    

10002c58 <NFrame::repaint(Video*)>:
10002c58:	55                   	push   ebp
10002c59:	89 e5                	mov    ebp,esp
10002c5b:	57                   	push   edi
10002c5c:	56                   	push   esi
10002c5d:	53                   	push   ebx
10002c5e:	83 ec 5c             	sub    esp,0x5c
10002c61:	8d 45 cc             	lea    eax,[ebp-0x34]
10002c64:	83 ec 08             	sub    esp,0x8
10002c67:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002c6a:	50                   	push   eax
10002c6b:	e8 fc ff ff ff       	call   10002c6c <NFrame::repaint(Video*)+0x14>	10002c6c: R_386_PC32	NFrame::getDirtyRegion()
10002c70:	83 c4 0c             	add    esp,0xc
10002c73:	8d 45 b0             	lea    eax,[ebp-0x50]
10002c76:	89 45 a4             	mov    DWORD PTR [ebp-0x5c],eax
10002c79:	83 ec 04             	sub    esp,0x4
10002c7c:	6a 01                	push   0x1
10002c7e:	83 ec 1c             	sub    esp,0x1c
10002c81:	89 e0                	mov    eax,esp
10002c83:	89 c3                	mov    ebx,eax
10002c85:	8d 45 cc             	lea    eax,[ebp-0x34]
10002c88:	ba 07 00 00 00       	mov    edx,0x7
10002c8d:	89 df                	mov    edi,ebx
10002c8f:	89 c6                	mov    esi,eax
10002c91:	89 d1                	mov    ecx,edx
10002c93:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002c95:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10002c98:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002c9b:	ff 75 a4             	push   DWORD PTR [ebp-0x5c]
10002c9e:	e8 fc ff ff ff       	call   10002c9f <NFrame::repaint(Video*)+0x47>	10002c9f: R_386_PC32	NFrame::repaintAux(Video*, Region, bool)
10002ca3:	83 c4 2c             	add    esp,0x2c
10002ca6:	8b 45 b0             	mov    eax,DWORD PTR [ebp-0x50]
10002ca9:	83 ec 0c             	sub    esp,0xc
10002cac:	50                   	push   eax
10002cad:	e8 fc ff ff ff       	call   10002cae <NFrame::repaint(Video*)+0x56>	10002cae: R_386_PC32	free
10002cb2:	83 c4 10             	add    esp,0x10
10002cb5:	90                   	nop
10002cb6:	8d 65 f4             	lea    esp,[ebp-0xc]
10002cb9:	5b                   	pop    ebx
10002cba:	5e                   	pop    esi
10002cbb:	5f                   	pop    edi
10002cbc:	5d                   	pop    ebp
10002cbd:	c3                   	ret    

10002cbe <NFrame::paintSolid(NFrame::Graphics, unsigned int)>:
10002cbe:	55                   	push   ebp
10002cbf:	89 e5                	mov    ebp,esp
10002cc1:	57                   	push   edi
10002cc2:	56                   	push   esi
10002cc3:	53                   	push   ebx
10002cc4:	83 ec 1c             	sub    esp,0x1c
10002cc7:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002cca:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10002ccd:	83 ec 0c             	sub    esp,0xc
10002cd0:	ff 75 2c             	push   DWORD PTR [ebp+0x2c]
10002cd3:	83 ec 1c             	sub    esp,0x1c
10002cd6:	89 e0                	mov    eax,esp
10002cd8:	89 c3                	mov    ebx,eax
10002cda:	8d 45 10             	lea    eax,[ebp+0x10]
10002cdd:	ba 07 00 00 00       	mov    edx,0x7
10002ce2:	89 df                	mov    edi,ebx
10002ce4:	89 c6                	mov    esi,eax
10002ce6:	89 d1                	mov    ecx,edx
10002ce8:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002cea:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10002ced:	e8 fc ff ff ff       	call   10002cee <NFrame::paintSolid(NFrame::Graphics, unsigned int)+0x30>	10002cee: R_386_PC32	fillRegion(Video*, Region, unsigned int)
10002cf2:	83 c4 30             	add    esp,0x30
10002cf5:	90                   	nop
10002cf6:	8d 65 f4             	lea    esp,[ebp-0xc]
10002cf9:	5b                   	pop    ebx
10002cfa:	5e                   	pop    esi
10002cfb:	5f                   	pop    edi
10002cfc:	5d                   	pop    ebp
10002cfd:	c3                   	ret    

10002cfe <NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)>:
10002cfe:	55                   	push   ebp
10002cff:	89 e5                	mov    ebp,esp
10002d01:	57                   	push   edi
10002d02:	56                   	push   esi
10002d03:	53                   	push   ebx
10002d04:	83 ec 2c             	sub    esp,0x2c
10002d07:	83 ec 0c             	sub    esp,0xc
10002d0a:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002d0d:	e8 fc ff ff ff       	call   10002d0e <NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)+0x10>	10002d0e: R_386_PC32	NFrame::getAbsY()
10002d12:	83 c4 10             	add    esp,0x10
10002d15:	89 c2                	mov    edx,eax
10002d17:	8b 45 30             	mov    eax,DWORD PTR [ebp+0x30]
10002d1a:	8d 1c 02             	lea    ebx,[edx+eax*1]
10002d1d:	83 ec 0c             	sub    esp,0xc
10002d20:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002d23:	e8 fc ff ff ff       	call   10002d24 <NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)+0x26>	10002d24: R_386_PC32	NFrame::getAbsX()
10002d28:	83 c4 10             	add    esp,0x10
10002d2b:	89 c2                	mov    edx,eax
10002d2d:	8b 45 2c             	mov    eax,DWORD PTR [ebp+0x2c]
10002d30:	01 c2                	add    edx,eax
10002d32:	8d 45 cc             	lea    eax,[ebp-0x34]
10002d35:	83 ec 0c             	sub    esp,0xc
10002d38:	ff 75 38             	push   DWORD PTR [ebp+0x38]
10002d3b:	ff 75 34             	push   DWORD PTR [ebp+0x34]
10002d3e:	53                   	push   ebx
10002d3f:	52                   	push   edx
10002d40:	50                   	push   eax
10002d41:	e8 fc ff ff ff       	call   10002d42 <NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)+0x44>	10002d42: R_386_PC32	createRectangleRegion(int, int, int, int)
10002d46:	83 c4 1c             	add    esp,0x1c
10002d49:	83 ec 0c             	sub    esp,0xc
10002d4c:	ff 75 3c             	push   DWORD PTR [ebp+0x3c]
10002d4f:	83 ec 20             	sub    esp,0x20
10002d52:	89 e0                	mov    eax,esp
10002d54:	89 c3                	mov    ebx,eax
10002d56:	8d 45 0c             	lea    eax,[ebp+0xc]
10002d59:	ba 08 00 00 00       	mov    edx,0x8
10002d5e:	89 df                	mov    edi,ebx
10002d60:	89 c6                	mov    esi,eax
10002d62:	89 d1                	mov    ecx,edx
10002d64:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002d66:	83 ec 1c             	sub    esp,0x1c
10002d69:	89 e0                	mov    eax,esp
10002d6b:	89 c3                	mov    ebx,eax
10002d6d:	8d 45 cc             	lea    eax,[ebp-0x34]
10002d70:	ba 07 00 00 00       	mov    edx,0x7
10002d75:	89 df                	mov    edi,ebx
10002d77:	89 c6                	mov    esi,eax
10002d79:	89 d1                	mov    ecx,edx
10002d7b:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002d7d:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002d80:	e8 fc ff ff ff       	call   10002d81 <NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)+0x83>	10002d81: R_386_PC32	NFrame::paintClippedCommon(Region, NFrame::Graphics, unsigned int)
10002d85:	83 c4 50             	add    esp,0x50
10002d88:	90                   	nop
10002d89:	8d 65 f4             	lea    esp,[ebp-0xc]
10002d8c:	5b                   	pop    ebx
10002d8d:	5e                   	pop    esi
10002d8e:	5f                   	pop    edi
10002d8f:	5d                   	pop    ebp
10002d90:	c3                   	ret    
10002d91:	90                   	nop

10002d92 <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)>:
10002d92:	55                   	push   ebp
10002d93:	89 e5                	mov    ebp,esp
10002d95:	57                   	push   edi
10002d96:	56                   	push   esi
10002d97:	53                   	push   ebx
10002d98:	83 ec 3c             	sub    esp,0x3c
10002d9b:	83 ec 0c             	sub    esp,0xc
10002d9e:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002da1:	e8 fc ff ff ff       	call   10002da2 <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0x10>	10002da2: R_386_PC32	NFrame::getAbsX()
10002da6:	83 c4 10             	add    esp,0x10
10002da9:	01 45 2c             	add    DWORD PTR [ebp+0x2c],eax
10002dac:	83 ec 0c             	sub    esp,0xc
10002daf:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002db2:	e8 fc ff ff ff       	call   10002db3 <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0x21>	10002db3: R_386_PC32	NFrame::getAbsY()
10002db7:	83 c4 10             	add    esp,0x10
10002dba:	01 45 30             	add    DWORD PTR [ebp+0x30],eax
10002dbd:	8b 45 2c             	mov    eax,DWORD PTR [ebp+0x2c]
10002dc0:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10002dc3:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10002dca:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10002dd1:	8b 55 e0             	mov    edx,DWORD PTR [ebp-0x20]
10002dd4:	8b 45 34             	mov    eax,DWORD PTR [ebp+0x34]
10002dd7:	01 d0                	add    eax,edx
10002dd9:	8a 00                	mov    al,BYTE PTR [eax]
10002ddb:	84 c0                	test   al,al
10002ddd:	0f 84 92 00 00 00    	je     10002e75 <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0xe3>
10002de3:	8b 55 e0             	mov    edx,DWORD PTR [ebp-0x20]
10002de6:	8b 45 34             	mov    eax,DWORD PTR [ebp+0x34]
10002de9:	01 d0                	add    eax,edx
10002deb:	8a 00                	mov    al,BYTE PTR [eax]
10002ded:	3c 0a                	cmp    al,0xa
10002def:	75 15                	jne    10002e06 <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0x74>
10002df1:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10002df4:	01 45 30             	add    DWORD PTR [ebp+0x30],eax
10002df7:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10002dfe:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10002e01:	89 45 2c             	mov    DWORD PTR [ebp+0x2c],eax
10002e04:	eb 67                	jmp    10002e6d <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0xdb>
10002e06:	8b 55 e0             	mov    edx,DWORD PTR [ebp-0x20]
10002e09:	8b 45 34             	mov    eax,DWORD PTR [ebp+0x34]
10002e0c:	01 d0                	add    eax,edx
10002e0e:	8a 00                	mov    al,BYTE PTR [eax]
10002e10:	0f be c0             	movsx  eax,al
10002e13:	8b 4d 0c             	mov    ecx,DWORD PTR [ebp+0xc]
10002e16:	89 4d c4             	mov    DWORD PTR [ebp-0x3c],ecx
10002e19:	50                   	push   eax
10002e1a:	ff 75 38             	push   DWORD PTR [ebp+0x38]
10002e1d:	ff 75 30             	push   DWORD PTR [ebp+0x30]
10002e20:	ff 75 2c             	push   DWORD PTR [ebp+0x2c]
10002e23:	83 ec 1c             	sub    esp,0x1c
10002e26:	89 e0                	mov    eax,esp
10002e28:	89 c3                	mov    ebx,eax
10002e2a:	8d 45 10             	lea    eax,[ebp+0x10]
10002e2d:	ba 07 00 00 00       	mov    edx,0x7
10002e32:	89 df                	mov    edi,ebx
10002e34:	89 c6                	mov    esi,eax
10002e36:	89 d1                	mov    ecx,edx
10002e38:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002e3a:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10002e3d:	e8 fc ff ff ff       	call   10002e3e <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0xac>	10002e3e: R_386_PC32	drawCharacter(Video*, Region, int, int, unsigned int, char)
10002e42:	83 c4 30             	add    esp,0x30
10002e45:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10002e48:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10002e4b:	0f b7 d0             	movzx  edx,ax
10002e4e:	8b 45 2c             	mov    eax,DWORD PTR [ebp+0x2c]
10002e51:	01 d0                	add    eax,edx
10002e53:	89 45 2c             	mov    DWORD PTR [ebp+0x2c],eax
10002e56:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10002e59:	c1 e8 10             	shr    eax,0x10
10002e5c:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
10002e5f:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10002e62:	3b 45 e4             	cmp    eax,DWORD PTR [ebp-0x1c]
10002e65:	7e 06                	jle    10002e6d <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0xdb>
10002e67:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10002e6a:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10002e6d:	ff 45 e0             	inc    DWORD PTR [ebp-0x20]
10002e70:	e9 5c ff ff ff       	jmp    10002dd1 <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0x3f>
10002e75:	90                   	nop
10002e76:	8d 65 f4             	lea    esp,[ebp-0xc]
10002e79:	5b                   	pop    ebx
10002e7a:	5e                   	pop    esi
10002e7b:	5f                   	pop    edi
10002e7c:	5d                   	pop    ebp
10002e7d:	c3                   	ret    

10002e7e <NWindow::NWindow(int, int, int, int, char const*, int)>:
10002e7e:	55                   	push   ebp
10002e7f:	89 e5                	mov    ebp,esp
10002e81:	57                   	push   edi
10002e82:	56                   	push   esi
10002e83:	53                   	push   ebx
10002e84:	81 ec ac 00 00 00    	sub    esp,0xac
10002e8a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002e8d:	89 85 54 ff ff ff    	mov    DWORD PTR [ebp-0xac],eax
10002e93:	8d 45 cc             	lea    eax,[ebp-0x34]
10002e96:	83 ec 0c             	sub    esp,0xc
10002e99:	ff 75 18             	push   DWORD PTR [ebp+0x18]
10002e9c:	ff 75 14             	push   DWORD PTR [ebp+0x14]
10002e9f:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10002ea2:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10002ea5:	50                   	push   eax
10002ea6:	e8 fc ff ff ff       	call   10002ea7 <NWindow::NWindow(int, int, int, int, char const*, int)+0x29>	10002ea7: R_386_PC32	createRectangleRegion(int, int, int, int)
10002eab:	83 c4 1c             	add    esp,0x1c
10002eae:	83 ec 1c             	sub    esp,0x1c
10002eb1:	89 e0                	mov    eax,esp
10002eb3:	89 c3                	mov    ebx,eax
10002eb5:	8d 45 cc             	lea    eax,[ebp-0x34]
10002eb8:	ba 07 00 00 00       	mov    edx,0x7
10002ebd:	89 df                	mov    edi,ebx
10002ebf:	89 c6                	mov    esi,eax
10002ec1:	89 d1                	mov    ecx,edx
10002ec3:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002ec5:	ff b5 54 ff ff ff    	push   DWORD PTR [ebp-0xac]
10002ecb:	e8 fc ff ff ff       	call   10002ecc <NWindow::NWindow(int, int, int, int, char const*, int)+0x4e>	10002ecc: R_386_PC32	NFrame::NFrame(Region)
10002ed0:	83 c4 20             	add    esp,0x20
10002ed3:	ba 08 00 00 00       	mov    edx,0x8	10002ed4: R_386_32	vtable for NWindow
10002ed8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002edb:	89 10                	mov    DWORD PTR [eax],edx
10002edd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002ee0:	c7 40 74 05 00 00 00 	mov    DWORD PTR [eax+0x74],0x5
10002ee7:	c6 45 cb 00          	mov    BYTE PTR [ebp-0x35],0x0
10002eeb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002eee:	8b 55 20             	mov    edx,DWORD PTR [ebp+0x20]
10002ef1:	89 50 6c             	mov    DWORD PTR [eax+0x6c],edx
10002ef4:	83 7d 1c 00          	cmp    DWORD PTR [ebp+0x1c],0x0
10002ef8:	75 06                	jne    10002f00 <NWindow::NWindow(int, int, int, int, char const*, int)+0x82>
10002efa:	8d 45 cb             	lea    eax,[ebp-0x35]
10002efd:	89 45 1c             	mov    DWORD PTR [ebp+0x1c],eax
10002f00:	83 ec 0c             	sub    esp,0xc
10002f03:	ff 75 1c             	push   DWORD PTR [ebp+0x1c]
10002f06:	e8 fc ff ff ff       	call   10002f07 <NWindow::NWindow(int, int, int, int, char const*, int)+0x89>	10002f07: R_386_PC32	strlen
10002f0b:	83 c4 10             	add    esp,0x10
10002f0e:	40                   	inc    eax
10002f0f:	83 ec 0c             	sub    esp,0xc
10002f12:	50                   	push   eax
10002f13:	e8 fc ff ff ff       	call   10002f14 <NWindow::NWindow(int, int, int, int, char const*, int)+0x96>	10002f14: R_386_PC32	malloc
10002f18:	83 c4 10             	add    esp,0x10
10002f1b:	89 c2                	mov    edx,eax
10002f1d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002f20:	89 50 78             	mov    DWORD PTR [eax+0x78],edx
10002f23:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002f26:	8b 40 78             	mov    eax,DWORD PTR [eax+0x78]
10002f29:	83 ec 08             	sub    esp,0x8
10002f2c:	ff 75 1c             	push   DWORD PTR [ebp+0x1c]
10002f2f:	50                   	push   eax
10002f30:	e8 fc ff ff ff       	call   10002f31 <NWindow::NWindow(int, int, int, int, char const*, int)+0xb3>	10002f31: R_386_PC32	strcpy
10002f35:	83 c4 10             	add    esp,0x10
10002f38:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002f3b:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
10002f3e:	83 e0 04             	and    eax,0x4
10002f41:	85 c0                	test   eax,eax
10002f43:	0f 85 79 01 00 00    	jne    100030c2 <NWindow::NWindow(int, int, int, int, char const*, int)+0x244>
10002f49:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002f4c:	c7 40 74 05 00 00 00 	mov    DWORD PTR [eax+0x74],0x5
10002f53:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002f56:	8b 58 74             	mov    ebx,DWORD PTR [eax+0x74]
10002f59:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002f5c:	8b 48 74             	mov    ecx,DWORD PTR [eax+0x74]
10002f5f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002f62:	8b 50 28             	mov    edx,DWORD PTR [eax+0x28]
10002f65:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002f68:	8b 70 24             	mov    esi,DWORD PTR [eax+0x24]
10002f6b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002f6e:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
10002f71:	01 c6                	add    esi,eax
10002f73:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002f76:	8b 40 74             	mov    eax,DWORD PTR [eax+0x74]
10002f79:	29 c6                	sub    esi,eax
10002f7b:	8d 45 ac             	lea    eax,[ebp-0x54]
10002f7e:	83 ec 0c             	sub    esp,0xc
10002f81:	53                   	push   ebx
10002f82:	51                   	push   ecx
10002f83:	52                   	push   edx
10002f84:	56                   	push   esi
10002f85:	50                   	push   eax
10002f86:	e8 fc ff ff ff       	call   10002f87 <NWindow::NWindow(int, int, int, int, char const*, int)+0x109>	10002f87: R_386_PC32	createRectangleRegion(int, int, int, int)
10002f8b:	83 c4 1c             	add    esp,0x1c
10002f8e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002f91:	8b 58 74             	mov    ebx,DWORD PTR [eax+0x74]
10002f94:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002f97:	8b 48 74             	mov    ecx,DWORD PTR [eax+0x74]
10002f9a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002f9d:	8b 50 28             	mov    edx,DWORD PTR [eax+0x28]
10002fa0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002fa3:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10002fa6:	01 c2                	add    edx,eax
10002fa8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002fab:	8b 40 74             	mov    eax,DWORD PTR [eax+0x74]
10002fae:	89 d6                	mov    esi,edx
10002fb0:	29 c6                	sub    esi,eax
10002fb2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002fb5:	8b 50 24             	mov    edx,DWORD PTR [eax+0x24]
10002fb8:	8d 45 90             	lea    eax,[ebp-0x70]
10002fbb:	83 ec 0c             	sub    esp,0xc
10002fbe:	53                   	push   ebx
10002fbf:	51                   	push   ecx
10002fc0:	56                   	push   esi
10002fc1:	52                   	push   edx
10002fc2:	50                   	push   eax
10002fc3:	e8 fc ff ff ff       	call   10002fc4 <NWindow::NWindow(int, int, int, int, char const*, int)+0x146>	10002fc4: R_386_PC32	createRectangleRegion(int, int, int, int)
10002fc8:	83 c4 1c             	add    esp,0x1c
10002fcb:	8d 85 74 ff ff ff    	lea    eax,[ebp-0x8c]
10002fd1:	89 85 54 ff ff ff    	mov    DWORD PTR [ebp-0xac],eax
10002fd7:	83 ec 04             	sub    esp,0x4
10002fda:	83 ec 1c             	sub    esp,0x1c
10002fdd:	89 e0                	mov    eax,esp
10002fdf:	89 c3                	mov    ebx,eax
10002fe1:	8d 45 90             	lea    eax,[ebp-0x70]
10002fe4:	ba 07 00 00 00       	mov    edx,0x7
10002fe9:	89 df                	mov    edi,ebx
10002feb:	89 c6                	mov    esi,eax
10002fed:	89 d1                	mov    ecx,edx
10002fef:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002ff1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002ff4:	83 ec 1c             	sub    esp,0x1c
10002ff7:	89 e2                	mov    edx,esp
10002ff9:	8d 58 14             	lea    ebx,[eax+0x14]
10002ffc:	b8 07 00 00 00       	mov    eax,0x7
10003001:	89 d7                	mov    edi,edx
10003003:	89 de                	mov    esi,ebx
10003005:	89 c1                	mov    ecx,eax
10003007:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003009:	ff b5 54 ff ff ff    	push   DWORD PTR [ebp-0xac]
1000300f:	e8 fc ff ff ff       	call   10003010 <NWindow::NWindow(int, int, int, int, char const*, int)+0x192>	10003010: R_386_PC32	getRegionDifference(Region, Region)
10003014:	83 c4 3c             	add    esp,0x3c
10003017:	8d 85 58 ff ff ff    	lea    eax,[ebp-0xa8]
1000301d:	89 85 54 ff ff ff    	mov    DWORD PTR [ebp-0xac],eax
10003023:	83 ec 04             	sub    esp,0x4
10003026:	83 ec 1c             	sub    esp,0x1c
10003029:	89 e0                	mov    eax,esp
1000302b:	89 c3                	mov    ebx,eax
1000302d:	8d 45 ac             	lea    eax,[ebp-0x54]
10003030:	ba 07 00 00 00       	mov    edx,0x7
10003035:	89 df                	mov    edi,ebx
10003037:	89 c6                	mov    esi,eax
10003039:	89 d1                	mov    ecx,edx
1000303b:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000303d:	83 ec 1c             	sub    esp,0x1c
10003040:	89 e0                	mov    eax,esp
10003042:	89 c3                	mov    ebx,eax
10003044:	8d 85 74 ff ff ff    	lea    eax,[ebp-0x8c]
1000304a:	ba 07 00 00 00       	mov    edx,0x7
1000304f:	89 df                	mov    edi,ebx
10003051:	89 c6                	mov    esi,eax
10003053:	89 d1                	mov    ecx,edx
10003055:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003057:	ff b5 54 ff ff ff    	push   DWORD PTR [ebp-0xac]
1000305d:	e8 fc ff ff ff       	call   1000305e <NWindow::NWindow(int, int, int, int, char const*, int)+0x1e0>	1000305e: R_386_PC32	getRegionDifference(Region, Region)
10003062:	83 c4 3c             	add    esp,0x3c
10003065:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003068:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
1000306b:	83 ec 0c             	sub    esp,0xc
1000306e:	50                   	push   eax
1000306f:	e8 fc ff ff ff       	call   10003070 <NWindow::NWindow(int, int, int, int, char const*, int)+0x1f2>	10003070: R_386_PC32	free
10003074:	83 c4 10             	add    esp,0x10
10003077:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [ebp-0x8c]
1000307d:	83 ec 0c             	sub    esp,0xc
10003080:	50                   	push   eax
10003081:	e8 fc ff ff ff       	call   10003082 <NWindow::NWindow(int, int, int, int, char const*, int)+0x204>	10003082: R_386_PC32	free
10003086:	83 c4 10             	add    esp,0x10
10003089:	8b 45 ac             	mov    eax,DWORD PTR [ebp-0x54]
1000308c:	83 ec 0c             	sub    esp,0xc
1000308f:	50                   	push   eax
10003090:	e8 fc ff ff ff       	call   10003091 <NWindow::NWindow(int, int, int, int, char const*, int)+0x213>	10003091: R_386_PC32	free
10003095:	83 c4 10             	add    esp,0x10
10003098:	8b 45 90             	mov    eax,DWORD PTR [ebp-0x70]
1000309b:	83 ec 0c             	sub    esp,0xc
1000309e:	50                   	push   eax
1000309f:	e8 fc ff ff ff       	call   100030a0 <NWindow::NWindow(int, int, int, int, char const*, int)+0x222>	100030a0: R_386_PC32	free
100030a4:	83 c4 10             	add    esp,0x10
100030a7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100030aa:	8d 58 14             	lea    ebx,[eax+0x14]
100030ad:	8d 85 58 ff ff ff    	lea    eax,[ebp-0xa8]
100030b3:	ba 19 00 00 00       	mov    edx,0x19
100030b8:	89 df                	mov    edi,ebx
100030ba:	89 c6                	mov    esi,eax
100030bc:	89 d1                	mov    ecx,edx
100030be:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100030c0:	eb 0a                	jmp    100030cc <NWindow::NWindow(int, int, int, int, char const*, int)+0x24e>
100030c2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100030c5:	c7 40 74 05 00 00 00 	mov    DWORD PTR [eax+0x74],0x5
100030cc:	90                   	nop
100030cd:	8d 65 f4             	lea    esp,[ebp-0xc]
100030d0:	5b                   	pop    ebx
100030d1:	5e                   	pop    esi
100030d2:	5f                   	pop    edi
100030d3:	5d                   	pop    ebp
100030d4:	c3                   	ret    
100030d5:	90                   	nop

100030d6 <NWindow::paintHandler(NFrame::Graphics)>:
100030d6:	55                   	push   ebp
100030d7:	89 e5                	mov    ebp,esp
100030d9:	57                   	push   edi
100030da:	56                   	push   esi
100030db:	53                   	push   ebx
100030dc:	83 ec 4c             	sub    esp,0x4c
100030df:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100030e2:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
100030e5:	83 e0 08             	and    eax,0x8
100030e8:	85 c0                	test   eax,eax
100030ea:	0f 85 26 04 00 00    	jne    10003516 <NWindow::paintHandler(NFrame::Graphics)+0x440>
100030f0:	c7 45 e4 18 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x18
100030f7:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
100030fe:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [ebp-0x24],0x0
10003105:	c7 45 d8 c0 c0 c0 00 	mov    DWORD PTR [ebp-0x28],0xc0c0c0
1000310c:	c7 45 d4 ff ff ff 00 	mov    DWORD PTR [ebp-0x2c],0xffffff
10003113:	c7 45 d0 ff ff ff 00 	mov    DWORD PTR [ebp-0x30],0xffffff
1000311a:	c7 45 cc 00 00 00 00 	mov    DWORD PTR [ebp-0x34],0x0
10003121:	c7 45 c8 00 00 00 00 	mov    DWORD PTR [ebp-0x38],0x0
10003128:	c7 45 c4 c0 c0 c0 00 	mov    DWORD PTR [ebp-0x3c],0xc0c0c0
1000312f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003132:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
10003135:	83 e0 01             	and    eax,0x1
10003138:	85 c0                	test   eax,eax
1000313a:	0f 85 eb 01 00 00    	jne    1000332b <NWindow::paintHandler(NFrame::Graphics)+0x255>
10003140:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003143:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003146:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003149:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
1000314c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000314f:	8b 40 70             	mov    eax,DWORD PTR [eax+0x70]
10003152:	89 d1                	mov    ecx,edx
10003154:	29 c1                	sub    ecx,eax
10003156:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003159:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
1000315c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000315f:	8b 40 70             	mov    eax,DWORD PTR [eax+0x70]
10003162:	83 ec 08             	sub    esp,0x8
10003165:	68 c0 c0 c0 00       	push   0xc0c0c0
1000316a:	51                   	push   ecx
1000316b:	52                   	push   edx
1000316c:	50                   	push   eax
1000316d:	6a 00                	push   0x0
1000316f:	83 ec 20             	sub    esp,0x20
10003172:	89 e0                	mov    eax,esp
10003174:	89 c3                	mov    ebx,eax
10003176:	8d 45 0c             	lea    eax,[ebp+0xc]
10003179:	ba 08 00 00 00       	mov    edx,0x8
1000317e:	89 df                	mov    edi,ebx
10003180:	89 c6                	mov    esi,eax
10003182:	89 d1                	mov    ecx,edx
10003184:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003186:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003189:	e8 fc ff ff ff       	call   1000318a <NWindow::paintHandler(NFrame::Graphics)+0xb4>	1000318a: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
1000318e:	83 c4 40             	add    esp,0x40
10003191:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003194:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
10003197:	83 e0 02             	and    eax,0x2
1000319a:	85 c0                	test   eax,eax
1000319c:	0f 85 03 01 00 00    	jne    100032a5 <NWindow::paintHandler(NFrame::Graphics)+0x1cf>
100031a2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100031a5:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
100031a8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100031ab:	8b 40 70             	mov    eax,DWORD PTR [eax+0x70]
100031ae:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100031b1:	8b 4a 18             	mov    ecx,DWORD PTR [edx+0x18]
100031b4:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100031b7:	8b 52 74             	mov    edx,DWORD PTR [edx+0x74]
100031ba:	29 d1                	sub    ecx,edx
100031bc:	89 ca                	mov    edx,ecx
100031be:	83 ea 18             	sub    edx,0x18
100031c1:	83 ec 08             	sub    esp,0x8
100031c4:	68 ff ff ff 00       	push   0xffffff
100031c9:	50                   	push   eax
100031ca:	52                   	push   edx
100031cb:	6a 00                	push   0x0
100031cd:	6a 00                	push   0x0
100031cf:	83 ec 20             	sub    esp,0x20
100031d2:	89 e0                	mov    eax,esp
100031d4:	89 c3                	mov    ebx,eax
100031d6:	8d 45 0c             	lea    eax,[ebp+0xc]
100031d9:	ba 08 00 00 00       	mov    edx,0x8
100031de:	89 df                	mov    edi,ebx
100031e0:	89 c6                	mov    esi,eax
100031e2:	89 d1                	mov    ecx,edx
100031e4:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100031e6:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
100031e9:	e8 fc ff ff ff       	call   100031ea <NWindow::paintHandler(NFrame::Graphics)+0x114>	100031ea: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
100031ee:	83 c4 40             	add    esp,0x40
100031f1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100031f4:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
100031f7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100031fa:	8b 40 70             	mov    eax,DWORD PTR [eax+0x70]
100031fd:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10003200:	8b 52 18             	mov    edx,DWORD PTR [edx+0x18]
10003203:	8d 4a e8             	lea    ecx,[edx-0x18]
10003206:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10003209:	8b 52 74             	mov    edx,DWORD PTR [edx+0x74]
1000320c:	29 d1                	sub    ecx,edx
1000320e:	89 ca                	mov    edx,ecx
10003210:	83 ec 08             	sub    esp,0x8
10003213:	68 ff ff ff 00       	push   0xffffff
10003218:	50                   	push   eax
10003219:	6a 18                	push   0x18
1000321b:	6a 00                	push   0x0
1000321d:	52                   	push   edx
1000321e:	83 ec 20             	sub    esp,0x20
10003221:	89 e0                	mov    eax,esp
10003223:	89 c3                	mov    ebx,eax
10003225:	8d 45 0c             	lea    eax,[ebp+0xc]
10003228:	ba 08 00 00 00       	mov    edx,0x8
1000322d:	89 df                	mov    edi,ebx
1000322f:	89 c6                	mov    esi,eax
10003231:	89 d1                	mov    ecx,edx
10003233:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003235:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003238:	e8 fc ff ff ff       	call   10003239 <NWindow::paintHandler(NFrame::Graphics)+0x163>	10003239: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
1000323d:	83 c4 40             	add    esp,0x40
10003240:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003243:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003246:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003249:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
1000324c:	83 e0 10             	and    eax,0x10
1000324f:	85 c0                	test   eax,eax
10003251:	74 07                	je     1000325a <NWindow::paintHandler(NFrame::Graphics)+0x184>
10003253:	b8 c0 c0 c0 00       	mov    eax,0xc0c0c0
10003258:	eb 05                	jmp    1000325f <NWindow::paintHandler(NFrame::Graphics)+0x189>
1000325a:	b8 00 00 00 00       	mov    eax,0x0
1000325f:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10003262:	8b 52 18             	mov    edx,DWORD PTR [edx+0x18]
10003265:	8d 4a e8             	lea    ecx,[edx-0x18]
10003268:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
1000326b:	8b 52 74             	mov    edx,DWORD PTR [edx+0x74]
1000326e:	29 d1                	sub    ecx,edx
10003270:	89 ca                	mov    edx,ecx
10003272:	83 c2 08             	add    edx,0x8
10003275:	83 ec 0c             	sub    esp,0xc
10003278:	50                   	push   eax
10003279:	68 70 3d 00 10       	push   0x10003d70	1000327a: R_386_32	.text
1000327e:	6a 06                	push   0x6
10003280:	52                   	push   edx
10003281:	83 ec 20             	sub    esp,0x20
10003284:	89 e0                	mov    eax,esp
10003286:	89 c3                	mov    ebx,eax
10003288:	8d 45 0c             	lea    eax,[ebp+0xc]
1000328b:	ba 08 00 00 00       	mov    edx,0x8
10003290:	89 df                	mov    edi,ebx
10003292:	89 c6                	mov    esi,eax
10003294:	89 d1                	mov    ecx,edx
10003296:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003298:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
1000329b:	e8 fc ff ff ff       	call   1000329c <NWindow::paintHandler(NFrame::Graphics)+0x1c6>	1000329c: R_386_PC32	NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)
100032a0:	83 c4 40             	add    esp,0x40
100032a3:	eb 4c                	jmp    100032f1 <NWindow::paintHandler(NFrame::Graphics)+0x21b>
100032a5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100032a8:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
100032ab:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100032ae:	8b 40 70             	mov    eax,DWORD PTR [eax+0x70]
100032b1:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100032b4:	8b 4a 18             	mov    ecx,DWORD PTR [edx+0x18]
100032b7:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100032ba:	8b 52 74             	mov    edx,DWORD PTR [edx+0x74]
100032bd:	29 d1                	sub    ecx,edx
100032bf:	89 ca                	mov    edx,ecx
100032c1:	83 ec 08             	sub    esp,0x8
100032c4:	68 ff ff ff 00       	push   0xffffff
100032c9:	50                   	push   eax
100032ca:	52                   	push   edx
100032cb:	6a 00                	push   0x0
100032cd:	6a 00                	push   0x0
100032cf:	83 ec 20             	sub    esp,0x20
100032d2:	89 e0                	mov    eax,esp
100032d4:	89 c3                	mov    ebx,eax
100032d6:	8d 45 0c             	lea    eax,[ebp+0xc]
100032d9:	ba 08 00 00 00       	mov    edx,0x8
100032de:	89 df                	mov    edi,ebx
100032e0:	89 c6                	mov    esi,eax
100032e2:	89 d1                	mov    ecx,edx
100032e4:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100032e6:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
100032e9:	e8 fc ff ff ff       	call   100032ea <NWindow::paintHandler(NFrame::Graphics)+0x214>	100032ea: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
100032ee:	83 c4 40             	add    esp,0x40
100032f1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100032f4:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
100032f7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100032fa:	8b 40 78             	mov    eax,DWORD PTR [eax+0x78]
100032fd:	83 ec 0c             	sub    esp,0xc
10003300:	6a 00                	push   0x0
10003302:	50                   	push   eax
10003303:	6a 06                	push   0x6
10003305:	6a 08                	push   0x8
10003307:	83 ec 20             	sub    esp,0x20
1000330a:	89 e0                	mov    eax,esp
1000330c:	89 c3                	mov    ebx,eax
1000330e:	8d 45 0c             	lea    eax,[ebp+0xc]
10003311:	ba 08 00 00 00       	mov    edx,0x8
10003316:	89 df                	mov    edi,ebx
10003318:	89 c6                	mov    esi,eax
1000331a:	89 d1                	mov    ecx,edx
1000331c:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000331e:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003321:	e8 fc ff ff ff       	call   10003322 <NWindow::paintHandler(NFrame::Graphics)+0x24c>	10003322: R_386_PC32	NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)
10003326:	83 c4 40             	add    esp,0x40
10003329:	eb 30                	jmp    1000335b <NWindow::paintHandler(NFrame::Graphics)+0x285>
1000332b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000332e:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003331:	83 ec 08             	sub    esp,0x8
10003334:	68 c0 c0 c0 00       	push   0xc0c0c0
10003339:	83 ec 20             	sub    esp,0x20
1000333c:	89 e0                	mov    eax,esp
1000333e:	89 c3                	mov    ebx,eax
10003340:	8d 45 0c             	lea    eax,[ebp+0xc]
10003343:	ba 08 00 00 00       	mov    edx,0x8
10003348:	89 df                	mov    edi,ebx
1000334a:	89 c6                	mov    esi,eax
1000334c:	89 d1                	mov    ecx,edx
1000334e:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003350:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003353:	e8 fc ff ff ff       	call   10003354 <NWindow::paintHandler(NFrame::Graphics)+0x27e>	10003354: R_386_PC32	NFrame::paintSolid(NFrame::Graphics, unsigned int)
10003358:	83 c4 30             	add    esp,0x30
1000335b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000335e:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
10003361:	83 e0 04             	and    eax,0x4
10003364:	85 c0                	test   eax,eax
10003366:	0f 85 ab 01 00 00    	jne    10003517 <NWindow::paintHandler(NFrame::Graphics)+0x441>
1000336c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000336f:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003372:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003375:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
10003378:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000337b:	8b 40 74             	mov    eax,DWORD PTR [eax+0x74]
1000337e:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10003381:	8b 59 18             	mov    ebx,DWORD PTR [ecx+0x18]
10003384:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10003387:	8b 49 74             	mov    ecx,DWORD PTR [ecx+0x74]
1000338a:	29 cb                	sub    ebx,ecx
1000338c:	89 d9                	mov    ecx,ebx
1000338e:	83 ec 08             	sub    esp,0x8
10003391:	6a 00                	push   0x0
10003393:	52                   	push   edx
10003394:	50                   	push   eax
10003395:	6a 00                	push   0x0
10003397:	51                   	push   ecx
10003398:	83 ec 20             	sub    esp,0x20
1000339b:	89 e0                	mov    eax,esp
1000339d:	89 c3                	mov    ebx,eax
1000339f:	8d 45 0c             	lea    eax,[ebp+0xc]
100033a2:	ba 08 00 00 00       	mov    edx,0x8
100033a7:	89 df                	mov    edi,ebx
100033a9:	89 c6                	mov    esi,eax
100033ab:	89 d1                	mov    ecx,edx
100033ad:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100033af:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
100033b2:	e8 fc ff ff ff       	call   100033b3 <NWindow::paintHandler(NFrame::Graphics)+0x2dd>	100033b3: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
100033b7:	83 c4 40             	add    esp,0x40
100033ba:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100033bd:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
100033c0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100033c3:	8b 50 74             	mov    edx,DWORD PTR [eax+0x74]
100033c6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100033c9:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
100033cc:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100033cf:	8b 59 1c             	mov    ebx,DWORD PTR [ecx+0x1c]
100033d2:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100033d5:	8b 49 74             	mov    ecx,DWORD PTR [ecx+0x74]
100033d8:	29 cb                	sub    ebx,ecx
100033da:	89 d9                	mov    ecx,ebx
100033dc:	83 ec 08             	sub    esp,0x8
100033df:	6a 00                	push   0x0
100033e1:	52                   	push   edx
100033e2:	50                   	push   eax
100033e3:	51                   	push   ecx
100033e4:	6a 00                	push   0x0
100033e6:	83 ec 20             	sub    esp,0x20
100033e9:	89 e0                	mov    eax,esp
100033eb:	89 c3                	mov    ebx,eax
100033ed:	8d 45 0c             	lea    eax,[ebp+0xc]
100033f0:	ba 08 00 00 00       	mov    edx,0x8
100033f5:	89 df                	mov    edi,ebx
100033f7:	89 c6                	mov    esi,eax
100033f9:	89 d1                	mov    ecx,edx
100033fb:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100033fd:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003400:	e8 fc ff ff ff       	call   10003401 <NWindow::paintHandler(NFrame::Graphics)+0x32b>	10003401: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
10003405:	83 c4 40             	add    esp,0x40
10003408:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000340b:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
1000340e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003411:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
10003414:	83 ec 08             	sub    esp,0x8
10003417:	6a 00                	push   0x0
10003419:	6a 01                	push   0x1
1000341b:	50                   	push   eax
1000341c:	6a 00                	push   0x0
1000341e:	6a 00                	push   0x0
10003420:	83 ec 20             	sub    esp,0x20
10003423:	89 e0                	mov    eax,esp
10003425:	89 c3                	mov    ebx,eax
10003427:	8d 45 0c             	lea    eax,[ebp+0xc]
1000342a:	ba 08 00 00 00       	mov    edx,0x8
1000342f:	89 df                	mov    edi,ebx
10003431:	89 c6                	mov    esi,eax
10003433:	89 d1                	mov    ecx,edx
10003435:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003437:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
1000343a:	e8 fc ff ff ff       	call   1000343b <NWindow::paintHandler(NFrame::Graphics)+0x365>	1000343b: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
1000343f:	83 c4 40             	add    esp,0x40
10003442:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003445:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003448:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000344b:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
1000344e:	83 ec 08             	sub    esp,0x8
10003451:	6a 00                	push   0x0
10003453:	50                   	push   eax
10003454:	6a 01                	push   0x1
10003456:	6a 00                	push   0x0
10003458:	6a 00                	push   0x0
1000345a:	83 ec 20             	sub    esp,0x20
1000345d:	89 e0                	mov    eax,esp
1000345f:	89 c3                	mov    ebx,eax
10003461:	8d 45 0c             	lea    eax,[ebp+0xc]
10003464:	ba 08 00 00 00       	mov    edx,0x8
10003469:	89 df                	mov    edi,ebx
1000346b:	89 c6                	mov    esi,eax
1000346d:	89 d1                	mov    ecx,edx
1000346f:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003471:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003474:	e8 fc ff ff ff       	call   10003475 <NWindow::paintHandler(NFrame::Graphics)+0x39f>	10003475: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
10003479:	83 c4 40             	add    esp,0x40
1000347c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000347f:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003482:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003485:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
10003488:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
1000348b:	8b 52 1c             	mov    edx,DWORD PTR [edx+0x1c]
1000348e:	8d 4a ff             	lea    ecx,[edx-0x1]
10003491:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10003494:	8b 52 74             	mov    edx,DWORD PTR [edx+0x74]
10003497:	29 d1                	sub    ecx,edx
10003499:	89 ca                	mov    edx,ecx
1000349b:	83 ec 08             	sub    esp,0x8
1000349e:	6a 00                	push   0x0
100034a0:	6a 01                	push   0x1
100034a2:	50                   	push   eax
100034a3:	52                   	push   edx
100034a4:	6a 00                	push   0x0
100034a6:	83 ec 20             	sub    esp,0x20
100034a9:	89 e0                	mov    eax,esp
100034ab:	89 c3                	mov    ebx,eax
100034ad:	8d 45 0c             	lea    eax,[ebp+0xc]
100034b0:	ba 08 00 00 00       	mov    edx,0x8
100034b5:	89 df                	mov    edi,ebx
100034b7:	89 c6                	mov    esi,eax
100034b9:	89 d1                	mov    ecx,edx
100034bb:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100034bd:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
100034c0:	e8 fc ff ff ff       	call   100034c1 <NWindow::paintHandler(NFrame::Graphics)+0x3eb>	100034c1: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
100034c5:	83 c4 40             	add    esp,0x40
100034c8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100034cb:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
100034ce:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100034d1:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
100034d4:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100034d7:	8b 52 18             	mov    edx,DWORD PTR [edx+0x18]
100034da:	8d 4a ff             	lea    ecx,[edx-0x1]
100034dd:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100034e0:	8b 52 74             	mov    edx,DWORD PTR [edx+0x74]
100034e3:	29 d1                	sub    ecx,edx
100034e5:	89 ca                	mov    edx,ecx
100034e7:	83 ec 08             	sub    esp,0x8
100034ea:	6a 00                	push   0x0
100034ec:	50                   	push   eax
100034ed:	6a 01                	push   0x1
100034ef:	6a 00                	push   0x0
100034f1:	52                   	push   edx
100034f2:	83 ec 20             	sub    esp,0x20
100034f5:	89 e0                	mov    eax,esp
100034f7:	89 c3                	mov    ebx,eax
100034f9:	8d 45 0c             	lea    eax,[ebp+0xc]
100034fc:	ba 08 00 00 00       	mov    edx,0x8
10003501:	89 df                	mov    edi,ebx
10003503:	89 c6                	mov    esi,eax
10003505:	89 d1                	mov    ecx,edx
10003507:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003509:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
1000350c:	e8 fc ff ff ff       	call   1000350d <NWindow::paintHandler(NFrame::Graphics)+0x437>	1000350d: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
10003511:	83 c4 40             	add    esp,0x40
10003514:	eb 01                	jmp    10003517 <NWindow::paintHandler(NFrame::Graphics)+0x441>
10003516:	90                   	nop
10003517:	8d 65 f4             	lea    esp,[ebp-0xc]
1000351a:	5b                   	pop    ebx
1000351b:	5e                   	pop    esi
1000351c:	5f                   	pop    edi
1000351d:	5d                   	pop    ebp
1000351e:	c3                   	ret    
1000351f:	90                   	nop

10003520 <NButton::NButton(int, int, int, int, int, int)>:
10003520:	55                   	push   ebp
10003521:	89 e5                	mov    ebp,esp
10003523:	83 ec 08             	sub    esp,0x8
10003526:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003529:	83 ec 0c             	sub    esp,0xc
1000352c:	ff 75 18             	push   DWORD PTR [ebp+0x18]
1000352f:	ff 75 14             	push   DWORD PTR [ebp+0x14]
10003532:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10003535:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10003538:	50                   	push   eax
10003539:	e8 fc ff ff ff       	call   1000353a <NButton::NButton(int, int, int, int, int, int)+0x1a>	1000353a: R_386_PC32	NFrame::NFrame(int, int, int, int)
1000353e:	83 c4 20             	add    esp,0x20
10003541:	ba 08 00 00 00       	mov    edx,0x8	10003542: R_386_32	vtable for NButton
10003546:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003549:	89 10                	mov    DWORD PTR [eax],edx
1000354b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000354e:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10003551:	89 50 74             	mov    DWORD PTR [eax+0x74],edx
10003554:	83 7d 20 ff          	cmp    DWORD PTR [ebp+0x20],0xffffffff
10003558:	75 05                	jne    1000355f <NButton::NButton(int, int, int, int, int, int)+0x3f>
1000355a:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
1000355d:	eb 03                	jmp    10003562 <NButton::NButton(int, int, int, int, int, int)+0x42>
1000355f:	8b 45 20             	mov    eax,DWORD PTR [ebp+0x20]
10003562:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10003565:	89 42 78             	mov    DWORD PTR [edx+0x78],eax
10003568:	90                   	nop
10003569:	c9                   	leave  
1000356a:	c3                   	ret    
1000356b:	90                   	nop

1000356c <NButton::paintHandler(NFrame::Graphics)>:
1000356c:	55                   	push   ebp
1000356d:	89 e5                	mov    ebp,esp
1000356f:	57                   	push   edi
10003570:	56                   	push   esi
10003571:	53                   	push   ebx
10003572:	83 ec 1c             	sub    esp,0x1c
10003575:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003578:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000357b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000357e:	8b 40 74             	mov    eax,DWORD PTR [eax+0x74]
10003581:	89 c1                	mov    ecx,eax
10003583:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003586:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
10003589:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000358c:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
1000358f:	83 ec 08             	sub    esp,0x8
10003592:	51                   	push   ecx
10003593:	52                   	push   edx
10003594:	50                   	push   eax
10003595:	6a 00                	push   0x0
10003597:	6a 00                	push   0x0
10003599:	83 ec 20             	sub    esp,0x20
1000359c:	89 e0                	mov    eax,esp
1000359e:	89 c3                	mov    ebx,eax
100035a0:	8d 45 0c             	lea    eax,[ebp+0xc]
100035a3:	ba 08 00 00 00       	mov    edx,0x8
100035a8:	89 df                	mov    edi,ebx
100035aa:	89 c6                	mov    esi,eax
100035ac:	89 d1                	mov    ecx,edx
100035ae:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100035b0:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
100035b3:	e8 fc ff ff ff       	call   100035b4 <NButton::paintHandler(NFrame::Graphics)+0x48>	100035b4: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
100035b8:	83 c4 40             	add    esp,0x40
100035bb:	90                   	nop
100035bc:	8d 65 f4             	lea    esp,[ebp-0xc]
100035bf:	5b                   	pop    ebx
100035c0:	5e                   	pop    esi
100035c1:	5f                   	pop    edi
100035c2:	5d                   	pop    ebp
100035c3:	c3                   	ret    

100035c4 <LinkedList2<NFrame*>::LinkedList2()>:
100035c4:	55                   	push   ebp
100035c5:	89 e5                	mov    ebp,esp
100035c7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100035ca:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
100035d0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100035d3:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
100035da:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100035dd:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
100035e4:	90                   	nop
100035e5:	5d                   	pop    ebp
100035e6:	c3                   	ret    
100035e7:	90                   	nop

100035e8 <LinkedList2<NFrame*>::prependNode(NFrame*)>:
100035e8:	55                   	push   ebp
100035e9:	89 e5                	mov    ebp,esp
100035eb:	83 ec 18             	sub    esp,0x18
100035ee:	c7 45 f0 08 00 00 00 	mov    DWORD PTR [ebp-0x10],0x8
100035f5:	83 ec 0c             	sub    esp,0xc
100035f8:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100035fb:	e8 fc ff ff ff       	call   100035fc <LinkedList2<NFrame*>::prependNode(NFrame*)+0x14>	100035fc: R_386_PC32	malloc
10003600:	83 c4 10             	add    esp,0x10
10003603:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10003606:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10003609:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
1000360c:	89 10                	mov    DWORD PTR [eax],edx
1000360e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003611:	8b 50 04             	mov    edx,DWORD PTR [eax+0x4]
10003614:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10003617:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
1000361a:	83 ec 0c             	sub    esp,0xc
1000361d:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003620:	e8 fc ff ff ff       	call   10003621 <LinkedList2<NFrame*>::prependNode(NFrame*)+0x39>	10003621: R_386_PC32	LinkedList2<NFrame*>::isEmpty()
10003625:	83 c4 10             	add    esp,0x10
10003628:	84 c0                	test   al,al
1000362a:	74 09                	je     10003635 <LinkedList2<NFrame*>::prependNode(NFrame*)+0x4d>
1000362c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000362f:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10003632:	89 50 08             	mov    DWORD PTR [eax+0x8],edx
10003635:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003638:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000363b:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
1000363e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003641:	8b 00                	mov    eax,DWORD PTR [eax]
10003643:	8d 50 01             	lea    edx,[eax+0x1]
10003646:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003649:	89 10                	mov    DWORD PTR [eax],edx
1000364b:	90                   	nop
1000364c:	c9                   	leave  
1000364d:	c3                   	ret    

1000364e <LinkedList2<NFrame*>::isEmpty()>:
1000364e:	55                   	push   ebp
1000364f:	89 e5                	mov    ebp,esp
10003651:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003654:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003657:	85 c0                	test   eax,eax
10003659:	0f 94 c0             	sete   al
1000365c:	5d                   	pop    ebp
1000365d:	c3                   	ret    

1000365e <NFrame::invalidateRectangularBoundingBox()>:
1000365e:	55                   	push   ebp
1000365f:	89 e5                	mov    ebp,esp
10003661:	57                   	push   edi
10003662:	56                   	push   esi
10003663:	53                   	push   ebx
10003664:	83 ec 2c             	sub    esp,0x2c
10003667:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000366a:	8b 78 1c             	mov    edi,DWORD PTR [eax+0x1c]
1000366d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003670:	8b 70 18             	mov    esi,DWORD PTR [eax+0x18]
10003673:	83 ec 0c             	sub    esp,0xc
10003676:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003679:	e8 fc ff ff ff       	call   1000367a <NFrame::invalidateRectangularBoundingBox()+0x1c>	1000367a: R_386_PC32	NFrame::getAbsY()
1000367e:	83 c4 10             	add    esp,0x10
10003681:	89 c3                	mov    ebx,eax
10003683:	83 ec 0c             	sub    esp,0xc
10003686:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003689:	e8 fc ff ff ff       	call   1000368a <NFrame::invalidateRectangularBoundingBox()+0x2c>	1000368a: R_386_PC32	NFrame::getAbsX()
1000368e:	83 c4 10             	add    esp,0x10
10003691:	89 c2                	mov    edx,eax
10003693:	8d 45 cc             	lea    eax,[ebp-0x34]
10003696:	83 ec 0c             	sub    esp,0xc
10003699:	57                   	push   edi
1000369a:	56                   	push   esi
1000369b:	53                   	push   ebx
1000369c:	52                   	push   edx
1000369d:	50                   	push   eax
1000369e:	e8 fc ff ff ff       	call   1000369f <NFrame::invalidateRectangularBoundingBox()+0x41>	1000369f: R_386_PC32	createRectangleRegion(int, int, int, int)
100036a3:	83 c4 1c             	add    esp,0x1c
100036a6:	83 ec 1c             	sub    esp,0x1c
100036a9:	89 e0                	mov    eax,esp
100036ab:	89 c3                	mov    ebx,eax
100036ad:	8d 45 cc             	lea    eax,[ebp-0x34]
100036b0:	ba 07 00 00 00       	mov    edx,0x7
100036b5:	89 df                	mov    edi,ebx
100036b7:	89 c6                	mov    esi,eax
100036b9:	89 d1                	mov    ecx,edx
100036bb:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100036bd:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100036c0:	e8 fc ff ff ff       	call   100036c1 <NFrame::invalidateRectangularBoundingBox()+0x63>	100036c1: R_386_PC32	NFrame::markRegionAsDirty(Region)
100036c5:	83 c4 20             	add    esp,0x20
100036c8:	90                   	nop
100036c9:	8d 65 f4             	lea    esp,[ebp-0xc]
100036cc:	5b                   	pop    ebx
100036cd:	5e                   	pop    esi
100036ce:	5f                   	pop    edi
100036cf:	5d                   	pop    ebp
100036d0:	c3                   	ret    
100036d1:	90                   	nop

100036d2 <NFrame::raiseChild(NFrame*)>:
100036d2:	55                   	push   ebp
100036d3:	89 e5                	mov    ebp,esp
100036d5:	83 ec 08             	sub    esp,0x8
100036d8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100036db:	83 c0 04             	add    eax,0x4
100036de:	83 ec 08             	sub    esp,0x8
100036e1:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100036e4:	50                   	push   eax
100036e5:	e8 fc ff ff ff       	call   100036e6 <NFrame::raiseChild(NFrame*)+0x14>	100036e6: R_386_PC32	LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)
100036ea:	83 c4 10             	add    esp,0x10
100036ed:	83 ec 08             	sub    esp,0x8
100036f0:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100036f3:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100036f6:	e8 fc ff ff ff       	call   100036f7 <NFrame::raiseChild(NFrame*)+0x25>	100036f7: R_386_PC32	NFrame::addChild(NFrame*)
100036fb:	83 c4 10             	add    esp,0x10
100036fe:	83 ec 0c             	sub    esp,0xc
10003701:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003704:	e8 fc ff ff ff       	call   10003705 <NFrame::raiseChild(NFrame*)+0x33>	10003705: R_386_PC32	NFrame::invalidate()
10003709:	83 c4 10             	add    esp,0x10
1000370c:	90                   	nop
1000370d:	c9                   	leave  
1000370e:	c3                   	ret    
1000370f:	90                   	nop

10003710 <NFrame::getPixelOwner(Video*, int, int, bool)>:
10003710:	55                   	push   ebp
10003711:	89 e5                	mov    ebp,esp
10003713:	57                   	push   edi
10003714:	56                   	push   esi
10003715:	53                   	push   ebx
10003716:	83 ec 4c             	sub    esp,0x4c
10003719:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
1000371c:	88 45 b4             	mov    BYTE PTR [ebp-0x4c],al
1000371f:	8d 45 c0             	lea    eax,[ebp-0x40]
10003722:	83 ec 08             	sub    esp,0x8
10003725:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003728:	50                   	push   eax
10003729:	e8 fc ff ff ff       	call   1000372a <NFrame::getPixelOwner(Video*, int, int, bool)+0x1a>	1000372a: R_386_PC32	NFrame::getDrawRegion()
1000372e:	83 c4 0c             	add    esp,0xc
10003731:	83 ec 0c             	sub    esp,0xc
10003734:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003737:	e8 fc ff ff ff       	call   10003738 <NFrame::getPixelOwner(Video*, int, int, bool)+0x28>	10003738: R_386_PC32	NFrame::getAbsX()
1000373c:	83 c4 10             	add    esp,0x10
1000373f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10003742:	83 ec 0c             	sub    esp,0xc
10003745:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003748:	e8 fc ff ff ff       	call   10003749 <NFrame::getPixelOwner(Video*, int, int, bool)+0x39>	10003749: R_386_PC32	NFrame::getAbsY()
1000374d:	83 c4 10             	add    esp,0x10
10003750:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
10003753:	83 ec 0c             	sub    esp,0xc
10003756:	ff 75 14             	push   DWORD PTR [ebp+0x14]
10003759:	ff 75 10             	push   DWORD PTR [ebp+0x10]
1000375c:	83 ec 1c             	sub    esp,0x1c
1000375f:	89 e0                	mov    eax,esp
10003761:	89 c3                	mov    ebx,eax
10003763:	8d 45 c0             	lea    eax,[ebp-0x40]
10003766:	ba 07 00 00 00       	mov    edx,0x7
1000376b:	89 df                	mov    edi,ebx
1000376d:	89 c6                	mov    esi,eax
1000376f:	89 d1                	mov    ecx,edx
10003771:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003773:	e8 fc ff ff ff       	call   10003774 <NFrame::getPixelOwner(Video*, int, int, bool)+0x64>	10003774: R_386_PC32	isPointInRegion(Region, int, int)
10003778:	83 c4 30             	add    esp,0x30
1000377b:	84 c0                	test   al,al
1000377d:	74 17                	je     10003796 <NFrame::getPixelOwner(Video*, int, int, bool)+0x86>
1000377f:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
10003782:	83 ec 0c             	sub    esp,0xc
10003785:	50                   	push   eax
10003786:	e8 fc ff ff ff       	call   10003787 <NFrame::getPixelOwner(Video*, int, int, bool)+0x77>	10003787: R_386_PC32	free
1000378b:	83 c4 10             	add    esp,0x10
1000378e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003791:	e9 83 00 00 00       	jmp    10003819 <NFrame::getPixelOwner(Video*, int, int, bool)+0x109>
10003796:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
10003799:	83 ec 0c             	sub    esp,0xc
1000379c:	50                   	push   eax
1000379d:	e8 fc ff ff ff       	call   1000379e <NFrame::getPixelOwner(Video*, int, int, bool)+0x8e>	1000379e: R_386_PC32	free
100037a2:	83 c4 10             	add    esp,0x10
100037a5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100037a8:	8b 40 08             	mov    eax,DWORD PTR [eax+0x8]
100037ab:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
100037ae:	83 7d e4 00          	cmp    DWORD PTR [ebp-0x1c],0x0
100037b2:	74 60                	je     10003814 <NFrame::getPixelOwner(Video*, int, int, bool)+0x104>
100037b4:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100037b7:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
100037ba:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100037bd:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
100037c0:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
100037c3:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100037c6:	8b 00                	mov    eax,DWORD PTR [eax]
100037c8:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
100037cb:	84 c0                	test   al,al
100037cd:	75 42                	jne    10003811 <NFrame::getPixelOwner(Video*, int, int, bool)+0x101>
100037cf:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100037d2:	8b 00                	mov    eax,DWORD PTR [eax]
100037d4:	0f b6 55 b4          	movzx  edx,BYTE PTR [ebp-0x4c]
100037d8:	83 ec 0c             	sub    esp,0xc
100037db:	52                   	push   edx
100037dc:	ff 75 14             	push   DWORD PTR [ebp+0x14]
100037df:	ff 75 10             	push   DWORD PTR [ebp+0x10]
100037e2:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100037e5:	50                   	push   eax
100037e6:	e8 fc ff ff ff       	call   100037e7 <NFrame::getPixelOwner(Video*, int, int, bool)+0xd7>	100037e7: R_386_PC32	NFrame::getPixelOwner(Video*, int, int, bool)
100037eb:	83 c4 20             	add    esp,0x20
100037ee:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
100037f1:	83 7d dc 00          	cmp    DWORD PTR [ebp-0x24],0x0
100037f5:	74 b7                	je     100037ae <NFrame::getPixelOwner(Video*, int, int, bool)+0x9e>
100037f7:	80 7d b4 00          	cmp    BYTE PTR [ebp-0x4c],0x0
100037fb:	74 0f                	je     1000380c <NFrame::getPixelOwner(Video*, int, int, bool)+0xfc>
100037fd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003800:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10003803:	85 c0                	test   eax,eax
10003805:	74 05                	je     1000380c <NFrame::getPixelOwner(Video*, int, int, bool)+0xfc>
10003807:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000380a:	eb 0d                	jmp    10003819 <NFrame::getPixelOwner(Video*, int, int, bool)+0x109>
1000380c:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
1000380f:	eb 08                	jmp    10003819 <NFrame::getPixelOwner(Video*, int, int, bool)+0x109>
10003811:	90                   	nop
10003812:	eb 9a                	jmp    100037ae <NFrame::getPixelOwner(Video*, int, int, bool)+0x9e>
10003814:	b8 00 00 00 00       	mov    eax,0x0
10003819:	8d 65 f4             	lea    esp,[ebp-0xc]
1000381c:	5b                   	pop    ebx
1000381d:	5e                   	pop    esi
1000381e:	5f                   	pop    edi
1000381f:	5d                   	pop    ebp
10003820:	c3                   	ret    
10003821:	90                   	nop

10003822 <NFrame::unhide()>:
10003822:	55                   	push   ebp
10003823:	89 e5                	mov    ebp,esp
10003825:	83 ec 08             	sub    esp,0x8
10003828:	83 ec 08             	sub    esp,0x8
1000382b:	6a 00                	push   0x0
1000382d:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003830:	e8 fc ff ff ff       	call   10003831 <NFrame::unhide()+0xf>	10003831: R_386_PC32	NFrame::hide(bool)
10003835:	83 c4 10             	add    esp,0x10
10003838:	90                   	nop
10003839:	c9                   	leave  
1000383a:	c3                   	ret    
1000383b:	90                   	nop

1000383c <NFrame::hide(bool)>:
1000383c:	55                   	push   ebp
1000383d:	89 e5                	mov    ebp,esp
1000383f:	83 ec 18             	sub    esp,0x18
10003842:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10003845:	88 45 f4             	mov    BYTE PTR [ebp-0xc],al
10003848:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000384b:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
1000384e:	38 45 f4             	cmp    BYTE PTR [ebp-0xc],al
10003851:	74 31                	je     10003884 <NFrame::hide(bool)+0x48>
10003853:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003856:	8a 55 f4             	mov    dl,BYTE PTR [ebp-0xc]
10003859:	88 50 68             	mov    BYTE PTR [eax+0x68],dl
1000385c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000385f:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
10003862:	84 c0                	test   al,al
10003864:	74 10                	je     10003876 <NFrame::hide(bool)+0x3a>
10003866:	83 ec 0c             	sub    esp,0xc
10003869:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000386c:	e8 fc ff ff ff       	call   1000386d <NFrame::hide(bool)+0x31>	1000386d: R_386_PC32	NFrame::invalidate()
10003871:	83 c4 10             	add    esp,0x10
10003874:	eb 0e                	jmp    10003884 <NFrame::hide(bool)+0x48>
10003876:	83 ec 0c             	sub    esp,0xc
10003879:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000387c:	e8 fc ff ff ff       	call   1000387d <NFrame::hide(bool)+0x41>	1000387d: R_386_PC32	NFrame::invalidateRectangularBoundingBox()
10003881:	83 c4 10             	add    esp,0x10
10003884:	90                   	nop
10003885:	c9                   	leave  
10003886:	c3                   	ret    
10003887:	90                   	nop

10003888 <NFrame::getWidth()>:
10003888:	55                   	push   ebp
10003889:	89 e5                	mov    ebp,esp
1000388b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000388e:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
10003891:	5d                   	pop    ebp
10003892:	c3                   	ret    
10003893:	90                   	nop

10003894 <NFrame::getHeight()>:
10003894:	55                   	push   ebp
10003895:	89 e5                	mov    ebp,esp
10003897:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000389a:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
1000389d:	5d                   	pop    ebp
1000389e:	c3                   	ret    
1000389f:	90                   	nop

100038a0 <NFrame::startDragState()>:
100038a0:	55                   	push   ebp
100038a1:	89 e5                	mov    ebp,esp
100038a3:	57                   	push   edi
100038a4:	56                   	push   esi
100038a5:	53                   	push   ebx
100038a6:	83 ec 2c             	sub    esp,0x2c
100038a9:	83 ec 08             	sub    esp,0x8
100038ac:	6a 01                	push   0x1
100038ae:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100038b1:	e8 fc ff ff ff       	call   100038b2 <NFrame::startDragState()+0x12>	100038b2: R_386_PC32	NFrame::hide(bool)
100038b6:	83 c4 10             	add    esp,0x10
100038b9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100038bc:	8b 70 1c             	mov    esi,DWORD PTR [eax+0x1c]
100038bf:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100038c2:	8b 58 18             	mov    ebx,DWORD PTR [eax+0x18]
100038c5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100038c8:	8b 48 28             	mov    ecx,DWORD PTR [eax+0x28]
100038cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100038ce:	8b 50 24             	mov    edx,DWORD PTR [eax+0x24]
100038d1:	8d 45 cc             	lea    eax,[ebp-0x34]
100038d4:	83 ec 08             	sub    esp,0x8
100038d7:	6a 03                	push   0x3
100038d9:	56                   	push   esi
100038da:	53                   	push   ebx
100038db:	51                   	push   ecx
100038dc:	52                   	push   edx
100038dd:	50                   	push   eax
100038de:	e8 fc ff ff ff       	call   100038df <NFrame::startDragState()+0x3f>	100038df: R_386_PC32	createAntRegion(int, int, int, int, int)
100038e3:	83 c4 1c             	add    esp,0x1c
100038e6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100038e9:	8d 58 30             	lea    ebx,[eax+0x30]
100038ec:	8d 45 cc             	lea    eax,[ebp-0x34]
100038ef:	ba 19 00 00 00       	mov    edx,0x19
100038f4:	89 df                	mov    edi,ebx
100038f6:	89 c6                	mov    esi,eax
100038f8:	89 d1                	mov    ecx,edx
100038fa:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100038fc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100038ff:	c6 40 69 01          	mov    BYTE PTR [eax+0x69],0x1
10003903:	90                   	nop
10003904:	8d 65 f4             	lea    esp,[ebp-0xc]
10003907:	5b                   	pop    ebx
10003908:	5e                   	pop    esi
10003909:	5f                   	pop    edi
1000390a:	5d                   	pop    ebp
1000390b:	c3                   	ret    

1000390c <NFrame::endDragState()>:
1000390c:	55                   	push   ebp
1000390d:	89 e5                	mov    ebp,esp
1000390f:	83 ec 08             	sub    esp,0x8
10003912:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003915:	c6 40 69 00          	mov    BYTE PTR [eax+0x69],0x0
10003919:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000391c:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
1000391f:	83 ec 0c             	sub    esp,0xc
10003922:	50                   	push   eax
10003923:	e8 fc ff ff ff       	call   10003924 <NFrame::endDragState()+0x18>	10003924: R_386_PC32	free
10003928:	83 c4 10             	add    esp,0x10
1000392b:	83 ec 0c             	sub    esp,0xc
1000392e:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003931:	e8 fc ff ff ff       	call   10003932 <NFrame::endDragState()+0x26>	10003932: R_386_PC32	NFrame::unhide()
10003936:	83 c4 10             	add    esp,0x10
10003939:	90                   	nop
1000393a:	c9                   	leave  
1000393b:	c3                   	ret    

1000393c <NFrame::setSize(int, int)>:
1000393c:	55                   	push   ebp
1000393d:	89 e5                	mov    ebp,esp
1000393f:	83 ec 08             	sub    esp,0x8
10003942:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003945:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
10003948:	39 45 0c             	cmp    DWORD PTR [ebp+0xc],eax
1000394b:	75 0f                	jne    1000395c <NFrame::setSize(int, int)+0x20>
1000394d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003950:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10003953:	39 45 10             	cmp    DWORD PTR [ebp+0x10],eax
10003956:	0f 84 89 00 00 00    	je     100039e5 <NFrame::setSize(int, int)+0xa9>
1000395c:	83 ec 0c             	sub    esp,0xc
1000395f:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003962:	e8 fc ff ff ff       	call   10003963 <NFrame::setSize(int, int)+0x27>	10003963: R_386_PC32	NFrame::tryInvalidate()
10003967:	83 c4 10             	add    esp,0x10
1000396a:	83 7d 0c 00          	cmp    DWORD PTR [ebp+0xc],0x0
1000396e:	7f 07                	jg     10003977 <NFrame::setSize(int, int)+0x3b>
10003970:	c7 45 0c 01 00 00 00 	mov    DWORD PTR [ebp+0xc],0x1
10003977:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
1000397b:	7f 07                	jg     10003984 <NFrame::setSize(int, int)+0x48>
1000397d:	c7 45 10 01 00 00 00 	mov    DWORD PTR [ebp+0x10],0x1
10003984:	83 ec 0c             	sub    esp,0xc
10003987:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000398a:	e8 fc ff ff ff       	call   1000398b <NFrame::setSize(int, int)+0x4f>	1000398b: R_386_PC32	NFrame::hasTitleBar()
1000398f:	83 c4 10             	add    esp,0x10
10003992:	84 c0                	test   al,al
10003994:	74 1a                	je     100039b0 <NFrame::setSize(int, int)+0x74>
10003996:	83 7d 0c 31          	cmp    DWORD PTR [ebp+0xc],0x31
1000399a:	7f 07                	jg     100039a3 <NFrame::setSize(int, int)+0x67>
1000399c:	c7 45 0c 32 00 00 00 	mov    DWORD PTR [ebp+0xc],0x32
100039a3:	83 7d 10 18          	cmp    DWORD PTR [ebp+0x10],0x18
100039a7:	7f 07                	jg     100039b0 <NFrame::setSize(int, int)+0x74>
100039a9:	c7 45 10 19 00 00 00 	mov    DWORD PTR [ebp+0x10],0x19
100039b0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100039b3:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
100039b6:	89 50 18             	mov    DWORD PTR [eax+0x18],edx
100039b9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100039bc:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
100039bf:	89 50 1c             	mov    DWORD PTR [eax+0x1c],edx
100039c2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100039c5:	8b 00                	mov    eax,DWORD PTR [eax]
100039c7:	83 c0 04             	add    eax,0x4
100039ca:	8b 00                	mov    eax,DWORD PTR [eax]
100039cc:	83 ec 0c             	sub    esp,0xc
100039cf:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100039d2:	ff d0                	call   eax
100039d4:	83 c4 10             	add    esp,0x10
100039d7:	83 ec 0c             	sub    esp,0xc
100039da:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100039dd:	e8 fc ff ff ff       	call   100039de <NFrame::setSize(int, int)+0xa2>	100039de: R_386_PC32	NFrame::tryInvalidate()
100039e2:	83 c4 10             	add    esp,0x10
100039e5:	90                   	nop
100039e6:	c9                   	leave  
100039e7:	c3                   	ret    

100039e8 <NFrame::hasTitleBar()>:
100039e8:	55                   	push   ebp
100039e9:	89 e5                	mov    ebp,esp
100039eb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100039ee:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
100039f1:	83 e0 08             	and    eax,0x8
100039f4:	85 c0                	test   eax,eax
100039f6:	75 11                	jne    10003a09 <NFrame::hasTitleBar()+0x21>
100039f8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100039fb:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
100039fe:	83 e0 01             	and    eax,0x1
10003a01:	85 c0                	test   eax,eax
10003a03:	75 04                	jne    10003a09 <NFrame::hasTitleBar()+0x21>
10003a05:	b0 01                	mov    al,0x1
10003a07:	eb 02                	jmp    10003a0b <NFrame::hasTitleBar()+0x23>
10003a09:	b0 00                	mov    al,0x0
10003a0b:	5d                   	pop    ebp
10003a0c:	c3                   	ret    
10003a0d:	90                   	nop

10003a0e <NFrame::getX()>:
10003a0e:	55                   	push   ebp
10003a0f:	89 e5                	mov    ebp,esp
10003a11:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a14:	8b 40 24             	mov    eax,DWORD PTR [eax+0x24]
10003a17:	5d                   	pop    ebp
10003a18:	c3                   	ret    
10003a19:	90                   	nop

10003a1a <NFrame::getY()>:
10003a1a:	55                   	push   ebp
10003a1b:	89 e5                	mov    ebp,esp
10003a1d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a20:	8b 40 28             	mov    eax,DWORD PTR [eax+0x28]
10003a23:	5d                   	pop    ebp
10003a24:	c3                   	ret    
10003a25:	90                   	nop

10003a26 <NFrame::setPosition(int, int)>:
10003a26:	55                   	push   ebp
10003a27:	89 e5                	mov    ebp,esp
10003a29:	83 ec 08             	sub    esp,0x8
10003a2c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a2f:	8b 40 24             	mov    eax,DWORD PTR [eax+0x24]
10003a32:	39 45 0c             	cmp    DWORD PTR [ebp+0xc],eax
10003a35:	75 0b                	jne    10003a42 <NFrame::setPosition(int, int)+0x1c>
10003a37:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a3a:	8b 40 28             	mov    eax,DWORD PTR [eax+0x28]
10003a3d:	39 45 10             	cmp    DWORD PTR [ebp+0x10],eax
10003a40:	74 7b                	je     10003abd <NFrame::setPosition(int, int)+0x97>
10003a42:	83 ec 0c             	sub    esp,0xc
10003a45:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003a48:	e8 fc ff ff ff       	call   10003a49 <NFrame::setPosition(int, int)+0x23>	10003a49: R_386_PC32	NFrame::tryInvalidate()
10003a4d:	83 c4 10             	add    esp,0x10
10003a50:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a53:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
10003a56:	84 c0                	test   al,al
10003a58:	74 36                	je     10003a90 <NFrame::setPosition(int, int)+0x6a>
10003a5a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a5d:	8b 50 40             	mov    edx,DWORD PTR [eax+0x40]
10003a60:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a63:	8b 40 24             	mov    eax,DWORD PTR [eax+0x24]
10003a66:	8b 4d 0c             	mov    ecx,DWORD PTR [ebp+0xc]
10003a69:	29 c1                	sub    ecx,eax
10003a6b:	89 c8                	mov    eax,ecx
10003a6d:	01 c2                	add    edx,eax
10003a6f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a72:	89 50 40             	mov    DWORD PTR [eax+0x40],edx
10003a75:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a78:	8b 50 44             	mov    edx,DWORD PTR [eax+0x44]
10003a7b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a7e:	8b 40 28             	mov    eax,DWORD PTR [eax+0x28]
10003a81:	8b 4d 10             	mov    ecx,DWORD PTR [ebp+0x10]
10003a84:	29 c1                	sub    ecx,eax
10003a86:	89 c8                	mov    eax,ecx
10003a88:	01 c2                	add    edx,eax
10003a8a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a8d:	89 50 44             	mov    DWORD PTR [eax+0x44],edx
10003a90:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a93:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
10003a96:	89 50 24             	mov    DWORD PTR [eax+0x24],edx
10003a99:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a9c:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
10003a9f:	89 50 28             	mov    DWORD PTR [eax+0x28],edx
10003aa2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003aa5:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
10003aa8:	83 f0 01             	xor    eax,0x1
10003aab:	84 c0                	test   al,al
10003aad:	74 0e                	je     10003abd <NFrame::setPosition(int, int)+0x97>
10003aaf:	83 ec 0c             	sub    esp,0xc
10003ab2:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003ab5:	e8 fc ff ff ff       	call   10003ab6 <NFrame::setPosition(int, int)+0x90>	10003ab6: R_386_PC32	NFrame::tryInvalidate()
10003aba:	83 c4 10             	add    esp,0x10
10003abd:	90                   	nop
10003abe:	c9                   	leave  
10003abf:	c3                   	ret    

10003ac0 <NFrame::raise()>:
10003ac0:	55                   	push   ebp
10003ac1:	89 e5                	mov    ebp,esp
10003ac3:	83 ec 08             	sub    esp,0x8
10003ac6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ac9:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10003acc:	85 c0                	test   eax,eax
10003ace:	74 23                	je     10003af3 <NFrame::raise()+0x33>
10003ad0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ad3:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10003ad6:	83 ec 08             	sub    esp,0x8
10003ad9:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003adc:	50                   	push   eax
10003add:	e8 fc ff ff ff       	call   10003ade <NFrame::raise()+0x1e>	10003ade: R_386_PC32	NFrame::raiseChild(NFrame*)
10003ae2:	83 c4 10             	add    esp,0x10
10003ae5:	83 ec 0c             	sub    esp,0xc
10003ae8:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003aeb:	e8 fc ff ff ff       	call   10003aec <NFrame::raise()+0x2c>	10003aec: R_386_PC32	NFrame::invalidate()
10003af0:	83 c4 10             	add    esp,0x10
10003af3:	90                   	nop
10003af4:	c9                   	leave  
10003af5:	c3                   	ret    

10003af6 <NFrame::repaintCursorRegion(Video*, Region)>:
10003af6:	55                   	push   ebp
10003af7:	89 e5                	mov    ebp,esp
10003af9:	57                   	push   edi
10003afa:	56                   	push   esi
10003afb:	53                   	push   ebx
10003afc:	83 ec 3c             	sub    esp,0x3c
10003aff:	8d 45 cc             	lea    eax,[ebp-0x34]
10003b02:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10003b05:	83 ec 04             	sub    esp,0x4
10003b08:	6a 00                	push   0x0
10003b0a:	83 ec 1c             	sub    esp,0x1c
10003b0d:	89 e0                	mov    eax,esp
10003b0f:	89 c3                	mov    ebx,eax
10003b11:	8d 45 10             	lea    eax,[ebp+0x10]
10003b14:	ba 07 00 00 00       	mov    edx,0x7
10003b19:	89 df                	mov    edi,ebx
10003b1b:	89 c6                	mov    esi,eax
10003b1d:	89 d1                	mov    ecx,edx
10003b1f:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003b21:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10003b24:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003b27:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10003b2a:	e8 fc ff ff ff       	call   10003b2b <NFrame::repaintCursorRegion(Video*, Region)+0x35>	10003b2b: R_386_PC32	NFrame::repaintAux(Video*, Region, bool)
10003b2f:	83 c4 2c             	add    esp,0x2c
10003b32:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10003b35:	83 ec 0c             	sub    esp,0xc
10003b38:	50                   	push   eax
10003b39:	e8 fc ff ff ff       	call   10003b3a <NFrame::repaintCursorRegion(Video*, Region)+0x44>	10003b3a: R_386_PC32	free
10003b3e:	83 c4 10             	add    esp,0x10
10003b41:	90                   	nop
10003b42:	8d 65 f4             	lea    esp,[ebp-0xc]
10003b45:	5b                   	pop    ebx
10003b46:	5e                   	pop    esi
10003b47:	5f                   	pop    edi
10003b48:	5d                   	pop    ebp
10003b49:	c3                   	ret    

10003b4a <NFrame::getTitlebarHeight()>:
10003b4a:	55                   	push   ebp
10003b4b:	89 e5                	mov    ebp,esp
10003b4d:	83 ec 08             	sub    esp,0x8
10003b50:	83 ec 0c             	sub    esp,0xc
10003b53:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003b56:	e8 fc ff ff ff       	call   10003b57 <NFrame::getTitlebarHeight()+0xd>	10003b57: R_386_PC32	NFrame::hasTitleBar()
10003b5b:	83 c4 10             	add    esp,0x10
10003b5e:	84 c0                	test   al,al
10003b60:	74 08                	je     10003b6a <NFrame::getTitlebarHeight()+0x20>
10003b62:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003b65:	8b 40 70             	mov    eax,DWORD PTR [eax+0x70]
10003b68:	eb 05                	jmp    10003b6f <NFrame::getTitlebarHeight()+0x25>
10003b6a:	b8 00 00 00 00       	mov    eax,0x0
10003b6f:	c9                   	leave  
10003b70:	c3                   	ret    
10003b71:	90                   	nop

10003b72 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)>:
10003b72:	55                   	push   ebp
10003b73:	89 e5                	mov    ebp,esp
10003b75:	83 ec 18             	sub    esp,0x18
10003b78:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10003b7f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003b82:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003b85:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10003b88:	83 ec 0c             	sub    esp,0xc
10003b8b:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003b8e:	e8 fc ff ff ff       	call   10003b8f <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x1d>	10003b8f: R_386_PC32	LinkedList2<NFrame*>::isEmpty()
10003b93:	83 c4 10             	add    esp,0x10
10003b96:	83 f0 01             	xor    eax,0x1
10003b99:	84 c0                	test   al,al
10003b9b:	74 0e                	je     10003bab <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x39>
10003b9d:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10003ba0:	8b 00                	mov    eax,DWORD PTR [eax]
10003ba2:	39 45 0c             	cmp    DWORD PTR [ebp+0xc],eax
10003ba5:	75 04                	jne    10003bab <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x39>
10003ba7:	b0 01                	mov    al,0x1
10003ba9:	eb 02                	jmp    10003bad <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x3b>
10003bab:	b0 00                	mov    al,0x0
10003bad:	84 c0                	test   al,al
10003baf:	74 30                	je     10003be1 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x6f>
10003bb1:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10003bb4:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10003bb7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10003bba:	8b 50 04             	mov    edx,DWORD PTR [eax+0x4]
10003bbd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003bc0:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
10003bc3:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10003bc6:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003bc9:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10003bcc:	83 ec 08             	sub    esp,0x8
10003bcf:	6a 08                	push   0x8
10003bd1:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
10003bd4:	e8 fc ff ff ff       	call   10003bd5 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x63>	10003bd5: R_386_PC32	operator delete(void*, unsigned long)
10003bd9:	83 c4 10             	add    esp,0x10
10003bdc:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10003bdf:	eb a7                	jmp    10003b88 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x16>
10003be1:	83 ec 0c             	sub    esp,0xc
10003be4:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003be7:	e8 fc ff ff ff       	call   10003be8 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x76>	10003be8: R_386_PC32	LinkedList2<NFrame*>::isEmpty()
10003bec:	83 c4 10             	add    esp,0x10
10003bef:	83 f0 01             	xor    eax,0x1
10003bf2:	84 c0                	test   al,al
10003bf4:	74 14                	je     10003c0a <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x98>
10003bf6:	83 7d f0 00          	cmp    DWORD PTR [ebp-0x10],0x0
10003bfa:	74 0e                	je     10003c0a <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x98>
10003bfc:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10003bff:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003c02:	85 c0                	test   eax,eax
10003c04:	74 04                	je     10003c0a <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x98>
10003c06:	b0 01                	mov    al,0x1
10003c08:	eb 02                	jmp    10003c0c <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x9a>
10003c0a:	b0 00                	mov    al,0x0
10003c0c:	84 c0                	test   al,al
10003c0e:	74 59                	je     10003c69 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0xf7>
10003c10:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10003c13:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003c16:	8b 00                	mov    eax,DWORD PTR [eax]
10003c18:	39 45 0c             	cmp    DWORD PTR [ebp+0xc],eax
10003c1b:	75 3e                	jne    10003c5b <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0xe9>
10003c1d:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10003c20:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003c23:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10003c26:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10003c29:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003c2c:	8b 50 04             	mov    edx,DWORD PTR [eax+0x4]
10003c2f:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10003c32:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
10003c35:	83 ec 08             	sub    esp,0x8
10003c38:	6a 08                	push   0x8
10003c3a:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
10003c3d:	e8 fc ff ff ff       	call   10003c3e <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0xcc>	10003c3e: R_386_PC32	operator delete(void*, unsigned long)
10003c42:	83 c4 10             	add    esp,0x10
10003c45:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10003c48:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003c4b:	85 c0                	test   eax,eax
10003c4d:	75 09                	jne    10003c58 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0xe6>
10003c4f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003c52:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
10003c55:	89 50 08             	mov    DWORD PTR [eax+0x8],edx
10003c58:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10003c5b:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10003c5e:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003c61:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10003c64:	e9 78 ff ff ff       	jmp    10003be1 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x6f>
10003c69:	83 ec 0c             	sub    esp,0xc
10003c6c:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003c6f:	e8 fc ff ff ff       	call   10003c70 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0xfe>	10003c70: R_386_PC32	LinkedList2<NFrame*>::isEmpty()
10003c74:	83 c4 10             	add    esp,0x10
10003c77:	84 c0                	test   al,al
10003c79:	74 0a                	je     10003c85 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x113>
10003c7b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003c7e:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
10003c85:	90                   	nop
10003c86:	c9                   	leave  
10003c87:	c3                   	ret    

10003c88 <_GLOBAL__sub_I_mouseX>:
10003c88:	83 ec 18             	sub    esp,0x18
10003c8b:	68 00 00 00 00       	push   0x0	10003c8c: R_386_32	tightMouseRegionOld
10003c90:	e8 fc ff ff ff       	call   10003c91 <_GLOBAL__sub_I_mouseX+0x9>	10003c91: R_386_PC32	Region::Region()
10003c95:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0	10003c98: R_386_32	tightMouseRegionNew
10003c9c:	e8 fc ff ff ff       	call   10003c9d <_GLOBAL__sub_I_mouseX+0x15>	10003c9d: R_386_PC32	Region::Region()
10003ca1:	83 c4 1c             	add    esp,0x1c
10003ca4:	c3                   	ret    
10003ca5:	90                   	nop

10003ca6 <Region::Region(int, int, int, int)>:
10003ca6:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10003caa:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10003cae:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
10003cb1:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10003cb5:	89 50 08             	mov    DWORD PTR [eax+0x8],edx
10003cb8:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003cbe:	c7 40 0c 00 00 00 00 	mov    DWORD PTR [eax+0xc],0x0
10003cc5:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10003cc9:	89 50 10             	mov    DWORD PTR [eax+0x10],edx
10003ccc:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10003cd0:	89 50 14             	mov    DWORD PTR [eax+0x14],edx
10003cd3:	c6 40 18 00          	mov    BYTE PTR [eax+0x18],0x0
10003cd7:	c3                   	ret    

10003cd8 <PHYS_RAM_TABLE_SIZE>:
10003cd8:	13 05 00 00                                         ....

10003cdc <PHYS_HIGHEST_UNUSED_ADDRESS>:
10003cdc:	24 05 00 00                                         $...

10003ce0 <PHYS_RAM_TABLE>:
10003ce0:	00 06 00 00                                         ....

10003ce4 <PHYS_DMA_MEMORY_1>:
10003ce4:	00 00 01 00                                         ....

10003ce8 <PHYS_PHYS_PAGE_BITMAP>:
10003ce8:	00 00 02 00                                         ....

10003cec <PHYS_VIRT_PAGE_BITMAP>:
10003cec:	00 00 04 00                                         ....

10003cf0 <PHYS_DMA_MEMORY_2>:
10003cf0:	00 00 06 00                                         ....

10003cf4 <PHYS_ALLOCED_VIRT_PAGES>:
10003cf4:	00 00 10 00                                         ....

10003cf8 <PHYS_KRNL_PAGE_DIRECTORY>:
10003cf8:	00 10 00 00                                         ....

10003cfc <VIRT_KERNEL_BASE>:
10003cfc:	00 00 00 c0                                         ....

10003d00 <VIRT_LOW_MEGS>:
10003d00:	00 00 00 c2                                         ....

10003d04 <VIRT_CPU_SPECIFIC>:
10003d04:	00 00 40 c2                                         ..@.

10003d08 <VIRT_RECURSIVE_SPOT_1>:
10003d08:	00 00 80 c2                                         ....

10003d0c <VIRT_RECURSIVE_SPOT_2>:
10003d0c:	00 00 c0 c2                                         ....

10003d10 <VIRT_DMA_MEMORY_1>:
10003d10:	00 00 01 c2                                         ....

10003d14 <SIZE_DMA_MEMORY_1>:
10003d14:	00 00 01 00                                         ....

10003d18 <VIRT_KRNL_PAGE_DIRECTORY>:
10003d18:	00 10 00 c2                                         ....

10003d1c <VIRT_PHYS_PAGE_BITMAP>:
10003d1c:	00 00 02 c2                                         ....

10003d20 <SIZE_PHYS_PAGE_BITMAP>:
10003d20:	00 00 02 00                                         ....

10003d24 <VIRT_VIRT_PAGE_BITMAP>:
10003d24:	00 00 04 c2                                         ....

10003d28 <SIZE_VIRT_PAGE_BITMAP>:
10003d28:	00 80 00 00                                         ....

10003d2c <VIRT_RAM_TABLE>:
10003d2c:	00 06 00 c2                                         ....

10003d30 <VIRT_RAM_TABLE_SIZE>:
10003d30:	13 05 00 c2                                         ....

10003d34 <VIRT_HIGHEST_UNUSED_ADDRESS>:
10003d34:	24 05 00 c2                                         $...

10003d38 <SIZE_APP_STACK_USER>:
10003d38:	00 00 18 00                                         ....

10003d3c <SIZE_APP_STACK_KRNL>:
10003d3c:	00 00 08 00                                         ....

10003d40 <SIZE_APP_STACK_TOTAL>:
10003d40:	00 00 20 00                                         .. .

10003d44 <VIRT_APP_DATA>:
10003d44:	00 00 00 10                                         ....

10003d48 <VIRT_APP_STACK_USER_TOP>:
10003d48:	00 00 00 02                                         ....

10003d4c <VIRT_APP_STACK_KRNL_TOP>:
10003d4c:	00 00 e8 01                                         ....

10003d50 <VIRT_HEAP_MIN>:
10003d50:	00 00 00 c8                                         ....

10003d54 <VIRT_HEAP_MAX>:
10003d54:	ff ff ff ef                                         ....

10003d58 <VIRT_SBRK_MIN>:
10003d58:	00 00 00 f0                                         ....

10003d5c <VIRT_SBRK_MAX>:
10003d5c:	00 00 c0 ff                                         ....

10003d60 <VIRT_ALLOCED_VIRT_PAGES>:
10003d60:	00 00 10 c2                                         ....

10003d64 <VIRT_ACPI_DRIVER>:
10003d64:	00 40 48 c2                                         .@H.

10003d68 <TERMINAL_KEYBUFFER_IN_SIZE>:
10003d68:	80 00 00 00                                         ....

10003d6c <TERMINAL_KEYBUFFER_OUT_SIZE>:
10003d6c:	80 00 00 00 58 00 20 53 54 4f 50 20 45 52 52 4f     ....X. STOP ERRO
10003d7c:	52 20 00 00 41 20 70 72 6f 62 6c 65 6d 20 68 61     R ..A problem ha
10003d8c:	73 20 6f 63 63 75 72 65 64 20 61 6e 64 20 42 61     s occured and Ba
10003d9c:	6e 61 6e 61 20 63 61 6e 6e 6f 74 20 63 6f 6e 74     nana cannot cont
10003dac:	69 6e 75 65 2e 00 43 6c 69 70 64 72 61 77 20 69     inue..Clipdraw i
10003dbc:	73 20 6e 6f 77 20 72 75 6e 6e 69 6e 67 2e 2e 2e     s now running...
10003dcc:	0a 00 55 6e 74 69 74 6c 65 64 20 57 69 6e 64 6f     ..Untitled Windo
10003ddc:	77 00 66 90                                         w.f.

10003de0 <vtable for NButton>:
	...
	10003de8: R_386_32	NButton::paintHandler(NFrame::Graphics)
	10003dec: R_386_32	NFrame::regenerateRegion()

10003df0 <vtable for NWindow>:
	...
	10003df8: R_386_32	NWindow::paintHandler(NFrame::Graphics)
	10003dfc: R_386_32	NFrame::regenerateRegion()

10003e00 <vtable for NFrame>:
	...
	10003e08: R_386_32	__cxa_pure_virtual
	10003e0c: R_386_32	NFrame::regenerateRegion()
10003e10:	61 62 6f 72 74 00 00 00 00 00 00 00 00 00 08 40     abort..........@
10003e20:	00 00 00 00 00 00 00 40                             .......@
