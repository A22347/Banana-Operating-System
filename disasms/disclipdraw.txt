
packages/banana/32/0001/clipdraw.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <NiBegin(void*)>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	83 ec 0c             	sub    esp,0xc
10000009:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000000c:	e8 fc ff ff ff       	call   1000000d <NiBegin(void*)+0xd>	1000000d: R_386_PC32	NiMain(void*)
10000011:	83 c4 10             	add    esp,0x10
10000014:	90                   	nop
10000015:	c9                   	leave  
10000016:	c3                   	ret    

10000017 <kernelMouseHandler(int, int, int, int)>:
10000017:	55                   	push   ebp
10000018:	89 e5                	mov    ebp,esp
1000001a:	83 ec 08             	sub    esp,0x8
1000001d:	a1 00 00 00 00       	mov    eax,ds:0x0	1000001e: R_386_32	screen
10000022:	83 ec 08             	sub    esp,0x8
10000025:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10000028:	6a 00                	push   0x0
1000002a:	6a 00                	push   0x0
1000002c:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000002f:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000032:	50                   	push   eax
10000033:	e8 fc ff ff ff       	call   10000034 <kernelMouseHandler(int, int, int, int)+0x1d>	10000034: R_386_PC32	handleMouse(Video*, int, int, int, int, int)
10000038:	83 c4 20             	add    esp,0x20
1000003b:	90                   	nop
1000003c:	c9                   	leave  
1000003d:	c3                   	ret    

1000003e <drawVGAChar(int, int, int, int, int)>:
1000003e:	55                   	push   ebp
1000003f:	89 e5                	mov    ebp,esp
10000041:	57                   	push   edi
10000042:	56                   	push   esi
10000043:	53                   	push   ebx
10000044:	83 ec 1c             	sub    esp,0x1c
10000047:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
1000004e:	83 7d e4 0f          	cmp    DWORD PTR [ebp-0x1c],0xf
10000052:	7f 76                	jg     100000ca <drawVGAChar(int, int, int, int, int)+0x8c>
10000054:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000057:	c1 e0 04             	shl    eax,0x4
1000005a:	89 c2                	mov    edx,eax
1000005c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000005f:	01 d0                	add    eax,edx
10000061:	8a 80 00 00 00 00    	mov    al,BYTE PTR [eax+0x0]	10000063: R_386_32	cp
10000067:	88 45 e3             	mov    BYTE PTR [ebp-0x1d],al
1000006a:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [ebp-0x24],0x0
10000071:	83 7d dc 07          	cmp    DWORD PTR [ebp-0x24],0x7
10000075:	7f 4e                	jg     100000c5 <drawVGAChar(int, int, int, int, int)+0x87>
10000077:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	10000079: R_386_32	screen
1000007d:	a1 00 00 00 00       	mov    eax,ds:0x0	1000007e: R_386_32	screen
10000082:	8b 00                	mov    eax,DWORD PTR [eax]
10000084:	83 c0 24             	add    eax,0x24
10000087:	8b 10                	mov    edx,DWORD PTR [eax]
10000089:	8a 45 e3             	mov    al,BYTE PTR [ebp-0x1d]
1000008c:	84 c0                	test   al,al
1000008e:	79 05                	jns    10000095 <drawVGAChar(int, int, int, int, int)+0x57>
10000090:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10000093:	eb 03                	jmp    10000098 <drawVGAChar(int, int, int, int, int)+0x5a>
10000095:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10000098:	8b 5d 0c             	mov    ebx,DWORD PTR [ebp+0xc]
1000009b:	89 de                	mov    esi,ebx
1000009d:	c1 e6 04             	shl    esi,0x4
100000a0:	8b 5d e4             	mov    ebx,DWORD PTR [ebp-0x1c]
100000a3:	01 de                	add    esi,ebx
100000a5:	8b 5d 08             	mov    ebx,DWORD PTR [ebp+0x8]
100000a8:	8d 3c dd 00 00 00 00 	lea    edi,[ebx*8+0x0]
100000af:	8b 5d dc             	mov    ebx,DWORD PTR [ebp-0x24]
100000b2:	01 fb                	add    ebx,edi
100000b4:	50                   	push   eax
100000b5:	56                   	push   esi
100000b6:	53                   	push   ebx
100000b7:	51                   	push   ecx
100000b8:	ff d2                	call   edx
100000ba:	83 c4 10             	add    esp,0x10
100000bd:	d0 65 e3             	shl    BYTE PTR [ebp-0x1d],1
100000c0:	ff 45 dc             	inc    DWORD PTR [ebp-0x24]
100000c3:	eb ac                	jmp    10000071 <drawVGAChar(int, int, int, int, int)+0x33>
100000c5:	ff 45 e4             	inc    DWORD PTR [ebp-0x1c]
100000c8:	eb 84                	jmp    1000004e <drawVGAChar(int, int, int, int, int)+0x10>
100000ca:	90                   	nop
100000cb:	8d 65 f4             	lea    esp,[ebp-0xc]
100000ce:	5b                   	pop    ebx
100000cf:	5e                   	pop    esi
100000d0:	5f                   	pop    edi
100000d1:	5d                   	pop    ebp
100000d2:	c3                   	ret    

100000d3 <kernelPanicHandler(char*)>:
100000d3:	55                   	push   ebp
100000d4:	89 e5                	mov    ebp,esp
100000d6:	83 ec 18             	sub    esp,0x18
100000d9:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100000db: R_386_32	screen
100000df:	a1 00 00 00 00       	mov    eax,ds:0x0	100000e0: R_386_32	screen
100000e4:	8b 00                	mov    eax,DWORD PTR [eax]
100000e6:	83 c0 40             	add    eax,0x40
100000e9:	8b 00                	mov    eax,DWORD PTR [eax]
100000eb:	83 ec 08             	sub    esp,0x8
100000ee:	68 80 00 00 00       	push   0x80
100000f3:	52                   	push   edx
100000f4:	ff d0                	call   eax
100000f6:	83 c4 10             	add    esp,0x10
100000f9:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000100:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000103:	05 ea 46 00 10       	add    eax,0x100046ea	10000104: R_386_32	.text
10000108:	8a 00                	mov    al,BYTE PTR [eax]
1000010a:	84 c0                	test   al,al
1000010c:	74 31                	je     1000013f <kernelPanicHandler(char*)+0x6c>
1000010e:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000111:	05 ea 46 00 10       	add    eax,0x100046ea	10000112: R_386_32	.text
10000116:	8a 00                	mov    al,BYTE PTR [eax]
10000118:	0f be c0             	movsx  eax,al
1000011b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
1000011e:	83 c2 06             	add    edx,0x6
10000121:	83 ec 0c             	sub    esp,0xc
10000124:	68 ff ff ff 00       	push   0xffffff
10000129:	68 80 00 00 00       	push   0x80
1000012e:	50                   	push   eax
1000012f:	6a 02                	push   0x2
10000131:	52                   	push   edx
10000132:	e8 fc ff ff ff       	call   10000133 <kernelPanicHandler(char*)+0x60>	10000133: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000137:	83 c4 20             	add    esp,0x20
1000013a:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000013d:	eb c1                	jmp    10000100 <kernelPanicHandler(char*)+0x2d>
1000013f:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10000146:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000149:	05 f8 46 00 10       	add    eax,0x100046f8	1000014a: R_386_32	.text
1000014e:	8a 00                	mov    al,BYTE PTR [eax]
10000150:	84 c0                	test   al,al
10000152:	74 31                	je     10000185 <kernelPanicHandler(char*)+0xb2>
10000154:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000157:	05 f8 46 00 10       	add    eax,0x100046f8	10000158: R_386_32	.text
1000015c:	8a 00                	mov    al,BYTE PTR [eax]
1000015e:	0f be c0             	movsx  eax,al
10000161:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
10000164:	83 c2 06             	add    edx,0x6
10000167:	83 ec 0c             	sub    esp,0xc
1000016a:	68 80 00 00 00       	push   0x80
1000016f:	68 ff ff ff 00       	push   0xffffff
10000174:	50                   	push   eax
10000175:	6a 04                	push   0x4
10000177:	52                   	push   edx
10000178:	e8 fc ff ff ff       	call   10000179 <kernelPanicHandler(char*)+0xa6>	10000179: R_386_PC32	drawVGAChar(int, int, int, int, int)
1000017d:	83 c4 20             	add    esp,0x20
10000180:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
10000183:	eb c1                	jmp    10000146 <kernelPanicHandler(char*)+0x73>
10000185:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [ebp-0x14],0x0
1000018c:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
1000018f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000192:	01 d0                	add    eax,edx
10000194:	8a 00                	mov    al,BYTE PTR [eax]
10000196:	84 c0                	test   al,al
10000198:	74 31                	je     100001cb <kernelPanicHandler(char*)+0xf8>
1000019a:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
1000019d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100001a0:	01 d0                	add    eax,edx
100001a2:	8a 00                	mov    al,BYTE PTR [eax]
100001a4:	0f be c0             	movsx  eax,al
100001a7:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
100001aa:	83 c2 0a             	add    edx,0xa
100001ad:	83 ec 0c             	sub    esp,0xc
100001b0:	68 80 00 00 00       	push   0x80
100001b5:	68 ff ff ff 00       	push   0xffffff
100001ba:	50                   	push   eax
100001bb:	6a 06                	push   0x6
100001bd:	52                   	push   edx
100001be:	e8 fc ff ff ff       	call   100001bf <kernelPanicHandler(char*)+0xec>	100001bf: R_386_PC32	drawVGAChar(int, int, int, int, int)
100001c3:	83 c4 20             	add    esp,0x20
100001c6:	ff 45 ec             	inc    DWORD PTR [ebp-0x14]
100001c9:	eb c1                	jmp    1000018c <kernelPanicHandler(char*)+0xb9>
100001cb:	f4                   	hlt    
100001cc:	eb fd                	jmp    100001cb <kernelPanicHandler(char*)+0xf8>

100001ce <NiMain(void*)>:
100001ce:	55                   	push   ebp
100001cf:	89 e5                	mov    ebp,esp
100001d1:	57                   	push   edi
100001d2:	56                   	push   esi
100001d3:	53                   	push   ebx
100001d4:	83 ec 4c             	sub    esp,0x4c
100001d7:	83 ec 0c             	sub    esp,0xc
100001da:	68 2a 47 00 10       	push   0x1000472a	100001db: R_386_32	.text
100001df:	e8 fc ff ff ff       	call   100001e0 <NiMain(void*)+0x12>	100001e0: R_386_PC32	Dbg::kprintf(char const*, ...)
100001e4:	83 c4 10             	add    esp,0x10
100001e7:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100001e9: R_386_32	guiPanicHandler
	100001ed: R_386_32	kernelPanicHandler(char*)
100001f1:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100001f3: R_386_32	screen
100001f7:	a1 00 00 00 00       	mov    eax,ds:0x0	100001f8: R_386_32	screen
100001fc:	8b 00                	mov    eax,DWORD PTR [eax]
100001fe:	83 c0 40             	add    eax,0x40
10000201:	8b 00                	mov    eax,DWORD PTR [eax]
10000203:	83 ec 08             	sub    esp,0x8
10000206:	68 80 80 00 00       	push   0x8080
1000020b:	52                   	push   edx
1000020c:	ff d0                	call   eax
1000020e:	83 c4 10             	add    esp,0x10
10000211:	c7 05 00 00 00 00 32 00 00 00 	mov    DWORD PTR ds:0x0,0x32	10000213: R_386_32	mouseX
1000021b:	c7 05 00 00 00 00 32 00 00 00 	mov    DWORD PTR ds:0x0,0x32	1000021d: R_386_32	mouseY
10000225:	e8 fc ff ff ff       	call   10000226 <NiMain(void*)+0x58>	10000226: R_386_PC32	initFonts()
1000022a:	83 ec 08             	sub    esp,0x8
1000022d:	6a 0c                	push   0xc
1000022f:	68 46 47 00 10       	push   0x10004746	10000230: R_386_32	.text
10000234:	e8 fc ff ff ff       	call   10000235 <NiMain(void*)+0x67>	10000235: R_386_PC32	getFontHandle(char*, int)
10000239:	83 c4 10             	add    esp,0x10
1000023c:	a3 00 00 00 00       	mov    ds:0x0,eax	1000023d: R_386_32	SYSTEM_FONT_HANDLE
10000241:	c7 45 d4 90 00 00 00 	mov    DWORD PTR [ebp-0x2c],0x90
10000248:	83 ec 0c             	sub    esp,0xc
1000024b:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
1000024e:	e8 fc ff ff ff       	call   1000024f <NiMain(void*)+0x81>	1000024f: R_386_PC32	malloc
10000253:	83 c4 10             	add    esp,0x10
10000256:	89 c3                	mov    ebx,eax
10000258:	83 ec 04             	sub    esp,0x4
1000025b:	6a 00                	push   0x0
1000025d:	68 4e 47 00 10       	push   0x1000474e	1000025e: R_386_32	.text
10000262:	68 5e 01 00 00       	push   0x15e
10000267:	68 5e 01 00 00       	push   0x15e
1000026c:	6a 32                	push   0x32
1000026e:	6a 50                	push   0x50
10000270:	53                   	push   ebx
10000271:	e8 fc ff ff ff       	call   10000272 <NiMain(void*)+0xa4>	10000272: R_386_PC32	NWindow::NWindow(int, int, int, int, char const*, int)
10000276:	83 c4 20             	add    esp,0x20
10000279:	89 5d e4             	mov    DWORD PTR [ebp-0x1c],ebx
1000027c:	c7 45 d8 90 00 00 00 	mov    DWORD PTR [ebp-0x28],0x90
10000283:	83 ec 0c             	sub    esp,0xc
10000286:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000289:	e8 fc ff ff ff       	call   1000028a <NiMain(void*)+0xbc>	1000028a: R_386_PC32	malloc
1000028e:	83 c4 10             	add    esp,0x10
10000291:	89 c3                	mov    ebx,eax
10000293:	83 ec 04             	sub    esp,0x4
10000296:	6a 00                	push   0x0
10000298:	68 4e 47 00 10       	push   0x1000474e	10000299: R_386_32	.text
1000029d:	68 c2 01 00 00       	push   0x1c2
100002a2:	68 c2 01 00 00       	push   0x1c2
100002a7:	6a 58                	push   0x58
100002a9:	68 b4 00 00 00       	push   0xb4
100002ae:	53                   	push   ebx
100002af:	e8 fc ff ff ff       	call   100002b0 <NiMain(void*)+0xe2>	100002b0: R_386_PC32	NWindow::NWindow(int, int, int, int, char const*, int)
100002b4:	83 c4 20             	add    esp,0x20
100002b7:	89 5d e0             	mov    DWORD PTR [ebp-0x20],ebx
100002ba:	a1 00 00 00 00       	mov    eax,ds:0x0	100002bb: R_386_32	screen
100002bf:	83 ec 0c             	sub    esp,0xc
100002c2:	50                   	push   eax
100002c3:	e8 fc ff ff ff       	call   100002c4 <NiMain(void*)+0xf6>	100002c4: R_386_PC32	Video::getWidth()
100002c8:	83 c4 10             	add    esp,0x10
100002cb:	89 c6                	mov    esi,eax
100002cd:	a1 00 00 00 00       	mov    eax,ds:0x0	100002ce: R_386_32	screen
100002d2:	83 ec 0c             	sub    esp,0xc
100002d5:	50                   	push   eax
100002d6:	e8 fc ff ff ff       	call   100002d7 <NiMain(void*)+0x109>	100002d7: R_386_PC32	Video::getHeight()
100002db:	83 c4 10             	add    esp,0x10
100002de:	89 c7                	mov    edi,eax
100002e0:	c7 45 dc 90 00 00 00 	mov    DWORD PTR [ebp-0x24],0x90
100002e7:	83 ec 0c             	sub    esp,0xc
100002ea:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
100002ed:	e8 fc ff ff ff       	call   100002ee <NiMain(void*)+0x120>	100002ee: R_386_PC32	malloc
100002f2:	83 c4 10             	add    esp,0x10
100002f5:	89 c3                	mov    ebx,eax
100002f7:	83 ec 04             	sub    esp,0x4
100002fa:	68 80 80 00 00       	push   0x8080
100002ff:	68 80 80 00 00       	push   0x8080
10000304:	57                   	push   edi
10000305:	56                   	push   esi
10000306:	6a 00                	push   0x0
10000308:	6a 00                	push   0x0
1000030a:	53                   	push   ebx
1000030b:	e8 fc ff ff ff       	call   1000030c <NiMain(void*)+0x13e>	1000030c: R_386_PC32	NButton::NButton(int, int, int, int, int, int)
10000310:	83 c4 20             	add    esp,0x20
10000313:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	10000315: R_386_32	desktopWindow
10000319:	a1 00 00 00 00       	mov    eax,ds:0x0	1000031a: R_386_32	desktopWindow
1000031e:	83 ec 08             	sub    esp,0x8
10000321:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10000324:	50                   	push   eax
10000325:	e8 fc ff ff ff       	call   10000326 <NiMain(void*)+0x158>	10000326: R_386_PC32	NFrame::addChild(NFrame*)
1000032a:	83 c4 10             	add    esp,0x10
1000032d:	a1 00 00 00 00       	mov    eax,ds:0x0	1000032e: R_386_32	desktopWindow
10000332:	83 ec 08             	sub    esp,0x8
10000335:	ff 75 e0             	push   DWORD PTR [ebp-0x20]
10000338:	50                   	push   eax
10000339:	e8 fc ff ff ff       	call   1000033a <NiMain(void*)+0x16c>	1000033a: R_386_PC32	NFrame::addChild(NFrame*)
1000033e:	83 c4 10             	add    esp,0x10
10000341:	a1 00 00 00 00       	mov    eax,ds:0x0	10000342: R_386_32	screen
10000346:	83 ec 0c             	sub    esp,0xc
10000349:	50                   	push   eax
1000034a:	e8 fc ff ff ff       	call   1000034b <NiMain(void*)+0x17d>	1000034b: R_386_PC32	mouseInit(Video*)
1000034f:	83 c4 10             	add    esp,0x10
10000352:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000354: R_386_32	guiMouseHandler
	10000358: R_386_32	kernelMouseHandler(int, int, int, int)
1000035c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000035d: R_386_32	screen
10000361:	83 ec 0c             	sub    esp,0xc
10000364:	50                   	push   eax
10000365:	e8 fc ff ff ff       	call   10000366 <NiMain(void*)+0x198>	10000366: R_386_PC32	Video::getWidth()
1000036a:	83 c4 10             	add    esp,0x10
1000036d:	8d 50 01             	lea    edx,[eax+0x1]
10000370:	8d 45 b8             	lea    eax,[ebp-0x48]
10000373:	83 ec 0c             	sub    esp,0xc
10000376:	6a 01                	push   0x1
10000378:	6a 01                	push   0x1
1000037a:	6a 01                	push   0x1
1000037c:	52                   	push   edx
1000037d:	50                   	push   eax
1000037e:	e8 fc ff ff ff       	call   1000037f <NiMain(void*)+0x1b1>	1000037f: R_386_PC32	createRectangleRegion(int, int, int, int)
10000383:	83 c4 1c             	add    esp,0x1c
10000386:	a1 00 00 00 00       	mov    eax,ds:0x0	10000387: R_386_32	desktopWindow
1000038b:	83 ec 0c             	sub    esp,0xc
1000038e:	50                   	push   eax
1000038f:	e8 fc ff ff ff       	call   10000390 <NiMain(void*)+0x1c2>	10000390: R_386_PC32	NFrame::tryInvalidate()
10000394:	83 c4 10             	add    esp,0x10
10000397:	a1 00 00 00 00       	mov    eax,ds:0x0	10000398: R_386_32	desktopWindow
1000039c:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
1000039f:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	100003a1: R_386_32	screen
100003a5:	89 4d b0             	mov    DWORD PTR [ebp-0x50],ecx
100003a8:	83 ec 0c             	sub    esp,0xc
100003ab:	83 ec 1c             	sub    esp,0x1c
100003ae:	89 e0                	mov    eax,esp
100003b0:	89 c3                	mov    ebx,eax
100003b2:	8d 45 b8             	lea    eax,[ebp-0x48]
100003b5:	ba 07 00 00 00       	mov    edx,0x7
100003ba:	89 df                	mov    edi,ebx
100003bc:	89 c6                	mov    esi,eax
100003be:	89 d1                	mov    ecx,edx
100003c0:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100003c2:	ff 75 b0             	push   DWORD PTR [ebp-0x50]
100003c5:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
100003c8:	e8 fc ff ff ff       	call   100003c9 <NiMain(void*)+0x1fb>	100003c9: R_386_PC32	NFrame::repaint(Video*, Region)
100003cd:	83 c4 30             	add    esp,0x30
100003d0:	83 ec 0c             	sub    esp,0xc
100003d3:	6a 02                	push   0x2
100003d5:	e8 fc ff ff ff       	call   100003d6 <NiMain(void*)+0x208>	100003d6: R_386_PC32	blockTask(TaskState)
100003da:	83 c4 10             	add    esp,0x10
100003dd:	eb f1                	jmp    100003d0 <NiMain(void*)+0x202>

100003df <lookupInFontTable(char*, int)>:
100003df:	55                   	push   ebp
100003e0:	89 e5                	mov    ebp,esp
100003e2:	83 ec 18             	sub    esp,0x18
100003e5:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
100003ec:	a1 00 00 00 00       	mov    eax,ds:0x0	100003ed: R_386_32	fontTable
100003f1:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
100003f4:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
100003f7:	83 7d f0 00          	cmp    DWORD PTR [ebp-0x10],0x0
100003fb:	74 48                	je     10000445 <lookupInFontTable(char*, int)+0x66>
100003fd:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000400:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000403:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000406:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10000409:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
1000040c:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
1000040f:	8b 00                	mov    eax,DWORD PTR [eax]
10000411:	85 c0                	test   eax,eax
10000413:	74 2f                	je     10000444 <lookupInFontTable(char*, int)+0x65>
10000415:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000418:	8b 00                	mov    eax,DWORD PTR [eax]
1000041a:	8b 40 40             	mov    eax,DWORD PTR [eax+0x40]
1000041d:	39 45 0c             	cmp    DWORD PTR [ebp+0xc],eax
10000420:	75 1d                	jne    1000043f <lookupInFontTable(char*, int)+0x60>
10000422:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000425:	8b 00                	mov    eax,DWORD PTR [eax]
10000427:	83 ec 08             	sub    esp,0x8
1000042a:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000042d:	50                   	push   eax
1000042e:	e8 fc ff ff ff       	call   1000042f <lookupInFontTable(char*, int)+0x50>	1000042f: R_386_PC32	strcmp
10000433:	83 c4 10             	add    esp,0x10
10000436:	85 c0                	test   eax,eax
10000438:	75 05                	jne    1000043f <lookupInFontTable(char*, int)+0x60>
1000043a:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000043d:	eb 0b                	jmp    1000044a <lookupInFontTable(char*, int)+0x6b>
1000043f:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10000442:	eb b3                	jmp    100003f7 <lookupInFontTable(char*, int)+0x18>
10000444:	90                   	nop
10000445:	b8 ff ff ff ff       	mov    eax,0xffffffff
1000044a:	c9                   	leave  
1000044b:	c3                   	ret    

1000044c <getFontHandle(char*, int)>:
1000044c:	55                   	push   ebp
1000044d:	89 e5                	mov    ebp,esp
1000044f:	57                   	push   edi
10000450:	56                   	push   esi
10000451:	53                   	push   ebx
10000452:	83 ec 2c             	sub    esp,0x2c
10000455:	a1 00 00 00 00       	mov    eax,ds:0x0	10000456: R_386_32	fontTable
1000045a:	85 c0                	test   eax,eax
1000045c:	75 29                	jne    10000487 <getFontHandle(char*, int)+0x3b>
1000045e:	c7 45 d8 0c 00 00 00 	mov    DWORD PTR [ebp-0x28],0xc
10000465:	83 ec 0c             	sub    esp,0xc
10000468:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
1000046b:	e8 fc ff ff ff       	call   1000046c <getFontHandle(char*, int)+0x20>	1000046c: R_386_PC32	malloc
10000470:	83 c4 10             	add    esp,0x10
10000473:	89 c3                	mov    ebx,eax
10000475:	83 ec 0c             	sub    esp,0xc
10000478:	53                   	push   ebx
10000479:	e8 fc ff ff ff       	call   1000047a <getFontHandle(char*, int)+0x2e>	1000047a: R_386_PC32	LinkedList2<Font*>::LinkedList2()
1000047e:	83 c4 10             	add    esp,0x10
10000481:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	10000483: R_386_32	fontTable
10000487:	83 ec 08             	sub    esp,0x8
1000048a:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000048d:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000490:	e8 fc ff ff ff       	call   10000491 <getFontHandle(char*, int)+0x45>	10000491: R_386_PC32	lookupInFontTable(char*, int)
10000495:	83 c4 10             	add    esp,0x10
10000498:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
1000049b:	83 7d e0 ff          	cmp    DWORD PTR [ebp-0x20],0xffffffff
1000049f:	74 08                	je     100004a9 <getFontHandle(char*, int)+0x5d>
100004a1:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100004a4:	e9 af 00 00 00       	jmp    10000558 <getFontHandle(char*, int)+0x10c>
100004a9:	c7 45 d4 4c 06 00 00 	mov    DWORD PTR [ebp-0x2c],0x64c
100004b0:	83 ec 0c             	sub    esp,0xc
100004b3:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
100004b6:	e8 fc ff ff ff       	call   100004b7 <getFontHandle(char*, int)+0x6b>	100004b7: R_386_PC32	malloc
100004bb:	83 c4 10             	add    esp,0x10
100004be:	89 c6                	mov    esi,eax
100004c0:	89 f3                	mov    ebx,esi
100004c2:	ba 93 01 00 00       	mov    edx,0x193
100004c7:	b8 00 00 00 00       	mov    eax,0x0
100004cc:	89 df                	mov    edi,ebx
100004ce:	89 d1                	mov    ecx,edx
100004d0:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100004d2:	89 75 dc             	mov    DWORD PTR [ebp-0x24],esi
100004d5:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
100004d8:	83 ec 08             	sub    esp,0x8
100004db:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100004de:	50                   	push   eax
100004df:	e8 fc ff ff ff       	call   100004e0 <getFontHandle(char*, int)+0x94>	100004e0: R_386_PC32	strcpy
100004e4:	83 c4 10             	add    esp,0x10
100004e7:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
100004ea:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
100004ed:	89 50 40             	mov    DWORD PTR [eax+0x40],edx
100004f0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100004f3:	c6 00 2a             	mov    BYTE PTR [eax],0x2a
100004f6:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
100004f9:	c6 40 44 01          	mov    BYTE PTR [eax+0x44],0x1
100004fd:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000500:	c7 40 48 00 00 00 00 	mov    DWORD PTR [eax+0x48],0x0
10000507:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
1000050e:	83 7d e4 7f          	cmp    DWORD PTR [ebp-0x1c],0x7f
10000512:	7f 19                	jg     1000052d <getFontHandle(char*, int)+0xe1>
10000514:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000517:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
1000051a:	81 c2 10 01 00 00    	add    edx,0x110
10000520:	c7 44 90 0c 00 00 00 00 	mov    DWORD PTR [eax+edx*4+0xc],0x0
10000528:	ff 45 e4             	inc    DWORD PTR [ebp-0x1c]
1000052b:	eb e1                	jmp    1000050e <getFontHandle(char*, int)+0xc2>
1000052d:	a1 00 00 00 00       	mov    eax,ds:0x0	1000052e: R_386_32	fontTable
10000532:	83 ec 0c             	sub    esp,0xc
10000535:	50                   	push   eax
10000536:	e8 fc ff ff ff       	call   10000537 <getFontHandle(char*, int)+0xeb>	10000537: R_386_PC32	LinkedList2<Font*>::length()
1000053b:	83 c4 10             	add    esp,0x10
1000053e:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10000541:	a1 00 00 00 00       	mov    eax,ds:0x0	10000542: R_386_32	fontTable
10000546:	83 ec 08             	sub    esp,0x8
10000549:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
1000054c:	50                   	push   eax
1000054d:	e8 fc ff ff ff       	call   1000054e <getFontHandle(char*, int)+0x102>	1000054e: R_386_PC32	LinkedList2<Font*>::appendNode(Font*)
10000552:	83 c4 10             	add    esp,0x10
10000555:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10000558:	8d 65 f4             	lea    esp,[ebp-0xc]
1000055b:	5b                   	pop    ebx
1000055c:	5e                   	pop    esi
1000055d:	5f                   	pop    edi
1000055e:	5d                   	pop    ebp
1000055f:	c3                   	ret    

10000560 <getFontFromHandle(int)>:
10000560:	55                   	push   ebp
10000561:	89 e5                	mov    ebp,esp
10000563:	83 ec 10             	sub    esp,0x10
10000566:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [ebp-0x4],0x0
1000056d:	a1 00 00 00 00       	mov    eax,ds:0x0	1000056e: R_386_32	fontTable
10000572:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10000575:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
10000578:	83 7d f8 00          	cmp    DWORD PTR [ebp-0x8],0x0
1000057c:	74 23                	je     100005a1 <getFontFromHandle(int)+0x41>
1000057e:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10000581:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10000584:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10000587:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
1000058a:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000058d:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000590:	3b 45 08             	cmp    eax,DWORD PTR [ebp+0x8]
10000593:	75 07                	jne    1000059c <getFontFromHandle(int)+0x3c>
10000595:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000598:	8b 00                	mov    eax,DWORD PTR [eax]
1000059a:	eb 0a                	jmp    100005a6 <getFontFromHandle(int)+0x46>
1000059c:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
1000059f:	eb d7                	jmp    10000578 <getFontFromHandle(int)+0x18>
100005a1:	b8 00 00 00 00       	mov    eax,0x0
100005a6:	c9                   	leave  
100005a7:	c3                   	ret    

100005a8 <getFontRegion(int, int, bool*, int*, int*)>:
100005a8:	55                   	push   ebp
100005a9:	89 e5                	mov    ebp,esp
100005ab:	57                   	push   edi
100005ac:	56                   	push   esi
100005ad:	53                   	push   ebx
100005ae:	83 ec 5c             	sub    esp,0x5c
100005b1:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100005b4:	e8 fc ff ff ff       	call   100005b5 <getFontRegion(int, int, bool*, int*, int*)+0xd>	100005b5: R_386_PC32	getFontFromHandle(int)
100005b9:	83 c4 04             	add    esp,0x4
100005bc:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
100005bf:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100005c2:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
100005c5:	81 c2 10 01 00 00    	add    edx,0x110
100005cb:	8b 44 90 0c          	mov    eax,DWORD PTR [eax+edx*4+0xc]
100005cf:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
100005d2:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
100005d5:	c6 00 00             	mov    BYTE PTR [eax],0x0
100005d8:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
100005dc:	74 41                	je     1000061f <getFontRegion(int, int, bool*, int*, int*)+0x77>
100005de:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100005e1:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
100005e4:	83 c2 10             	add    edx,0x10
100005e7:	8b 54 90 0c          	mov    edx,DWORD PTR [eax+edx*4+0xc]
100005eb:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100005ee:	89 10                	mov    DWORD PTR [eax],edx
100005f0:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100005f3:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
100005f6:	81 c2 90 00 00 00    	add    edx,0x90
100005fc:	8b 54 90 0c          	mov    edx,DWORD PTR [eax+edx*4+0xc]
10000600:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10000603:	89 10                	mov    DWORD PTR [eax],edx
10000605:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10000608:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000060b:	89 c3                	mov    ebx,eax
1000060d:	b8 07 00 00 00       	mov    eax,0x7
10000612:	89 d7                	mov    edi,edx
10000614:	89 de                	mov    esi,ebx
10000616:	89 c1                	mov    ecx,eax
10000618:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000061a:	e9 06 01 00 00       	jmp    10000725 <getFontRegion(int, int, bool*, int*, int*)+0x17d>
1000061f:	83 ec 0c             	sub    esp,0xc
10000622:	8d 45 a4             	lea    eax,[ebp-0x5c]
10000625:	50                   	push   eax
10000626:	e8 fc ff ff ff       	call   10000627 <getFontRegion(int, int, bool*, int*, int*)+0x7f>	10000627: R_386_PC32	Region::Region()
1000062b:	83 c4 10             	add    esp,0x10
1000062e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000631:	8a 40 44             	mov    al,BYTE PTR [eax+0x44]
10000634:	84 c0                	test   al,al
10000636:	74 32                	je     1000066a <getFontRegion(int, int, bool*, int*, int*)+0xc2>
10000638:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000063b:	8b 50 48             	mov    edx,DWORD PTR [eax+0x48]
1000063e:	8d 45 c0             	lea    eax,[ebp-0x40]
10000641:	83 ec 0c             	sub    esp,0xc
10000644:	ff 75 1c             	push   DWORD PTR [ebp+0x1c]
10000647:	ff 75 18             	push   DWORD PTR [ebp+0x18]
1000064a:	ff 75 10             	push   DWORD PTR [ebp+0x10]
1000064d:	52                   	push   edx
1000064e:	50                   	push   eax
1000064f:	e8 fc ff ff ff       	call   10000650 <getFontRegion(int, int, bool*, int*, int*)+0xa8>	10000650: R_386_PC32	getLegacyFontRegion(int, int, int*, int*)
10000654:	83 c4 1c             	add    esp,0x1c
10000657:	8d 45 a4             	lea    eax,[ebp-0x5c]
1000065a:	8d 55 c0             	lea    edx,[ebp-0x40]
1000065d:	b9 19 00 00 00       	mov    ecx,0x19
10000662:	89 c7                	mov    edi,eax
10000664:	89 d6                	mov    esi,edx
10000666:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000668:	eb 10                	jmp    1000067a <getFontRegion(int, int, bool*, int*, int*)+0xd2>
1000066a:	83 ec 0c             	sub    esp,0xc
1000066d:	68 9c 47 00 10       	push   0x1000479c	1000066e: R_386_32	.text
10000672:	e8 fc ff ff ff       	call   10000673 <getFontRegion(int, int, bool*, int*, int*)+0xcb>	10000673: R_386_PC32	KePanic(char const*)
10000677:	83 c4 10             	add    esp,0x10
1000067a:	83 7d 10 7f          	cmp    DWORD PTR [ebp+0x10],0x7f
1000067e:	0f 8f 86 00 00 00    	jg     1000070a <getFontRegion(int, int, bool*, int*, int*)+0x162>
10000684:	c7 45 dc 1c 00 00 00 	mov    DWORD PTR [ebp-0x24],0x1c
1000068b:	83 ec 0c             	sub    esp,0xc
1000068e:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
10000691:	e8 fc ff ff ff       	call   10000692 <getFontRegion(int, int, bool*, int*, int*)+0xea>	10000692: R_386_PC32	malloc
10000696:	83 c4 10             	add    esp,0x10
10000699:	89 c3                	mov    ebx,eax
1000069b:	83 ec 0c             	sub    esp,0xc
1000069e:	6a 00                	push   0x0
100006a0:	6a 00                	push   0x0
100006a2:	6a 00                	push   0x0
100006a4:	6a 00                	push   0x0
100006a6:	53                   	push   ebx
100006a7:	e8 fc ff ff ff       	call   100006a8 <getFontRegion(int, int, bool*, int*, int*)+0x100>	100006a8: R_386_PC32	Region::Region(int, int, int, int)
100006ac:	83 c4 20             	add    esp,0x20
100006af:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100006b2:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
100006b5:	81 c2 10 01 00 00    	add    edx,0x110
100006bb:	89 5c 90 0c          	mov    DWORD PTR [eax+edx*4+0xc],ebx
100006bf:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100006c2:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
100006c5:	81 c2 10 01 00 00    	add    edx,0x110
100006cb:	8b 44 90 0c          	mov    eax,DWORD PTR [eax+edx*4+0xc]
100006cf:	89 c3                	mov    ebx,eax
100006d1:	8d 45 a4             	lea    eax,[ebp-0x5c]
100006d4:	ba 19 00 00 00       	mov    edx,0x19
100006d9:	89 df                	mov    edi,ebx
100006db:	89 c6                	mov    esi,eax
100006dd:	89 d1                	mov    ecx,edx
100006df:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100006e1:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
100006e4:	8b 10                	mov    edx,DWORD PTR [eax]
100006e6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100006e9:	8b 4d 10             	mov    ecx,DWORD PTR [ebp+0x10]
100006ec:	83 c1 10             	add    ecx,0x10
100006ef:	89 54 88 0c          	mov    DWORD PTR [eax+ecx*4+0xc],edx
100006f3:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
100006f6:	8b 10                	mov    edx,DWORD PTR [eax]
100006f8:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100006fb:	8b 4d 10             	mov    ecx,DWORD PTR [ebp+0x10]
100006fe:	81 c1 90 00 00 00    	add    ecx,0x90
10000704:	89 54 88 0c          	mov    DWORD PTR [eax+ecx*4+0xc],edx
10000708:	eb 06                	jmp    10000710 <getFontRegion(int, int, bool*, int*, int*)+0x168>
1000070a:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000070d:	c6 00 01             	mov    BYTE PTR [eax],0x1
10000710:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000713:	89 c3                	mov    ebx,eax
10000715:	8d 45 a4             	lea    eax,[ebp-0x5c]
10000718:	ba 07 00 00 00       	mov    edx,0x7
1000071d:	89 df                	mov    edi,ebx
1000071f:	89 c6                	mov    esi,eax
10000721:	89 d1                	mov    ecx,edx
10000723:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10000725:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000728:	8d 65 f4             	lea    esp,[ebp-0xc]
1000072b:	5b                   	pop    ebx
1000072c:	5e                   	pop    esi
1000072d:	5f                   	pop    edi
1000072e:	5d                   	pop    ebp
1000072f:	c2 04 00             	ret    0x4

10000732 <initFonts()>:
10000732:	55                   	push   ebp
10000733:	89 e5                	mov    ebp,esp
10000735:	83 ec 08             	sub    esp,0x8
10000738:	e8 fc ff ff ff       	call   10000739 <initFonts()+0x7>	10000739: R_386_PC32	loadLegacyFonts()
1000073d:	90                   	nop
1000073e:	c9                   	leave  
1000073f:	c3                   	ret    

10000740 <reverse(unsigned char)>:
10000740:	8a 44 24 04          	mov    al,BYTE PTR [esp+0x4]
10000744:	c0 c0 04             	rol    al,0x4
10000747:	0f b6 c0             	movzx  eax,al
1000074a:	89 c2                	mov    edx,eax
1000074c:	c1 e0 02             	shl    eax,0x2
1000074f:	c1 fa 02             	sar    edx,0x2
10000752:	83 e0 cc             	and    eax,0xffffffcc
10000755:	83 e2 33             	and    edx,0x33
10000758:	09 c2                	or     edx,eax
1000075a:	0f b6 d2             	movzx  edx,dl
1000075d:	89 d0                	mov    eax,edx
1000075f:	01 d2                	add    edx,edx
10000761:	d1 f8                	sar    eax,1
10000763:	83 e2 aa             	and    edx,0xffffffaa
10000766:	83 e0 55             	and    eax,0x55
10000769:	09 d0                	or     eax,edx
1000076b:	c3                   	ret    

1000076c <loadLegacyFonts()>:
1000076c:	57                   	push   edi
1000076d:	b9 10 10 00 00       	mov    ecx,0x1010
10000772:	56                   	push   esi
10000773:	bf 00 00 00 00       	mov    edi,0x0	10000774: R_386_32	FONT
10000778:	53                   	push   ebx
10000779:	be 00 00 00 00       	mov    esi,0x0	1000077a: R_386_32	systemFontBuiltin
1000077e:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000780:	b9 00 02 00 00       	mov    ecx,0x200
10000785:	0f be 81 10 00 00 00 	movsx  eax,BYTE PTR [ecx+0x10]	10000788: R_386_32	FONT
1000078c:	8a 91 1f 00 00 00    	mov    dl,BYTE PTR [ecx+0x1f]	1000078e: R_386_32	FONT
10000792:	6b f0 1c             	imul   esi,eax,0x1c
10000795:	88 90 00 00 00 00    	mov    BYTE PTR [eax+0x0],dl	10000797: R_386_32	FontWidths
1000079b:	31 db                	xor    ebx,ebx
1000079d:	0f b6 84 19 11 00 00 00 	movzx  eax,BYTE PTR [ecx+ebx*1+0x11]	100007a1: R_386_32	FONT
100007a5:	50                   	push   eax
100007a6:	e8 fc ff ff ff       	call   100007a7 <loadLegacyFonts()+0x3b>	100007a7: R_386_PC32	reverse(unsigned char)
100007ab:	5a                   	pop    edx
100007ac:	0f b6 c0             	movzx  eax,al
100007af:	66 89 84 5e 00 00 00 00 	mov    WORD PTR [esi+ebx*2+0x0],ax	100007b3: R_386_32	Fonts
100007b7:	43                   	inc    ebx
100007b8:	83 fb 0e             	cmp    ebx,0xe
100007bb:	75 e0                	jne    1000079d <loadLegacyFonts()+0x31>
100007bd:	83 c1 10             	add    ecx,0x10
100007c0:	81 f9 00 08 00 00    	cmp    ecx,0x800
100007c6:	75 bd                	jne    10000785 <loadLegacyFonts()+0x19>
100007c8:	5b                   	pop    ebx
100007c9:	5e                   	pop    esi
100007ca:	5f                   	pop    edi
100007cb:	c3                   	ret    

100007cc <getLegacyFontRegion(int, int, int*, int*)>:
100007cc:	55                   	push   ebp
100007cd:	31 d2                	xor    edx,edx
100007cf:	57                   	push   edi
100007d0:	56                   	push   esi
100007d1:	53                   	push   ebx
100007d2:	81 ec 8c 00 00 00    	sub    esp,0x8c
100007d8:	8b bc 24 a8 00 00 00 	mov    edi,DWORD PTR [esp+0xa8]
100007df:	69 b4 24 a4 00 00 00 e4 1b 00 00 	imul   esi,DWORD PTR [esp+0xa4],0x1be4
100007ea:	6b c7 1c             	imul   eax,edi,0x1c
100007ed:	8d 5c 24 10          	lea    ebx,[esp+0x10]
100007f1:	01 c6                	add    esi,eax
100007f3:	8a 84 56 00 00 00 00 	mov    al,BYTE PTR [esi+edx*2+0x0]	100007f6: R_386_32	Fonts
100007fa:	31 c9                	xor    ecx,ecx
100007fc:	88 44 24 0c          	mov    BYTE PTR [esp+0xc],al
10000800:	8b 6c 24 0c          	mov    ebp,DWORD PTR [esp+0xc]
10000804:	83 e5 01             	and    ebp,0x1
10000807:	89 e8                	mov    eax,ebp
10000809:	88 04 0b             	mov    BYTE PTR [ebx+ecx*1],al
1000080c:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000810:	41                   	inc    ecx
10000811:	d1 e8                	shr    eax,1
10000813:	83 e0 7f             	and    eax,0x7f
10000816:	83 f9 08             	cmp    ecx,0x8
10000819:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000081d:	75 e1                	jne    10000800 <getLegacyFontRegion(int, int, int*, int*)+0x34>
1000081f:	42                   	inc    edx
10000820:	83 c3 08             	add    ebx,0x8
10000823:	83 fa 0e             	cmp    edx,0xe
10000826:	75 cb                	jne    100007f3 <getLegacyFontRegion(int, int, int*, int*)+0x27>
10000828:	69 84 24 a4 00 00 00 ff 00 00 00 	imul   eax,DWORD PTR [esp+0xa4],0xff
10000833:	0f b6 94 07 00 00 00 00 	movzx  edx,BYTE PTR [edi+eax*1+0x0]	10000837: R_386_32	FontWidths
1000083b:	8b 84 24 ac 00 00 00 	mov    eax,DWORD PTR [esp+0xac]
10000842:	89 10                	mov    DWORD PTR [eax],edx
10000844:	8b 84 24 b0 00 00 00 	mov    eax,DWORD PTR [esp+0xb0]
1000084b:	c7 00 0e 00 00 00    	mov    DWORD PTR [eax],0xe
10000851:	50                   	push   eax
10000852:	50                   	push   eax
10000853:	6a 0e                	push   0xe
10000855:	6a 08                	push   0x8
10000857:	8d 44 24 20          	lea    eax,[esp+0x20]
1000085b:	50                   	push   eax
1000085c:	6a 00                	push   0x0
1000085e:	6a 00                	push   0x0
10000860:	ff b4 24 bc 00 00 00 	push   DWORD PTR [esp+0xbc]
10000867:	e8 fc ff ff ff       	call   10000868 <getLegacyFontRegion(int, int, int*, int*)+0x9c>	10000868: R_386_PC32	createTightFontRegion(int, int, unsigned char*, int, int)
1000086c:	8b 84 24 bc 00 00 00 	mov    eax,DWORD PTR [esp+0xbc]
10000873:	81 c4 a8 00 00 00    	add    esp,0xa8
10000879:	5b                   	pop    ebx
1000087a:	5e                   	pop    esi
1000087b:	5f                   	pop    edi
1000087c:	5d                   	pop    ebp
1000087d:	c2 04 00             	ret    0x4

10000880 <loadCursorFile(char const*)>:
10000880:	57                   	push   edi
10000881:	56                   	push   esi
10000882:	53                   	push   ebx
10000883:	83 ec 2c             	sub    esp,0x2c
10000886:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
1000088a:	68 14 01 00 00       	push   0x114
1000088f:	e8 fc ff ff ff       	call   10000890 <loadCursorFile(char const*)+0x10>	10000890: R_386_PC32	malloc
10000894:	83 c4 0c             	add    esp,0xc
10000897:	89 c6                	mov    esi,eax
10000899:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000089b: R_386_32	kernelProcess
1000089f:	53                   	push   ebx
100008a0:	50                   	push   eax
100008a1:	e8 fc ff ff ff       	call   100008a2 <loadCursorFile(char const*)+0x22>	100008a2: R_386_PC32	File::File(char const*, Process*)
100008a6:	5a                   	pop    edx
100008a7:	59                   	pop    ecx
100008a8:	6a 01                	push   0x1
100008aa:	56                   	push   esi
100008ab:	e8 fc ff ff ff       	call   100008ac <loadCursorFile(char const*)+0x2c>	100008ac: R_386_PC32	File::open(FileOpenMode)
100008b0:	83 c4 10             	add    esp,0x10
100008b3:	85 c0                	test   eax,eax
100008b5:	74 0a                	je     100008c1 <loadCursorFile(char const*)+0x41>
100008b7:	83 ec 0c             	sub    esp,0xc
100008ba:	68 c1 47 00 10       	push   0x100047c1	100008bb: R_386_32	.text
100008bf:	eb 5b                	jmp    1000091c <loadCursorFile(char const*)+0x9c>
100008c1:	50                   	push   eax
100008c2:	8d 44 24 17          	lea    eax,[esp+0x17]
100008c6:	50                   	push   eax
100008c7:	8d 44 24 20          	lea    eax,[esp+0x20]
100008cb:	50                   	push   eax
100008cc:	56                   	push   esi
100008cd:	e8 fc ff ff ff       	call   100008ce <loadCursorFile(char const*)+0x4e>	100008ce: R_386_PC32	File::stat(unsigned long long*, bool*)
100008d2:	8b 54 24 2c          	mov    edx,DWORD PTR [esp+0x2c]
100008d6:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
100008da:	89 54 24 14          	mov    DWORD PTR [esp+0x14],edx
100008de:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100008e2:	58                   	pop    eax
100008e3:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
100008e7:	e8 fc ff ff ff       	call   100008e8 <loadCursorFile(char const*)+0x68>	100008e8: R_386_PC32	malloc
100008ec:	89 c3                	mov    ebx,eax
100008ee:	58                   	pop    eax
100008ef:	8b 06                	mov    eax,DWORD PTR [esi]
100008f1:	8d 4c 24 20          	lea    ecx,[esp+0x20]
100008f5:	51                   	push   ecx
100008f6:	53                   	push   ebx
100008f7:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
100008fb:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
100008ff:	56                   	push   esi
10000900:	ff 50 0c             	call   DWORD PTR [eax+0xc]
10000903:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10000907:	8b 54 24 3c          	mov    edx,DWORD PTR [esp+0x3c]
1000090b:	83 c4 20             	add    esp,0x20
1000090e:	39 44 24 14          	cmp    DWORD PTR [esp+0x14],eax
10000912:	74 17                	je     1000092b <loadCursorFile(char const*)+0xab>
10000914:	83 ec 0c             	sub    esp,0xc
10000917:	68 d5 47 00 10       	push   0x100047d5	10000918: R_386_32	.text
1000091c:	e8 fc ff ff ff       	call   1000091d <loadCursorFile(char const*)+0x9d>	1000091d: R_386_PC32	Dbg::kprintf(char const*, ...)
10000921:	83 c4 10             	add    esp,0x10
10000924:	83 c4 20             	add    esp,0x20
10000927:	5b                   	pop    ebx
10000928:	5e                   	pop    esi
10000929:	5f                   	pop    edi
1000092a:	c3                   	ret    
1000092b:	6a 00                	push   0x0
1000092d:	68 04 01 00 00       	push   0x104
10000932:	52                   	push   edx
10000933:	50                   	push   eax
10000934:	e8 fc ff ff ff       	call   10000935 <loadCursorFile(char const*)+0xb5>	10000935: R_386_PC32	__udivdi3
10000939:	83 c4 10             	add    esp,0x10
1000093c:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000940:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
10000947:	8d 04 83             	lea    eax,[ebx+eax*4]
1000094a:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000094e:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10000952:	39 14 24             	cmp    DWORD PTR [esp],edx
10000955:	0f 8d f8 00 00 00    	jge    10000a53 <loadCursorFile(char const*)+0x1d3>
1000095b:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000095e:	8d 34 83             	lea    esi,[ebx+eax*4]
10000961:	50                   	push   eax
10000962:	6a 04                	push   0x4
10000964:	68 e9 47 00 10       	push   0x100047e9	10000965: R_386_32	.text
10000969:	56                   	push   esi
1000096a:	e8 fc ff ff ff       	call   1000096b <loadCursorFile(char const*)+0xeb>	1000096b: R_386_PC32	memcmp
1000096f:	83 c4 10             	add    esp,0x10
10000972:	85 c0                	test   eax,eax
10000974:	0f 84 b8 00 00 00    	je     10000a32 <loadCursorFile(char const*)+0x1b2>
1000097a:	50                   	push   eax
1000097b:	6a 04                	push   0x4
1000097d:	68 ee 47 00 10       	push   0x100047ee	1000097e: R_386_32	.text
10000982:	56                   	push   esi
10000983:	e8 fc ff ff ff       	call   10000984 <loadCursorFile(char const*)+0x104>	10000984: R_386_PC32	memcmp
10000988:	83 c4 10             	add    esp,0x10
1000098b:	85 c0                	test   eax,eax
1000098d:	74 7b                	je     10000a0a <loadCursorFile(char const*)+0x18a>
1000098f:	50                   	push   eax
10000990:	6a 04                	push   0x4
10000992:	68 f3 47 00 10       	push   0x100047f3	10000993: R_386_32	.text
10000997:	56                   	push   esi
10000998:	e8 fc ff ff ff       	call   10000999 <loadCursorFile(char const*)+0x119>	10000999: R_386_PC32	memcmp
1000099d:	83 c4 10             	add    esp,0x10
100009a0:	85 c0                	test   eax,eax
100009a2:	74 6d                	je     10000a11 <loadCursorFile(char const*)+0x191>
100009a4:	57                   	push   edi
100009a5:	6a 04                	push   0x4
100009a7:	68 f8 47 00 10       	push   0x100047f8	100009a8: R_386_32	.text
100009ac:	56                   	push   esi
100009ad:	e8 fc ff ff ff       	call   100009ae <loadCursorFile(char const*)+0x12e>	100009ae: R_386_PC32	memcmp
100009b2:	83 c4 10             	add    esp,0x10
100009b5:	85 c0                	test   eax,eax
100009b7:	74 5f                	je     10000a18 <loadCursorFile(char const*)+0x198>
100009b9:	51                   	push   ecx
100009ba:	6a 04                	push   0x4
100009bc:	68 fd 47 00 10       	push   0x100047fd	100009bd: R_386_32	.text
100009c1:	56                   	push   esi
100009c2:	e8 fc ff ff ff       	call   100009c3 <loadCursorFile(char const*)+0x143>	100009c3: R_386_PC32	memcmp
100009c7:	83 c4 10             	add    esp,0x10
100009ca:	85 c0                	test   eax,eax
100009cc:	74 51                	je     10000a1f <loadCursorFile(char const*)+0x19f>
100009ce:	52                   	push   edx
100009cf:	6a 04                	push   0x4
100009d1:	68 02 48 00 10       	push   0x10004802	100009d2: R_386_32	.text
100009d6:	56                   	push   esi
100009d7:	e8 fc ff ff ff       	call   100009d8 <loadCursorFile(char const*)+0x158>	100009d8: R_386_PC32	memcmp
100009dc:	83 c4 10             	add    esp,0x10
100009df:	85 c0                	test   eax,eax
100009e1:	74 43                	je     10000a26 <loadCursorFile(char const*)+0x1a6>
100009e3:	50                   	push   eax
100009e4:	6a 04                	push   0x4
100009e6:	68 07 48 00 10       	push   0x10004807	100009e7: R_386_32	.text
100009eb:	56                   	push   esi
100009ec:	e8 fc ff ff ff       	call   100009ed <loadCursorFile(char const*)+0x16d>	100009ed: R_386_PC32	memcmp
100009f1:	83 c4 10             	add    esp,0x10
100009f4:	85 c0                	test   eax,eax
100009f6:	74 35                	je     10000a2d <loadCursorFile(char const*)+0x1ad>
100009f8:	83 ec 0c             	sub    esp,0xc
100009fb:	68 0c 48 00 10       	push   0x1000480c	100009fc: R_386_32	.text
10000a00:	e8 fc ff ff ff       	call   10000a01 <loadCursorFile(char const*)+0x181>	10000a01: R_386_PC32	Dbg::kprintf(char const*, ...)
10000a05:	83 c4 10             	add    esp,0x10
10000a08:	eb 49                	jmp    10000a53 <loadCursorFile(char const*)+0x1d3>
10000a0a:	b8 00 02 00 00       	mov    eax,0x200
10000a0f:	eb 21                	jmp    10000a32 <loadCursorFile(char const*)+0x1b2>
10000a11:	b8 00 03 00 00       	mov    eax,0x300
10000a16:	eb 1a                	jmp    10000a32 <loadCursorFile(char const*)+0x1b2>
10000a18:	b8 00 01 00 00       	mov    eax,0x100
10000a1d:	eb 13                	jmp    10000a32 <loadCursorFile(char const*)+0x1b2>
10000a1f:	b8 00 04 00 00       	mov    eax,0x400
10000a24:	eb 0c                	jmp    10000a32 <loadCursorFile(char const*)+0x1b2>
10000a26:	b8 00 05 00 00       	mov    eax,0x500
10000a2b:	eb 05                	jmp    10000a32 <loadCursorFile(char const*)+0x1b2>
10000a2d:	b8 00 06 00 00       	mov    eax,0x600
10000a32:	8d b8 00 00 00 00    	lea    edi,[eax+0x0]	10000a34: R_386_32	___mouse_data
10000a38:	b9 00 01 00 00       	mov    ecx,0x100
10000a3d:	8b 74 24 08          	mov    esi,DWORD PTR [esp+0x8]
10000a41:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000a43:	ff 04 24             	inc    DWORD PTR [esp]
10000a46:	81 44 24 08 00 01 00 00 	add    DWORD PTR [esp+0x8],0x100
10000a4e:	e9 fb fe ff ff       	jmp    1000094e <loadCursorFile(char const*)+0xce>
10000a53:	89 5c 24 30          	mov    DWORD PTR [esp+0x30],ebx
10000a57:	83 c4 20             	add    esp,0x20
10000a5a:	5b                   	pop    ebx
10000a5b:	5e                   	pop    esi
10000a5c:	5f                   	pop    edi
10000a5d:	e9 fc ff ff ff       	jmp    10000a5e <loadCursorFile(char const*)+0x1de>	10000a5e: R_386_PC32	free

10000a62 <mouseInit(Video*)>:
10000a62:	57                   	push   edi
10000a63:	bf 00 00 00 00       	mov    edi,0x0	10000a64: R_386_32	tightMouseRegionOld
10000a68:	56                   	push   esi
10000a69:	53                   	push   ebx
10000a6a:	83 ec 2c             	sub    esp,0x2c
10000a6d:	68 20 48 00 10       	push   0x10004820	10000a6e: R_386_32	.text
10000a72:	8d 5c 24 14          	lea    ebx,[esp+0x14]
10000a76:	e8 fc ff ff ff       	call   10000a77 <mouseInit(Video*)+0x15>	10000a77: R_386_PC32	loadCursorFile(char const*)
10000a7b:	89 de                	mov    esi,ebx
10000a7d:	68 00 00 00 00       	push   0x0	10000a7e: R_386_32	___mouse_data
10000a82:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000a84: R_386_32	cursorOffset
10000a8c:	6a 00                	push   0x0
10000a8e:	6a 00                	push   0x0
10000a90:	53                   	push   ebx
10000a91:	e8 fc ff ff ff       	call   10000a92 <mouseInit(Video*)+0x30>	10000a92: R_386_PC32	createTightCursorRegion(int, int, unsigned int*)
10000a96:	a1 00 00 00 00       	mov    eax,ds:0x0	10000a97: R_386_32	cursorOffset
10000a9b:	83 c4 1c             	add    esp,0x1c
10000a9e:	05 00 00 00 00       	add    eax,0x0	10000a9f: R_386_32	___mouse_data
10000aa3:	b9 19 00 00 00       	mov    ecx,0x19
10000aa8:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000aaa:	50                   	push   eax
10000aab:	89 de                	mov    esi,ebx
10000aad:	6a 00                	push   0x0
10000aaf:	bf 00 00 00 00       	mov    edi,0x0	10000ab0: R_386_32	tightMouseRegionNew
10000ab4:	6a 00                	push   0x0
10000ab6:	53                   	push   ebx
10000ab7:	e8 fc ff ff ff       	call   10000ab8 <mouseInit(Video*)+0x56>	10000ab8: R_386_PC32	createTightCursorRegion(int, int, unsigned int*)
10000abc:	b9 19 00 00 00       	mov    ecx,0x19
10000ac1:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000ac3:	83 c4 2c             	add    esp,0x2c
10000ac6:	5b                   	pop    ebx
10000ac7:	5e                   	pop    esi
10000ac8:	5f                   	pop    edi
10000ac9:	c3                   	ret    

10000aca <hideCursor(Video*, int, int, int, int)>:
10000aca:	57                   	push   edi
10000acb:	b8 00 00 00 00       	mov    eax,0x0	10000acc: R_386_32	tightMouseRegionOld
10000ad0:	56                   	push   esi
10000ad1:	be 00 00 00 00       	mov    esi,0x0	10000ad2: R_386_32	tightMouseRegionNew
10000ad6:	53                   	push   ebx
10000ad7:	83 ec 30             	sub    esp,0x30
10000ada:	8b 54 24 40          	mov    edx,DWORD PTR [esp+0x40]
10000ade:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10000ae2:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10000ae6:	8d 5c 24 14          	lea    ebx,[esp+0x14]
10000aea:	89 0d 10 00 00 00    	mov    DWORD PTR ds:0x10,ecx	10000aec: R_386_32	tightMouseRegionOld
10000af0:	83 ec 20             	sub    esp,0x20
10000af3:	8b 4c 24 68          	mov    ecx,DWORD PTR [esp+0x68]
10000af7:	89 0d 14 00 00 00    	mov    DWORD PTR ds:0x14,ecx	10000af9: R_386_32	tightMouseRegionOld
10000afd:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10000b01:	89 0d 10 00 00 00    	mov    DWORD PTR ds:0x10,ecx	10000b03: R_386_32	tightMouseRegionNew
10000b07:	8b 4c 24 70          	mov    ecx,DWORD PTR [esp+0x70]
10000b0b:	89 e7                	mov    edi,esp
10000b0d:	89 0d 14 00 00 00    	mov    DWORD PTR ds:0x14,ecx	10000b0f: R_386_32	tightMouseRegionNew
10000b13:	83 ec 1c             	sub    esp,0x1c
10000b16:	b9 07 00 00 00       	mov    ecx,0x7
10000b1b:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10000b1d:	89 c6                	mov    esi,eax
10000b1f:	89 e7                	mov    edi,esp
10000b21:	b9 07 00 00 00       	mov    ecx,0x7
10000b26:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10000b28:	53                   	push   ebx
10000b29:	89 de                	mov    esi,ebx
10000b2b:	e8 fc ff ff ff       	call   10000b2c <hideCursor(Video*, int, int, int, int)+0x62>	10000b2c: R_386_PC32	getRegionDifference(Region, Region)
10000b30:	b9 07 00 00 00       	mov    ecx,0x7
10000b35:	83 c4 14             	add    esp,0x14
10000b38:	89 e7                	mov    edi,esp
10000b3a:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10000b3c:	8b 54 24 34          	mov    edx,DWORD PTR [esp+0x34]
10000b40:	52                   	push   edx
10000b41:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000b43: R_386_32	desktopWindow
10000b47:	e8 fc ff ff ff       	call   10000b48 <hideCursor(Video*, int, int, int, int)+0x7e>	10000b48: R_386_PC32	NFrame::repaintCursorRegion(Video*, Region)
10000b4c:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10000b50:	89 44 24 70          	mov    DWORD PTR [esp+0x70],eax
10000b54:	83 c4 60             	add    esp,0x60
10000b57:	5b                   	pop    ebx
10000b58:	5e                   	pop    esi
10000b59:	5f                   	pop    edi
10000b5a:	e9 fc ff ff ff       	jmp    10000b5b <hideCursor(Video*, int, int, int, int)+0x91>	10000b5b: R_386_PC32	free

10000b5f <showCursor(Video*)>:
10000b5f:	83 ec 0c             	sub    esp,0xc
10000b62:	a1 00 00 00 00       	mov    eax,ds:0x0	10000b63: R_386_32	cursorOffset
10000b67:	05 00 00 00 00       	add    eax,0x0	10000b68: R_386_32	___mouse_data
10000b6c:	50                   	push   eax
10000b6d:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000b6f: R_386_32	mouseY
10000b73:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000b75: R_386_32	mouseX
10000b79:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000b7d:	e8 fc ff ff ff       	call   10000b7e <showCursor(Video*)+0x1f>	10000b7e: R_386_PC32	videoDrawCursor(Video*, int, int, unsigned int*)
10000b82:	83 c4 1c             	add    esp,0x1c
10000b85:	c3                   	ret    

10000b86 <changeCursor(Video*, int)>:
10000b86:	57                   	push   edi
10000b87:	bf 00 00 00 00       	mov    edi,0x0	10000b88: R_386_32	tightMouseRegionNew
10000b8c:	56                   	push   esi
10000b8d:	53                   	push   ebx
10000b8e:	83 ec 4c             	sub    esp,0x4c
10000b91:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10000b95:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000b97: R_386_32	tightMouseRegionNew
10000b9b:	a3 00 00 00 00       	mov    ds:0x0,eax	10000b9c: R_386_32	cursorOffset
10000ba0:	8d 5c 24 34          	lea    ebx,[esp+0x34]
10000ba4:	a1 00 00 00 00       	mov    eax,ds:0x0	10000ba5: R_386_32	mouseX
10000ba9:	89 de                	mov    esi,ebx
10000bab:	a3 10 00 00 00       	mov    ds:0x10,eax	10000bac: R_386_32	tightMouseRegionOld
10000bb0:	a1 00 00 00 00       	mov    eax,ds:0x0	10000bb1: R_386_32	mouseY
10000bb5:	a3 14 00 00 00       	mov    ds:0x14,eax	10000bb6: R_386_32	tightMouseRegionOld
10000bba:	e8 fc ff ff ff       	call   10000bbb <changeCursor(Video*, int)+0x35>	10000bbb: R_386_PC32	free
10000bbf:	a1 00 00 00 00       	mov    eax,ds:0x0	10000bc0: R_386_32	cursorOffset
10000bc4:	05 00 00 00 00       	add    eax,0x0	10000bc5: R_386_32	___mouse_data
10000bc9:	50                   	push   eax
10000bca:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000bcc: R_386_32	mouseY
10000bd0:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000bd2: R_386_32	mouseX
10000bd6:	53                   	push   ebx
10000bd7:	e8 fc ff ff ff       	call   10000bd8 <changeCursor(Video*, int)+0x52>	10000bd8: R_386_PC32	createTightCursorRegion(int, int, unsigned int*)
10000bdc:	b9 19 00 00 00       	mov    ecx,0x19
10000be1:	8d 44 24 24          	lea    eax,[esp+0x24]
10000be5:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000be7:	83 ec 14             	sub    esp,0x14
10000bea:	b9 07 00 00 00       	mov    ecx,0x7
10000bef:	89 e7                	mov    edi,esp
10000bf1:	be 00 00 00 00       	mov    esi,0x0	10000bf2: R_386_32	tightMouseRegionNew
10000bf6:	83 ec 1c             	sub    esp,0x1c
10000bf9:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10000bfb:	89 e7                	mov    edi,esp
10000bfd:	b9 07 00 00 00       	mov    ecx,0x7
10000c02:	be 00 00 00 00       	mov    esi,0x0	10000c03: R_386_32	tightMouseRegionOld
10000c07:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10000c09:	50                   	push   eax
10000c0a:	e8 fc ff ff ff       	call   10000c0b <changeCursor(Video*, int)+0x85>	10000c0b: R_386_PC32	getRegionDifference(Region, Region)
10000c0f:	b9 07 00 00 00       	mov    ecx,0x7
10000c14:	83 c4 24             	add    esp,0x24
10000c17:	8d 44 24 30          	lea    eax,[esp+0x30]
10000c1b:	89 e7                	mov    edi,esp
10000c1d:	89 c6                	mov    esi,eax
10000c1f:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10000c21:	89 de                	mov    esi,ebx
10000c23:	ff 74 24 78          	push   DWORD PTR [esp+0x78]
10000c27:	bf 00 00 00 00       	mov    edi,0x0	10000c28: R_386_32	tightMouseRegionOld
10000c2c:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000c2e: R_386_32	desktopWindow
10000c32:	e8 fc ff ff ff       	call   10000c33 <changeCursor(Video*, int)+0xad>	10000c33: R_386_PC32	NFrame::repaintCursorRegion(Video*, Region)
10000c37:	83 c4 24             	add    esp,0x24
10000c3a:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000c3c: R_386_32	tightMouseRegionOld
10000c40:	e8 fc ff ff ff       	call   10000c41 <changeCursor(Video*, int)+0xbb>	10000c41: R_386_PC32	free
10000c45:	a1 00 00 00 00       	mov    eax,ds:0x0	10000c46: R_386_32	cursorOffset
10000c4a:	05 00 00 00 00       	add    eax,0x0	10000c4b: R_386_32	___mouse_data
10000c4f:	50                   	push   eax
10000c50:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000c52: R_386_32	mouseY
10000c56:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000c58: R_386_32	mouseX
10000c5c:	53                   	push   ebx
10000c5d:	e8 fc ff ff ff       	call   10000c5e <changeCursor(Video*, int)+0xd8>	10000c5e: R_386_PC32	createTightCursorRegion(int, int, unsigned int*)
10000c62:	b9 19 00 00 00       	mov    ecx,0x19
10000c67:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000c69:	83 c4 5c             	add    esp,0x5c
10000c6c:	5b                   	pop    ebx
10000c6d:	5e                   	pop    esi
10000c6e:	5f                   	pop    edi
10000c6f:	c3                   	ret    

10000c70 <handleMouse(Video*, int, int, int, int, int)>:
10000c70:	57                   	push   edi
10000c71:	56                   	push   esi
10000c72:	53                   	push   ebx
10000c73:	83 ec 20             	sub    esp,0x20
10000c76:	a1 00 00 00 00       	mov    eax,ds:0x0	10000c77: R_386_32	mouseX
10000c7b:	8b 74 24 44          	mov    esi,DWORD PTR [esp+0x44]
10000c7f:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000c83:	8b 1d 00 00 00 00    	mov    ebx,DWORD PTR ds:0x0	10000c85: R_386_32	mouseButtons
10000c89:	a1 00 00 00 00       	mov    eax,ds:0x0	10000c8a: R_386_32	mouseY
10000c8e:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000c92:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000c96:	03 54 24 34          	add    edx,DWORD PTR [esp+0x34]
10000c9a:	03 44 24 38          	add    eax,DWORD PTR [esp+0x38]
10000c9e:	89 15 00 00 00 00    	mov    DWORD PTR ds:0x0,edx	10000ca0: R_386_32	mouseX
10000ca4:	a3 00 00 00 00       	mov    ds:0x0,eax	10000ca5: R_386_32	mouseY
10000ca9:	89 35 00 00 00 00    	mov    DWORD PTR ds:0x0,esi	10000cab: R_386_32	mouseButtons
10000caf:	85 d2                	test   edx,edx
10000cb1:	79 0a                	jns    10000cbd <handleMouse(Video*, int, int, int, int, int)+0x4d>
10000cb3:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000cb5: R_386_32	mouseX
10000cbd:	85 c0                	test   eax,eax
10000cbf:	79 0a                	jns    10000ccb <handleMouse(Video*, int, int, int, int, int)+0x5b>
10000cc1:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10000cc3: R_386_32	mouseY
10000ccb:	83 ec 0c             	sub    esp,0xc
10000cce:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10000cd2:	e8 fc ff ff ff       	call   10000cd3 <handleMouse(Video*, int, int, int, int, int)+0x63>	10000cd3: R_386_PC32	Video::getWidth()
10000cd7:	83 c4 10             	add    esp,0x10
10000cda:	3b 05 00 00 00 00    	cmp    eax,DWORD PTR ds:0x0	10000cdc: R_386_32	mouseX
10000ce0:	7f 15                	jg     10000cf7 <handleMouse(Video*, int, int, int, int, int)+0x87>
10000ce2:	83 ec 0c             	sub    esp,0xc
10000ce5:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10000ce9:	e8 fc ff ff ff       	call   10000cea <handleMouse(Video*, int, int, int, int, int)+0x7a>	10000cea: R_386_PC32	Video::getWidth()
10000cee:	83 c4 10             	add    esp,0x10
10000cf1:	48                   	dec    eax
10000cf2:	a3 00 00 00 00       	mov    ds:0x0,eax	10000cf3: R_386_32	mouseX
10000cf7:	83 ec 0c             	sub    esp,0xc
10000cfa:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10000cfe:	e8 fc ff ff ff       	call   10000cff <handleMouse(Video*, int, int, int, int, int)+0x8f>	10000cff: R_386_PC32	Video::getHeight()
10000d03:	83 c4 10             	add    esp,0x10
10000d06:	3b 05 00 00 00 00    	cmp    eax,DWORD PTR ds:0x0	10000d08: R_386_32	mouseY
10000d0c:	7f 15                	jg     10000d23 <handleMouse(Video*, int, int, int, int, int)+0xb3>
10000d0e:	83 ec 0c             	sub    esp,0xc
10000d11:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10000d15:	e8 fc ff ff ff       	call   10000d16 <handleMouse(Video*, int, int, int, int, int)+0xa6>	10000d16: R_386_PC32	Video::getHeight()
10000d1a:	83 c4 10             	add    esp,0x10
10000d1d:	48                   	dec    eax
10000d1e:	a3 00 00 00 00       	mov    ds:0x0,eax	10000d1f: R_386_32	mouseY
10000d23:	83 ec 0c             	sub    esp,0xc
10000d26:	83 e3 01             	and    ebx,0x1
10000d29:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000d2b: R_386_32	mouseY
10000d2f:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000d31: R_386_32	mouseX
10000d35:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10000d39:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10000d3d:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
10000d41:	e8 fc ff ff ff       	call   10000d42 <handleMouse(Video*, int, int, int, int, int)+0xd2>	10000d42: R_386_PC32	hideCursor(Video*, int, int, int, int)
10000d46:	83 c4 14             	add    esp,0x14
10000d49:	6a 01                	push   0x1
10000d4b:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000d4d: R_386_32	mouseY
10000d51:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000d53: R_386_32	mouseX
10000d57:	ff 74 24 48          	push   DWORD PTR [esp+0x48]
10000d5b:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000d5d: R_386_32	desktopWindow
10000d61:	e8 fc ff ff ff       	call   10000d62 <handleMouse(Video*, int, int, int, int, int)+0xf2>	10000d62: R_386_PC32	NFrame::getPixelOwner(Video*, int, int, bool)
10000d66:	89 5c 24 2c          	mov    DWORD PTR [esp+0x2c],ebx
10000d6a:	89 c7                	mov    edi,eax
10000d6c:	83 c4 20             	add    esp,0x20
10000d6f:	83 e6 01             	and    esi,0x1
10000d72:	0f 84 23 05 00 00    	je     1000129b <handleMouse(Video*, int, int, int, int, int)+0x62b>
10000d78:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
10000d7d:	0f 85 4d 02 00 00    	jne    10000fd0 <handleMouse(Video*, int, int, int, int, int)+0x360>
10000d83:	be 0a 00 00 00       	mov    esi,0xa
10000d88:	a1 00 00 00 00       	mov    eax,ds:0x0	10000d89: R_386_32	milliTenthsSinceBoot
10000d8d:	8b 15 04 00 00 00    	mov    edx,DWORD PTR ds:0x4	10000d8f: R_386_32	milliTenthsSinceBoot
10000d93:	89 c1                	mov    ecx,eax
10000d95:	89 d3                	mov    ebx,edx
10000d97:	2b 0d 80 a4 00 10    	sub    ecx,DWORD PTR ds:0x1000a480	10000d99: R_386_32	.bss
10000d9d:	a3 80 a4 00 10       	mov    ds:0x1000a480,eax	10000d9e: R_386_32	.bss
10000da2:	1b 1d 84 a4 00 10    	sbb    ebx,DWORD PTR ds:0x1000a484	10000da4: R_386_32	.bss
10000da8:	89 4c 24 18          	mov    DWORD PTR [esp+0x18],ecx
10000dac:	89 5c 24 1c          	mov    DWORD PTR [esp+0x1c],ebx
10000db0:	b9 a0 86 01 00       	mov    ecx,0x186a0
10000db5:	83 ec 0c             	sub    esp,0xc
10000db8:	89 15 84 a4 00 10    	mov    DWORD PTR ds:0x1000a484,edx	10000dba: R_386_32	.bss
10000dbe:	a1 00 00 00 00       	mov    eax,ds:0x0	10000dbf: R_386_32	Phys::usablePages
10000dc3:	c1 e0 02             	shl    eax,0x2
10000dc6:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000dca:	6a 00                	push   0x0
10000dcc:	a1 00 00 00 00       	mov    eax,ds:0x0	10000dcd: R_386_32	Phys::usedPages
10000dd1:	68 ff ff ff 00       	push   0xffffff
10000dd6:	8d 1c 85 00 00 00 00 	lea    ebx,[eax*4+0x0]
10000ddd:	89 d8                	mov    eax,ebx
10000ddf:	99                   	cdq    
10000de0:	f7 f9                	idiv   ecx
10000de2:	99                   	cdq    
10000de3:	f7 fe                	idiv   esi
10000de5:	8d 42 30             	lea    eax,[edx+0x30]
10000de8:	50                   	push   eax
10000de9:	6a 00                	push   0x0
10000deb:	6a 00                	push   0x0
10000ded:	e8 fc ff ff ff       	call   10000dee <handleMouse(Video*, int, int, int, int, int)+0x17e>	10000dee: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000df2:	83 c4 14             	add    esp,0x14
10000df5:	b9 10 27 00 00       	mov    ecx,0x2710
10000dfa:	6a 00                	push   0x0
10000dfc:	89 d8                	mov    eax,ebx
10000dfe:	68 ff ff ff 00       	push   0xffffff
10000e03:	99                   	cdq    
10000e04:	f7 f9                	idiv   ecx
10000e06:	99                   	cdq    
10000e07:	f7 fe                	idiv   esi
10000e09:	8d 42 30             	lea    eax,[edx+0x30]
10000e0c:	50                   	push   eax
10000e0d:	6a 00                	push   0x0
10000e0f:	6a 01                	push   0x1
10000e11:	e8 fc ff ff ff       	call   10000e12 <handleMouse(Video*, int, int, int, int, int)+0x1a2>	10000e12: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000e16:	83 c4 14             	add    esp,0x14
10000e19:	89 d8                	mov    eax,ebx
10000e1b:	6a 00                	push   0x0
10000e1d:	b9 e8 03 00 00       	mov    ecx,0x3e8
10000e22:	68 ff ff ff 00       	push   0xffffff
10000e27:	99                   	cdq    
10000e28:	f7 f9                	idiv   ecx
10000e2a:	99                   	cdq    
10000e2b:	f7 fe                	idiv   esi
10000e2d:	8d 42 30             	lea    eax,[edx+0x30]
10000e30:	50                   	push   eax
10000e31:	6a 00                	push   0x0
10000e33:	6a 02                	push   0x2
10000e35:	e8 fc ff ff ff       	call   10000e36 <handleMouse(Video*, int, int, int, int, int)+0x1c6>	10000e36: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000e3a:	83 c4 14             	add    esp,0x14
10000e3d:	b9 64 00 00 00       	mov    ecx,0x64
10000e42:	6a 00                	push   0x0
10000e44:	89 d8                	mov    eax,ebx
10000e46:	68 ff ff ff 00       	push   0xffffff
10000e4b:	99                   	cdq    
10000e4c:	f7 f9                	idiv   ecx
10000e4e:	99                   	cdq    
10000e4f:	f7 fe                	idiv   esi
10000e51:	8d 42 30             	lea    eax,[edx+0x30]
10000e54:	50                   	push   eax
10000e55:	6a 00                	push   0x0
10000e57:	6a 03                	push   0x3
10000e59:	e8 fc ff ff ff       	call   10000e5a <handleMouse(Video*, int, int, int, int, int)+0x1ea>	10000e5a: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000e5e:	83 c4 14             	add    esp,0x14
10000e61:	89 d8                	mov    eax,ebx
10000e63:	6a 00                	push   0x0
10000e65:	99                   	cdq    
10000e66:	68 ff ff ff 00       	push   0xffffff
10000e6b:	f7 fe                	idiv   esi
10000e6d:	89 d3                	mov    ebx,edx
10000e6f:	99                   	cdq    
10000e70:	f7 fe                	idiv   esi
10000e72:	8d 42 30             	lea    eax,[edx+0x30]
10000e75:	50                   	push   eax
10000e76:	6a 00                	push   0x0
10000e78:	6a 04                	push   0x4
10000e7a:	e8 fc ff ff ff       	call   10000e7b <handleMouse(Video*, int, int, int, int, int)+0x20b>	10000e7b: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000e7f:	83 c4 14             	add    esp,0x14
10000e82:	83 c3 30             	add    ebx,0x30
10000e85:	6a 00                	push   0x0
10000e87:	68 ff ff ff 00       	push   0xffffff
10000e8c:	53                   	push   ebx
10000e8d:	6a 00                	push   0x0
10000e8f:	6a 05                	push   0x5
10000e91:	e8 fc ff ff ff       	call   10000e92 <handleMouse(Video*, int, int, int, int, int)+0x222>	10000e92: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000e96:	83 c4 14             	add    esp,0x14
10000e99:	6a 00                	push   0x0
10000e9b:	68 ff ff ff 00       	push   0xffffff
10000ea0:	6a 2f                	push   0x2f
10000ea2:	6a 00                	push   0x0
10000ea4:	6a 06                	push   0x6
10000ea6:	e8 fc ff ff ff       	call   10000ea7 <handleMouse(Video*, int, int, int, int, int)+0x237>	10000ea7: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000eab:	83 c4 14             	add    esp,0x14
10000eae:	b9 a0 86 01 00       	mov    ecx,0x186a0
10000eb3:	6a 00                	push   0x0
10000eb5:	68 ff ff ff 00       	push   0xffffff
10000eba:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10000ebe:	99                   	cdq    
10000ebf:	f7 f9                	idiv   ecx
10000ec1:	99                   	cdq    
10000ec2:	f7 fe                	idiv   esi
10000ec4:	8d 42 30             	lea    eax,[edx+0x30]
10000ec7:	50                   	push   eax
10000ec8:	6a 00                	push   0x0
10000eca:	6a 07                	push   0x7
10000ecc:	e8 fc ff ff ff       	call   10000ecd <handleMouse(Video*, int, int, int, int, int)+0x25d>	10000ecd: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000ed1:	83 c4 14             	add    esp,0x14
10000ed4:	b9 10 27 00 00       	mov    ecx,0x2710
10000ed9:	6a 00                	push   0x0
10000edb:	68 ff ff ff 00       	push   0xffffff
10000ee0:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10000ee4:	99                   	cdq    
10000ee5:	f7 f9                	idiv   ecx
10000ee7:	99                   	cdq    
10000ee8:	f7 fe                	idiv   esi
10000eea:	8d 42 30             	lea    eax,[edx+0x30]
10000eed:	50                   	push   eax
10000eee:	6a 00                	push   0x0
10000ef0:	6a 08                	push   0x8
10000ef2:	e8 fc ff ff ff       	call   10000ef3 <handleMouse(Video*, int, int, int, int, int)+0x283>	10000ef3: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000ef7:	83 c4 14             	add    esp,0x14
10000efa:	b9 e8 03 00 00       	mov    ecx,0x3e8
10000eff:	6a 00                	push   0x0
10000f01:	68 ff ff ff 00       	push   0xffffff
10000f06:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10000f0a:	99                   	cdq    
10000f0b:	f7 f9                	idiv   ecx
10000f0d:	99                   	cdq    
10000f0e:	f7 fe                	idiv   esi
10000f10:	8d 42 30             	lea    eax,[edx+0x30]
10000f13:	50                   	push   eax
10000f14:	6a 00                	push   0x0
10000f16:	6a 09                	push   0x9
10000f18:	e8 fc ff ff ff       	call   10000f19 <handleMouse(Video*, int, int, int, int, int)+0x2a9>	10000f19: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000f1d:	83 c4 14             	add    esp,0x14
10000f20:	b9 64 00 00 00       	mov    ecx,0x64
10000f25:	6a 00                	push   0x0
10000f27:	68 ff ff ff 00       	push   0xffffff
10000f2c:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10000f30:	99                   	cdq    
10000f31:	f7 f9                	idiv   ecx
10000f33:	99                   	cdq    
10000f34:	f7 fe                	idiv   esi
10000f36:	83 c2 30             	add    edx,0x30
10000f39:	52                   	push   edx
10000f3a:	6a 00                	push   0x0
10000f3c:	6a 0a                	push   0xa
10000f3e:	e8 fc ff ff ff       	call   10000f3f <handleMouse(Video*, int, int, int, int, int)+0x2cf>	10000f3f: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000f43:	83 c4 14             	add    esp,0x14
10000f46:	6a 00                	push   0x0
10000f48:	68 ff ff ff 00       	push   0xffffff
10000f4d:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10000f51:	99                   	cdq    
10000f52:	f7 fe                	idiv   esi
10000f54:	89 d3                	mov    ebx,edx
10000f56:	99                   	cdq    
10000f57:	83 c3 30             	add    ebx,0x30
10000f5a:	f7 fe                	idiv   esi
10000f5c:	8d 42 30             	lea    eax,[edx+0x30]
10000f5f:	50                   	push   eax
10000f60:	6a 00                	push   0x0
10000f62:	6a 0b                	push   0xb
10000f64:	e8 fc ff ff ff       	call   10000f65 <handleMouse(Video*, int, int, int, int, int)+0x2f5>	10000f65: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000f69:	83 c4 14             	add    esp,0x14
10000f6c:	6a 00                	push   0x0
10000f6e:	68 ff ff ff 00       	push   0xffffff
10000f73:	53                   	push   ebx
10000f74:	6a 00                	push   0x0
10000f76:	6a 0c                	push   0xc
10000f78:	e8 fc ff ff ff       	call   10000f79 <handleMouse(Video*, int, int, int, int, int)+0x309>	10000f79: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000f7d:	83 c4 14             	add    esp,0x14
10000f80:	6a 00                	push   0x0
10000f82:	68 ff ff ff 00       	push   0xffffff
10000f87:	6a 20                	push   0x20
10000f89:	6a 00                	push   0x0
10000f8b:	6a 0d                	push   0xd
10000f8d:	e8 fc ff ff ff       	call   10000f8e <handleMouse(Video*, int, int, int, int, int)+0x31e>	10000f8e: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000f92:	83 c4 14             	add    esp,0x14
10000f95:	6a 00                	push   0x0
10000f97:	68 ff ff ff 00       	push   0xffffff
10000f9c:	6a 4b                	push   0x4b
10000f9e:	6a 00                	push   0x0
10000fa0:	6a 0e                	push   0xe
10000fa2:	e8 fc ff ff ff       	call   10000fa3 <handleMouse(Video*, int, int, int, int, int)+0x333>	10000fa3: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000fa7:	83 c4 14             	add    esp,0x14
10000faa:	6a 00                	push   0x0
10000fac:	68 ff ff ff 00       	push   0xffffff
10000fb1:	6a 42                	push   0x42
10000fb3:	6a 00                	push   0x0
10000fb5:	6a 0f                	push   0xf
10000fb7:	e8 fc ff ff ff       	call   10000fb8 <handleMouse(Video*, int, int, int, int, int)+0x348>	10000fb8: R_386_PC32	drawVGAChar(int, int, int, int, int)
10000fbc:	83 c4 20             	add    esp,0x20
10000fbf:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	10000fc1: R_386_32	draggingWindow
10000fc6:	75 08                	jne    10000fd0 <handleMouse(Video*, int, int, int, int, int)+0x360>
10000fc8:	39 3d 00 00 00 00    	cmp    DWORD PTR ds:0x0,edi	10000fca: R_386_32	desktopWindow
10000fce:	75 07                	jne    10000fd7 <handleMouse(Video*, int, int, int, int, int)+0x367>
10000fd0:	31 db                	xor    ebx,ebx
10000fd2:	e9 5e 01 00 00       	jmp    10001135 <handleMouse(Video*, int, int, int, int, int)+0x4c5>
10000fd7:	83 ec 0c             	sub    esp,0xc
10000fda:	57                   	push   edi
10000fdb:	e8 fc ff ff ff       	call   10000fdc <handleMouse(Video*, int, int, int, int, int)+0x36c>	10000fdc: R_386_PC32	NFrame::raise()
10000fe0:	89 3c 24             	mov    DWORD PTR [esp],edi
10000fe3:	8b 1d 00 00 00 00    	mov    ebx,DWORD PTR ds:0x0	10000fe5: R_386_32	mouseX
10000fe9:	e8 fc ff ff ff       	call   10000fea <handleMouse(Video*, int, int, int, int, int)+0x37a>	10000fea: R_386_PC32	NFrame::getAbsX()
10000fee:	8b 35 00 00 00 00    	mov    esi,DWORD PTR ds:0x0	10000ff0: R_386_32	mouseY
10000ff4:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000ff8:	89 3c 24             	mov    DWORD PTR [esp],edi
10000ffb:	e8 fc ff ff ff       	call   10000ffc <handleMouse(Video*, int, int, int, int, int)+0x38c>	10000ffc: R_386_PC32	NFrame::getAbsY()
10001000:	83 c4 10             	add    esp,0x10
10001003:	29 c6                	sub    esi,eax
10001005:	78 34                	js     1000103b <handleMouse(Video*, int, int, int, int, int)+0x3cb>
10001007:	83 ec 0c             	sub    esp,0xc
1000100a:	57                   	push   edi
1000100b:	e8 fc ff ff ff       	call   1000100c <handleMouse(Video*, int, int, int, int, int)+0x39c>	1000100c: R_386_PC32	NFrame::getTitlebarHeight()
10001010:	83 c4 10             	add    esp,0x10
10001013:	39 f0                	cmp    eax,esi
10001015:	7e 24                	jle    1000103b <handleMouse(Video*, int, int, int, int, int)+0x3cb>
10001017:	b8 b7 0b 00 00       	mov    eax,0xbb7
1000101c:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
10001020:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001024:	1b 44 24 1c          	sbb    eax,DWORD PTR [esp+0x1c]
10001028:	72 5e                	jb     10001088 <handleMouse(Video*, int, int, int, int, int)+0x418>
1000102a:	51                   	push   ecx
1000102b:	51                   	push   ecx
1000102c:	ff 74 24 38          	push   DWORD PTR [esp+0x38]
10001030:	57                   	push   edi
10001031:	e8 fc ff ff ff       	call   10001032 <handleMouse(Video*, int, int, int, int, int)+0x3c2>	10001032: R_386_PC32	NFrame::toggleFullscreen(Video*)
10001036:	e9 df 00 00 00       	jmp    1000111a <handleMouse(Video*, int, int, int, int, int)+0x4aa>
1000103b:	2b 5c 24 08          	sub    ebx,DWORD PTR [esp+0x8]
1000103f:	83 ec 0c             	sub    esp,0xc
10001042:	57                   	push   edi
10001043:	e8 fc ff ff ff       	call   10001044 <handleMouse(Video*, int, int, int, int, int)+0x3d4>	10001044: R_386_PC32	NFrame::getHeight()
10001048:	83 c4 10             	add    esp,0x10
1000104b:	83 e8 14             	sub    eax,0x14
1000104e:	39 f0                	cmp    eax,esi
10001050:	7e 5b                	jle    100010ad <handleMouse(Video*, int, int, int, int, int)+0x43d>
10001052:	83 ec 0c             	sub    esp,0xc
10001055:	57                   	push   edi
10001056:	e8 fc ff ff ff       	call   10001057 <handleMouse(Video*, int, int, int, int, int)+0x3e7>	10001057: R_386_PC32	NFrame::getHeight()
1000105b:	83 c4 10             	add    esp,0x10
1000105e:	83 e8 0c             	sub    eax,0xc
10001061:	39 f0                	cmp    eax,esi
10001063:	7f 7b                	jg     100010e0 <handleMouse(Video*, int, int, int, int, int)+0x470>
10001065:	89 3d 00 00 00 00    	mov    DWORD PTR ds:0x0,edi	10001067: R_386_32	draggingWindow
1000106b:	50                   	push   eax
1000106c:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	1000106e: R_386_32	startedDragging
10001073:	50                   	push   eax
10001074:	c7 05 00 00 00 00 03 00 00 00 	mov    DWORD PTR ds:0x0,0x3	10001076: R_386_32	dragMode
1000107e:	68 00 04 00 00       	push   0x400
10001083:	e9 89 00 00 00       	jmp    10001111 <handleMouse(Video*, int, int, int, int, int)+0x4a1>
10001088:	83 ec 0c             	sub    esp,0xc
1000108b:	57                   	push   edi
1000108c:	e8 fc ff ff ff       	call   1000108d <handleMouse(Video*, int, int, int, int, int)+0x41d>	1000108d: R_386_PC32	NFrame::isFullscreen()
10001091:	83 c4 10             	add    esp,0x10
10001094:	88 c3                	mov    bl,al
10001096:	84 c0                	test   al,al
10001098:	0f 85 97 00 00 00    	jne    10001135 <handleMouse(Video*, int, int, int, int, int)+0x4c5>
1000109e:	89 3d 00 00 00 00    	mov    DWORD PTR ds:0x0,edi	100010a0: R_386_32	draggingWindow
100010a4:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100010a6: R_386_32	startedDragging
100010ab:	eb 7c                	jmp    10001129 <handleMouse(Video*, int, int, int, int, int)+0x4b9>
100010ad:	83 ec 0c             	sub    esp,0xc
100010b0:	57                   	push   edi
100010b1:	e8 fc ff ff ff       	call   100010b2 <handleMouse(Video*, int, int, int, int, int)+0x442>	100010b2: R_386_PC32	NFrame::getWidth()
100010b6:	83 c4 10             	add    esp,0x10
100010b9:	83 e8 14             	sub    eax,0x14
100010bc:	39 d8                	cmp    eax,ebx
100010be:	7f 92                	jg     10001052 <handleMouse(Video*, int, int, int, int, int)+0x3e2>
100010c0:	89 3d 00 00 00 00    	mov    DWORD PTR ds:0x0,edi	100010c2: R_386_32	draggingWindow
100010c6:	52                   	push   edx
100010c7:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100010c9: R_386_32	startedDragging
100010ce:	52                   	push   edx
100010cf:	c7 05 00 00 00 00 02 00 00 00 	mov    DWORD PTR ds:0x0,0x2	100010d1: R_386_32	dragMode
100010d9:	68 00 03 00 00       	push   0x300
100010de:	eb 31                	jmp    10001111 <handleMouse(Video*, int, int, int, int, int)+0x4a1>
100010e0:	83 ec 0c             	sub    esp,0xc
100010e3:	57                   	push   edi
100010e4:	e8 fc ff ff ff       	call   100010e5 <handleMouse(Video*, int, int, int, int, int)+0x475>	100010e5: R_386_PC32	NFrame::getWidth()
100010e9:	83 c4 10             	add    esp,0x10
100010ec:	83 e8 0c             	sub    eax,0xc
100010ef:	39 d8                	cmp    eax,ebx
100010f1:	7f 2c                	jg     1000111f <handleMouse(Video*, int, int, int, int, int)+0x4af>
100010f3:	89 3d 00 00 00 00    	mov    DWORD PTR ds:0x0,edi	100010f5: R_386_32	draggingWindow
100010f9:	50                   	push   eax
100010fa:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100010fc: R_386_32	startedDragging
10001101:	50                   	push   eax
10001102:	c7 05 00 00 00 00 04 00 00 00 	mov    DWORD PTR ds:0x0,0x4	10001104: R_386_32	dragMode
1000110c:	68 00 05 00 00       	push   0x500
10001111:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10001115:	e8 fc ff ff ff       	call   10001116 <handleMouse(Video*, int, int, int, int, int)+0x4a6>	10001116: R_386_PC32	changeCursor(Video*, int)
1000111a:	83 c4 10             	add    esp,0x10
1000111d:	eb 14                	jmp    10001133 <handleMouse(Video*, int, int, int, int, int)+0x4c3>
1000111f:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10001121: R_386_32	draggingWindow
10001129:	c7 05 00 00 00 00 01 00 00 00 	mov    DWORD PTR ds:0x0,0x1	1000112b: R_386_32	dragMode
10001133:	b3 01                	mov    bl,0x1
10001135:	a1 00 00 00 00       	mov    eax,ds:0x0	10001136: R_386_32	draggingWindow
1000113a:	85 c0                	test   eax,eax
1000113c:	0f 84 09 01 00 00    	je     1000124b <handleMouse(Video*, int, int, int, int, int)+0x5db>
10001142:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10001146:	0b 7c 24 38          	or     edi,DWORD PTR [esp+0x38]
1000114a:	0f 84 fb 00 00 00    	je     1000124b <handleMouse(Video*, int, int, int, int, int)+0x5db>
10001150:	83 ec 0c             	sub    esp,0xc
10001153:	50                   	push   eax
10001154:	e8 fc ff ff ff       	call   10001155 <handleMouse(Video*, int, int, int, int, int)+0x4e5>	10001155: R_386_PC32	NFrame::getX()
10001159:	89 c7                	mov    edi,eax
1000115b:	58                   	pop    eax
1000115c:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000115e: R_386_32	draggingWindow
10001162:	e8 fc ff ff ff       	call   10001163 <handleMouse(Video*, int, int, int, int, int)+0x4f3>	10001163: R_386_PC32	NFrame::getY()
10001167:	89 c6                	mov    esi,eax
10001169:	58                   	pop    eax
1000116a:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000116c: R_386_32	draggingWindow
10001170:	e8 fc ff ff ff       	call   10001171 <handleMouse(Video*, int, int, int, int, int)+0x501>	10001171: R_386_PC32	NFrame::getWidth()
10001175:	89 c3                	mov    ebx,eax
10001177:	58                   	pop    eax
10001178:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000117a: R_386_32	draggingWindow
1000117e:	e8 fc ff ff ff       	call   1000117f <handleMouse(Video*, int, int, int, int, int)+0x50f>	1000117f: R_386_PC32	NFrame::getHeight()
10001183:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	10001185: R_386_32	mouseX
10001189:	89 4c 24 18          	mov    DWORD PTR [esp+0x18],ecx
1000118d:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	1000118f: R_386_32	mouseY
10001193:	89 4c 24 1c          	mov    DWORD PTR [esp+0x1c],ecx
10001197:	83 c4 10             	add    esp,0x10
1000119a:	80 3d 00 00 00 00 00 	cmp    BYTE PTR ds:0x0,0x0	1000119c: R_386_32	startedDragging
100011a1:	75 20                	jne    100011c3 <handleMouse(Video*, int, int, int, int, int)+0x553>
100011a3:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100011a7:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	100011a9: R_386_32	startedDragging
100011ae:	83 ec 0c             	sub    esp,0xc
100011b1:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100011b3: R_386_32	draggingWindow
100011b7:	e8 fc ff ff ff       	call   100011b8 <handleMouse(Video*, int, int, int, int, int)+0x548>	100011b8: R_386_PC32	NFrame::startDragState()
100011bc:	83 c4 10             	add    esp,0x10
100011bf:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100011c3:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	100011c5: R_386_32	dragMode
100011c9:	83 f9 01             	cmp    ecx,0x1
100011cc:	75 25                	jne    100011f3 <handleMouse(Video*, int, int, int, int, int)+0x583>
100011ce:	50                   	push   eax
100011cf:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100011d3:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
100011d7:	01 c6                	add    esi,eax
100011d9:	56                   	push   esi
100011da:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100011de:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
100011e2:	8d 1c 38             	lea    ebx,[eax+edi*1]
100011e5:	53                   	push   ebx
100011e6:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	100011e8: R_386_32	draggingWindow
100011ec:	e8 fc ff ff ff       	call   100011ed <handleMouse(Video*, int, int, int, int, int)+0x57d>	100011ed: R_386_PC32	NFrame::setPosition(int, int)
100011f1:	eb 32                	jmp    10001225 <handleMouse(Video*, int, int, int, int, int)+0x5b5>
100011f3:	83 f9 02             	cmp    ecx,0x2
100011f6:	75 13                	jne    1000120b <handleMouse(Video*, int, int, int, int, int)+0x59b>
100011f8:	a1 00 00 00 00       	mov    eax,ds:0x0	100011f9: R_386_32	mouseY
100011fd:	53                   	push   ebx
100011fe:	29 f0                	sub    eax,esi
10001200:	50                   	push   eax
10001201:	a1 00 00 00 00       	mov    eax,ds:0x0	10001202: R_386_32	mouseX
10001206:	29 f8                	sub    eax,edi
10001208:	50                   	push   eax
10001209:	eb 0f                	jmp    1000121a <handleMouse(Video*, int, int, int, int, int)+0x5aa>
1000120b:	83 f9 03             	cmp    ecx,0x3
1000120e:	75 1c                	jne    1000122c <handleMouse(Video*, int, int, int, int, int)+0x5bc>
10001210:	a1 00 00 00 00       	mov    eax,ds:0x0	10001211: R_386_32	mouseY
10001215:	51                   	push   ecx
10001216:	29 f0                	sub    eax,esi
10001218:	50                   	push   eax
10001219:	53                   	push   ebx
1000121a:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000121c: R_386_32	draggingWindow
10001220:	e8 fc ff ff ff       	call   10001221 <handleMouse(Video*, int, int, int, int, int)+0x5b1>	10001221: R_386_PC32	NFrame::setSize(int, int)
10001225:	83 c4 10             	add    esp,0x10
10001228:	b3 01                	mov    bl,0x1
1000122a:	eb 1f                	jmp    1000124b <handleMouse(Video*, int, int, int, int, int)+0x5db>
1000122c:	b3 01                	mov    bl,0x1
1000122e:	83 f9 04             	cmp    ecx,0x4
10001231:	75 18                	jne    1000124b <handleMouse(Video*, int, int, int, int, int)+0x5db>
10001233:	52                   	push   edx
10001234:	50                   	push   eax
10001235:	a1 00 00 00 00       	mov    eax,ds:0x0	10001236: R_386_32	mouseX
1000123a:	29 f8                	sub    eax,edi
1000123c:	50                   	push   eax
1000123d:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000123f: R_386_32	draggingWindow
10001243:	e8 fc ff ff ff       	call   10001244 <handleMouse(Video*, int, int, int, int, int)+0x5d4>	10001244: R_386_PC32	NFrame::setSize(int, int)
10001248:	83 c4 10             	add    esp,0x10
1000124b:	83 ec 0c             	sub    esp,0xc
1000124e:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10001252:	e8 fc ff ff ff       	call   10001253 <handleMouse(Video*, int, int, int, int, int)+0x5e3>	10001253: R_386_PC32	showCursor(Video*)
10001257:	83 c4 10             	add    esp,0x10
1000125a:	84 db                	test   bl,bl
1000125c:	0f 84 9e 00 00 00    	je     10001300 <handleMouse(Video*, int, int, int, int, int)+0x690>
10001262:	83 ec 28             	sub    esp,0x28
10001265:	a1 00 00 00 00       	mov    eax,ds:0x0	10001266: R_386_32	mouseX
1000126a:	89 e7                	mov    edi,esp
1000126c:	a3 10 00 00 00       	mov    ds:0x10,eax	1000126d: R_386_32	tightMouseRegionNew
10001271:	be 00 00 00 00       	mov    esi,0x0	10001272: R_386_32	tightMouseRegionNew
10001276:	a1 00 00 00 00       	mov    eax,ds:0x0	10001277: R_386_32	mouseY
1000127b:	b9 07 00 00 00       	mov    ecx,0x7
10001280:	a3 14 00 00 00       	mov    ds:0x14,eax	10001281: R_386_32	tightMouseRegionNew
10001285:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10001287:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
1000128b:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000128d: R_386_32	desktopWindow
10001291:	e8 fc ff ff ff       	call   10001292 <handleMouse(Video*, int, int, int, int, int)+0x622>	10001292: R_386_PC32	NFrame::repaint(Video*, Region)
10001296:	83 c4 30             	add    esp,0x30
10001299:	eb 65                	jmp    10001300 <handleMouse(Video*, int, int, int, int, int)+0x690>
1000129b:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
100012a0:	0f 84 2a fd ff ff    	je     10000fd0 <handleMouse(Video*, int, int, int, int, int)+0x360>
100012a6:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	100012a8: R_386_32	draggingWindow
100012ad:	74 10                	je     100012bf <handleMouse(Video*, int, int, int, int, int)+0x64f>
100012af:	53                   	push   ebx
100012b0:	53                   	push   ebx
100012b1:	6a 00                	push   0x0
100012b3:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
100012b7:	e8 fc ff ff ff       	call   100012b8 <handleMouse(Video*, int, int, int, int, int)+0x648>	100012b8: R_386_PC32	changeCursor(Video*, int)
100012bc:	83 c4 10             	add    esp,0x10
100012bf:	a1 00 00 00 00       	mov    eax,ds:0x0	100012c0: R_386_32	draggingWindow
100012c4:	31 db                	xor    ebx,ebx
100012c6:	85 c0                	test   eax,eax
100012c8:	74 16                	je     100012e0 <handleMouse(Video*, int, int, int, int, int)+0x670>
100012ca:	8a 1d 00 00 00 00    	mov    bl,BYTE PTR ds:0x0	100012cc: R_386_32	startedDragging
100012d0:	84 db                	test   bl,bl
100012d2:	74 0c                	je     100012e0 <handleMouse(Video*, int, int, int, int, int)+0x670>
100012d4:	83 ec 0c             	sub    esp,0xc
100012d7:	50                   	push   eax
100012d8:	e8 fc ff ff ff       	call   100012d9 <handleMouse(Video*, int, int, int, int, int)+0x669>	100012d9: R_386_PC32	NFrame::endDragState()
100012dd:	83 c4 10             	add    esp,0x10
100012e0:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100012e2: R_386_32	startedDragging
100012e7:	c7 05 00 00 00 00 01 00 00 00 	mov    DWORD PTR ds:0x0,0x1	100012e9: R_386_32	dragMode
100012f1:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100012f3: R_386_32	draggingWindow
100012fb:	e9 35 fe ff ff       	jmp    10001135 <handleMouse(Video*, int, int, int, int, int)+0x4c5>
10001300:	83 c4 20             	add    esp,0x20
10001303:	88 d8                	mov    al,bl
10001305:	5b                   	pop    ebx
10001306:	5e                   	pop    esi
10001307:	5f                   	pop    edi
10001308:	c3                   	ret    

10001309 <__static_initialization_and_destruction_0(int, int)>:
10001309:	83 ec 0c             	sub    esp,0xc
1000130c:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10001310:	81 7c 24 14 ff ff 00 00 	cmp    DWORD PTR [esp+0x14],0xffff
10001318:	75 20                	jne    1000133a <__static_initialization_and_destruction_0(int, int)+0x31>
1000131a:	48                   	dec    eax
1000131b:	75 1d                	jne    1000133a <__static_initialization_and_destruction_0(int, int)+0x31>
1000131d:	83 ec 0c             	sub    esp,0xc
10001320:	68 00 00 00 00       	push   0x0	10001321: R_386_32	tightMouseRegionOld
10001325:	e8 fc ff ff ff       	call   10001326 <__static_initialization_and_destruction_0(int, int)+0x1d>	10001326: R_386_PC32	Region::Region()
1000132a:	c7 44 24 20 00 00 00 00 	mov    DWORD PTR [esp+0x20],0x0	1000132e: R_386_32	tightMouseRegionNew
10001332:	83 c4 1c             	add    esp,0x1c
10001335:	e9 fc ff ff ff       	jmp    10001336 <__static_initialization_and_destruction_0(int, int)+0x2d>	10001336: R_386_PC32	Region::Region()
1000133a:	83 c4 0c             	add    esp,0xc
1000133d:	c3                   	ret    

1000133e <drawCharacter(Video*, Region, int, int, unsigned int, char)>:
1000133e:	55                   	push   ebp
1000133f:	57                   	push   edi
10001340:	31 ff                	xor    edi,edi
10001342:	56                   	push   esi
10001343:	31 f6                	xor    esi,esi
10001345:	53                   	push   ebx
10001346:	83 ec 3c             	sub    esp,0x3c
10001349:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000134d:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10001351:	0f be 44 24 7c       	movsx  eax,BYTE PTR [esp+0x7c]
10001356:	89 c5                	mov    ebp,eax
10001358:	39 74 24 5c          	cmp    DWORD PTR [esp+0x5c],esi
1000135c:	0f 8e 15 01 00 00    	jle    10001477 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x139>
10001362:	8b 44 24 74          	mov    eax,DWORD PTR [esp+0x74]
10001366:	83 c0 0c             	add    eax,0xc
10001369:	39 f0                	cmp    eax,esi
1000136b:	0f 8e 06 01 00 00    	jle    10001477 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x139>
10001371:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
10001375:	8d 04 bd 00 00 00 00 	lea    eax,[edi*4+0x0]
1000137c:	8b 14 b9             	mov    edx,DWORD PTR [ecx+edi*4]
1000137f:	0f b7 ca             	movzx  ecx,dx
10001382:	c1 ea 10             	shr    edx,0x10
10001385:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
10001389:	8d 7c 0f 01          	lea    edi,[edi+ecx*1+0x1]
1000138d:	89 54 24 24          	mov    DWORD PTR [esp+0x24],edx
10001391:	8d 0c 16             	lea    ecx,[esi+edx*1]
10001394:	89 4c 24 18          	mov    DWORD PTR [esp+0x18],ecx
10001398:	3b 4c 24 74          	cmp    ecx,DWORD PTR [esp+0x74]
1000139c:	7d 06                	jge    100013a4 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x66>
1000139e:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
100013a2:	eb b4                	jmp    10001358 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x1a>
100013a4:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
100013a8:	c6 44 24 1f 00       	mov    BYTE PTR [esp+0x1f],0x0
100013ad:	8d 44 03 04          	lea    eax,[ebx+eax*1+0x4]
100013b1:	31 db                	xor    ebx,ebx
100013b3:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100013b7:	39 5c 24 58          	cmp    DWORD PTR [esp+0x58],ebx
100013bb:	7e e1                	jle    1000139e <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x60>
100013bd:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100013c1:	39 18                	cmp    DWORD PTR [eax],ebx
100013c3:	75 0e                	jne    100013d3 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x95>
100013c5:	83 44 24 10 04       	add    DWORD PTR [esp+0x10],0x4
100013ca:	80 74 24 1f 01       	xor    BYTE PTR [esp+0x1f],0x1
100013cf:	ff 4c 24 0c          	dec    DWORD PTR [esp+0xc]
100013d3:	89 d9                	mov    ecx,ebx
100013d5:	2b 4c 24 70          	sub    ecx,DWORD PTR [esp+0x70]
100013d9:	83 f9 07             	cmp    ecx,0x7
100013dc:	77 6d                	ja     1000144b <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x10d>
100013de:	80 7c 24 1f 00       	cmp    BYTE PTR [esp+0x1f],0x0
100013e3:	74 66                	je     1000144b <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x10d>
100013e5:	89 f0                	mov    eax,esi
100013e7:	2b 44 24 74          	sub    eax,DWORD PTR [esp+0x74]
100013eb:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100013ef:	31 c0                	xor    eax,eax
100013f1:	3b 44 24 24          	cmp    eax,DWORD PTR [esp+0x24]
100013f5:	7d 54                	jge    1000144b <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x10d>
100013f7:	83 7c 24 14 0b       	cmp    DWORD PTR [esp+0x14],0xb
100013fc:	77 46                	ja     10001444 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x106>
100013fe:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10001402:	c1 e2 07             	shl    edx,0x7
10001405:	0f b6 94 2a 00 00 00 00 	movzx  edx,BYTE PTR [edx+ebp*1+0x0]	10001409: R_386_32	font_array
1000140d:	d3 e2                	shl    edx,cl
1000140f:	80 e2 80             	and    dl,0x80
10001412:	74 30                	je     10001444 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x106>
10001414:	89 4c 24 2c          	mov    DWORD PTR [esp+0x2c],ecx
10001418:	ff 74 24 78          	push   DWORD PTR [esp+0x78]
1000141c:	8b 54 24 6c          	mov    edx,DWORD PTR [esp+0x6c]
10001420:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001424:	01 f2                	add    edx,esi
10001426:	01 c2                	add    edx,eax
10001428:	52                   	push   edx
10001429:	8b 54 24 6c          	mov    edx,DWORD PTR [esp+0x6c]
1000142d:	01 da                	add    edx,ebx
1000142f:	52                   	push   edx
10001430:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
10001434:	e8 fc ff ff ff       	call   10001435 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0xf7>	10001435: R_386_PC32	videoPutpixel(Video*, int, int, unsigned int)
10001439:	83 c4 10             	add    esp,0x10
1000143c:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
10001440:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10001444:	40                   	inc    eax
10001445:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
10001449:	eb a6                	jmp    100013f1 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0xb3>
1000144b:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
10001450:	74 10                	je     10001462 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x124>
10001452:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10001456:	8b 00                	mov    eax,DWORD PTR [eax]
10001458:	3b 44 24 70          	cmp    eax,DWORD PTR [esp+0x70]
1000145c:	73 04                	jae    10001462 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x124>
1000145e:	89 c3                	mov    ebx,eax
10001460:	eb 01                	jmp    10001463 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x125>
10001462:	43                   	inc    ebx
10001463:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
10001467:	83 c0 08             	add    eax,0x8
1000146a:	39 d8                	cmp    eax,ebx
1000146c:	0f 8d 45 ff ff ff    	jge    100013b7 <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x79>
10001472:	e9 27 ff ff ff       	jmp    1000139e <drawCharacter(Video*, Region, int, int, unsigned int, char)+0x60>
10001477:	83 c4 3c             	add    esp,0x3c
1000147a:	b8 08 00 0c 00       	mov    eax,0xc0008
1000147f:	5b                   	pop    ebx
10001480:	5e                   	pop    esi
10001481:	5f                   	pop    edi
10001482:	5d                   	pop    ebp
10001483:	c3                   	ret    

10001484 <drawFontCharacter(Video*, Region, int, int, int, int, unsigned int)>:
10001484:	57                   	push   edi
10001485:	56                   	push   esi
10001486:	53                   	push   ebx
10001487:	83 ec 50             	sub    esp,0x50
1000148a:	8d 74 24 18          	lea    esi,[esp+0x18]
1000148e:	50                   	push   eax
1000148f:	50                   	push   eax
10001490:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10001494:	50                   	push   eax
10001495:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10001499:	50                   	push   eax
1000149a:	8d 44 24 1f          	lea    eax,[esp+0x1f]
1000149e:	50                   	push   eax
1000149f:	ff b4 24 98 00 00 00 	push   DWORD PTR [esp+0x98]
100014a6:	ff b4 24 98 00 00 00 	push   DWORD PTR [esp+0x98]
100014ad:	56                   	push   esi
100014ae:	e8 fc ff ff ff       	call   100014af <drawFontCharacter(Video*, Region, int, int, int, int, unsigned int)+0x2b>	100014af: R_386_PC32	getFontRegion(int, int, bool*, int*, int*)
100014b3:	b9 07 00 00 00       	mov    ecx,0x7
100014b8:	8b 84 24 a4 00 00 00 	mov    eax,DWORD PTR [esp+0xa4]
100014bf:	8d 5c 24 50          	lea    ebx,[esp+0x50]
100014c3:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
100014c7:	8b 84 24 a8 00 00 00 	mov    eax,DWORD PTR [esp+0xa8]
100014ce:	83 ec 14             	sub    esp,0x14
100014d1:	89 44 24 5c          	mov    DWORD PTR [esp+0x5c],eax
100014d5:	89 e7                	mov    edi,esp
100014d7:	83 ec 1c             	sub    esp,0x1c
100014da:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100014dc:	8d b4 24 b0 00 00 00 	lea    esi,[esp+0xb0]
100014e3:	89 e7                	mov    edi,esp
100014e5:	b9 07 00 00 00       	mov    ecx,0x7
100014ea:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100014ec:	53                   	push   ebx
100014ed:	89 de                	mov    esi,ebx
100014ef:	e8 fc ff ff ff       	call   100014f0 <drawFontCharacter(Video*, Region, int, int, int, int, unsigned int)+0x6c>	100014f0: R_386_PC32	getRegionIntersection(Region, Region)
100014f4:	b9 07 00 00 00       	mov    ecx,0x7
100014f9:	83 c4 40             	add    esp,0x40
100014fc:	ff b4 24 9c 00 00 00 	push   DWORD PTR [esp+0x9c]
10001503:	83 ec 1c             	sub    esp,0x1c
10001506:	89 e7                	mov    edi,esp
10001508:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000150a:	ff b4 24 8c 00 00 00 	push   DWORD PTR [esp+0x8c]
10001511:	e8 fc ff ff ff       	call   10001512 <drawFontCharacter(Video*, Region, int, int, int, int, unsigned int)+0x8e>	10001512: R_386_PC32	fillRegion(Video*, Region, unsigned int)
10001516:	83 c4 30             	add    esp,0x30
10001519:	80 7c 24 0f 00       	cmp    BYTE PTR [esp+0xf],0x0
1000151e:	74 0f                	je     1000152f <drawFontCharacter(Video*, Region, int, int, int, int, unsigned int)+0xab>
10001520:	83 ec 0c             	sub    esp,0xc
10001523:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10001527:	e8 fc ff ff ff       	call   10001528 <drawFontCharacter(Video*, Region, int, int, int, int, unsigned int)+0xa4>	10001528: R_386_PC32	free
1000152c:	83 c4 10             	add    esp,0x10
1000152f:	83 ec 0c             	sub    esp,0xc
10001532:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
10001536:	e8 fc ff ff ff       	call   10001537 <drawFontCharacter(Video*, Region, int, int, int, int, unsigned int)+0xb3>	10001537: R_386_PC32	free
1000153b:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
1000153f:	c1 e0 10             	shl    eax,0x10
10001542:	0b 44 24 20          	or     eax,DWORD PTR [esp+0x20]
10001546:	83 c4 60             	add    esp,0x60
10001549:	5b                   	pop    ebx
1000154a:	5e                   	pop    esi
1000154b:	5f                   	pop    edi
1000154c:	c3                   	ret    

1000154d <fillRegion(Video*, Region, unsigned int)>:
1000154d:	55                   	push   ebp
1000154e:	31 ed                	xor    ebp,ebp
10001550:	57                   	push   edi
10001551:	56                   	push   esi
10001552:	53                   	push   ebx
10001553:	83 ec 2c             	sub    esp,0x2c
10001556:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
1000155a:	c7 44 24 08 00 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
10001562:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10001566:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000156a:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000156e:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
10001572:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001576:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000157a:	39 44 24 4c          	cmp    DWORD PTR [esp+0x4c],eax
1000157e:	0f 8e b6 00 00 00    	jle    1000163a <fillRegion(Video*, Region, unsigned int)+0xed>
10001584:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10001588:	8d 45 01             	lea    eax,[ebp+0x1]
1000158b:	8b 0c ae             	mov    ecx,DWORD PTR [esi+ebp*4]
1000158e:	8d 14 ad 00 00 00 00 	lea    edx,[ebp*4+0x0]
10001595:	83 f9 ff             	cmp    ecx,0xffffffff
10001598:	0f 84 9c 00 00 00    	je     1000163a <fillRegion(Video*, Region, unsigned int)+0xed>
1000159e:	0f b7 f1             	movzx  esi,cx
100015a1:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
100015a5:	c1 e9 10             	shr    ecx,0x10
100015a8:	8d 7c 17 04          	lea    edi,[edi+edx*1+0x4]
100015ac:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
100015b0:	8d 2c 30             	lea    ebp,[eax+esi*1]
100015b3:	31 db                	xor    ebx,ebx
100015b5:	c6 44 24 13 00       	mov    BYTE PTR [esp+0x13],0x0
100015ba:	39 5c 24 48          	cmp    DWORD PTR [esp+0x48],ebx
100015be:	7e 6d                	jle    1000162d <fillRegion(Video*, Region, unsigned int)+0xe0>
100015c0:	39 1f                	cmp    DWORD PTR [edi],ebx
100015c2:	75 09                	jne    100015cd <fillRegion(Video*, Region, unsigned int)+0x80>
100015c4:	83 c7 04             	add    edi,0x4
100015c7:	80 74 24 13 01       	xor    BYTE PTR [esp+0x13],0x1
100015cc:	4e                   	dec    esi
100015cd:	80 7c 24 13 00       	cmp    BYTE PTR [esp+0x13],0x0
100015d2:	74 55                	je     10001629 <fillRegion(Video*, Region, unsigned int)+0xdc>
100015d4:	8b 07                	mov    eax,DWORD PTR [edi]
100015d6:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
100015da:	29 d8                	sub    eax,ebx
100015dc:	03 4c 24 1c          	add    ecx,DWORD PTR [esp+0x1c]
100015e0:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
100015e4:	01 da                	add    edx,ebx
100015e6:	80 7c 24 5c 00       	cmp    BYTE PTR [esp+0x5c],0x0
100015eb:	74 19                	je     10001606 <fillRegion(Video*, Region, unsigned int)+0xb9>
100015ed:	83 ec 08             	sub    esp,0x8
100015f0:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
100015f4:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
100015f8:	50                   	push   eax
100015f9:	51                   	push   ecx
100015fa:	52                   	push   edx
100015fb:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
100015ff:	e8 fc ff ff ff       	call   10001600 <fillRegion(Video*, Region, unsigned int)+0xb3>	10001600: R_386_PC32	videoDrawRectDotted(Video*, int, int, int, int, unsigned int)
10001604:	eb 17                	jmp    1000161d <fillRegion(Video*, Region, unsigned int)+0xd0>
10001606:	83 ec 08             	sub    esp,0x8
10001609:	ff 74 24 68          	push   DWORD PTR [esp+0x68]
1000160d:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
10001611:	50                   	push   eax
10001612:	51                   	push   ecx
10001613:	52                   	push   edx
10001614:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
10001618:	e8 fc ff ff ff       	call   10001619 <fillRegion(Video*, Region, unsigned int)+0xcc>	10001619: R_386_PC32	videoDrawRect(Video*, int, int, int, int, unsigned int)
1000161d:	83 c4 20             	add    esp,0x20
10001620:	43                   	inc    ebx
10001621:	85 f6                	test   esi,esi
10001623:	74 95                	je     100015ba <fillRegion(Video*, Region, unsigned int)+0x6d>
10001625:	8b 1f                	mov    ebx,DWORD PTR [edi]
10001627:	eb 91                	jmp    100015ba <fillRegion(Video*, Region, unsigned int)+0x6d>
10001629:	85 f6                	test   esi,esi
1000162b:	75 f8                	jne    10001625 <fillRegion(Video*, Region, unsigned int)+0xd8>
1000162d:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
10001631:	01 5c 24 08          	add    DWORD PTR [esp+0x8],ebx
10001635:	e9 3c ff ff ff       	jmp    10001576 <fillRegion(Video*, Region, unsigned int)+0x29>
1000163a:	83 c4 2c             	add    esp,0x2c
1000163d:	5b                   	pop    ebx
1000163e:	5e                   	pop    esi
1000163f:	5f                   	pop    edi
10001640:	5d                   	pop    ebp
10001641:	c3                   	ret    

10001642 <readUnaligned32(unsigned char*)>:
10001642:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10001646:	8b 00                	mov    eax,DWORD PTR [eax]
10001648:	c3                   	ret    

10001649 <writeUnaligned32(unsigned char*, unsigned int)>:
10001649:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000164d:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10001651:	89 10                	mov    DWORD PTR [eax],edx
10001653:	c3                   	ret    

10001654 <createTightFontRegion(int, int, unsigned char*, int, int)>:
10001654:	55                   	push   ebp
10001655:	57                   	push   edi
10001656:	31 ff                	xor    edi,edi
10001658:	56                   	push   esi
10001659:	53                   	push   ebx
1000165a:	83 ec 68             	sub    esp,0x68
1000165d:	8b 5c 24 7c          	mov    ebx,DWORD PTR [esp+0x7c]
10001661:	8b 84 24 8c 00 00 00 	mov    eax,DWORD PTR [esp+0x8c]
10001668:	c6 43 18 00          	mov    BYTE PTR [ebx+0x18],0x0
1000166c:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
1000166f:	8b 84 24 90 00 00 00 	mov    eax,DWORD PTR [esp+0x90]
10001676:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10001679:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10001680:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
10001683:	8b 84 24 84 00 00 00 	mov    eax,DWORD PTR [esp+0x84]
1000168a:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
1000168d:	6b 84 24 90 00 00 00 11 	imul   eax,DWORD PTR [esp+0x90],0x11
10001695:	8d 04 85 04 00 00 00 	lea    eax,[eax*4+0x4]
1000169c:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
1000169f:	50                   	push   eax
100016a0:	e8 fc ff ff ff       	call   100016a1 <createTightFontRegion(int, int, unsigned char*, int, int)+0x4d>	100016a1: R_386_PC32	malloc
100016a5:	8b ac 24 8c 00 00 00 	mov    ebp,DWORD PTR [esp+0x8c]
100016ac:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100016b0:	89 03                	mov    DWORD PTR [ebx],eax
100016b2:	83 c4 10             	add    esp,0x10
100016b5:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100016b9:	3b bc 24 84 00 00 00 	cmp    edi,DWORD PTR [esp+0x84]
100016c0:	7d 6c                	jge    1000172e <createTightFontRegion(int, int, unsigned char*, int, int)+0xda>
100016c2:	31 f6                	xor    esi,esi
100016c4:	31 c0                	xor    eax,eax
100016c6:	31 c9                	xor    ecx,ecx
100016c8:	3b b4 24 80 00 00 00 	cmp    esi,DWORD PTR [esp+0x80]
100016cf:	7d 24                	jge    100016f5 <createTightFontRegion(int, int, unsigned char*, int, int)+0xa1>
100016d1:	80 7c 35 00 00       	cmp    BYTE PTR [ebp+esi*1+0x0],0x0
100016d6:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
100016da:	0f 95 44 24 0e       	setne  BYTE PTR [esp+0xe]
100016df:	8a 44 24 0e          	mov    al,BYTE PTR [esp+0xe]
100016e3:	38 44 24 0f          	cmp    BYTE PTR [esp+0xf],al
100016e7:	74 05                	je     100016ee <createTightFontRegion(int, int, unsigned char*, int, int)+0x9a>
100016e9:	89 74 8c 10          	mov    DWORD PTR [esp+ecx*4+0x10],esi
100016ed:	41                   	inc    ecx
100016ee:	46                   	inc    esi
100016ef:	8a 44 24 0e          	mov    al,BYTE PTR [esp+0xe]
100016f3:	eb d3                	jmp    100016c8 <createTightFontRegion(int, int, unsigned char*, int, int)+0x74>
100016f5:	84 c0                	test   al,al
100016f7:	74 0c                	je     10001705 <createTightFontRegion(int, int, unsigned char*, int, int)+0xb1>
100016f9:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
10001700:	89 44 8c 10          	mov    DWORD PTR [esp+ecx*4+0x10],eax
10001704:	41                   	inc    ecx
10001705:	89 ce                	mov    esi,ecx
10001707:	81 ce 00 00 01 00    	or     esi,0x10000
1000170d:	89 32                	mov    DWORD PTR [edx],esi
1000170f:	31 f6                	xor    esi,esi
10001711:	39 f1                	cmp    ecx,esi
10001713:	74 0b                	je     10001720 <createTightFontRegion(int, int, unsigned char*, int, int)+0xcc>
10001715:	8b 44 b4 10          	mov    eax,DWORD PTR [esp+esi*4+0x10]
10001719:	89 44 b2 04          	mov    DWORD PTR [edx+esi*4+0x4],eax
1000171d:	46                   	inc    esi
1000171e:	eb f1                	jmp    10001711 <createTightFontRegion(int, int, unsigned char*, int, int)+0xbd>
10001720:	8d 54 8a 04          	lea    edx,[edx+ecx*4+0x4]
10001724:	47                   	inc    edi
10001725:	03 ac 24 80 00 00 00 	add    ebp,DWORD PTR [esp+0x80]
1000172c:	eb 8b                	jmp    100016b9 <createTightFontRegion(int, int, unsigned char*, int, int)+0x65>
1000172e:	c7 02 ff ff ff ff    	mov    DWORD PTR [edx],0xffffffff
10001734:	89 d8                	mov    eax,ebx
10001736:	83 c2 04             	add    edx,0x4
10001739:	2b 54 24 08          	sub    edx,DWORD PTR [esp+0x8]
1000173d:	89 53 0c             	mov    DWORD PTR [ebx+0xc],edx
10001740:	83 c4 5c             	add    esp,0x5c
10001743:	5b                   	pop    ebx
10001744:	5e                   	pop    esi
10001745:	5f                   	pop    edi
10001746:	5d                   	pop    ebp
10001747:	c2 04 00             	ret    0x4

1000174a <createTightCursorRegion(int, int, unsigned int*)>:
1000174a:	55                   	push   ebp
1000174b:	57                   	push   edi
1000174c:	56                   	push   esi
1000174d:	31 f6                	xor    esi,esi
1000174f:	53                   	push   ebx
10001750:	83 ec 68             	sub    esp,0x68
10001753:	8b 5c 24 7c          	mov    ebx,DWORD PTR [esp+0x7c]
10001757:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
1000175e:	c7 43 04 20 00 00 00 	mov    DWORD PTR [ebx+0x4],0x20
10001765:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
10001768:	c7 43 08 20 00 00 00 	mov    DWORD PTR [ebx+0x8],0x20
1000176f:	8b 84 24 84 00 00 00 	mov    eax,DWORD PTR [esp+0x84]
10001776:	c6 43 18 00          	mov    BYTE PTR [ebx+0x18],0x0
1000177a:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
1000177d:	c7 43 0c 84 08 00 00 	mov    DWORD PTR [ebx+0xc],0x884
10001784:	68 84 08 00 00       	push   0x884
10001789:	e8 fc ff ff ff       	call   1000178a <createTightCursorRegion(int, int, unsigned int*)+0x40>	1000178a: R_386_PC32	malloc
1000178e:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001792:	89 03                	mov    DWORD PTR [ebx],eax
10001794:	83 c4 10             	add    esp,0x10
10001797:	89 c1                	mov    ecx,eax
10001799:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
1000179d:	31 ed                	xor    ebp,ebp
1000179f:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
100017a2:	c6 44 24 07 00       	mov    BYTE PTR [esp+0x7],0x0
100017a7:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100017ab:	31 d2                	xor    edx,edx
100017ad:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
100017b1:	8b 84 b0 80 00 00 00 	mov    eax,DWORD PTR [eax+esi*4+0x80]
100017b8:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100017bc:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100017c0:	0b 7c 24 08          	or     edi,DWORD PTR [esp+0x8]
100017c4:	83 e7 01             	and    edi,0x1
100017c7:	89 f8                	mov    eax,edi
100017c9:	3a 44 24 07          	cmp    al,BYTE PTR [esp+0x7]
100017cd:	74 05                	je     100017d4 <createTightCursorRegion(int, int, unsigned int*)+0x8a>
100017cf:	89 6c 94 10          	mov    DWORD PTR [esp+edx*4+0x10],ebp
100017d3:	42                   	inc    edx
100017d4:	d1 6c 24 08          	shr    DWORD PTR [esp+0x8],1
100017d8:	d1 6c 24 0c          	shr    DWORD PTR [esp+0xc],1
100017dc:	45                   	inc    ebp
100017dd:	89 f8                	mov    eax,edi
100017df:	83 fd 20             	cmp    ebp,0x20
100017e2:	88 44 24 07          	mov    BYTE PTR [esp+0x7],al
100017e6:	75 d4                	jne    100017bc <createTightCursorRegion(int, int, unsigned int*)+0x72>
100017e8:	84 c0                	test   al,al
100017ea:	74 09                	je     100017f5 <createTightCursorRegion(int, int, unsigned int*)+0xab>
100017ec:	c7 44 94 10 20 00 00 00 	mov    DWORD PTR [esp+edx*4+0x10],0x20
100017f4:	42                   	inc    edx
100017f5:	89 d7                	mov    edi,edx
100017f7:	8d 69 04             	lea    ebp,[ecx+0x4]
100017fa:	81 cf 00 00 01 00    	or     edi,0x10000
10001800:	89 39                	mov    DWORD PTR [ecx],edi
10001802:	31 ff                	xor    edi,edi
10001804:	39 fa                	cmp    edx,edi
10001806:	74 0b                	je     10001813 <createTightCursorRegion(int, int, unsigned int*)+0xc9>
10001808:	8b 44 bc 10          	mov    eax,DWORD PTR [esp+edi*4+0x10]
1000180c:	89 44 b9 04          	mov    DWORD PTR [ecx+edi*4+0x4],eax
10001810:	47                   	inc    edi
10001811:	eb f1                	jmp    10001804 <createTightCursorRegion(int, int, unsigned int*)+0xba>
10001813:	c1 e2 02             	shl    edx,0x2
10001816:	46                   	inc    esi
10001817:	8d 4c 15 00          	lea    ecx,[ebp+edx*1+0x0]
1000181b:	83 fe 20             	cmp    esi,0x20
1000181e:	8d 54 15 04          	lea    edx,[ebp+edx*1+0x4]
10001822:	0f 85 71 ff ff ff    	jne    10001799 <createTightCursorRegion(int, int, unsigned int*)+0x4f>
10001828:	c7 01 ff ff ff ff    	mov    DWORD PTR [ecx],0xffffffff
1000182e:	2b 14 24             	sub    edx,DWORD PTR [esp]
10001831:	89 d8                	mov    eax,ebx
10001833:	89 53 0c             	mov    DWORD PTR [ebx+0xc],edx
10001836:	83 c4 5c             	add    esp,0x5c
10001839:	5b                   	pop    ebx
1000183a:	5e                   	pop    esi
1000183b:	5f                   	pop    edi
1000183c:	5d                   	pop    ebp
1000183d:	c2 04 00             	ret    0x4

10001840 <createEllipseRegion(int, int, int, int)>:
10001840:	55                   	push   ebp
10001841:	57                   	push   edi
10001842:	56                   	push   esi
10001843:	53                   	push   ebx
10001844:	83 ec 28             	sub    esp,0x28
10001847:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
1000184b:	8b 5c 24 4c          	mov    ebx,DWORD PTR [esp+0x4c]
1000184f:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10001853:	89 5e 08             	mov    DWORD PTR [esi+0x8],ebx
10001856:	89 46 04             	mov    DWORD PTR [esi+0x4],eax
10001859:	c6 46 18 00          	mov    BYTE PTR [esi+0x18],0x0
1000185d:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10001861:	89 46 10             	mov    DWORD PTR [esi+0x10],eax
10001864:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10001868:	89 46 14             	mov    DWORD PTR [esi+0x14],eax
1000186b:	6b c3 0c             	imul   eax,ebx,0xc
1000186e:	83 c0 04             	add    eax,0x4
10001871:	89 46 0c             	mov    DWORD PTR [esi+0xc],eax
10001874:	50                   	push   eax
10001875:	e8 fc ff ff ff       	call   10001876 <createEllipseRegion(int, int, int, int)+0x36>	10001876: R_386_PC32	malloc
1000187a:	83 c4 10             	add    esp,0x10
1000187d:	89 c5                	mov    ebp,eax
1000187f:	89 06                	mov    DWORD PTR [esi],eax
10001881:	85 c0                	test   eax,eax
10001883:	75 10                	jne    10001895 <createEllipseRegion(int, int, int, int)+0x55>
10001885:	83 ec 0c             	sub    esp,0xc
10001888:	68 3f 48 00 10       	push   0x1000483f	10001889: R_386_32	.text
1000188d:	e8 fc ff ff ff       	call   1000188e <createEllipseRegion(int, int, int, int)+0x4e>	1000188e: R_386_PC32	KePanic(char const*)
10001892:	83 c4 10             	add    esp,0x10
10001895:	89 ef                	mov    edi,ebp
10001897:	31 c0                	xor    eax,eax
10001899:	39 d8                	cmp    eax,ebx
1000189b:	0f 8d 88 00 00 00    	jge    10001929 <createEllipseRegion(int, int, int, int)+0xe9>
100018a1:	89 04 24             	mov    DWORD PTR [esp],eax
100018a4:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
100018a8:	db 04 24             	fild   DWORD PTR [esp]
100018ab:	8d 53 ff             	lea    edx,[ebx-0x1]
100018ae:	83 ec 10             	sub    esp,0x10
100018b1:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
100018b5:	d8 c0                	fadd   st,st(0)
100018b7:	83 c7 0c             	add    edi,0xc
100018ba:	da 74 24 10          	fidiv  DWORD PTR [esp+0x10]
100018be:	d9 e8                	fld1   
100018c0:	dc e1                	fsubr  st(1),st
100018c2:	d9 c9                	fxch   st(1)
100018c4:	d8 c8                	fmul   st,st(0)
100018c6:	de e9                	fsubp  st(1),st
100018c8:	dd 1c 24             	fstp   QWORD PTR [esp]
100018cb:	e8 fc ff ff ff       	call   100018cc <createEllipseRegion(int, int, int, int)+0x8c>	100018cc: R_386_PC32	sqrt
100018d0:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100018d4:	d9 7c 24 1e          	fnstcw WORD PTR [esp+0x1e]
100018d8:	db 44 24 4c          	fild   DWORD PTR [esp+0x4c]
100018dc:	66 8b 54 24 1e       	mov    dx,WORD PTR [esp+0x1e]
100018e1:	dc c9                	fmul   st(1),st
100018e3:	80 ce 0c             	or     dh,0xc
100018e6:	d8 e1                	fsub   st,st(1)
100018e8:	66 89 54 24 1c       	mov    WORD PTR [esp+0x1c],dx
100018ed:	d8 0d 48 48 00 10    	fmul   DWORD PTR ds:0x10004848	100018ef: R_386_32	.text
100018f3:	40                   	inc    eax
100018f4:	d9 6c 24 1c          	fldcw  WORD PTR [esp+0x1c]
100018f8:	db 5c 24 18          	fistp  DWORD PTR [esp+0x18]
100018fc:	d9 6c 24 1e          	fldcw  WORD PTR [esp+0x1e]
10001900:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10001904:	c7 47 f4 02 00 01 00 	mov    DWORD PTR [edi-0xc],0x10002
1000190b:	89 57 f8             	mov    DWORD PTR [edi-0x8],edx
1000190e:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10001912:	da 44 24 10          	fiadd  DWORD PTR [esp+0x10]
10001916:	d9 6c 24 1c          	fldcw  WORD PTR [esp+0x1c]
1000191a:	db 5f fc             	fistp  DWORD PTR [edi-0x4]
1000191d:	d9 6c 24 1e          	fldcw  WORD PTR [esp+0x1e]
10001921:	83 c4 10             	add    esp,0x10
10001924:	e9 70 ff ff ff       	jmp    10001899 <createEllipseRegion(int, int, int, int)+0x59>
10001929:	85 db                	test   ebx,ebx
1000192b:	79 02                	jns    1000192f <createEllipseRegion(int, int, int, int)+0xef>
1000192d:	31 db                	xor    ebx,ebx
1000192f:	6b db 0c             	imul   ebx,ebx,0xc
10001932:	89 f0                	mov    eax,esi
10001934:	c7 44 1d 00 ff ff ff ff 	mov    DWORD PTR [ebp+ebx*1+0x0],0xffffffff
1000193c:	83 c4 1c             	add    esp,0x1c
1000193f:	5b                   	pop    ebx
10001940:	5e                   	pop    esi
10001941:	5f                   	pop    edi
10001942:	5d                   	pop    ebp
10001943:	c2 04 00             	ret    0x4

10001946 <createPolygonRegion(int*, int*, int)>:
10001946:	55                   	push   ebp
10001947:	57                   	push   edi
10001948:	56                   	push   esi
10001949:	53                   	push   ebx
1000194a:	51                   	push   ecx
1000194b:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
1000194f:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10001953:	8b 0e                	mov    ecx,DWORD PTR [esi]
10001955:	8b 17                	mov    edx,DWORD PTR [edi]
10001957:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000195b:	89 14 24             	mov    DWORD PTR [esp],edx
1000195e:	89 cb                	mov    ebx,ecx
10001960:	31 f6                	xor    esi,esi
10001962:	3b 74 24 24          	cmp    esi,DWORD PTR [esp+0x24]
10001966:	7d 2b                	jge    10001993 <createPolygonRegion(int*, int*, int)+0x4d>
10001968:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
1000196c:	8b 2c b7             	mov    ebp,DWORD PTR [edi+esi*4]
1000196f:	39 e9                	cmp    ecx,ebp
10001971:	7e 02                	jle    10001975 <createPolygonRegion(int*, int*, int)+0x2f>
10001973:	89 e9                	mov    ecx,ebp
10001975:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10001979:	8b 3c b7             	mov    edi,DWORD PTR [edi+esi*4]
1000197c:	39 fa                	cmp    edx,edi
1000197e:	7e 02                	jle    10001982 <createPolygonRegion(int*, int*, int)+0x3c>
10001980:	89 fa                	mov    edx,edi
10001982:	39 eb                	cmp    ebx,ebp
10001984:	7d 02                	jge    10001988 <createPolygonRegion(int*, int*, int)+0x42>
10001986:	89 eb                	mov    ebx,ebp
10001988:	39 3c 24             	cmp    DWORD PTR [esp],edi
1000198b:	7d 03                	jge    10001990 <createPolygonRegion(int*, int*, int)+0x4a>
1000198d:	89 3c 24             	mov    DWORD PTR [esp],edi
10001990:	46                   	inc    esi
10001991:	eb cf                	jmp    10001962 <createPolygonRegion(int*, int*, int)+0x1c>
10001993:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10001999:	c7 40 0c 00 00 00 00 	mov    DWORD PTR [eax+0xc],0x0
100019a0:	89 48 10             	mov    DWORD PTR [eax+0x10],ecx
100019a3:	89 50 14             	mov    DWORD PTR [eax+0x14],edx
100019a6:	c6 40 18 00          	mov    BYTE PTR [eax+0x18],0x0
100019aa:	29 cb                	sub    ebx,ecx
100019ac:	89 58 04             	mov    DWORD PTR [eax+0x4],ebx
100019af:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
100019b2:	29 d3                	sub    ebx,edx
100019b4:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
100019b7:	5a                   	pop    edx
100019b8:	5b                   	pop    ebx
100019b9:	5e                   	pop    esi
100019ba:	5f                   	pop    edi
100019bb:	5d                   	pop    ebp
100019bc:	c2 04 00             	ret    0x4

100019bf <createRectangleRegion(int, int, int, int)>:
100019bf:	57                   	push   edi
100019c0:	56                   	push   esi
100019c1:	53                   	push   ebx
100019c2:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100019c6:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100019ca:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
100019ce:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100019d2:	89 7b 04             	mov    DWORD PTR [ebx+0x4],edi
100019d5:	89 73 08             	mov    DWORD PTR [ebx+0x8],esi
100019d8:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
100019db:	c6 43 18 00          	mov    BYTE PTR [ebx+0x18],0x0
100019df:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100019e3:	c7 43 0c 10 00 00 00 	mov    DWORD PTR [ebx+0xc],0x10
100019ea:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
100019ed:	83 ec 0c             	sub    esp,0xc
100019f0:	c1 e6 10             	shl    esi,0x10
100019f3:	6a 10                	push   0x10
100019f5:	83 ce 02             	or     esi,0x2
100019f8:	e8 fc ff ff ff       	call   100019f9 <createRectangleRegion(int, int, int, int)+0x3a>	100019f9: R_386_PC32	malloc
100019fd:	83 c4 10             	add    esp,0x10
10001a00:	89 03                	mov    DWORD PTR [ebx],eax
10001a02:	89 30                	mov    DWORD PTR [eax],esi
10001a04:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
10001a0b:	89 78 08             	mov    DWORD PTR [eax+0x8],edi
10001a0e:	c7 40 0c ff ff ff ff 	mov    DWORD PTR [eax+0xc],0xffffffff
10001a15:	89 d8                	mov    eax,ebx
10001a17:	5b                   	pop    ebx
10001a18:	5e                   	pop    esi
10001a19:	5f                   	pop    edi
10001a1a:	c2 04 00             	ret    0x4

10001a1d <createBorderRegion(int, int, int, int, int)>:
10001a1d:	55                   	push   ebp
10001a1e:	57                   	push   edi
10001a1f:	56                   	push   esi
10001a20:	53                   	push   ebx
10001a21:	83 ec 18             	sub    esp,0x18
10001a24:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10001a28:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10001a2c:	8b 6c 24 40          	mov    ebp,DWORD PTR [esp+0x40]
10001a30:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
10001a34:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001a38:	89 7b 04             	mov    DWORD PTR [ebx+0x4],edi
10001a3b:	89 73 08             	mov    DWORD PTR [ebx+0x8],esi
10001a3e:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
10001a41:	c6 43 18 00          	mov    BYTE PTR [ebx+0x18],0x0
10001a45:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10001a49:	c7 43 0c 30 00 00 00 	mov    DWORD PTR [ebx+0xc],0x30
10001a50:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
10001a53:	6a 30                	push   0x30
10001a55:	e8 fc ff ff ff       	call   10001a56 <createBorderRegion(int, int, int, int, int)+0x39>	10001a56: R_386_PC32	malloc
10001a5a:	8d 4c 2d 00          	lea    ecx,[ebp+ebp*1+0x0]
10001a5e:	89 03                	mov    DWORD PTR [ebx],eax
10001a60:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
10001a67:	89 78 08             	mov    DWORD PTR [eax+0x8],edi
10001a6a:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
10001a71:	89 68 14             	mov    DWORD PTR [eax+0x14],ebp
10001a74:	89 78 1c             	mov    DWORD PTR [eax+0x1c],edi
10001a77:	c7 40 24 00 00 00 00 	mov    DWORD PTR [eax+0x24],0x0
10001a7e:	89 78 28             	mov    DWORD PTR [eax+0x28],edi
10001a81:	c7 40 2c ff ff ff ff 	mov    DWORD PTR [eax+0x2c],0xffffffff
10001a88:	89 ea                	mov    edx,ebp
10001a8a:	29 ce                	sub    esi,ecx
10001a8c:	c1 e2 10             	shl    edx,0x10
10001a8f:	89 f9                	mov    ecx,edi
10001a91:	83 ca 02             	or     edx,0x2
10001a94:	29 e9                	sub    ecx,ebp
10001a96:	89 10                	mov    DWORD PTR [eax],edx
10001a98:	89 48 18             	mov    DWORD PTR [eax+0x18],ecx
10001a9b:	89 50 20             	mov    DWORD PTR [eax+0x20],edx
10001a9e:	c1 e6 10             	shl    esi,0x10
10001aa1:	83 ce 04             	or     esi,0x4
10001aa4:	89 70 0c             	mov    DWORD PTR [eax+0xc],esi
10001aa7:	83 c4 1c             	add    esp,0x1c
10001aaa:	89 d8                	mov    eax,ebx
10001aac:	5b                   	pop    ebx
10001aad:	5e                   	pop    esi
10001aae:	5f                   	pop    edi
10001aaf:	5d                   	pop    ebp
10001ab0:	c2 04 00             	ret    0x4

10001ab3 <createAntRegion(int, int, int, int, int)>:
10001ab3:	53                   	push   ebx
10001ab4:	83 ec 10             	sub    esp,0x10
10001ab7:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10001abb:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10001abf:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10001ac3:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10001ac7:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10001acb:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10001acf:	53                   	push   ebx
10001ad0:	e8 fc ff ff ff       	call   10001ad1 <createAntRegion(int, int, int, int, int)+0x1e>	10001ad1: R_386_PC32	createBorderRegion(int, int, int, int, int)
10001ad5:	c6 43 18 01          	mov    BYTE PTR [ebx+0x18],0x1
10001ad9:	89 d8                	mov    eax,ebx
10001adb:	83 c4 24             	add    esp,0x24
10001ade:	5b                   	pop    ebx
10001adf:	c2 04 00             	ret    0x4

10001ae2 <compressScanlineAndAddToRegion(Region*, int, unsigned int*, unsigned int, unsigned int)>:
10001ae2:	57                   	push   edi
10001ae3:	56                   	push   esi
10001ae4:	be 04 00 00 00       	mov    esi,0x4
10001ae9:	53                   	push   ebx
10001aea:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10001aee:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10001af2:	8b 18                	mov    ebx,DWORD PTR [eax]
10001af4:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10001af8:	99                   	cdq    
10001af9:	f7 fe                	idiv   esi
10001afb:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
10001aff:	8d 7c 83 04          	lea    edi,[ebx+eax*4+0x4]
10001b03:	c1 e2 10             	shl    edx,0x10
10001b06:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
10001b0a:	09 ca                	or     edx,ecx
10001b0c:	89 14 83             	mov    DWORD PTR [ebx+eax*4],edx
10001b0f:	8d 14 8d 00 00 00 00 	lea    edx,[ecx*4+0x0]
10001b16:	89 d1                	mov    ecx,edx
10001b18:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10001b1a:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10001b1e:	5b                   	pop    ebx
10001b1f:	8d 44 02 04          	lea    eax,[edx+eax*1+0x4]
10001b23:	5e                   	pop    esi
10001b24:	5f                   	pop    edi
10001b25:	c3                   	ret    

10001b26 <performRegionOperation(Region, Region, RegionOperation)>:
10001b26:	55                   	push   ebp
10001b27:	57                   	push   edi
10001b28:	56                   	push   esi
10001b29:	53                   	push   ebx
10001b2a:	81 ec 7c 20 00 00    	sub    esp,0x207c
10001b30:	8b 84 24 94 20 00 00 	mov    eax,DWORD PTR [esp+0x2094]
10001b37:	8b b4 24 b0 20 00 00 	mov    esi,DWORD PTR [esp+0x20b0]
10001b3e:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001b42:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
10001b46:	8b 84 24 9c 20 00 00 	mov    eax,DWORD PTR [esp+0x209c]
10001b4d:	8b b4 24 b8 20 00 00 	mov    esi,DWORD PTR [esp+0x20b8]
10001b54:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10001b58:	89 74 24 48          	mov    DWORD PTR [esp+0x48],esi
10001b5c:	8b 84 24 a0 20 00 00 	mov    eax,DWORD PTR [esp+0x20a0]
10001b63:	8b b4 24 bc 20 00 00 	mov    esi,DWORD PTR [esp+0x20bc]
10001b6a:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10001b6e:	8b 94 24 c0 20 00 00 	mov    edx,DWORD PTR [esp+0x20c0]
10001b75:	8b 84 24 a4 20 00 00 	mov    eax,DWORD PTR [esp+0x20a4]
10001b7c:	8b ac 24 90 20 00 00 	mov    ebp,DWORD PTR [esp+0x2090]
10001b83:	8b 8c 24 a8 20 00 00 	mov    ecx,DWORD PTR [esp+0x20a8]
10001b8a:	89 74 24 1c          	mov    DWORD PTR [esp+0x1c],esi
10001b8e:	8b 9c 24 c4 20 00 00 	mov    ebx,DWORD PTR [esp+0x20c4]
10001b95:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10001b99:	39 d0                	cmp    eax,edx
10001b9b:	7e 04                	jle    10001ba1 <performRegionOperation(Region, Region, RegionOperation)+0x7b>
10001b9d:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
10001ba1:	89 ce                	mov    esi,ecx
10001ba3:	39 d9                	cmp    ecx,ebx
10001ba5:	7e 02                	jle    10001ba9 <performRegionOperation(Region, Region, RegionOperation)+0x83>
10001ba7:	89 de                	mov    esi,ebx
10001ba9:	8b bc 24 98 20 00 00 	mov    edi,DWORD PTR [esp+0x2098]
10001bb0:	01 c7                	add    edi,eax
10001bb2:	89 7c 24 08          	mov    DWORD PTR [esp+0x8],edi
10001bb6:	8b bc 24 b4 20 00 00 	mov    edi,DWORD PTR [esp+0x20b4]
10001bbd:	01 d7                	add    edi,edx
10001bbf:	3b 7c 24 08          	cmp    edi,DWORD PTR [esp+0x8]
10001bc3:	7d 04                	jge    10001bc9 <performRegionOperation(Region, Region, RegionOperation)+0xa3>
10001bc5:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10001bc9:	2b 7c 24 04          	sub    edi,DWORD PTR [esp+0x4]
10001bcd:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10001bd1:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
10001bd5:	01 cf                	add    edi,ecx
10001bd7:	89 7c 24 08          	mov    DWORD PTR [esp+0x8],edi
10001bdb:	8b 7c 24 48          	mov    edi,DWORD PTR [esp+0x48]
10001bdf:	01 df                	add    edi,ebx
10001be1:	3b 7c 24 08          	cmp    edi,DWORD PTR [esp+0x8]
10001be5:	7d 04                	jge    10001beb <performRegionOperation(Region, Region, RegionOperation)+0xc5>
10001be7:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10001beb:	29 f7                	sub    edi,esi
10001bed:	39 d9                	cmp    ecx,ebx
10001bef:	89 7c 24 3c          	mov    DWORD PTR [esp+0x3c],edi
10001bf3:	7c 10                	jl     10001c05 <performRegionOperation(Region, Region, RegionOperation)+0xdf>
10001bf5:	89 cf                	mov    edi,ecx
10001bf7:	29 df                	sub    edi,ebx
10001bf9:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10001bfd:	31 ff                	xor    edi,edi
10001bff:	39 d9                	cmp    ecx,ebx
10001c01:	75 0e                	jne    10001c11 <performRegionOperation(Region, Region, RegionOperation)+0xeb>
10001c03:	eb 08                	jmp    10001c0d <performRegionOperation(Region, Region, RegionOperation)+0xe7>
10001c05:	c7 44 24 20 00 00 00 00 	mov    DWORD PTR [esp+0x20],0x0
10001c0d:	29 cb                	sub    ebx,ecx
10001c0f:	89 df                	mov    edi,ebx
10001c11:	39 d0                	cmp    eax,edx
10001c13:	7c 16                	jl     10001c2b <performRegionOperation(Region, Region, RegionOperation)+0x105>
10001c15:	89 c3                	mov    ebx,eax
10001c17:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10001c1f:	29 d3                	sub    ebx,edx
10001c21:	39 d0                	cmp    eax,edx
10001c23:	89 5c 24 44          	mov    DWORD PTR [esp+0x44],ebx
10001c27:	75 10                	jne    10001c39 <performRegionOperation(Region, Region, RegionOperation)+0x113>
10001c29:	eb 08                	jmp    10001c33 <performRegionOperation(Region, Region, RegionOperation)+0x10d>
10001c2b:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
10001c33:	29 c2                	sub    edx,eax
10001c35:	89 54 24 38          	mov    DWORD PTR [esp+0x38],edx
10001c39:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001c3d:	89 75 14             	mov    DWORD PTR [ebp+0x14],esi
10001c40:	89 45 04             	mov    DWORD PTR [ebp+0x4],eax
10001c43:	c6 45 18 00          	mov    BYTE PTR [ebp+0x18],0x0
10001c47:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10001c4b:	89 45 08             	mov    DWORD PTR [ebp+0x8],eax
10001c4e:	f7 df                	neg    edi
10001c50:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10001c54:	89 45 10             	mov    DWORD PTR [ebp+0x10],eax
10001c57:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10001c5b:	03 44 24 1c          	add    eax,DWORD PTR [esp+0x1c]
10001c5f:	c1 e0 02             	shl    eax,0x2
10001c62:	89 45 0c             	mov    DWORD PTR [ebp+0xc],eax
10001c65:	51                   	push   ecx
10001c66:	51                   	push   ecx
10001c67:	6a 01                	push   0x1
10001c69:	50                   	push   eax
10001c6a:	e8 fc ff ff ff       	call   10001c6b <performRegionOperation(Region, Region, RegionOperation)+0x145>	10001c6b: R_386_PC32	calloc
10001c6f:	c7 44 24 78 00 00 00 00 	mov    DWORD PTR [esp+0x78],0x0
10001c77:	c7 44 24 7c 00 00 00 00 	mov    DWORD PTR [esp+0x7c],0x0
10001c7f:	c7 84 24 80 08 00 00 ff ff ff ff 	mov    DWORD PTR [esp+0x880],0xffffffff
10001c8a:	89 7c 24 34          	mov    DWORD PTR [esp+0x34],edi
10001c8e:	89 45 00             	mov    DWORD PTR [ebp+0x0],eax
10001c91:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10001c95:	89 44 24 68          	mov    DWORD PTR [esp+0x68],eax
10001c99:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10001c9d:	89 44 24 6c          	mov    DWORD PTR [esp+0x6c],eax
10001ca1:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001ca5:	f7 d8                	neg    eax
10001ca7:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001cab:	83 c4 10             	add    esp,0x10
10001cae:	c7 44 24 10 ff ff ff ff 	mov    DWORD PTR [esp+0x10],0xffffffff
10001cb6:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
10001cbe:	c7 44 24 08 00 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
10001cc6:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10001cca:	03 44 24 1c          	add    eax,DWORD PTR [esp+0x1c]
10001cce:	39 44 24 3c          	cmp    DWORD PTR [esp+0x3c],eax
10001cd2:	0f 8e cc 01 00 00    	jle    10001ea4 <performRegionOperation(Region, Region, RegionOperation)+0x37e>
10001cd8:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
10001cdc:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10001ce0:	f7 d2                	not    edx
10001ce2:	c1 ea 1f             	shr    edx,0x1f
10001ce5:	39 74 24 40          	cmp    DWORD PTR [esp+0x40],esi
10001ce9:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
10001ced:	0f 9f c0             	setg   al
10001cf0:	21 d0                	and    eax,edx
10001cf2:	39 74 24 48          	cmp    DWORD PTR [esp+0x48],esi
10001cf6:	88 44 24 56          	mov    BYTE PTR [esp+0x56],al
10001cfa:	89 f2                	mov    edx,esi
10001cfc:	0f 9f c0             	setg   al
10001cff:	f7 d2                	not    edx
10001d01:	31 db                	xor    ebx,ebx
10001d03:	c1 ea 1f             	shr    edx,0x1f
10001d06:	21 d0                	and    eax,edx
10001d08:	88 44 24 57          	mov    BYTE PTR [esp+0x57],al
10001d0c:	80 7c 1c 56 00       	cmp    BYTE PTR [esp+ebx*1+0x56],0x0
10001d11:	75 0a                	jne    10001d1d <performRegionOperation(Region, Region, RegionOperation)+0x1f7>
10001d13:	c7 44 9c 68 00 00 00 00 	mov    DWORD PTR [esp+ebx*4+0x68],0x0
10001d1b:	eb 1b                	jmp    10001d38 <performRegionOperation(Region, Region, RegionOperation)+0x212>
10001d1d:	83 7c 9c 68 00       	cmp    DWORD PTR [esp+ebx*4+0x68],0x0
10001d22:	75 14                	jne    10001d38 <performRegionOperation(Region, Region, RegionOperation)+0x212>
10001d24:	8b 4c 9c 58          	mov    ecx,DWORD PTR [esp+ebx*4+0x58]
10001d28:	8b 01                	mov    eax,DWORD PTR [ecx]
10001d2a:	83 f8 ff             	cmp    eax,0xffffffff
10001d2d:	0f 85 a5 01 00 00    	jne    10001ed8 <performRegionOperation(Region, Region, RegionOperation)+0x3b2>
10001d33:	c6 44 1c 56 00       	mov    BYTE PTR [esp+ebx*1+0x56],0x0
10001d38:	83 fb 01             	cmp    ebx,0x1
10001d3b:	74 07                	je     10001d44 <performRegionOperation(Region, Region, RegionOperation)+0x21e>
10001d3d:	bb 01 00 00 00       	mov    ebx,0x1
10001d42:	eb c8                	jmp    10001d0c <performRegionOperation(Region, Region, RegionOperation)+0x1e6>
10001d44:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
10001d48:	c6 44 24 4e 01       	mov    BYTE PTR [esp+0x4e],0x1
10001d4d:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10001d51:	c6 44 24 4d 00       	mov    BYTE PTR [esp+0x4d],0x0
10001d56:	83 7c 24 28 00       	cmp    DWORD PTR [esp+0x28],0x0
10001d5b:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10001d5f:	0f 95 44 24 4f       	setne  BYTE PTR [esp+0x4f]
10001d64:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001d68:	31 f6                	xor    esi,esi
10001d6a:	8b 44 24 6c          	mov    eax,DWORD PTR [esp+0x6c]
10001d6e:	c7 44 24 14 00 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
10001d76:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10001d7a:	c7 44 24 18 00 00 00 00 	mov    DWORD PTR [esp+0x18],0x0
10001d82:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10001d86:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
10001d8e:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001d92:	31 c0                	xor    eax,eax
10001d94:	83 7c 24 28 00       	cmp    DWORD PTR [esp+0x28],0x0
10001d99:	74 0a                	je     10001da5 <performRegionOperation(Region, Region, RegionOperation)+0x27f>
10001d9b:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10001d9f:	39 54 24 2c          	cmp    DWORD PTR [esp+0x2c],edx
10001da3:	7f 22                	jg     10001dc7 <performRegionOperation(Region, Region, RegionOperation)+0x2a1>
10001da5:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
10001daa:	74 62                	je     10001e0e <performRegionOperation(Region, Region, RegionOperation)+0x2e8>
10001dac:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10001db0:	39 54 24 34          	cmp    DWORD PTR [esp+0x34],edx
10001db4:	7e 58                	jle    10001e0e <performRegionOperation(Region, Region, RegionOperation)+0x2e8>
10001db6:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10001dba:	39 54 24 2c          	cmp    DWORD PTR [esp+0x2c],edx
10001dbe:	7e 2e                	jle    10001dee <performRegionOperation(Region, Region, RegionOperation)+0x2c8>
10001dc0:	80 7c 24 4f 00       	cmp    BYTE PTR [esp+0x4f],0x0
10001dc5:	74 27                	je     10001dee <performRegionOperation(Region, Region, RegionOperation)+0x2c8>
10001dc7:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
10001dcb:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10001dcf:	03 8c 94 70 10 00 00 	add    ecx,DWORD PTR [esp+edx*4+0x1070]
10001dd6:	83 ca ff             	or     edx,0xffffffff
10001dd9:	89 cf                	mov    edi,ecx
10001ddb:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10001ddf:	39 4c 24 34          	cmp    DWORD PTR [esp+0x34],ecx
10001de3:	7e 1b                	jle    10001e00 <performRegionOperation(Region, Region, RegionOperation)+0x2da>
10001de5:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
10001dea:	74 14                	je     10001e00 <performRegionOperation(Region, Region, RegionOperation)+0x2da>
10001dec:	eb 03                	jmp    10001df1 <performRegionOperation(Region, Region, RegionOperation)+0x2cb>
10001dee:	83 cf ff             	or     edi,0xffffffff
10001df1:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10001df5:	8b 54 24 38          	mov    edx,DWORD PTR [esp+0x38]
10001df9:	03 94 8c 70 18 00 00 	add    edx,DWORD PTR [esp+ecx*4+0x1870]
10001e00:	83 ff ff             	cmp    edi,0xffffffff
10001e03:	0f 85 9e 01 00 00    	jne    10001fa7 <performRegionOperation(Region, Region, RegionOperation)+0x481>
10001e09:	e9 18 01 00 00       	jmp    10001f26 <performRegionOperation(Region, Region, RegionOperation)+0x400>
10001e0e:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
10001e12:	39 74 24 10          	cmp    DWORD PTR [esp+0x10],esi
10001e16:	75 16                	jne    10001e2e <performRegionOperation(Region, Region, RegionOperation)+0x308>
10001e18:	80 7c 24 4e 00       	cmp    BYTE PTR [esp+0x4e],0x0
10001e1d:	74 0f                	je     10001e2e <performRegionOperation(Region, Region, RegionOperation)+0x308>
10001e1f:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
10001e23:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10001e27:	43                   	inc    ebx
10001e28:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10001e2c:	eb 43                	jmp    10001e71 <performRegionOperation(Region, Region, RegionOperation)+0x34b>
10001e2e:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
10001e33:	74 24                	je     10001e59 <performRegionOperation(Region, Region, RegionOperation)+0x333>
10001e35:	83 ec 0c             	sub    esp,0xc
10001e38:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
10001e3c:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10001e40:	8d 84 24 84 08 00 00 	lea    eax,[esp+0x884]
10001e47:	50                   	push   eax
10001e48:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10001e4c:	55                   	push   ebp
10001e4d:	e8 fc ff ff ff       	call   10001e4e <performRegionOperation(Region, Region, RegionOperation)+0x328>	10001e4e: R_386_PC32	compressScanlineAndAddToRegion(Region*, int, unsigned int*, unsigned int, unsigned int)
10001e52:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10001e56:	83 c4 20             	add    esp,0x20
10001e59:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10001e5d:	8d 74 24 70          	lea    esi,[esp+0x70]
10001e61:	8d bc 24 70 08 00 00 	lea    edi,[esp+0x870]
10001e68:	8d 0c 85 00 00 00 00 	lea    ecx,[eax*4+0x0]
10001e6f:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10001e71:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
10001e75:	85 c0                	test   eax,eax
10001e77:	74 05                	je     10001e7e <performRegionOperation(Region, Region, RegionOperation)+0x358>
10001e79:	48                   	dec    eax
10001e7a:	89 44 24 68          	mov    DWORD PTR [esp+0x68],eax
10001e7e:	8b 44 24 6c          	mov    eax,DWORD PTR [esp+0x6c]
10001e82:	85 c0                	test   eax,eax
10001e84:	74 05                	je     10001e8b <performRegionOperation(Region, Region, RegionOperation)+0x365>
10001e86:	48                   	dec    eax
10001e87:	89 44 24 6c          	mov    DWORD PTR [esp+0x6c],eax
10001e8b:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10001e8f:	ff 44 24 1c          	inc    DWORD PTR [esp+0x1c]
10001e93:	ff 44 24 24          	inc    DWORD PTR [esp+0x24]
10001e97:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001e9b:	89 5c 24 0c          	mov    DWORD PTR [esp+0xc],ebx
10001e9f:	e9 22 fe ff ff       	jmp    10001cc6 <performRegionOperation(Region, Region, RegionOperation)+0x1a0>
10001ea4:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
10001ea9:	0f 84 2f 01 00 00    	je     10001fde <performRegionOperation(Region, Region, RegionOperation)+0x4b8>
10001eaf:	83 ec 0c             	sub    esp,0xc
10001eb2:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
10001eb6:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10001eba:	8d 84 24 84 08 00 00 	lea    eax,[esp+0x884]
10001ec1:	50                   	push   eax
10001ec2:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10001ec6:	55                   	push   ebp
10001ec7:	e8 fc ff ff ff       	call   10001ec8 <performRegionOperation(Region, Region, RegionOperation)+0x3a2>	10001ec8: R_386_PC32	compressScanlineAndAddToRegion(Region*, int, unsigned int*, unsigned int, unsigned int)
10001ecc:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10001ed0:	83 c4 20             	add    esp,0x20
10001ed3:	e9 06 01 00 00       	jmp    10001fde <performRegionOperation(Region, Region, RegionOperation)+0x4b8>
10001ed8:	0f b7 d0             	movzx  edx,ax
10001edb:	83 c1 04             	add    ecx,0x4
10001ede:	c1 e8 10             	shr    eax,0x10
10001ee1:	89 54 9c 60          	mov    DWORD PTR [esp+ebx*4+0x60],edx
10001ee5:	89 44 9c 68          	mov    DWORD PTR [esp+ebx*4+0x68],eax
10001ee9:	89 4c 9c 58          	mov    DWORD PTR [esp+ebx*4+0x58],ecx
10001eed:	89 d8                	mov    eax,ebx
10001eef:	8d b4 24 70 10 00 00 	lea    esi,[esp+0x1070]
10001ef6:	c1 e0 0b             	shl    eax,0xb
10001ef9:	89 d9                	mov    ecx,ebx
10001efb:	01 f0                	add    eax,esi
10001efd:	c1 e1 09             	shl    ecx,0x9
10001f00:	01 ca                	add    edx,ecx
10001f02:	8d 8c 94 70 10 00 00 	lea    ecx,[esp+edx*4+0x1070]
10001f09:	39 c8                	cmp    eax,ecx
10001f0b:	0f 84 27 fe ff ff    	je     10001d38 <performRegionOperation(Region, Region, RegionOperation)+0x212>
10001f11:	8b 54 9c 58          	mov    edx,DWORD PTR [esp+ebx*4+0x58]
10001f15:	83 c0 04             	add    eax,0x4
10001f18:	8b 32                	mov    esi,DWORD PTR [edx]
10001f1a:	83 c2 04             	add    edx,0x4
10001f1d:	89 70 fc             	mov    DWORD PTR [eax-0x4],esi
10001f20:	89 54 9c 58          	mov    DWORD PTR [esp+ebx*4+0x58],edx
10001f24:	eb e3                	jmp    10001f09 <performRegionOperation(Region, Region, RegionOperation)+0x3e3>
10001f26:	31 c0                	xor    eax,eax
10001f28:	83 fa ff             	cmp    edx,0xffffffff
10001f2b:	74 0b                	je     10001f38 <performRegionOperation(Region, Region, RegionOperation)+0x412>
10001f2d:	83 f6 01             	xor    esi,0x1
10001f30:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
10001f34:	89 d7                	mov    edi,edx
10001f36:	eb 02                	jmp    10001f3a <performRegionOperation(Region, Region, RegionOperation)+0x414>
10001f38:	31 f6                	xor    esi,esi
10001f3a:	89 f2                	mov    edx,esi
10001f3c:	21 c2                	and    edx,eax
10001f3e:	83 bc 24 cc 20 00 00 01 	cmp    DWORD PTR [esp+0x20cc],0x1
10001f46:	74 2f                	je     10001f77 <performRegionOperation(Region, Region, RegionOperation)+0x451>
10001f48:	89 f2                	mov    edx,esi
10001f4a:	7f 0c                	jg     10001f58 <performRegionOperation(Region, Region, RegionOperation)+0x432>
10001f4c:	09 c2                	or     edx,eax
10001f4e:	83 bc 24 cc 20 00 00 00 	cmp    DWORD PTR [esp+0x20cc],0x0
10001f56:	eb 14                	jmp    10001f6c <performRegionOperation(Region, Region, RegionOperation)+0x446>
10001f58:	83 bc 24 cc 20 00 00 02 	cmp    DWORD PTR [esp+0x20cc],0x2
10001f60:	74 10                	je     10001f72 <performRegionOperation(Region, Region, RegionOperation)+0x44c>
10001f62:	31 c2                	xor    edx,eax
10001f64:	83 bc 24 cc 20 00 00 03 	cmp    DWORD PTR [esp+0x20cc],0x3
10001f6c:	74 09                	je     10001f77 <performRegionOperation(Region, Region, RegionOperation)+0x451>
10001f6e:	88 c2                	mov    dl,al
10001f70:	eb 05                	jmp    10001f77 <performRegionOperation(Region, Region, RegionOperation)+0x451>
10001f72:	83 f2 01             	xor    edx,0x1
10001f75:	21 c2                	and    edx,eax
10001f77:	38 54 24 4d          	cmp    BYTE PTR [esp+0x4d],dl
10001f7b:	75 09                	jne    10001f86 <performRegionOperation(Region, Region, RegionOperation)+0x460>
10001f7d:	88 54 24 4d          	mov    BYTE PTR [esp+0x4d],dl
10001f81:	e9 0e fe ff ff       	jmp    10001d94 <performRegionOperation(Region, Region, RegionOperation)+0x26e>
10001f86:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10001f8a:	39 bc 8c 70 08 00 00 	cmp    DWORD PTR [esp+ecx*4+0x870],edi
10001f91:	74 05                	je     10001f98 <performRegionOperation(Region, Region, RegionOperation)+0x472>
10001f93:	c6 44 24 4e 00       	mov    BYTE PTR [esp+0x4e],0x0
10001f98:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10001f9c:	89 7c 8c 70          	mov    DWORD PTR [esp+ecx*4+0x70],edi
10001fa0:	41                   	inc    ecx
10001fa1:	89 4c 24 04          	mov    DWORD PTR [esp+0x4],ecx
10001fa5:	eb d6                	jmp    10001f7d <performRegionOperation(Region, Region, RegionOperation)+0x457>
10001fa7:	83 fa ff             	cmp    edx,0xffffffff
10001faa:	74 0a                	je     10001fb6 <performRegionOperation(Region, Region, RegionOperation)+0x490>
10001fac:	39 d7                	cmp    edi,edx
10001fae:	0f 8f 79 ff ff ff    	jg     10001f2d <performRegionOperation(Region, Region, RegionOperation)+0x407>
10001fb4:	eb 02                	jmp    10001fb8 <performRegionOperation(Region, Region, RegionOperation)+0x492>
10001fb6:	31 f6                	xor    esi,esi
10001fb8:	83 f0 01             	xor    eax,0x1
10001fbb:	ff 44 24 18          	inc    DWORD PTR [esp+0x18]
10001fbf:	83 fa ff             	cmp    edx,0xffffffff
10001fc2:	0f 84 72 ff ff ff    	je     10001f3a <performRegionOperation(Region, Region, RegionOperation)+0x414>
10001fc8:	39 d7                	cmp    edi,edx
10001fca:	0f 8d 5d ff ff ff    	jge    10001f2d <performRegionOperation(Region, Region, RegionOperation)+0x407>
10001fd0:	83 ff ff             	cmp    edi,0xffffffff
10001fd3:	0f 85 61 ff ff ff    	jne    10001f3a <performRegionOperation(Region, Region, RegionOperation)+0x414>
10001fd9:	e9 4f ff ff ff       	jmp    10001f2d <performRegionOperation(Region, Region, RegionOperation)+0x407>
10001fde:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10001fe2:	8b 4d 00             	mov    ecx,DWORD PTR [ebp+0x0]
10001fe5:	89 45 0c             	mov    DWORD PTR [ebp+0xc],eax
10001fe8:	bb 04 00 00 00       	mov    ebx,0x4
10001fed:	99                   	cdq    
10001fee:	f7 fb                	idiv   ebx
10001ff0:	c7 04 81 ff ff ff ff 	mov    DWORD PTR [ecx+eax*4],0xffffffff
10001ff7:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10001ffa:	83 c0 04             	add    eax,0x4
10001ffd:	89 45 0c             	mov    DWORD PTR [ebp+0xc],eax
10002000:	52                   	push   edx
10002001:	52                   	push   edx
10002002:	50                   	push   eax
10002003:	51                   	push   ecx
10002004:	e8 fc ff ff ff       	call   10002005 <performRegionOperation(Region, Region, RegionOperation)+0x4df>	10002005: R_386_PC32	realloc
10002009:	89 45 00             	mov    DWORD PTR [ebp+0x0],eax
1000200c:	81 c4 8c 20 00 00    	add    esp,0x208c
10002012:	89 e8                	mov    eax,ebp
10002014:	5b                   	pop    ebx
10002015:	5e                   	pop    esi
10002016:	5f                   	pop    edi
10002017:	5d                   	pop    ebp
10002018:	c2 04 00             	ret    0x4

1000201b <getRegionUnion(Region, Region)>:
1000201b:	57                   	push   edi
1000201c:	b9 07 00 00 00       	mov    ecx,0x7
10002021:	56                   	push   esi
10002022:	53                   	push   ebx
10002023:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002027:	6a 00                	push   0x0
10002029:	83 ec 1c             	sub    esp,0x1c
1000202c:	8d 74 24 50          	lea    esi,[esp+0x50]
10002030:	89 e7                	mov    edi,esp
10002032:	83 ec 1c             	sub    esp,0x1c
10002035:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002037:	8d 74 24 50          	lea    esi,[esp+0x50]
1000203b:	89 e7                	mov    edi,esp
1000203d:	b9 07 00 00 00       	mov    ecx,0x7
10002042:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002044:	53                   	push   ebx
10002045:	e8 fc ff ff ff       	call   10002046 <getRegionUnion(Region, Region)+0x2b>	10002046: R_386_PC32	performRegionOperation(Region, Region, RegionOperation)
1000204a:	89 d8                	mov    eax,ebx
1000204c:	83 c4 3c             	add    esp,0x3c
1000204f:	5b                   	pop    ebx
10002050:	5e                   	pop    esi
10002051:	5f                   	pop    edi
10002052:	c2 04 00             	ret    0x4

10002055 <getRegionDifference(Region, Region)>:
10002055:	57                   	push   edi
10002056:	b9 07 00 00 00       	mov    ecx,0x7
1000205b:	56                   	push   esi
1000205c:	53                   	push   ebx
1000205d:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10002061:	6a 02                	push   0x2
10002063:	83 ec 1c             	sub    esp,0x1c
10002066:	8d 74 24 50          	lea    esi,[esp+0x50]
1000206a:	89 e7                	mov    edi,esp
1000206c:	83 ec 1c             	sub    esp,0x1c
1000206f:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002071:	8d 74 24 50          	lea    esi,[esp+0x50]
10002075:	89 e7                	mov    edi,esp
10002077:	b9 07 00 00 00       	mov    ecx,0x7
1000207c:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000207e:	53                   	push   ebx
1000207f:	e8 fc ff ff ff       	call   10002080 <getRegionDifference(Region, Region)+0x2b>	10002080: R_386_PC32	performRegionOperation(Region, Region, RegionOperation)
10002084:	89 d8                	mov    eax,ebx
10002086:	83 c4 3c             	add    esp,0x3c
10002089:	5b                   	pop    ebx
1000208a:	5e                   	pop    esi
1000208b:	5f                   	pop    edi
1000208c:	c2 04 00             	ret    0x4

1000208f <createSlowRoundedRectangleRegion(int, int, int, int, int)>:
1000208f:	55                   	push   ebp
10002090:	57                   	push   edi
10002091:	56                   	push   esi
10002092:	53                   	push   ebx
10002093:	81 ec 4c 01 00 00    	sub    esp,0x14c
10002099:	8b 9c 24 64 01 00 00 	mov    ebx,DWORD PTR [esp+0x164]
100020a0:	8b b4 24 68 01 00 00 	mov    esi,DWORD PTR [esp+0x168]
100020a7:	8d 6c 24 28          	lea    ebp,[esp+0x28]
100020ab:	83 ec 0c             	sub    esp,0xc
100020ae:	ff b4 24 7c 01 00 00 	push   DWORD PTR [esp+0x17c]
100020b5:	ff b4 24 7c 01 00 00 	push   DWORD PTR [esp+0x17c]
100020bc:	56                   	push   esi
100020bd:	53                   	push   ebx
100020be:	55                   	push   ebp
100020bf:	e8 fc ff ff ff       	call   100020c0 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x31>	100020c0: R_386_PC32	createRectangleRegion(int, int, int, int)
100020c4:	ff b4 24 90 01 00 00 	push   DWORD PTR [esp+0x190]
100020cb:	ff b4 24 94 01 00 00 	push   DWORD PTR [esp+0x194]
100020d2:	56                   	push   esi
100020d3:	53                   	push   ebx
100020d4:	8d 44 24 70          	lea    eax,[esp+0x70]
100020d8:	50                   	push   eax
100020d9:	e8 fc ff ff ff       	call   100020da <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x4b>	100020da: R_386_PC32	createRectangleRegion(int, int, int, int)
100020de:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
100020e5:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100020e9:	8b 84 24 84 00 00 00 	mov    eax,DWORD PTR [esp+0x84]
100020f0:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
100020f4:	8b 84 24 a0 01 00 00 	mov    eax,DWORD PTR [esp+0x1a0]
100020fb:	83 c4 20             	add    esp,0x20
100020fe:	01 c0                	add    eax,eax
10002100:	50                   	push   eax
10002101:	50                   	push   eax
10002102:	56                   	push   esi
10002103:	53                   	push   ebx
10002104:	8d 44 24 7c          	lea    eax,[esp+0x7c]
10002108:	50                   	push   eax
10002109:	e8 fc ff ff ff       	call   1000210a <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x7b>	1000210a: R_386_PC32	createEllipseRegion(int, int, int, int)
1000210e:	b9 07 00 00 00       	mov    ecx,0x7
10002113:	8b 84 24 8c 00 00 00 	mov    eax,DWORD PTR [esp+0x8c]
1000211a:	8d 9c 24 98 00 00 00 	lea    ebx,[esp+0x98]
10002121:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002125:	8b 84 24 90 00 00 00 	mov    eax,DWORD PTR [esp+0x90]
1000212c:	83 ec 14             	sub    esp,0x14
1000212f:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10002133:	89 e7                	mov    edi,esp
10002135:	8d 74 24 74          	lea    esi,[esp+0x74]
10002139:	83 ec 1c             	sub    esp,0x1c
1000213c:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000213e:	89 e7                	mov    edi,esp
10002140:	89 ee                	mov    esi,ebp
10002142:	b9 07 00 00 00       	mov    ecx,0x7
10002147:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002149:	53                   	push   ebx
1000214a:	e8 fc ff ff ff       	call   1000214b <createSlowRoundedRectangleRegion(int, int, int, int, int)+0xbc>	1000214b: R_386_PC32	getRegionDifference(Region, Region)
1000214f:	b9 07 00 00 00       	mov    ecx,0x7
10002154:	8b 94 24 b8 01 00 00 	mov    edx,DWORD PTR [esp+0x1b8]
1000215b:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
1000215f:	2b 94 24 c0 01 00 00 	sub    edx,DWORD PTR [esp+0x1c0]
10002166:	8d ac 24 e4 00 00 00 	lea    ebp,[esp+0xe4]
1000216d:	01 d0                	add    eax,edx
1000216f:	89 54 24 68          	mov    DWORD PTR [esp+0x68],edx
10002173:	89 84 24 a0 00 00 00 	mov    DWORD PTR [esp+0xa0],eax
1000217a:	83 c4 2c             	add    esp,0x2c
1000217d:	89 e7                	mov    edi,esp
1000217f:	8d 74 24 64          	lea    esi,[esp+0x64]
10002183:	83 ec 1c             	sub    esp,0x1c
10002186:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002188:	89 e7                	mov    edi,esp
1000218a:	89 de                	mov    esi,ebx
1000218c:	b9 07 00 00 00       	mov    ecx,0x7
10002191:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002193:	55                   	push   ebp
10002194:	e8 fc ff ff ff       	call   10002195 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x106>	10002195: R_386_PC32	getRegionDifference(Region, Region)
10002199:	b9 07 00 00 00       	mov    ecx,0x7
1000219e:	8b 84 24 ac 01 00 00 	mov    eax,DWORD PTR [esp+0x1ac]
100021a5:	8d 9c 24 f0 00 00 00 	lea    ebx,[esp+0xf0]
100021ac:	2b 84 24 b0 01 00 00 	sub    eax,DWORD PTR [esp+0x1b0]
100021b3:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
100021b7:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
100021bb:	03 44 24 44          	add    eax,DWORD PTR [esp+0x44]
100021bf:	89 84 24 94 00 00 00 	mov    DWORD PTR [esp+0x94],eax
100021c6:	83 c4 1c             	add    esp,0x1c
100021c9:	89 e7                	mov    edi,esp
100021cb:	8d 74 24 64          	lea    esi,[esp+0x64]
100021cf:	83 ec 1c             	sub    esp,0x1c
100021d2:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100021d4:	89 e7                	mov    edi,esp
100021d6:	89 ee                	mov    esi,ebp
100021d8:	b9 07 00 00 00       	mov    ecx,0x7
100021dd:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100021df:	53                   	push   ebx
100021e0:	e8 fc ff ff ff       	call   100021e1 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x152>	100021e1: R_386_PC32	getRegionDifference(Region, Region)
100021e5:	b9 07 00 00 00       	mov    ecx,0x7
100021ea:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100021ee:	89 84 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],eax
100021f5:	8d 84 24 0c 01 00 00 	lea    eax,[esp+0x10c]
100021fc:	83 c4 1c             	add    esp,0x1c
100021ff:	89 e7                	mov    edi,esp
10002201:	8d 74 24 64          	lea    esi,[esp+0x64]
10002205:	83 ec 1c             	sub    esp,0x1c
10002208:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000220a:	89 e7                	mov    edi,esp
1000220c:	89 de                	mov    esi,ebx
1000220e:	b9 07 00 00 00       	mov    ecx,0x7
10002213:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002215:	50                   	push   eax
10002216:	e8 fc ff ff ff       	call   10002217 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x188>	10002217: R_386_PC32	getRegionDifference(Region, Region)
1000221b:	b9 07 00 00 00       	mov    ecx,0x7
10002220:	8d ac 24 28 01 00 00 	lea    ebp,[esp+0x128]
10002227:	83 c4 1c             	add    esp,0x1c
1000222a:	89 e7                	mov    edi,esp
1000222c:	8d b4 24 80 00 00 00 	lea    esi,[esp+0x80]
10002233:	83 ec 1c             	sub    esp,0x1c
10002236:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002238:	8d 84 24 0c 01 00 00 	lea    eax,[esp+0x10c]
1000223f:	89 e7                	mov    edi,esp
10002241:	89 c6                	mov    esi,eax
10002243:	b9 07 00 00 00       	mov    ecx,0x7
10002248:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000224a:	55                   	push   ebp
1000224b:	e8 fc ff ff ff       	call   1000224c <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x1bd>	1000224c: R_386_PC32	getRegionUnion(Region, Region)
10002250:	b9 07 00 00 00       	mov    ecx,0x7
10002255:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10002259:	8d 9c 24 44 01 00 00 	lea    ebx,[esp+0x144]
10002260:	2b 94 24 b0 01 00 00 	sub    edx,DWORD PTR [esp+0x1b0]
10002267:	03 54 24 4c          	add    edx,DWORD PTR [esp+0x4c]
1000226b:	89 94 24 ac 00 00 00 	mov    DWORD PTR [esp+0xac],edx
10002272:	83 c4 1c             	add    esp,0x1c
10002275:	89 e7                	mov    edi,esp
10002277:	8d b4 24 80 00 00 00 	lea    esi,[esp+0x80]
1000227e:	83 ec 1c             	sub    esp,0x1c
10002281:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002283:	89 e7                	mov    edi,esp
10002285:	89 ee                	mov    esi,ebp
10002287:	b9 07 00 00 00       	mov    ecx,0x7
1000228c:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000228e:	53                   	push   ebx
1000228f:	e8 fc ff ff ff       	call   10002290 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x201>	10002290: R_386_PC32	getRegionUnion(Region, Region)
10002294:	b9 07 00 00 00       	mov    ecx,0x7
10002299:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
1000229d:	8d ac 24 60 01 00 00 	lea    ebp,[esp+0x160]
100022a4:	2b 84 24 b0 01 00 00 	sub    eax,DWORD PTR [esp+0x1b0]
100022ab:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
100022af:	89 84 24 b0 00 00 00 	mov    DWORD PTR [esp+0xb0],eax
100022b6:	83 c4 1c             	add    esp,0x1c
100022b9:	89 e7                	mov    edi,esp
100022bb:	8d b4 24 80 00 00 00 	lea    esi,[esp+0x80]
100022c2:	83 ec 1c             	sub    esp,0x1c
100022c5:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100022c7:	89 e7                	mov    edi,esp
100022c9:	89 de                	mov    esi,ebx
100022cb:	b9 07 00 00 00       	mov    ecx,0x7
100022d0:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100022d2:	55                   	push   ebp
100022d3:	e8 fc ff ff ff       	call   100022d4 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x245>	100022d4: R_386_PC32	getRegionUnion(Region, Region)
100022d8:	b9 07 00 00 00       	mov    ecx,0x7
100022dd:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
100022e1:	89 84 24 ac 00 00 00 	mov    DWORD PTR [esp+0xac],eax
100022e8:	83 c4 1c             	add    esp,0x1c
100022eb:	89 e7                	mov    edi,esp
100022ed:	8d b4 24 80 00 00 00 	lea    esi,[esp+0x80]
100022f4:	83 ec 1c             	sub    esp,0x1c
100022f7:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100022f9:	89 e7                	mov    edi,esp
100022fb:	89 ee                	mov    esi,ebp
100022fd:	b9 07 00 00 00       	mov    ecx,0x7
10002302:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002304:	ff b4 24 9c 01 00 00 	push   DWORD PTR [esp+0x19c]
1000230b:	e8 fc ff ff ff       	call   1000230c <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x27d>	1000230c: R_386_PC32	getRegionUnion(Region, Region)
10002310:	83 c4 30             	add    esp,0x30
10002313:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
10002317:	e8 fc ff ff ff       	call   10002318 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x289>	10002318: R_386_PC32	free
1000231c:	58                   	pop    eax
1000231d:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
10002321:	e8 fc ff ff ff       	call   10002322 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x293>	10002322: R_386_PC32	free
10002326:	5a                   	pop    edx
10002327:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
1000232b:	e8 fc ff ff ff       	call   1000232c <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x29d>	1000232c: R_386_PC32	free
10002330:	59                   	pop    ecx
10002331:	ff b4 24 88 00 00 00 	push   DWORD PTR [esp+0x88]
10002338:	e8 fc ff ff ff       	call   10002339 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x2aa>	10002339: R_386_PC32	free
1000233d:	5b                   	pop    ebx
1000233e:	ff b4 24 a4 00 00 00 	push   DWORD PTR [esp+0xa4]
10002345:	e8 fc ff ff ff       	call   10002346 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x2b7>	10002346: R_386_PC32	free
1000234a:	5e                   	pop    esi
1000234b:	ff b4 24 c0 00 00 00 	push   DWORD PTR [esp+0xc0]
10002352:	e8 fc ff ff ff       	call   10002353 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x2c4>	10002353: R_386_PC32	free
10002357:	5f                   	pop    edi
10002358:	ff b4 24 dc 00 00 00 	push   DWORD PTR [esp+0xdc]
1000235f:	e8 fc ff ff ff       	call   10002360 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x2d1>	10002360: R_386_PC32	free
10002364:	5d                   	pop    ebp
10002365:	ff b4 24 f8 00 00 00 	push   DWORD PTR [esp+0xf8]
1000236c:	e8 fc ff ff ff       	call   1000236d <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x2de>	1000236d: R_386_PC32	free
10002371:	58                   	pop    eax
10002372:	ff b4 24 14 01 00 00 	push   DWORD PTR [esp+0x114]
10002379:	e8 fc ff ff ff       	call   1000237a <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x2eb>	1000237a: R_386_PC32	free
1000237e:	58                   	pop    eax
1000237f:	ff b4 24 30 01 00 00 	push   DWORD PTR [esp+0x130]
10002386:	e8 fc ff ff ff       	call   10002387 <createSlowRoundedRectangleRegion(int, int, int, int, int)+0x2f8>	10002387: R_386_PC32	free
1000238b:	8b 84 24 70 01 00 00 	mov    eax,DWORD PTR [esp+0x170]
10002392:	81 c4 5c 01 00 00    	add    esp,0x15c
10002398:	5b                   	pop    ebx
10002399:	5e                   	pop    esi
1000239a:	5f                   	pop    edi
1000239b:	5d                   	pop    ebp
1000239c:	c2 04 00             	ret    0x4

1000239f <getRegionIntersection(Region, Region)>:
1000239f:	57                   	push   edi
100023a0:	b9 07 00 00 00       	mov    ecx,0x7
100023a5:	56                   	push   esi
100023a6:	53                   	push   ebx
100023a7:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100023ab:	6a 01                	push   0x1
100023ad:	83 ec 1c             	sub    esp,0x1c
100023b0:	8d 74 24 50          	lea    esi,[esp+0x50]
100023b4:	89 e7                	mov    edi,esp
100023b6:	83 ec 1c             	sub    esp,0x1c
100023b9:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100023bb:	8d 74 24 50          	lea    esi,[esp+0x50]
100023bf:	89 e7                	mov    edi,esp
100023c1:	b9 07 00 00 00       	mov    ecx,0x7
100023c6:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100023c8:	53                   	push   ebx
100023c9:	e8 fc ff ff ff       	call   100023ca <getRegionIntersection(Region, Region)+0x2b>	100023ca: R_386_PC32	performRegionOperation(Region, Region, RegionOperation)
100023ce:	89 d8                	mov    eax,ebx
100023d0:	83 c4 3c             	add    esp,0x3c
100023d3:	5b                   	pop    ebx
100023d4:	5e                   	pop    esi
100023d5:	5f                   	pop    edi
100023d6:	c2 04 00             	ret    0x4

100023d9 <getRegionXOR(Region, Region)>:
100023d9:	57                   	push   edi
100023da:	b9 07 00 00 00       	mov    ecx,0x7
100023df:	56                   	push   esi
100023e0:	53                   	push   ebx
100023e1:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100023e5:	6a 03                	push   0x3
100023e7:	83 ec 1c             	sub    esp,0x1c
100023ea:	8d 74 24 50          	lea    esi,[esp+0x50]
100023ee:	89 e7                	mov    edi,esp
100023f0:	83 ec 1c             	sub    esp,0x1c
100023f3:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100023f5:	8d 74 24 50          	lea    esi,[esp+0x50]
100023f9:	89 e7                	mov    edi,esp
100023fb:	b9 07 00 00 00       	mov    ecx,0x7
10002400:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002402:	53                   	push   ebx
10002403:	e8 fc ff ff ff       	call   10002404 <getRegionXOR(Region, Region)+0x2b>	10002404: R_386_PC32	performRegionOperation(Region, Region, RegionOperation)
10002408:	89 d8                	mov    eax,ebx
1000240a:	83 c4 3c             	add    esp,0x3c
1000240d:	5b                   	pop    ebx
1000240e:	5e                   	pop    esi
1000240f:	5f                   	pop    edi
10002410:	c2 04 00             	ret    0x4

10002413 <isPointInRegion(Region, int, int)>:
10002413:	55                   	push   ebp
10002414:	31 c9                	xor    ecx,ecx
10002416:	57                   	push   edi
10002417:	31 ff                	xor    edi,edi
10002419:	56                   	push   esi
1000241a:	53                   	push   ebx
1000241b:	83 ec 20             	sub    esp,0x20
1000241e:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10002422:	89 04 24             	mov    DWORD PTR [esp],eax
10002425:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10002429:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
1000242d:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10002431:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10002435:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10002439:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
1000243d:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10002441:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10002445:	39 4c 24 14          	cmp    DWORD PTR [esp+0x14],ecx
10002449:	0f 8e 9f 00 00 00    	jle    100024ee <isPointInRegion(Region, int, int)+0xdb>
1000244f:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
10002452:	8d 47 01             	lea    eax,[edi+0x1]
10002455:	8b 34 bb             	mov    esi,DWORD PTR [ebx+edi*4]
10002458:	8d 14 bd 00 00 00 00 	lea    edx,[edi*4+0x0]
1000245f:	83 fe ff             	cmp    esi,0xffffffff
10002462:	0f 84 86 00 00 00    	je     100024ee <isPointInRegion(Region, int, int)+0xdb>
10002468:	0f b7 de             	movzx  ebx,si
1000246b:	8b 3c 24             	mov    edi,DWORD PTR [esp]
1000246e:	c1 ee 10             	shr    esi,0x10
10002471:	8b 6c 24 0c          	mov    ebp,DWORD PTR [esp+0xc]
10002475:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
10002479:	01 cd                	add    ebp,ecx
1000247b:	8d 74 17 04          	lea    esi,[edi+edx*1+0x4]
1000247f:	89 6c 24 10          	mov    DWORD PTR [esp+0x10],ebp
10002483:	8d 3c 18             	lea    edi,[eax+ebx*1]
10002486:	03 6c 24 08          	add    ebp,DWORD PTR [esp+0x8]
1000248a:	31 d2                	xor    edx,edx
1000248c:	31 c0                	xor    eax,eax
1000248e:	89 6c 24 1c          	mov    DWORD PTR [esp+0x1c],ebp
10002492:	39 54 24 18          	cmp    DWORD PTR [esp+0x18],edx
10002496:	7e 41                	jle    100024d9 <isPointInRegion(Region, int, int)+0xc6>
10002498:	39 16                	cmp    DWORD PTR [esi],edx
1000249a:	75 07                	jne    100024a3 <isPointInRegion(Region, int, int)+0x90>
1000249c:	83 c6 04             	add    esi,0x4
1000249f:	83 f0 01             	xor    eax,0x1
100024a2:	4b                   	dec    ebx
100024a3:	84 c0                	test   al,al
100024a5:	74 2e                	je     100024d5 <isPointInRegion(Region, int, int)+0xc2>
100024a7:	8b 6c 24 10          	mov    ebp,DWORD PTR [esp+0x10]
100024ab:	3b 6c 24 54          	cmp    ebp,DWORD PTR [esp+0x54]
100024af:	7f 41                	jg     100024f2 <isPointInRegion(Region, int, int)+0xdf>
100024b1:	8b 6c 24 1c          	mov    ebp,DWORD PTR [esp+0x1c]
100024b5:	3b 6c 24 54          	cmp    ebp,DWORD PTR [esp+0x54]
100024b9:	7e 37                	jle    100024f2 <isPointInRegion(Region, int, int)+0xdf>
100024bb:	8b 6c 24 04          	mov    ebp,DWORD PTR [esp+0x4]
100024bf:	01 d5                	add    ebp,edx
100024c1:	3b 6c 24 50          	cmp    ebp,DWORD PTR [esp+0x50]
100024c5:	7f 2b                	jg     100024f2 <isPointInRegion(Region, int, int)+0xdf>
100024c7:	8b 6c 24 04          	mov    ebp,DWORD PTR [esp+0x4]
100024cb:	03 2e                	add    ebp,DWORD PTR [esi]
100024cd:	3b 6c 24 50          	cmp    ebp,DWORD PTR [esp+0x50]
100024d1:	76 1f                	jbe    100024f2 <isPointInRegion(Region, int, int)+0xdf>
100024d3:	eb 26                	jmp    100024fb <isPointInRegion(Region, int, int)+0xe8>
100024d5:	85 db                	test   ebx,ebx
100024d7:	75 1e                	jne    100024f7 <isPointInRegion(Region, int, int)+0xe4>
100024d9:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100024dd:	01 c8                	add    eax,ecx
100024df:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
100024e3:	74 09                	je     100024ee <isPointInRegion(Region, int, int)+0xdb>
100024e5:	03 4c 24 08          	add    ecx,DWORD PTR [esp+0x8]
100024e9:	e9 57 ff ff ff       	jmp    10002445 <isPointInRegion(Region, int, int)+0x32>
100024ee:	31 c0                	xor    eax,eax
100024f0:	eb 09                	jmp    100024fb <isPointInRegion(Region, int, int)+0xe8>
100024f2:	42                   	inc    edx
100024f3:	85 db                	test   ebx,ebx
100024f5:	74 9b                	je     10002492 <isPointInRegion(Region, int, int)+0x7f>
100024f7:	8b 16                	mov    edx,DWORD PTR [esi]
100024f9:	eb 97                	jmp    10002492 <isPointInRegion(Region, int, int)+0x7f>
100024fb:	83 c4 20             	add    esp,0x20
100024fe:	5b                   	pop    ebx
100024ff:	5e                   	pop    esi
10002500:	5f                   	pop    edi
10002501:	5d                   	pop    ebp
10002502:	c3                   	ret    

10002503 <videoDrawRect(Video*, int, int, int, int, unsigned int)>:
10002503:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10002507:	8b 00                	mov    eax,DWORD PTR [eax]
10002509:	ff 60 28             	jmp    DWORD PTR [eax+0x28]

1000250c <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)>:
1000250c:	55                   	push   ebp
1000250d:	57                   	push   edi
1000250e:	56                   	push   esi
1000250f:	53                   	push   ebx
10002510:	83 ec 28             	sub    esp,0x28
10002513:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
10002517:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
1000251b:	53                   	push   ebx
1000251c:	e8 fc ff ff ff       	call   1000251d <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x11>	1000251d: R_386_PC32	Video::getWidth()
10002521:	83 c4 10             	add    esp,0x10
10002524:	39 f0                	cmp    eax,esi
10002526:	0f 8c df 00 00 00    	jl     1000260b <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xff>
1000252c:	83 ec 0c             	sub    esp,0xc
1000252f:	53                   	push   ebx
10002530:	e8 fc ff ff ff       	call   10002531 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x25>	10002531: R_386_PC32	Video::getHeight()
10002535:	83 c4 10             	add    esp,0x10
10002538:	3b 44 24 38          	cmp    eax,DWORD PTR [esp+0x38]
1000253c:	0f 8c c9 00 00 00    	jl     1000260b <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xff>
10002542:	89 f7                	mov    edi,esi
10002544:	03 7c 24 3c          	add    edi,DWORD PTR [esp+0x3c]
10002548:	0f 88 bd 00 00 00    	js     1000260b <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xff>
1000254e:	8b 6c 24 38          	mov    ebp,DWORD PTR [esp+0x38]
10002552:	03 6c 24 40          	add    ebp,DWORD PTR [esp+0x40]
10002556:	0f 88 af 00 00 00    	js     1000260b <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xff>
1000255c:	85 f6                	test   esi,esi
1000255e:	79 06                	jns    10002566 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x5a>
10002560:	89 7c 24 3c          	mov    DWORD PTR [esp+0x3c],edi
10002564:	31 f6                	xor    esi,esi
10002566:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
1000256b:	79 0c                	jns    10002579 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x6d>
1000256d:	89 6c 24 40          	mov    DWORD PTR [esp+0x40],ebp
10002571:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10002579:	83 ec 0c             	sub    esp,0xc
1000257c:	53                   	push   ebx
1000257d:	e8 fc ff ff ff       	call   1000257e <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x72>	1000257e: R_386_PC32	Video::getWidth()
10002582:	83 c4 10             	add    esp,0x10
10002585:	39 c7                	cmp    edi,eax
10002587:	7e 12                	jle    1000259b <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x8f>
10002589:	83 ec 0c             	sub    esp,0xc
1000258c:	53                   	push   ebx
1000258d:	e8 fc ff ff ff       	call   1000258e <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x82>	1000258e: R_386_PC32	Video::getWidth()
10002592:	29 f0                	sub    eax,esi
10002594:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10002598:	83 c4 10             	add    esp,0x10
1000259b:	83 ec 0c             	sub    esp,0xc
1000259e:	53                   	push   ebx
1000259f:	e8 fc ff ff ff       	call   100025a0 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0x94>	100025a0: R_386_PC32	Video::getHeight()
100025a4:	83 c4 10             	add    esp,0x10
100025a7:	39 c5                	cmp    ebp,eax
100025a9:	7e 14                	jle    100025bf <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xb3>
100025ab:	83 ec 0c             	sub    esp,0xc
100025ae:	53                   	push   ebx
100025af:	e8 fc ff ff ff       	call   100025b0 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xa4>	100025b0: R_386_PC32	Video::getHeight()
100025b4:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
100025b8:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
100025bc:	83 c4 10             	add    esp,0x10
100025bf:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
100025c3:	89 f8                	mov    eax,edi
100025c5:	2b 44 24 38          	sub    eax,DWORD PTR [esp+0x38]
100025c9:	39 44 24 40          	cmp    DWORD PTR [esp+0x40],eax
100025cd:	7e 3c                	jle    1000260b <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xff>
100025cf:	8d 14 37             	lea    edx,[edi+esi*1]
100025d2:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100025d6:	80 e2 01             	and    dl,0x1
100025d9:	74 05                	je     100025e0 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xd4>
100025db:	35 ff ff ff 00       	xor    eax,0xffffff
100025e0:	31 ed                	xor    ebp,ebp
100025e2:	39 6c 24 3c          	cmp    DWORD PTR [esp+0x3c],ebp
100025e6:	7e 20                	jle    10002608 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xfc>
100025e8:	8b 13                	mov    edx,DWORD PTR [ebx]
100025ea:	8d 4c 35 00          	lea    ecx,[ebp+esi*1+0x0]
100025ee:	50                   	push   eax
100025ef:	45                   	inc    ebp
100025f0:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100025f4:	57                   	push   edi
100025f5:	51                   	push   ecx
100025f6:	53                   	push   ebx
100025f7:	ff 52 24             	call   DWORD PTR [edx+0x24]
100025fa:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100025fe:	83 c4 10             	add    esp,0x10
10002601:	35 ff ff ff 00       	xor    eax,0xffffff
10002606:	eb da                	jmp    100025e2 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xd6>
10002608:	47                   	inc    edi
10002609:	eb b8                	jmp    100025c3 <videoDrawRectDotted(Video*, int, int, int, int, unsigned int)+0xb7>
1000260b:	83 c4 1c             	add    esp,0x1c
1000260e:	5b                   	pop    ebx
1000260f:	5e                   	pop    esi
10002610:	5f                   	pop    edi
10002611:	5d                   	pop    ebp
10002612:	c3                   	ret    

10002613 <videoPutpixel(Video*, int, int, unsigned int)>:
10002613:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10002617:	8b 00                	mov    eax,DWORD PTR [eax]
10002619:	ff 60 24             	jmp    DWORD PTR [eax+0x24]

1000261c <videoDrawCursor(Video*, int, int, unsigned int*)>:
1000261c:	83 ec 18             	sub    esp,0x18
1000261f:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10002623:	8b 10                	mov    edx,DWORD PTR [eax]
10002625:	6a 00                	push   0x0
10002627:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
1000262b:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
1000262f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10002633:	50                   	push   eax
10002634:	ff 52 30             	call   DWORD PTR [edx+0x30]
10002637:	83 c4 2c             	add    esp,0x2c
1000263a:	c3                   	ret    
1000263b:	90                   	nop

1000263c <Region::Region()>:
1000263c:	55                   	push   ebp
1000263d:	89 e5                	mov    ebp,esp
1000263f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002642:	c7 40 04 39 94 60 f9 	mov    DWORD PTR [eax+0x4],0xf9609439
10002649:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000264c:	c7 40 08 72 28 c1 f2 	mov    DWORD PTR [eax+0x8],0xf2c12872
10002653:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002656:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000265c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000265f:	c7 40 0c ab bc 21 ec 	mov    DWORD PTR [eax+0xc],0xec21bcab
10002666:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002669:	c7 40 10 e4 50 82 e5 	mov    DWORD PTR [eax+0x10],0xe58250e4
10002670:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002673:	c7 40 14 1d e5 e2 de 	mov    DWORD PTR [eax+0x14],0xdee2e51d
1000267a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000267d:	c6 40 18 00          	mov    BYTE PTR [eax+0x18],0x0
10002681:	90                   	nop
10002682:	5d                   	pop    ebp
10002683:	c3                   	ret    

10002684 <NFrame::Graphics::Graphics(Video*, Region)>:
10002684:	55                   	push   ebp
10002685:	89 e5                	mov    ebp,esp
10002687:	57                   	push   edi
10002688:	56                   	push   esi
10002689:	53                   	push   ebx
1000268a:	83 ec 0c             	sub    esp,0xc
1000268d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002690:	83 c0 04             	add    eax,0x4
10002693:	83 ec 0c             	sub    esp,0xc
10002696:	50                   	push   eax
10002697:	e8 fc ff ff ff       	call   10002698 <NFrame::Graphics::Graphics(Video*, Region)+0x14>	10002698: R_386_PC32	Region::Region()
1000269c:	83 c4 10             	add    esp,0x10
1000269f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100026a2:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
100026a5:	89 10                	mov    DWORD PTR [eax],edx
100026a7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100026aa:	8d 58 04             	lea    ebx,[eax+0x4]
100026ad:	8d 45 10             	lea    eax,[ebp+0x10]
100026b0:	ba 19 00 00 00       	mov    edx,0x19
100026b5:	89 df                	mov    edi,ebx
100026b7:	89 c6                	mov    esi,eax
100026b9:	89 d1                	mov    ecx,edx
100026bb:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100026bd:	90                   	nop
100026be:	8d 65 f4             	lea    esp,[ebp-0xc]
100026c1:	5b                   	pop    ebx
100026c2:	5e                   	pop    esi
100026c3:	5f                   	pop    edi
100026c4:	5d                   	pop    ebp
100026c5:	c3                   	ret    

100026c6 <NFrame::paintClippedCommon(Region, NFrame::Graphics, unsigned int)>:
100026c6:	55                   	push   ebp
100026c7:	89 e5                	mov    ebp,esp
100026c9:	57                   	push   edi
100026ca:	56                   	push   esi
100026cb:	53                   	push   ebx
100026cc:	83 ec 3c             	sub    esp,0x3c
100026cf:	8d 45 cc             	lea    eax,[ebp-0x34]
100026d2:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100026d5:	83 ec 04             	sub    esp,0x4
100026d8:	83 ec 1c             	sub    esp,0x1c
100026db:	89 e0                	mov    eax,esp
100026dd:	89 c3                	mov    ebx,eax
100026df:	8d 45 0c             	lea    eax,[ebp+0xc]
100026e2:	ba 07 00 00 00       	mov    edx,0x7
100026e7:	89 df                	mov    edi,ebx
100026e9:	89 c6                	mov    esi,eax
100026eb:	89 d1                	mov    ecx,edx
100026ed:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100026ef:	83 ec 1c             	sub    esp,0x1c
100026f2:	89 e0                	mov    eax,esp
100026f4:	89 c3                	mov    ebx,eax
100026f6:	8d 45 2c             	lea    eax,[ebp+0x2c]
100026f9:	ba 07 00 00 00       	mov    edx,0x7
100026fe:	89 df                	mov    edi,ebx
10002700:	89 c6                	mov    esi,eax
10002702:	89 d1                	mov    ecx,edx
10002704:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002706:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10002709:	e8 fc ff ff ff       	call   1000270a <NFrame::paintClippedCommon(Region, NFrame::Graphics, unsigned int)+0x44>	1000270a: R_386_PC32	getRegionIntersection(Region, Region)
1000270e:	83 c4 3c             	add    esp,0x3c
10002711:	8b 45 28             	mov    eax,DWORD PTR [ebp+0x28]
10002714:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10002717:	83 ec 0c             	sub    esp,0xc
1000271a:	ff 75 48             	push   DWORD PTR [ebp+0x48]
1000271d:	83 ec 1c             	sub    esp,0x1c
10002720:	89 e0                	mov    eax,esp
10002722:	89 c3                	mov    ebx,eax
10002724:	8d 45 cc             	lea    eax,[ebp-0x34]
10002727:	ba 07 00 00 00       	mov    edx,0x7
1000272c:	89 df                	mov    edi,ebx
1000272e:	89 c6                	mov    esi,eax
10002730:	89 d1                	mov    ecx,edx
10002732:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002734:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10002737:	e8 fc ff ff ff       	call   10002738 <NFrame::paintClippedCommon(Region, NFrame::Graphics, unsigned int)+0x72>	10002738: R_386_PC32	fillRegion(Video*, Region, unsigned int)
1000273c:	83 c4 30             	add    esp,0x30
1000273f:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002742:	83 ec 0c             	sub    esp,0xc
10002745:	50                   	push   eax
10002746:	e8 fc ff ff ff       	call   10002747 <NFrame::paintClippedCommon(Region, NFrame::Graphics, unsigned int)+0x81>	10002747: R_386_PC32	free
1000274b:	83 c4 10             	add    esp,0x10
1000274e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10002751:	83 ec 0c             	sub    esp,0xc
10002754:	50                   	push   eax
10002755:	e8 fc ff ff ff       	call   10002756 <NFrame::paintClippedCommon(Region, NFrame::Graphics, unsigned int)+0x90>	10002756: R_386_PC32	free
1000275a:	83 c4 10             	add    esp,0x10
1000275d:	90                   	nop
1000275e:	8d 65 f4             	lea    esp,[ebp-0xc]
10002761:	5b                   	pop    ebx
10002762:	5e                   	pop    esi
10002763:	5f                   	pop    edi
10002764:	5d                   	pop    ebp
10002765:	c3                   	ret    

10002766 <NFrame::markRegionAsDirty(Region)>:
10002766:	55                   	push   ebp
10002767:	89 e5                	mov    ebp,esp
10002769:	57                   	push   edi
1000276a:	56                   	push   esi
1000276b:	53                   	push   ebx
1000276c:	83 ec 3c             	sub    esp,0x3c
1000276f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002772:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10002775:	85 c0                	test   eax,eax
10002777:	74 2d                	je     100027a6 <NFrame::markRegionAsDirty(Region)+0x40>
10002779:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000277c:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
1000277f:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10002782:	83 ec 1c             	sub    esp,0x1c
10002785:	89 e0                	mov    eax,esp
10002787:	89 c3                	mov    ebx,eax
10002789:	8d 45 0c             	lea    eax,[ebp+0xc]
1000278c:	ba 07 00 00 00       	mov    edx,0x7
10002791:	89 df                	mov    edi,ebx
10002793:	89 c6                	mov    esi,eax
10002795:	89 d1                	mov    ecx,edx
10002797:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002799:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
1000279c:	e8 fc ff ff ff       	call   1000279d <NFrame::markRegionAsDirty(Region)+0x37>	1000279d: R_386_PC32	NFrame::markRegionAsDirty(Region)
100027a1:	83 c4 20             	add    esp,0x20
100027a4:	eb 6b                	jmp    10002811 <NFrame::markRegionAsDirty(Region)+0xab>
100027a6:	8d 45 cc             	lea    eax,[ebp-0x34]
100027a9:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100027ac:	83 ec 04             	sub    esp,0x4
100027af:	83 ec 1c             	sub    esp,0x1c
100027b2:	89 e0                	mov    eax,esp
100027b4:	89 c3                	mov    ebx,eax
100027b6:	8d 45 0c             	lea    eax,[ebp+0xc]
100027b9:	ba 07 00 00 00       	mov    edx,0x7
100027be:	89 df                	mov    edi,ebx
100027c0:	89 c6                	mov    esi,eax
100027c2:	89 d1                	mov    ecx,edx
100027c4:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100027c6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100027c9:	83 ec 1c             	sub    esp,0x1c
100027cc:	89 e2                	mov    edx,esp
100027ce:	8d 58 4c             	lea    ebx,[eax+0x4c]
100027d1:	b8 07 00 00 00       	mov    eax,0x7
100027d6:	89 d7                	mov    edi,edx
100027d8:	89 de                	mov    esi,ebx
100027da:	89 c1                	mov    ecx,eax
100027dc:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100027de:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
100027e1:	e8 fc ff ff ff       	call   100027e2 <NFrame::markRegionAsDirty(Region)+0x7c>	100027e2: R_386_PC32	getRegionUnion(Region, Region)
100027e6:	83 c4 3c             	add    esp,0x3c
100027e9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100027ec:	8b 40 4c             	mov    eax,DWORD PTR [eax+0x4c]
100027ef:	83 ec 0c             	sub    esp,0xc
100027f2:	50                   	push   eax
100027f3:	e8 fc ff ff ff       	call   100027f4 <NFrame::markRegionAsDirty(Region)+0x8e>	100027f4: R_386_PC32	free
100027f8:	83 c4 10             	add    esp,0x10
100027fb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100027fe:	8d 58 4c             	lea    ebx,[eax+0x4c]
10002801:	8d 45 cc             	lea    eax,[ebp-0x34]
10002804:	ba 19 00 00 00       	mov    edx,0x19
10002809:	89 df                	mov    edi,ebx
1000280b:	89 c6                	mov    esi,eax
1000280d:	89 d1                	mov    ecx,edx
1000280f:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002811:	90                   	nop
10002812:	8d 65 f4             	lea    esp,[ebp-0xc]
10002815:	5b                   	pop    ebx
10002816:	5e                   	pop    esi
10002817:	5f                   	pop    edi
10002818:	5d                   	pop    ebp
10002819:	c3                   	ret    

1000281a <NFrame::invalidate()>:
1000281a:	55                   	push   ebp
1000281b:	89 e5                	mov    ebp,esp
1000281d:	57                   	push   edi
1000281e:	56                   	push   esi
1000281f:	53                   	push   ebx
10002820:	83 ec 2c             	sub    esp,0x2c
10002823:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10002826:	8d 45 cc             	lea    eax,[ebp-0x34]
10002829:	8d 5a 14             	lea    ebx,[edx+0x14]
1000282c:	ba 07 00 00 00       	mov    edx,0x7
10002831:	89 c7                	mov    edi,eax
10002833:	89 de                	mov    esi,ebx
10002835:	89 d1                	mov    ecx,edx
10002837:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002839:	83 ec 0c             	sub    esp,0xc
1000283c:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000283f:	e8 fc ff ff ff       	call   10002840 <NFrame::invalidate()+0x26>	10002840: R_386_PC32	NFrame::getAbsX()
10002844:	83 c4 10             	add    esp,0x10
10002847:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
1000284a:	83 ec 0c             	sub    esp,0xc
1000284d:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002850:	e8 fc ff ff ff       	call   10002851 <NFrame::invalidate()+0x37>	10002851: R_386_PC32	NFrame::getAbsY()
10002855:	83 c4 10             	add    esp,0x10
10002858:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
1000285b:	83 ec 1c             	sub    esp,0x1c
1000285e:	89 e0                	mov    eax,esp
10002860:	89 c3                	mov    ebx,eax
10002862:	8d 45 cc             	lea    eax,[ebp-0x34]
10002865:	ba 07 00 00 00       	mov    edx,0x7
1000286a:	89 df                	mov    edi,ebx
1000286c:	89 c6                	mov    esi,eax
1000286e:	89 d1                	mov    ecx,edx
10002870:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002872:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002875:	e8 fc ff ff ff       	call   10002876 <NFrame::invalidate()+0x5c>	10002876: R_386_PC32	NFrame::markRegionAsDirty(Region)
1000287a:	83 c4 20             	add    esp,0x20
1000287d:	90                   	nop
1000287e:	8d 65 f4             	lea    esp,[ebp-0xc]
10002881:	5b                   	pop    ebx
10002882:	5e                   	pop    esi
10002883:	5f                   	pop    edi
10002884:	5d                   	pop    ebp
10002885:	c3                   	ret    

10002886 <NFrame::postResizeCleanup()>:
10002886:	55                   	push   ebp
10002887:	89 e5                	mov    ebp,esp
10002889:	83 ec 08             	sub    esp,0x8
1000288c:	83 ec 0c             	sub    esp,0xc
1000288f:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002892:	e8 fc ff ff ff       	call   10002893 <NFrame::postResizeCleanup()+0xd>	10002893: R_386_PC32	NFrame::tryInvalidate()
10002897:	83 c4 10             	add    esp,0x10
1000289a:	90                   	nop
1000289b:	c9                   	leave  
1000289c:	c3                   	ret    
1000289d:	90                   	nop

1000289e <NFrame::repaintAux(Video*, Region, bool)>:
1000289e:	55                   	push   ebp
1000289f:	89 e5                	mov    ebp,esp
100028a1:	57                   	push   edi
100028a2:	56                   	push   esi
100028a3:	53                   	push   ebx
100028a4:	81 ec 2c 01 00 00    	sub    esp,0x12c
100028aa:	8b 45 30             	mov    eax,DWORD PTR [ebp+0x30]
100028ad:	88 85 d4 fe ff ff    	mov    BYTE PTR [ebp-0x12c],al
100028b3:	8d 45 84             	lea    eax,[ebp-0x7c]
100028b6:	83 ec 08             	sub    esp,0x8
100028b9:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100028bc:	50                   	push   eax
100028bd:	e8 fc ff ff ff       	call   100028be <NFrame::repaintAux(Video*, Region, bool)+0x20>	100028be: R_386_PC32	NFrame::getDrawRegion()
100028c2:	83 c4 0c             	add    esp,0xc
100028c5:	83 ec 0c             	sub    esp,0xc
100028c8:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100028cb:	e8 fc ff ff ff       	call   100028cc <NFrame::repaintAux(Video*, Region, bool)+0x2e>	100028cc: R_386_PC32	NFrame::getAbsX()
100028d0:	83 c4 10             	add    esp,0x10
100028d3:	89 45 94             	mov    DWORD PTR [ebp-0x6c],eax
100028d6:	83 ec 0c             	sub    esp,0xc
100028d9:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100028dc:	e8 fc ff ff ff       	call   100028dd <NFrame::repaintAux(Video*, Region, bool)+0x3f>	100028dd: R_386_PC32	NFrame::getAbsY()
100028e1:	83 c4 10             	add    esp,0x10
100028e4:	89 45 98             	mov    DWORD PTR [ebp-0x68],eax
100028e7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100028ea:	89 85 d0 fe ff ff    	mov    DWORD PTR [ebp-0x130],eax
100028f0:	83 ec 04             	sub    esp,0x4
100028f3:	83 ec 1c             	sub    esp,0x1c
100028f6:	89 e0                	mov    eax,esp
100028f8:	89 c3                	mov    ebx,eax
100028fa:	8d 45 14             	lea    eax,[ebp+0x14]
100028fd:	ba 07 00 00 00       	mov    edx,0x7
10002902:	89 df                	mov    edi,ebx
10002904:	89 c6                	mov    esi,eax
10002906:	89 d1                	mov    ecx,edx
10002908:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000290a:	83 ec 1c             	sub    esp,0x1c
1000290d:	89 e0                	mov    eax,esp
1000290f:	89 c3                	mov    ebx,eax
10002911:	8d 45 84             	lea    eax,[ebp-0x7c]
10002914:	ba 07 00 00 00       	mov    edx,0x7
10002919:	89 df                	mov    edi,ebx
1000291b:	89 c6                	mov    esi,eax
1000291d:	89 d1                	mov    ecx,edx
1000291f:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002921:	ff b5 d0 fe ff ff    	push   DWORD PTR [ebp-0x130]
10002927:	e8 fc ff ff ff       	call   10002928 <NFrame::repaintAux(Video*, Region, bool)+0x8a>	10002928: R_386_PC32	getRegionIntersection(Region, Region)
1000292c:	83 c4 3c             	add    esp,0x3c
1000292f:	8b 45 84             	mov    eax,DWORD PTR [ebp-0x7c]
10002932:	83 ec 0c             	sub    esp,0xc
10002935:	50                   	push   eax
10002936:	e8 fc ff ff ff       	call   10002937 <NFrame::repaintAux(Video*, Region, bool)+0x99>	10002937: R_386_PC32	free
1000293b:	83 c4 10             	add    esp,0x10
1000293e:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002941:	8b 00                	mov    eax,DWORD PTR [eax]
10002943:	83 c0 04             	add    eax,0x4
10002946:	8b 00                	mov    eax,DWORD PTR [eax]
10002948:	89 85 d0 fe ff ff    	mov    DWORD PTR [ebp-0x130],eax
1000294e:	83 ec 0c             	sub    esp,0xc
10002951:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002954:	83 ec 1c             	sub    esp,0x1c
10002957:	89 e2                	mov    edx,esp
10002959:	89 c3                	mov    ebx,eax
1000295b:	b8 07 00 00 00       	mov    eax,0x7
10002960:	89 d7                	mov    edi,edx
10002962:	89 de                	mov    esi,ebx
10002964:	89 c1                	mov    ecx,eax
10002966:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002968:	ff 75 10             	push   DWORD PTR [ebp+0x10]
1000296b:	8d 45 a0             	lea    eax,[ebp-0x60]
1000296e:	50                   	push   eax
1000296f:	e8 fc ff ff ff       	call   10002970 <NFrame::repaintAux(Video*, Region, bool)+0xd2>	10002970: R_386_PC32	NFrame::Graphics::Graphics(Video*, Region)
10002974:	83 c4 30             	add    esp,0x30
10002977:	83 ec 0c             	sub    esp,0xc
1000297a:	83 ec 20             	sub    esp,0x20
1000297d:	89 e0                	mov    eax,esp
1000297f:	89 c3                	mov    ebx,eax
10002981:	8d 45 a0             	lea    eax,[ebp-0x60]
10002984:	ba 08 00 00 00       	mov    edx,0x8
10002989:	89 df                	mov    edi,ebx
1000298b:	89 c6                	mov    esi,eax
1000298d:	89 d1                	mov    ecx,edx
1000298f:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002991:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10002994:	8b 85 d0 fe ff ff    	mov    eax,DWORD PTR [ebp-0x130]
1000299a:	ff d0                	call   eax
1000299c:	83 c4 30             	add    esp,0x30
1000299f:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
100029a2:	8d 85 68 ff ff ff    	lea    eax,[ebp-0x98]
100029a8:	8d 5a 14             	lea    ebx,[edx+0x14]
100029ab:	ba 07 00 00 00       	mov    edx,0x7
100029b0:	89 c7                	mov    edi,eax
100029b2:	89 de                	mov    esi,ebx
100029b4:	89 d1                	mov    ecx,edx
100029b6:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100029b8:	83 ec 0c             	sub    esp,0xc
100029bb:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100029be:	e8 fc ff ff ff       	call   100029bf <NFrame::repaintAux(Video*, Region, bool)+0x121>	100029bf: R_386_PC32	NFrame::getAbsX()
100029c3:	83 c4 10             	add    esp,0x10
100029c6:	89 85 78 ff ff ff    	mov    DWORD PTR [ebp-0x88],eax
100029cc:	83 ec 0c             	sub    esp,0xc
100029cf:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100029d2:	e8 fc ff ff ff       	call   100029d3 <NFrame::repaintAux(Video*, Region, bool)+0x135>	100029d3: R_386_PC32	NFrame::getAbsY()
100029d7:	83 c4 10             	add    esp,0x10
100029da:	89 85 7c ff ff ff    	mov    DWORD PTR [ebp-0x84],eax
100029e0:	8d 85 4c ff ff ff    	lea    eax,[ebp-0xb4]
100029e6:	89 85 d0 fe ff ff    	mov    DWORD PTR [ebp-0x130],eax
100029ec:	83 ec 04             	sub    esp,0x4
100029ef:	83 ec 1c             	sub    esp,0x1c
100029f2:	89 e0                	mov    eax,esp
100029f4:	89 c3                	mov    ebx,eax
100029f6:	8d 85 68 ff ff ff    	lea    eax,[ebp-0x98]
100029fc:	ba 07 00 00 00       	mov    edx,0x7
10002a01:	89 df                	mov    edi,ebx
10002a03:	89 c6                	mov    esi,eax
10002a05:	89 d1                	mov    ecx,edx
10002a07:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002a09:	83 ec 1c             	sub    esp,0x1c
10002a0c:	89 e0                	mov    eax,esp
10002a0e:	89 c3                	mov    ebx,eax
10002a10:	8d 45 14             	lea    eax,[ebp+0x14]
10002a13:	ba 07 00 00 00       	mov    edx,0x7
10002a18:	89 df                	mov    edi,ebx
10002a1a:	89 c6                	mov    esi,eax
10002a1c:	89 d1                	mov    ecx,edx
10002a1e:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002a20:	ff b5 d0 fe ff ff    	push   DWORD PTR [ebp-0x130]
10002a26:	e8 fc ff ff ff       	call   10002a27 <NFrame::repaintAux(Video*, Region, bool)+0x189>	10002a27: R_386_PC32	getRegionIntersection(Region, Region)
10002a2b:	83 c4 3c             	add    esp,0x3c
10002a2e:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10002a35:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002a38:	8b 40 08             	mov    eax,DWORD PTR [eax+0x8]
10002a3b:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10002a3e:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
10002a42:	0f 84 8d 01 00 00    	je     10002bd5 <NFrame::repaintAux(Video*, Region, bool)+0x337>
10002a48:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10002a4b:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10002a4e:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10002a51:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10002a54:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10002a57:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10002a5a:	8b 00                	mov    eax,DWORD PTR [eax]
10002a5c:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
10002a5f:	84 c0                	test   al,al
10002a61:	74 1a                	je     10002a7d <NFrame::repaintAux(Video*, Region, bool)+0x1df>
10002a63:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10002a66:	8b 00                	mov    eax,DWORD PTR [eax]
10002a68:	8a 40 69             	mov    al,BYTE PTR [eax+0x69]
10002a6b:	84 c0                	test   al,al
10002a6d:	0f 84 5c 01 00 00    	je     10002bcf <NFrame::repaintAux(Video*, Region, bool)+0x331>
10002a73:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10002a76:	8b 00                	mov    eax,DWORD PTR [eax]
10002a78:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10002a7b:	eb c1                	jmp    10002a3e <NFrame::repaintAux(Video*, Region, bool)+0x1a0>
10002a7d:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10002a80:	8b 00                	mov    eax,DWORD PTR [eax]
10002a82:	89 85 d0 fe ff ff    	mov    DWORD PTR [ebp-0x130],eax
10002a88:	8d 9d 30 ff ff ff    	lea    ebx,[ebp-0xd0]
10002a8e:	89 9d cc fe ff ff    	mov    DWORD PTR [ebp-0x134],ebx
10002a94:	83 ec 04             	sub    esp,0x4
10002a97:	6a 01                	push   0x1
10002a99:	83 ec 1c             	sub    esp,0x1c
10002a9c:	89 e0                	mov    eax,esp
10002a9e:	89 c3                	mov    ebx,eax
10002aa0:	8d 85 4c ff ff ff    	lea    eax,[ebp-0xb4]
10002aa6:	ba 07 00 00 00       	mov    edx,0x7
10002aab:	89 df                	mov    edi,ebx
10002aad:	89 c6                	mov    esi,eax
10002aaf:	89 d1                	mov    ecx,edx
10002ab1:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002ab3:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10002ab6:	ff b5 d0 fe ff ff    	push   DWORD PTR [ebp-0x130]
10002abc:	ff b5 cc fe ff ff    	push   DWORD PTR [ebp-0x134]
10002ac2:	e8 fc ff ff ff       	call   10002ac3 <NFrame::repaintAux(Video*, Region, bool)+0x225>	10002ac3: R_386_PC32	NFrame::repaintAux(Video*, Region, bool)
10002ac7:	83 c4 2c             	add    esp,0x2c
10002aca:	8d 85 14 ff ff ff    	lea    eax,[ebp-0xec]
10002ad0:	89 85 d0 fe ff ff    	mov    DWORD PTR [ebp-0x130],eax
10002ad6:	83 ec 04             	sub    esp,0x4
10002ad9:	83 ec 1c             	sub    esp,0x1c
10002adc:	89 e0                	mov    eax,esp
10002ade:	89 c3                	mov    ebx,eax
10002ae0:	8d 85 30 ff ff ff    	lea    eax,[ebp-0xd0]
10002ae6:	ba 07 00 00 00       	mov    edx,0x7
10002aeb:	89 df                	mov    edi,ebx
10002aed:	89 c6                	mov    esi,eax
10002aef:	89 d1                	mov    ecx,edx
10002af1:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002af3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002af6:	83 ec 1c             	sub    esp,0x1c
10002af9:	89 e2                	mov    edx,esp
10002afb:	89 c3                	mov    ebx,eax
10002afd:	b8 07 00 00 00       	mov    eax,0x7
10002b02:	89 d7                	mov    edi,edx
10002b04:	89 de                	mov    esi,ebx
10002b06:	89 c1                	mov    ecx,eax
10002b08:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002b0a:	ff b5 d0 fe ff ff    	push   DWORD PTR [ebp-0x130]
10002b10:	e8 fc ff ff ff       	call   10002b11 <NFrame::repaintAux(Video*, Region, bool)+0x273>	10002b11: R_386_PC32	getRegionUnion(Region, Region)
10002b15:	83 c4 3c             	add    esp,0x3c
10002b18:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002b1b:	8b 00                	mov    eax,DWORD PTR [eax]
10002b1d:	83 ec 0c             	sub    esp,0xc
10002b20:	50                   	push   eax
10002b21:	e8 fc ff ff ff       	call   10002b22 <NFrame::repaintAux(Video*, Region, bool)+0x284>	10002b22: R_386_PC32	free
10002b26:	83 c4 10             	add    esp,0x10
10002b29:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002b2c:	89 c3                	mov    ebx,eax
10002b2e:	8d 85 14 ff ff ff    	lea    eax,[ebp-0xec]
10002b34:	ba 19 00 00 00       	mov    edx,0x19
10002b39:	89 df                	mov    edi,ebx
10002b3b:	89 c6                	mov    esi,eax
10002b3d:	89 d1                	mov    ecx,edx
10002b3f:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002b41:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10002b47:	89 85 d0 fe ff ff    	mov    DWORD PTR [ebp-0x130],eax
10002b4d:	83 ec 04             	sub    esp,0x4
10002b50:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002b53:	83 ec 1c             	sub    esp,0x1c
10002b56:	89 e2                	mov    edx,esp
10002b58:	89 c3                	mov    ebx,eax
10002b5a:	b8 07 00 00 00       	mov    eax,0x7
10002b5f:	89 d7                	mov    edi,edx
10002b61:	89 de                	mov    esi,ebx
10002b63:	89 c1                	mov    ecx,eax
10002b65:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002b67:	83 ec 1c             	sub    esp,0x1c
10002b6a:	89 e0                	mov    eax,esp
10002b6c:	89 c3                	mov    ebx,eax
10002b6e:	8d 85 4c ff ff ff    	lea    eax,[ebp-0xb4]
10002b74:	ba 07 00 00 00       	mov    edx,0x7
10002b79:	89 df                	mov    edi,ebx
10002b7b:	89 c6                	mov    esi,eax
10002b7d:	89 d1                	mov    ecx,edx
10002b7f:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002b81:	ff b5 d0 fe ff ff    	push   DWORD PTR [ebp-0x130]
10002b87:	e8 fc ff ff ff       	call   10002b88 <NFrame::repaintAux(Video*, Region, bool)+0x2ea>	10002b88: R_386_PC32	getRegionDifference(Region, Region)
10002b8c:	83 c4 3c             	add    esp,0x3c
10002b8f:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
10002b95:	83 ec 0c             	sub    esp,0xc
10002b98:	50                   	push   eax
10002b99:	e8 fc ff ff ff       	call   10002b9a <NFrame::repaintAux(Video*, Region, bool)+0x2fc>	10002b9a: R_386_PC32	free
10002b9e:	83 c4 10             	add    esp,0x10
10002ba1:	8d 85 4c ff ff ff    	lea    eax,[ebp-0xb4]
10002ba7:	8d 95 f8 fe ff ff    	lea    edx,[ebp-0x108]
10002bad:	b9 19 00 00 00       	mov    ecx,0x19
10002bb2:	89 c7                	mov    edi,eax
10002bb4:	89 d6                	mov    esi,edx
10002bb6:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002bb8:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
10002bbe:	83 ec 0c             	sub    esp,0xc
10002bc1:	50                   	push   eax
10002bc2:	e8 fc ff ff ff       	call   10002bc3 <NFrame::repaintAux(Video*, Region, bool)+0x325>	10002bc3: R_386_PC32	free
10002bc7:	83 c4 10             	add    esp,0x10
10002bca:	e9 6f fe ff ff       	jmp    10002a3e <NFrame::repaintAux(Video*, Region, bool)+0x1a0>
10002bcf:	90                   	nop
10002bd0:	e9 69 fe ff ff       	jmp    10002a3e <NFrame::repaintAux(Video*, Region, bool)+0x1a0>
10002bd5:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
10002bdb:	83 ec 0c             	sub    esp,0xc
10002bde:	50                   	push   eax
10002bdf:	e8 fc ff ff ff       	call   10002be0 <NFrame::repaintAux(Video*, Region, bool)+0x342>	10002be0: R_386_PC32	free
10002be4:	83 c4 10             	add    esp,0x10
10002be7:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002bea:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10002bed:	85 c0                	test   eax,eax
10002bef:	75 48                	jne    10002c39 <NFrame::repaintAux(Video*, Region, bool)+0x39b>
10002bf1:	80 bd d4 fe ff ff 00 	cmp    BYTE PTR [ebp-0x12c],0x0
10002bf8:	74 3f                	je     10002c39 <NFrame::repaintAux(Video*, Region, bool)+0x39b>
10002bfa:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002bfd:	8b 40 4c             	mov    eax,DWORD PTR [eax+0x4c]
10002c00:	83 ec 0c             	sub    esp,0xc
10002c03:	50                   	push   eax
10002c04:	e8 fc ff ff ff       	call   10002c05 <NFrame::repaintAux(Video*, Region, bool)+0x367>	10002c05: R_386_PC32	free
10002c09:	83 c4 10             	add    esp,0x10
10002c0c:	8d 45 c0             	lea    eax,[ebp-0x40]
10002c0f:	83 ec 0c             	sub    esp,0xc
10002c12:	6a 01                	push   0x1
10002c14:	6a 00                	push   0x0
10002c16:	6a 00                	push   0x0
10002c18:	6a 00                	push   0x0
10002c1a:	50                   	push   eax
10002c1b:	e8 fc ff ff ff       	call   10002c1c <NFrame::repaintAux(Video*, Region, bool)+0x37e>	10002c1c: R_386_PC32	createRectangleRegion(int, int, int, int)
10002c20:	83 c4 1c             	add    esp,0x1c
10002c23:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002c26:	8d 58 4c             	lea    ebx,[eax+0x4c]
10002c29:	8d 45 c0             	lea    eax,[ebp-0x40]
10002c2c:	ba 19 00 00 00       	mov    edx,0x19
10002c31:	89 df                	mov    edi,ebx
10002c33:	89 c6                	mov    esi,eax
10002c35:	89 d1                	mov    ecx,edx
10002c37:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002c39:	83 7d e4 00          	cmp    DWORD PTR [ebp-0x1c],0x0
10002c3d:	0f 84 80 00 00 00    	je     10002cc3 <NFrame::repaintAux(Video*, Region, bool)+0x425>
10002c43:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10002c46:	8d 85 dc fe ff ff    	lea    eax,[ebp-0x124]
10002c4c:	8d 5a 30             	lea    ebx,[edx+0x30]
10002c4f:	ba 07 00 00 00       	mov    edx,0x7
10002c54:	89 c7                	mov    edi,eax
10002c56:	89 de                	mov    esi,ebx
10002c58:	89 d1                	mov    ecx,edx
10002c5a:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002c5c:	83 ec 0c             	sub    esp,0xc
10002c5f:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10002c62:	e8 fc ff ff ff       	call   10002c63 <NFrame::repaintAux(Video*, Region, bool)+0x3c5>	10002c63: R_386_PC32	NFrame::getAbsX()
10002c67:	83 c4 10             	add    esp,0x10
10002c6a:	89 c2                	mov    edx,eax
10002c6c:	8b 85 ec fe ff ff    	mov    eax,DWORD PTR [ebp-0x114]
10002c72:	01 d0                	add    eax,edx
10002c74:	89 85 ec fe ff ff    	mov    DWORD PTR [ebp-0x114],eax
10002c7a:	83 ec 0c             	sub    esp,0xc
10002c7d:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10002c80:	e8 fc ff ff ff       	call   10002c81 <NFrame::repaintAux(Video*, Region, bool)+0x3e3>	10002c81: R_386_PC32	NFrame::getAbsY()
10002c85:	83 c4 10             	add    esp,0x10
10002c88:	89 c2                	mov    edx,eax
10002c8a:	8b 85 f0 fe ff ff    	mov    eax,DWORD PTR [ebp-0x110]
10002c90:	01 d0                	add    eax,edx
10002c92:	89 85 f0 fe ff ff    	mov    DWORD PTR [ebp-0x110],eax
10002c98:	83 ec 0c             	sub    esp,0xc
10002c9b:	6a 00                	push   0x0
10002c9d:	83 ec 1c             	sub    esp,0x1c
10002ca0:	89 e0                	mov    eax,esp
10002ca2:	89 c3                	mov    ebx,eax
10002ca4:	8d 85 dc fe ff ff    	lea    eax,[ebp-0x124]
10002caa:	ba 07 00 00 00       	mov    edx,0x7
10002caf:	89 df                	mov    edi,ebx
10002cb1:	89 c6                	mov    esi,eax
10002cb3:	89 d1                	mov    ecx,edx
10002cb5:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002cb7:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10002cba:	e8 fc ff ff ff       	call   10002cbb <NFrame::repaintAux(Video*, Region, bool)+0x41d>	10002cbb: R_386_PC32	fillRegion(Video*, Region, unsigned int)
10002cbf:	83 c4 30             	add    esp,0x30
10002cc2:	90                   	nop
10002cc3:	90                   	nop
10002cc4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002cc7:	8d 65 f4             	lea    esp,[ebp-0xc]
10002cca:	5b                   	pop    ebx
10002ccb:	5e                   	pop    esi
10002ccc:	5f                   	pop    edi
10002ccd:	5d                   	pop    ebp
10002cce:	c2 04 00             	ret    0x4
10002cd1:	90                   	nop

10002cd2 <NFrame::NFrame(Region)>:
10002cd2:	55                   	push   ebp
10002cd3:	89 e5                	mov    ebp,esp
10002cd5:	57                   	push   edi
10002cd6:	56                   	push   esi
10002cd7:	53                   	push   ebx
10002cd8:	83 ec 2c             	sub    esp,0x2c
10002cdb:	ba 08 00 00 00       	mov    edx,0x8	10002cdc: R_386_32	vtable for NFrame
10002ce0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002ce3:	89 10                	mov    DWORD PTR [eax],edx
10002ce5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002ce8:	83 c0 04             	add    eax,0x4
10002ceb:	83 ec 0c             	sub    esp,0xc
10002cee:	50                   	push   eax
10002cef:	e8 fc ff ff ff       	call   10002cf0 <NFrame::NFrame(Region)+0x1e>	10002cf0: R_386_PC32	LinkedList2<NFrame*>::LinkedList2()
10002cf4:	83 c4 10             	add    esp,0x10
10002cf7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002cfa:	83 c0 14             	add    eax,0x14
10002cfd:	83 ec 0c             	sub    esp,0xc
10002d00:	50                   	push   eax
10002d01:	e8 fc ff ff ff       	call   10002d02 <NFrame::NFrame(Region)+0x30>	10002d02: R_386_PC32	Region::Region()
10002d06:	83 c4 10             	add    esp,0x10
10002d09:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002d0c:	83 c0 30             	add    eax,0x30
10002d0f:	83 ec 0c             	sub    esp,0xc
10002d12:	50                   	push   eax
10002d13:	e8 fc ff ff ff       	call   10002d14 <NFrame::NFrame(Region)+0x42>	10002d14: R_386_PC32	Region::Region()
10002d18:	83 c4 10             	add    esp,0x10
10002d1b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002d1e:	83 c0 4c             	add    eax,0x4c
10002d21:	83 ec 0c             	sub    esp,0xc
10002d24:	50                   	push   eax
10002d25:	e8 fc ff ff ff       	call   10002d26 <NFrame::NFrame(Region)+0x54>	10002d26: R_386_PC32	Region::Region()
10002d2a:	83 c4 10             	add    esp,0x10
10002d2d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002d30:	c6 40 68 00          	mov    BYTE PTR [eax+0x68],0x0
10002d34:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002d37:	c6 40 69 00          	mov    BYTE PTR [eax+0x69],0x0
10002d3b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002d3e:	c7 40 6c 00 00 00 00 	mov    DWORD PTR [eax+0x6c],0x0
10002d45:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002d48:	c6 40 70 00          	mov    BYTE PTR [eax+0x70],0x0
10002d4c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002d4f:	c7 40 74 0a 00 00 00 	mov    DWORD PTR [eax+0x74],0xa
10002d56:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002d59:	c7 40 78 0a 00 00 00 	mov    DWORD PTR [eax+0x78],0xa
10002d60:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002d63:	c7 40 7c 64 00 00 00 	mov    DWORD PTR [eax+0x7c],0x64
10002d6a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002d6d:	c7 80 80 00 00 00 4b 00 00 00 	mov    DWORD PTR [eax+0x80],0x4b
10002d77:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002d7a:	c7 80 84 00 00 00 18 00 00 00 	mov    DWORD PTR [eax+0x84],0x18
10002d84:	8d 45 cc             	lea    eax,[ebp-0x34]
10002d87:	83 ec 0c             	sub    esp,0xc
10002d8a:	6a 01                	push   0x1
10002d8c:	6a 00                	push   0x0
10002d8e:	6a 00                	push   0x0
10002d90:	6a 00                	push   0x0
10002d92:	50                   	push   eax
10002d93:	e8 fc ff ff ff       	call   10002d94 <NFrame::NFrame(Region)+0xc2>	10002d94: R_386_PC32	createRectangleRegion(int, int, int, int)
10002d98:	83 c4 1c             	add    esp,0x1c
10002d9b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002d9e:	8d 58 4c             	lea    ebx,[eax+0x4c]
10002da1:	8d 45 cc             	lea    eax,[ebp-0x34]
10002da4:	ba 19 00 00 00       	mov    edx,0x19
10002da9:	89 df                	mov    edi,ebx
10002dab:	89 c6                	mov    esi,eax
10002dad:	89 d1                	mov    ecx,edx
10002daf:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002db1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002db4:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
10002dbb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002dbe:	8d 58 14             	lea    ebx,[eax+0x14]
10002dc1:	8d 45 0c             	lea    eax,[ebp+0xc]
10002dc4:	ba 19 00 00 00       	mov    edx,0x19
10002dc9:	89 df                	mov    edi,ebx
10002dcb:	89 c6                	mov    esi,eax
10002dcd:	89 d1                	mov    ecx,edx
10002dcf:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002dd1:	90                   	nop
10002dd2:	8d 65 f4             	lea    esp,[ebp-0xc]
10002dd5:	5b                   	pop    ebx
10002dd6:	5e                   	pop    esi
10002dd7:	5f                   	pop    edi
10002dd8:	5d                   	pop    ebp
10002dd9:	c3                   	ret    

10002dda <NFrame::NFrame(int, int, int, int)>:
10002dda:	55                   	push   ebp
10002ddb:	89 e5                	mov    ebp,esp
10002ddd:	57                   	push   edi
10002dde:	56                   	push   esi
10002ddf:	53                   	push   ebx
10002de0:	83 ec 4c             	sub    esp,0x4c
10002de3:	ba 08 00 00 00       	mov    edx,0x8	10002de4: R_386_32	vtable for NFrame
10002de8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002deb:	89 10                	mov    DWORD PTR [eax],edx
10002ded:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002df0:	83 c0 04             	add    eax,0x4
10002df3:	83 ec 0c             	sub    esp,0xc
10002df6:	50                   	push   eax
10002df7:	e8 fc ff ff ff       	call   10002df8 <NFrame::NFrame(int, int, int, int)+0x1e>	10002df8: R_386_PC32	LinkedList2<NFrame*>::LinkedList2()
10002dfc:	83 c4 10             	add    esp,0x10
10002dff:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002e02:	83 c0 14             	add    eax,0x14
10002e05:	83 ec 0c             	sub    esp,0xc
10002e08:	50                   	push   eax
10002e09:	e8 fc ff ff ff       	call   10002e0a <NFrame::NFrame(int, int, int, int)+0x30>	10002e0a: R_386_PC32	Region::Region()
10002e0e:	83 c4 10             	add    esp,0x10
10002e11:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002e14:	83 c0 30             	add    eax,0x30
10002e17:	83 ec 0c             	sub    esp,0xc
10002e1a:	50                   	push   eax
10002e1b:	e8 fc ff ff ff       	call   10002e1c <NFrame::NFrame(int, int, int, int)+0x42>	10002e1c: R_386_PC32	Region::Region()
10002e20:	83 c4 10             	add    esp,0x10
10002e23:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002e26:	83 c0 4c             	add    eax,0x4c
10002e29:	83 ec 0c             	sub    esp,0xc
10002e2c:	50                   	push   eax
10002e2d:	e8 fc ff ff ff       	call   10002e2e <NFrame::NFrame(int, int, int, int)+0x54>	10002e2e: R_386_PC32	Region::Region()
10002e32:	83 c4 10             	add    esp,0x10
10002e35:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002e38:	c6 40 68 00          	mov    BYTE PTR [eax+0x68],0x0
10002e3c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002e3f:	c6 40 69 00          	mov    BYTE PTR [eax+0x69],0x0
10002e43:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002e46:	c7 40 6c 00 00 00 00 	mov    DWORD PTR [eax+0x6c],0x0
10002e4d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002e50:	c6 40 70 00          	mov    BYTE PTR [eax+0x70],0x0
10002e54:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002e57:	c7 40 74 0a 00 00 00 	mov    DWORD PTR [eax+0x74],0xa
10002e5e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002e61:	c7 40 78 0a 00 00 00 	mov    DWORD PTR [eax+0x78],0xa
10002e68:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002e6b:	c7 40 7c 64 00 00 00 	mov    DWORD PTR [eax+0x7c],0x64
10002e72:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002e75:	c7 80 80 00 00 00 4b 00 00 00 	mov    DWORD PTR [eax+0x80],0x4b
10002e7f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002e82:	c7 80 84 00 00 00 18 00 00 00 	mov    DWORD PTR [eax+0x84],0x18
10002e8c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002e8f:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
10002e96:	8d 45 b0             	lea    eax,[ebp-0x50]
10002e99:	83 ec 0c             	sub    esp,0xc
10002e9c:	6a 01                	push   0x1
10002e9e:	6a 00                	push   0x0
10002ea0:	6a 00                	push   0x0
10002ea2:	6a 00                	push   0x0
10002ea4:	50                   	push   eax
10002ea5:	e8 fc ff ff ff       	call   10002ea6 <NFrame::NFrame(int, int, int, int)+0xcc>	10002ea6: R_386_PC32	createRectangleRegion(int, int, int, int)
10002eaa:	83 c4 1c             	add    esp,0x1c
10002ead:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002eb0:	8d 58 4c             	lea    ebx,[eax+0x4c]
10002eb3:	8d 45 b0             	lea    eax,[ebp-0x50]
10002eb6:	ba 19 00 00 00       	mov    edx,0x19
10002ebb:	89 df                	mov    edi,ebx
10002ebd:	89 c6                	mov    esi,eax
10002ebf:	89 d1                	mov    ecx,edx
10002ec1:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002ec3:	8d 45 cc             	lea    eax,[ebp-0x34]
10002ec6:	83 ec 0c             	sub    esp,0xc
10002ec9:	ff 75 18             	push   DWORD PTR [ebp+0x18]
10002ecc:	ff 75 14             	push   DWORD PTR [ebp+0x14]
10002ecf:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10002ed2:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10002ed5:	50                   	push   eax
10002ed6:	e8 fc ff ff ff       	call   10002ed7 <NFrame::NFrame(int, int, int, int)+0xfd>	10002ed7: R_386_PC32	createRectangleRegion(int, int, int, int)
10002edb:	83 c4 1c             	add    esp,0x1c
10002ede:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002ee1:	8d 58 14             	lea    ebx,[eax+0x14]
10002ee4:	8d 45 cc             	lea    eax,[ebp-0x34]
10002ee7:	ba 19 00 00 00       	mov    edx,0x19
10002eec:	89 df                	mov    edi,ebx
10002eee:	89 c6                	mov    esi,eax
10002ef0:	89 d1                	mov    ecx,edx
10002ef2:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002ef4:	90                   	nop
10002ef5:	8d 65 f4             	lea    esp,[ebp-0xc]
10002ef8:	5b                   	pop    ebx
10002ef9:	5e                   	pop    esi
10002efa:	5f                   	pop    edi
10002efb:	5d                   	pop    ebp
10002efc:	c3                   	ret    
10002efd:	90                   	nop

10002efe <NFrame::addChild(NFrame*)>:
10002efe:	55                   	push   ebp
10002eff:	89 e5                	mov    ebp,esp
10002f01:	83 ec 08             	sub    esp,0x8
10002f04:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002f07:	83 c0 04             	add    eax,0x4
10002f0a:	83 ec 08             	sub    esp,0x8
10002f0d:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10002f10:	50                   	push   eax
10002f11:	e8 fc ff ff ff       	call   10002f12 <NFrame::addChild(NFrame*)+0x14>	10002f12: R_386_PC32	LinkedList2<NFrame*>::prependNode(NFrame*)
10002f16:	83 c4 10             	add    esp,0x10
10002f19:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002f1c:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10002f1f:	89 50 10             	mov    DWORD PTR [eax+0x10],edx
10002f22:	90                   	nop
10002f23:	c9                   	leave  
10002f24:	c3                   	ret    
10002f25:	90                   	nop

10002f26 <NFrame::getDirtyRegion()>:
10002f26:	55                   	push   ebp
10002f27:	89 e5                	mov    ebp,esp
10002f29:	57                   	push   edi
10002f2a:	56                   	push   esi
10002f2b:	53                   	push   ebx
10002f2c:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10002f2f:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002f32:	8d 58 4c             	lea    ebx,[eax+0x4c]
10002f35:	b8 07 00 00 00       	mov    eax,0x7
10002f3a:	89 d7                	mov    edi,edx
10002f3c:	89 de                	mov    esi,ebx
10002f3e:	89 c1                	mov    ecx,eax
10002f40:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002f42:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002f45:	5b                   	pop    ebx
10002f46:	5e                   	pop    esi
10002f47:	5f                   	pop    edi
10002f48:	5d                   	pop    ebp
10002f49:	c2 04 00             	ret    0x4

10002f4c <NFrame::getDrawRegion()>:
10002f4c:	55                   	push   ebp
10002f4d:	89 e5                	mov    ebp,esp
10002f4f:	57                   	push   edi
10002f50:	56                   	push   esi
10002f51:	53                   	push   ebx
10002f52:	83 ec 7c             	sub    esp,0x7c
10002f55:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002f58:	8b 48 28             	mov    ecx,DWORD PTR [eax+0x28]
10002f5b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002f5e:	8b 50 24             	mov    edx,DWORD PTR [eax+0x24]
10002f61:	8d 45 c4             	lea    eax,[ebp-0x3c]
10002f64:	83 ec 0c             	sub    esp,0xc
10002f67:	6a 01                	push   0x1
10002f69:	6a 00                	push   0x0
10002f6b:	51                   	push   ecx
10002f6c:	52                   	push   edx
10002f6d:	50                   	push   eax
10002f6e:	e8 fc ff ff ff       	call   10002f6f <NFrame::getDrawRegion()+0x23>	10002f6f: R_386_PC32	createRectangleRegion(int, int, int, int)
10002f73:	83 c4 1c             	add    esp,0x1c
10002f76:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002f79:	8b 40 08             	mov    eax,DWORD PTR [eax+0x8]
10002f7c:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10002f7f:	83 7d e4 00          	cmp    DWORD PTR [ebp-0x1c],0x0
10002f83:	0f 84 c0 00 00 00    	je     10003049 <NFrame::getDrawRegion()+0xfd>
10002f89:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10002f8c:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10002f8f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10002f92:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10002f95:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10002f98:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10002f9b:	8b 00                	mov    eax,DWORD PTR [eax]
10002f9d:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
10002fa0:	84 c0                	test   al,al
10002fa2:	0f 85 9b 00 00 00    	jne    10003043 <NFrame::getDrawRegion()+0xf7>
10002fa8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10002fab:	8b 10                	mov    edx,DWORD PTR [eax]
10002fad:	8d 45 a8             	lea    eax,[ebp-0x58]
10002fb0:	8d 5a 14             	lea    ebx,[edx+0x14]
10002fb3:	ba 07 00 00 00       	mov    edx,0x7
10002fb8:	89 c7                	mov    edi,eax
10002fba:	89 de                	mov    esi,ebx
10002fbc:	89 d1                	mov    ecx,edx
10002fbe:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002fc0:	8b 55 b8             	mov    edx,DWORD PTR [ebp-0x48]
10002fc3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002fc6:	8b 40 24             	mov    eax,DWORD PTR [eax+0x24]
10002fc9:	01 d0                	add    eax,edx
10002fcb:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
10002fce:	8b 55 bc             	mov    edx,DWORD PTR [ebp-0x44]
10002fd1:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10002fd4:	8b 40 28             	mov    eax,DWORD PTR [eax+0x28]
10002fd7:	01 d0                	add    eax,edx
10002fd9:	89 45 bc             	mov    DWORD PTR [ebp-0x44],eax
10002fdc:	8d 45 8c             	lea    eax,[ebp-0x74]
10002fdf:	89 45 84             	mov    DWORD PTR [ebp-0x7c],eax
10002fe2:	83 ec 04             	sub    esp,0x4
10002fe5:	83 ec 1c             	sub    esp,0x1c
10002fe8:	89 e0                	mov    eax,esp
10002fea:	89 c3                	mov    ebx,eax
10002fec:	8d 45 a8             	lea    eax,[ebp-0x58]
10002fef:	ba 07 00 00 00       	mov    edx,0x7
10002ff4:	89 df                	mov    edi,ebx
10002ff6:	89 c6                	mov    esi,eax
10002ff8:	89 d1                	mov    ecx,edx
10002ffa:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002ffc:	83 ec 1c             	sub    esp,0x1c
10002fff:	89 e0                	mov    eax,esp
10003001:	89 c3                	mov    ebx,eax
10003003:	8d 45 c4             	lea    eax,[ebp-0x3c]
10003006:	ba 07 00 00 00       	mov    edx,0x7
1000300b:	89 df                	mov    edi,ebx
1000300d:	89 c6                	mov    esi,eax
1000300f:	89 d1                	mov    ecx,edx
10003011:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003013:	ff 75 84             	push   DWORD PTR [ebp-0x7c]
10003016:	e8 fc ff ff ff       	call   10003017 <NFrame::getDrawRegion()+0xcb>	10003017: R_386_PC32	getRegionUnion(Region, Region)
1000301b:	83 c4 3c             	add    esp,0x3c
1000301e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10003021:	83 ec 0c             	sub    esp,0xc
10003024:	50                   	push   eax
10003025:	e8 fc ff ff ff       	call   10003026 <NFrame::getDrawRegion()+0xda>	10003026: R_386_PC32	free
1000302a:	83 c4 10             	add    esp,0x10
1000302d:	8d 45 c4             	lea    eax,[ebp-0x3c]
10003030:	8d 55 8c             	lea    edx,[ebp-0x74]
10003033:	b9 19 00 00 00       	mov    ecx,0x19
10003038:	89 c7                	mov    edi,eax
1000303a:	89 d6                	mov    esi,edx
1000303c:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000303e:	e9 3c ff ff ff       	jmp    10002f7f <NFrame::getDrawRegion()+0x33>
10003043:	90                   	nop
10003044:	e9 36 ff ff ff       	jmp    10002f7f <NFrame::getDrawRegion()+0x33>
10003049:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000304c:	89 45 84             	mov    DWORD PTR [ebp-0x7c],eax
1000304f:	83 ec 04             	sub    esp,0x4
10003052:	83 ec 1c             	sub    esp,0x1c
10003055:	89 e0                	mov    eax,esp
10003057:	89 c3                	mov    ebx,eax
10003059:	8d 45 c4             	lea    eax,[ebp-0x3c]
1000305c:	ba 07 00 00 00       	mov    edx,0x7
10003061:	89 df                	mov    edi,ebx
10003063:	89 c6                	mov    esi,eax
10003065:	89 d1                	mov    ecx,edx
10003067:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003069:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000306c:	83 ec 1c             	sub    esp,0x1c
1000306f:	89 e2                	mov    edx,esp
10003071:	8d 58 14             	lea    ebx,[eax+0x14]
10003074:	b8 07 00 00 00       	mov    eax,0x7
10003079:	89 d7                	mov    edi,edx
1000307b:	89 de                	mov    esi,ebx
1000307d:	89 c1                	mov    ecx,eax
1000307f:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003081:	ff 75 84             	push   DWORD PTR [ebp-0x7c]
10003084:	e8 fc ff ff ff       	call   10003085 <NFrame::getDrawRegion()+0x139>	10003085: R_386_PC32	getRegionDifference(Region, Region)
10003089:	83 c4 3c             	add    esp,0x3c
1000308c:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000308f:	83 ec 0c             	sub    esp,0xc
10003092:	50                   	push   eax
10003093:	e8 fc ff ff ff       	call   10003094 <NFrame::getDrawRegion()+0x148>	10003094: R_386_PC32	free
10003098:	83 c4 10             	add    esp,0x10
1000309b:	90                   	nop
1000309c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000309f:	8d 65 f4             	lea    esp,[ebp-0xc]
100030a2:	5b                   	pop    ebx
100030a3:	5e                   	pop    esi
100030a4:	5f                   	pop    edi
100030a5:	5d                   	pop    ebp
100030a6:	c2 04 00             	ret    0x4
100030a9:	90                   	nop

100030aa <NFrame::regenerateRegion()>:
100030aa:	55                   	push   ebp
100030ab:	89 e5                	mov    ebp,esp
100030ad:	57                   	push   edi
100030ae:	56                   	push   esi
100030af:	53                   	push   ebx
100030b0:	83 ec 6c             	sub    esp,0x6c
100030b3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100030b6:	8d 45 94             	lea    eax,[ebp-0x6c]
100030b9:	8d 5a 14             	lea    ebx,[edx+0x14]
100030bc:	ba 07 00 00 00       	mov    edx,0x7
100030c1:	89 c7                	mov    edi,eax
100030c3:	89 de                	mov    esi,ebx
100030c5:	89 d1                	mov    ecx,edx
100030c7:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100030c9:	8b 75 9c             	mov    esi,DWORD PTR [ebp-0x64]
100030cc:	8b 5d 98             	mov    ebx,DWORD PTR [ebp-0x68]
100030cf:	8b 4d a8             	mov    ecx,DWORD PTR [ebp-0x58]
100030d2:	8b 55 a4             	mov    edx,DWORD PTR [ebp-0x5c]
100030d5:	8d 45 b0             	lea    eax,[ebp-0x50]
100030d8:	83 ec 0c             	sub    esp,0xc
100030db:	56                   	push   esi
100030dc:	53                   	push   ebx
100030dd:	51                   	push   ecx
100030de:	52                   	push   edx
100030df:	50                   	push   eax
100030e0:	e8 fc ff ff ff       	call   100030e1 <NFrame::regenerateRegion()+0x37>	100030e1: R_386_PC32	createRectangleRegion(int, int, int, int)
100030e5:	83 c4 1c             	add    esp,0x1c
100030e8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100030eb:	8d 58 14             	lea    ebx,[eax+0x14]
100030ee:	8d 45 b0             	lea    eax,[ebp-0x50]
100030f1:	ba 19 00 00 00       	mov    edx,0x19
100030f6:	89 df                	mov    edi,ebx
100030f8:	89 c6                	mov    esi,eax
100030fa:	89 d1                	mov    ecx,edx
100030fc:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100030fe:	8b 45 94             	mov    eax,DWORD PTR [ebp-0x6c]
10003101:	83 ec 0c             	sub    esp,0xc
10003104:	50                   	push   eax
10003105:	e8 fc ff ff ff       	call   10003106 <NFrame::regenerateRegion()+0x5c>	10003106: R_386_PC32	free
1000310a:	83 c4 10             	add    esp,0x10
1000310d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003110:	8a 40 69             	mov    al,BYTE PTR [eax+0x69]
10003113:	84 c0                	test   al,al
10003115:	74 68                	je     1000317f <NFrame::regenerateRegion()+0xd5>
10003117:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
1000311a:	8d 45 94             	lea    eax,[ebp-0x6c]
1000311d:	8d 5a 30             	lea    ebx,[edx+0x30]
10003120:	ba 19 00 00 00       	mov    edx,0x19
10003125:	89 c7                	mov    edi,eax
10003127:	89 de                	mov    esi,ebx
10003129:	89 d1                	mov    ecx,edx
1000312b:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000312d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003130:	8b 70 1c             	mov    esi,DWORD PTR [eax+0x1c]
10003133:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003136:	8b 58 18             	mov    ebx,DWORD PTR [eax+0x18]
10003139:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000313c:	8b 48 28             	mov    ecx,DWORD PTR [eax+0x28]
1000313f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003142:	8b 50 24             	mov    edx,DWORD PTR [eax+0x24]
10003145:	8d 45 cc             	lea    eax,[ebp-0x34]
10003148:	83 ec 08             	sub    esp,0x8
1000314b:	6a 02                	push   0x2
1000314d:	56                   	push   esi
1000314e:	53                   	push   ebx
1000314f:	51                   	push   ecx
10003150:	52                   	push   edx
10003151:	50                   	push   eax
10003152:	e8 fc ff ff ff       	call   10003153 <NFrame::regenerateRegion()+0xa9>	10003153: R_386_PC32	createAntRegion(int, int, int, int, int)
10003157:	83 c4 1c             	add    esp,0x1c
1000315a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000315d:	8d 58 30             	lea    ebx,[eax+0x30]
10003160:	8d 45 cc             	lea    eax,[ebp-0x34]
10003163:	ba 19 00 00 00       	mov    edx,0x19
10003168:	89 df                	mov    edi,ebx
1000316a:	89 c6                	mov    esi,eax
1000316c:	89 d1                	mov    ecx,edx
1000316e:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10003170:	8b 45 94             	mov    eax,DWORD PTR [ebp-0x6c]
10003173:	83 ec 0c             	sub    esp,0xc
10003176:	50                   	push   eax
10003177:	e8 fc ff ff ff       	call   10003178 <NFrame::regenerateRegion()+0xce>	10003178: R_386_PC32	free
1000317c:	83 c4 10             	add    esp,0x10
1000317f:	90                   	nop
10003180:	8d 65 f4             	lea    esp,[ebp-0xc]
10003183:	5b                   	pop    ebx
10003184:	5e                   	pop    esi
10003185:	5f                   	pop    edi
10003186:	5d                   	pop    ebp
10003187:	c3                   	ret    

10003188 <NFrame::isHiddenOverall()>:
10003188:	55                   	push   ebp
10003189:	89 e5                	mov    ebp,esp
1000318b:	83 ec 08             	sub    esp,0x8
1000318e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003191:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
10003194:	84 c0                	test   al,al
10003196:	75 20                	jne    100031b8 <NFrame::isHiddenOverall()+0x30>
10003198:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000319b:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
1000319e:	85 c0                	test   eax,eax
100031a0:	74 1a                	je     100031bc <NFrame::isHiddenOverall()+0x34>
100031a2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100031a5:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100031a8:	83 ec 0c             	sub    esp,0xc
100031ab:	50                   	push   eax
100031ac:	e8 fc ff ff ff       	call   100031ad <NFrame::isHiddenOverall()+0x25>	100031ad: R_386_PC32	NFrame::isHiddenOverall()
100031b1:	83 c4 10             	add    esp,0x10
100031b4:	84 c0                	test   al,al
100031b6:	74 04                	je     100031bc <NFrame::isHiddenOverall()+0x34>
100031b8:	b0 01                	mov    al,0x1
100031ba:	eb 02                	jmp    100031be <NFrame::isHiddenOverall()+0x36>
100031bc:	b0 00                	mov    al,0x0
100031be:	c9                   	leave  
100031bf:	c3                   	ret    

100031c0 <NFrame::tryInvalidate()>:
100031c0:	55                   	push   ebp
100031c1:	89 e5                	mov    ebp,esp
100031c3:	57                   	push   edi
100031c4:	56                   	push   esi
100031c5:	53                   	push   ebx
100031c6:	83 ec 2c             	sub    esp,0x2c
100031c9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100031cc:	8a 40 69             	mov    al,BYTE PTR [eax+0x69]
100031cf:	84 c0                	test   al,al
100031d1:	74 5c                	je     1000322f <NFrame::tryInvalidate()+0x6f>
100031d3:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100031d6:	8d 45 cc             	lea    eax,[ebp-0x34]
100031d9:	8d 5a 30             	lea    ebx,[edx+0x30]
100031dc:	ba 07 00 00 00       	mov    edx,0x7
100031e1:	89 c7                	mov    edi,eax
100031e3:	89 de                	mov    esi,ebx
100031e5:	89 d1                	mov    ecx,edx
100031e7:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100031e9:	83 ec 0c             	sub    esp,0xc
100031ec:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100031ef:	e8 fc ff ff ff       	call   100031f0 <NFrame::tryInvalidate()+0x30>	100031f0: R_386_PC32	NFrame::getAbsX()
100031f4:	83 c4 10             	add    esp,0x10
100031f7:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
100031fa:	83 ec 0c             	sub    esp,0xc
100031fd:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003200:	e8 fc ff ff ff       	call   10003201 <NFrame::tryInvalidate()+0x41>	10003201: R_386_PC32	NFrame::getAbsY()
10003205:	83 c4 10             	add    esp,0x10
10003208:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
1000320b:	83 ec 1c             	sub    esp,0x1c
1000320e:	89 e0                	mov    eax,esp
10003210:	89 c3                	mov    ebx,eax
10003212:	8d 45 cc             	lea    eax,[ebp-0x34]
10003215:	ba 07 00 00 00       	mov    edx,0x7
1000321a:	89 df                	mov    edi,ebx
1000321c:	89 c6                	mov    esi,eax
1000321e:	89 d1                	mov    ecx,edx
10003220:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003222:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003225:	e8 fc ff ff ff       	call   10003226 <NFrame::tryInvalidate()+0x66>	10003226: R_386_PC32	NFrame::markRegionAsDirty(Region)
1000322a:	83 c4 20             	add    esp,0x20
1000322d:	eb 23                	jmp    10003252 <NFrame::tryInvalidate()+0x92>
1000322f:	83 ec 0c             	sub    esp,0xc
10003232:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003235:	e8 fc ff ff ff       	call   10003236 <NFrame::tryInvalidate()+0x76>	10003236: R_386_PC32	NFrame::isHiddenOverall()
1000323a:	83 c4 10             	add    esp,0x10
1000323d:	83 f0 01             	xor    eax,0x1
10003240:	84 c0                	test   al,al
10003242:	74 0e                	je     10003252 <NFrame::tryInvalidate()+0x92>
10003244:	83 ec 0c             	sub    esp,0xc
10003247:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000324a:	e8 fc ff ff ff       	call   1000324b <NFrame::tryInvalidate()+0x8b>	1000324b: R_386_PC32	NFrame::invalidate()
1000324f:	83 c4 10             	add    esp,0x10
10003252:	8d 65 f4             	lea    esp,[ebp-0xc]
10003255:	5b                   	pop    ebx
10003256:	5e                   	pop    esi
10003257:	5f                   	pop    edi
10003258:	5d                   	pop    ebp
10003259:	c3                   	ret    

1000325a <NFrame::getAbsX()>:
1000325a:	55                   	push   ebp
1000325b:	89 e5                	mov    ebp,esp
1000325d:	83 ec 08             	sub    esp,0x8
10003260:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003263:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10003266:	85 c0                	test   eax,eax
10003268:	74 1e                	je     10003288 <NFrame::getAbsX()+0x2e>
1000326a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000326d:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10003270:	83 ec 0c             	sub    esp,0xc
10003273:	50                   	push   eax
10003274:	e8 fc ff ff ff       	call   10003275 <NFrame::getAbsX()+0x1b>	10003275: R_386_PC32	NFrame::getAbsX()
10003279:	83 c4 10             	add    esp,0x10
1000327c:	89 c2                	mov    edx,eax
1000327e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003281:	8b 40 24             	mov    eax,DWORD PTR [eax+0x24]
10003284:	01 d0                	add    eax,edx
10003286:	eb 06                	jmp    1000328e <NFrame::getAbsX()+0x34>
10003288:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000328b:	8b 40 24             	mov    eax,DWORD PTR [eax+0x24]
1000328e:	c9                   	leave  
1000328f:	c3                   	ret    

10003290 <NFrame::getAbsY()>:
10003290:	55                   	push   ebp
10003291:	89 e5                	mov    ebp,esp
10003293:	83 ec 08             	sub    esp,0x8
10003296:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003299:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
1000329c:	85 c0                	test   eax,eax
1000329e:	74 1e                	je     100032be <NFrame::getAbsY()+0x2e>
100032a0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100032a3:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100032a6:	83 ec 0c             	sub    esp,0xc
100032a9:	50                   	push   eax
100032aa:	e8 fc ff ff ff       	call   100032ab <NFrame::getAbsY()+0x1b>	100032ab: R_386_PC32	NFrame::getAbsY()
100032af:	83 c4 10             	add    esp,0x10
100032b2:	89 c2                	mov    edx,eax
100032b4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100032b7:	8b 40 28             	mov    eax,DWORD PTR [eax+0x28]
100032ba:	01 d0                	add    eax,edx
100032bc:	eb 06                	jmp    100032c4 <NFrame::getAbsY()+0x34>
100032be:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100032c1:	8b 40 28             	mov    eax,DWORD PTR [eax+0x28]
100032c4:	c9                   	leave  
100032c5:	c3                   	ret    

100032c6 <NFrame::repaint(Video*, Region)>:
100032c6:	55                   	push   ebp
100032c7:	89 e5                	mov    ebp,esp
100032c9:	57                   	push   edi
100032ca:	56                   	push   esi
100032cb:	53                   	push   ebx
100032cc:	83 ec 7c             	sub    esp,0x7c
100032cf:	8d 45 b0             	lea    eax,[ebp-0x50]
100032d2:	83 ec 08             	sub    esp,0x8
100032d5:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100032d8:	50                   	push   eax
100032d9:	e8 fc ff ff ff       	call   100032da <NFrame::repaint(Video*, Region)+0x14>	100032da: R_386_PC32	NFrame::getDirtyRegion()
100032de:	83 c4 0c             	add    esp,0xc
100032e1:	8d 45 94             	lea    eax,[ebp-0x6c]
100032e4:	89 45 84             	mov    DWORD PTR [ebp-0x7c],eax
100032e7:	83 ec 04             	sub    esp,0x4
100032ea:	83 ec 1c             	sub    esp,0x1c
100032ed:	89 e0                	mov    eax,esp
100032ef:	89 c3                	mov    ebx,eax
100032f1:	8d 45 10             	lea    eax,[ebp+0x10]
100032f4:	ba 07 00 00 00       	mov    edx,0x7
100032f9:	89 df                	mov    edi,ebx
100032fb:	89 c6                	mov    esi,eax
100032fd:	89 d1                	mov    ecx,edx
100032ff:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003301:	83 ec 1c             	sub    esp,0x1c
10003304:	89 e0                	mov    eax,esp
10003306:	89 c3                	mov    ebx,eax
10003308:	8d 45 b0             	lea    eax,[ebp-0x50]
1000330b:	ba 07 00 00 00       	mov    edx,0x7
10003310:	89 df                	mov    edi,ebx
10003312:	89 c6                	mov    esi,eax
10003314:	89 d1                	mov    ecx,edx
10003316:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003318:	ff 75 84             	push   DWORD PTR [ebp-0x7c]
1000331b:	e8 fc ff ff ff       	call   1000331c <NFrame::repaint(Video*, Region)+0x56>	1000331c: R_386_PC32	getRegionDifference(Region, Region)
10003320:	83 c4 3c             	add    esp,0x3c
10003323:	8d 45 cc             	lea    eax,[ebp-0x34]
10003326:	89 45 84             	mov    DWORD PTR [ebp-0x7c],eax
10003329:	83 ec 04             	sub    esp,0x4
1000332c:	6a 01                	push   0x1
1000332e:	83 ec 1c             	sub    esp,0x1c
10003331:	89 e0                	mov    eax,esp
10003333:	89 c3                	mov    ebx,eax
10003335:	8d 45 94             	lea    eax,[ebp-0x6c]
10003338:	ba 07 00 00 00       	mov    edx,0x7
1000333d:	89 df                	mov    edi,ebx
1000333f:	89 c6                	mov    esi,eax
10003341:	89 d1                	mov    ecx,edx
10003343:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003345:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10003348:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000334b:	ff 75 84             	push   DWORD PTR [ebp-0x7c]
1000334e:	e8 fc ff ff ff       	call   1000334f <NFrame::repaint(Video*, Region)+0x89>	1000334f: R_386_PC32	NFrame::repaintAux(Video*, Region, bool)
10003353:	83 c4 2c             	add    esp,0x2c
10003356:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10003359:	83 ec 0c             	sub    esp,0xc
1000335c:	50                   	push   eax
1000335d:	e8 fc ff ff ff       	call   1000335e <NFrame::repaint(Video*, Region)+0x98>	1000335e: R_386_PC32	free
10003362:	83 c4 10             	add    esp,0x10
10003365:	8b 45 94             	mov    eax,DWORD PTR [ebp-0x6c]
10003368:	83 ec 0c             	sub    esp,0xc
1000336b:	50                   	push   eax
1000336c:	e8 fc ff ff ff       	call   1000336d <NFrame::repaint(Video*, Region)+0xa7>	1000336d: R_386_PC32	free
10003371:	83 c4 10             	add    esp,0x10
10003374:	90                   	nop
10003375:	8d 65 f4             	lea    esp,[ebp-0xc]
10003378:	5b                   	pop    ebx
10003379:	5e                   	pop    esi
1000337a:	5f                   	pop    edi
1000337b:	5d                   	pop    ebp
1000337c:	c3                   	ret    
1000337d:	90                   	nop

1000337e <NFrame::paintSolid(NFrame::Graphics, unsigned int)>:
1000337e:	55                   	push   ebp
1000337f:	89 e5                	mov    ebp,esp
10003381:	57                   	push   edi
10003382:	56                   	push   esi
10003383:	53                   	push   ebx
10003384:	83 ec 1c             	sub    esp,0x1c
10003387:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000338a:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000338d:	83 ec 0c             	sub    esp,0xc
10003390:	ff 75 2c             	push   DWORD PTR [ebp+0x2c]
10003393:	83 ec 1c             	sub    esp,0x1c
10003396:	89 e0                	mov    eax,esp
10003398:	89 c3                	mov    ebx,eax
1000339a:	8d 45 10             	lea    eax,[ebp+0x10]
1000339d:	ba 07 00 00 00       	mov    edx,0x7
100033a2:	89 df                	mov    edi,ebx
100033a4:	89 c6                	mov    esi,eax
100033a6:	89 d1                	mov    ecx,edx
100033a8:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100033aa:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
100033ad:	e8 fc ff ff ff       	call   100033ae <NFrame::paintSolid(NFrame::Graphics, unsigned int)+0x30>	100033ae: R_386_PC32	fillRegion(Video*, Region, unsigned int)
100033b2:	83 c4 30             	add    esp,0x30
100033b5:	90                   	nop
100033b6:	8d 65 f4             	lea    esp,[ebp-0xc]
100033b9:	5b                   	pop    ebx
100033ba:	5e                   	pop    esi
100033bb:	5f                   	pop    edi
100033bc:	5d                   	pop    ebp
100033bd:	c3                   	ret    

100033be <NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)>:
100033be:	55                   	push   ebp
100033bf:	89 e5                	mov    ebp,esp
100033c1:	57                   	push   edi
100033c2:	56                   	push   esi
100033c3:	53                   	push   ebx
100033c4:	83 ec 2c             	sub    esp,0x2c
100033c7:	83 ec 0c             	sub    esp,0xc
100033ca:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100033cd:	e8 fc ff ff ff       	call   100033ce <NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)+0x10>	100033ce: R_386_PC32	NFrame::getAbsY()
100033d2:	83 c4 10             	add    esp,0x10
100033d5:	89 c2                	mov    edx,eax
100033d7:	8b 45 30             	mov    eax,DWORD PTR [ebp+0x30]
100033da:	8d 1c 02             	lea    ebx,[edx+eax*1]
100033dd:	83 ec 0c             	sub    esp,0xc
100033e0:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100033e3:	e8 fc ff ff ff       	call   100033e4 <NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)+0x26>	100033e4: R_386_PC32	NFrame::getAbsX()
100033e8:	83 c4 10             	add    esp,0x10
100033eb:	89 c2                	mov    edx,eax
100033ed:	8b 45 2c             	mov    eax,DWORD PTR [ebp+0x2c]
100033f0:	01 c2                	add    edx,eax
100033f2:	8d 45 cc             	lea    eax,[ebp-0x34]
100033f5:	83 ec 0c             	sub    esp,0xc
100033f8:	ff 75 38             	push   DWORD PTR [ebp+0x38]
100033fb:	ff 75 34             	push   DWORD PTR [ebp+0x34]
100033fe:	53                   	push   ebx
100033ff:	52                   	push   edx
10003400:	50                   	push   eax
10003401:	e8 fc ff ff ff       	call   10003402 <NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)+0x44>	10003402: R_386_PC32	createRectangleRegion(int, int, int, int)
10003406:	83 c4 1c             	add    esp,0x1c
10003409:	83 ec 0c             	sub    esp,0xc
1000340c:	ff 75 3c             	push   DWORD PTR [ebp+0x3c]
1000340f:	83 ec 20             	sub    esp,0x20
10003412:	89 e0                	mov    eax,esp
10003414:	89 c3                	mov    ebx,eax
10003416:	8d 45 0c             	lea    eax,[ebp+0xc]
10003419:	ba 08 00 00 00       	mov    edx,0x8
1000341e:	89 df                	mov    edi,ebx
10003420:	89 c6                	mov    esi,eax
10003422:	89 d1                	mov    ecx,edx
10003424:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003426:	83 ec 1c             	sub    esp,0x1c
10003429:	89 e0                	mov    eax,esp
1000342b:	89 c3                	mov    ebx,eax
1000342d:	8d 45 cc             	lea    eax,[ebp-0x34]
10003430:	ba 07 00 00 00       	mov    edx,0x7
10003435:	89 df                	mov    edi,ebx
10003437:	89 c6                	mov    esi,eax
10003439:	89 d1                	mov    ecx,edx
1000343b:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000343d:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003440:	e8 fc ff ff ff       	call   10003441 <NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)+0x83>	10003441: R_386_PC32	NFrame::paintClippedCommon(Region, NFrame::Graphics, unsigned int)
10003445:	83 c4 50             	add    esp,0x50
10003448:	90                   	nop
10003449:	8d 65 f4             	lea    esp,[ebp-0xc]
1000344c:	5b                   	pop    ebx
1000344d:	5e                   	pop    esi
1000344e:	5f                   	pop    edi
1000344f:	5d                   	pop    ebp
10003450:	c3                   	ret    
10003451:	90                   	nop

10003452 <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)>:
10003452:	55                   	push   ebp
10003453:	89 e5                	mov    ebp,esp
10003455:	57                   	push   edi
10003456:	56                   	push   esi
10003457:	53                   	push   ebx
10003458:	83 ec 3c             	sub    esp,0x3c
1000345b:	83 ec 0c             	sub    esp,0xc
1000345e:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003461:	e8 fc ff ff ff       	call   10003462 <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0x10>	10003462: R_386_PC32	NFrame::getAbsX()
10003466:	83 c4 10             	add    esp,0x10
10003469:	01 45 2c             	add    DWORD PTR [ebp+0x2c],eax
1000346c:	83 ec 0c             	sub    esp,0xc
1000346f:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003472:	e8 fc ff ff ff       	call   10003473 <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0x21>	10003473: R_386_PC32	NFrame::getAbsY()
10003477:	83 c4 10             	add    esp,0x10
1000347a:	01 45 30             	add    DWORD PTR [ebp+0x30],eax
1000347d:	8b 45 2c             	mov    eax,DWORD PTR [ebp+0x2c]
10003480:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10003483:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
1000348a:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10003491:	8b 55 e0             	mov    edx,DWORD PTR [ebp-0x20]
10003494:	8b 45 34             	mov    eax,DWORD PTR [ebp+0x34]
10003497:	01 d0                	add    eax,edx
10003499:	8a 00                	mov    al,BYTE PTR [eax]
1000349b:	84 c0                	test   al,al
1000349d:	0f 84 9b 00 00 00    	je     1000353e <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0xec>
100034a3:	8b 55 e0             	mov    edx,DWORD PTR [ebp-0x20]
100034a6:	8b 45 34             	mov    eax,DWORD PTR [ebp+0x34]
100034a9:	01 d0                	add    eax,edx
100034ab:	8a 00                	mov    al,BYTE PTR [eax]
100034ad:	3c 0a                	cmp    al,0xa
100034af:	75 15                	jne    100034c6 <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0x74>
100034b1:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100034b4:	01 45 30             	add    DWORD PTR [ebp+0x30],eax
100034b7:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
100034be:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
100034c1:	89 45 2c             	mov    DWORD PTR [ebp+0x2c],eax
100034c4:	eb 70                	jmp    10003536 <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0xe4>
100034c6:	8b 55 e0             	mov    edx,DWORD PTR [ebp-0x20]
100034c9:	8b 45 34             	mov    eax,DWORD PTR [ebp+0x34]
100034cc:	01 d0                	add    eax,edx
100034ce:	8a 00                	mov    al,BYTE PTR [eax]
100034d0:	0f be d0             	movsx  edx,al
100034d3:	a1 00 00 00 00       	mov    eax,ds:0x0	100034d4: R_386_32	SYSTEM_FONT_HANDLE
100034d8:	8b 4d 0c             	mov    ecx,DWORD PTR [ebp+0xc]
100034db:	89 4d c4             	mov    DWORD PTR [ebp-0x3c],ecx
100034de:	83 ec 0c             	sub    esp,0xc
100034e1:	ff 75 38             	push   DWORD PTR [ebp+0x38]
100034e4:	ff 75 30             	push   DWORD PTR [ebp+0x30]
100034e7:	ff 75 2c             	push   DWORD PTR [ebp+0x2c]
100034ea:	52                   	push   edx
100034eb:	50                   	push   eax
100034ec:	83 ec 1c             	sub    esp,0x1c
100034ef:	89 e0                	mov    eax,esp
100034f1:	89 c3                	mov    ebx,eax
100034f3:	8d 45 10             	lea    eax,[ebp+0x10]
100034f6:	ba 07 00 00 00       	mov    edx,0x7
100034fb:	89 df                	mov    edi,ebx
100034fd:	89 c6                	mov    esi,eax
100034ff:	89 d1                	mov    ecx,edx
10003501:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003503:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10003506:	e8 fc ff ff ff       	call   10003507 <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0xb5>	10003507: R_386_PC32	drawFontCharacter(Video*, Region, int, int, int, int, unsigned int)
1000350b:	83 c4 40             	add    esp,0x40
1000350e:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10003511:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10003514:	0f b7 d0             	movzx  edx,ax
10003517:	8b 45 2c             	mov    eax,DWORD PTR [ebp+0x2c]
1000351a:	01 d0                	add    eax,edx
1000351c:	89 45 2c             	mov    DWORD PTR [ebp+0x2c],eax
1000351f:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10003522:	c1 e8 10             	shr    eax,0x10
10003525:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
10003528:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
1000352b:	3b 45 e4             	cmp    eax,DWORD PTR [ebp-0x1c]
1000352e:	7e 06                	jle    10003536 <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0xe4>
10003530:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10003533:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10003536:	ff 45 e0             	inc    DWORD PTR [ebp-0x20]
10003539:	e9 53 ff ff ff       	jmp    10003491 <NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)+0x3f>
1000353e:	90                   	nop
1000353f:	8d 65 f4             	lea    esp,[ebp-0xc]
10003542:	5b                   	pop    ebx
10003543:	5e                   	pop    esi
10003544:	5f                   	pop    edi
10003545:	5d                   	pop    ebp
10003546:	c3                   	ret    
10003547:	90                   	nop

10003548 <NWindow::NWindow(int, int, int, int, char const*, int)>:
10003548:	55                   	push   ebp
10003549:	89 e5                	mov    ebp,esp
1000354b:	57                   	push   edi
1000354c:	56                   	push   esi
1000354d:	53                   	push   ebx
1000354e:	83 ec 3c             	sub    esp,0x3c
10003551:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003554:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10003557:	8d 45 cc             	lea    eax,[ebp-0x34]
1000355a:	83 ec 0c             	sub    esp,0xc
1000355d:	ff 75 18             	push   DWORD PTR [ebp+0x18]
10003560:	ff 75 14             	push   DWORD PTR [ebp+0x14]
10003563:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10003566:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10003569:	50                   	push   eax
1000356a:	e8 fc ff ff ff       	call   1000356b <NWindow::NWindow(int, int, int, int, char const*, int)+0x23>	1000356b: R_386_PC32	createRectangleRegion(int, int, int, int)
1000356f:	83 c4 1c             	add    esp,0x1c
10003572:	83 ec 1c             	sub    esp,0x1c
10003575:	89 e0                	mov    eax,esp
10003577:	89 c3                	mov    ebx,eax
10003579:	8d 45 cc             	lea    eax,[ebp-0x34]
1000357c:	ba 07 00 00 00       	mov    edx,0x7
10003581:	89 df                	mov    edi,ebx
10003583:	89 c6                	mov    esi,eax
10003585:	89 d1                	mov    ecx,edx
10003587:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003589:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
1000358c:	e8 fc ff ff ff       	call   1000358d <NWindow::NWindow(int, int, int, int, char const*, int)+0x45>	1000358d: R_386_PC32	NFrame::NFrame(Region)
10003591:	83 c4 20             	add    esp,0x20
10003594:	ba 08 00 00 00       	mov    edx,0x8	10003595: R_386_32	vtable for NWindow
10003599:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000359c:	89 10                	mov    DWORD PTR [eax],edx
1000359e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100035a1:	c7 80 88 00 00 00 03 00 00 00 	mov    DWORD PTR [eax+0x88],0x3
100035ab:	c6 45 cb 00          	mov    BYTE PTR [ebp-0x35],0x0
100035af:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100035b2:	8b 55 20             	mov    edx,DWORD PTR [ebp+0x20]
100035b5:	89 50 6c             	mov    DWORD PTR [eax+0x6c],edx
100035b8:	83 7d 1c 00          	cmp    DWORD PTR [ebp+0x1c],0x0
100035bc:	75 06                	jne    100035c4 <NWindow::NWindow(int, int, int, int, char const*, int)+0x7c>
100035be:	8d 45 cb             	lea    eax,[ebp-0x35]
100035c1:	89 45 1c             	mov    DWORD PTR [ebp+0x1c],eax
100035c4:	83 ec 0c             	sub    esp,0xc
100035c7:	ff 75 1c             	push   DWORD PTR [ebp+0x1c]
100035ca:	e8 fc ff ff ff       	call   100035cb <NWindow::NWindow(int, int, int, int, char const*, int)+0x83>	100035cb: R_386_PC32	strlen
100035cf:	83 c4 10             	add    esp,0x10
100035d2:	40                   	inc    eax
100035d3:	83 ec 0c             	sub    esp,0xc
100035d6:	50                   	push   eax
100035d7:	e8 fc ff ff ff       	call   100035d8 <NWindow::NWindow(int, int, int, int, char const*, int)+0x90>	100035d8: R_386_PC32	malloc
100035dc:	83 c4 10             	add    esp,0x10
100035df:	89 c2                	mov    edx,eax
100035e1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100035e4:	89 90 8c 00 00 00    	mov    DWORD PTR [eax+0x8c],edx
100035ea:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100035ed:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [eax+0x8c]
100035f3:	83 ec 08             	sub    esp,0x8
100035f6:	ff 75 1c             	push   DWORD PTR [ebp+0x1c]
100035f9:	50                   	push   eax
100035fa:	e8 fc ff ff ff       	call   100035fb <NWindow::NWindow(int, int, int, int, char const*, int)+0xb3>	100035fb: R_386_PC32	strcpy
100035ff:	83 c4 10             	add    esp,0x10
10003602:	83 ec 0c             	sub    esp,0xc
10003605:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003608:	e8 fc ff ff ff       	call   10003609 <NWindow::NWindow(int, int, int, int, char const*, int)+0xc1>	10003609: R_386_PC32	NWindow::clipCornersIfNeededToMakeShadows()
1000360d:	83 c4 10             	add    esp,0x10
10003610:	90                   	nop
10003611:	8d 65 f4             	lea    esp,[ebp-0xc]
10003614:	5b                   	pop    ebx
10003615:	5e                   	pop    esi
10003616:	5f                   	pop    edi
10003617:	5d                   	pop    ebp
10003618:	c3                   	ret    
10003619:	90                   	nop

1000361a <NWindow::clipCornersIfNeededToMakeShadows()>:
1000361a:	55                   	push   ebp
1000361b:	89 e5                	mov    ebp,esp
1000361d:	57                   	push   edi
1000361e:	56                   	push   esi
1000361f:	53                   	push   ebx
10003620:	81 ec 8c 00 00 00    	sub    esp,0x8c
10003626:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003629:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
1000362c:	83 e0 04             	and    eax,0x4
1000362f:	85 c0                	test   eax,eax
10003631:	0f 85 96 01 00 00    	jne    100037cd <NWindow::clipCornersIfNeededToMakeShadows()+0x1b3>
10003637:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000363a:	8a 40 70             	mov    al,BYTE PTR [eax+0x70]
1000363d:	83 f0 01             	xor    eax,0x1
10003640:	84 c0                	test   al,al
10003642:	0f 84 85 01 00 00    	je     100037cd <NWindow::clipCornersIfNeededToMakeShadows()+0x1b3>
10003648:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000364b:	c7 80 88 00 00 00 03 00 00 00 	mov    DWORD PTR [eax+0x88],0x3
10003655:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003658:	8b 98 88 00 00 00    	mov    ebx,DWORD PTR [eax+0x88]
1000365e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003661:	8b 88 88 00 00 00    	mov    ecx,DWORD PTR [eax+0x88]
10003667:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000366a:	8b 50 28             	mov    edx,DWORD PTR [eax+0x28]
1000366d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003670:	8b 70 24             	mov    esi,DWORD PTR [eax+0x24]
10003673:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003676:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
10003679:	01 c6                	add    esi,eax
1000367b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000367e:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [eax+0x88]
10003684:	29 c6                	sub    esi,eax
10003686:	8d 45 cc             	lea    eax,[ebp-0x34]
10003689:	83 ec 0c             	sub    esp,0xc
1000368c:	53                   	push   ebx
1000368d:	51                   	push   ecx
1000368e:	52                   	push   edx
1000368f:	56                   	push   esi
10003690:	50                   	push   eax
10003691:	e8 fc ff ff ff       	call   10003692 <NWindow::clipCornersIfNeededToMakeShadows()+0x78>	10003692: R_386_PC32	createRectangleRegion(int, int, int, int)
10003696:	83 c4 1c             	add    esp,0x1c
10003699:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000369c:	8b 98 88 00 00 00    	mov    ebx,DWORD PTR [eax+0x88]
100036a2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100036a5:	8b 88 88 00 00 00    	mov    ecx,DWORD PTR [eax+0x88]
100036ab:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100036ae:	8b 50 28             	mov    edx,DWORD PTR [eax+0x28]
100036b1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100036b4:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
100036b7:	01 c2                	add    edx,eax
100036b9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100036bc:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [eax+0x88]
100036c2:	89 d6                	mov    esi,edx
100036c4:	29 c6                	sub    esi,eax
100036c6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100036c9:	8b 50 24             	mov    edx,DWORD PTR [eax+0x24]
100036cc:	8d 45 b0             	lea    eax,[ebp-0x50]
100036cf:	83 ec 0c             	sub    esp,0xc
100036d2:	53                   	push   ebx
100036d3:	51                   	push   ecx
100036d4:	56                   	push   esi
100036d5:	52                   	push   edx
100036d6:	50                   	push   eax
100036d7:	e8 fc ff ff ff       	call   100036d8 <NWindow::clipCornersIfNeededToMakeShadows()+0xbe>	100036d8: R_386_PC32	createRectangleRegion(int, int, int, int)
100036dc:	83 c4 1c             	add    esp,0x1c
100036df:	8d 45 94             	lea    eax,[ebp-0x6c]
100036e2:	89 85 74 ff ff ff    	mov    DWORD PTR [ebp-0x8c],eax
100036e8:	83 ec 04             	sub    esp,0x4
100036eb:	83 ec 1c             	sub    esp,0x1c
100036ee:	89 e0                	mov    eax,esp
100036f0:	89 c3                	mov    ebx,eax
100036f2:	8d 45 b0             	lea    eax,[ebp-0x50]
100036f5:	ba 07 00 00 00       	mov    edx,0x7
100036fa:	89 df                	mov    edi,ebx
100036fc:	89 c6                	mov    esi,eax
100036fe:	89 d1                	mov    ecx,edx
10003700:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003702:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003705:	83 ec 1c             	sub    esp,0x1c
10003708:	89 e2                	mov    edx,esp
1000370a:	8d 58 14             	lea    ebx,[eax+0x14]
1000370d:	b8 07 00 00 00       	mov    eax,0x7
10003712:	89 d7                	mov    edi,edx
10003714:	89 de                	mov    esi,ebx
10003716:	89 c1                	mov    ecx,eax
10003718:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000371a:	ff b5 74 ff ff ff    	push   DWORD PTR [ebp-0x8c]
10003720:	e8 fc ff ff ff       	call   10003721 <NWindow::clipCornersIfNeededToMakeShadows()+0x107>	10003721: R_386_PC32	getRegionDifference(Region, Region)
10003725:	83 c4 3c             	add    esp,0x3c
10003728:	8d 85 78 ff ff ff    	lea    eax,[ebp-0x88]
1000372e:	89 85 74 ff ff ff    	mov    DWORD PTR [ebp-0x8c],eax
10003734:	83 ec 04             	sub    esp,0x4
10003737:	83 ec 1c             	sub    esp,0x1c
1000373a:	89 e0                	mov    eax,esp
1000373c:	89 c3                	mov    ebx,eax
1000373e:	8d 45 cc             	lea    eax,[ebp-0x34]
10003741:	ba 07 00 00 00       	mov    edx,0x7
10003746:	89 df                	mov    edi,ebx
10003748:	89 c6                	mov    esi,eax
1000374a:	89 d1                	mov    ecx,edx
1000374c:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000374e:	83 ec 1c             	sub    esp,0x1c
10003751:	89 e0                	mov    eax,esp
10003753:	89 c3                	mov    ebx,eax
10003755:	8d 45 94             	lea    eax,[ebp-0x6c]
10003758:	ba 07 00 00 00       	mov    edx,0x7
1000375d:	89 df                	mov    edi,ebx
1000375f:	89 c6                	mov    esi,eax
10003761:	89 d1                	mov    ecx,edx
10003763:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003765:	ff b5 74 ff ff ff    	push   DWORD PTR [ebp-0x8c]
1000376b:	e8 fc ff ff ff       	call   1000376c <NWindow::clipCornersIfNeededToMakeShadows()+0x152>	1000376c: R_386_PC32	getRegionDifference(Region, Region)
10003770:	83 c4 3c             	add    esp,0x3c
10003773:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003776:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
10003779:	83 ec 0c             	sub    esp,0xc
1000377c:	50                   	push   eax
1000377d:	e8 fc ff ff ff       	call   1000377e <NWindow::clipCornersIfNeededToMakeShadows()+0x164>	1000377e: R_386_PC32	free
10003782:	83 c4 10             	add    esp,0x10
10003785:	8b 45 94             	mov    eax,DWORD PTR [ebp-0x6c]
10003788:	83 ec 0c             	sub    esp,0xc
1000378b:	50                   	push   eax
1000378c:	e8 fc ff ff ff       	call   1000378d <NWindow::clipCornersIfNeededToMakeShadows()+0x173>	1000378d: R_386_PC32	free
10003791:	83 c4 10             	add    esp,0x10
10003794:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10003797:	83 ec 0c             	sub    esp,0xc
1000379a:	50                   	push   eax
1000379b:	e8 fc ff ff ff       	call   1000379c <NWindow::clipCornersIfNeededToMakeShadows()+0x182>	1000379c: R_386_PC32	free
100037a0:	83 c4 10             	add    esp,0x10
100037a3:	8b 45 b0             	mov    eax,DWORD PTR [ebp-0x50]
100037a6:	83 ec 0c             	sub    esp,0xc
100037a9:	50                   	push   eax
100037aa:	e8 fc ff ff ff       	call   100037ab <NWindow::clipCornersIfNeededToMakeShadows()+0x191>	100037ab: R_386_PC32	free
100037af:	83 c4 10             	add    esp,0x10
100037b2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100037b5:	8d 58 14             	lea    ebx,[eax+0x14]
100037b8:	8d 85 78 ff ff ff    	lea    eax,[ebp-0x88]
100037be:	ba 19 00 00 00       	mov    edx,0x19
100037c3:	89 df                	mov    edi,ebx
100037c5:	89 c6                	mov    esi,eax
100037c7:	89 d1                	mov    ecx,edx
100037c9:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100037cb:	eb 0d                	jmp    100037da <NWindow::clipCornersIfNeededToMakeShadows()+0x1c0>
100037cd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100037d0:	c7 80 88 00 00 00 00 00 00 00 	mov    DWORD PTR [eax+0x88],0x0
100037da:	90                   	nop
100037db:	8d 65 f4             	lea    esp,[ebp-0xc]
100037de:	5b                   	pop    ebx
100037df:	5e                   	pop    esi
100037e0:	5f                   	pop    edi
100037e1:	5d                   	pop    ebp
100037e2:	c3                   	ret    
100037e3:	90                   	nop

100037e4 <NWindow::postResizeCleanup()>:
100037e4:	55                   	push   ebp
100037e5:	89 e5                	mov    ebp,esp
100037e7:	83 ec 08             	sub    esp,0x8
100037ea:	83 ec 0c             	sub    esp,0xc
100037ed:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100037f0:	e8 fc ff ff ff       	call   100037f1 <NWindow::postResizeCleanup()+0xd>	100037f1: R_386_PC32	NWindow::clipCornersIfNeededToMakeShadows()
100037f5:	83 c4 10             	add    esp,0x10
100037f8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100037fb:	83 ec 0c             	sub    esp,0xc
100037fe:	50                   	push   eax
100037ff:	e8 fc ff ff ff       	call   10003800 <NWindow::postResizeCleanup()+0x1c>	10003800: R_386_PC32	NFrame::tryInvalidate()
10003804:	83 c4 10             	add    esp,0x10
10003807:	90                   	nop
10003808:	c9                   	leave  
10003809:	c3                   	ret    

1000380a <NWindow::paintHandler(NFrame::Graphics)>:
1000380a:	55                   	push   ebp
1000380b:	89 e5                	mov    ebp,esp
1000380d:	57                   	push   edi
1000380e:	56                   	push   esi
1000380f:	53                   	push   ebx
10003810:	83 ec 4c             	sub    esp,0x4c
10003813:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003816:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
10003819:	83 e0 08             	and    eax,0x8
1000381c:	85 c0                	test   eax,eax
1000381e:	0f 85 56 04 00 00    	jne    10003c7a <NWindow::paintHandler(NFrame::Graphics)+0x470>
10003824:	c7 45 e4 18 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x18
1000382b:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10003832:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [ebp-0x24],0x0
10003839:	c7 45 d8 c0 c0 c0 00 	mov    DWORD PTR [ebp-0x28],0xc0c0c0
10003840:	c7 45 d4 ff ff ff 00 	mov    DWORD PTR [ebp-0x2c],0xffffff
10003847:	c7 45 d0 ff ff ff 00 	mov    DWORD PTR [ebp-0x30],0xffffff
1000384e:	c7 45 cc 00 00 00 00 	mov    DWORD PTR [ebp-0x34],0x0
10003855:	c7 45 c8 00 00 00 00 	mov    DWORD PTR [ebp-0x38],0x0
1000385c:	c7 45 c4 c0 c0 c0 00 	mov    DWORD PTR [ebp-0x3c],0xc0c0c0
10003863:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003866:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
10003869:	83 e0 01             	and    eax,0x1
1000386c:	85 c0                	test   eax,eax
1000386e:	0f 85 09 02 00 00    	jne    10003a7d <NWindow::paintHandler(NFrame::Graphics)+0x273>
10003874:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003877:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
1000387a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000387d:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
10003880:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003883:	8b 80 84 00 00 00    	mov    eax,DWORD PTR [eax+0x84]
10003889:	89 d1                	mov    ecx,edx
1000388b:	29 c1                	sub    ecx,eax
1000388d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003890:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
10003893:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003896:	8b 80 84 00 00 00    	mov    eax,DWORD PTR [eax+0x84]
1000389c:	83 ec 08             	sub    esp,0x8
1000389f:	68 c0 c0 c0 00       	push   0xc0c0c0
100038a4:	51                   	push   ecx
100038a5:	52                   	push   edx
100038a6:	50                   	push   eax
100038a7:	6a 00                	push   0x0
100038a9:	83 ec 20             	sub    esp,0x20
100038ac:	89 e0                	mov    eax,esp
100038ae:	89 c3                	mov    ebx,eax
100038b0:	8d 45 0c             	lea    eax,[ebp+0xc]
100038b3:	ba 08 00 00 00       	mov    edx,0x8
100038b8:	89 df                	mov    edi,ebx
100038ba:	89 c6                	mov    esi,eax
100038bc:	89 d1                	mov    ecx,edx
100038be:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100038c0:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
100038c3:	e8 fc ff ff ff       	call   100038c4 <NWindow::paintHandler(NFrame::Graphics)+0xba>	100038c4: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
100038c8:	83 c4 40             	add    esp,0x40
100038cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100038ce:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
100038d1:	83 e0 02             	and    eax,0x2
100038d4:	85 c0                	test   eax,eax
100038d6:	0f 85 12 01 00 00    	jne    100039ee <NWindow::paintHandler(NFrame::Graphics)+0x1e4>
100038dc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100038df:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
100038e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100038e5:	8b 80 84 00 00 00    	mov    eax,DWORD PTR [eax+0x84]
100038eb:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100038ee:	8b 4a 18             	mov    ecx,DWORD PTR [edx+0x18]
100038f1:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100038f4:	8b 92 88 00 00 00    	mov    edx,DWORD PTR [edx+0x88]
100038fa:	29 d1                	sub    ecx,edx
100038fc:	89 ca                	mov    edx,ecx
100038fe:	83 ea 18             	sub    edx,0x18
10003901:	83 ec 08             	sub    esp,0x8
10003904:	68 ff ff ff 00       	push   0xffffff
10003909:	50                   	push   eax
1000390a:	52                   	push   edx
1000390b:	6a 00                	push   0x0
1000390d:	6a 00                	push   0x0
1000390f:	83 ec 20             	sub    esp,0x20
10003912:	89 e0                	mov    eax,esp
10003914:	89 c3                	mov    ebx,eax
10003916:	8d 45 0c             	lea    eax,[ebp+0xc]
10003919:	ba 08 00 00 00       	mov    edx,0x8
1000391e:	89 df                	mov    edi,ebx
10003920:	89 c6                	mov    esi,eax
10003922:	89 d1                	mov    ecx,edx
10003924:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003926:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003929:	e8 fc ff ff ff       	call   1000392a <NWindow::paintHandler(NFrame::Graphics)+0x120>	1000392a: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
1000392e:	83 c4 40             	add    esp,0x40
10003931:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003934:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003937:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000393a:	8b 80 84 00 00 00    	mov    eax,DWORD PTR [eax+0x84]
10003940:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10003943:	8b 52 18             	mov    edx,DWORD PTR [edx+0x18]
10003946:	8d 4a e8             	lea    ecx,[edx-0x18]
10003949:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
1000394c:	8b 92 88 00 00 00    	mov    edx,DWORD PTR [edx+0x88]
10003952:	29 d1                	sub    ecx,edx
10003954:	89 ca                	mov    edx,ecx
10003956:	83 ec 08             	sub    esp,0x8
10003959:	68 ff ff ff 00       	push   0xffffff
1000395e:	50                   	push   eax
1000395f:	6a 18                	push   0x18
10003961:	6a 00                	push   0x0
10003963:	52                   	push   edx
10003964:	83 ec 20             	sub    esp,0x20
10003967:	89 e0                	mov    eax,esp
10003969:	89 c3                	mov    ebx,eax
1000396b:	8d 45 0c             	lea    eax,[ebp+0xc]
1000396e:	ba 08 00 00 00       	mov    edx,0x8
10003973:	89 df                	mov    edi,ebx
10003975:	89 c6                	mov    esi,eax
10003977:	89 d1                	mov    ecx,edx
10003979:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000397b:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
1000397e:	e8 fc ff ff ff       	call   1000397f <NWindow::paintHandler(NFrame::Graphics)+0x175>	1000397f: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
10003983:	83 c4 40             	add    esp,0x40
10003986:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003989:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
1000398c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000398f:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
10003992:	83 e0 10             	and    eax,0x10
10003995:	85 c0                	test   eax,eax
10003997:	74 07                	je     100039a0 <NWindow::paintHandler(NFrame::Graphics)+0x196>
10003999:	b8 c0 c0 c0 00       	mov    eax,0xc0c0c0
1000399e:	eb 05                	jmp    100039a5 <NWindow::paintHandler(NFrame::Graphics)+0x19b>
100039a0:	b8 00 00 00 00       	mov    eax,0x0
100039a5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100039a8:	8b 52 18             	mov    edx,DWORD PTR [edx+0x18]
100039ab:	8d 4a e8             	lea    ecx,[edx-0x18]
100039ae:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
100039b1:	8b 92 88 00 00 00    	mov    edx,DWORD PTR [edx+0x88]
100039b7:	29 d1                	sub    ecx,edx
100039b9:	89 ca                	mov    edx,ecx
100039bb:	83 c2 08             	add    edx,0x8
100039be:	83 ec 0c             	sub    esp,0xc
100039c1:	50                   	push   eax
100039c2:	68 e8 46 00 10       	push   0x100046e8	100039c3: R_386_32	.text
100039c7:	6a 06                	push   0x6
100039c9:	52                   	push   edx
100039ca:	83 ec 20             	sub    esp,0x20
100039cd:	89 e0                	mov    eax,esp
100039cf:	89 c3                	mov    ebx,eax
100039d1:	8d 45 0c             	lea    eax,[ebp+0xc]
100039d4:	ba 08 00 00 00       	mov    edx,0x8
100039d9:	89 df                	mov    edi,ebx
100039db:	89 c6                	mov    esi,eax
100039dd:	89 d1                	mov    ecx,edx
100039df:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100039e1:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
100039e4:	e8 fc ff ff ff       	call   100039e5 <NWindow::paintHandler(NFrame::Graphics)+0x1db>	100039e5: R_386_PC32	NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)
100039e9:	83 c4 40             	add    esp,0x40
100039ec:	eb 52                	jmp    10003a40 <NWindow::paintHandler(NFrame::Graphics)+0x236>
100039ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100039f1:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
100039f4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100039f7:	8b 80 84 00 00 00    	mov    eax,DWORD PTR [eax+0x84]
100039fd:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10003a00:	8b 4a 18             	mov    ecx,DWORD PTR [edx+0x18]
10003a03:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10003a06:	8b 92 88 00 00 00    	mov    edx,DWORD PTR [edx+0x88]
10003a0c:	29 d1                	sub    ecx,edx
10003a0e:	89 ca                	mov    edx,ecx
10003a10:	83 ec 08             	sub    esp,0x8
10003a13:	68 ff ff ff 00       	push   0xffffff
10003a18:	50                   	push   eax
10003a19:	52                   	push   edx
10003a1a:	6a 00                	push   0x0
10003a1c:	6a 00                	push   0x0
10003a1e:	83 ec 20             	sub    esp,0x20
10003a21:	89 e0                	mov    eax,esp
10003a23:	89 c3                	mov    ebx,eax
10003a25:	8d 45 0c             	lea    eax,[ebp+0xc]
10003a28:	ba 08 00 00 00       	mov    edx,0x8
10003a2d:	89 df                	mov    edi,ebx
10003a2f:	89 c6                	mov    esi,eax
10003a31:	89 d1                	mov    ecx,edx
10003a33:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003a35:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003a38:	e8 fc ff ff ff       	call   10003a39 <NWindow::paintHandler(NFrame::Graphics)+0x22f>	10003a39: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
10003a3d:	83 c4 40             	add    esp,0x40
10003a40:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a43:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003a46:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a49:	8b 80 8c 00 00 00    	mov    eax,DWORD PTR [eax+0x8c]
10003a4f:	83 ec 0c             	sub    esp,0xc
10003a52:	6a 00                	push   0x0
10003a54:	50                   	push   eax
10003a55:	6a 06                	push   0x6
10003a57:	6a 08                	push   0x8
10003a59:	83 ec 20             	sub    esp,0x20
10003a5c:	89 e0                	mov    eax,esp
10003a5e:	89 c3                	mov    ebx,eax
10003a60:	8d 45 0c             	lea    eax,[ebp+0xc]
10003a63:	ba 08 00 00 00       	mov    edx,0x8
10003a68:	89 df                	mov    edi,ebx
10003a6a:	89 c6                	mov    esi,eax
10003a6c:	89 d1                	mov    ecx,edx
10003a6e:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003a70:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003a73:	e8 fc ff ff ff       	call   10003a74 <NWindow::paintHandler(NFrame::Graphics)+0x26a>	10003a74: R_386_PC32	NFrame::paintText(NFrame::Graphics, int, int, char const*, unsigned int)
10003a78:	83 c4 40             	add    esp,0x40
10003a7b:	eb 30                	jmp    10003aad <NWindow::paintHandler(NFrame::Graphics)+0x2a3>
10003a7d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003a80:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003a83:	83 ec 08             	sub    esp,0x8
10003a86:	68 c0 c0 c0 00       	push   0xc0c0c0
10003a8b:	83 ec 20             	sub    esp,0x20
10003a8e:	89 e0                	mov    eax,esp
10003a90:	89 c3                	mov    ebx,eax
10003a92:	8d 45 0c             	lea    eax,[ebp+0xc]
10003a95:	ba 08 00 00 00       	mov    edx,0x8
10003a9a:	89 df                	mov    edi,ebx
10003a9c:	89 c6                	mov    esi,eax
10003a9e:	89 d1                	mov    ecx,edx
10003aa0:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003aa2:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003aa5:	e8 fc ff ff ff       	call   10003aa6 <NWindow::paintHandler(NFrame::Graphics)+0x29c>	10003aa6: R_386_PC32	NFrame::paintSolid(NFrame::Graphics, unsigned int)
10003aaa:	83 c4 30             	add    esp,0x30
10003aad:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ab0:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
10003ab3:	83 e0 04             	and    eax,0x4
10003ab6:	85 c0                	test   eax,eax
10003ab8:	0f 85 bd 01 00 00    	jne    10003c7b <NWindow::paintHandler(NFrame::Graphics)+0x471>
10003abe:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ac1:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003ac4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ac7:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
10003aca:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003acd:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [eax+0x88]
10003ad3:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10003ad6:	8b 59 18             	mov    ebx,DWORD PTR [ecx+0x18]
10003ad9:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10003adc:	8b 89 88 00 00 00    	mov    ecx,DWORD PTR [ecx+0x88]
10003ae2:	29 cb                	sub    ebx,ecx
10003ae4:	89 d9                	mov    ecx,ebx
10003ae6:	83 ec 08             	sub    esp,0x8
10003ae9:	6a 00                	push   0x0
10003aeb:	52                   	push   edx
10003aec:	50                   	push   eax
10003aed:	6a 00                	push   0x0
10003aef:	51                   	push   ecx
10003af0:	83 ec 20             	sub    esp,0x20
10003af3:	89 e0                	mov    eax,esp
10003af5:	89 c3                	mov    ebx,eax
10003af7:	8d 45 0c             	lea    eax,[ebp+0xc]
10003afa:	ba 08 00 00 00       	mov    edx,0x8
10003aff:	89 df                	mov    edi,ebx
10003b01:	89 c6                	mov    esi,eax
10003b03:	89 d1                	mov    ecx,edx
10003b05:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003b07:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003b0a:	e8 fc ff ff ff       	call   10003b0b <NWindow::paintHandler(NFrame::Graphics)+0x301>	10003b0b: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
10003b0f:	83 c4 40             	add    esp,0x40
10003b12:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003b15:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003b18:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003b1b:	8b 90 88 00 00 00    	mov    edx,DWORD PTR [eax+0x88]
10003b21:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003b24:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
10003b27:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10003b2a:	8b 59 1c             	mov    ebx,DWORD PTR [ecx+0x1c]
10003b2d:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
10003b30:	8b 89 88 00 00 00    	mov    ecx,DWORD PTR [ecx+0x88]
10003b36:	29 cb                	sub    ebx,ecx
10003b38:	89 d9                	mov    ecx,ebx
10003b3a:	83 ec 08             	sub    esp,0x8
10003b3d:	6a 00                	push   0x0
10003b3f:	52                   	push   edx
10003b40:	50                   	push   eax
10003b41:	51                   	push   ecx
10003b42:	6a 00                	push   0x0
10003b44:	83 ec 20             	sub    esp,0x20
10003b47:	89 e0                	mov    eax,esp
10003b49:	89 c3                	mov    ebx,eax
10003b4b:	8d 45 0c             	lea    eax,[ebp+0xc]
10003b4e:	ba 08 00 00 00       	mov    edx,0x8
10003b53:	89 df                	mov    edi,ebx
10003b55:	89 c6                	mov    esi,eax
10003b57:	89 d1                	mov    ecx,edx
10003b59:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003b5b:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003b5e:	e8 fc ff ff ff       	call   10003b5f <NWindow::paintHandler(NFrame::Graphics)+0x355>	10003b5f: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
10003b63:	83 c4 40             	add    esp,0x40
10003b66:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003b69:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003b6c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003b6f:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
10003b72:	83 ec 08             	sub    esp,0x8
10003b75:	6a 00                	push   0x0
10003b77:	6a 01                	push   0x1
10003b79:	50                   	push   eax
10003b7a:	6a 00                	push   0x0
10003b7c:	6a 00                	push   0x0
10003b7e:	83 ec 20             	sub    esp,0x20
10003b81:	89 e0                	mov    eax,esp
10003b83:	89 c3                	mov    ebx,eax
10003b85:	8d 45 0c             	lea    eax,[ebp+0xc]
10003b88:	ba 08 00 00 00       	mov    edx,0x8
10003b8d:	89 df                	mov    edi,ebx
10003b8f:	89 c6                	mov    esi,eax
10003b91:	89 d1                	mov    ecx,edx
10003b93:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003b95:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003b98:	e8 fc ff ff ff       	call   10003b99 <NWindow::paintHandler(NFrame::Graphics)+0x38f>	10003b99: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
10003b9d:	83 c4 40             	add    esp,0x40
10003ba0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ba3:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003ba6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ba9:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10003bac:	83 ec 08             	sub    esp,0x8
10003baf:	6a 00                	push   0x0
10003bb1:	50                   	push   eax
10003bb2:	6a 01                	push   0x1
10003bb4:	6a 00                	push   0x0
10003bb6:	6a 00                	push   0x0
10003bb8:	83 ec 20             	sub    esp,0x20
10003bbb:	89 e0                	mov    eax,esp
10003bbd:	89 c3                	mov    ebx,eax
10003bbf:	8d 45 0c             	lea    eax,[ebp+0xc]
10003bc2:	ba 08 00 00 00       	mov    edx,0x8
10003bc7:	89 df                	mov    edi,ebx
10003bc9:	89 c6                	mov    esi,eax
10003bcb:	89 d1                	mov    ecx,edx
10003bcd:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003bcf:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003bd2:	e8 fc ff ff ff       	call   10003bd3 <NWindow::paintHandler(NFrame::Graphics)+0x3c9>	10003bd3: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
10003bd7:	83 c4 40             	add    esp,0x40
10003bda:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003bdd:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003be0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003be3:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
10003be6:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10003be9:	8b 52 1c             	mov    edx,DWORD PTR [edx+0x1c]
10003bec:	8d 4a ff             	lea    ecx,[edx-0x1]
10003bef:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10003bf2:	8b 92 88 00 00 00    	mov    edx,DWORD PTR [edx+0x88]
10003bf8:	29 d1                	sub    ecx,edx
10003bfa:	89 ca                	mov    edx,ecx
10003bfc:	83 ec 08             	sub    esp,0x8
10003bff:	6a 00                	push   0x0
10003c01:	6a 01                	push   0x1
10003c03:	50                   	push   eax
10003c04:	52                   	push   edx
10003c05:	6a 00                	push   0x0
10003c07:	83 ec 20             	sub    esp,0x20
10003c0a:	89 e0                	mov    eax,esp
10003c0c:	89 c3                	mov    ebx,eax
10003c0e:	8d 45 0c             	lea    eax,[ebp+0xc]
10003c11:	ba 08 00 00 00       	mov    edx,0x8
10003c16:	89 df                	mov    edi,ebx
10003c18:	89 c6                	mov    esi,eax
10003c1a:	89 d1                	mov    ecx,edx
10003c1c:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003c1e:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003c21:	e8 fc ff ff ff       	call   10003c22 <NWindow::paintHandler(NFrame::Graphics)+0x418>	10003c22: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
10003c26:	83 c4 40             	add    esp,0x40
10003c29:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003c2c:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003c2f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003c32:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10003c35:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10003c38:	8b 52 18             	mov    edx,DWORD PTR [edx+0x18]
10003c3b:	8d 4a ff             	lea    ecx,[edx-0x1]
10003c3e:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10003c41:	8b 92 88 00 00 00    	mov    edx,DWORD PTR [edx+0x88]
10003c47:	29 d1                	sub    ecx,edx
10003c49:	89 ca                	mov    edx,ecx
10003c4b:	83 ec 08             	sub    esp,0x8
10003c4e:	6a 00                	push   0x0
10003c50:	50                   	push   eax
10003c51:	6a 01                	push   0x1
10003c53:	6a 00                	push   0x0
10003c55:	52                   	push   edx
10003c56:	83 ec 20             	sub    esp,0x20
10003c59:	89 e0                	mov    eax,esp
10003c5b:	89 c3                	mov    ebx,eax
10003c5d:	8d 45 0c             	lea    eax,[ebp+0xc]
10003c60:	ba 08 00 00 00       	mov    edx,0x8
10003c65:	89 df                	mov    edi,ebx
10003c67:	89 c6                	mov    esi,eax
10003c69:	89 d1                	mov    ecx,edx
10003c6b:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003c6d:	ff 75 b4             	push   DWORD PTR [ebp-0x4c]
10003c70:	e8 fc ff ff ff       	call   10003c71 <NWindow::paintHandler(NFrame::Graphics)+0x467>	10003c71: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
10003c75:	83 c4 40             	add    esp,0x40
10003c78:	eb 01                	jmp    10003c7b <NWindow::paintHandler(NFrame::Graphics)+0x471>
10003c7a:	90                   	nop
10003c7b:	8d 65 f4             	lea    esp,[ebp-0xc]
10003c7e:	5b                   	pop    ebx
10003c7f:	5e                   	pop    esi
10003c80:	5f                   	pop    edi
10003c81:	5d                   	pop    ebp
10003c82:	c3                   	ret    
10003c83:	90                   	nop

10003c84 <NButton::NButton(int, int, int, int, int, int)>:
10003c84:	55                   	push   ebp
10003c85:	89 e5                	mov    ebp,esp
10003c87:	83 ec 08             	sub    esp,0x8
10003c8a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003c8d:	83 ec 0c             	sub    esp,0xc
10003c90:	ff 75 18             	push   DWORD PTR [ebp+0x18]
10003c93:	ff 75 14             	push   DWORD PTR [ebp+0x14]
10003c96:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10003c99:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10003c9c:	50                   	push   eax
10003c9d:	e8 fc ff ff ff       	call   10003c9e <NButton::NButton(int, int, int, int, int, int)+0x1a>	10003c9e: R_386_PC32	NFrame::NFrame(int, int, int, int)
10003ca2:	83 c4 20             	add    esp,0x20
10003ca5:	ba 08 00 00 00       	mov    edx,0x8	10003ca6: R_386_32	vtable for NButton
10003caa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003cad:	89 10                	mov    DWORD PTR [eax],edx
10003caf:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003cb2:	8b 55 1c             	mov    edx,DWORD PTR [ebp+0x1c]
10003cb5:	89 90 88 00 00 00    	mov    DWORD PTR [eax+0x88],edx
10003cbb:	83 7d 20 ff          	cmp    DWORD PTR [ebp+0x20],0xffffffff
10003cbf:	75 05                	jne    10003cc6 <NButton::NButton(int, int, int, int, int, int)+0x42>
10003cc1:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10003cc4:	eb 03                	jmp    10003cc9 <NButton::NButton(int, int, int, int, int, int)+0x45>
10003cc6:	8b 45 20             	mov    eax,DWORD PTR [ebp+0x20]
10003cc9:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10003ccc:	89 82 8c 00 00 00    	mov    DWORD PTR [edx+0x8c],eax
10003cd2:	90                   	nop
10003cd3:	c9                   	leave  
10003cd4:	c3                   	ret    
10003cd5:	90                   	nop

10003cd6 <NButton::paintHandler(NFrame::Graphics)>:
10003cd6:	55                   	push   ebp
10003cd7:	89 e5                	mov    ebp,esp
10003cd9:	57                   	push   edi
10003cda:	56                   	push   esi
10003cdb:	53                   	push   ebx
10003cdc:	83 ec 1c             	sub    esp,0x1c
10003cdf:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ce2:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10003ce5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ce8:	8b 80 88 00 00 00    	mov    eax,DWORD PTR [eax+0x88]
10003cee:	89 c1                	mov    ecx,eax
10003cf0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003cf3:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
10003cf6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003cf9:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
10003cfc:	83 ec 08             	sub    esp,0x8
10003cff:	51                   	push   ecx
10003d00:	52                   	push   edx
10003d01:	50                   	push   eax
10003d02:	6a 00                	push   0x0
10003d04:	6a 00                	push   0x0
10003d06:	83 ec 20             	sub    esp,0x20
10003d09:	89 e0                	mov    eax,esp
10003d0b:	89 c3                	mov    ebx,eax
10003d0d:	8d 45 0c             	lea    eax,[ebp+0xc]
10003d10:	ba 08 00 00 00       	mov    edx,0x8
10003d15:	89 df                	mov    edi,ebx
10003d17:	89 c6                	mov    esi,eax
10003d19:	89 d1                	mov    ecx,edx
10003d1b:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003d1d:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10003d20:	e8 fc ff ff ff       	call   10003d21 <NButton::paintHandler(NFrame::Graphics)+0x4b>	10003d21: R_386_PC32	NFrame::paintRectangle(NFrame::Graphics, int, int, int, int, unsigned int)
10003d25:	83 c4 40             	add    esp,0x40
10003d28:	90                   	nop
10003d29:	8d 65 f4             	lea    esp,[ebp-0xc]
10003d2c:	5b                   	pop    ebx
10003d2d:	5e                   	pop    esi
10003d2e:	5f                   	pop    edi
10003d2f:	5d                   	pop    ebp
10003d30:	c3                   	ret    
10003d31:	90                   	nop

10003d32 <LinkedList2<NFrame*>::LinkedList2()>:
10003d32:	55                   	push   ebp
10003d33:	89 e5                	mov    ebp,esp
10003d35:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003d38:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003d3e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003d41:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
10003d48:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003d4b:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
10003d52:	90                   	nop
10003d53:	5d                   	pop    ebp
10003d54:	c3                   	ret    
10003d55:	90                   	nop

10003d56 <LinkedList2<NFrame*>::prependNode(NFrame*)>:
10003d56:	55                   	push   ebp
10003d57:	89 e5                	mov    ebp,esp
10003d59:	83 ec 18             	sub    esp,0x18
10003d5c:	c7 45 f0 08 00 00 00 	mov    DWORD PTR [ebp-0x10],0x8
10003d63:	83 ec 0c             	sub    esp,0xc
10003d66:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10003d69:	e8 fc ff ff ff       	call   10003d6a <LinkedList2<NFrame*>::prependNode(NFrame*)+0x14>	10003d6a: R_386_PC32	malloc
10003d6e:	83 c4 10             	add    esp,0x10
10003d71:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10003d74:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10003d77:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
10003d7a:	89 10                	mov    DWORD PTR [eax],edx
10003d7c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003d7f:	8b 50 04             	mov    edx,DWORD PTR [eax+0x4]
10003d82:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10003d85:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
10003d88:	83 ec 0c             	sub    esp,0xc
10003d8b:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003d8e:	e8 fc ff ff ff       	call   10003d8f <LinkedList2<NFrame*>::prependNode(NFrame*)+0x39>	10003d8f: R_386_PC32	LinkedList2<NFrame*>::isEmpty()
10003d93:	83 c4 10             	add    esp,0x10
10003d96:	84 c0                	test   al,al
10003d98:	74 09                	je     10003da3 <LinkedList2<NFrame*>::prependNode(NFrame*)+0x4d>
10003d9a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003d9d:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10003da0:	89 50 08             	mov    DWORD PTR [eax+0x8],edx
10003da3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003da6:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10003da9:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
10003dac:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003daf:	8b 00                	mov    eax,DWORD PTR [eax]
10003db1:	8d 50 01             	lea    edx,[eax+0x1]
10003db4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003db7:	89 10                	mov    DWORD PTR [eax],edx
10003db9:	90                   	nop
10003dba:	c9                   	leave  
10003dbb:	c3                   	ret    

10003dbc <LinkedList2<NFrame*>::isEmpty()>:
10003dbc:	55                   	push   ebp
10003dbd:	89 e5                	mov    ebp,esp
10003dbf:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003dc2:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003dc5:	85 c0                	test   eax,eax
10003dc7:	0f 94 c0             	sete   al
10003dca:	5d                   	pop    ebp
10003dcb:	c3                   	ret    

10003dcc <Region::Region(int, int, int, int)>:
10003dcc:	55                   	push   ebp
10003dcd:	89 e5                	mov    ebp,esp
10003dcf:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003dd2:	8b 55 14             	mov    edx,DWORD PTR [ebp+0x14]
10003dd5:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
10003dd8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ddb:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
10003dde:	89 50 08             	mov    DWORD PTR [eax+0x8],edx
10003de1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003de4:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003dea:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ded:	c7 40 0c 00 00 00 00 	mov    DWORD PTR [eax+0xc],0x0
10003df4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003df7:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
10003dfa:	89 50 10             	mov    DWORD PTR [eax+0x10],edx
10003dfd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003e00:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
10003e03:	89 50 14             	mov    DWORD PTR [eax+0x14],edx
10003e06:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003e09:	c6 40 18 00          	mov    BYTE PTR [eax+0x18],0x0
10003e0d:	90                   	nop
10003e0e:	5d                   	pop    ebp
10003e0f:	c3                   	ret    

10003e10 <LinkedList2<Font*>::LinkedList2()>:
10003e10:	55                   	push   ebp
10003e11:	89 e5                	mov    ebp,esp
10003e13:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003e16:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003e1c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003e1f:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
10003e26:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003e29:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
10003e30:	90                   	nop
10003e31:	5d                   	pop    ebp
10003e32:	c3                   	ret    
10003e33:	90                   	nop

10003e34 <LinkedList2<Font*>::length()>:
10003e34:	55                   	push   ebp
10003e35:	89 e5                	mov    ebp,esp
10003e37:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003e3a:	8b 00                	mov    eax,DWORD PTR [eax]
10003e3c:	5d                   	pop    ebp
10003e3d:	c3                   	ret    

10003e3e <LinkedList2<Font*>::appendNode(Font*)>:
10003e3e:	55                   	push   ebp
10003e3f:	89 e5                	mov    ebp,esp
10003e41:	83 ec 18             	sub    esp,0x18
10003e44:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10003e4b:	83 ec 0c             	sub    esp,0xc
10003e4e:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003e51:	e8 fc ff ff ff       	call   10003e52 <LinkedList2<Font*>::appendNode(Font*)+0x14>	10003e52: R_386_PC32	LinkedList2<Font*>::isEmpty()
10003e56:	83 c4 10             	add    esp,0x10
10003e59:	84 c0                	test   al,al
10003e5b:	74 23                	je     10003e80 <LinkedList2<Font*>::appendNode(Font*)+0x42>
10003e5d:	c7 45 f0 08 00 00 00 	mov    DWORD PTR [ebp-0x10],0x8
10003e64:	83 ec 0c             	sub    esp,0xc
10003e67:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10003e6a:	e8 fc ff ff ff       	call   10003e6b <LinkedList2<Font*>::appendNode(Font*)+0x2d>	10003e6b: R_386_PC32	malloc
10003e6f:	83 c4 10             	add    esp,0x10
10003e72:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10003e75:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003e78:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10003e7b:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
10003e7e:	eb 2f                	jmp    10003eaf <LinkedList2<Font*>::appendNode(Font*)+0x71>
10003e80:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003e83:	8b 40 08             	mov    eax,DWORD PTR [eax+0x8]
10003e86:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10003e89:	c7 45 ec 08 00 00 00 	mov    DWORD PTR [ebp-0x14],0x8
10003e90:	83 ec 0c             	sub    esp,0xc
10003e93:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
10003e96:	e8 fc ff ff ff       	call   10003e97 <LinkedList2<Font*>::appendNode(Font*)+0x59>	10003e97: R_386_PC32	malloc
10003e9b:	83 c4 10             	add    esp,0x10
10003e9e:	89 c2                	mov    edx,eax
10003ea0:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10003ea3:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
10003ea6:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10003ea9:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003eac:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10003eaf:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10003eb2:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
10003eb5:	89 10                	mov    DWORD PTR [eax],edx
10003eb7:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10003eba:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
10003ec1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ec4:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10003ec7:	89 50 08             	mov    DWORD PTR [eax+0x8],edx
10003eca:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ecd:	8b 00                	mov    eax,DWORD PTR [eax]
10003ecf:	8d 50 01             	lea    edx,[eax+0x1]
10003ed2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ed5:	89 10                	mov    DWORD PTR [eax],edx
10003ed7:	90                   	nop
10003ed8:	c9                   	leave  
10003ed9:	c3                   	ret    

10003eda <LinkedList2<Font*>::isEmpty()>:
10003eda:	55                   	push   ebp
10003edb:	89 e5                	mov    ebp,esp
10003edd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ee0:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003ee3:	85 c0                	test   eax,eax
10003ee5:	0f 94 c0             	sete   al
10003ee8:	5d                   	pop    ebp
10003ee9:	c3                   	ret    

10003eea <NFrame::invalidateRectangularBoundingBox()>:
10003eea:	55                   	push   ebp
10003eeb:	89 e5                	mov    ebp,esp
10003eed:	57                   	push   edi
10003eee:	56                   	push   esi
10003eef:	53                   	push   ebx
10003ef0:	83 ec 2c             	sub    esp,0x2c
10003ef3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003ef6:	8b 78 1c             	mov    edi,DWORD PTR [eax+0x1c]
10003ef9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003efc:	8b 70 18             	mov    esi,DWORD PTR [eax+0x18]
10003eff:	83 ec 0c             	sub    esp,0xc
10003f02:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003f05:	e8 fc ff ff ff       	call   10003f06 <NFrame::invalidateRectangularBoundingBox()+0x1c>	10003f06: R_386_PC32	NFrame::getAbsY()
10003f0a:	83 c4 10             	add    esp,0x10
10003f0d:	89 c3                	mov    ebx,eax
10003f0f:	83 ec 0c             	sub    esp,0xc
10003f12:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003f15:	e8 fc ff ff ff       	call   10003f16 <NFrame::invalidateRectangularBoundingBox()+0x2c>	10003f16: R_386_PC32	NFrame::getAbsX()
10003f1a:	83 c4 10             	add    esp,0x10
10003f1d:	89 c2                	mov    edx,eax
10003f1f:	8d 45 cc             	lea    eax,[ebp-0x34]
10003f22:	83 ec 0c             	sub    esp,0xc
10003f25:	57                   	push   edi
10003f26:	56                   	push   esi
10003f27:	53                   	push   ebx
10003f28:	52                   	push   edx
10003f29:	50                   	push   eax
10003f2a:	e8 fc ff ff ff       	call   10003f2b <NFrame::invalidateRectangularBoundingBox()+0x41>	10003f2b: R_386_PC32	createRectangleRegion(int, int, int, int)
10003f2f:	83 c4 1c             	add    esp,0x1c
10003f32:	83 ec 1c             	sub    esp,0x1c
10003f35:	89 e0                	mov    eax,esp
10003f37:	89 c3                	mov    ebx,eax
10003f39:	8d 45 cc             	lea    eax,[ebp-0x34]
10003f3c:	ba 07 00 00 00       	mov    edx,0x7
10003f41:	89 df                	mov    edi,ebx
10003f43:	89 c6                	mov    esi,eax
10003f45:	89 d1                	mov    ecx,edx
10003f47:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003f49:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003f4c:	e8 fc ff ff ff       	call   10003f4d <NFrame::invalidateRectangularBoundingBox()+0x63>	10003f4d: R_386_PC32	NFrame::markRegionAsDirty(Region)
10003f51:	83 c4 20             	add    esp,0x20
10003f54:	90                   	nop
10003f55:	8d 65 f4             	lea    esp,[ebp-0xc]
10003f58:	5b                   	pop    ebx
10003f59:	5e                   	pop    esi
10003f5a:	5f                   	pop    edi
10003f5b:	5d                   	pop    ebp
10003f5c:	c3                   	ret    
10003f5d:	90                   	nop

10003f5e <NFrame::raiseChild(NFrame*)>:
10003f5e:	55                   	push   ebp
10003f5f:	89 e5                	mov    ebp,esp
10003f61:	83 ec 08             	sub    esp,0x8
10003f64:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003f67:	8b 40 08             	mov    eax,DWORD PTR [eax+0x8]
10003f6a:	85 c0                	test   eax,eax
10003f6c:	74 0c                	je     10003f7a <NFrame::raiseChild(NFrame*)+0x1c>
10003f6e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003f71:	8b 40 08             	mov    eax,DWORD PTR [eax+0x8]
10003f74:	8b 00                	mov    eax,DWORD PTR [eax]
10003f76:	85 c0                	test   eax,eax
10003f78:	75 04                	jne    10003f7e <NFrame::raiseChild(NFrame*)+0x20>
10003f7a:	b0 00                	mov    al,0x0
10003f7c:	eb 39                	jmp    10003fb7 <NFrame::raiseChild(NFrame*)+0x59>
10003f7e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003f81:	8b 40 08             	mov    eax,DWORD PTR [eax+0x8]
10003f84:	8b 00                	mov    eax,DWORD PTR [eax]
10003f86:	39 45 0c             	cmp    DWORD PTR [ebp+0xc],eax
10003f89:	75 04                	jne    10003f8f <NFrame::raiseChild(NFrame*)+0x31>
10003f8b:	b0 00                	mov    al,0x0
10003f8d:	eb 28                	jmp    10003fb7 <NFrame::raiseChild(NFrame*)+0x59>
10003f8f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10003f92:	83 c0 04             	add    eax,0x4
10003f95:	83 ec 08             	sub    esp,0x8
10003f98:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10003f9b:	50                   	push   eax
10003f9c:	e8 fc ff ff ff       	call   10003f9d <NFrame::raiseChild(NFrame*)+0x3f>	10003f9d: R_386_PC32	LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)
10003fa1:	83 c4 10             	add    esp,0x10
10003fa4:	83 ec 08             	sub    esp,0x8
10003fa7:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10003faa:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003fad:	e8 fc ff ff ff       	call   10003fae <NFrame::raiseChild(NFrame*)+0x50>	10003fae: R_386_PC32	NFrame::addChild(NFrame*)
10003fb2:	83 c4 10             	add    esp,0x10
10003fb5:	b0 01                	mov    al,0x1
10003fb7:	c9                   	leave  
10003fb8:	c3                   	ret    
10003fb9:	90                   	nop

10003fba <NFrame::getPixelOwner(Video*, int, int, bool)>:
10003fba:	55                   	push   ebp
10003fbb:	89 e5                	mov    ebp,esp
10003fbd:	57                   	push   edi
10003fbe:	56                   	push   esi
10003fbf:	53                   	push   ebx
10003fc0:	83 ec 4c             	sub    esp,0x4c
10003fc3:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10003fc6:	88 45 b4             	mov    BYTE PTR [ebp-0x4c],al
10003fc9:	8d 45 c0             	lea    eax,[ebp-0x40]
10003fcc:	83 ec 08             	sub    esp,0x8
10003fcf:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003fd2:	50                   	push   eax
10003fd3:	e8 fc ff ff ff       	call   10003fd4 <NFrame::getPixelOwner(Video*, int, int, bool)+0x1a>	10003fd4: R_386_PC32	NFrame::getDrawRegion()
10003fd8:	83 c4 0c             	add    esp,0xc
10003fdb:	83 ec 0c             	sub    esp,0xc
10003fde:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003fe1:	e8 fc ff ff ff       	call   10003fe2 <NFrame::getPixelOwner(Video*, int, int, bool)+0x28>	10003fe2: R_386_PC32	NFrame::getAbsX()
10003fe6:	83 c4 10             	add    esp,0x10
10003fe9:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10003fec:	83 ec 0c             	sub    esp,0xc
10003fef:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10003ff2:	e8 fc ff ff ff       	call   10003ff3 <NFrame::getPixelOwner(Video*, int, int, bool)+0x39>	10003ff3: R_386_PC32	NFrame::getAbsY()
10003ff7:	83 c4 10             	add    esp,0x10
10003ffa:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
10003ffd:	83 ec 0c             	sub    esp,0xc
10004000:	ff 75 14             	push   DWORD PTR [ebp+0x14]
10004003:	ff 75 10             	push   DWORD PTR [ebp+0x10]
10004006:	83 ec 1c             	sub    esp,0x1c
10004009:	89 e0                	mov    eax,esp
1000400b:	89 c3                	mov    ebx,eax
1000400d:	8d 45 c0             	lea    eax,[ebp-0x40]
10004010:	ba 07 00 00 00       	mov    edx,0x7
10004015:	89 df                	mov    edi,ebx
10004017:	89 c6                	mov    esi,eax
10004019:	89 d1                	mov    ecx,edx
1000401b:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000401d:	e8 fc ff ff ff       	call   1000401e <NFrame::getPixelOwner(Video*, int, int, bool)+0x64>	1000401e: R_386_PC32	isPointInRegion(Region, int, int)
10004022:	83 c4 30             	add    esp,0x30
10004025:	84 c0                	test   al,al
10004027:	74 17                	je     10004040 <NFrame::getPixelOwner(Video*, int, int, bool)+0x86>
10004029:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
1000402c:	83 ec 0c             	sub    esp,0xc
1000402f:	50                   	push   eax
10004030:	e8 fc ff ff ff       	call   10004031 <NFrame::getPixelOwner(Video*, int, int, bool)+0x77>	10004031: R_386_PC32	free
10004035:	83 c4 10             	add    esp,0x10
10004038:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000403b:	e9 83 00 00 00       	jmp    100040c3 <NFrame::getPixelOwner(Video*, int, int, bool)+0x109>
10004040:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
10004043:	83 ec 0c             	sub    esp,0xc
10004046:	50                   	push   eax
10004047:	e8 fc ff ff ff       	call   10004048 <NFrame::getPixelOwner(Video*, int, int, bool)+0x8e>	10004048: R_386_PC32	free
1000404c:	83 c4 10             	add    esp,0x10
1000404f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004052:	8b 40 08             	mov    eax,DWORD PTR [eax+0x8]
10004055:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10004058:	83 7d e4 00          	cmp    DWORD PTR [ebp-0x1c],0x0
1000405c:	74 60                	je     100040be <NFrame::getPixelOwner(Video*, int, int, bool)+0x104>
1000405e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10004061:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10004064:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10004067:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
1000406a:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000406d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10004070:	8b 00                	mov    eax,DWORD PTR [eax]
10004072:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
10004075:	84 c0                	test   al,al
10004077:	75 42                	jne    100040bb <NFrame::getPixelOwner(Video*, int, int, bool)+0x101>
10004079:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000407c:	8b 00                	mov    eax,DWORD PTR [eax]
1000407e:	0f b6 55 b4          	movzx  edx,BYTE PTR [ebp-0x4c]
10004082:	83 ec 0c             	sub    esp,0xc
10004085:	52                   	push   edx
10004086:	ff 75 14             	push   DWORD PTR [ebp+0x14]
10004089:	ff 75 10             	push   DWORD PTR [ebp+0x10]
1000408c:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000408f:	50                   	push   eax
10004090:	e8 fc ff ff ff       	call   10004091 <NFrame::getPixelOwner(Video*, int, int, bool)+0xd7>	10004091: R_386_PC32	NFrame::getPixelOwner(Video*, int, int, bool)
10004095:	83 c4 20             	add    esp,0x20
10004098:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
1000409b:	83 7d dc 00          	cmp    DWORD PTR [ebp-0x24],0x0
1000409f:	74 b7                	je     10004058 <NFrame::getPixelOwner(Video*, int, int, bool)+0x9e>
100040a1:	80 7d b4 00          	cmp    BYTE PTR [ebp-0x4c],0x0
100040a5:	74 0f                	je     100040b6 <NFrame::getPixelOwner(Video*, int, int, bool)+0xfc>
100040a7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100040aa:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
100040ad:	85 c0                	test   eax,eax
100040af:	74 05                	je     100040b6 <NFrame::getPixelOwner(Video*, int, int, bool)+0xfc>
100040b1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100040b4:	eb 0d                	jmp    100040c3 <NFrame::getPixelOwner(Video*, int, int, bool)+0x109>
100040b6:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
100040b9:	eb 08                	jmp    100040c3 <NFrame::getPixelOwner(Video*, int, int, bool)+0x109>
100040bb:	90                   	nop
100040bc:	eb 9a                	jmp    10004058 <NFrame::getPixelOwner(Video*, int, int, bool)+0x9e>
100040be:	b8 00 00 00 00       	mov    eax,0x0
100040c3:	8d 65 f4             	lea    esp,[ebp-0xc]
100040c6:	5b                   	pop    ebx
100040c7:	5e                   	pop    esi
100040c8:	5f                   	pop    edi
100040c9:	5d                   	pop    ebp
100040ca:	c3                   	ret    
100040cb:	90                   	nop

100040cc <NFrame::unhide()>:
100040cc:	55                   	push   ebp
100040cd:	89 e5                	mov    ebp,esp
100040cf:	83 ec 08             	sub    esp,0x8
100040d2:	83 ec 08             	sub    esp,0x8
100040d5:	6a 00                	push   0x0
100040d7:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100040da:	e8 fc ff ff ff       	call   100040db <NFrame::unhide()+0xf>	100040db: R_386_PC32	NFrame::hide(bool)
100040df:	83 c4 10             	add    esp,0x10
100040e2:	90                   	nop
100040e3:	c9                   	leave  
100040e4:	c3                   	ret    
100040e5:	90                   	nop

100040e6 <NFrame::hide(bool)>:
100040e6:	55                   	push   ebp
100040e7:	89 e5                	mov    ebp,esp
100040e9:	83 ec 18             	sub    esp,0x18
100040ec:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100040ef:	88 45 f4             	mov    BYTE PTR [ebp-0xc],al
100040f2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100040f5:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
100040f8:	38 45 f4             	cmp    BYTE PTR [ebp-0xc],al
100040fb:	74 31                	je     1000412e <NFrame::hide(bool)+0x48>
100040fd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004100:	8a 55 f4             	mov    dl,BYTE PTR [ebp-0xc]
10004103:	88 50 68             	mov    BYTE PTR [eax+0x68],dl
10004106:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004109:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
1000410c:	84 c0                	test   al,al
1000410e:	74 10                	je     10004120 <NFrame::hide(bool)+0x3a>
10004110:	83 ec 0c             	sub    esp,0xc
10004113:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004116:	e8 fc ff ff ff       	call   10004117 <NFrame::hide(bool)+0x31>	10004117: R_386_PC32	NFrame::invalidate()
1000411b:	83 c4 10             	add    esp,0x10
1000411e:	eb 0e                	jmp    1000412e <NFrame::hide(bool)+0x48>
10004120:	83 ec 0c             	sub    esp,0xc
10004123:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004126:	e8 fc ff ff ff       	call   10004127 <NFrame::hide(bool)+0x41>	10004127: R_386_PC32	NFrame::invalidateRectangularBoundingBox()
1000412b:	83 c4 10             	add    esp,0x10
1000412e:	90                   	nop
1000412f:	c9                   	leave  
10004130:	c3                   	ret    
10004131:	90                   	nop

10004132 <NFrame::getWidth()>:
10004132:	55                   	push   ebp
10004133:	89 e5                	mov    ebp,esp
10004135:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004138:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
1000413b:	5d                   	pop    ebp
1000413c:	c3                   	ret    
1000413d:	90                   	nop

1000413e <NFrame::getHeight()>:
1000413e:	55                   	push   ebp
1000413f:	89 e5                	mov    ebp,esp
10004141:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004144:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10004147:	5d                   	pop    ebp
10004148:	c3                   	ret    
10004149:	90                   	nop

1000414a <NFrame::startDragState()>:
1000414a:	55                   	push   ebp
1000414b:	89 e5                	mov    ebp,esp
1000414d:	57                   	push   edi
1000414e:	56                   	push   esi
1000414f:	53                   	push   ebx
10004150:	83 ec 2c             	sub    esp,0x2c
10004153:	83 ec 08             	sub    esp,0x8
10004156:	6a 01                	push   0x1
10004158:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000415b:	e8 fc ff ff ff       	call   1000415c <NFrame::startDragState()+0x12>	1000415c: R_386_PC32	NFrame::hide(bool)
10004160:	83 c4 10             	add    esp,0x10
10004163:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004166:	8b 70 1c             	mov    esi,DWORD PTR [eax+0x1c]
10004169:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000416c:	8b 58 18             	mov    ebx,DWORD PTR [eax+0x18]
1000416f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004172:	8b 48 28             	mov    ecx,DWORD PTR [eax+0x28]
10004175:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004178:	8b 50 24             	mov    edx,DWORD PTR [eax+0x24]
1000417b:	8d 45 cc             	lea    eax,[ebp-0x34]
1000417e:	83 ec 08             	sub    esp,0x8
10004181:	6a 02                	push   0x2
10004183:	56                   	push   esi
10004184:	53                   	push   ebx
10004185:	51                   	push   ecx
10004186:	52                   	push   edx
10004187:	50                   	push   eax
10004188:	e8 fc ff ff ff       	call   10004189 <NFrame::startDragState()+0x3f>	10004189: R_386_PC32	createAntRegion(int, int, int, int, int)
1000418d:	83 c4 1c             	add    esp,0x1c
10004190:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004193:	8d 58 30             	lea    ebx,[eax+0x30]
10004196:	8d 45 cc             	lea    eax,[ebp-0x34]
10004199:	ba 19 00 00 00       	mov    edx,0x19
1000419e:	89 df                	mov    edi,ebx
100041a0:	89 c6                	mov    esi,eax
100041a2:	89 d1                	mov    ecx,edx
100041a4:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
100041a6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100041a9:	c6 40 69 01          	mov    BYTE PTR [eax+0x69],0x1
100041ad:	90                   	nop
100041ae:	8d 65 f4             	lea    esp,[ebp-0xc]
100041b1:	5b                   	pop    ebx
100041b2:	5e                   	pop    esi
100041b3:	5f                   	pop    edi
100041b4:	5d                   	pop    ebp
100041b5:	c3                   	ret    

100041b6 <NFrame::endDragState()>:
100041b6:	55                   	push   ebp
100041b7:	89 e5                	mov    ebp,esp
100041b9:	83 ec 08             	sub    esp,0x8
100041bc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100041bf:	c6 40 69 00          	mov    BYTE PTR [eax+0x69],0x0
100041c3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100041c6:	8b 40 30             	mov    eax,DWORD PTR [eax+0x30]
100041c9:	83 ec 0c             	sub    esp,0xc
100041cc:	50                   	push   eax
100041cd:	e8 fc ff ff ff       	call   100041ce <NFrame::endDragState()+0x18>	100041ce: R_386_PC32	free
100041d2:	83 c4 10             	add    esp,0x10
100041d5:	83 ec 0c             	sub    esp,0xc
100041d8:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100041db:	e8 fc ff ff ff       	call   100041dc <NFrame::endDragState()+0x26>	100041dc: R_386_PC32	NFrame::unhide()
100041e0:	83 c4 10             	add    esp,0x10
100041e3:	90                   	nop
100041e4:	c9                   	leave  
100041e5:	c3                   	ret    

100041e6 <NFrame::setSize(int, int)>:
100041e6:	55                   	push   ebp
100041e7:	89 e5                	mov    ebp,esp
100041e9:	83 ec 08             	sub    esp,0x8
100041ec:	83 7d 0c 00          	cmp    DWORD PTR [ebp+0xc],0x0
100041f0:	7f 07                	jg     100041f9 <NFrame::setSize(int, int)+0x13>
100041f2:	c7 45 0c 01 00 00 00 	mov    DWORD PTR [ebp+0xc],0x1
100041f9:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
100041fd:	7f 07                	jg     10004206 <NFrame::setSize(int, int)+0x20>
100041ff:	c7 45 10 01 00 00 00 	mov    DWORD PTR [ebp+0x10],0x1
10004206:	83 ec 0c             	sub    esp,0xc
10004209:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000420c:	e8 fc ff ff ff       	call   1000420d <NFrame::setSize(int, int)+0x27>	1000420d: R_386_PC32	NFrame::hasTitleBar()
10004211:	83 c4 10             	add    esp,0x10
10004214:	84 c0                	test   al,al
10004216:	74 1a                	je     10004232 <NFrame::setSize(int, int)+0x4c>
10004218:	83 7d 0c 4a          	cmp    DWORD PTR [ebp+0xc],0x4a
1000421c:	7f 07                	jg     10004225 <NFrame::setSize(int, int)+0x3f>
1000421e:	c7 45 0c 4b 00 00 00 	mov    DWORD PTR [ebp+0xc],0x4b
10004225:	83 7d 10 27          	cmp    DWORD PTR [ebp+0x10],0x27
10004229:	7f 07                	jg     10004232 <NFrame::setSize(int, int)+0x4c>
1000422b:	c7 45 10 28 00 00 00 	mov    DWORD PTR [ebp+0x10],0x28
10004232:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004235:	8b 40 18             	mov    eax,DWORD PTR [eax+0x18]
10004238:	39 45 0c             	cmp    DWORD PTR [ebp+0xc],eax
1000423b:	75 0b                	jne    10004248 <NFrame::setSize(int, int)+0x62>
1000423d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004240:	8b 40 1c             	mov    eax,DWORD PTR [eax+0x1c]
10004243:	39 45 10             	cmp    DWORD PTR [ebp+0x10],eax
10004246:	74 47                	je     1000428f <NFrame::setSize(int, int)+0xa9>
10004248:	83 ec 0c             	sub    esp,0xc
1000424b:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000424e:	e8 fc ff ff ff       	call   1000424f <NFrame::setSize(int, int)+0x69>	1000424f: R_386_PC32	NFrame::tryInvalidate()
10004253:	83 c4 10             	add    esp,0x10
10004256:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004259:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
1000425c:	89 50 18             	mov    DWORD PTR [eax+0x18],edx
1000425f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004262:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
10004265:	89 50 1c             	mov    DWORD PTR [eax+0x1c],edx
10004268:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000426b:	8b 00                	mov    eax,DWORD PTR [eax]
1000426d:	83 c0 08             	add    eax,0x8
10004270:	8b 00                	mov    eax,DWORD PTR [eax]
10004272:	83 ec 0c             	sub    esp,0xc
10004275:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004278:	ff d0                	call   eax
1000427a:	83 c4 10             	add    esp,0x10
1000427d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004280:	8b 00                	mov    eax,DWORD PTR [eax]
10004282:	8b 00                	mov    eax,DWORD PTR [eax]
10004284:	83 ec 0c             	sub    esp,0xc
10004287:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000428a:	ff d0                	call   eax
1000428c:	83 c4 10             	add    esp,0x10
1000428f:	90                   	nop
10004290:	c9                   	leave  
10004291:	c3                   	ret    

10004292 <NFrame::hasTitleBar()>:
10004292:	55                   	push   ebp
10004293:	89 e5                	mov    ebp,esp
10004295:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004298:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
1000429b:	83 e0 08             	and    eax,0x8
1000429e:	85 c0                	test   eax,eax
100042a0:	75 11                	jne    100042b3 <NFrame::hasTitleBar()+0x21>
100042a2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100042a5:	8b 40 6c             	mov    eax,DWORD PTR [eax+0x6c]
100042a8:	83 e0 01             	and    eax,0x1
100042ab:	85 c0                	test   eax,eax
100042ad:	75 04                	jne    100042b3 <NFrame::hasTitleBar()+0x21>
100042af:	b0 01                	mov    al,0x1
100042b1:	eb 02                	jmp    100042b5 <NFrame::hasTitleBar()+0x23>
100042b3:	b0 00                	mov    al,0x0
100042b5:	5d                   	pop    ebp
100042b6:	c3                   	ret    
100042b7:	90                   	nop

100042b8 <NFrame::getX()>:
100042b8:	55                   	push   ebp
100042b9:	89 e5                	mov    ebp,esp
100042bb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100042be:	8b 40 24             	mov    eax,DWORD PTR [eax+0x24]
100042c1:	5d                   	pop    ebp
100042c2:	c3                   	ret    
100042c3:	90                   	nop

100042c4 <NFrame::getY()>:
100042c4:	55                   	push   ebp
100042c5:	89 e5                	mov    ebp,esp
100042c7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100042ca:	8b 40 28             	mov    eax,DWORD PTR [eax+0x28]
100042cd:	5d                   	pop    ebp
100042ce:	c3                   	ret    
100042cf:	90                   	nop

100042d0 <NFrame::setPosition(int, int)>:
100042d0:	55                   	push   ebp
100042d1:	89 e5                	mov    ebp,esp
100042d3:	83 ec 08             	sub    esp,0x8
100042d6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100042d9:	8b 40 24             	mov    eax,DWORD PTR [eax+0x24]
100042dc:	39 45 0c             	cmp    DWORD PTR [ebp+0xc],eax
100042df:	75 0b                	jne    100042ec <NFrame::setPosition(int, int)+0x1c>
100042e1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100042e4:	8b 40 28             	mov    eax,DWORD PTR [eax+0x28]
100042e7:	39 45 10             	cmp    DWORD PTR [ebp+0x10],eax
100042ea:	74 7b                	je     10004367 <NFrame::setPosition(int, int)+0x97>
100042ec:	83 ec 0c             	sub    esp,0xc
100042ef:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100042f2:	e8 fc ff ff ff       	call   100042f3 <NFrame::setPosition(int, int)+0x23>	100042f3: R_386_PC32	NFrame::tryInvalidate()
100042f7:	83 c4 10             	add    esp,0x10
100042fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100042fd:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
10004300:	84 c0                	test   al,al
10004302:	74 36                	je     1000433a <NFrame::setPosition(int, int)+0x6a>
10004304:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004307:	8b 50 40             	mov    edx,DWORD PTR [eax+0x40]
1000430a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000430d:	8b 40 24             	mov    eax,DWORD PTR [eax+0x24]
10004310:	8b 4d 0c             	mov    ecx,DWORD PTR [ebp+0xc]
10004313:	29 c1                	sub    ecx,eax
10004315:	89 c8                	mov    eax,ecx
10004317:	01 c2                	add    edx,eax
10004319:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000431c:	89 50 40             	mov    DWORD PTR [eax+0x40],edx
1000431f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004322:	8b 50 44             	mov    edx,DWORD PTR [eax+0x44]
10004325:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004328:	8b 40 28             	mov    eax,DWORD PTR [eax+0x28]
1000432b:	8b 4d 10             	mov    ecx,DWORD PTR [ebp+0x10]
1000432e:	29 c1                	sub    ecx,eax
10004330:	89 c8                	mov    eax,ecx
10004332:	01 c2                	add    edx,eax
10004334:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004337:	89 50 44             	mov    DWORD PTR [eax+0x44],edx
1000433a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000433d:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
10004340:	89 50 24             	mov    DWORD PTR [eax+0x24],edx
10004343:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004346:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
10004349:	89 50 28             	mov    DWORD PTR [eax+0x28],edx
1000434c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000434f:	8a 40 68             	mov    al,BYTE PTR [eax+0x68]
10004352:	83 f0 01             	xor    eax,0x1
10004355:	84 c0                	test   al,al
10004357:	74 0e                	je     10004367 <NFrame::setPosition(int, int)+0x97>
10004359:	83 ec 0c             	sub    esp,0xc
1000435c:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000435f:	e8 fc ff ff ff       	call   10004360 <NFrame::setPosition(int, int)+0x90>	10004360: R_386_PC32	NFrame::tryInvalidate()
10004364:	83 c4 10             	add    esp,0x10
10004367:	90                   	nop
10004368:	c9                   	leave  
10004369:	c3                   	ret    

1000436a <NFrame::raise()>:
1000436a:	55                   	push   ebp
1000436b:	89 e5                	mov    ebp,esp
1000436d:	83 ec 18             	sub    esp,0x18
10004370:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004373:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10004376:	85 c0                	test   eax,eax
10004378:	74 2c                	je     100043a6 <NFrame::raise()+0x3c>
1000437a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000437d:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10004380:	83 ec 08             	sub    esp,0x8
10004383:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004386:	50                   	push   eax
10004387:	e8 fc ff ff ff       	call   10004388 <NFrame::raise()+0x1e>	10004388: R_386_PC32	NFrame::raiseChild(NFrame*)
1000438c:	83 c4 10             	add    esp,0x10
1000438f:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
10004392:	80 7d f7 00          	cmp    BYTE PTR [ebp-0x9],0x0
10004396:	74 0e                	je     100043a6 <NFrame::raise()+0x3c>
10004398:	83 ec 0c             	sub    esp,0xc
1000439b:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000439e:	e8 fc ff ff ff       	call   1000439f <NFrame::raise()+0x35>	1000439f: R_386_PC32	NFrame::invalidate()
100043a3:	83 c4 10             	add    esp,0x10
100043a6:	90                   	nop
100043a7:	c9                   	leave  
100043a8:	c3                   	ret    
100043a9:	90                   	nop

100043aa <NFrame::repaintCursorRegion(Video*, Region)>:
100043aa:	55                   	push   ebp
100043ab:	89 e5                	mov    ebp,esp
100043ad:	57                   	push   edi
100043ae:	56                   	push   esi
100043af:	53                   	push   ebx
100043b0:	83 ec 3c             	sub    esp,0x3c
100043b3:	8d 45 cc             	lea    eax,[ebp-0x34]
100043b6:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100043b9:	83 ec 04             	sub    esp,0x4
100043bc:	6a 00                	push   0x0
100043be:	83 ec 1c             	sub    esp,0x1c
100043c1:	89 e0                	mov    eax,esp
100043c3:	89 c3                	mov    ebx,eax
100043c5:	8d 45 10             	lea    eax,[ebp+0x10]
100043c8:	ba 07 00 00 00       	mov    edx,0x7
100043cd:	89 df                	mov    edi,ebx
100043cf:	89 c6                	mov    esi,eax
100043d1:	89 d1                	mov    ecx,edx
100043d3:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100043d5:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100043d8:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100043db:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
100043de:	e8 fc ff ff ff       	call   100043df <NFrame::repaintCursorRegion(Video*, Region)+0x35>	100043df: R_386_PC32	NFrame::repaintAux(Video*, Region, bool)
100043e3:	83 c4 2c             	add    esp,0x2c
100043e6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100043e9:	83 ec 0c             	sub    esp,0xc
100043ec:	50                   	push   eax
100043ed:	e8 fc ff ff ff       	call   100043ee <NFrame::repaintCursorRegion(Video*, Region)+0x44>	100043ee: R_386_PC32	free
100043f2:	83 c4 10             	add    esp,0x10
100043f5:	90                   	nop
100043f6:	8d 65 f4             	lea    esp,[ebp-0xc]
100043f9:	5b                   	pop    ebx
100043fa:	5e                   	pop    esi
100043fb:	5f                   	pop    edi
100043fc:	5d                   	pop    ebp
100043fd:	c3                   	ret    

100043fe <NFrame::isFullscreen()>:
100043fe:	55                   	push   ebp
100043ff:	89 e5                	mov    ebp,esp
10004401:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004404:	8a 40 70             	mov    al,BYTE PTR [eax+0x70]
10004407:	5d                   	pop    ebp
10004408:	c3                   	ret    
10004409:	90                   	nop

1000440a <NFrame::toggleFullscreen(Video*)>:
1000440a:	55                   	push   ebp
1000440b:	89 e5                	mov    ebp,esp
1000440d:	53                   	push   ebx
1000440e:	83 ec 04             	sub    esp,0x4
10004411:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004414:	8a 40 70             	mov    al,BYTE PTR [eax+0x70]
10004417:	84 c0                	test   al,al
10004419:	74 47                	je     10004462 <NFrame::toggleFullscreen(Video*)+0x58>
1000441b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000441e:	c6 40 70 00          	mov    BYTE PTR [eax+0x70],0x0
10004422:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004425:	8b 90 80 00 00 00    	mov    edx,DWORD PTR [eax+0x80]
1000442b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000442e:	8b 40 7c             	mov    eax,DWORD PTR [eax+0x7c]
10004431:	83 ec 04             	sub    esp,0x4
10004434:	52                   	push   edx
10004435:	50                   	push   eax
10004436:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004439:	e8 fc ff ff ff       	call   1000443a <NFrame::toggleFullscreen(Video*)+0x30>	1000443a: R_386_PC32	NFrame::setSize(int, int)
1000443e:	83 c4 10             	add    esp,0x10
10004441:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004444:	8b 50 78             	mov    edx,DWORD PTR [eax+0x78]
10004447:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000444a:	8b 40 74             	mov    eax,DWORD PTR [eax+0x74]
1000444d:	83 ec 04             	sub    esp,0x4
10004450:	52                   	push   edx
10004451:	50                   	push   eax
10004452:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004455:	e8 fc ff ff ff       	call   10004456 <NFrame::toggleFullscreen(Video*)+0x4c>	10004456: R_386_PC32	NFrame::setPosition(int, int)
1000445a:	83 c4 10             	add    esp,0x10
1000445d:	e9 88 00 00 00       	jmp    100044ea <NFrame::toggleFullscreen(Video*)+0xe0>
10004462:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004465:	c6 40 70 01          	mov    BYTE PTR [eax+0x70],0x1
10004469:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000446c:	8b 50 24             	mov    edx,DWORD PTR [eax+0x24]
1000446f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004472:	89 50 74             	mov    DWORD PTR [eax+0x74],edx
10004475:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004478:	8b 50 28             	mov    edx,DWORD PTR [eax+0x28]
1000447b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000447e:	89 50 78             	mov    DWORD PTR [eax+0x78],edx
10004481:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004484:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
10004487:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000448a:	89 50 7c             	mov    DWORD PTR [eax+0x7c],edx
1000448d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004490:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
10004493:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004496:	89 90 80 00 00 00    	mov    DWORD PTR [eax+0x80],edx
1000449c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000449f:	c6 40 68 01          	mov    BYTE PTR [eax+0x68],0x1
100044a3:	83 ec 04             	sub    esp,0x4
100044a6:	6a 00                	push   0x0
100044a8:	6a 00                	push   0x0
100044aa:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100044ad:	e8 fc ff ff ff       	call   100044ae <NFrame::toggleFullscreen(Video*)+0xa4>	100044ae: R_386_PC32	NFrame::setPosition(int, int)
100044b2:	83 c4 10             	add    esp,0x10
100044b5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100044b8:	c6 40 68 00          	mov    BYTE PTR [eax+0x68],0x0
100044bc:	83 ec 0c             	sub    esp,0xc
100044bf:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100044c2:	e8 fc ff ff ff       	call   100044c3 <NFrame::toggleFullscreen(Video*)+0xb9>	100044c3: R_386_PC32	Video::getHeight()
100044c7:	83 c4 10             	add    esp,0x10
100044ca:	89 c3                	mov    ebx,eax
100044cc:	83 ec 0c             	sub    esp,0xc
100044cf:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100044d2:	e8 fc ff ff ff       	call   100044d3 <NFrame::toggleFullscreen(Video*)+0xc9>	100044d3: R_386_PC32	Video::getWidth()
100044d7:	83 c4 10             	add    esp,0x10
100044da:	83 ec 04             	sub    esp,0x4
100044dd:	53                   	push   ebx
100044de:	50                   	push   eax
100044df:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100044e2:	e8 fc ff ff ff       	call   100044e3 <NFrame::toggleFullscreen(Video*)+0xd9>	100044e3: R_386_PC32	NFrame::setSize(int, int)
100044e7:	83 c4 10             	add    esp,0x10
100044ea:	90                   	nop
100044eb:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100044ee:	c9                   	leave  
100044ef:	c3                   	ret    

100044f0 <NFrame::getTitlebarHeight()>:
100044f0:	55                   	push   ebp
100044f1:	89 e5                	mov    ebp,esp
100044f3:	83 ec 08             	sub    esp,0x8
100044f6:	83 ec 0c             	sub    esp,0xc
100044f9:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100044fc:	e8 fc ff ff ff       	call   100044fd <NFrame::getTitlebarHeight()+0xd>	100044fd: R_386_PC32	NFrame::hasTitleBar()
10004501:	83 c4 10             	add    esp,0x10
10004504:	84 c0                	test   al,al
10004506:	74 0b                	je     10004513 <NFrame::getTitlebarHeight()+0x23>
10004508:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000450b:	8b 80 84 00 00 00    	mov    eax,DWORD PTR [eax+0x84]
10004511:	eb 05                	jmp    10004518 <NFrame::getTitlebarHeight()+0x28>
10004513:	b8 00 00 00 00       	mov    eax,0x0
10004518:	c9                   	leave  
10004519:	c3                   	ret    

1000451a <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)>:
1000451a:	55                   	push   ebp
1000451b:	89 e5                	mov    ebp,esp
1000451d:	83 ec 18             	sub    esp,0x18
10004520:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10004527:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000452a:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
1000452d:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10004530:	83 ec 0c             	sub    esp,0xc
10004533:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004536:	e8 fc ff ff ff       	call   10004537 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x1d>	10004537: R_386_PC32	LinkedList2<NFrame*>::isEmpty()
1000453b:	83 c4 10             	add    esp,0x10
1000453e:	83 f0 01             	xor    eax,0x1
10004541:	84 c0                	test   al,al
10004543:	74 0e                	je     10004553 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x39>
10004545:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10004548:	8b 00                	mov    eax,DWORD PTR [eax]
1000454a:	39 45 0c             	cmp    DWORD PTR [ebp+0xc],eax
1000454d:	75 04                	jne    10004553 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x39>
1000454f:	b0 01                	mov    al,0x1
10004551:	eb 02                	jmp    10004555 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x3b>
10004553:	b0 00                	mov    al,0x0
10004555:	84 c0                	test   al,al
10004557:	74 30                	je     10004589 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x6f>
10004559:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000455c:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000455f:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10004562:	8b 50 04             	mov    edx,DWORD PTR [eax+0x4]
10004565:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004568:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
1000456b:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000456e:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10004571:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10004574:	83 ec 08             	sub    esp,0x8
10004577:	6a 08                	push   0x8
10004579:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
1000457c:	e8 fc ff ff ff       	call   1000457d <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x63>	1000457d: R_386_PC32	operator delete(void*, unsigned long)
10004581:	83 c4 10             	add    esp,0x10
10004584:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10004587:	eb a7                	jmp    10004530 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x16>
10004589:	83 ec 0c             	sub    esp,0xc
1000458c:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000458f:	e8 fc ff ff ff       	call   10004590 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x76>	10004590: R_386_PC32	LinkedList2<NFrame*>::isEmpty()
10004594:	83 c4 10             	add    esp,0x10
10004597:	83 f0 01             	xor    eax,0x1
1000459a:	84 c0                	test   al,al
1000459c:	74 14                	je     100045b2 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x98>
1000459e:	83 7d f0 00          	cmp    DWORD PTR [ebp-0x10],0x0
100045a2:	74 0e                	je     100045b2 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x98>
100045a4:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100045a7:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
100045aa:	85 c0                	test   eax,eax
100045ac:	74 04                	je     100045b2 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x98>
100045ae:	b0 01                	mov    al,0x1
100045b0:	eb 02                	jmp    100045b4 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x9a>
100045b2:	b0 00                	mov    al,0x0
100045b4:	84 c0                	test   al,al
100045b6:	74 59                	je     10004611 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0xf7>
100045b8:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100045bb:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
100045be:	8b 00                	mov    eax,DWORD PTR [eax]
100045c0:	39 45 0c             	cmp    DWORD PTR [ebp+0xc],eax
100045c3:	75 3e                	jne    10004603 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0xe9>
100045c5:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100045c8:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
100045cb:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
100045ce:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100045d1:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
100045d4:	8b 50 04             	mov    edx,DWORD PTR [eax+0x4]
100045d7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100045da:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
100045dd:	83 ec 08             	sub    esp,0x8
100045e0:	6a 08                	push   0x8
100045e2:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
100045e5:	e8 fc ff ff ff       	call   100045e6 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0xcc>	100045e6: R_386_PC32	operator delete(void*, unsigned long)
100045ea:	83 c4 10             	add    esp,0x10
100045ed:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100045f0:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
100045f3:	85 c0                	test   eax,eax
100045f5:	75 09                	jne    10004600 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0xe6>
100045f7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100045fa:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100045fd:	89 50 08             	mov    DWORD PTR [eax+0x8],edx
10004600:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10004603:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10004606:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10004609:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
1000460c:	e9 78 ff ff ff       	jmp    10004589 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x6f>
10004611:	83 ec 0c             	sub    esp,0xc
10004614:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004617:	e8 fc ff ff ff       	call   10004618 <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0xfe>	10004618: R_386_PC32	LinkedList2<NFrame*>::isEmpty()
1000461c:	83 c4 10             	add    esp,0x10
1000461f:	84 c0                	test   al,al
10004621:	74 0a                	je     1000462d <LinkedList2<NFrame*>::deleteNodesByValue(NFrame*)+0x113>
10004623:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10004626:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
1000462d:	90                   	nop
1000462e:	c9                   	leave  
1000462f:	c3                   	ret    

10004630 <_GLOBAL__sub_I_mouseX>:
10004630:	83 ec 18             	sub    esp,0x18
10004633:	68 00 00 00 00       	push   0x0	10004634: R_386_32	tightMouseRegionOld
10004638:	e8 fc ff ff ff       	call   10004639 <_GLOBAL__sub_I_mouseX+0x9>	10004639: R_386_PC32	Region::Region()
1000463d:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0	10004640: R_386_32	tightMouseRegionNew
10004644:	e8 fc ff ff ff       	call   10004645 <_GLOBAL__sub_I_mouseX+0x15>	10004645: R_386_PC32	Region::Region()
10004649:	83 c4 1c             	add    esp,0x1c
1000464c:	c3                   	ret    
1000464d:	66 90                	xchg   ax,ax
1000464f:	90                   	nop

10004650 <PHYS_RAM_TABLE_SIZE>:
10004650:	13 05 00 00                                         ....

10004654 <PHYS_HIGHEST_UNUSED_ADDRESS>:
10004654:	24 05 00 00                                         $...

10004658 <PHYS_RAM_TABLE>:
10004658:	00 06 00 00                                         ....

1000465c <PHYS_DMA_MEMORY_1>:
1000465c:	00 00 01 00                                         ....

10004660 <PHYS_PHYS_PAGE_BITMAP>:
10004660:	00 00 02 00                                         ....

10004664 <PHYS_VIRT_PAGE_BITMAP>:
10004664:	00 00 04 00                                         ....

10004668 <PHYS_DMA_MEMORY_2>:
10004668:	00 00 06 00                                         ....

1000466c <PHYS_ALLOCED_VIRT_PAGES>:
1000466c:	00 00 10 00                                         ....

10004670 <PHYS_KRNL_PAGE_DIRECTORY>:
10004670:	00 10 00 00                                         ....

10004674 <VIRT_KERNEL_BASE>:
10004674:	00 00 00 c0                                         ....

10004678 <VIRT_LOW_MEGS>:
10004678:	00 00 00 c2                                         ....

1000467c <VIRT_CPU_SPECIFIC>:
1000467c:	00 00 40 c2                                         ..@.

10004680 <VIRT_RECURSIVE_SPOT_1>:
10004680:	00 00 80 c2                                         ....

10004684 <VIRT_RECURSIVE_SPOT_2>:
10004684:	00 00 c0 c2                                         ....

10004688 <VIRT_DMA_MEMORY_1>:
10004688:	00 00 01 c2                                         ....

1000468c <SIZE_DMA_MEMORY_1>:
1000468c:	00 00 01 00                                         ....

10004690 <VIRT_KRNL_PAGE_DIRECTORY>:
10004690:	00 10 00 c2                                         ....

10004694 <VIRT_PHYS_PAGE_BITMAP>:
10004694:	00 00 02 c2                                         ....

10004698 <SIZE_PHYS_PAGE_BITMAP>:
10004698:	00 00 02 00                                         ....

1000469c <VIRT_VIRT_PAGE_BITMAP>:
1000469c:	00 00 04 c2                                         ....

100046a0 <SIZE_VIRT_PAGE_BITMAP>:
100046a0:	00 80 00 00                                         ....

100046a4 <VIRT_RAM_TABLE>:
100046a4:	00 06 00 c2                                         ....

100046a8 <VIRT_RAM_TABLE_SIZE>:
100046a8:	13 05 00 c2                                         ....

100046ac <VIRT_HIGHEST_UNUSED_ADDRESS>:
100046ac:	24 05 00 c2                                         $...

100046b0 <SIZE_APP_STACK_USER>:
100046b0:	00 00 18 00                                         ....

100046b4 <SIZE_APP_STACK_KRNL>:
100046b4:	00 00 08 00                                         ....

100046b8 <SIZE_APP_STACK_TOTAL>:
100046b8:	00 00 20 00                                         .. .

100046bc <VIRT_APP_DATA>:
100046bc:	00 00 00 10                                         ....

100046c0 <VIRT_APP_STACK_USER_TOP>:
100046c0:	00 00 00 02                                         ....

100046c4 <VIRT_APP_STACK_KRNL_TOP>:
100046c4:	00 00 e8 01                                         ....

100046c8 <VIRT_HEAP_MIN>:
100046c8:	00 00 00 c8                                         ....

100046cc <VIRT_HEAP_MAX>:
100046cc:	ff ff ff ef                                         ....

100046d0 <VIRT_SBRK_MIN>:
100046d0:	00 00 00 f0                                         ....

100046d4 <VIRT_SBRK_MAX>:
100046d4:	00 00 c0 ff                                         ....

100046d8 <VIRT_ALLOCED_VIRT_PAGES>:
100046d8:	00 00 10 c2                                         ....

100046dc <VIRT_ACPI_DRIVER>:
100046dc:	00 40 48 c2                                         .@H.

100046e0 <TERMINAL_KEYBUFFER_IN_SIZE>:
100046e0:	80 00 00 00                                         ....

100046e4 <TERMINAL_KEYBUFFER_OUT_SIZE>:
100046e4:	80 00 00 00 58 00 20 53 54 4f 50 20 45 52 52 4f     ....X. STOP ERRO
100046f4:	52 20 00 00 41 20 70 72 6f 62 6c 65 6d 20 68 61     R ..A problem ha
10004704:	73 20 6f 63 63 75 72 65 64 20 61 6e 64 20 42 61     s occured and Ba
10004714:	6e 61 6e 61 20 63 61 6e 6e 6f 74 20 63 6f 6e 74     nana cannot cont
10004724:	69 6e 75 65 2e 00 43 6c 69 70 64 72 61 77 20 69     inue..Clipdraw i
10004734:	73 20 6e 6f 77 20 72 75 6e 6e 69 6e 67 2e 2e 2e     s now running...
10004744:	0a 00 2a 53 59 53 54 45 4d 00 55 6e 74 69 74 6c     ..*SYSTEM.Untitl
10004754:	65 64 20 57 69 6e 64 6f 77 00 66 90                 ed Window.f.

10004760 <vtable for NButton>:
	...
	10004768: R_386_32	NFrame::postResizeCleanup()
	1000476c: R_386_32	NButton::paintHandler(NFrame::Graphics)
	10004770: R_386_32	NFrame::regenerateRegion()

10004774 <vtable for NWindow>:
	...
	1000477c: R_386_32	NWindow::postResizeCleanup()
	10004780: R_386_32	NWindow::paintHandler(NFrame::Graphics)
	10004784: R_386_32	NFrame::regenerateRegion()

10004788 <vtable for NFrame>:
	...
	10004790: R_386_32	NFrame::postResizeCleanup()
	10004794: R_386_32	__cxa_pure_virtual
	10004798: R_386_32	NFrame::regenerateRegion()
1000479c:	4e 4f 4e 2d 4c 45 47 41 43 59 20 46 4f 4e 54 53     NON-LEGACY FONTS
100047ac:	20 4e 4f 54 20 49 4d 50 4c 45 4d 45 4e 54 45 44      NOT IMPLEMENTED
100047bc:	20 59 45 54 00 43 55 52 53 4f 52 20 4c 4f 41 44      YET.CURSOR LOAD
100047cc:	3a 20 42 41 44 20 31 0a 00 43 55 52 53 4f 52 20     : BAD 1..CURSOR 
100047dc:	4c 4f 41 44 3a 20 42 41 44 20 32 0a 00 4e 52 4d     LOAD: BAD 2..NRM
100047ec:	4c 00 57 41 49 54 00 54 4c 44 52 00 54 45 58 54     L.WAIT.TLDR.TEXT
100047fc:	00 56 45 52 54 00 48 4f 52 5a 00 48 41 4e 44 00     .VERT.HORZ.HAND.
1000480c:	43 55 52 53 4f 52 20 4c 4f 41 44 3a 20 42 41 44     CURSOR LOAD: BAD
1000481c:	20 33 0a 00 43 3a 2f 42 61 6e 61 6e 61 2f 43 75      3..C:/Banana/Cu
1000482c:	72 73 6f 72 73 2f 53 54 41 4e 44 41 52 44 2e 43     rsors/STANDARD.C
1000483c:	55 52 00 61 62 6f 72 74 00 66 90 90 00 00 00 3f     UR.abort.f.....?
