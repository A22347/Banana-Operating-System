
packages/banana/32/0002/vga.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	53                   	push   ebx
10000004:	83 ec 14             	sub    esp,0x14
10000007:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000000a:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
1000000d:	c7 45 ec 6c 01 00 00 	mov    DWORD PTR [ebp-0x14],0x16c
10000014:	83 ec 0c             	sub    esp,0xc
10000017:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
1000001a:	e8 fc ff ff ff       	call   1000001b <start(void*)+0x1b>	1000001b: R_386_PC32	malloc
1000001f:	83 c4 10             	add    esp,0x10
10000022:	89 c3                	mov    ebx,eax
10000024:	83 ec 0c             	sub    esp,0xc
10000027:	53                   	push   ebx
10000028:	e8 fc ff ff ff       	call   10000029 <start(void*)+0x29>	10000029: R_386_PC32	VGAVideo::VGAVideo()
1000002d:	83 c4 10             	add    esp,0x10
10000030:	89 5d f0             	mov    DWORD PTR [ebp-0x10],ebx
10000033:	83 ec 08             	sub    esp,0x8
10000036:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000039:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000003c:	e8 fc ff ff ff       	call   1000003d <start(void*)+0x3d>	1000003d: R_386_PC32	Device::addChild(Device*)
10000041:	83 c4 10             	add    esp,0x10
10000044:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000047:	8b 00                	mov    eax,DWORD PTR [eax]
10000049:	83 c0 08             	add    eax,0x8
1000004c:	8b 00                	mov    eax,DWORD PTR [eax]
1000004e:	6a 00                	push   0x0
10000050:	6a 00                	push   0x0
10000052:	6a 00                	push   0x0
10000054:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000057:	ff d0                	call   eax
10000059:	83 c4 10             	add    esp,0x10
1000005c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000005f:	a3 00 00 00 00       	mov    ds:0x0,eax	10000060: R_386_32	screen
10000064:	90                   	nop
10000065:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000068:	c9                   	leave  
10000069:	c3                   	ret    

1000006a <VGAVideo::setPlane(int)>:
1000006a:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000006e:	39 0d a0 0d 00 10    	cmp    DWORD PTR ds:0x10000da0,ecx	10000070: R_386_32	.data
10000074:	74 2b                	je     100000a1 <VGAVideo::setPlane(int)+0x37>
10000076:	89 0d a0 0d 00 10    	mov    DWORD PTR ds:0x10000da0,ecx	10000078: R_386_32	.data
1000007c:	b0 04                	mov    al,0x4
1000007e:	ba ce 03 00 00       	mov    edx,0x3ce
10000083:	ee                   	out    dx,al
10000084:	ba cf 03 00 00       	mov    edx,0x3cf
10000089:	88 c8                	mov    al,cl
1000008b:	ee                   	out    dx,al
1000008c:	b0 02                	mov    al,0x2
1000008e:	ba c4 03 00 00       	mov    edx,0x3c4
10000093:	ee                   	out    dx,al
10000094:	b8 01 00 00 00       	mov    eax,0x1
10000099:	ba c5 03 00 00       	mov    edx,0x3c5
1000009e:	d3 e0                	shl    eax,cl
100000a0:	ee                   	out    dx,al
100000a1:	c3                   	ret    

100000a2 <VGAVideo::VGAVideo()>:
100000a2:	55                   	push   ebp
100000a3:	89 e5                	mov    ebp,esp
100000a5:	83 ec 08             	sub    esp,0x8
100000a8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000ab:	83 ec 08             	sub    esp,0x8
100000ae:	68 00 0d 00 10       	push   0x10000d00	100000af: R_386_32	.text
100000b3:	50                   	push   eax
100000b4:	e8 fc ff ff ff       	call   100000b5 <VGAVideo::VGAVideo()+0x13>	100000b5: R_386_PC32	Video::Video(char const*)
100000b9:	83 c4 10             	add    esp,0x10
100000bc:	ba 08 00 00 00       	mov    edx,0x8	100000bd: R_386_32	vtable for VGAVideo
100000c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c4:	89 10                	mov    DWORD PTR [eax],edx
100000c6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c9:	c7 80 64 01 00 00 00 00 0a 00 	mov    DWORD PTR [eax+0x164],0xa0000
100000d3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000d6:	c7 80 68 01 00 00 12 00 00 00 	mov    DWORD PTR [eax+0x168],0x12
100000e0:	90                   	nop
100000e1:	c9                   	leave  
100000e2:	c3                   	ret    
100000e3:	90                   	nop

100000e4 <VGAVideo::close(int, int, void*)>:
100000e4:	31 c0                	xor    eax,eax
100000e6:	c3                   	ret    

100000e7 <get_bios_area_video_type()>:
100000e7:	a1 10 04 00 00       	mov    eax,ds:0x410
100000ec:	83 e0 30             	and    eax,0x30
100000ef:	c3                   	ret    

100000f0 <VGAVideo::open(int, int, void*)>:
100000f0:	57                   	push   edi
100000f1:	53                   	push   ebx
100000f2:	83 ec 14             	sub    esp,0x14
100000f5:	e8 fc ff ff ff       	call   100000f6 <VGAVideo::open(int, int, void*)+0x6>	100000f6: R_386_PC32	get_bios_area_video_type()
100000fa:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
100000fe:	83 f8 30             	cmp    eax,0x30
10000101:	0f 94 83 61 01 00 00 	sete   BYTE PTR [ebx+0x161]
10000108:	f6 05 01 00 00 00 08 	test   BYTE PTR ds:0x1,0x8	1000010a: R_386_32	sysBootSettings
1000010f:	0f 84 9d 00 00 00    	je     100001b2 <VGAVideo::open(int, int, void*)+0xc2>
10000115:	c6 83 61 01 00 00 01 	mov    BYTE PTR [ebx+0x161],0x1
1000011c:	b8 11 00 00 00       	mov    eax,0x11
10000121:	83 ec 0c             	sub    esp,0xc
10000124:	89 83 68 01 00 00    	mov    DWORD PTR [ebx+0x168],eax
1000012a:	c7 83 64 01 00 00 00 00 0a 00 	mov    DWORD PTR [ebx+0x164],0xa0000
10000134:	50                   	push   eax
10000135:	50                   	push   eax
10000136:	68 90 00 00 00       	push   0x90
1000013b:	6a 00                	push   0x0
1000013d:	68 0c 0d 00 10       	push   0x10000d0c	1000013e: R_386_32	.text
10000142:	e8 fc ff ff ff       	call   10000143 <VGAVideo::open(int, int, void*)+0x53>	10000143: R_386_PC32	Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
10000147:	83 c4 20             	add    esp,0x20
1000014a:	e8 fc ff ff ff       	call   1000014b <VGAVideo::open(int, int, void*)+0x5b>	1000014b: R_386_PC32	Vm::finish8086()
1000014f:	83 ec 08             	sub    esp,0x8
10000152:	ff b3 68 01 00 00    	push   DWORD PTR [ebx+0x168]
10000158:	68 25 0d 00 10       	push   0x10000d25	10000159: R_386_32	.text
1000015d:	e8 fc ff ff ff       	call   1000015e <VGAVideo::open(int, int, void*)+0x6e>	1000015e: R_386_PC32	Dbg::kprintf(char const*, ...)
10000162:	8b 83 64 01 00 00    	mov    eax,DWORD PTR [ebx+0x164]
10000168:	2d 00 00 00 3e       	sub    eax,0x3e000000
1000016d:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000171:	58                   	pop    eax
10000172:	5a                   	pop    edx
10000173:	6a 00                	push   0x0
10000175:	53                   	push   ebx
10000176:	e8 fc ff ff ff       	call   10000177 <VGAVideo::open(int, int, void*)+0x87>	10000177: R_386_PC32	VGAVideo::setPlane(int)
1000017b:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000017f:	31 c0                	xor    eax,eax
10000181:	b9 80 25 00 00       	mov    ecx,0x2580
10000186:	89 d7                	mov    edi,edx
10000188:	83 c4 10             	add    esp,0x10
1000018b:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000018d:	80 bb 61 01 00 00 00 	cmp    BYTE PTR [ebx+0x161],0x0
10000194:	74 2d                	je     100001c3 <VGAVideo::open(int, int, void*)+0xd3>
10000196:	c7 83 58 01 00 00 80 02 00 00 	mov    DWORD PTR [ebx+0x158],0x280
100001a0:	c7 83 5c 01 00 00 e0 01 00 00 	mov    DWORD PTR [ebx+0x15c],0x1e0
100001aa:	31 c0                	xor    eax,eax
100001ac:	83 c4 14             	add    esp,0x14
100001af:	5b                   	pop    ebx
100001b0:	5f                   	pop    edi
100001b1:	c3                   	ret    
100001b2:	83 f8 30             	cmp    eax,0x30
100001b5:	0f 95 c0             	setne  al
100001b8:	0f b6 c0             	movzx  eax,al
100001bb:	83 c0 11             	add    eax,0x11
100001be:	e9 5e ff ff ff       	jmp    10000121 <VGAVideo::open(int, int, void*)+0x31>
100001c3:	83 ec 08             	sub    esp,0x8
100001c6:	6a 01                	push   0x1
100001c8:	53                   	push   ebx
100001c9:	e8 fc ff ff ff       	call   100001ca <VGAVideo::open(int, int, void*)+0xda>	100001ca: R_386_PC32	VGAVideo::setPlane(int)
100001ce:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100001d2:	31 c0                	xor    eax,eax
100001d4:	89 d7                	mov    edi,edx
100001d6:	b9 80 25 00 00       	mov    ecx,0x2580
100001db:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100001dd:	58                   	pop    eax
100001de:	5a                   	pop    edx
100001df:	6a 02                	push   0x2
100001e1:	53                   	push   ebx
100001e2:	e8 fc ff ff ff       	call   100001e3 <VGAVideo::open(int, int, void*)+0xf3>	100001e3: R_386_PC32	VGAVideo::setPlane(int)
100001e7:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100001eb:	31 c0                	xor    eax,eax
100001ed:	89 d7                	mov    edi,edx
100001ef:	b9 80 25 00 00       	mov    ecx,0x2580
100001f4:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100001f6:	59                   	pop    ecx
100001f7:	5f                   	pop    edi
100001f8:	6a 03                	push   0x3
100001fa:	53                   	push   ebx
100001fb:	e8 fc ff ff ff       	call   100001fc <VGAVideo::open(int, int, void*)+0x10c>	100001fc: R_386_PC32	VGAVideo::setPlane(int)
10000200:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000204:	b9 80 25 00 00       	mov    ecx,0x2580
10000209:	89 d7                	mov    edi,edx
1000020b:	31 c0                	xor    eax,eax
1000020d:	83 c4 10             	add    esp,0x10
10000210:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10000212:	eb 82                	jmp    10000196 <VGAVideo::open(int, int, void*)+0xa6>

10000214 <monoPixelLookup(int, int, int)>:
10000214:	56                   	push   esi
10000215:	53                   	push   ebx
10000216:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
1000021a:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000021e:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10000222:	89 d3                	mov    ebx,edx
10000224:	01 c1                	add    ecx,eax
10000226:	c1 fb 0e             	sar    ebx,0xe
10000229:	83 e1 01             	and    ecx,0x1
1000022c:	01 c0                	add    eax,eax
1000022e:	83 e3 03             	and    ebx,0x3
10000231:	83 e0 02             	and    eax,0x2
10000234:	09 c8                	or     eax,ecx
10000236:	89 d1                	mov    ecx,edx
10000238:	c1 f9 06             	sar    ecx,0x6
1000023b:	89 ce                	mov    esi,ecx
1000023d:	89 d1                	mov    ecx,edx
1000023f:	83 e6 03             	and    esi,0x3
10000242:	c1 f9 16             	sar    ecx,0x16
10000245:	83 e1 03             	and    ecx,0x3
10000248:	81 fa bb bb bb 00    	cmp    edx,0xbbbbbb
1000024e:	74 1e                	je     1000026e <monoPixelLookup(int, int, int)+0x5a>
10000250:	8d 14 0b             	lea    edx,[ebx+ecx*1]
10000253:	8d 0c 53             	lea    ecx,[ebx+edx*2]
10000256:	ba 80 ea ff 00       	mov    edx,0xffea80
1000025b:	01 f1                	add    ecx,esi
1000025d:	5b                   	pop    ebx
1000025e:	83 e1 fc             	and    ecx,0xfffffffc
10000261:	5e                   	pop    esi
10000262:	d3 ea                	shr    edx,cl
10000264:	88 c1                	mov    cl,al
10000266:	d3 ea                	shr    edx,cl
10000268:	89 d0                	mov    eax,edx
1000026a:	83 e0 01             	and    eax,0x1
1000026d:	c3                   	ret    
1000026e:	b8 01 00 00 00       	mov    eax,0x1
10000273:	5b                   	pop    ebx
10000274:	5e                   	pop    esi
10000275:	c3                   	ret    

10000276 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)>:
10000276:	57                   	push   edi
10000277:	56                   	push   esi
10000278:	53                   	push   ebx
10000279:	83 ec 40             	sub    esp,0x40
1000027c:	8b 7c 24 50          	mov    edi,DWORD PTR [esp+0x50]
10000280:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000284:	8b 4c 24 70          	mov    ecx,DWORD PTR [esp+0x70]
10000288:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
1000028c:	89 4c 24 08          	mov    DWORD PTR [esp+0x8],ecx
10000290:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
10000294:	8b 8f 68 01 00 00    	mov    ecx,DWORD PTR [edi+0x168]
1000029a:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000029e:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
100002a2:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100002a6:	83 e9 11             	sub    ecx,0x11
100002a9:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
100002ad:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
100002b1:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100002b5:	8b 74 24 60          	mov    esi,DWORD PTR [esp+0x60]
100002b9:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100002bd:	8b 54 24 6c          	mov    edx,DWORD PTR [esp+0x6c]
100002c1:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
100002c5:	83 f9 01             	cmp    ecx,0x1
100002c8:	0f 87 80 02 00 00    	ja     1000054e <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x2d8>
100002ce:	89 fb                	mov    ebx,edi
100002d0:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
100002d4:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
100002da:	0f af cf             	imul   ecx,edi
100002dd:	85 c0                	test   eax,eax
100002df:	89 4c 24 28          	mov    DWORD PTR [esp+0x28],ecx
100002e3:	0f 8e 13 02 00 00    	jle    100004fc <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x286>
100002e9:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
100002ed:	85 c9                	test   ecx,ecx
100002ef:	0f 8e 07 02 00 00    	jle    100004fc <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x286>
100002f5:	8d 0c 95 00 00 00 00 	lea    ecx,[edx*4+0x0]
100002fc:	01 f8                	add    eax,edi
100002fe:	89 4c 24 34          	mov    DWORD PTR [esp+0x34],ecx
10000302:	0f af d6             	imul   edx,esi
10000305:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10000309:	03 54 24 3c          	add    edx,DWORD PTR [esp+0x3c]
1000030d:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10000311:	8d 0c 91             	lea    ecx,[ecx+edx*4]
10000314:	89 4c 24 2c          	mov    DWORD PTR [esp+0x2c],ecx
10000318:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
1000031c:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
10000324:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000328:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000032c:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000330:	eb 3c                	jmp    1000036e <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xf8>
10000332:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10000336:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
1000033a:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
1000033e:	8d 77 04             	lea    esi,[edi+0x4]
10000341:	8b 02                	mov    eax,DWORD PTR [edx]
10000343:	8d 59 01             	lea    ebx,[ecx+0x1]
10000346:	ff 37                	push   DWORD PTR [edi]
10000348:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
1000034c:	51                   	push   ecx
1000034d:	52                   	push   edx
1000034e:	ff 50 24             	call   DWORD PTR [eax+0x24]
10000351:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
10000355:	83 c4 10             	add    esp,0x10
10000358:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
1000035c:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
10000360:	89 5c 24 14          	mov    DWORD PTR [esp+0x14],ebx
10000364:	39 7c 24 1c          	cmp    DWORD PTR [esp+0x1c],edi
10000368:	0f 8e 66 01 00 00    	jle    100004d4 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x25e>
1000036e:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10000372:	2b 44 24 10          	sub    eax,DWORD PTR [esp+0x10]
10000376:	c1 f8 03             	sar    eax,0x3
10000379:	74 b7                	je     10000332 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xbc>
1000037b:	f6 44 24 14 07       	test   BYTE PTR [esp+0x14],0x7
10000380:	75 b0                	jne    10000332 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xbc>
10000382:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000386:	83 f8 64             	cmp    eax,0x64
10000389:	7e 08                	jle    10000393 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x11d>
1000038b:	c7 44 24 0c 64 00 00 00 	mov    DWORD PTR [esp+0xc],0x64
10000393:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000397:	8d 34 c5 00 00 00 00 	lea    esi,[eax*8+0x0]
1000039e:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100003a2:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
100003a9:	0f 84 54 01 00 00    	je     10000503 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x28d>
100003af:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100003b3:	8b 4c 24 3c          	mov    ecx,DWORD PTR [esp+0x3c]
100003b7:	31 ff                	xor    edi,edi
100003b9:	8d 1c 08             	lea    ebx,[eax+ecx*1]
100003bc:	83 44 24 08 04       	add    DWORD PTR [esp+0x8],0x4
100003c1:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
100003c5:	50                   	push   eax
100003c6:	8d 04 3b             	lea    eax,[ebx+edi*1]
100003c9:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100003cd:	47                   	inc    edi
100003ce:	50                   	push   eax
100003cf:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
100003d2:	e8 fc ff ff ff       	call   100003d3 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x15d>	100003d3: R_386_PC32	monoPixelLookup(int, int, int)
100003d7:	83 c4 10             	add    esp,0x10
100003da:	88 87 3f 12 00 10    	mov    BYTE PTR [edi+0x1000123f],al	100003dc: R_386_32	.bss
100003e0:	39 f7                	cmp    edi,esi
100003e2:	7c d8                	jl     100003bc <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x146>
100003e4:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
100003e8:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100003ec:	8b 91 64 01 00 00    	mov    edx,DWORD PTR [ecx+0x164]
100003f2:	03 44 24 28          	add    eax,DWORD PTR [esp+0x28]
100003f6:	31 c9                	xor    ecx,ecx
100003f8:	c1 f8 03             	sar    eax,0x3
100003fb:	8d bc 10 00 00 00 c2 	lea    edi,[eax+edx*1-0x3e000000]
10000402:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10000406:	80 be 61 01 00 00 01 	cmp    BYTE PTR [esi+0x161],0x1
1000040d:	19 c0                	sbb    eax,eax
1000040f:	83 e0 03             	and    eax,0x3
10000412:	40                   	inc    eax
10000413:	39 c1                	cmp    ecx,eax
10000415:	0f 8d 9c 00 00 00    	jge    100004b7 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x241>
1000041b:	83 ec 08             	sub    esp,0x8
1000041e:	51                   	push   ecx
1000041f:	89 4c 24 30          	mov    DWORD PTR [esp+0x30],ecx
10000423:	56                   	push   esi
10000424:	be 01 00 00 00       	mov    esi,0x1
10000429:	e8 fc ff ff ff       	call   1000042a <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x1b4>	1000042a: R_386_PC32	VGAVideo::setPlane(int)
1000042e:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
10000432:	31 c0                	xor    eax,eax
10000434:	d3 e6                	shl    esi,cl
10000436:	83 c4 10             	add    esp,0x10
10000439:	0f b6 14 c5 40 12 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001240]	1000043d: R_386_32	.bss
10000441:	0f b6 1c c5 41 12 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001241]	10000445: R_386_32	.bss
10000449:	21 f2                	and    edx,esi
1000044b:	21 f3                	and    ebx,esi
1000044d:	01 d2                	add    edx,edx
1000044f:	09 d3                	or     ebx,edx
10000451:	0f b6 14 c5 42 12 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001242]	10000455: R_386_32	.bss
10000459:	01 db                	add    ebx,ebx
1000045b:	21 f2                	and    edx,esi
1000045d:	09 da                	or     edx,ebx
1000045f:	0f b6 1c c5 43 12 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001243]	10000463: R_386_32	.bss
10000467:	01 d2                	add    edx,edx
10000469:	21 f3                	and    ebx,esi
1000046b:	09 d3                	or     ebx,edx
1000046d:	0f b6 14 c5 44 12 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001244]	10000471: R_386_32	.bss
10000475:	01 db                	add    ebx,ebx
10000477:	21 f2                	and    edx,esi
10000479:	09 da                	or     edx,ebx
1000047b:	0f b6 1c c5 45 12 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001245]	1000047f: R_386_32	.bss
10000483:	01 d2                	add    edx,edx
10000485:	21 f3                	and    ebx,esi
10000487:	09 d3                	or     ebx,edx
10000489:	0f b6 14 c5 46 12 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001246]	1000048d: R_386_32	.bss
10000491:	01 db                	add    ebx,ebx
10000493:	21 f2                	and    edx,esi
10000495:	09 da                	or     edx,ebx
10000497:	0f b6 1c c5 47 12 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001247]	1000049b: R_386_32	.bss
1000049f:	01 d2                	add    edx,edx
100004a1:	21 f3                	and    ebx,esi
100004a3:	09 da                	or     edx,ebx
100004a5:	d3 ea                	shr    edx,cl
100004a7:	88 14 07             	mov    BYTE PTR [edi+eax*1],dl
100004aa:	40                   	inc    eax
100004ab:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
100004af:	75 88                	jne    10000439 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x1c3>
100004b1:	41                   	inc    ecx
100004b2:	e9 4b ff ff ff       	jmp    10000402 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x18c>
100004b7:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100004bb:	c1 e0 03             	shl    eax,0x3
100004be:	01 44 24 10          	add    DWORD PTR [esp+0x10],eax
100004c2:	01 44 24 14          	add    DWORD PTR [esp+0x14],eax
100004c6:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100004ca:	39 7c 24 1c          	cmp    DWORD PTR [esp+0x1c],edi
100004ce:	0f 8f 9a fe ff ff    	jg     1000036e <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xf8>
100004d4:	ff 44 24 18          	inc    DWORD PTR [esp+0x18]
100004d8:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
100004dc:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100004e0:	8b 89 58 01 00 00    	mov    ecx,DWORD PTR [ecx+0x158]
100004e6:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
100004ea:	01 4c 24 28          	add    DWORD PTR [esp+0x28],ecx
100004ee:	01 7c 24 2c          	add    DWORD PTR [esp+0x2c],edi
100004f2:	3b 44 24 30          	cmp    eax,DWORD PTR [esp+0x30]
100004f6:	0f 85 1c fe ff ff    	jne    10000318 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xa2>
100004fc:	83 c4 40             	add    esp,0x40
100004ff:	5b                   	pop    ebx
10000500:	5e                   	pop    esi
10000501:	5f                   	pop    edi
10000502:	c3                   	ret    
10000503:	31 c9                	xor    ecx,ecx
10000505:	83 44 24 08 04       	add    DWORD PTR [esp+0x8],0x4
1000050a:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000050e:	8b 40 fc             	mov    eax,DWORD PTR [eax-0x4]
10000511:	89 c3                	mov    ebx,eax
10000513:	89 c2                	mov    edx,eax
10000515:	c1 fb 15             	sar    ebx,0x15
10000518:	c1 fa 0a             	sar    edx,0xa
1000051b:	83 e3 07             	and    ebx,0x7
1000051e:	83 e2 38             	and    edx,0x38
10000521:	09 d3                	or     ebx,edx
10000523:	8d 14 00             	lea    edx,[eax+eax*1]
10000526:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000052a:	81 e2 c0 01 00 00    	and    edx,0x1c0
10000530:	01 c8                	add    eax,ecx
10000532:	09 da                	or     edx,ebx
10000534:	83 e0 01             	and    eax,0x1
10000537:	41                   	inc    ecx
10000538:	8a 84 50 00 00 00 00 	mov    al,BYTE PTR [eax+edx*2+0x0]	1000053b: R_386_32	dither16Data
1000053f:	88 81 3f 12 00 10    	mov    BYTE PTR [ecx+0x1000123f],al	10000541: R_386_32	.bss
10000545:	39 f1                	cmp    ecx,esi
10000547:	7c bc                	jl     10000505 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x28f>
10000549:	e9 96 fe ff ff       	jmp    100003e4 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x16e>
1000054e:	83 c4 40             	add    esp,0x40
10000551:	5b                   	pop    ebx
10000552:	5e                   	pop    esi
10000553:	5f                   	pop    edi
10000554:	e9 fc ff ff ff       	jmp    10000555 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x2df>	10000555: R_386_PC32	Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
10000559:	90                   	nop

1000055a <VGAVideo::putrect(int, int, int, int, unsigned int)>:
1000055a:	57                   	push   edi
1000055b:	56                   	push   esi
1000055c:	53                   	push   ebx
1000055d:	83 ec 50             	sub    esp,0x50
10000560:	8b 74 24 60          	mov    esi,DWORD PTR [esp+0x60]
10000564:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10000568:	89 74 24 04          	mov    DWORD PTR [esp+0x4],esi
1000056c:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000570:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
10000574:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
10000578:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
1000057c:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
10000580:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10000584:	8b 44 24 74          	mov    eax,DWORD PTR [esp+0x74]
10000588:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000058c:	8b 86 68 01 00 00    	mov    eax,DWORD PTR [esi+0x168]
10000592:	83 e8 11             	sub    eax,0x11
10000595:	83 f8 01             	cmp    eax,0x1
10000598:	0f 87 3d 05 00 00    	ja     10000adb <VGAVideo::putrect(int, int, int, int, unsigned int)+0x581>
1000059e:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
100005a2:	8b 86 64 01 00 00    	mov    eax,DWORD PTR [esi+0x164]
100005a8:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
100005ac:	2d 00 00 00 3e       	sub    eax,0x3e000000
100005b1:	03 74 24 48          	add    esi,DWORD PTR [esp+0x48]
100005b5:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100005b9:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
100005bd:	89 f8                	mov    eax,edi
100005bf:	c1 f8 15             	sar    eax,0x15
100005c2:	83 e0 07             	and    eax,0x7
100005c5:	89 c2                	mov    edx,eax
100005c7:	89 f8                	mov    eax,edi
100005c9:	c1 f8 0a             	sar    eax,0xa
100005cc:	83 e0 38             	and    eax,0x38
100005cf:	09 d0                	or     eax,edx
100005d1:	89 fa                	mov    edx,edi
100005d3:	01 fa                	add    edx,edi
100005d5:	81 e2 c0 01 00 00    	and    edx,0x1c0
100005db:	09 d0                	or     eax,edx
100005dd:	0f b6 bc 00 00 00 00 00 	movzx  edi,BYTE PTR [eax+eax*1+0x0]	100005e1: R_386_32	dither16Data
100005e5:	0f b6 84 00 01 00 00 00 	movzx  eax,BYTE PTR [eax+eax*1+0x1]	100005e9: R_386_32	dither16Data
100005ed:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
100005f1:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100005f5:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
100005f9:	89 c8                	mov    eax,ecx
100005fb:	01 f8                	add    eax,edi
100005fd:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10000601:	39 c7                	cmp    edi,eax
10000603:	0f 8d a6 00 00 00    	jge    100006af <VGAVideo::putrect(int, int, int, int, unsigned int)+0x155>
10000609:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000060d:	8b 7c 24 3c          	mov    edi,DWORD PTR [esp+0x3c]
10000611:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000615:	29 f7                	sub    edi,esi
10000617:	8b 5c 24 04          	mov    ebx,DWORD PTR [esp+0x4]
1000061b:	89 7c 24 4c          	mov    DWORD PTR [esp+0x4c],edi
1000061f:	0f af 83 58 01 00 00 	imul   eax,DWORD PTR [ebx+0x158]
10000626:	01 f0                	add    eax,esi
10000628:	c1 f8 03             	sar    eax,0x3
1000062b:	c1 ff 03             	sar    edi,0x3
1000062e:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10000632:	89 7c 24 44          	mov    DWORD PTR [esp+0x44],edi
10000636:	74 0d                	je     10000645 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xeb>
10000638:	83 e6 07             	and    esi,0x7
1000063b:	89 74 24 38          	mov    DWORD PTR [esp+0x38],esi
1000063f:	0f 84 fa 01 00 00    	je     1000083f <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2e5>
10000645:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000649:	03 44 24 14          	add    eax,DWORD PTR [esp+0x14]
1000064d:	a8 01                	test   al,0x1
1000064f:	0f 84 d5 01 00 00    	je     1000082a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2d0>
10000655:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10000659:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
1000065d:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000661:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10000665:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000669:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
10000670:	74 44                	je     100006b6 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x15c>
10000672:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000676:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
1000067a:	39 f8                	cmp    eax,edi
1000067c:	7d 1f                	jge    1000069d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x143>
1000067e:	89 c3                	mov    ebx,eax
10000680:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
10000684:	8b 06                	mov    eax,DWORD PTR [esi]
10000686:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
1000068a:	53                   	push   ebx
1000068b:	43                   	inc    ebx
1000068c:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000690:	56                   	push   esi
10000691:	ff 50 24             	call   DWORD PTR [eax+0x24]
10000694:	83 c4 10             	add    esp,0x10
10000697:	39 5c 24 0c          	cmp    DWORD PTR [esp+0xc],ebx
1000069b:	75 e3                	jne    10000680 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x126>
1000069d:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
100006a1:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100006a5:	39 44 24 3c          	cmp    DWORD PTR [esp+0x3c],eax
100006a9:	0f 8f 5a ff ff ff    	jg     10000609 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xaf>
100006af:	83 c4 50             	add    esp,0x50
100006b2:	5b                   	pop    ebx
100006b3:	5e                   	pop    esi
100006b4:	5f                   	pop    edi
100006b5:	c3                   	ret    
100006b6:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100006ba:	c7 44 24 20 00 00 00 00 	mov    DWORD PTR [esp+0x20],0x0
100006c2:	f7 d0                	not    eax
100006c4:	83 e0 07             	and    eax,0x7
100006c7:	89 c7                	mov    edi,eax
100006c9:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100006cd:	89 f9                	mov    ecx,edi
100006cf:	b8 fe ff ff ff       	mov    eax,0xfffffffe
100006d4:	d3 c0                	rol    eax,cl
100006d6:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
100006da:	83 ec 08             	sub    esp,0x8
100006dd:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
100006e1:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
100006e5:	e8 fc ff ff ff       	call   100006e6 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x18c>	100006e6: R_386_PC32	VGAVideo::setPlane(int)
100006ea:	83 c4 10             	add    esp,0x10
100006ed:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100006f1:	39 7c 24 1c          	cmp    DWORD PTR [esp+0x1c],edi
100006f5:	0f 84 c0 00 00 00    	je     100007bb <VGAVideo::putrect(int, int, int, int, unsigned int)+0x261>
100006fb:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
100006ff:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
10000703:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10000707:	d3 fe                	sar    esi,cl
10000709:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000070d:	83 e6 01             	and    esi,0x1
10000710:	8a 4c 24 2c          	mov    cl,BYTE PTR [esp+0x2c]
10000714:	d3 e6                	shl    esi,cl
10000716:	39 c2                	cmp    edx,eax
10000718:	0f 8d a4 03 00 00    	jge    10000ac2 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x568>
1000071e:	8a 44 24 34          	mov    al,BYTE PTR [esp+0x34]
10000722:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
10000726:	89 c7                	mov    edi,eax
10000728:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000072c:	83 c2 02             	add    edx,0x2
1000072f:	8d 1c 08             	lea    ebx,[eax+ecx*1]
10000732:	89 f8                	mov    eax,edi
10000734:	22 03                	and    al,BYTE PTR [ebx]
10000736:	09 f0                	or     eax,esi
10000738:	88 03                	mov    BYTE PTR [ebx],al
1000073a:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000073e:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000744:	89 c3                	mov    ebx,eax
10000746:	c1 fb 02             	sar    ebx,0x2
10000749:	01 d9                	add    ecx,ebx
1000074b:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
1000074f:	7f d7                	jg     10000728 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1ce>
10000751:	c1 f8 03             	sar    eax,0x3
10000754:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
10000758:	03 44 24 30          	add    eax,DWORD PTR [esp+0x30]
1000075c:	8b 74 24 38          	mov    esi,DWORD PTR [esp+0x38]
10000760:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
10000764:	d3 fe                	sar    esi,cl
10000766:	8a 4c 24 2c          	mov    cl,BYTE PTR [esp+0x2c]
1000076a:	83 e6 01             	and    esi,0x1
1000076d:	d3 e6                	shl    esi,cl
1000076f:	8d 4f 01             	lea    ecx,[edi+0x1]
10000772:	83 7c 24 48 01       	cmp    DWORD PTR [esp+0x48],0x1
10000777:	7e 2c                	jle    100007a5 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x24b>
10000779:	8a 5c 24 34          	mov    bl,BYTE PTR [esp+0x34]
1000077d:	89 df                	mov    edi,ebx
1000077f:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
10000783:	89 fa                	mov    edx,edi
10000785:	01 c3                	add    ebx,eax
10000787:	83 c1 02             	add    ecx,0x2
1000078a:	22 13                	and    dl,BYTE PTR [ebx]
1000078c:	09 f2                	or     edx,esi
1000078e:	88 13                	mov    BYTE PTR [ebx],dl
10000790:	8b 5c 24 04          	mov    ebx,DWORD PTR [esp+0x4]
10000794:	8b 93 58 01 00 00    	mov    edx,DWORD PTR [ebx+0x158]
1000079a:	c1 fa 02             	sar    edx,0x2
1000079d:	01 d0                	add    eax,edx
1000079f:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
100007a3:	7f da                	jg     1000077f <VGAVideo::putrect(int, int, int, int, unsigned int)+0x225>
100007a5:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
100007a9:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100007ad:	83 f8 04             	cmp    eax,0x4
100007b0:	0f 85 24 ff ff ff    	jne    100006da <VGAVideo::putrect(int, int, int, int, unsigned int)+0x180>
100007b6:	e9 e2 fe ff ff       	jmp    1000069d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x143>
100007bb:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
100007bf:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100007c3:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
100007c7:	d3 f8                	sar    eax,cl
100007c9:	8a 4c 24 2c          	mov    cl,BYTE PTR [esp+0x2c]
100007cd:	83 e0 01             	and    eax,0x1
100007d0:	d3 e0                	shl    eax,cl
100007d2:	39 74 24 28          	cmp    DWORD PTR [esp+0x28],esi
100007d6:	7d cd                	jge    100007a5 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x24b>
100007d8:	89 c7                	mov    edi,eax
100007da:	0f b6 74 24 34       	movzx  esi,BYTE PTR [esp+0x34]
100007df:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
100007e3:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
100007e7:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100007eb:	42                   	inc    edx
100007ec:	8d 1c 08             	lea    ebx,[eax+ecx*1]
100007ef:	89 f0                	mov    eax,esi
100007f1:	22 03                	and    al,BYTE PTR [ebx]
100007f3:	88 44 24 24          	mov    BYTE PTR [esp+0x24],al
100007f7:	89 f8                	mov    eax,edi
100007f9:	0b 44 24 24          	or     eax,DWORD PTR [esp+0x24]
100007fd:	88 03                	mov    BYTE PTR [ebx],al
100007ff:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000803:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000809:	c1 f8 03             	sar    eax,0x3
1000080c:	01 c1                	add    ecx,eax
1000080e:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
10000812:	75 d3                	jne    100007e7 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x28d>
10000814:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
10000818:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
1000081c:	83 f8 04             	cmp    eax,0x4
1000081f:	0f 85 b5 fe ff ff    	jne    100006da <VGAVideo::putrect(int, int, int, int, unsigned int)+0x180>
10000825:	e9 73 fe ff ff       	jmp    1000069d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x143>
1000082a:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000082e:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10000832:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10000836:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
1000083a:	e9 26 fe ff ff       	jmp    10000665 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x10b>
1000083f:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000843:	83 e0 01             	and    eax,0x1
10000846:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
1000084a:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
1000084e:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10000852:	80 be 61 01 00 00 01 	cmp    BYTE PTR [esi+0x161],0x1
10000859:	19 c0                	sbb    eax,eax
1000085b:	83 e0 03             	and    eax,0x3
1000085e:	40                   	inc    eax
1000085f:	39 c7                	cmp    edi,eax
10000861:	0f 8d 31 02 00 00    	jge    10000a98 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x53e>
10000867:	83 ec 08             	sub    esp,0x8
1000086a:	57                   	push   edi
1000086b:	56                   	push   esi
1000086c:	e8 fc ff ff ff       	call   1000086d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x313>	1000086d: R_386_PC32	VGAVideo::setPlane(int)
10000871:	83 c4 10             	add    esp,0x10
10000874:	80 be 61 01 00 00 00 	cmp    BYTE PTR [esi+0x161],0x0
1000087b:	0f 84 55 01 00 00    	je     100009d6 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x47c>
10000881:	89 f9                	mov    ecx,edi
10000883:	b8 01 00 00 00       	mov    eax,0x1
10000888:	8b 7c 24 44          	mov    edi,DWORD PTR [esp+0x44]
1000088c:	d3 e0                	shl    eax,cl
1000088e:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10000892:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10000896:	01 c7                	add    edi,eax
10000898:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000089c:	89 7c 24 34          	mov    DWORD PTR [esp+0x34],edi
100008a0:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
100008a4:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100008a8:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
100008ac:	39 c6                	cmp    esi,eax
100008ae:	0f 8d 07 01 00 00    	jge    100009bb <VGAVideo::putrect(int, int, int, int, unsigned int)+0x461>
100008b4:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100008b8:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
100008bc:	40                   	inc    eax
100008bd:	85 c9                	test   ecx,ecx
100008bf:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100008c3:	0f 85 9d 00 00 00    	jne    10000966 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x40c>
100008c9:	eb 2a                	jmp    100008f5 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x39b>
100008cb:	85 c0                	test   eax,eax
100008cd:	b9 aa 00 00 00       	mov    ecx,0xaa
100008d2:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100008d6:	74 6c                	je     10000944 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3ea>
100008d8:	88 0c 18             	mov    BYTE PTR [eax+ebx*1],cl
100008db:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100008df:	46                   	inc    esi
100008e0:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
100008e6:	c1 f8 03             	sar    eax,0x3
100008e9:	01 c3                	add    ebx,eax
100008eb:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
100008ef:	0f 84 c6 00 00 00    	je     100009bb <VGAVideo::putrect(int, int, int, int, unsigned int)+0x461>
100008f5:	52                   	push   edx
100008f6:	56                   	push   esi
100008f7:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100008fb:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
100008ff:	57                   	push   edi
10000900:	e8 fc ff ff ff       	call   10000901 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3a7>	10000901: R_386_PC32	monoPixelLookup(int, int, int)
10000905:	83 c4 0c             	add    esp,0xc
10000908:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
1000090c:	56                   	push   esi
1000090d:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10000911:	57                   	push   edi
10000912:	e8 fc ff ff ff       	call   10000913 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3b9>	10000913: R_386_PC32	monoPixelLookup(int, int, int)
10000917:	83 c4 10             	add    esp,0x10
1000091a:	89 c7                	mov    edi,eax
1000091c:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10000920:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000924:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000928:	21 ca                	and    edx,ecx
1000092a:	21 f9                	and    ecx,edi
1000092c:	89 d0                	mov    eax,edx
1000092e:	89 ca                	mov    edx,ecx
10000930:	74 99                	je     100008cb <VGAVideo::putrect(int, int, int, int, unsigned int)+0x371>
10000932:	85 c0                	test   eax,eax
10000934:	b9 ff 00 00 00       	mov    ecx,0xff
10000939:	ba 55 00 00 00       	mov    edx,0x55
1000093e:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000942:	75 94                	jne    100008d8 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x37e>
10000944:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
10000947:	eb 92                	jmp    100008db <VGAVideo::putrect(int, int, int, int, unsigned int)+0x381>
10000949:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000094d:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
10000950:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000954:	46                   	inc    esi
10000955:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
1000095b:	c1 f8 03             	sar    eax,0x3
1000095e:	01 c3                	add    ebx,eax
10000960:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
10000964:	74 55                	je     100009bb <VGAVideo::putrect(int, int, int, int, unsigned int)+0x461>
10000966:	50                   	push   eax
10000967:	56                   	push   esi
10000968:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
1000096c:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
10000970:	57                   	push   edi
10000971:	e8 fc ff ff ff       	call   10000972 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x418>	10000972: R_386_PC32	monoPixelLookup(int, int, int)
10000976:	83 c4 0c             	add    esp,0xc
10000979:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
1000097d:	56                   	push   esi
1000097e:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10000982:	57                   	push   edi
10000983:	e8 fc ff ff ff       	call   10000984 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x42a>	10000984: R_386_PC32	monoPixelLookup(int, int, int)
10000988:	83 c4 10             	add    esp,0x10
1000098b:	89 c7                	mov    edi,eax
1000098d:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10000991:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000995:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000999:	21 c8                	and    eax,ecx
1000099b:	83 f8 01             	cmp    eax,0x1
1000099e:	19 d2                	sbb    edx,edx
100009a0:	f7 d2                	not    edx
100009a2:	83 e2 55             	and    edx,0x55
100009a5:	83 f8 01             	cmp    eax,0x1
100009a8:	19 c0                	sbb    eax,eax
100009aa:	83 e0 ab             	and    eax,0xffffffab
100009ad:	48                   	dec    eax
100009ae:	85 cf                	test   edi,ecx
100009b0:	74 97                	je     10000949 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3ef>
100009b2:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
100009b6:	88 04 1f             	mov    BYTE PTR [edi+ebx*1],al
100009b9:	eb 95                	jmp    10000950 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3f6>
100009bb:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
100009bf:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100009c3:	39 44 24 34          	cmp    DWORD PTR [esp+0x34],eax
100009c7:	0f 85 d3 fe ff ff    	jne    100008a0 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x346>
100009cd:	ff 44 24 38          	inc    DWORD PTR [esp+0x38]
100009d1:	e9 74 fe ff ff       	jmp    1000084a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2f0>
100009d6:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100009da:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
100009de:	d3 f8                	sar    eax,cl
100009e0:	a8 01                	test   al,0x1
100009e2:	0f 84 8f 00 00 00    	je     10000a77 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x51d>
100009e8:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100009ec:	d3 f8                	sar    eax,cl
100009ee:	83 e0 01             	and    eax,0x1
100009f1:	83 f8 01             	cmp    eax,0x1
100009f4:	19 ff                	sbb    edi,edi
100009f6:	89 f9                	mov    ecx,edi
100009f8:	89 f8                	mov    eax,edi
100009fa:	83 e1 56             	and    ecx,0x56
100009fd:	83 e0 ab             	and    eax,0xffffffab
10000a00:	49                   	dec    ecx
10000a01:	05 ff 00 00 00       	add    eax,0xff
10000a06:	88 4c 24 24          	mov    BYTE PTR [esp+0x24],cl
10000a0a:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10000a0e:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000a12:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10000a16:	39 f8                	cmp    eax,edi
10000a18:	7d b3                	jge    100009cd <VGAVideo::putrect(int, int, int, int, unsigned int)+0x473>
10000a1a:	8b 54 24 30          	mov    edx,DWORD PTR [esp+0x30]
10000a1e:	8b 5c 24 44          	mov    ebx,DWORD PTR [esp+0x44]
10000a22:	89 d6                	mov    esi,edx
10000a24:	01 d3                	add    ebx,edx
10000a26:	89 5c 24 2c          	mov    DWORD PTR [esp+0x2c],ebx
10000a2a:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10000a2e:	01 d8                	add    eax,ebx
10000a30:	01 fb                	add    ebx,edi
10000a32:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000a36:	89 f2                	mov    edx,esi
10000a38:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10000a3c:	eb 1b                	jmp    10000a59 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4ff>
10000a3e:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
10000a42:	88 0c 17             	mov    BYTE PTR [edi+edx*1],cl
10000a45:	40                   	inc    eax
10000a46:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
10000a4a:	8b 8f 58 01 00 00    	mov    ecx,DWORD PTR [edi+0x158]
10000a50:	c1 f9 03             	sar    ecx,0x3
10000a53:	01 ca                	add    edx,ecx
10000a55:	39 c3                	cmp    ebx,eax
10000a57:	74 0e                	je     10000a67 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x50d>
10000a59:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10000a5d:	a8 01                	test   al,0x1
10000a5f:	74 dd                	je     10000a3e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4e4>
10000a61:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10000a65:	eb db                	jmp    10000a42 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4e8>
10000a67:	46                   	inc    esi
10000a68:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10000a6c:	75 c8                	jne    10000a36 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4dc>
10000a6e:	ff 44 24 38          	inc    DWORD PTR [esp+0x38]
10000a72:	e9 d3 fd ff ff       	jmp    1000084a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2f0>
10000a77:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
10000a7b:	d3 fe                	sar    esi,cl
10000a7d:	83 e6 01             	and    esi,0x1
10000a80:	89 74 24 20          	mov    DWORD PTR [esp+0x20],esi
10000a84:	74 4b                	je     10000ad1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x577>
10000a86:	c6 44 24 24 aa       	mov    BYTE PTR [esp+0x24],0xaa
10000a8b:	c7 44 24 20 55 00 00 00 	mov    DWORD PTR [esp+0x20],0x55
10000a93:	e9 76 ff ff ff       	jmp    10000a0e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4b4>
10000a98:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
10000a9c:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10000aa0:	83 e0 f8             	and    eax,0xfffffff8
10000aa3:	8d 44 07 ff          	lea    eax,[edi+eax*1-0x1]
10000aa7:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000aab:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
10000aaf:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000ab3:	39 44 24 3c          	cmp    DWORD PTR [esp+0x3c],eax
10000ab7:	0f 8f 4c fb ff ff    	jg     10000609 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xaf>
10000abd:	e9 ed fb ff ff       	jmp    100006af <VGAVideo::putrect(int, int, int, int, unsigned int)+0x155>
10000ac2:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000ac6:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000acc:	e9 80 fc ff ff       	jmp    10000751 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1f7>
10000ad1:	c6 44 24 24 00       	mov    BYTE PTR [esp+0x24],0x0
10000ad6:	e9 33 ff ff ff       	jmp    10000a0e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4b4>
10000adb:	83 c4 50             	add    esp,0x50
10000ade:	5b                   	pop    ebx
10000adf:	5e                   	pop    esi
10000ae0:	5f                   	pop    edi
10000ae1:	e9 fc ff ff ff       	jmp    10000ae2 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x588>	10000ae2: R_386_PC32	Video::putrect(int, int, int, int, unsigned int)

10000ae6 <VGAVideo::putpixel(int, int, unsigned int)>:
10000ae6:	57                   	push   edi
10000ae7:	56                   	push   esi
10000ae8:	53                   	push   ebx
10000ae9:	83 ec 14             	sub    esp,0x14
10000aec:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
10000af0:	8b 5c 24 28          	mov    ebx,DWORD PTR [esp+0x28]
10000af4:	8b 86 64 01 00 00    	mov    eax,DWORD PTR [esi+0x164]
10000afa:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000afe:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000b03:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000b07:	89 d8                	mov    eax,ebx
10000b09:	f7 d0                	not    eax
10000b0b:	83 e0 07             	and    eax,0x7
10000b0e:	83 be 68 01 00 00 06 	cmp    DWORD PTR [esi+0x168],0x6
10000b15:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000b19:	8b 86 58 01 00 00    	mov    eax,DWORD PTR [esi+0x158]
10000b1f:	0f 84 c2 00 00 00    	je     10000be7 <VGAVideo::putpixel(int, int, unsigned int)+0x101>
10000b25:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
10000b2a:	01 d8                	add    eax,ebx
10000b2c:	c1 f8 03             	sar    eax,0x3
10000b2f:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000b33:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
10000b39:	84 d2                	test   dl,dl
10000b3b:	74 75                	je     10000bb2 <VGAVideo::putpixel(int, int, unsigned int)+0xcc>
10000b3d:	88 54 24 10          	mov    BYTE PTR [esp+0x10],dl
10000b41:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000b45:	53                   	push   ebx
10000b46:	57                   	push   edi
10000b47:	e8 fc ff ff ff       	call   10000b48 <VGAVideo::putpixel(int, int, unsigned int)+0x62>	10000b48: R_386_PC32	monoPixelLookup(int, int, int)
10000b4c:	83 c4 0c             	add    esp,0xc
10000b4f:	89 04 24             	mov    DWORD PTR [esp],eax
10000b52:	8a 54 24 10          	mov    dl,BYTE PTR [esp+0x10]
10000b56:	b8 fe ff ff ff       	mov    eax,0xfffffffe
10000b5b:	8a 4c 24 04          	mov    cl,BYTE PTR [esp+0x4]
10000b5f:	31 db                	xor    ebx,ebx
10000b61:	d3 c0                	rol    eax,cl
10000b63:	84 d2                	test   dl,dl
10000b65:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000b69:	74 3b                	je     10000ba6 <VGAVideo::putpixel(int, int, unsigned int)+0xc0>
10000b6b:	85 db                	test   ebx,ebx
10000b6d:	75 3c                	jne    10000bab <VGAVideo::putpixel(int, int, unsigned int)+0xc5>
10000b6f:	53                   	push   ebx
10000b70:	43                   	inc    ebx
10000b71:	56                   	push   esi
10000b72:	e8 fc ff ff ff       	call   10000b73 <VGAVideo::putpixel(int, int, unsigned int)+0x8d>	10000b73: R_386_PC32	VGAVideo::setPlane(int)
10000b77:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000b7b:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
10000b7f:	8a 44 24 18          	mov    al,BYTE PTR [esp+0x18]
10000b83:	03 7c 24 10          	add    edi,DWORD PTR [esp+0x10]
10000b87:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10000b8b:	22 07                	and    al,BYTE PTR [edi]
10000b8d:	d1 7c 24 08          	sar    DWORD PTR [esp+0x8],1
10000b91:	83 e2 01             	and    edx,0x1
10000b94:	d3 e2                	shl    edx,cl
10000b96:	09 d0                	or     eax,edx
10000b98:	88 07                	mov    BYTE PTR [edi],al
10000b9a:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
10000ba0:	58                   	pop    eax
10000ba1:	84 d2                	test   dl,dl
10000ba3:	59                   	pop    ecx
10000ba4:	75 c5                	jne    10000b6b <VGAVideo::putpixel(int, int, unsigned int)+0x85>
10000ba6:	83 fb 04             	cmp    ebx,0x4
10000ba9:	75 c4                	jne    10000b6f <VGAVideo::putpixel(int, int, unsigned int)+0x89>
10000bab:	83 c4 14             	add    esp,0x14
10000bae:	5b                   	pop    ebx
10000baf:	5e                   	pop    esi
10000bb0:	5f                   	pop    edi
10000bb1:	c3                   	ret    
10000bb2:	89 f9                	mov    ecx,edi
10000bb4:	89 f8                	mov    eax,edi
10000bb6:	c1 f9 15             	sar    ecx,0x15
10000bb9:	c1 f8 0a             	sar    eax,0xa
10000bbc:	83 e1 07             	and    ecx,0x7
10000bbf:	83 e0 38             	and    eax,0x38
10000bc2:	09 c1                	or     ecx,eax
10000bc4:	8d 04 3f             	lea    eax,[edi+edi*1]
10000bc7:	25 c0 01 00 00       	and    eax,0x1c0
10000bcc:	09 c8                	or     eax,ecx
10000bce:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
10000bd2:	01 d9                	add    ecx,ebx
10000bd4:	83 e1 01             	and    ecx,0x1
10000bd7:	0f b6 84 41 00 00 00 00 	movzx  eax,BYTE PTR [ecx+eax*2+0x0]	10000bdb: R_386_32	dither16Data
10000bdf:	89 04 24             	mov    DWORD PTR [esp],eax
10000be2:	e9 6f ff ff ff       	jmp    10000b56 <VGAVideo::putpixel(int, int, unsigned int)+0x70>
10000be7:	8b 54 24 2c          	mov    edx,DWORD PTR [esp+0x2c]
10000beb:	d1 fa                	sar    edx,1
10000bed:	0f af c2             	imul   eax,edx
10000bf0:	01 d8                	add    eax,ebx
10000bf2:	c1 f8 03             	sar    eax,0x3
10000bf5:	f6 44 24 2c 01       	test   BYTE PTR [esp+0x2c],0x1
10000bfa:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000bfe:	0f 84 2f ff ff ff    	je     10000b33 <VGAVideo::putpixel(int, int, unsigned int)+0x4d>
10000c04:	05 00 20 00 00       	add    eax,0x2000
10000c09:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000c0d:	e9 21 ff ff ff       	jmp    10000b33 <VGAVideo::putpixel(int, int, unsigned int)+0x4d>

10000c12 <VGAVideo::~VGAVideo()>:
10000c12:	55                   	push   ebp
10000c13:	89 e5                	mov    ebp,esp
10000c15:	83 ec 08             	sub    esp,0x8
10000c18:	ba 08 00 00 00       	mov    edx,0x8	10000c19: R_386_32	vtable for VGAVideo
10000c1d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000c20:	89 10                	mov    DWORD PTR [eax],edx
10000c22:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000c25:	83 ec 0c             	sub    esp,0xc
10000c28:	50                   	push   eax
10000c29:	e8 fc ff ff ff       	call   10000c2a <VGAVideo::~VGAVideo()+0x18>	10000c2a: R_386_PC32	Video::~Video()
10000c2e:	83 c4 10             	add    esp,0x10
10000c31:	90                   	nop
10000c32:	c9                   	leave  
10000c33:	c3                   	ret    

10000c34 <VGAVideo::~VGAVideo()>:
10000c34:	55                   	push   ebp
10000c35:	89 e5                	mov    ebp,esp
10000c37:	83 ec 08             	sub    esp,0x8
10000c3a:	83 ec 0c             	sub    esp,0xc
10000c3d:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000c40:	e8 fc ff ff ff       	call   10000c41 <VGAVideo::~VGAVideo()+0xd>	10000c41: R_386_PC32	VGAVideo::~VGAVideo()
10000c45:	83 c4 10             	add    esp,0x10
10000c48:	83 ec 08             	sub    esp,0x8
10000c4b:	68 6c 01 00 00       	push   0x16c
10000c50:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000c53:	e8 fc ff ff ff       	call   10000c54 <VGAVideo::~VGAVideo()+0x20>	10000c54: R_386_PC32	operator delete(void*, unsigned long)
10000c58:	83 c4 10             	add    esp,0x10
10000c5b:	c9                   	leave  
10000c5c:	c3                   	ret    
10000c5d:	66 90                	xchg   ax,ax
10000c5f:	90                   	nop

10000c60 <PHYS_RAM_TABLE_SIZE>:
10000c60:	13 05 00 00                                         ....

10000c64 <PHYS_HIGHEST_UNUSED_ADDRESS>:
10000c64:	24 05 00 00                                         $...

10000c68 <PHYS_RAM_TABLE>:
10000c68:	00 06 00 00                                         ....

10000c6c <PHYS_DMA_MEMORY_1>:
10000c6c:	00 00 01 00                                         ....

10000c70 <PHYS_PHYS_PAGE_BITMAP>:
10000c70:	00 00 02 00                                         ....

10000c74 <PHYS_VIRT_PAGE_BITMAP>:
10000c74:	00 00 04 00                                         ....

10000c78 <PHYS_DMA_MEMORY_2>:
10000c78:	00 00 06 00                                         ....

10000c7c <PHYS_ALLOCED_VIRT_PAGES>:
10000c7c:	00 00 10 00                                         ....

10000c80 <PHYS_KRNL_PAGE_DIRECTORY>:
10000c80:	00 10 00 00                                         ....

10000c84 <VIRT_KERNEL_BASE>:
10000c84:	00 00 00 c0                                         ....

10000c88 <VIRT_LOW_MEGS>:
10000c88:	00 00 00 c2                                         ....

10000c8c <VIRT_CPU_SPECIFIC>:
10000c8c:	00 00 40 c2                                         ..@.

10000c90 <VIRT_RECURSIVE_SPOT_1>:
10000c90:	00 00 80 c2                                         ....

10000c94 <VIRT_RECURSIVE_SPOT_2>:
10000c94:	00 00 c0 c2                                         ....

10000c98 <VIRT_DMA_MEMORY_1>:
10000c98:	00 00 01 c2                                         ....

10000c9c <SIZE_DMA_MEMORY_1>:
10000c9c:	00 00 01 00                                         ....

10000ca0 <VIRT_DMA_MEMORY_2>:
10000ca0:	00 00 06 c2                                         ....

10000ca4 <SIZE_DMA_MEMORY_2>:
10000ca4:	00 00 02 00                                         ....

10000ca8 <VIRT_KRNL_PAGE_DIRECTORY>:
10000ca8:	00 10 00 c2                                         ....

10000cac <VIRT_PHYS_PAGE_BITMAP>:
10000cac:	00 00 02 c2                                         ....

10000cb0 <SIZE_PHYS_PAGE_BITMAP>:
10000cb0:	00 00 02 00                                         ....

10000cb4 <VIRT_VIRT_PAGE_BITMAP>:
10000cb4:	00 00 04 c2                                         ....

10000cb8 <SIZE_VIRT_PAGE_BITMAP>:
10000cb8:	00 80 00 00                                         ....

10000cbc <VIRT_RAM_TABLE>:
10000cbc:	00 06 00 c2                                         ....

10000cc0 <VIRT_RAM_TABLE_SIZE>:
10000cc0:	13 05 00 c2                                         ....

10000cc4 <VIRT_HIGHEST_UNUSED_ADDRESS>:
10000cc4:	24 05 00 c2                                         $...

10000cc8 <SIZE_APP_STACK_USER>:
10000cc8:	00 00 18 00                                         ....

10000ccc <SIZE_APP_STACK_KRNL>:
10000ccc:	00 00 08 00                                         ....

10000cd0 <SIZE_APP_STACK_TOTAL>:
10000cd0:	00 00 20 00                                         .. .

10000cd4 <VIRT_APP_DATA>:
10000cd4:	00 00 00 10                                         ....

10000cd8 <VIRT_APP_STACK_USER_TOP>:
10000cd8:	00 00 00 02                                         ....

10000cdc <VIRT_APP_STACK_KRNL_TOP>:
10000cdc:	00 00 e8 01                                         ....

10000ce0 <VIRT_HEAP_MIN>:
10000ce0:	00 00 00 c8                                         ....

10000ce4 <VIRT_HEAP_MAX>:
10000ce4:	ff ff ff ef                                         ....

10000ce8 <VIRT_SBRK_MIN>:
10000ce8:	00 00 00 f0                                         ....

10000cec <VIRT_SBRK_MAX>:
10000cec:	00 00 c0 ff                                         ....

10000cf0 <VIRT_ALLOCED_VIRT_PAGES>:
10000cf0:	00 00 10 c2                                         ....

10000cf4 <VIRT_ACPI_DRIVER>:
10000cf4:	00 40 48 c2                                         .@H.

10000cf8 <TERMINAL_KEYBUFFER_IN_SIZE>:
10000cf8:	96 00 00 00                                         ....

10000cfc <TERMINAL_KEYBUFFER_OUT_SIZE>:
10000cfc:	2c 01 00 00 56 47 41 20 44 69 73 70 6c 61 79 00     ,...VGA Display.
10000d0c:	43 3a 2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d     C:/Banana/System
10000d1c:	2f 56 47 41 2e 43 4f 4d 00 53 65 74 20 74 6f 20     /VGA.COM.Set to 
10000d2c:	76 69 64 65 6f 20 6d 6f 64 65 20 25 64 0a 00 90     video mode %d...

10000d3c <vtable for VGAVideo>:
	...
	10000d44: R_386_32	VGAVideo::~VGAVideo()
	10000d48: R_386_32	VGAVideo::~VGAVideo()
	10000d4c: R_386_32	VGAVideo::open(int, int, void*)
	10000d50: R_386_32	VGAVideo::close(int, int, void*)
	10000d54: R_386_32	Device::hibernate()
	10000d58: R_386_32	Device::wake()
	10000d5c: R_386_32	Device::detect()
	10000d60: R_386_32	Device::disableLegacy()
	10000d64: R_386_32	Device::powerSaving(PowerSavingLevel)
	10000d68: R_386_32	VGAVideo::putpixel(int, int, unsigned int)
	10000d6c: R_386_32	VGAVideo::putrect(int, int, int, int, unsigned int)
	10000d70: R_386_32	Video::putTGA(int, int, unsigned char*, int)
	10000d74: R_386_32	Video::drawCursor(int, int, unsigned char*, int)
	10000d78: R_386_32	VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)
	10000d7c: R_386_32	Video::blit(unsigned int*, int, int, int, int)
	10000d80: R_386_32	Video::clearScreen(unsigned int)
