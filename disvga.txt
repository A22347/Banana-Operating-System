
packages/banana/32/0002/vga.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	53                   	push   ebx
10000004:	83 ec 14             	sub    esp,0x14
10000007:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000000a:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
1000000d:	c7 45 ec 6c 01 00 00 	mov    DWORD PTR [ebp-0x14],0x16c
10000014:	83 ec 0c             	sub    esp,0xc
10000017:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
1000001a:	e8 fc ff ff ff       	call   1000001b <start(void*)+0x1b>	1000001b: R_386_PC32	malloc
1000001f:	83 c4 10             	add    esp,0x10
10000022:	89 c3                	mov    ebx,eax
10000024:	83 ec 0c             	sub    esp,0xc
10000027:	53                   	push   ebx
10000028:	e8 fc ff ff ff       	call   10000029 <start(void*)+0x29>	10000029: R_386_PC32	VGAVideo::VGAVideo()
1000002d:	83 c4 10             	add    esp,0x10
10000030:	89 5d f0             	mov    DWORD PTR [ebp-0x10],ebx
10000033:	83 ec 08             	sub    esp,0x8
10000036:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000039:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000003c:	e8 fc ff ff ff       	call   1000003d <start(void*)+0x3d>	1000003d: R_386_PC32	Device::addChild(Device*)
10000041:	83 c4 10             	add    esp,0x10
10000044:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000047:	8b 00                	mov    eax,DWORD PTR [eax]
10000049:	83 c0 08             	add    eax,0x8
1000004c:	8b 00                	mov    eax,DWORD PTR [eax]
1000004e:	6a 00                	push   0x0
10000050:	6a 00                	push   0x0
10000052:	6a 00                	push   0x0
10000054:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000057:	ff d0                	call   eax
10000059:	83 c4 10             	add    esp,0x10
1000005c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000005f:	a3 00 00 00 00       	mov    ds:0x0,eax	10000060: R_386_32	screen
10000064:	90                   	nop
10000065:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000068:	c9                   	leave  
10000069:	c3                   	ret    

1000006a <VGAVideo::setPlane(int)>:
1000006a:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000006e:	39 0d 40 0d 00 10    	cmp    DWORD PTR ds:0x10000d40,ecx	10000070: R_386_32	.data
10000074:	74 2b                	je     100000a1 <VGAVideo::setPlane(int)+0x37>
10000076:	89 0d 40 0d 00 10    	mov    DWORD PTR ds:0x10000d40,ecx	10000078: R_386_32	.data
1000007c:	b0 04                	mov    al,0x4
1000007e:	ba ce 03 00 00       	mov    edx,0x3ce
10000083:	ee                   	out    dx,al
10000084:	ba cf 03 00 00       	mov    edx,0x3cf
10000089:	88 c8                	mov    al,cl
1000008b:	ee                   	out    dx,al
1000008c:	b0 02                	mov    al,0x2
1000008e:	ba c4 03 00 00       	mov    edx,0x3c4
10000093:	ee                   	out    dx,al
10000094:	b8 01 00 00 00       	mov    eax,0x1
10000099:	ba c5 03 00 00       	mov    edx,0x3c5
1000009e:	d3 e0                	shl    eax,cl
100000a0:	ee                   	out    dx,al
100000a1:	c3                   	ret    

100000a2 <VGAVideo::VGAVideo()>:
100000a2:	55                   	push   ebp
100000a3:	89 e5                	mov    ebp,esp
100000a5:	83 ec 08             	sub    esp,0x8
100000a8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000ab:	83 ec 08             	sub    esp,0x8
100000ae:	68 a8 0c 00 10       	push   0x10000ca8	100000af: R_386_32	.text
100000b3:	50                   	push   eax
100000b4:	e8 fc ff ff ff       	call   100000b5 <VGAVideo::VGAVideo()+0x13>	100000b5: R_386_PC32	Video::Video(char const*)
100000b9:	83 c4 10             	add    esp,0x10
100000bc:	ba 08 00 00 00       	mov    edx,0x8	100000bd: R_386_32	vtable for VGAVideo
100000c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c4:	89 10                	mov    DWORD PTR [eax],edx
100000c6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c9:	c7 80 64 01 00 00 00 00 0a 00 	mov    DWORD PTR [eax+0x164],0xa0000
100000d3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000d6:	c7 80 68 01 00 00 12 00 00 00 	mov    DWORD PTR [eax+0x168],0x12
100000e0:	90                   	nop
100000e1:	c9                   	leave  
100000e2:	c3                   	ret    
100000e3:	90                   	nop

100000e4 <VGAVideo::close(int, int, void*)>:
100000e4:	31 c0                	xor    eax,eax
100000e6:	c3                   	ret    

100000e7 <get_bios_area_video_type()>:
100000e7:	a1 10 04 00 00       	mov    eax,ds:0x410
100000ec:	83 e0 30             	and    eax,0x30
100000ef:	c3                   	ret    

100000f0 <VGAVideo::open(int, int, void*)>:
100000f0:	57                   	push   edi
100000f1:	53                   	push   ebx
100000f2:	83 ec 14             	sub    esp,0x14
100000f5:	e8 fc ff ff ff       	call   100000f6 <VGAVideo::open(int, int, void*)+0x6>	100000f6: R_386_PC32	get_bios_area_video_type()
100000fa:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
100000fe:	83 f8 30             	cmp    eax,0x30
10000101:	0f 94 83 61 01 00 00 	sete   BYTE PTR [ebx+0x161]
10000108:	f6 05 01 00 00 00 08 	test   BYTE PTR ds:0x1,0x8	1000010a: R_386_32	sysBootSettings
1000010f:	0f 84 af 00 00 00    	je     100001c4 <VGAVideo::open(int, int, void*)+0xd4>
10000115:	c6 83 61 01 00 00 01 	mov    BYTE PTR [ebx+0x161],0x1
1000011c:	b8 11 00 00 00       	mov    eax,0x11
10000121:	83 ec 0c             	sub    esp,0xc
10000124:	89 83 68 01 00 00    	mov    DWORD PTR [ebx+0x168],eax
1000012a:	c7 83 58 01 00 00 80 02 00 00 	mov    DWORD PTR [ebx+0x158],0x280
10000134:	c7 83 5c 01 00 00 e0 01 00 00 	mov    DWORD PTR [ebx+0x15c],0x1e0
1000013e:	c7 83 64 01 00 00 00 00 0a 00 	mov    DWORD PTR [ebx+0x164],0xa0000
10000148:	50                   	push   eax
10000149:	50                   	push   eax
1000014a:	68 90 00 00 00       	push   0x90
1000014f:	6a 00                	push   0x0
10000151:	68 b4 0c 00 10       	push   0x10000cb4	10000152: R_386_32	.text
10000156:	e8 fc ff ff ff       	call   10000157 <VGAVideo::open(int, int, void*)+0x67>	10000157: R_386_PC32	Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
1000015b:	83 c4 20             	add    esp,0x20
1000015e:	e8 fc ff ff ff       	call   1000015f <VGAVideo::open(int, int, void*)+0x6f>	1000015f: R_386_PC32	Vm::finish8086()
10000163:	83 ec 08             	sub    esp,0x8
10000166:	ff b3 68 01 00 00    	push   DWORD PTR [ebx+0x168]
1000016c:	68 cd 0c 00 10       	push   0x10000ccd	1000016d: R_386_32	.text
10000171:	e8 fc ff ff ff       	call   10000172 <VGAVideo::open(int, int, void*)+0x82>	10000172: R_386_PC32	Dbg::kprintf(char const*, ...)
10000176:	8b 83 64 01 00 00    	mov    eax,DWORD PTR [ebx+0x164]
1000017c:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000181:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000185:	58                   	pop    eax
10000186:	5a                   	pop    edx
10000187:	6a 00                	push   0x0
10000189:	53                   	push   ebx
1000018a:	e8 fc ff ff ff       	call   1000018b <VGAVideo::open(int, int, void*)+0x9b>	1000018b: R_386_PC32	VGAVideo::setPlane(int)
1000018f:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000193:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
10000199:	83 c4 10             	add    esp,0x10
1000019c:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
100001a3:	85 c9                	test   ecx,ecx
100001a5:	79 03                	jns    100001aa <VGAVideo::open(int, int, void*)+0xba>
100001a7:	83 c1 07             	add    ecx,0x7
100001aa:	c1 f9 03             	sar    ecx,0x3
100001ad:	31 c0                	xor    eax,eax
100001af:	89 d7                	mov    edi,edx
100001b1:	f3 aa                	rep stos BYTE PTR es:[edi],al
100001b3:	80 bb 61 01 00 00 00 	cmp    BYTE PTR [ebx+0x161],0x0
100001ba:	74 19                	je     100001d5 <VGAVideo::open(int, int, void*)+0xe5>
100001bc:	83 c4 14             	add    esp,0x14
100001bf:	31 c0                	xor    eax,eax
100001c1:	5b                   	pop    ebx
100001c2:	5f                   	pop    edi
100001c3:	c3                   	ret    
100001c4:	83 f8 30             	cmp    eax,0x30
100001c7:	0f 95 c0             	setne  al
100001ca:	0f b6 c0             	movzx  eax,al
100001cd:	83 c0 11             	add    eax,0x11
100001d0:	e9 4c ff ff ff       	jmp    10000121 <VGAVideo::open(int, int, void*)+0x31>
100001d5:	83 ec 08             	sub    esp,0x8
100001d8:	6a 01                	push   0x1
100001da:	53                   	push   ebx
100001db:	e8 fc ff ff ff       	call   100001dc <VGAVideo::open(int, int, void*)+0xec>	100001dc: R_386_PC32	VGAVideo::setPlane(int)
100001e0:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100001e4:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
100001ea:	83 c4 10             	add    esp,0x10
100001ed:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
100001f4:	85 c9                	test   ecx,ecx
100001f6:	78 7c                	js     10000274 <VGAVideo::open(int, int, void*)+0x184>
100001f8:	83 ec 08             	sub    esp,0x8
100001fb:	31 c0                	xor    eax,eax
100001fd:	89 d7                	mov    edi,edx
100001ff:	c1 f9 03             	sar    ecx,0x3
10000202:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000204:	6a 02                	push   0x2
10000206:	53                   	push   ebx
10000207:	e8 fc ff ff ff       	call   10000208 <VGAVideo::open(int, int, void*)+0x118>	10000208: R_386_PC32	VGAVideo::setPlane(int)
1000020c:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000210:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
10000216:	83 c4 10             	add    esp,0x10
10000219:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
10000220:	85 c9                	test   ecx,ecx
10000222:	78 4b                	js     1000026f <VGAVideo::open(int, int, void*)+0x17f>
10000224:	83 ec 08             	sub    esp,0x8
10000227:	31 c0                	xor    eax,eax
10000229:	89 d7                	mov    edi,edx
1000022b:	c1 f9 03             	sar    ecx,0x3
1000022e:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000230:	6a 03                	push   0x3
10000232:	53                   	push   ebx
10000233:	e8 fc ff ff ff       	call   10000234 <VGAVideo::open(int, int, void*)+0x144>	10000234: R_386_PC32	VGAVideo::setPlane(int)
10000238:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000023c:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
10000242:	83 c4 10             	add    esp,0x10
10000245:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
1000024c:	85 c9                	test   ecx,ecx
1000024e:	78 11                	js     10000261 <VGAVideo::open(int, int, void*)+0x171>
10000250:	c1 f9 03             	sar    ecx,0x3
10000253:	31 c0                	xor    eax,eax
10000255:	89 d7                	mov    edi,edx
10000257:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000259:	83 c4 14             	add    esp,0x14
1000025c:	31 c0                	xor    eax,eax
1000025e:	5b                   	pop    ebx
1000025f:	5f                   	pop    edi
10000260:	c3                   	ret    
10000261:	83 c1 07             	add    ecx,0x7
10000264:	31 c0                	xor    eax,eax
10000266:	c1 f9 03             	sar    ecx,0x3
10000269:	89 d7                	mov    edi,edx
1000026b:	f3 aa                	rep stos BYTE PTR es:[edi],al
1000026d:	eb ea                	jmp    10000259 <VGAVideo::open(int, int, void*)+0x169>
1000026f:	83 c1 07             	add    ecx,0x7
10000272:	eb b0                	jmp    10000224 <VGAVideo::open(int, int, void*)+0x134>
10000274:	83 c1 07             	add    ecx,0x7
10000277:	e9 7c ff ff ff       	jmp    100001f8 <VGAVideo::open(int, int, void*)+0x108>

1000027c <monoPixelLookup(int, int, int)>:
1000027c:	56                   	push   esi
1000027d:	53                   	push   ebx
1000027e:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
10000282:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000286:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
1000028a:	89 da                	mov    edx,ebx
1000028c:	01 c1                	add    ecx,eax
1000028e:	c1 fa 0e             	sar    edx,0xe
10000291:	83 e1 01             	and    ecx,0x1
10000294:	01 c0                	add    eax,eax
10000296:	83 e2 03             	and    edx,0x3
10000299:	83 e0 02             	and    eax,0x2
1000029c:	89 de                	mov    esi,ebx
1000029e:	09 c8                	or     eax,ecx
100002a0:	c1 fe 16             	sar    esi,0x16
100002a3:	89 d9                	mov    ecx,ebx
100002a5:	83 e6 03             	and    esi,0x3
100002a8:	c1 f9 06             	sar    ecx,0x6
100002ab:	83 e1 03             	and    ecx,0x3
100002ae:	81 fb bb bb bb 00    	cmp    ebx,0xbbbbbb
100002b4:	74 1b                	je     100002d1 <monoPixelLookup(int, int, int)+0x55>
100002b6:	8d 1c 32             	lea    ebx,[edx+esi*1]
100002b9:	8d 14 5a             	lea    edx,[edx+ebx*2]
100002bc:	5b                   	pop    ebx
100002bd:	01 d1                	add    ecx,edx
100002bf:	5e                   	pop    esi
100002c0:	ba 80 ea ff 00       	mov    edx,0xffea80
100002c5:	d3 ea                	shr    edx,cl
100002c7:	88 c1                	mov    cl,al
100002c9:	d3 ea                	shr    edx,cl
100002cb:	89 d0                	mov    eax,edx
100002cd:	83 e0 01             	and    eax,0x1
100002d0:	c3                   	ret    
100002d1:	b8 01 00 00 00       	mov    eax,0x1
100002d6:	5b                   	pop    ebx
100002d7:	5e                   	pop    esi
100002d8:	c3                   	ret    
100002d9:	90                   	nop

100002da <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)>:
100002da:	57                   	push   edi
100002db:	56                   	push   esi
100002dc:	53                   	push   ebx
100002dd:	83 ec 30             	sub    esp,0x30
100002e0:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
100002e4:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
100002e8:	8b 7c 24 48          	mov    edi,DWORD PTR [esp+0x48]
100002ec:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100002f0:	0f af be 58 01 00 00 	imul   edi,DWORD PTR [esi+0x158]
100002f7:	85 c9                	test   ecx,ecx
100002f9:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
100002fd:	0f 8e 18 02 00 00    	jle    1000051b <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x241>
10000303:	8b 5c 24 54          	mov    ebx,DWORD PTR [esp+0x54]
10000307:	85 db                	test   ebx,ebx
10000309:	0f 8e 0c 02 00 00    	jle    1000051b <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x241>
1000030f:	8d 3c 85 00 00 00 00 	lea    edi,[eax*4+0x0]
10000316:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
1000031a:	0f af 44 24 50       	imul   eax,DWORD PTR [esp+0x50]
1000031f:	03 4c 24 48          	add    ecx,DWORD PTR [esp+0x48]
10000323:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10000327:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
1000032b:	8d 04 82             	lea    eax,[edx+eax*4]
1000032e:	89 4c 24 28          	mov    DWORD PTR [esp+0x28],ecx
10000332:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10000336:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
1000033a:	c7 44 24 14 00 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
10000342:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000346:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
1000034a:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000034e:	eb 3f                	jmp    1000038f <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xb5>
10000350:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10000354:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10000358:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
1000035c:	8d 59 01             	lea    ebx,[ecx+0x1]
1000035f:	8b 00                	mov    eax,DWORD PTR [eax]
10000361:	8d 77 04             	lea    esi,[edi+0x4]
10000364:	ff 37                	push   DWORD PTR [edi]
10000366:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
1000036a:	51                   	push   ecx
1000036b:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
1000036f:	ff 50 24             	call   DWORD PTR [eax+0x24]
10000372:	ff 44 24 24          	inc    DWORD PTR [esp+0x24]
10000376:	83 c4 10             	add    esp,0x10
10000379:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000037d:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
10000381:	89 5c 24 18          	mov    DWORD PTR [esp+0x18],ebx
10000385:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
10000389:	0f 8e 64 01 00 00    	jle    100004f3 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x219>
1000038f:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000393:	2b 44 24 14          	sub    eax,DWORD PTR [esp+0x14]
10000397:	c1 f8 03             	sar    eax,0x3
1000039a:	74 b4                	je     10000350 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x76>
1000039c:	f6 44 24 18 07       	test   BYTE PTR [esp+0x18],0x7
100003a1:	75 ad                	jne    10000350 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x76>
100003a3:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100003a7:	83 f8 64             	cmp    eax,0x64
100003aa:	7e 08                	jle    100003b4 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xda>
100003ac:	c7 44 24 10 64 00 00 00 	mov    DWORD PTR [esp+0x10],0x64
100003b4:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100003b8:	8d 34 c5 00 00 00 00 	lea    esi,[eax*8+0x0]
100003bf:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100003c3:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
100003ca:	0f 84 52 01 00 00    	je     10000522 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x248>
100003d0:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100003d4:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
100003d8:	31 ff                	xor    edi,edi
100003da:	8d 1c 08             	lea    ebx,[eax+ecx*1]
100003dd:	83 44 24 0c 04       	add    DWORD PTR [esp+0xc],0x4
100003e2:	8d 04 3b             	lea    eax,[ebx+edi*1]
100003e5:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
100003e9:	47                   	inc    edi
100003ea:	ff 74 24 48          	push   DWORD PTR [esp+0x48]
100003ee:	50                   	push   eax
100003ef:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
100003f2:	e8 fc ff ff ff       	call   100003f3 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x119>	100003f3: R_386_PC32	monoPixelLookup(int, int, int)
100003f7:	83 c4 0c             	add    esp,0xc
100003fa:	88 87 df 11 00 10    	mov    BYTE PTR [edi+0x100011df],al	100003fc: R_386_32	.bss
10000400:	39 f7                	cmp    edi,esi
10000402:	7c d9                	jl     100003dd <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x103>
10000404:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
10000408:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000040c:	8b 91 64 01 00 00    	mov    edx,DWORD PTR [ecx+0x164]
10000412:	03 44 24 20          	add    eax,DWORD PTR [esp+0x20]
10000416:	31 c9                	xor    ecx,ecx
10000418:	c1 f8 03             	sar    eax,0x3
1000041b:	8d bc 10 00 00 00 c2 	lea    edi,[eax+edx*1-0x3e000000]
10000422:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10000426:	80 b8 61 01 00 00 01 	cmp    BYTE PTR [eax+0x161],0x1
1000042d:	19 c0                	sbb    eax,eax
1000042f:	83 e0 03             	and    eax,0x3
10000432:	40                   	inc    eax
10000433:	39 c1                	cmp    ecx,eax
10000435:	0f 8d 9b 00 00 00    	jge    100004d6 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x1fc>
1000043b:	51                   	push   ecx
1000043c:	be 01 00 00 00       	mov    esi,0x1
10000441:	89 4c 24 20          	mov    DWORD PTR [esp+0x20],ecx
10000445:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
10000449:	e8 fc ff ff ff       	call   1000044a <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x170>	1000044a: R_386_PC32	VGAVideo::setPlane(int)
1000044e:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10000452:	58                   	pop    eax
10000453:	d3 e6                	shl    esi,cl
10000455:	5a                   	pop    edx
10000456:	31 c0                	xor    eax,eax
10000458:	0f b6 14 c5 e0 11 00 10 	movzx  edx,BYTE PTR [eax*8+0x100011e0]	1000045c: R_386_32	.bss
10000460:	0f b6 1c c5 e1 11 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100011e1]	10000464: R_386_32	.bss
10000468:	21 f2                	and    edx,esi
1000046a:	21 f3                	and    ebx,esi
1000046c:	01 d2                	add    edx,edx
1000046e:	09 d3                	or     ebx,edx
10000470:	0f b6 14 c5 e2 11 00 10 	movzx  edx,BYTE PTR [eax*8+0x100011e2]	10000474: R_386_32	.bss
10000478:	01 db                	add    ebx,ebx
1000047a:	21 f2                	and    edx,esi
1000047c:	09 da                	or     edx,ebx
1000047e:	0f b6 1c c5 e3 11 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100011e3]	10000482: R_386_32	.bss
10000486:	01 d2                	add    edx,edx
10000488:	21 f3                	and    ebx,esi
1000048a:	09 d3                	or     ebx,edx
1000048c:	0f b6 14 c5 e4 11 00 10 	movzx  edx,BYTE PTR [eax*8+0x100011e4]	10000490: R_386_32	.bss
10000494:	01 db                	add    ebx,ebx
10000496:	21 f2                	and    edx,esi
10000498:	09 da                	or     edx,ebx
1000049a:	0f b6 1c c5 e5 11 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100011e5]	1000049e: R_386_32	.bss
100004a2:	01 d2                	add    edx,edx
100004a4:	21 f3                	and    ebx,esi
100004a6:	09 d3                	or     ebx,edx
100004a8:	0f b6 14 c5 e6 11 00 10 	movzx  edx,BYTE PTR [eax*8+0x100011e6]	100004ac: R_386_32	.bss
100004b0:	01 db                	add    ebx,ebx
100004b2:	21 f2                	and    edx,esi
100004b4:	09 da                	or     edx,ebx
100004b6:	0f b6 1c c5 e7 11 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100011e7]	100004ba: R_386_32	.bss
100004be:	01 d2                	add    edx,edx
100004c0:	21 f3                	and    ebx,esi
100004c2:	09 da                	or     edx,ebx
100004c4:	d3 ea                	shr    edx,cl
100004c6:	88 14 07             	mov    BYTE PTR [edi+eax*1],dl
100004c9:	40                   	inc    eax
100004ca:	39 44 24 10          	cmp    DWORD PTR [esp+0x10],eax
100004ce:	75 88                	jne    10000458 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x17e>
100004d0:	41                   	inc    ecx
100004d1:	e9 4c ff ff ff       	jmp    10000422 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x148>
100004d6:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100004da:	c1 e0 03             	shl    eax,0x3
100004dd:	01 44 24 14          	add    DWORD PTR [esp+0x14],eax
100004e1:	01 44 24 18          	add    DWORD PTR [esp+0x18],eax
100004e5:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100004e9:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
100004ed:	0f 8f 9c fe ff ff    	jg     1000038f <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xb5>
100004f3:	ff 44 24 48          	inc    DWORD PTR [esp+0x48]
100004f7:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
100004fb:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
100004ff:	8b bf 58 01 00 00    	mov    edi,DWORD PTR [edi+0x158]
10000505:	01 4c 24 24          	add    DWORD PTR [esp+0x24],ecx
10000509:	01 7c 24 20          	add    DWORD PTR [esp+0x20],edi
1000050d:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000511:	39 44 24 48          	cmp    DWORD PTR [esp+0x48],eax
10000515:	0f 85 1b fe ff ff    	jne    10000336 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x5c>
1000051b:	83 c4 30             	add    esp,0x30
1000051e:	5b                   	pop    ebx
1000051f:	5e                   	pop    esi
10000520:	5f                   	pop    edi
10000521:	c3                   	ret    
10000522:	31 c9                	xor    ecx,ecx
10000524:	83 44 24 0c 04       	add    DWORD PTR [esp+0xc],0x4
10000529:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000052d:	8b 40 fc             	mov    eax,DWORD PTR [eax-0x4]
10000530:	89 c3                	mov    ebx,eax
10000532:	89 c2                	mov    edx,eax
10000534:	c1 fb 15             	sar    ebx,0x15
10000537:	c1 fa 0a             	sar    edx,0xa
1000053a:	83 e3 07             	and    ebx,0x7
1000053d:	83 e2 38             	and    edx,0x38
10000540:	09 d3                	or     ebx,edx
10000542:	8d 14 00             	lea    edx,[eax+eax*1]
10000545:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10000549:	81 e2 c0 01 00 00    	and    edx,0x1c0
1000054f:	01 c8                	add    eax,ecx
10000551:	09 da                	or     edx,ebx
10000553:	83 e0 01             	and    eax,0x1
10000556:	41                   	inc    ecx
10000557:	8a 84 50 00 00 00 00 	mov    al,BYTE PTR [eax+edx*2+0x0]	1000055a: R_386_32	dither16Data
1000055e:	88 81 df 11 00 10    	mov    BYTE PTR [ecx+0x100011df],al	10000560: R_386_32	.bss
10000564:	39 f1                	cmp    ecx,esi
10000566:	7c bc                	jl     10000524 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x24a>
10000568:	e9 97 fe ff ff       	jmp    10000404 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x12a>
1000056d:	90                   	nop

1000056e <VGAVideo::putrect(int, int, int, int, unsigned int)>:
1000056e:	57                   	push   edi
1000056f:	56                   	push   esi
10000570:	53                   	push   ebx
10000571:	83 ec 40             	sub    esp,0x40
10000574:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000578:	8b 80 64 01 00 00    	mov    eax,DWORD PTR [eax+0x164]
1000057e:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000583:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000587:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
1000058b:	c1 f8 15             	sar    eax,0x15
1000058e:	83 e0 07             	and    eax,0x7
10000591:	89 c2                	mov    edx,eax
10000593:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10000597:	c1 f8 0a             	sar    eax,0xa
1000059a:	83 e0 38             	and    eax,0x38
1000059d:	09 d0                	or     eax,edx
1000059f:	8b 54 24 64          	mov    edx,DWORD PTR [esp+0x64]
100005a3:	01 d2                	add    edx,edx
100005a5:	81 e2 c0 01 00 00    	and    edx,0x1c0
100005ab:	09 d0                	or     eax,edx
100005ad:	0f b6 bc 00 00 00 00 00 	movzx  edi,BYTE PTR [eax+eax*1+0x0]	100005b1: R_386_32	dither16Data
100005b5:	0f b6 84 00 01 00 00 00 	movzx  eax,BYTE PTR [eax+eax*1+0x1]	100005b9: R_386_32	dither16Data
100005bd:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
100005c1:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100005c5:	8b 7c 24 60          	mov    edi,DWORD PTR [esp+0x60]
100005c9:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100005cd:	03 7c 24 58          	add    edi,DWORD PTR [esp+0x58]
100005d1:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
100005d5:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
100005d9:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
100005dd:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
100005e1:	0f 8d ad 00 00 00    	jge    10000694 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x126>
100005e7:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
100005eb:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
100005ef:	2b 7c 24 54          	sub    edi,DWORD PTR [esp+0x54]
100005f3:	8b 74 24 50          	mov    esi,DWORD PTR [esp+0x50]
100005f7:	89 7c 24 3c          	mov    DWORD PTR [esp+0x3c],edi
100005fb:	0f af 86 58 01 00 00 	imul   eax,DWORD PTR [esi+0x158]
10000602:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10000606:	c1 f8 03             	sar    eax,0x3
10000609:	c1 ff 03             	sar    edi,0x3
1000060c:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10000610:	89 7c 24 38          	mov    DWORD PTR [esp+0x38],edi
10000614:	74 11                	je     10000627 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xb9>
10000616:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000061a:	83 e0 07             	and    eax,0x7
1000061d:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000621:	0f 84 ff 01 00 00    	je     10000826 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2b8>
10000627:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
1000062b:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
1000062f:	a8 01                	test   al,0x1
10000631:	0f 84 da 01 00 00    	je     10000811 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2a3>
10000637:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000063b:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
1000063f:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000643:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000647:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
1000064b:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
10000652:	74 47                	je     1000069b <VGAVideo::putrect(int, int, int, int, unsigned int)+0x12d>
10000654:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000658:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
1000065c:	7d 24                	jge    10000682 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
1000065e:	8b 5c 24 58          	mov    ebx,DWORD PTR [esp+0x58]
10000662:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000666:	8b 00                	mov    eax,DWORD PTR [eax]
10000668:	ff 74 24 64          	push   DWORD PTR [esp+0x64]
1000066c:	53                   	push   ebx
1000066d:	43                   	inc    ebx
1000066e:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
10000672:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
10000676:	ff 50 24             	call   DWORD PTR [eax+0x24]
10000679:	83 c4 10             	add    esp,0x10
1000067c:	39 5c 24 0c          	cmp    DWORD PTR [esp+0xc],ebx
10000680:	75 e0                	jne    10000662 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xf4>
10000682:	ff 44 24 54          	inc    DWORD PTR [esp+0x54]
10000686:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
1000068a:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
1000068e:	0f 8f 53 ff ff ff    	jg     100005e7 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x79>
10000694:	83 c4 40             	add    esp,0x40
10000697:	5b                   	pop    ebx
10000698:	5e                   	pop    esi
10000699:	5f                   	pop    edi
1000069a:	c3                   	ret    
1000069b:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000069f:	c7 44 24 18 00 00 00 00 	mov    DWORD PTR [esp+0x18],0x0
100006a7:	f7 d0                	not    eax
100006a9:	83 e0 07             	and    eax,0x7
100006ac:	89 c7                	mov    edi,eax
100006ae:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100006b2:	89 f9                	mov    ecx,edi
100006b4:	b8 fe ff ff ff       	mov    eax,0xfffffffe
100006b9:	d3 c0                	rol    eax,cl
100006bb:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
100006bf:	83 ec 08             	sub    esp,0x8
100006c2:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100006c6:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
100006ca:	e8 fc ff ff ff       	call   100006cb <VGAVideo::putrect(int, int, int, int, unsigned int)+0x15d>	100006cb: R_386_PC32	VGAVideo::setPlane(int)
100006cf:	83 c4 10             	add    esp,0x10
100006d2:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100006d6:	39 7c 24 14          	cmp    DWORD PTR [esp+0x14],edi
100006da:	0f 84 c2 00 00 00    	je     100007a2 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x234>
100006e0:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
100006e4:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
100006e8:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100006ec:	d3 fe                	sar    esi,cl
100006ee:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
100006f2:	83 e6 01             	and    esi,0x1
100006f5:	d3 e6                	shl    esi,cl
100006f7:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
100006fb:	0f 8d aa 03 00 00    	jge    10000aab <VGAVideo::putrect(int, int, int, int, unsigned int)+0x53d>
10000701:	8a 44 24 28          	mov    al,BYTE PTR [esp+0x28]
10000705:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10000709:	89 c7                	mov    edi,eax
1000070b:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
1000070f:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000713:	83 c2 02             	add    edx,0x2
10000716:	8d 1c 08             	lea    ebx,[eax+ecx*1]
10000719:	89 f8                	mov    eax,edi
1000071b:	22 03                	and    al,BYTE PTR [ebx]
1000071d:	09 f0                	or     eax,esi
1000071f:	88 03                	mov    BYTE PTR [ebx],al
10000721:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000725:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
1000072b:	89 c3                	mov    ebx,eax
1000072d:	c1 fb 02             	sar    ebx,0x2
10000730:	01 d9                	add    ecx,ebx
10000732:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
10000736:	7f d7                	jg     1000070f <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1a1>
10000738:	c1 f8 03             	sar    eax,0x3
1000073b:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
1000073f:	03 44 24 24          	add    eax,DWORD PTR [esp+0x24]
10000743:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
10000747:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
1000074b:	d3 fe                	sar    esi,cl
1000074d:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
10000751:	83 e6 01             	and    esi,0x1
10000754:	d3 e6                	shl    esi,cl
10000756:	8d 4f 01             	lea    ecx,[edi+0x1]
10000759:	83 7c 24 60 01       	cmp    DWORD PTR [esp+0x60],0x1
1000075e:	7e 2c                	jle    1000078c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x21e>
10000760:	8a 5c 24 28          	mov    bl,BYTE PTR [esp+0x28]
10000764:	89 df                	mov    edi,ebx
10000766:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
1000076a:	89 fa                	mov    edx,edi
1000076c:	01 c3                	add    ebx,eax
1000076e:	83 c1 02             	add    ecx,0x2
10000771:	22 13                	and    dl,BYTE PTR [ebx]
10000773:	09 f2                	or     edx,esi
10000775:	88 13                	mov    BYTE PTR [ebx],dl
10000777:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
1000077b:	8b 93 58 01 00 00    	mov    edx,DWORD PTR [ebx+0x158]
10000781:	c1 fa 02             	sar    edx,0x2
10000784:	01 d0                	add    eax,edx
10000786:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
1000078a:	7f da                	jg     10000766 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1f8>
1000078c:	ff 44 24 18          	inc    DWORD PTR [esp+0x18]
10000790:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10000794:	83 f8 04             	cmp    eax,0x4
10000797:	0f 85 22 ff ff ff    	jne    100006bf <VGAVideo::putrect(int, int, int, int, unsigned int)+0x151>
1000079d:	e9 e0 fe ff ff       	jmp    10000682 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
100007a2:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
100007a6:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100007aa:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100007ae:	d3 f8                	sar    eax,cl
100007b0:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
100007b4:	83 e0 01             	and    eax,0x1
100007b7:	d3 e0                	shl    eax,cl
100007b9:	39 7c 24 58          	cmp    DWORD PTR [esp+0x58],edi
100007bd:	7d cd                	jge    1000078c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x21e>
100007bf:	89 c7                	mov    edi,eax
100007c1:	0f b6 74 24 28       	movzx  esi,BYTE PTR [esp+0x28]
100007c6:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
100007ca:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
100007ce:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100007d2:	42                   	inc    edx
100007d3:	8d 1c 08             	lea    ebx,[eax+ecx*1]
100007d6:	89 f0                	mov    eax,esi
100007d8:	22 03                	and    al,BYTE PTR [ebx]
100007da:	88 44 24 1c          	mov    BYTE PTR [esp+0x1c],al
100007de:	89 f8                	mov    eax,edi
100007e0:	0b 44 24 1c          	or     eax,DWORD PTR [esp+0x1c]
100007e4:	88 03                	mov    BYTE PTR [ebx],al
100007e6:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
100007ea:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
100007f0:	c1 f8 03             	sar    eax,0x3
100007f3:	01 c1                	add    ecx,eax
100007f5:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
100007f9:	75 d3                	jne    100007ce <VGAVideo::putrect(int, int, int, int, unsigned int)+0x260>
100007fb:	ff 44 24 18          	inc    DWORD PTR [esp+0x18]
100007ff:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10000803:	83 f8 04             	cmp    eax,0x4
10000806:	0f 85 b3 fe ff ff    	jne    100006bf <VGAVideo::putrect(int, int, int, int, unsigned int)+0x151>
1000080c:	e9 71 fe ff ff       	jmp    10000682 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
10000811:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000815:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000819:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000081d:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000821:	e9 21 fe ff ff       	jmp    10000647 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xd9>
10000826:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000082a:	83 e0 01             	and    eax,0x1
1000082d:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000831:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000835:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
10000839:	80 b8 61 01 00 00 01 	cmp    BYTE PTR [eax+0x161],0x1
10000840:	19 c0                	sbb    eax,eax
10000842:	83 e0 03             	and    eax,0x3
10000845:	40                   	inc    eax
10000846:	39 c7                	cmp    edi,eax
10000848:	0f 8d 33 02 00 00    	jge    10000a81 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x513>
1000084e:	57                   	push   edi
1000084f:	ff 74 24 54          	push   DWORD PTR [esp+0x54]
10000853:	e8 fc ff ff ff       	call   10000854 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2e6>	10000854: R_386_PC32	VGAVideo::setPlane(int)
10000858:	5a                   	pop    edx
10000859:	59                   	pop    ecx
1000085a:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
1000085e:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
10000865:	0f 84 59 01 00 00    	je     100009c4 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x456>
1000086b:	89 f9                	mov    ecx,edi
1000086d:	b8 01 00 00 00       	mov    eax,0x1
10000872:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10000876:	d3 e0                	shl    eax,cl
10000878:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000087c:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10000880:	01 c7                	add    edi,eax
10000882:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10000886:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
1000088a:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000088e:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10000892:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
10000896:	0f 8d 0d 01 00 00    	jge    100009a9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
1000089c:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100008a0:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
100008a4:	40                   	inc    eax
100008a5:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100008a9:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100008ad:	85 c0                	test   eax,eax
100008af:	0f 85 9e 00 00 00    	jne    10000953 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3e5>
100008b5:	eb 2a                	jmp    100008e1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x373>
100008b7:	85 c0                	test   eax,eax
100008b9:	b9 aa 00 00 00       	mov    ecx,0xaa
100008be:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100008c2:	74 6d                	je     10000931 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3c3>
100008c4:	88 0c 18             	mov    BYTE PTR [eax+ebx*1],cl
100008c7:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
100008cb:	46                   	inc    esi
100008cc:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
100008d2:	c1 f8 03             	sar    eax,0x3
100008d5:	01 c3                	add    ebx,eax
100008d7:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
100008db:	0f 84 c8 00 00 00    	je     100009a9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
100008e1:	56                   	push   esi
100008e2:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
100008e6:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
100008ea:	e8 fc ff ff ff       	call   100008eb <VGAVideo::putrect(int, int, int, int, unsigned int)+0x37d>	100008eb: R_386_PC32	monoPixelLookup(int, int, int)
100008ef:	83 c4 0c             	add    esp,0xc
100008f2:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100008f6:	56                   	push   esi
100008f7:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100008fb:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
100008ff:	e8 fc ff ff ff       	call   10000900 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x392>	10000900: R_386_PC32	monoPixelLookup(int, int, int)
10000904:	83 c4 0c             	add    esp,0xc
10000907:	89 c7                	mov    edi,eax
10000909:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
1000090d:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000911:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000915:	21 ca                	and    edx,ecx
10000917:	21 f9                	and    ecx,edi
10000919:	89 d0                	mov    eax,edx
1000091b:	89 ca                	mov    edx,ecx
1000091d:	74 98                	je     100008b7 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x349>
1000091f:	85 c0                	test   eax,eax
10000921:	b9 ff 00 00 00       	mov    ecx,0xff
10000926:	ba 55 00 00 00       	mov    edx,0x55
1000092b:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000092f:	75 93                	jne    100008c4 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x356>
10000931:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
10000934:	eb 91                	jmp    100008c7 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x359>
10000936:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000093a:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
1000093d:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000941:	46                   	inc    esi
10000942:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000948:	c1 f8 03             	sar    eax,0x3
1000094b:	01 c3                	add    ebx,eax
1000094d:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
10000951:	74 56                	je     100009a9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
10000953:	56                   	push   esi
10000954:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
10000958:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
1000095c:	e8 fc ff ff ff       	call   1000095d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3ef>	1000095d: R_386_PC32	monoPixelLookup(int, int, int)
10000961:	83 c4 0c             	add    esp,0xc
10000964:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000968:	56                   	push   esi
10000969:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
1000096d:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000971:	e8 fc ff ff ff       	call   10000972 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x404>	10000972: R_386_PC32	monoPixelLookup(int, int, int)
10000976:	83 c4 0c             	add    esp,0xc
10000979:	89 c7                	mov    edi,eax
1000097b:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
1000097f:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000983:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000987:	21 c8                	and    eax,ecx
10000989:	83 f8 01             	cmp    eax,0x1
1000098c:	19 d2                	sbb    edx,edx
1000098e:	f7 d2                	not    edx
10000990:	83 e2 55             	and    edx,0x55
10000993:	83 f8 01             	cmp    eax,0x1
10000996:	19 c0                	sbb    eax,eax
10000998:	83 e0 ab             	and    eax,0xffffffab
1000099b:	48                   	dec    eax
1000099c:	85 cf                	test   edi,ecx
1000099e:	74 96                	je     10000936 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3c8>
100009a0:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
100009a4:	88 04 1f             	mov    BYTE PTR [edi+ebx*1],al
100009a7:	eb 94                	jmp    1000093d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3cf>
100009a9:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
100009ad:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100009b1:	39 44 24 28          	cmp    DWORD PTR [esp+0x28],eax
100009b5:	0f 85 cf fe ff ff    	jne    1000088a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x31c>
100009bb:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
100009bf:	e9 6d fe ff ff       	jmp    10000831 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2c3>
100009c4:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100009c8:	8a 4c 24 2c          	mov    cl,BYTE PTR [esp+0x2c]
100009cc:	d3 f8                	sar    eax,cl
100009ce:	a8 01                	test   al,0x1
100009d0:	0f 84 92 00 00 00    	je     10000a68 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4fa>
100009d6:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100009da:	d3 f8                	sar    eax,cl
100009dc:	83 e0 01             	and    eax,0x1
100009df:	83 f8 01             	cmp    eax,0x1
100009e2:	19 ff                	sbb    edi,edi
100009e4:	89 f9                	mov    ecx,edi
100009e6:	89 f8                	mov    eax,edi
100009e8:	83 e1 56             	and    ecx,0x56
100009eb:	83 e0 ab             	and    eax,0xffffffab
100009ee:	49                   	dec    ecx
100009ef:	05 ff 00 00 00       	add    eax,0xff
100009f4:	88 4c 24 1c          	mov    BYTE PTR [esp+0x1c],cl
100009f8:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100009fc:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000a00:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
10000a04:	7d b5                	jge    100009bb <VGAVideo::putrect(int, int, int, int, unsigned int)+0x44d>
10000a06:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10000a0a:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10000a0e:	89 de                	mov    esi,ebx
10000a10:	01 df                	add    edi,ebx
10000a12:	8b 5c 24 54          	mov    ebx,DWORD PTR [esp+0x54]
10000a16:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10000a1a:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
10000a1e:	01 df                	add    edi,ebx
10000a20:	8d 1c 03             	lea    ebx,[ebx+eax*1]
10000a23:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
10000a27:	89 f2                	mov    edx,esi
10000a29:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000a2d:	eb 1b                	jmp    10000a4a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4dc>
10000a2f:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10000a33:	88 0c 17             	mov    BYTE PTR [edi+edx*1],cl
10000a36:	40                   	inc    eax
10000a37:	8b 7c 24 50          	mov    edi,DWORD PTR [esp+0x50]
10000a3b:	8b 8f 58 01 00 00    	mov    ecx,DWORD PTR [edi+0x158]
10000a41:	c1 f9 03             	sar    ecx,0x3
10000a44:	01 ca                	add    edx,ecx
10000a46:	39 c3                	cmp    ebx,eax
10000a48:	74 0e                	je     10000a58 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4ea>
10000a4a:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10000a4e:	a8 01                	test   al,0x1
10000a50:	74 dd                	je     10000a2f <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4c1>
10000a52:	8a 4c 24 1c          	mov    cl,BYTE PTR [esp+0x1c]
10000a56:	eb db                	jmp    10000a33 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4c5>
10000a58:	46                   	inc    esi
10000a59:	39 74 24 20          	cmp    DWORD PTR [esp+0x20],esi
10000a5d:	75 c8                	jne    10000a27 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4b9>
10000a5f:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10000a63:	e9 c9 fd ff ff       	jmp    10000831 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2c3>
10000a68:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000a6c:	d3 fe                	sar    esi,cl
10000a6e:	83 e6 01             	and    esi,0x1
10000a71:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
10000a75:	75 43                	jne    10000aba <VGAVideo::putrect(int, int, int, int, unsigned int)+0x54c>
10000a77:	c6 44 24 1c 00       	mov    BYTE PTR [esp+0x1c],0x0
10000a7c:	e9 7b ff ff ff       	jmp    100009fc <VGAVideo::putrect(int, int, int, int, unsigned int)+0x48e>
10000a81:	8b 7c 24 54          	mov    edi,DWORD PTR [esp+0x54]
10000a85:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10000a89:	83 e0 f8             	and    eax,0xfffffff8
10000a8c:	8d 44 07 ff          	lea    eax,[edi+eax*1-0x1]
10000a90:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10000a94:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10000a98:	ff 44 24 54          	inc    DWORD PTR [esp+0x54]
10000a9c:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10000aa0:	0f 8f 41 fb ff ff    	jg     100005e7 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x79>
10000aa6:	e9 e9 fb ff ff       	jmp    10000694 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x126>
10000aab:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000aaf:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000ab5:	e9 7e fc ff ff       	jmp    10000738 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1ca>
10000aba:	c6 44 24 1c aa       	mov    BYTE PTR [esp+0x1c],0xaa
10000abf:	c7 44 24 18 55 00 00 00 	mov    DWORD PTR [esp+0x18],0x55
10000ac7:	e9 30 ff ff ff       	jmp    100009fc <VGAVideo::putrect(int, int, int, int, unsigned int)+0x48e>

10000acc <VGAVideo::putpixel(int, int, unsigned int)>:
10000acc:	57                   	push   edi
10000acd:	56                   	push   esi
10000ace:	53                   	push   ebx
10000acf:	83 ec 0c             	sub    esp,0xc
10000ad2:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
10000ad6:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10000ada:	8b 8e 64 01 00 00    	mov    ecx,DWORD PTR [esi+0x164]
10000ae0:	89 da                	mov    edx,ebx
10000ae2:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
10000ae6:	f7 d2                	not    edx
10000ae8:	0f af be 58 01 00 00 	imul   edi,DWORD PTR [esi+0x158]
10000aef:	83 e2 07             	and    edx,0x7
10000af2:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000af6:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
10000afa:	89 fa                	mov    edx,edi
10000afc:	01 da                	add    edx,ebx
10000afe:	c1 fa 03             	sar    edx,0x3
10000b01:	8d bc 11 00 00 00 c2 	lea    edi,[ecx+edx*1-0x3e000000]
10000b08:	ba fe ff ff ff       	mov    edx,0xfffffffe
10000b0d:	8a 4c 24 04          	mov    cl,BYTE PTR [esp+0x4]
10000b11:	d3 c2                	rol    edx,cl
10000b13:	80 be 61 01 00 00 00 	cmp    BYTE PTR [esi+0x161],0x0
10000b1a:	88 54 24 0b          	mov    BYTE PTR [esp+0xb],dl
10000b1e:	75 62                	jne    10000b82 <VGAVideo::putpixel(int, int, unsigned int)+0xb6>
10000b20:	89 c1                	mov    ecx,eax
10000b22:	89 c2                	mov    edx,eax
10000b24:	c1 f9 15             	sar    ecx,0x15
10000b27:	c1 fa 0a             	sar    edx,0xa
10000b2a:	83 e1 07             	and    ecx,0x7
10000b2d:	83 e2 38             	and    edx,0x38
10000b30:	03 5c 24 24          	add    ebx,DWORD PTR [esp+0x24]
10000b34:	09 ca                	or     edx,ecx
10000b36:	83 e3 01             	and    ebx,0x1
10000b39:	8d 0c 00             	lea    ecx,[eax+eax*1]
10000b3c:	81 e1 c0 01 00 00    	and    ecx,0x1c0
10000b42:	09 ca                	or     edx,ecx
10000b44:	0f b6 84 53 00 00 00 00 	movzx  eax,BYTE PTR [ebx+edx*2+0x0]	10000b48: R_386_32	dither16Data
10000b4c:	31 db                	xor    ebx,ebx
10000b4e:	89 04 24             	mov    DWORD PTR [esp],eax
10000b51:	53                   	push   ebx
10000b52:	43                   	inc    ebx
10000b53:	56                   	push   esi
10000b54:	e8 fc ff ff ff       	call   10000b55 <VGAVideo::putpixel(int, int, unsigned int)+0x89>	10000b55: R_386_PC32	VGAVideo::setPlane(int)
10000b59:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000b5d:	8a 44 24 13          	mov    al,BYTE PTR [esp+0x13]
10000b61:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10000b65:	22 07                	and    al,BYTE PTR [edi]
10000b67:	d1 7c 24 08          	sar    DWORD PTR [esp+0x8],1
10000b6b:	83 e2 01             	and    edx,0x1
10000b6e:	d3 e2                	shl    edx,cl
10000b70:	09 d0                	or     eax,edx
10000b72:	83 fb 04             	cmp    ebx,0x4
10000b75:	88 07                	mov    BYTE PTR [edi],al
10000b77:	58                   	pop    eax
10000b78:	5a                   	pop    edx
10000b79:	75 d6                	jne    10000b51 <VGAVideo::putpixel(int, int, unsigned int)+0x85>
10000b7b:	83 c4 0c             	add    esp,0xc
10000b7e:	5b                   	pop    ebx
10000b7f:	5e                   	pop    esi
10000b80:	5f                   	pop    edi
10000b81:	c3                   	ret    
10000b82:	89 14 24             	mov    DWORD PTR [esp],edx
10000b85:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10000b89:	53                   	push   ebx
10000b8a:	50                   	push   eax
10000b8b:	e8 fc ff ff ff       	call   10000b8c <VGAVideo::putpixel(int, int, unsigned int)+0xc0>	10000b8c: R_386_PC32	monoPixelLookup(int, int, int)
10000b90:	83 c4 0c             	add    esp,0xc
10000b93:	89 c3                	mov    ebx,eax
10000b95:	6a 00                	push   0x0
10000b97:	83 e3 01             	and    ebx,0x1
10000b9a:	56                   	push   esi
10000b9b:	e8 fc ff ff ff       	call   10000b9c <VGAVideo::putpixel(int, int, unsigned int)+0xd0>	10000b9c: R_386_PC32	VGAVideo::setPlane(int)
10000ba0:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000ba4:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10000ba8:	22 17                	and    dl,BYTE PTR [edi]
10000baa:	d3 e3                	shl    ebx,cl
10000bac:	09 da                	or     edx,ebx
10000bae:	88 17                	mov    BYTE PTR [edi],dl
10000bb0:	59                   	pop    ecx
10000bb1:	5b                   	pop    ebx
10000bb2:	83 c4 0c             	add    esp,0xc
10000bb5:	5b                   	pop    ebx
10000bb6:	5e                   	pop    esi
10000bb7:	5f                   	pop    edi
10000bb8:	c3                   	ret    
10000bb9:	90                   	nop

10000bba <VGAVideo::~VGAVideo()>:
10000bba:	55                   	push   ebp
10000bbb:	89 e5                	mov    ebp,esp
10000bbd:	83 ec 08             	sub    esp,0x8
10000bc0:	ba 08 00 00 00       	mov    edx,0x8	10000bc1: R_386_32	vtable for VGAVideo
10000bc5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000bc8:	89 10                	mov    DWORD PTR [eax],edx
10000bca:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000bcd:	83 ec 0c             	sub    esp,0xc
10000bd0:	50                   	push   eax
10000bd1:	e8 fc ff ff ff       	call   10000bd2 <VGAVideo::~VGAVideo()+0x18>	10000bd2: R_386_PC32	Video::~Video()
10000bd6:	83 c4 10             	add    esp,0x10
10000bd9:	90                   	nop
10000bda:	c9                   	leave  
10000bdb:	c3                   	ret    

10000bdc <VGAVideo::~VGAVideo()>:
10000bdc:	55                   	push   ebp
10000bdd:	89 e5                	mov    ebp,esp
10000bdf:	83 ec 08             	sub    esp,0x8
10000be2:	83 ec 0c             	sub    esp,0xc
10000be5:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000be8:	e8 fc ff ff ff       	call   10000be9 <VGAVideo::~VGAVideo()+0xd>	10000be9: R_386_PC32	VGAVideo::~VGAVideo()
10000bed:	83 c4 10             	add    esp,0x10
10000bf0:	83 ec 08             	sub    esp,0x8
10000bf3:	68 6c 01 00 00       	push   0x16c
10000bf8:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000bfb:	e8 fc ff ff ff       	call   10000bfc <VGAVideo::~VGAVideo()+0x20>	10000bfc: R_386_PC32	operator delete(void*, unsigned long)
10000c00:	83 c4 10             	add    esp,0x10
10000c03:	c9                   	leave  
10000c04:	c3                   	ret    
10000c05:	66 90                	xchg   ax,ax
10000c07:	90                   	nop

10000c08 <PHYS_RAM_TABLE_SIZE>:
10000c08:	13 05 00 00                                         ....

10000c0c <PHYS_HIGHEST_UNUSED_ADDRESS>:
10000c0c:	24 05 00 00                                         $...

10000c10 <PHYS_RAM_TABLE>:
10000c10:	00 06 00 00                                         ....

10000c14 <PHYS_DMA_MEMORY_1>:
10000c14:	00 00 01 00                                         ....

10000c18 <PHYS_PHYS_PAGE_BITMAP>:
10000c18:	00 00 02 00                                         ....

10000c1c <PHYS_VIRT_PAGE_BITMAP>:
10000c1c:	00 00 04 00                                         ....

10000c20 <PHYS_DMA_MEMORY_2>:
10000c20:	00 00 06 00                                         ....

10000c24 <PHYS_ALLOCED_VIRT_PAGES>:
10000c24:	00 00 10 00                                         ....

10000c28 <PHYS_KRNL_PAGE_DIRECTORY>:
10000c28:	00 10 00 00                                         ....

10000c2c <VIRT_KERNEL_BASE>:
10000c2c:	00 00 00 c0                                         ....

10000c30 <VIRT_LOW_MEGS>:
10000c30:	00 00 00 c2                                         ....

10000c34 <VIRT_CPU_SPECIFIC>:
10000c34:	00 00 40 c2                                         ..@.

10000c38 <VIRT_RECURSIVE_SPOT_1>:
10000c38:	00 00 80 c2                                         ....

10000c3c <VIRT_RECURSIVE_SPOT_2>:
10000c3c:	00 00 c0 c2                                         ....

10000c40 <VIRT_DMA_MEMORY_1>:
10000c40:	00 00 01 c2                                         ....

10000c44 <SIZE_DMA_MEMORY_1>:
10000c44:	00 00 01 00                                         ....

10000c48 <VIRT_DMA_MEMORY_2>:
10000c48:	00 00 06 c2                                         ....

10000c4c <SIZE_DMA_MEMORY_2>:
10000c4c:	00 00 02 00                                         ....

10000c50 <VIRT_KRNL_PAGE_DIRECTORY>:
10000c50:	00 10 00 c2                                         ....

10000c54 <VIRT_PHYS_PAGE_BITMAP>:
10000c54:	00 00 02 c2                                         ....

10000c58 <SIZE_PHYS_PAGE_BITMAP>:
10000c58:	00 00 02 00                                         ....

10000c5c <VIRT_VIRT_PAGE_BITMAP>:
10000c5c:	00 00 04 c2                                         ....

10000c60 <SIZE_VIRT_PAGE_BITMAP>:
10000c60:	00 80 00 00                                         ....

10000c64 <VIRT_RAM_TABLE>:
10000c64:	00 06 00 c2                                         ....

10000c68 <VIRT_RAM_TABLE_SIZE>:
10000c68:	13 05 00 c2                                         ....

10000c6c <VIRT_HIGHEST_UNUSED_ADDRESS>:
10000c6c:	24 05 00 c2                                         $...

10000c70 <SIZE_APP_STACK_USER>:
10000c70:	00 00 18 00                                         ....

10000c74 <SIZE_APP_STACK_KRNL>:
10000c74:	00 00 08 00                                         ....

10000c78 <SIZE_APP_STACK_TOTAL>:
10000c78:	00 00 20 00                                         .. .

10000c7c <VIRT_APP_DATA>:
10000c7c:	00 00 00 10                                         ....

10000c80 <VIRT_APP_STACK_USER_TOP>:
10000c80:	00 00 00 02                                         ....

10000c84 <VIRT_APP_STACK_KRNL_TOP>:
10000c84:	00 00 e8 01                                         ....

10000c88 <VIRT_HEAP_MIN>:
10000c88:	00 00 00 c8                                         ....

10000c8c <VIRT_HEAP_MAX>:
10000c8c:	ff ff ff ef                                         ....

10000c90 <VIRT_SBRK_MIN>:
10000c90:	00 00 00 f0                                         ....

10000c94 <VIRT_SBRK_MAX>:
10000c94:	00 00 c0 ff                                         ....

10000c98 <VIRT_ALLOCED_VIRT_PAGES>:
10000c98:	00 00 10 c2                                         ....

10000c9c <VIRT_ACPI_DRIVER>:
10000c9c:	00 40 48 c2                                         .@H.

10000ca0 <TERMINAL_KEYBUFFER_IN_SIZE>:
10000ca0:	96 00 00 00                                         ....

10000ca4 <TERMINAL_KEYBUFFER_OUT_SIZE>:
10000ca4:	2c 01 00 00 56 47 41 20 44 69 73 70 6c 61 79 00     ,...VGA Display.
10000cb4:	43 3a 2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d     C:/Banana/System
10000cc4:	2f 56 47 41 2e 43 4f 4d 00 53 65 74 20 74 6f 20     /VGA.COM.Set to 
10000cd4:	76 69 64 65 6f 20 6d 6f 64 65 20 25 64 0a 00 90     video mode %d...

10000ce4 <vtable for VGAVideo>:
	...
	10000cec: R_386_32	VGAVideo::~VGAVideo()
	10000cf0: R_386_32	VGAVideo::~VGAVideo()
	10000cf4: R_386_32	VGAVideo::open(int, int, void*)
	10000cf8: R_386_32	VGAVideo::close(int, int, void*)
	10000cfc: R_386_32	Device::hibernate()
	10000d00: R_386_32	Device::wake()
	10000d04: R_386_32	Device::detect()
	10000d08: R_386_32	Device::disableLegacy()
	10000d0c: R_386_32	Device::powerSaving(PowerSavingLevel)
	10000d10: R_386_32	VGAVideo::putpixel(int, int, unsigned int)
	10000d14: R_386_32	VGAVideo::putrect(int, int, int, int, unsigned int)
	10000d18: R_386_32	Video::putTGA(int, int, unsigned char*, int)
	10000d1c: R_386_32	Video::drawCursor(int, int, unsigned char*, int)
	10000d20: R_386_32	VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)
	10000d24: R_386_32	Video::blit(unsigned int*, int, int, int, int)
	10000d28: R_386_32	Video::clearScreen(unsigned int)
