
packages/banana/32/0002/vga.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	53                   	push   ebx
10000004:	83 ec 14             	sub    esp,0x14
10000007:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000000a:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
1000000d:	c7 45 ec 64 01 00 00 	mov    DWORD PTR [ebp-0x14],0x164
10000014:	83 ec 0c             	sub    esp,0xc
10000017:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
1000001a:	e8 fc ff ff ff       	call   1000001b <start(void*)+0x1b>	1000001b: R_386_PC32	malloc
1000001f:	83 c4 10             	add    esp,0x10
10000022:	89 c3                	mov    ebx,eax
10000024:	83 ec 0c             	sub    esp,0xc
10000027:	53                   	push   ebx
10000028:	e8 fc ff ff ff       	call   10000029 <start(void*)+0x29>	10000029: R_386_PC32	VGAVideo::VGAVideo()
1000002d:	83 c4 10             	add    esp,0x10
10000030:	89 5d f0             	mov    DWORD PTR [ebp-0x10],ebx
10000033:	83 ec 08             	sub    esp,0x8
10000036:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000039:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000003c:	e8 fc ff ff ff       	call   1000003d <start(void*)+0x3d>	1000003d: R_386_PC32	Device::addChild(Device*)
10000041:	83 c4 10             	add    esp,0x10
10000044:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000047:	8b 00                	mov    eax,DWORD PTR [eax]
10000049:	83 c0 08             	add    eax,0x8
1000004c:	8b 00                	mov    eax,DWORD PTR [eax]
1000004e:	6a 00                	push   0x0
10000050:	6a 00                	push   0x0
10000052:	6a 00                	push   0x0
10000054:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000057:	ff d0                	call   eax
10000059:	83 c4 10             	add    esp,0x10
1000005c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000005f:	a3 00 00 00 00       	mov    ds:0x0,eax	10000060: R_386_32	screen
10000064:	90                   	nop
10000065:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000068:	c9                   	leave  
10000069:	c3                   	ret    

1000006a <VGAVideo::setPlane(int)>:
1000006a:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000006e:	39 0d e0 0b 00 10    	cmp    DWORD PTR ds:0x10000be0,ecx	10000070: R_386_32	.data
10000074:	74 2b                	je     100000a1 <VGAVideo::setPlane(int)+0x37>
10000076:	89 0d e0 0b 00 10    	mov    DWORD PTR ds:0x10000be0,ecx	10000078: R_386_32	.data
1000007c:	b0 04                	mov    al,0x4
1000007e:	ba ce 03 00 00       	mov    edx,0x3ce
10000083:	ee                   	out    dx,al
10000084:	ba cf 03 00 00       	mov    edx,0x3cf
10000089:	88 c8                	mov    al,cl
1000008b:	ee                   	out    dx,al
1000008c:	b0 02                	mov    al,0x2
1000008e:	ba c4 03 00 00       	mov    edx,0x3c4
10000093:	ee                   	out    dx,al
10000094:	b8 01 00 00 00       	mov    eax,0x1
10000099:	ba c5 03 00 00       	mov    edx,0x3c5
1000009e:	d3 e0                	shl    eax,cl
100000a0:	ee                   	out    dx,al
100000a1:	c3                   	ret    

100000a2 <VGAVideo::VGAVideo()>:
100000a2:	55                   	push   ebp
100000a3:	89 e5                	mov    ebp,esp
100000a5:	83 ec 08             	sub    esp,0x8
100000a8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000ab:	83 ec 08             	sub    esp,0x8
100000ae:	68 48 0b 00 10       	push   0x10000b48	100000af: R_386_32	.text
100000b3:	50                   	push   eax
100000b4:	e8 fc ff ff ff       	call   100000b5 <VGAVideo::VGAVideo()+0x13>	100000b5: R_386_PC32	Video::Video(char const*)
100000b9:	83 c4 10             	add    esp,0x10
100000bc:	ba 08 00 00 00       	mov    edx,0x8	100000bd: R_386_32	vtable for VGAVideo
100000c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c4:	89 10                	mov    DWORD PTR [eax],edx
100000c6:	90                   	nop
100000c7:	c9                   	leave  
100000c8:	c3                   	ret    
100000c9:	90                   	nop

100000ca <VGAVideo::close(int, int, void*)>:
100000ca:	31 c0                	xor    eax,eax
100000cc:	c3                   	ret    

100000cd <get_bios_area_video_type()>:
100000cd:	a1 10 04 00 00       	mov    eax,ds:0x410
100000d2:	83 e0 30             	and    eax,0x30
100000d5:	c3                   	ret    

100000d6 <VGAVideo::open(int, int, void*)>:
100000d6:	57                   	push   edi
100000d7:	53                   	push   ebx
100000d8:	83 ec 20             	sub    esp,0x20
100000db:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
100000df:	c6 83 61 01 00 00 01 	mov    BYTE PTR [ebx+0x161],0x1
100000e6:	6a 11                	push   0x11
100000e8:	6a 11                	push   0x11
100000ea:	68 90 00 00 00       	push   0x90
100000ef:	6a 00                	push   0x0
100000f1:	68 54 0b 00 10       	push   0x10000b54	100000f2: R_386_32	.text
100000f6:	e8 fc ff ff ff       	call   100000f7 <VGAVideo::open(int, int, void*)+0x21>	100000f7: R_386_PC32	Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
100000fb:	83 c4 20             	add    esp,0x20
100000fe:	e8 fc ff ff ff       	call   100000ff <VGAVideo::open(int, int, void*)+0x29>	100000ff: R_386_PC32	Vm::finish8086()
10000103:	80 bb 61 01 00 00 01 	cmp    BYTE PTR [ebx+0x161],0x1
1000010a:	19 c0                	sbb    eax,eax
1000010c:	83 ec 08             	sub    esp,0x8
1000010f:	f7 d0                	not    eax
10000111:	83 c0 12             	add    eax,0x12
10000114:	50                   	push   eax
10000115:	68 70 0b 00 10       	push   0x10000b70	10000116: R_386_32	.text
1000011a:	e8 fc ff ff ff       	call   1000011b <VGAVideo::open(int, int, void*)+0x45>	1000011b: R_386_PC32	Dbg::kprintf(char const*, ...)
1000011f:	c7 44 24 1c 00 00 0a c2 	mov    DWORD PTR [esp+0x1c],0xc20a0000
10000127:	58                   	pop    eax
10000128:	5a                   	pop    edx
10000129:	6a 00                	push   0x0
1000012b:	53                   	push   ebx
1000012c:	e8 fc ff ff ff       	call   1000012d <VGAVideo::open(int, int, void*)+0x57>	1000012d: R_386_PC32	VGAVideo::setPlane(int)
10000131:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000135:	31 c0                	xor    eax,eax
10000137:	b9 80 25 00 00       	mov    ecx,0x2580
1000013c:	89 d7                	mov    edi,edx
1000013e:	83 c4 10             	add    esp,0x10
10000141:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10000143:	80 bb 61 01 00 00 00 	cmp    BYTE PTR [ebx+0x161],0x0
1000014a:	74 1c                	je     10000168 <VGAVideo::open(int, int, void*)+0x92>
1000014c:	c7 83 58 01 00 00 80 02 00 00 	mov    DWORD PTR [ebx+0x158],0x280
10000156:	c7 83 5c 01 00 00 e0 01 00 00 	mov    DWORD PTR [ebx+0x15c],0x1e0
10000160:	31 c0                	xor    eax,eax
10000162:	83 c4 14             	add    esp,0x14
10000165:	5b                   	pop    ebx
10000166:	5f                   	pop    edi
10000167:	c3                   	ret    
10000168:	83 ec 08             	sub    esp,0x8
1000016b:	6a 01                	push   0x1
1000016d:	53                   	push   ebx
1000016e:	e8 fc ff ff ff       	call   1000016f <VGAVideo::open(int, int, void*)+0x99>	1000016f: R_386_PC32	VGAVideo::setPlane(int)
10000173:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000177:	31 c0                	xor    eax,eax
10000179:	89 d7                	mov    edi,edx
1000017b:	b9 80 25 00 00       	mov    ecx,0x2580
10000180:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10000182:	58                   	pop    eax
10000183:	5a                   	pop    edx
10000184:	6a 02                	push   0x2
10000186:	53                   	push   ebx
10000187:	e8 fc ff ff ff       	call   10000188 <VGAVideo::open(int, int, void*)+0xb2>	10000188: R_386_PC32	VGAVideo::setPlane(int)
1000018c:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000190:	31 c0                	xor    eax,eax
10000192:	89 d7                	mov    edi,edx
10000194:	b9 80 25 00 00       	mov    ecx,0x2580
10000199:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000019b:	59                   	pop    ecx
1000019c:	5f                   	pop    edi
1000019d:	6a 03                	push   0x3
1000019f:	53                   	push   ebx
100001a0:	e8 fc ff ff ff       	call   100001a1 <VGAVideo::open(int, int, void*)+0xcb>	100001a1: R_386_PC32	VGAVideo::setPlane(int)
100001a5:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100001a9:	b9 80 25 00 00       	mov    ecx,0x2580
100001ae:	89 d7                	mov    edi,edx
100001b0:	31 c0                	xor    eax,eax
100001b2:	83 c4 10             	add    esp,0x10
100001b5:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100001b7:	eb 93                	jmp    1000014c <VGAVideo::open(int, int, void*)+0x76>

100001b9 <monoPixelLookup(int, int, int)>:
100001b9:	56                   	push   esi
100001ba:	53                   	push   ebx
100001bb:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
100001bf:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100001c3:	89 f0                	mov    eax,esi
100001c5:	89 f1                	mov    ecx,esi
100001c7:	c1 f8 06             	sar    eax,0x6
100001ca:	c1 fe 16             	sar    esi,0x16
100001cd:	83 e0 03             	and    eax,0x3
100001d0:	c1 f9 0e             	sar    ecx,0xe
100001d3:	83 e1 03             	and    ecx,0x3
100001d6:	8d 04 08             	lea    eax,[eax+ecx*1]
100001d9:	89 f1                	mov    ecx,esi
100001db:	83 e1 03             	and    ecx,0x3
100001de:	01 c1                	add    ecx,eax
100001e0:	b8 80 ea ff 00       	mov    eax,0xffea80
100001e5:	d1 f9                	sar    ecx,1
100001e7:	c1 e1 02             	shl    ecx,0x2
100001ea:	d3 e8                	shr    eax,cl
100001ec:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
100001f0:	5b                   	pop    ebx
100001f1:	01 d1                	add    ecx,edx
100001f3:	5e                   	pop    esi
100001f4:	83 e1 01             	and    ecx,0x1
100001f7:	01 d2                	add    edx,edx
100001f9:	83 e2 02             	and    edx,0x2
100001fc:	09 d1                	or     ecx,edx
100001fe:	d3 e8                	shr    eax,cl
10000200:	83 e0 01             	and    eax,0x1
10000203:	f7 d8                	neg    eax
10000205:	83 e0 0f             	and    eax,0xf
10000208:	c3                   	ret    
10000209:	90                   	nop

1000020a <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)>:
1000020a:	57                   	push   edi
1000020b:	56                   	push   esi
1000020c:	53                   	push   ebx
1000020d:	83 ec 30             	sub    esp,0x30
10000210:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10000214:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
10000218:	8b 7c 24 48          	mov    edi,DWORD PTR [esp+0x48]
1000021c:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10000220:	0f af be 58 01 00 00 	imul   edi,DWORD PTR [esi+0x158]
10000227:	85 c9                	test   ecx,ecx
10000229:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
1000022d:	0f 8e 0d 02 00 00    	jle    10000440 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x236>
10000233:	8b 5c 24 54          	mov    ebx,DWORD PTR [esp+0x54]
10000237:	85 db                	test   ebx,ebx
10000239:	0f 8e 01 02 00 00    	jle    10000440 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x236>
1000023f:	8d 3c 85 00 00 00 00 	lea    edi,[eax*4+0x0]
10000246:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
1000024a:	0f af 44 24 50       	imul   eax,DWORD PTR [esp+0x50]
1000024f:	03 4c 24 48          	add    ecx,DWORD PTR [esp+0x48]
10000253:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10000257:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
1000025b:	8d 04 82             	lea    eax,[edx+eax*4]
1000025e:	89 4c 24 28          	mov    DWORD PTR [esp+0x28],ecx
10000262:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10000266:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
1000026a:	c7 44 24 14 00 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
10000272:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000276:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
1000027a:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000027e:	eb 3f                	jmp    100002bf <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xb5>
10000280:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10000284:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10000288:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
1000028c:	8d 59 01             	lea    ebx,[ecx+0x1]
1000028f:	8b 00                	mov    eax,DWORD PTR [eax]
10000291:	8d 77 04             	lea    esi,[edi+0x4]
10000294:	ff 37                	push   DWORD PTR [edi]
10000296:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
1000029a:	51                   	push   ecx
1000029b:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
1000029f:	ff 50 24             	call   DWORD PTR [eax+0x24]
100002a2:	ff 44 24 24          	inc    DWORD PTR [esp+0x24]
100002a6:	83 c4 10             	add    esp,0x10
100002a9:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100002ad:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
100002b1:	89 5c 24 18          	mov    DWORD PTR [esp+0x18],ebx
100002b5:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
100002b9:	0f 8e 59 01 00 00    	jle    10000418 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x20e>
100002bf:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100002c3:	2b 44 24 14          	sub    eax,DWORD PTR [esp+0x14]
100002c7:	c1 f8 03             	sar    eax,0x3
100002ca:	74 b4                	je     10000280 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x76>
100002cc:	f6 44 24 18 07       	test   BYTE PTR [esp+0x18],0x7
100002d1:	75 ad                	jne    10000280 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x76>
100002d3:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100002d7:	83 f8 64             	cmp    eax,0x64
100002da:	7e 08                	jle    100002e4 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xda>
100002dc:	c7 44 24 10 64 00 00 00 	mov    DWORD PTR [esp+0x10],0x64
100002e4:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100002e8:	8d 34 c5 00 00 00 00 	lea    esi,[eax*8+0x0]
100002ef:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100002f3:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
100002fa:	0f 84 47 01 00 00    	je     10000447 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x23d>
10000300:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000304:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10000308:	31 ff                	xor    edi,edi
1000030a:	8d 1c 08             	lea    ebx,[eax+ecx*1]
1000030d:	83 44 24 0c 04       	add    DWORD PTR [esp+0xc],0x4
10000312:	8d 04 3b             	lea    eax,[ebx+edi*1]
10000315:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
10000319:	47                   	inc    edi
1000031a:	ff 74 24 48          	push   DWORD PTR [esp+0x48]
1000031e:	50                   	push   eax
1000031f:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
10000322:	e8 fc ff ff ff       	call   10000323 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x119>	10000323: R_386_PC32	monoPixelLookup(int, int, int)
10000327:	83 c4 0c             	add    esp,0xc
1000032a:	88 87 7f 10 00 10    	mov    BYTE PTR [edi+0x1000107f],al	1000032c: R_386_32	.bss
10000330:	39 f7                	cmp    edi,esi
10000332:	7c d9                	jl     1000030d <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x103>
10000334:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
10000338:	31 c9                	xor    ecx,ecx
1000033a:	03 7c 24 20          	add    edi,DWORD PTR [esp+0x20]
1000033e:	c1 ff 03             	sar    edi,0x3
10000341:	81 ef 00 00 f6 3d    	sub    edi,0x3df60000
10000347:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
1000034b:	80 b8 61 01 00 00 01 	cmp    BYTE PTR [eax+0x161],0x1
10000352:	19 c0                	sbb    eax,eax
10000354:	83 e0 03             	and    eax,0x3
10000357:	40                   	inc    eax
10000358:	39 c1                	cmp    ecx,eax
1000035a:	0f 8d 9b 00 00 00    	jge    100003fb <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x1f1>
10000360:	51                   	push   ecx
10000361:	be 01 00 00 00       	mov    esi,0x1
10000366:	89 4c 24 20          	mov    DWORD PTR [esp+0x20],ecx
1000036a:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
1000036e:	e8 fc ff ff ff       	call   1000036f <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x165>	1000036f: R_386_PC32	VGAVideo::setPlane(int)
10000373:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10000377:	58                   	pop    eax
10000378:	d3 e6                	shl    esi,cl
1000037a:	5a                   	pop    edx
1000037b:	31 c0                	xor    eax,eax
1000037d:	0f b6 14 c5 80 10 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001080]	10000381: R_386_32	.bss
10000385:	0f b6 1c c5 81 10 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001081]	10000389: R_386_32	.bss
1000038d:	21 f2                	and    edx,esi
1000038f:	21 f3                	and    ebx,esi
10000391:	01 d2                	add    edx,edx
10000393:	09 d3                	or     ebx,edx
10000395:	0f b6 14 c5 82 10 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001082]	10000399: R_386_32	.bss
1000039d:	01 db                	add    ebx,ebx
1000039f:	21 f2                	and    edx,esi
100003a1:	09 da                	or     edx,ebx
100003a3:	0f b6 1c c5 83 10 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001083]	100003a7: R_386_32	.bss
100003ab:	01 d2                	add    edx,edx
100003ad:	21 f3                	and    ebx,esi
100003af:	09 d3                	or     ebx,edx
100003b1:	0f b6 14 c5 84 10 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001084]	100003b5: R_386_32	.bss
100003b9:	01 db                	add    ebx,ebx
100003bb:	21 f2                	and    edx,esi
100003bd:	09 da                	or     edx,ebx
100003bf:	0f b6 1c c5 85 10 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001085]	100003c3: R_386_32	.bss
100003c7:	01 d2                	add    edx,edx
100003c9:	21 f3                	and    ebx,esi
100003cb:	09 d3                	or     ebx,edx
100003cd:	0f b6 14 c5 86 10 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001086]	100003d1: R_386_32	.bss
100003d5:	01 db                	add    ebx,ebx
100003d7:	21 f2                	and    edx,esi
100003d9:	09 da                	or     edx,ebx
100003db:	0f b6 1c c5 87 10 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001087]	100003df: R_386_32	.bss
100003e3:	01 d2                	add    edx,edx
100003e5:	21 f3                	and    ebx,esi
100003e7:	09 da                	or     edx,ebx
100003e9:	d3 ea                	shr    edx,cl
100003eb:	88 14 07             	mov    BYTE PTR [edi+eax*1],dl
100003ee:	40                   	inc    eax
100003ef:	39 44 24 10          	cmp    DWORD PTR [esp+0x10],eax
100003f3:	75 88                	jne    1000037d <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x173>
100003f5:	41                   	inc    ecx
100003f6:	e9 4c ff ff ff       	jmp    10000347 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x13d>
100003fb:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100003ff:	c1 e0 03             	shl    eax,0x3
10000402:	01 44 24 14          	add    DWORD PTR [esp+0x14],eax
10000406:	01 44 24 18          	add    DWORD PTR [esp+0x18],eax
1000040a:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000040e:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
10000412:	0f 8f a7 fe ff ff    	jg     100002bf <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xb5>
10000418:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
1000041c:	ff 44 24 48          	inc    DWORD PTR [esp+0x48]
10000420:	8b 8f 58 01 00 00    	mov    ecx,DWORD PTR [edi+0x158]
10000426:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
1000042a:	01 4c 24 20          	add    DWORD PTR [esp+0x20],ecx
1000042e:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
10000432:	01 7c 24 24          	add    DWORD PTR [esp+0x24],edi
10000436:	39 44 24 48          	cmp    DWORD PTR [esp+0x48],eax
1000043a:	0f 85 26 fe ff ff    	jne    10000266 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x5c>
10000440:	83 c4 30             	add    esp,0x30
10000443:	5b                   	pop    ebx
10000444:	5e                   	pop    esi
10000445:	5f                   	pop    edi
10000446:	c3                   	ret    
10000447:	31 c9                	xor    ecx,ecx
10000449:	83 44 24 0c 04       	add    DWORD PTR [esp+0xc],0x4
1000044e:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000452:	8b 40 fc             	mov    eax,DWORD PTR [eax-0x4]
10000455:	89 c3                	mov    ebx,eax
10000457:	89 c2                	mov    edx,eax
10000459:	c1 fb 15             	sar    ebx,0x15
1000045c:	c1 fa 0a             	sar    edx,0xa
1000045f:	83 e3 07             	and    ebx,0x7
10000462:	83 e2 38             	and    edx,0x38
10000465:	09 d3                	or     ebx,edx
10000467:	8d 14 00             	lea    edx,[eax+eax*1]
1000046a:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
1000046e:	81 e2 c0 01 00 00    	and    edx,0x1c0
10000474:	01 c8                	add    eax,ecx
10000476:	09 da                	or     edx,ebx
10000478:	83 e0 01             	and    eax,0x1
1000047b:	41                   	inc    ecx
1000047c:	8a 84 50 00 00 00 00 	mov    al,BYTE PTR [eax+edx*2+0x0]	1000047f: R_386_32	dither16Data
10000483:	88 81 7f 10 00 10    	mov    BYTE PTR [ecx+0x1000107f],al	10000485: R_386_32	.bss
10000489:	39 f1                	cmp    ecx,esi
1000048b:	7c bc                	jl     10000449 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x23f>
1000048d:	e9 a2 fe ff ff       	jmp    10000334 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x12a>

10000492 <VGAVideo::putrect(int, int, int, int, unsigned int)>:
10000492:	57                   	push   edi
10000493:	56                   	push   esi
10000494:	53                   	push   ebx
10000495:	83 ec 34             	sub    esp,0x34
10000498:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
1000049c:	8b 74 24 44          	mov    esi,DWORD PTR [esp+0x44]
100004a0:	c1 f8 15             	sar    eax,0x15
100004a3:	83 e0 07             	and    eax,0x7
100004a6:	89 c2                	mov    edx,eax
100004a8:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
100004ac:	c1 f8 0a             	sar    eax,0xa
100004af:	83 e0 38             	and    eax,0x38
100004b2:	09 d0                	or     eax,edx
100004b4:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
100004b8:	01 d2                	add    edx,edx
100004ba:	81 e2 c0 01 00 00    	and    edx,0x1c0
100004c0:	09 d0                	or     eax,edx
100004c2:	0f b6 9c 00 00 00 00 00 	movzx  ebx,BYTE PTR [eax+eax*1+0x0]	100004c6: R_386_32	dither16Data
100004ca:	0f b6 84 00 01 00 00 00 	movzx  eax,BYTE PTR [eax+eax*1+0x1]	100004ce: R_386_32	dither16Data
100004d2:	89 1c 24             	mov    DWORD PTR [esp],ebx
100004d5:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
100004d9:	8b 5c 24 54          	mov    ebx,DWORD PTR [esp+0x54]
100004dd:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
100004e1:	03 5c 24 4c          	add    ebx,DWORD PTR [esp+0x4c]
100004e5:	03 44 24 48          	add    eax,DWORD PTR [esp+0x48]
100004e9:	89 5c 24 08          	mov    DWORD PTR [esp+0x8],ebx
100004ed:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100004f1:	39 44 24 48          	cmp    DWORD PTR [esp+0x48],eax
100004f5:	0f 8d e6 03 00 00    	jge    100008e1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x44f>
100004fb:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
10000501:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
10000505:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10000509:	2b 7c 24 48          	sub    edi,DWORD PTR [esp+0x48]
1000050d:	0f af 86 58 01 00 00 	imul   eax,DWORD PTR [esi+0x158]
10000514:	89 7c 24 30          	mov    DWORD PTR [esp+0x30],edi
10000518:	03 44 24 48          	add    eax,DWORD PTR [esp+0x48]
1000051c:	c1 f8 03             	sar    eax,0x3
1000051f:	c1 ff 03             	sar    edi,0x3
10000522:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000526:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
1000052a:	0f 84 65 02 00 00    	je     10000795 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x303>
10000530:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10000534:	83 e0 07             	and    eax,0x7
10000537:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
1000053b:	0f 85 54 02 00 00    	jne    10000795 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x303>
10000541:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10000545:	83 e0 01             	and    eax,0x1
10000548:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000054c:	80 fa 01             	cmp    dl,0x1
1000054f:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10000553:	19 c0                	sbb    eax,eax
10000555:	83 e0 03             	and    eax,0x3
10000558:	40                   	inc    eax
10000559:	39 c3                	cmp    ebx,eax
1000055b:	0f 8d 5b 03 00 00    	jge    100008bc <VGAVideo::putrect(int, int, int, int, unsigned int)+0x42a>
10000561:	53                   	push   ebx
10000562:	56                   	push   esi
10000563:	e8 fc ff ff ff       	call   10000564 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xd2>	10000564: R_386_PC32	VGAVideo::setPlane(int)
10000568:	5f                   	pop    edi
10000569:	80 be 61 01 00 00 00 	cmp    BYTE PTR [esi+0x161],0x0
10000570:	58                   	pop    eax
10000571:	0f 84 5f 01 00 00    	je     100006d6 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x244>
10000577:	88 d9                	mov    cl,bl
10000579:	b8 01 00 00 00       	mov    eax,0x1
1000057e:	8b 5c 24 28          	mov    ebx,DWORD PTR [esp+0x28]
10000582:	d3 e0                	shl    eax,cl
10000584:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000588:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000058c:	01 c3                	add    ebx,eax
1000058e:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000592:	89 5c 24 18          	mov    DWORD PTR [esp+0x18],ebx
10000596:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000059a:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
1000059e:	39 44 24 4c          	cmp    DWORD PTR [esp+0x4c],eax
100005a2:	0f 8d 0d 01 00 00    	jge    100006b5 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x223>
100005a8:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100005ac:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
100005b0:	40                   	inc    eax
100005b1:	8b 7c 24 4c          	mov    edi,DWORD PTR [esp+0x4c]
100005b5:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100005b9:	85 c9                	test   ecx,ecx
100005bb:	0f 85 91 00 00 00    	jne    10000652 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1c0>
100005c1:	eb 25                	jmp    100005e8 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x156>
100005c3:	b9 aa 00 00 00       	mov    ecx,0xaa
100005c8:	85 c0                	test   eax,eax
100005ca:	74 66                	je     10000632 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1a0>
100005cc:	88 8b 00 00 0a c2    	mov    BYTE PTR [ebx-0x3df60000],cl
100005d2:	8b 86 58 01 00 00    	mov    eax,DWORD PTR [esi+0x158]
100005d8:	47                   	inc    edi
100005d9:	c1 f8 03             	sar    eax,0x3
100005dc:	01 c3                	add    ebx,eax
100005de:	39 7c 24 08          	cmp    DWORD PTR [esp+0x8],edi
100005e2:	0f 84 cd 00 00 00    	je     100006b5 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x223>
100005e8:	57                   	push   edi
100005e9:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
100005ed:	ff 74 24 60          	push   DWORD PTR [esp+0x60]
100005f1:	e8 fc ff ff ff       	call   100005f2 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x160>	100005f2: R_386_PC32	monoPixelLookup(int, int, int)
100005f6:	83 c4 0c             	add    esp,0xc
100005f9:	89 04 24             	mov    DWORD PTR [esp],eax
100005fc:	57                   	push   edi
100005fd:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
10000601:	ff 74 24 60          	push   DWORD PTR [esp+0x60]
10000605:	e8 fc ff ff ff       	call   10000606 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x174>	10000606: R_386_PC32	monoPixelLookup(int, int, int)
1000060a:	83 c4 0c             	add    esp,0xc
1000060d:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000611:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10000615:	8b 14 24             	mov    edx,DWORD PTR [esp]
10000618:	21 ca                	and    edx,ecx
1000061a:	23 4c 24 04          	and    ecx,DWORD PTR [esp+0x4]
1000061e:	89 d0                	mov    eax,edx
10000620:	89 ca                	mov    edx,ecx
10000622:	74 9f                	je     100005c3 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x131>
10000624:	b9 ff 00 00 00       	mov    ecx,0xff
10000629:	ba 55 00 00 00       	mov    edx,0x55
1000062e:	85 c0                	test   eax,eax
10000630:	75 9a                	jne    100005cc <VGAVideo::putrect(int, int, int, int, unsigned int)+0x13a>
10000632:	88 93 00 00 0a c2    	mov    BYTE PTR [ebx-0x3df60000],dl
10000638:	eb 98                	jmp    100005d2 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x140>
1000063a:	88 83 00 00 0a c2    	mov    BYTE PTR [ebx-0x3df60000],al
10000640:	47                   	inc    edi
10000641:	8b 86 58 01 00 00    	mov    eax,DWORD PTR [esi+0x158]
10000647:	c1 f8 03             	sar    eax,0x3
1000064a:	01 c3                	add    ebx,eax
1000064c:	39 7c 24 08          	cmp    DWORD PTR [esp+0x8],edi
10000650:	74 63                	je     100006b5 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x223>
10000652:	57                   	push   edi
10000653:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
10000657:	ff 74 24 60          	push   DWORD PTR [esp+0x60]
1000065b:	e8 fc ff ff ff       	call   1000065c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1ca>	1000065c: R_386_PC32	monoPixelLookup(int, int, int)
10000660:	83 c4 0c             	add    esp,0xc
10000663:	89 04 24             	mov    DWORD PTR [esp],eax
10000666:	57                   	push   edi
10000667:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
1000066b:	ff 74 24 60          	push   DWORD PTR [esp+0x60]
1000066f:	e8 fc ff ff ff       	call   10000670 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1de>	10000670: R_386_PC32	monoPixelLookup(int, int, int)
10000674:	83 c4 0c             	add    esp,0xc
10000677:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
1000067b:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
1000067f:	8b 04 24             	mov    eax,DWORD PTR [esp]
10000682:	21 c8                	and    eax,ecx
10000684:	83 f8 01             	cmp    eax,0x1
10000687:	19 d2                	sbb    edx,edx
10000689:	f7 d2                	not    edx
1000068b:	83 e2 55             	and    edx,0x55
1000068e:	83 f8 01             	cmp    eax,0x1
10000691:	19 c0                	sbb    eax,eax
10000693:	83 e0 ab             	and    eax,0xffffffab
10000696:	48                   	dec    eax
10000697:	85 4c 24 04          	test   DWORD PTR [esp+0x4],ecx
1000069b:	75 9d                	jne    1000063a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1a8>
1000069d:	88 93 00 00 0a c2    	mov    BYTE PTR [ebx-0x3df60000],dl
100006a3:	47                   	inc    edi
100006a4:	8b 86 58 01 00 00    	mov    eax,DWORD PTR [esi+0x158]
100006aa:	c1 f8 03             	sar    eax,0x3
100006ad:	01 c3                	add    ebx,eax
100006af:	3b 7c 24 08          	cmp    edi,DWORD PTR [esp+0x8]
100006b3:	75 9d                	jne    10000652 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1c0>
100006b5:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
100006b9:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100006bd:	39 44 24 18          	cmp    DWORD PTR [esp+0x18],eax
100006c1:	0f 85 cf fe ff ff    	jne    10000596 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x104>
100006c7:	ff 44 24 24          	inc    DWORD PTR [esp+0x24]
100006cb:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
100006d1:	e9 76 fe ff ff       	jmp    1000054c <VGAVideo::putrect(int, int, int, int, unsigned int)+0xba>
100006d6:	8b 04 24             	mov    eax,DWORD PTR [esp]
100006d9:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
100006dd:	d3 f8                	sar    eax,cl
100006df:	a8 01                	test   al,0x1
100006e1:	0f 84 5a 02 00 00    	je     10000941 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4af>
100006e7:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100006eb:	d3 f8                	sar    eax,cl
100006ed:	83 e0 01             	and    eax,0x1
100006f0:	83 f8 01             	cmp    eax,0x1
100006f3:	19 db                	sbb    ebx,ebx
100006f5:	83 e3 56             	and    ebx,0x56
100006f8:	4b                   	dec    ebx
100006f9:	83 f8 01             	cmp    eax,0x1
100006fc:	19 c0                	sbb    eax,eax
100006fe:	83 e0 ab             	and    eax,0xffffffab
10000701:	05 ff 00 00 00       	add    eax,0xff
10000706:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000070a:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000070e:	39 44 24 4c          	cmp    DWORD PTR [esp+0x4c],eax
10000712:	7d b3                	jge    100006c7 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x235>
10000714:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10000718:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
1000071c:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
10000720:	01 fa                	add    edx,edi
10000722:	8b 7c 24 48          	mov    edi,DWORD PTR [esp+0x48]
10000726:	89 54 24 14          	mov    DWORD PTR [esp+0x14],edx
1000072a:	8b 54 24 4c          	mov    edx,DWORD PTR [esp+0x4c]
1000072e:	01 d7                	add    edi,edx
10000730:	89 7c 24 18          	mov    DWORD PTR [esp+0x18],edi
10000734:	8b 7c 24 48          	mov    edi,DWORD PTR [esp+0x48]
10000738:	01 c7                	add    edi,eax
1000073a:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000073e:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10000742:	eb 1a                	jmp    1000075e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2cc>
10000744:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10000748:	40                   	inc    eax
10000749:	88 8a 00 00 0a c2    	mov    BYTE PTR [edx-0x3df60000],cl
1000074f:	8b 8e 58 01 00 00    	mov    ecx,DWORD PTR [esi+0x158]
10000755:	c1 f9 03             	sar    ecx,0x3
10000758:	01 ca                	add    edx,ecx
1000075a:	39 c7                	cmp    edi,eax
1000075c:	74 1a                	je     10000778 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2e6>
1000075e:	a8 01                	test   al,0x1
10000760:	74 e2                	je     10000744 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2b2>
10000762:	88 9a 00 00 0a c2    	mov    BYTE PTR [edx-0x3df60000],bl
10000768:	40                   	inc    eax
10000769:	8b 8e 58 01 00 00    	mov    ecx,DWORD PTR [esi+0x158]
1000076f:	c1 f9 03             	sar    ecx,0x3
10000772:	01 ca                	add    edx,ecx
10000774:	39 c7                	cmp    edi,eax
10000776:	75 e6                	jne    1000075e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2cc>
10000778:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
1000077c:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000780:	39 44 24 14          	cmp    DWORD PTR [esp+0x14],eax
10000784:	75 b4                	jne    1000073a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2a8>
10000786:	ff 44 24 24          	inc    DWORD PTR [esp+0x24]
1000078a:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
10000790:	e9 b7 fd ff ff       	jmp    1000054c <VGAVideo::putrect(int, int, int, int, unsigned int)+0xba>
10000795:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10000799:	f7 d0                	not    eax
1000079b:	83 e0 07             	and    eax,0x7
1000079e:	89 c3                	mov    ebx,eax
100007a0:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100007a4:	88 d9                	mov    cl,bl
100007a6:	b8 fe ff ff ff       	mov    eax,0xfffffffe
100007ab:	d3 c0                	rol    eax,cl
100007ad:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100007b1:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100007b5:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
100007b9:	a8 01                	test   al,0x1
100007bb:	0f 84 96 01 00 00    	je     10000957 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4c5>
100007c1:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100007c5:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100007c9:	8b 04 24             	mov    eax,DWORD PTR [esp]
100007cc:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100007d0:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
100007d8:	80 fa 01             	cmp    dl,0x1
100007db:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100007df:	19 c0                	sbb    eax,eax
100007e1:	83 e0 03             	and    eax,0x3
100007e4:	40                   	inc    eax
100007e5:	39 c3                	cmp    ebx,eax
100007e7:	0f 8d e2 00 00 00    	jge    100008cf <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43d>
100007ed:	53                   	push   ebx
100007ee:	56                   	push   esi
100007ef:	e8 fc ff ff ff       	call   100007f0 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x35e>	100007f0: R_386_PC32	VGAVideo::setPlane(int)
100007f4:	58                   	pop    eax
100007f5:	5a                   	pop    edx
100007f6:	8b 5c 24 04          	mov    ebx,DWORD PTR [esp+0x4]
100007fa:	39 1c 24             	cmp    DWORD PTR [esp],ebx
100007fd:	0f 84 e5 00 00 00    	je     100008e8 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x456>
10000803:	8a 4c 24 10          	mov    cl,BYTE PTR [esp+0x10]
10000807:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
1000080b:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000080f:	d3 ff                	sar    edi,cl
10000811:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10000815:	83 e7 01             	and    edi,0x1
10000818:	d3 e7                	shl    edi,cl
1000081a:	39 44 24 4c          	cmp    DWORD PTR [esp+0x4c],eax
1000081e:	0f 8d 47 01 00 00    	jge    1000096b <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4d9>
10000824:	8a 44 24 18          	mov    al,BYTE PTR [esp+0x18]
10000828:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
1000082c:	88 44 24 0c          	mov    BYTE PTR [esp+0xc],al
10000830:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000834:	8a 44 24 0c          	mov    al,BYTE PTR [esp+0xc]
10000838:	83 c1 02             	add    ecx,0x2
1000083b:	22 82 00 00 0a c2    	and    al,BYTE PTR [edx-0x3df60000]
10000841:	09 f8                	or     eax,edi
10000843:	88 82 00 00 0a c2    	mov    BYTE PTR [edx-0x3df60000],al
10000849:	8b 86 58 01 00 00    	mov    eax,DWORD PTR [esi+0x158]
1000084f:	89 c3                	mov    ebx,eax
10000851:	c1 fb 02             	sar    ebx,0x2
10000854:	01 da                	add    edx,ebx
10000856:	39 4c 24 08          	cmp    DWORD PTR [esp+0x8],ecx
1000085a:	7f d8                	jg     10000834 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3a2>
1000085c:	c1 f8 03             	sar    eax,0x3
1000085f:	8a 4c 24 10          	mov    cl,BYTE PTR [esp+0x10]
10000863:	03 44 24 1c          	add    eax,DWORD PTR [esp+0x1c]
10000867:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
1000086b:	8b 7c 24 4c          	mov    edi,DWORD PTR [esp+0x4c]
1000086f:	d3 fb                	sar    ebx,cl
10000871:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10000875:	83 e3 01             	and    ebx,0x1
10000878:	d3 e3                	shl    ebx,cl
1000087a:	8d 4f 01             	lea    ecx,[edi+0x1]
1000087d:	83 7c 24 54 01       	cmp    DWORD PTR [esp+0x54],0x1
10000882:	7e 29                	jle    100008ad <VGAVideo::putrect(int, int, int, int, unsigned int)+0x41b>
10000884:	0f b6 7c 24 18       	movzx  edi,BYTE PTR [esp+0x18]
10000889:	89 fa                	mov    edx,edi
1000088b:	83 c1 02             	add    ecx,0x2
1000088e:	22 90 00 00 0a c2    	and    dl,BYTE PTR [eax-0x3df60000]
10000894:	09 da                	or     edx,ebx
10000896:	88 90 00 00 0a c2    	mov    BYTE PTR [eax-0x3df60000],dl
1000089c:	8b 96 58 01 00 00    	mov    edx,DWORD PTR [esi+0x158]
100008a2:	c1 fa 02             	sar    edx,0x2
100008a5:	01 d0                	add    eax,edx
100008a7:	39 4c 24 08          	cmp    DWORD PTR [esp+0x8],ecx
100008ab:	7f dc                	jg     10000889 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3f7>
100008ad:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
100008b1:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
100008b7:	e9 1c ff ff ff       	jmp    100007d8 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x346>
100008bc:	8b 5c 24 48          	mov    ebx,DWORD PTR [esp+0x48]
100008c0:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
100008c4:	83 e0 f8             	and    eax,0xfffffff8
100008c7:	8d 44 03 ff          	lea    eax,[ebx+eax*1-0x1]
100008cb:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100008cf:	ff 44 24 48          	inc    DWORD PTR [esp+0x48]
100008d3:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
100008d7:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
100008db:	0f 8f 20 fc ff ff    	jg     10000501 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x6f>
100008e1:	83 c4 34             	add    esp,0x34
100008e4:	5b                   	pop    ebx
100008e5:	5e                   	pop    esi
100008e6:	5f                   	pop    edi
100008e7:	c3                   	ret    
100008e8:	8a 4c 24 10          	mov    cl,BYTE PTR [esp+0x10]
100008ec:	8b 3c 24             	mov    edi,DWORD PTR [esp]
100008ef:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100008f3:	d3 ff                	sar    edi,cl
100008f5:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
100008f9:	83 e7 01             	and    edi,0x1
100008fc:	d3 e7                	shl    edi,cl
100008fe:	39 44 24 4c          	cmp    DWORD PTR [esp+0x4c],eax
10000902:	7d a9                	jge    100008ad <VGAVideo::putrect(int, int, int, int, unsigned int)+0x41b>
10000904:	8a 5c 24 18          	mov    bl,BYTE PTR [esp+0x18]
10000908:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
1000090c:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10000910:	8a 90 00 00 0a c2    	mov    dl,BYTE PTR [eax-0x3df60000]
10000916:	41                   	inc    ecx
10000917:	21 da                	and    edx,ebx
10000919:	09 fa                	or     edx,edi
1000091b:	88 90 00 00 0a c2    	mov    BYTE PTR [eax-0x3df60000],dl
10000921:	8b 96 58 01 00 00    	mov    edx,DWORD PTR [esi+0x158]
10000927:	c1 fa 03             	sar    edx,0x3
1000092a:	01 d0                	add    eax,edx
1000092c:	39 4c 24 08          	cmp    DWORD PTR [esp+0x8],ecx
10000930:	75 de                	jne    10000910 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x47e>
10000932:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
10000936:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
1000093c:	e9 97 fe ff ff       	jmp    100007d8 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x346>
10000941:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
10000945:	d3 ff                	sar    edi,cl
10000947:	83 e7 01             	and    edi,0x1
1000094a:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000094e:	75 26                	jne    10000976 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4e4>
10000950:	31 db                	xor    ebx,ebx
10000952:	e9 b3 fd ff ff       	jmp    1000070a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x278>
10000957:	8b 04 24             	mov    eax,DWORD PTR [esp]
1000095a:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
1000095e:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000962:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10000966:	e9 65 fe ff ff       	jmp    100007d0 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x33e>
1000096b:	8b 86 58 01 00 00    	mov    eax,DWORD PTR [esi+0x158]
10000971:	e9 e6 fe ff ff       	jmp    1000085c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3ca>
10000976:	b3 aa                	mov    bl,0xaa
10000978:	c7 44 24 0c 55 00 00 00 	mov    DWORD PTR [esp+0xc],0x55
10000980:	e9 85 fd ff ff       	jmp    1000070a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x278>
10000985:	90                   	nop

10000986 <VGAVideo::putpixel(int, int, unsigned int)>:
10000986:	57                   	push   edi
10000987:	56                   	push   esi
10000988:	53                   	push   ebx
10000989:	83 ec 0c             	sub    esp,0xc
1000098c:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10000990:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10000994:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10000998:	0f af 87 58 01 00 00 	imul   eax,DWORD PTR [edi+0x158]
1000099f:	01 f0                	add    eax,esi
100009a1:	c1 f8 03             	sar    eax,0x3
100009a4:	89 04 24             	mov    DWORD PTR [esp],eax
100009a7:	89 f0                	mov    eax,esi
100009a9:	f7 d0                	not    eax
100009ab:	83 e0 07             	and    eax,0x7
100009ae:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
100009b2:	8a 87 61 01 00 00    	mov    al,BYTE PTR [edi+0x161]
100009b8:	84 c0                	test   al,al
100009ba:	0f 85 95 00 00 00    	jne    10000a55 <VGAVideo::putpixel(int, int, unsigned int)+0xcf>
100009c0:	8b 4c 24 28          	mov    ecx,DWORD PTR [esp+0x28]
100009c4:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
100009c8:	c1 f9 15             	sar    ecx,0x15
100009cb:	01 d2                	add    edx,edx
100009cd:	89 cb                	mov    ebx,ecx
100009cf:	81 e2 c0 01 00 00    	and    edx,0x1c0
100009d5:	83 e3 07             	and    ebx,0x7
100009d8:	8b 4c 24 28          	mov    ecx,DWORD PTR [esp+0x28]
100009dc:	03 74 24 24          	add    esi,DWORD PTR [esp+0x24]
100009e0:	c1 f9 0a             	sar    ecx,0xa
100009e3:	83 e6 01             	and    esi,0x1
100009e6:	83 e1 38             	and    ecx,0x38
100009e9:	09 cb                	or     ebx,ecx
100009eb:	09 da                	or     edx,ebx
100009ed:	0f b6 b4 56 00 00 00 00 	movzx  esi,BYTE PTR [esi+edx*2+0x0]	100009f1: R_386_32	dither16Data
100009f5:	ba fe ff ff ff       	mov    edx,0xfffffffe
100009fa:	8a 4c 24 04          	mov    cl,BYTE PTR [esp+0x4]
100009fe:	31 db                	xor    ebx,ebx
10000a00:	d3 c2                	rol    edx,cl
10000a02:	84 c0                	test   al,al
10000a04:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
10000a08:	74 3f                	je     10000a49 <VGAVideo::putpixel(int, int, unsigned int)+0xc3>
10000a0a:	85 db                	test   ebx,ebx
10000a0c:	75 40                	jne    10000a4e <VGAVideo::putpixel(int, int, unsigned int)+0xc8>
10000a0e:	53                   	push   ebx
10000a0f:	43                   	inc    ebx
10000a10:	57                   	push   edi
10000a11:	e8 fc ff ff ff       	call   10000a12 <VGAVideo::putpixel(int, int, unsigned int)+0x8c>	10000a12: R_386_PC32	VGAVideo::setPlane(int)
10000a16:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10000a1a:	8a 44 24 10          	mov    al,BYTE PTR [esp+0x10]
10000a1e:	89 f2                	mov    edx,esi
10000a20:	22 81 00 00 0a c2    	and    al,BYTE PTR [ecx-0x3df60000]
10000a26:	83 e2 01             	and    edx,0x1
10000a29:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10000a2d:	d1 fe                	sar    esi,1
10000a2f:	d3 e2                	shl    edx,cl
10000a31:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10000a35:	09 d0                	or     eax,edx
10000a37:	88 81 00 00 0a c2    	mov    BYTE PTR [ecx-0x3df60000],al
10000a3d:	8a 87 61 01 00 00    	mov    al,BYTE PTR [edi+0x161]
10000a43:	5a                   	pop    edx
10000a44:	84 c0                	test   al,al
10000a46:	59                   	pop    ecx
10000a47:	75 c1                	jne    10000a0a <VGAVideo::putpixel(int, int, unsigned int)+0x84>
10000a49:	83 fb 04             	cmp    ebx,0x4
10000a4c:	75 c0                	jne    10000a0e <VGAVideo::putpixel(int, int, unsigned int)+0x88>
10000a4e:	83 c4 0c             	add    esp,0xc
10000a51:	5b                   	pop    ebx
10000a52:	5e                   	pop    esi
10000a53:	5f                   	pop    edi
10000a54:	c3                   	ret    
10000a55:	31 f6                	xor    esi,esi
10000a57:	eb 9c                	jmp    100009f5 <VGAVideo::putpixel(int, int, unsigned int)+0x6f>
10000a59:	90                   	nop

10000a5a <VGAVideo::~VGAVideo()>:
10000a5a:	55                   	push   ebp
10000a5b:	89 e5                	mov    ebp,esp
10000a5d:	83 ec 08             	sub    esp,0x8
10000a60:	ba 08 00 00 00       	mov    edx,0x8	10000a61: R_386_32	vtable for VGAVideo
10000a65:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000a68:	89 10                	mov    DWORD PTR [eax],edx
10000a6a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000a6d:	83 ec 0c             	sub    esp,0xc
10000a70:	50                   	push   eax
10000a71:	e8 fc ff ff ff       	call   10000a72 <VGAVideo::~VGAVideo()+0x18>	10000a72: R_386_PC32	Video::~Video()
10000a76:	83 c4 10             	add    esp,0x10
10000a79:	90                   	nop
10000a7a:	c9                   	leave  
10000a7b:	c3                   	ret    

10000a7c <VGAVideo::~VGAVideo()>:
10000a7c:	55                   	push   ebp
10000a7d:	89 e5                	mov    ebp,esp
10000a7f:	83 ec 08             	sub    esp,0x8
10000a82:	83 ec 0c             	sub    esp,0xc
10000a85:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000a88:	e8 fc ff ff ff       	call   10000a89 <VGAVideo::~VGAVideo()+0xd>	10000a89: R_386_PC32	VGAVideo::~VGAVideo()
10000a8d:	83 c4 10             	add    esp,0x10
10000a90:	83 ec 08             	sub    esp,0x8
10000a93:	68 64 01 00 00       	push   0x164
10000a98:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000a9b:	e8 fc ff ff ff       	call   10000a9c <VGAVideo::~VGAVideo()+0x20>	10000a9c: R_386_PC32	operator delete(void*, unsigned long)
10000aa0:	83 c4 10             	add    esp,0x10
10000aa3:	c9                   	leave  
10000aa4:	c3                   	ret    
10000aa5:	66 90                	xchg   ax,ax
10000aa7:	90                   	nop

10000aa8 <PHYS_RAM_TABLE_SIZE>:
10000aa8:	13 05 00 00                                         ....

10000aac <PHYS_HIGHEST_UNUSED_ADDRESS>:
10000aac:	24 05 00 00                                         $...

10000ab0 <PHYS_RAM_TABLE>:
10000ab0:	00 06 00 00                                         ....

10000ab4 <PHYS_DMA_MEMORY_1>:
10000ab4:	00 00 01 00                                         ....

10000ab8 <PHYS_PHYS_PAGE_BITMAP>:
10000ab8:	00 00 02 00                                         ....

10000abc <PHYS_VIRT_PAGE_BITMAP>:
10000abc:	00 00 04 00                                         ....

10000ac0 <PHYS_DMA_MEMORY_2>:
10000ac0:	00 00 06 00                                         ....

10000ac4 <PHYS_ALLOCED_VIRT_PAGES>:
10000ac4:	00 00 10 00                                         ....

10000ac8 <PHYS_KRNL_PAGE_DIRECTORY>:
10000ac8:	00 10 00 00                                         ....

10000acc <VIRT_KERNEL_BASE>:
10000acc:	00 00 00 c0                                         ....

10000ad0 <VIRT_LOW_MEGS>:
10000ad0:	00 00 00 c2                                         ....

10000ad4 <VIRT_CPU_SPECIFIC>:
10000ad4:	00 00 40 c2                                         ..@.

10000ad8 <VIRT_RECURSIVE_SPOT_1>:
10000ad8:	00 00 80 c2                                         ....

10000adc <VIRT_RECURSIVE_SPOT_2>:
10000adc:	00 00 c0 c2                                         ....

10000ae0 <VIRT_DMA_MEMORY_1>:
10000ae0:	00 00 01 c2                                         ....

10000ae4 <SIZE_DMA_MEMORY_1>:
10000ae4:	00 00 01 00                                         ....

10000ae8 <VIRT_DMA_MEMORY_2>:
10000ae8:	00 00 06 c2                                         ....

10000aec <SIZE_DMA_MEMORY_2>:
10000aec:	00 00 02 00                                         ....

10000af0 <VIRT_KRNL_PAGE_DIRECTORY>:
10000af0:	00 10 00 c2                                         ....

10000af4 <VIRT_PHYS_PAGE_BITMAP>:
10000af4:	00 00 02 c2                                         ....

10000af8 <SIZE_PHYS_PAGE_BITMAP>:
10000af8:	00 00 02 00                                         ....

10000afc <VIRT_VIRT_PAGE_BITMAP>:
10000afc:	00 00 04 c2                                         ....

10000b00 <SIZE_VIRT_PAGE_BITMAP>:
10000b00:	00 80 00 00                                         ....

10000b04 <VIRT_RAM_TABLE>:
10000b04:	00 06 00 c2                                         ....

10000b08 <VIRT_RAM_TABLE_SIZE>:
10000b08:	13 05 00 c2                                         ....

10000b0c <VIRT_HIGHEST_UNUSED_ADDRESS>:
10000b0c:	24 05 00 c2                                         $...

10000b10 <SIZE_APP_STACK_USER>:
10000b10:	00 00 18 00                                         ....

10000b14 <SIZE_APP_STACK_KRNL>:
10000b14:	00 00 08 00                                         ....

10000b18 <SIZE_APP_STACK_TOTAL>:
10000b18:	00 00 20 00                                         .. .

10000b1c <VIRT_APP_DATA>:
10000b1c:	00 00 00 10                                         ....

10000b20 <VIRT_APP_STACK_USER_TOP>:
10000b20:	00 00 00 02                                         ....

10000b24 <VIRT_APP_STACK_KRNL_TOP>:
10000b24:	00 00 e8 01                                         ....

10000b28 <VIRT_HEAP_MIN>:
10000b28:	00 00 00 c8                                         ....

10000b2c <VIRT_HEAP_MAX>:
10000b2c:	ff ff ff ef                                         ....

10000b30 <VIRT_SBRK_MIN>:
10000b30:	00 00 00 f0                                         ....

10000b34 <VIRT_SBRK_MAX>:
10000b34:	00 00 c0 ff                                         ....

10000b38 <VIRT_ALLOCED_VIRT_PAGES>:
10000b38:	00 00 10 c2                                         ....

10000b3c <VIRT_ACPI_DRIVER>:
10000b3c:	00 40 48 c2                                         .@H.

10000b40 <TERMINAL_KEYBUFFER_IN_SIZE>:
10000b40:	96 00 00 00                                         ....

10000b44 <TERMINAL_KEYBUFFER_OUT_SIZE>:
10000b44:	2c 01 00 00 56 47 41 20 44 69 73 70 6c 61 79 00     ,...VGA Display.
10000b54:	43 3a 2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d     C:/Banana/System
10000b64:	2f 56 47 41 53 45 54 2e 43 4f 4d 00 53 65 74 20     /VGASET.COM.Set 
10000b74:	74 6f 20 76 69 64 65 6f 20 6d 6f 64 65 20 25 64     to video mode %d
10000b84:	0a 00 66 90                                         ..f.

10000b88 <vtable for VGAVideo>:
	...
	10000b90: R_386_32	VGAVideo::~VGAVideo()
	10000b94: R_386_32	VGAVideo::~VGAVideo()
	10000b98: R_386_32	VGAVideo::open(int, int, void*)
	10000b9c: R_386_32	VGAVideo::close(int, int, void*)
	10000ba0: R_386_32	Device::hibernate()
	10000ba4: R_386_32	Device::wake()
	10000ba8: R_386_32	Device::detect()
	10000bac: R_386_32	Device::disableLegacy()
	10000bb0: R_386_32	Device::powerSaving(PowerSavingLevel)
	10000bb4: R_386_32	VGAVideo::putpixel(int, int, unsigned int)
	10000bb8: R_386_32	VGAVideo::putrect(int, int, int, int, unsigned int)
	10000bbc: R_386_32	Video::putTGA(int, int, unsigned char*, int)
	10000bc0: R_386_32	Video::drawCursor(int, int, unsigned char*, int)
	10000bc4: R_386_32	VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)
	10000bc8: R_386_32	Video::blit(unsigned int*, int, int, int, int)
	10000bcc: R_386_32	Video::clearScreen(unsigned int)
