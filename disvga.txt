
packages/banana/32/0002/vga.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	53                   	push   ebx
10000004:	83 ec 14             	sub    esp,0x14
10000007:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000000a:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
1000000d:	c7 45 ec 64 01 00 00 	mov    DWORD PTR [ebp-0x14],0x164
10000014:	83 ec 0c             	sub    esp,0xc
10000017:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
1000001a:	e8 fc ff ff ff       	call   1000001b <start(void*)+0x1b>	1000001b: R_386_PC32	malloc
1000001f:	83 c4 10             	add    esp,0x10
10000022:	89 c3                	mov    ebx,eax
10000024:	83 ec 0c             	sub    esp,0xc
10000027:	53                   	push   ebx
10000028:	e8 fc ff ff ff       	call   10000029 <start(void*)+0x29>	10000029: R_386_PC32	VGAVideo::VGAVideo()
1000002d:	83 c4 10             	add    esp,0x10
10000030:	89 5d f0             	mov    DWORD PTR [ebp-0x10],ebx
10000033:	83 ec 08             	sub    esp,0x8
10000036:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000039:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000003c:	e8 fc ff ff ff       	call   1000003d <start(void*)+0x3d>	1000003d: R_386_PC32	Device::addChild(Device*)
10000041:	83 c4 10             	add    esp,0x10
10000044:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000047:	8b 00                	mov    eax,DWORD PTR [eax]
10000049:	83 c0 08             	add    eax,0x8
1000004c:	8b 00                	mov    eax,DWORD PTR [eax]
1000004e:	6a 00                	push   0x0
10000050:	6a 00                	push   0x0
10000052:	6a 00                	push   0x0
10000054:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000057:	ff d0                	call   eax
10000059:	83 c4 10             	add    esp,0x10
1000005c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000005f:	a3 00 00 00 00       	mov    ds:0x0,eax	10000060: R_386_32	screen
10000064:	90                   	nop
10000065:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000068:	c9                   	leave  
10000069:	c3                   	ret    

1000006a <VGAVideo::setPlane(int)>:
1000006a:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000006e:	39 0d e0 09 00 10    	cmp    DWORD PTR ds:0x100009e0,ecx	10000070: R_386_32	.data
10000074:	74 2b                	je     100000a1 <VGAVideo::setPlane(int)+0x37>
10000076:	89 0d e0 09 00 10    	mov    DWORD PTR ds:0x100009e0,ecx	10000078: R_386_32	.data
1000007c:	b0 04                	mov    al,0x4
1000007e:	ba ce 03 00 00       	mov    edx,0x3ce
10000083:	ee                   	out    dx,al
10000084:	ba cf 03 00 00       	mov    edx,0x3cf
10000089:	88 c8                	mov    al,cl
1000008b:	ee                   	out    dx,al
1000008c:	b0 02                	mov    al,0x2
1000008e:	ba c4 03 00 00       	mov    edx,0x3c4
10000093:	ee                   	out    dx,al
10000094:	b8 01 00 00 00       	mov    eax,0x1
10000099:	ba c5 03 00 00       	mov    edx,0x3c5
1000009e:	d3 e0                	shl    eax,cl
100000a0:	ee                   	out    dx,al
100000a1:	c3                   	ret    

100000a2 <VGAVideo::VGAVideo()>:
100000a2:	55                   	push   ebp
100000a3:	89 e5                	mov    ebp,esp
100000a5:	83 ec 08             	sub    esp,0x8
100000a8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000ab:	83 ec 08             	sub    esp,0x8
100000ae:	68 3c 09 00 10       	push   0x1000093c	100000af: R_386_32	.text
100000b3:	50                   	push   eax
100000b4:	e8 fc ff ff ff       	call   100000b5 <VGAVideo::VGAVideo()+0x13>	100000b5: R_386_PC32	Video::Video(char const*)
100000b9:	83 c4 10             	add    esp,0x10
100000bc:	ba 08 00 00 00       	mov    edx,0x8	100000bd: R_386_32	vtable for VGAVideo
100000c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c4:	89 10                	mov    DWORD PTR [eax],edx
100000c6:	90                   	nop
100000c7:	c9                   	leave  
100000c8:	c3                   	ret    
100000c9:	90                   	nop

100000ca <VGAVideo::close(int, int, void*)>:
100000ca:	31 c0                	xor    eax,eax
100000cc:	c3                   	ret    

100000cd <get_bios_area_video_type()>:
100000cd:	a1 10 04 00 00       	mov    eax,ds:0x410
100000d2:	83 e0 30             	and    eax,0x30
100000d5:	c3                   	ret    

100000d6 <VGAVideo::open(int, int, void*)>:
100000d6:	57                   	push   edi
100000d7:	53                   	push   ebx
100000d8:	83 ec 20             	sub    esp,0x20
100000db:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
100000df:	c6 83 61 01 00 00 01 	mov    BYTE PTR [ebx+0x161],0x1
100000e6:	6a 11                	push   0x11
100000e8:	6a 11                	push   0x11
100000ea:	68 90 00 00 00       	push   0x90
100000ef:	6a 00                	push   0x0
100000f1:	68 48 09 00 10       	push   0x10000948	100000f2: R_386_32	.text
100000f6:	e8 fc ff ff ff       	call   100000f7 <VGAVideo::open(int, int, void*)+0x21>	100000f7: R_386_PC32	Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
100000fb:	83 c4 20             	add    esp,0x20
100000fe:	e8 fc ff ff ff       	call   100000ff <VGAVideo::open(int, int, void*)+0x29>	100000ff: R_386_PC32	Vm::finish8086()
10000103:	80 bb 61 01 00 00 01 	cmp    BYTE PTR [ebx+0x161],0x1
1000010a:	19 c0                	sbb    eax,eax
1000010c:	83 ec 08             	sub    esp,0x8
1000010f:	f7 d0                	not    eax
10000111:	83 c0 12             	add    eax,0x12
10000114:	50                   	push   eax
10000115:	68 64 09 00 10       	push   0x10000964	10000116: R_386_32	.text
1000011a:	e8 fc ff ff ff       	call   1000011b <VGAVideo::open(int, int, void*)+0x45>	1000011b: R_386_PC32	Dbg::kprintf(char const*, ...)
1000011f:	c7 44 24 1c 00 00 0a c2 	mov    DWORD PTR [esp+0x1c],0xc20a0000
10000127:	58                   	pop    eax
10000128:	5a                   	pop    edx
10000129:	6a 00                	push   0x0
1000012b:	53                   	push   ebx
1000012c:	e8 fc ff ff ff       	call   1000012d <VGAVideo::open(int, int, void*)+0x57>	1000012d: R_386_PC32	VGAVideo::setPlane(int)
10000131:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000135:	31 c0                	xor    eax,eax
10000137:	b9 80 25 00 00       	mov    ecx,0x2580
1000013c:	89 d7                	mov    edi,edx
1000013e:	83 c4 10             	add    esp,0x10
10000141:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10000143:	80 bb 61 01 00 00 00 	cmp    BYTE PTR [ebx+0x161],0x0
1000014a:	74 1c                	je     10000168 <VGAVideo::open(int, int, void*)+0x92>
1000014c:	c7 83 58 01 00 00 80 02 00 00 	mov    DWORD PTR [ebx+0x158],0x280
10000156:	c7 83 5c 01 00 00 e0 01 00 00 	mov    DWORD PTR [ebx+0x15c],0x1e0
10000160:	31 c0                	xor    eax,eax
10000162:	83 c4 14             	add    esp,0x14
10000165:	5b                   	pop    ebx
10000166:	5f                   	pop    edi
10000167:	c3                   	ret    
10000168:	83 ec 08             	sub    esp,0x8
1000016b:	6a 01                	push   0x1
1000016d:	53                   	push   ebx
1000016e:	e8 fc ff ff ff       	call   1000016f <VGAVideo::open(int, int, void*)+0x99>	1000016f: R_386_PC32	VGAVideo::setPlane(int)
10000173:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000177:	31 c0                	xor    eax,eax
10000179:	89 d7                	mov    edi,edx
1000017b:	b9 80 25 00 00       	mov    ecx,0x2580
10000180:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10000182:	58                   	pop    eax
10000183:	5a                   	pop    edx
10000184:	6a 02                	push   0x2
10000186:	53                   	push   ebx
10000187:	e8 fc ff ff ff       	call   10000188 <VGAVideo::open(int, int, void*)+0xb2>	10000188: R_386_PC32	VGAVideo::setPlane(int)
1000018c:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000190:	31 c0                	xor    eax,eax
10000192:	89 d7                	mov    edi,edx
10000194:	b9 80 25 00 00       	mov    ecx,0x2580
10000199:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000019b:	59                   	pop    ecx
1000019c:	5f                   	pop    edi
1000019d:	6a 03                	push   0x3
1000019f:	53                   	push   ebx
100001a0:	e8 fc ff ff ff       	call   100001a1 <VGAVideo::open(int, int, void*)+0xcb>	100001a1: R_386_PC32	VGAVideo::setPlane(int)
100001a5:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100001a9:	b9 80 25 00 00       	mov    ecx,0x2580
100001ae:	89 d7                	mov    edi,edx
100001b0:	31 c0                	xor    eax,eax
100001b2:	83 c4 10             	add    esp,0x10
100001b5:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100001b7:	eb 93                	jmp    1000014c <VGAVideo::open(int, int, void*)+0x76>
100001b9:	90                   	nop

100001ba <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)>:
100001ba:	57                   	push   edi
100001bb:	56                   	push   esi
100001bc:	53                   	push   ebx
100001bd:	83 ec 30             	sub    esp,0x30
100001c0:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
100001c4:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
100001c8:	8b 7c 24 48          	mov    edi,DWORD PTR [esp+0x48]
100001cc:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100001d0:	0f af be 58 01 00 00 	imul   edi,DWORD PTR [esi+0x158]
100001d7:	85 c9                	test   ecx,ecx
100001d9:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
100001dd:	0f 8e 14 02 00 00    	jle    100003f7 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x23d>
100001e3:	8b 5c 24 54          	mov    ebx,DWORD PTR [esp+0x54]
100001e7:	85 db                	test   ebx,ebx
100001e9:	0f 8e 08 02 00 00    	jle    100003f7 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x23d>
100001ef:	8d 3c 85 00 00 00 00 	lea    edi,[eax*4+0x0]
100001f6:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
100001fa:	0f af 44 24 50       	imul   eax,DWORD PTR [esp+0x50]
100001ff:	03 4c 24 48          	add    ecx,DWORD PTR [esp+0x48]
10000203:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10000207:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
1000020b:	8d 04 82             	lea    eax,[edx+eax*4]
1000020e:	89 4c 24 28          	mov    DWORD PTR [esp+0x28],ecx
10000212:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10000216:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
1000021a:	c7 44 24 14 00 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
10000222:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000226:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
1000022a:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000022e:	eb 3f                	jmp    1000026f <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xb5>
10000230:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000234:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10000238:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
1000023c:	8d 59 01             	lea    ebx,[ecx+0x1]
1000023f:	8b 00                	mov    eax,DWORD PTR [eax]
10000241:	8d 77 04             	lea    esi,[edi+0x4]
10000244:	ff 37                	push   DWORD PTR [edi]
10000246:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
1000024a:	51                   	push   ecx
1000024b:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
1000024f:	ff 50 24             	call   DWORD PTR [eax+0x24]
10000252:	ff 44 24 24          	inc    DWORD PTR [esp+0x24]
10000256:	83 c4 10             	add    esp,0x10
10000259:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000025d:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10000261:	89 5c 24 18          	mov    DWORD PTR [esp+0x18],ebx
10000265:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
10000269:	0f 8e 60 01 00 00    	jle    100003cf <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x215>
1000026f:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000273:	2b 44 24 14          	sub    eax,DWORD PTR [esp+0x14]
10000277:	c1 f8 03             	sar    eax,0x3
1000027a:	74 b4                	je     10000230 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x76>
1000027c:	f6 44 24 18 07       	test   BYTE PTR [esp+0x18],0x7
10000281:	75 ad                	jne    10000230 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x76>
10000283:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000287:	83 f8 64             	cmp    eax,0x64
1000028a:	7e 08                	jle    10000294 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xda>
1000028c:	c7 44 24 0c 64 00 00 00 	mov    DWORD PTR [esp+0xc],0x64
10000294:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000298:	31 d2                	xor    edx,edx
1000029a:	8d 34 c5 00 00 00 00 	lea    esi,[eax*8+0x0]
100002a1:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100002a5:	8b 04 90             	mov    eax,DWORD PTR [eax+edx*4]
100002a8:	89 c3                	mov    ebx,eax
100002aa:	89 c1                	mov    ecx,eax
100002ac:	c1 fb 15             	sar    ebx,0x15
100002af:	c1 f9 0a             	sar    ecx,0xa
100002b2:	83 e3 07             	and    ebx,0x7
100002b5:	83 e1 38             	and    ecx,0x38
100002b8:	09 cb                	or     ebx,ecx
100002ba:	8d 0c 00             	lea    ecx,[eax+eax*1]
100002bd:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100002c1:	81 e1 c0 01 00 00    	and    ecx,0x1c0
100002c7:	01 d0                	add    eax,edx
100002c9:	09 d9                	or     ecx,ebx
100002cb:	83 e0 01             	and    eax,0x1
100002ce:	42                   	inc    edx
100002cf:	8a 84 48 00 00 00 00 	mov    al,BYTE PTR [eax+ecx*2+0x0]	100002d2: R_386_32	dither16Data
100002d6:	88 82 7f 0e 00 10    	mov    BYTE PTR [edx+0x10000e7f],al	100002d8: R_386_32	.bss
100002dc:	39 f2                	cmp    edx,esi
100002de:	75 c1                	jne    100002a1 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xe7>
100002e0:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100002e4:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
100002e8:	8d 04 90             	lea    eax,[eax+edx*4]
100002eb:	03 7c 24 20          	add    edi,DWORD PTR [esp+0x20]
100002ef:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100002f3:	c1 ff 03             	sar    edi,0x3
100002f6:	31 c9                	xor    ecx,ecx
100002f8:	81 ef 00 00 f6 3d    	sub    edi,0x3df60000
100002fe:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10000302:	80 b8 61 01 00 00 01 	cmp    BYTE PTR [eax+0x161],0x1
10000309:	19 c0                	sbb    eax,eax
1000030b:	83 e0 03             	and    eax,0x3
1000030e:	40                   	inc    eax
1000030f:	39 c1                	cmp    ecx,eax
10000311:	0f 8d 9b 00 00 00    	jge    100003b2 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x1f8>
10000317:	51                   	push   ecx
10000318:	be 01 00 00 00       	mov    esi,0x1
1000031d:	89 4c 24 20          	mov    DWORD PTR [esp+0x20],ecx
10000321:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
10000325:	e8 fc ff ff ff       	call   10000326 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x16c>	10000326: R_386_PC32	VGAVideo::setPlane(int)
1000032a:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
1000032e:	58                   	pop    eax
1000032f:	d3 e6                	shl    esi,cl
10000331:	5a                   	pop    edx
10000332:	31 c0                	xor    eax,eax
10000334:	0f b6 14 c5 80 0e 00 10 	movzx  edx,BYTE PTR [eax*8+0x10000e80]	10000338: R_386_32	.bss
1000033c:	0f b6 1c c5 81 0e 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10000e81]	10000340: R_386_32	.bss
10000344:	21 f2                	and    edx,esi
10000346:	21 f3                	and    ebx,esi
10000348:	01 d2                	add    edx,edx
1000034a:	09 d3                	or     ebx,edx
1000034c:	0f b6 14 c5 82 0e 00 10 	movzx  edx,BYTE PTR [eax*8+0x10000e82]	10000350: R_386_32	.bss
10000354:	01 db                	add    ebx,ebx
10000356:	21 f2                	and    edx,esi
10000358:	09 da                	or     edx,ebx
1000035a:	0f b6 1c c5 83 0e 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10000e83]	1000035e: R_386_32	.bss
10000362:	01 d2                	add    edx,edx
10000364:	21 f3                	and    ebx,esi
10000366:	09 d3                	or     ebx,edx
10000368:	0f b6 14 c5 84 0e 00 10 	movzx  edx,BYTE PTR [eax*8+0x10000e84]	1000036c: R_386_32	.bss
10000370:	01 db                	add    ebx,ebx
10000372:	21 f2                	and    edx,esi
10000374:	09 da                	or     edx,ebx
10000376:	0f b6 1c c5 85 0e 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10000e85]	1000037a: R_386_32	.bss
1000037e:	01 d2                	add    edx,edx
10000380:	21 f3                	and    ebx,esi
10000382:	09 d3                	or     ebx,edx
10000384:	0f b6 14 c5 86 0e 00 10 	movzx  edx,BYTE PTR [eax*8+0x10000e86]	10000388: R_386_32	.bss
1000038c:	01 db                	add    ebx,ebx
1000038e:	21 f2                	and    edx,esi
10000390:	09 da                	or     edx,ebx
10000392:	0f b6 1c c5 87 0e 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10000e87]	10000396: R_386_32	.bss
1000039a:	01 d2                	add    edx,edx
1000039c:	21 f3                	and    ebx,esi
1000039e:	09 da                	or     edx,ebx
100003a0:	d3 ea                	shr    edx,cl
100003a2:	88 14 07             	mov    BYTE PTR [edi+eax*1],dl
100003a5:	40                   	inc    eax
100003a6:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
100003aa:	75 88                	jne    10000334 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x17a>
100003ac:	41                   	inc    ecx
100003ad:	e9 4c ff ff ff       	jmp    100002fe <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x144>
100003b2:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100003b6:	c1 e0 03             	shl    eax,0x3
100003b9:	01 44 24 14          	add    DWORD PTR [esp+0x14],eax
100003bd:	01 44 24 18          	add    DWORD PTR [esp+0x18],eax
100003c1:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100003c5:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
100003c9:	0f 8f a0 fe ff ff    	jg     1000026f <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xb5>
100003cf:	ff 44 24 48          	inc    DWORD PTR [esp+0x48]
100003d3:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
100003d7:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
100003db:	8b bf 58 01 00 00    	mov    edi,DWORD PTR [edi+0x158]
100003e1:	01 7c 24 20          	add    DWORD PTR [esp+0x20],edi
100003e5:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
100003e9:	01 7c 24 24          	add    DWORD PTR [esp+0x24],edi
100003ed:	39 44 24 48          	cmp    DWORD PTR [esp+0x48],eax
100003f1:	0f 85 1f fe ff ff    	jne    10000216 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x5c>
100003f7:	83 c4 30             	add    esp,0x30
100003fa:	5b                   	pop    ebx
100003fb:	5e                   	pop    esi
100003fc:	5f                   	pop    edi
100003fd:	c3                   	ret    

100003fe <VGAVideo::putrect(int, int, int, int, unsigned int)>:
100003fe:	57                   	push   edi
100003ff:	56                   	push   esi
10000400:	53                   	push   ebx
10000401:	83 ec 30             	sub    esp,0x30
10000404:	8b 4c 24 54          	mov    ecx,DWORD PTR [esp+0x54]
10000408:	8b 5c 24 40          	mov    ebx,DWORD PTR [esp+0x40]
1000040c:	89 ca                	mov    edx,ecx
1000040e:	89 c8                	mov    eax,ecx
10000410:	c1 fa 15             	sar    edx,0x15
10000413:	c1 f8 0a             	sar    eax,0xa
10000416:	83 e2 07             	and    edx,0x7
10000419:	83 e0 38             	and    eax,0x38
1000041c:	01 c9                	add    ecx,ecx
1000041e:	09 d0                	or     eax,edx
10000420:	89 ca                	mov    edx,ecx
10000422:	81 e2 c0 01 00 00    	and    edx,0x1c0
10000428:	09 d0                	or     eax,edx
1000042a:	0f b6 bc 00 00 00 00 00 	movzx  edi,BYTE PTR [eax+eax*1+0x0]	1000042e: R_386_32	dither16Data
10000432:	0f b6 84 00 01 00 00 00 	movzx  eax,BYTE PTR [eax+eax*1+0x1]	10000436: R_386_32	dither16Data
1000043a:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
1000043e:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000442:	8b 7c 24 50          	mov    edi,DWORD PTR [esp+0x50]
10000446:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
1000044a:	03 7c 24 48          	add    edi,DWORD PTR [esp+0x48]
1000044e:	03 44 24 44          	add    eax,DWORD PTR [esp+0x44]
10000452:	89 7c 24 08          	mov    DWORD PTR [esp+0x8],edi
10000456:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
1000045a:	39 44 24 44          	cmp    DWORD PTR [esp+0x44],eax
1000045e:	0f 8d 8a 01 00 00    	jge    100005ee <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1f0>
10000464:	8a 83 61 01 00 00    	mov    al,BYTE PTR [ebx+0x161]
1000046a:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
1000046e:	8b 54 24 48          	mov    edx,DWORD PTR [esp+0x48]
10000472:	2b 7c 24 44          	sub    edi,DWORD PTR [esp+0x44]
10000476:	0f af 93 58 01 00 00 	imul   edx,DWORD PTR [ebx+0x158]
1000047d:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
10000481:	03 54 24 44          	add    edx,DWORD PTR [esp+0x44]
10000485:	c1 fa 03             	sar    edx,0x3
10000488:	c1 ff 03             	sar    edi,0x3
1000048b:	89 54 24 14          	mov    DWORD PTR [esp+0x14],edx
1000048f:	89 7c 24 24          	mov    DWORD PTR [esp+0x24],edi
10000493:	74 11                	je     100004a6 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xa8>
10000495:	8b 7c 24 44          	mov    edi,DWORD PTR [esp+0x44]
10000499:	83 e7 07             	and    edi,0x7
1000049c:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
100004a0:	0f 84 64 01 00 00    	je     1000060a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x20c>
100004a6:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
100004aa:	f7 d2                	not    edx
100004ac:	89 d7                	mov    edi,edx
100004ae:	ba fe ff ff ff       	mov    edx,0xfffffffe
100004b3:	83 e7 07             	and    edi,0x7
100004b6:	89 f9                	mov    ecx,edi
100004b8:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
100004bc:	d3 c2                	rol    edx,cl
100004be:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
100004c2:	8b 54 24 48          	mov    edx,DWORD PTR [esp+0x48]
100004c6:	03 54 24 44          	add    edx,DWORD PTR [esp+0x44]
100004ca:	83 e2 01             	and    edx,0x1
100004cd:	0f 85 9e 02 00 00    	jne    10000771 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x373>
100004d3:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
100004d7:	89 7c 24 24          	mov    DWORD PTR [esp+0x24],edi
100004db:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
100004df:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
100004e3:	3c 01                	cmp    al,0x1
100004e5:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
100004ed:	19 d2                	sbb    edx,edx
100004ef:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
100004f3:	83 e2 03             	and    edx,0x3
100004f6:	42                   	inc    edx
100004f7:	39 d7                	cmp    edi,edx
100004f9:	0f 8d dd 00 00 00    	jge    100005dc <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1de>
100004ff:	57                   	push   edi
10000500:	53                   	push   ebx
10000501:	e8 fc ff ff ff       	call   10000502 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x104>	10000502: R_386_PC32	VGAVideo::setPlane(int)
10000506:	58                   	pop    eax
10000507:	5a                   	pop    edx
10000508:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
1000050c:	39 7c 24 18          	cmp    DWORD PTR [esp+0x18],edi
10000510:	0f 84 a5 01 00 00    	je     100006bb <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2bd>
10000516:	8a 4c 24 04          	mov    cl,BYTE PTR [esp+0x4]
1000051a:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
1000051e:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000522:	d3 ff                	sar    edi,cl
10000524:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10000528:	83 e7 01             	and    edi,0x1
1000052b:	d3 e7                	shl    edi,cl
1000052d:	39 44 24 48          	cmp    DWORD PTR [esp+0x48],eax
10000531:	0f 8d 4f 02 00 00    	jge    10000786 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x388>
10000537:	8a 44 24 10          	mov    al,BYTE PTR [esp+0x10]
1000053b:	8b 4c 24 48          	mov    ecx,DWORD PTR [esp+0x48]
1000053f:	88 04 24             	mov    BYTE PTR [esp],al
10000542:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10000546:	8a 04 24             	mov    al,BYTE PTR [esp]
10000549:	83 c1 02             	add    ecx,0x2
1000054c:	22 82 00 00 0a c2    	and    al,BYTE PTR [edx-0x3df60000]
10000552:	09 f8                	or     eax,edi
10000554:	88 82 00 00 0a c2    	mov    BYTE PTR [edx-0x3df60000],al
1000055a:	8b 83 58 01 00 00    	mov    eax,DWORD PTR [ebx+0x158]
10000560:	89 c6                	mov    esi,eax
10000562:	c1 fe 02             	sar    esi,0x2
10000565:	01 f2                	add    edx,esi
10000567:	39 4c 24 08          	cmp    DWORD PTR [esp+0x8],ecx
1000056b:	7f d9                	jg     10000546 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x148>
1000056d:	c1 f8 03             	sar    eax,0x3
10000570:	8a 4c 24 04          	mov    cl,BYTE PTR [esp+0x4]
10000574:	03 44 24 14          	add    eax,DWORD PTR [esp+0x14]
10000578:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
1000057c:	8b 7c 24 48          	mov    edi,DWORD PTR [esp+0x48]
10000580:	d3 fe                	sar    esi,cl
10000582:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10000586:	83 e6 01             	and    esi,0x1
10000589:	d3 e6                	shl    esi,cl
1000058b:	8d 4f 01             	lea    ecx,[edi+0x1]
1000058e:	83 7c 24 50 01       	cmp    DWORD PTR [esp+0x50],0x1
10000593:	7e 29                	jle    100005be <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1c0>
10000595:	0f b6 7c 24 10       	movzx  edi,BYTE PTR [esp+0x10]
1000059a:	89 fa                	mov    edx,edi
1000059c:	83 c1 02             	add    ecx,0x2
1000059f:	22 90 00 00 0a c2    	and    dl,BYTE PTR [eax-0x3df60000]
100005a5:	09 f2                	or     edx,esi
100005a7:	88 90 00 00 0a c2    	mov    BYTE PTR [eax-0x3df60000],dl
100005ad:	8b 93 58 01 00 00    	mov    edx,DWORD PTR [ebx+0x158]
100005b3:	c1 fa 02             	sar    edx,0x2
100005b6:	01 d0                	add    eax,edx
100005b8:	39 4c 24 08          	cmp    DWORD PTR [esp+0x8],ecx
100005bc:	7f dc                	jg     1000059a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x19c>
100005be:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
100005c2:	8a 83 61 01 00 00    	mov    al,BYTE PTR [ebx+0x161]
100005c8:	3c 01                	cmp    al,0x1
100005ca:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
100005ce:	19 d2                	sbb    edx,edx
100005d0:	83 e2 03             	and    edx,0x3
100005d3:	42                   	inc    edx
100005d4:	39 d7                	cmp    edi,edx
100005d6:	0f 8c 23 ff ff ff    	jl     100004ff <VGAVideo::putrect(int, int, int, int, unsigned int)+0x101>
100005dc:	ff 44 24 44          	inc    DWORD PTR [esp+0x44]
100005e0:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
100005e4:	3b 7c 24 44          	cmp    edi,DWORD PTR [esp+0x44]
100005e8:	0f 8f 7c fe ff ff    	jg     1000046a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x6c>
100005ee:	83 c4 30             	add    esp,0x30
100005f1:	5b                   	pop    ebx
100005f2:	5e                   	pop    esi
100005f3:	5f                   	pop    edi
100005f4:	c3                   	ret    
100005f5:	47                   	inc    edi
100005f6:	39 7c 24 0c          	cmp    DWORD PTR [esp+0xc],edi
100005fa:	0f 85 8c 00 00 00    	jne    1000068c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x28e>
10000600:	ff 44 24 1c          	inc    DWORD PTR [esp+0x1c]
10000604:	8a 83 61 01 00 00    	mov    al,BYTE PTR [ebx+0x161]
1000060a:	3c 01                	cmp    al,0x1
1000060c:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10000610:	19 d2                	sbb    edx,edx
10000612:	83 e2 03             	and    edx,0x3
10000615:	42                   	inc    edx
10000616:	39 d7                	cmp    edi,edx
10000618:	0f 8d 1f 01 00 00    	jge    1000073d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x33f>
1000061e:	57                   	push   edi
1000061f:	53                   	push   ebx
10000620:	e8 fc ff ff ff       	call   10000621 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x223>	10000621: R_386_PC32	VGAVideo::setPlane(int)
10000625:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000629:	89 f9                	mov    ecx,edi
1000062b:	d3 f8                	sar    eax,cl
1000062d:	59                   	pop    ecx
1000062e:	a8 01                	test   al,0x1
10000630:	5e                   	pop    esi
10000631:	0f 84 e3 00 00 00    	je     1000071a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x31c>
10000637:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000063b:	8a 4c 24 1c          	mov    cl,BYTE PTR [esp+0x1c]
1000063f:	d3 f8                	sar    eax,cl
10000641:	83 e0 01             	and    eax,0x1
10000644:	83 f8 01             	cmp    eax,0x1
10000647:	19 ff                	sbb    edi,edi
10000649:	89 fa                	mov    edx,edi
1000064b:	89 f8                	mov    eax,edi
1000064d:	83 e2 56             	and    edx,0x56
10000650:	83 e0 ab             	and    eax,0xffffffab
10000653:	4a                   	dec    edx
10000654:	05 ff 00 00 00       	add    eax,0xff
10000659:	88 54 24 04          	mov    BYTE PTR [esp+0x4],dl
1000065d:	89 04 24             	mov    DWORD PTR [esp],eax
10000660:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000664:	39 44 24 48          	cmp    DWORD PTR [esp+0x48],eax
10000668:	7d 96                	jge    10000600 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x202>
1000066a:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000066e:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
10000672:	89 d7                	mov    edi,edx
10000674:	01 d6                	add    esi,edx
10000676:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
1000067a:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
1000067e:	8b 74 24 48          	mov    esi,DWORD PTR [esp+0x48]
10000682:	01 d6                	add    esi,edx
10000684:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
10000688:	89 d6                	mov    esi,edx
1000068a:	01 c6                	add    esi,eax
1000068c:	89 fa                	mov    edx,edi
1000068e:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000692:	eb 1d                	jmp    100006b1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2b3>
10000694:	8a 0c 24             	mov    cl,BYTE PTR [esp]
10000697:	88 8a 00 00 0a c2    	mov    BYTE PTR [edx-0x3df60000],cl
1000069d:	40                   	inc    eax
1000069e:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
100006a4:	c1 f9 03             	sar    ecx,0x3
100006a7:	01 ca                	add    edx,ecx
100006a9:	39 f0                	cmp    eax,esi
100006ab:	0f 84 44 ff ff ff    	je     100005f5 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1f7>
100006b1:	a8 01                	test   al,0x1
100006b3:	74 df                	je     10000694 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x296>
100006b5:	8a 4c 24 04          	mov    cl,BYTE PTR [esp+0x4]
100006b9:	eb dc                	jmp    10000697 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x299>
100006bb:	8a 4c 24 04          	mov    cl,BYTE PTR [esp+0x4]
100006bf:	8b 74 24 18          	mov    esi,DWORD PTR [esp+0x18]
100006c3:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100006c7:	d3 fe                	sar    esi,cl
100006c9:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
100006cd:	83 e6 01             	and    esi,0x1
100006d0:	d3 e6                	shl    esi,cl
100006d2:	39 44 24 48          	cmp    DWORD PTR [esp+0x48],eax
100006d6:	0f 8d e2 fe ff ff    	jge    100005be <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1c0>
100006dc:	0f b6 7c 24 10       	movzx  edi,BYTE PTR [esp+0x10]
100006e1:	8b 4c 24 48          	mov    ecx,DWORD PTR [esp+0x48]
100006e5:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100006e9:	89 fa                	mov    edx,edi
100006eb:	41                   	inc    ecx
100006ec:	22 90 00 00 0a c2    	and    dl,BYTE PTR [eax-0x3df60000]
100006f2:	09 f2                	or     edx,esi
100006f4:	88 90 00 00 0a c2    	mov    BYTE PTR [eax-0x3df60000],dl
100006fa:	8b 93 58 01 00 00    	mov    edx,DWORD PTR [ebx+0x158]
10000700:	c1 fa 03             	sar    edx,0x3
10000703:	01 d0                	add    eax,edx
10000705:	39 4c 24 08          	cmp    DWORD PTR [esp+0x8],ecx
10000709:	75 de                	jne    100006e9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2eb>
1000070b:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
1000070f:	8a 83 61 01 00 00    	mov    al,BYTE PTR [ebx+0x161]
10000715:	e9 ae fe ff ff       	jmp    100005c8 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1ca>
1000071a:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
1000071e:	8a 4c 24 1c          	mov    cl,BYTE PTR [esp+0x1c]
10000722:	d3 ff                	sar    edi,cl
10000724:	83 e7 01             	and    edi,0x1
10000727:	89 3c 24             	mov    DWORD PTR [esp],edi
1000072a:	74 3b                	je     10000767 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x369>
1000072c:	c6 44 24 04 aa       	mov    BYTE PTR [esp+0x4],0xaa
10000731:	c7 04 24 55 00 00 00 	mov    DWORD PTR [esp],0x55
10000738:	e9 23 ff ff ff       	jmp    10000660 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x262>
1000073d:	8b 7c 24 44          	mov    edi,DWORD PTR [esp+0x44]
10000741:	8b 54 24 2c          	mov    edx,DWORD PTR [esp+0x2c]
10000745:	83 e2 f8             	and    edx,0xfffffff8
10000748:	8d 7c 17 ff          	lea    edi,[edi+edx*1-0x1]
1000074c:	89 7c 24 44          	mov    DWORD PTR [esp+0x44],edi
10000750:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
10000754:	ff 44 24 44          	inc    DWORD PTR [esp+0x44]
10000758:	3b 7c 24 44          	cmp    edi,DWORD PTR [esp+0x44]
1000075c:	0f 8f 08 fd ff ff    	jg     1000046a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x6c>
10000762:	e9 87 fe ff ff       	jmp    100005ee <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1f0>
10000767:	c6 44 24 04 00       	mov    BYTE PTR [esp+0x4],0x0
1000076c:	e9 ef fe ff ff       	jmp    10000660 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x262>
10000771:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
10000775:	89 7c 24 24          	mov    DWORD PTR [esp+0x24],edi
10000779:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
1000077d:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
10000781:	e9 5d fd ff ff       	jmp    100004e3 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xe5>
10000786:	8b 83 58 01 00 00    	mov    eax,DWORD PTR [ebx+0x158]
1000078c:	e9 dc fd ff ff       	jmp    1000056d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x16f>
10000791:	90                   	nop

10000792 <VGAVideo::putpixel(int, int, unsigned int)>:
10000792:	57                   	push   edi
10000793:	56                   	push   esi
10000794:	53                   	push   ebx
10000795:	83 ec 0c             	sub    esp,0xc
10000798:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
1000079c:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
100007a0:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100007a4:	89 c3                	mov    ebx,eax
100007a6:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
100007aa:	c1 fb 15             	sar    ebx,0x15
100007ad:	0f af 97 58 01 00 00 	imul   edx,DWORD PTR [edi+0x158]
100007b4:	83 e3 07             	and    ebx,0x7
100007b7:	01 ca                	add    edx,ecx
100007b9:	89 d6                	mov    esi,edx
100007bb:	89 ca                	mov    edx,ecx
100007bd:	c1 fe 03             	sar    esi,0x3
100007c0:	03 4c 24 24          	add    ecx,DWORD PTR [esp+0x24]
100007c4:	f7 d2                	not    edx
100007c6:	83 e1 01             	and    ecx,0x1
100007c9:	83 e2 07             	and    edx,0x7
100007cc:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
100007d0:	89 c2                	mov    edx,eax
100007d2:	c1 fa 0a             	sar    edx,0xa
100007d5:	83 e2 38             	and    edx,0x38
100007d8:	09 da                	or     edx,ebx
100007da:	8d 1c 00             	lea    ebx,[eax+eax*1]
100007dd:	81 e3 c0 01 00 00    	and    ebx,0x1c0
100007e3:	09 da                	or     edx,ebx
100007e5:	31 db                	xor    ebx,ebx
100007e7:	0f b6 84 51 00 00 00 00 	movzx  eax,BYTE PTR [ecx+edx*2+0x0]	100007eb: R_386_32	dither16Data
100007ef:	8a 4c 24 04          	mov    cl,BYTE PTR [esp+0x4]
100007f3:	89 04 24             	mov    DWORD PTR [esp],eax
100007f6:	b8 fe ff ff ff       	mov    eax,0xfffffffe
100007fb:	d3 c0                	rol    eax,cl
100007fd:	80 bf 61 01 00 00 00 	cmp    BYTE PTR [edi+0x161],0x0
10000804:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000808:	74 3a                	je     10000844 <VGAVideo::putpixel(int, int, unsigned int)+0xb2>
1000080a:	85 db                	test   ebx,ebx
1000080c:	75 3b                	jne    10000849 <VGAVideo::putpixel(int, int, unsigned int)+0xb7>
1000080e:	53                   	push   ebx
1000080f:	43                   	inc    ebx
10000810:	57                   	push   edi
10000811:	e8 fc ff ff ff       	call   10000812 <VGAVideo::putpixel(int, int, unsigned int)+0x80>	10000812: R_386_PC32	VGAVideo::setPlane(int)
10000816:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
1000081a:	8a 44 24 10          	mov    al,BYTE PTR [esp+0x10]
1000081e:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10000822:	22 86 00 00 0a c2    	and    al,BYTE PTR [esi-0x3df60000]
10000828:	d1 7c 24 08          	sar    DWORD PTR [esp+0x8],1
1000082c:	83 e2 01             	and    edx,0x1
1000082f:	d3 e2                	shl    edx,cl
10000831:	09 d0                	or     eax,edx
10000833:	88 86 00 00 0a c2    	mov    BYTE PTR [esi-0x3df60000],al
10000839:	58                   	pop    eax
1000083a:	80 bf 61 01 00 00 00 	cmp    BYTE PTR [edi+0x161],0x0
10000841:	5a                   	pop    edx
10000842:	75 c6                	jne    1000080a <VGAVideo::putpixel(int, int, unsigned int)+0x78>
10000844:	83 fb 04             	cmp    ebx,0x4
10000847:	75 c5                	jne    1000080e <VGAVideo::putpixel(int, int, unsigned int)+0x7c>
10000849:	83 c4 0c             	add    esp,0xc
1000084c:	5b                   	pop    ebx
1000084d:	5e                   	pop    esi
1000084e:	5f                   	pop    edi
1000084f:	c3                   	ret    

10000850 <VGAVideo::~VGAVideo()>:
10000850:	55                   	push   ebp
10000851:	89 e5                	mov    ebp,esp
10000853:	83 ec 08             	sub    esp,0x8
10000856:	ba 08 00 00 00       	mov    edx,0x8	10000857: R_386_32	vtable for VGAVideo
1000085b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000085e:	89 10                	mov    DWORD PTR [eax],edx
10000860:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000863:	83 ec 0c             	sub    esp,0xc
10000866:	50                   	push   eax
10000867:	e8 fc ff ff ff       	call   10000868 <VGAVideo::~VGAVideo()+0x18>	10000868: R_386_PC32	Video::~Video()
1000086c:	83 c4 10             	add    esp,0x10
1000086f:	90                   	nop
10000870:	c9                   	leave  
10000871:	c3                   	ret    

10000872 <VGAVideo::~VGAVideo()>:
10000872:	55                   	push   ebp
10000873:	89 e5                	mov    ebp,esp
10000875:	83 ec 08             	sub    esp,0x8
10000878:	83 ec 0c             	sub    esp,0xc
1000087b:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000087e:	e8 fc ff ff ff       	call   1000087f <VGAVideo::~VGAVideo()+0xd>	1000087f: R_386_PC32	VGAVideo::~VGAVideo()
10000883:	83 c4 10             	add    esp,0x10
10000886:	83 ec 08             	sub    esp,0x8
10000889:	68 64 01 00 00       	push   0x164
1000088e:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000891:	e8 fc ff ff ff       	call   10000892 <VGAVideo::~VGAVideo()+0x20>	10000892: R_386_PC32	operator delete(void*, unsigned long)
10000896:	83 c4 10             	add    esp,0x10
10000899:	c9                   	leave  
1000089a:	c3                   	ret    
1000089b:	90                   	nop

1000089c <PHYS_RAM_TABLE_SIZE>:
1000089c:	13 05 00 00                                         ....

100008a0 <PHYS_HIGHEST_UNUSED_ADDRESS>:
100008a0:	24 05 00 00                                         $...

100008a4 <PHYS_RAM_TABLE>:
100008a4:	00 06 00 00                                         ....

100008a8 <PHYS_DMA_MEMORY_1>:
100008a8:	00 00 01 00                                         ....

100008ac <PHYS_PHYS_PAGE_BITMAP>:
100008ac:	00 00 02 00                                         ....

100008b0 <PHYS_VIRT_PAGE_BITMAP>:
100008b0:	00 00 04 00                                         ....

100008b4 <PHYS_DMA_MEMORY_2>:
100008b4:	00 00 06 00                                         ....

100008b8 <PHYS_ALLOCED_VIRT_PAGES>:
100008b8:	00 00 10 00                                         ....

100008bc <PHYS_KRNL_PAGE_DIRECTORY>:
100008bc:	00 10 00 00                                         ....

100008c0 <VIRT_KERNEL_BASE>:
100008c0:	00 00 00 c0                                         ....

100008c4 <VIRT_LOW_MEGS>:
100008c4:	00 00 00 c2                                         ....

100008c8 <VIRT_CPU_SPECIFIC>:
100008c8:	00 00 40 c2                                         ..@.

100008cc <VIRT_RECURSIVE_SPOT_1>:
100008cc:	00 00 80 c2                                         ....

100008d0 <VIRT_RECURSIVE_SPOT_2>:
100008d0:	00 00 c0 c2                                         ....

100008d4 <VIRT_DMA_MEMORY_1>:
100008d4:	00 00 01 c2                                         ....

100008d8 <SIZE_DMA_MEMORY_1>:
100008d8:	00 00 01 00                                         ....

100008dc <VIRT_DMA_MEMORY_2>:
100008dc:	00 00 06 c2                                         ....

100008e0 <SIZE_DMA_MEMORY_2>:
100008e0:	00 00 02 00                                         ....

100008e4 <VIRT_KRNL_PAGE_DIRECTORY>:
100008e4:	00 10 00 c2                                         ....

100008e8 <VIRT_PHYS_PAGE_BITMAP>:
100008e8:	00 00 02 c2                                         ....

100008ec <SIZE_PHYS_PAGE_BITMAP>:
100008ec:	00 00 02 00                                         ....

100008f0 <VIRT_VIRT_PAGE_BITMAP>:
100008f0:	00 00 04 c2                                         ....

100008f4 <SIZE_VIRT_PAGE_BITMAP>:
100008f4:	00 80 00 00                                         ....

100008f8 <VIRT_RAM_TABLE>:
100008f8:	00 06 00 c2                                         ....

100008fc <VIRT_RAM_TABLE_SIZE>:
100008fc:	13 05 00 c2                                         ....

10000900 <VIRT_HIGHEST_UNUSED_ADDRESS>:
10000900:	24 05 00 c2                                         $...

10000904 <SIZE_APP_STACK_USER>:
10000904:	00 00 18 00                                         ....

10000908 <SIZE_APP_STACK_KRNL>:
10000908:	00 00 08 00                                         ....

1000090c <SIZE_APP_STACK_TOTAL>:
1000090c:	00 00 20 00                                         .. .

10000910 <VIRT_APP_DATA>:
10000910:	00 00 00 10                                         ....

10000914 <VIRT_APP_STACK_USER_TOP>:
10000914:	00 00 00 02                                         ....

10000918 <VIRT_APP_STACK_KRNL_TOP>:
10000918:	00 00 e8 01                                         ....

1000091c <VIRT_HEAP_MIN>:
1000091c:	00 00 00 c8                                         ....

10000920 <VIRT_HEAP_MAX>:
10000920:	ff ff ff ef                                         ....

10000924 <VIRT_SBRK_MIN>:
10000924:	00 00 00 f0                                         ....

10000928 <VIRT_SBRK_MAX>:
10000928:	00 00 c0 ff                                         ....

1000092c <VIRT_ALLOCED_VIRT_PAGES>:
1000092c:	00 00 10 c2                                         ....

10000930 <VIRT_ACPI_DRIVER>:
10000930:	00 40 48 c2                                         .@H.

10000934 <TERMINAL_KEYBUFFER_IN_SIZE>:
10000934:	96 00 00 00                                         ....

10000938 <TERMINAL_KEYBUFFER_OUT_SIZE>:
10000938:	2c 01 00 00 56 47 41 20 44 69 73 70 6c 61 79 00     ,...VGA Display.
10000948:	43 3a 2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d     C:/Banana/System
10000958:	2f 56 47 41 53 45 54 2e 43 4f 4d 00 53 65 74 20     /VGASET.COM.Set 
10000968:	74 6f 20 76 69 64 65 6f 20 6d 6f 64 65 20 25 64     to video mode %d
10000978:	0a 00 66 90                                         ..f.

1000097c <vtable for VGAVideo>:
	...
	10000984: R_386_32	VGAVideo::~VGAVideo()
	10000988: R_386_32	VGAVideo::~VGAVideo()
	1000098c: R_386_32	VGAVideo::open(int, int, void*)
	10000990: R_386_32	VGAVideo::close(int, int, void*)
	10000994: R_386_32	Device::hibernate()
	10000998: R_386_32	Device::wake()
	1000099c: R_386_32	Device::detect()
	100009a0: R_386_32	Device::disableLegacy()
	100009a4: R_386_32	Device::powerSaving(PowerSavingLevel)
	100009a8: R_386_32	VGAVideo::putpixel(int, int, unsigned int)
	100009ac: R_386_32	VGAVideo::putrect(int, int, int, int, unsigned int)
	100009b0: R_386_32	Video::putTGA(int, int, unsigned char*, int)
	100009b4: R_386_32	Video::drawCursor(int, int, unsigned char*, int)
	100009b8: R_386_32	VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)
	100009bc: R_386_32	Video::blit(unsigned int*, int, int, int, int)
	100009c0: R_386_32	Video::clearScreen(unsigned int)
