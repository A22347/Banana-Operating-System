
packages/banana/32/0002/vga.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	53                   	push   ebx
10000004:	83 ec 14             	sub    esp,0x14
10000007:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000000a:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
1000000d:	c7 45 ec 6c 01 00 00 	mov    DWORD PTR [ebp-0x14],0x16c
10000014:	83 ec 0c             	sub    esp,0xc
10000017:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
1000001a:	e8 fc ff ff ff       	call   1000001b <start(void*)+0x1b>	1000001b: R_386_PC32	malloc
1000001f:	83 c4 10             	add    esp,0x10
10000022:	89 c3                	mov    ebx,eax
10000024:	83 ec 0c             	sub    esp,0xc
10000027:	53                   	push   ebx
10000028:	e8 fc ff ff ff       	call   10000029 <start(void*)+0x29>	10000029: R_386_PC32	VGAVideo::VGAVideo()
1000002d:	83 c4 10             	add    esp,0x10
10000030:	89 5d f0             	mov    DWORD PTR [ebp-0x10],ebx
10000033:	83 ec 08             	sub    esp,0x8
10000036:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000039:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000003c:	e8 fc ff ff ff       	call   1000003d <start(void*)+0x3d>	1000003d: R_386_PC32	Device::addChild(Device*)
10000041:	83 c4 10             	add    esp,0x10
10000044:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000047:	8b 00                	mov    eax,DWORD PTR [eax]
10000049:	83 c0 08             	add    eax,0x8
1000004c:	8b 00                	mov    eax,DWORD PTR [eax]
1000004e:	6a 00                	push   0x0
10000050:	6a 00                	push   0x0
10000052:	6a 00                	push   0x0
10000054:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000057:	ff d0                	call   eax
10000059:	83 c4 10             	add    esp,0x10
1000005c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000005f:	a3 00 00 00 00       	mov    ds:0x0,eax	10000060: R_386_32	screen
10000064:	90                   	nop
10000065:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000068:	c9                   	leave  
10000069:	c3                   	ret    

1000006a <VGAVideo::setPlane(int)>:
1000006a:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000006e:	39 0d 40 0d 00 10    	cmp    DWORD PTR ds:0x10000d40,ecx	10000070: R_386_32	.data
10000074:	74 2b                	je     100000a1 <VGAVideo::setPlane(int)+0x37>
10000076:	89 0d 40 0d 00 10    	mov    DWORD PTR ds:0x10000d40,ecx	10000078: R_386_32	.data
1000007c:	b0 04                	mov    al,0x4
1000007e:	ba ce 03 00 00       	mov    edx,0x3ce
10000083:	ee                   	out    dx,al
10000084:	ba cf 03 00 00       	mov    edx,0x3cf
10000089:	88 c8                	mov    al,cl
1000008b:	ee                   	out    dx,al
1000008c:	b0 02                	mov    al,0x2
1000008e:	ba c4 03 00 00       	mov    edx,0x3c4
10000093:	ee                   	out    dx,al
10000094:	b8 01 00 00 00       	mov    eax,0x1
10000099:	ba c5 03 00 00       	mov    edx,0x3c5
1000009e:	d3 e0                	shl    eax,cl
100000a0:	ee                   	out    dx,al
100000a1:	c3                   	ret    

100000a2 <VGAVideo::VGAVideo()>:
100000a2:	55                   	push   ebp
100000a3:	89 e5                	mov    ebp,esp
100000a5:	83 ec 08             	sub    esp,0x8
100000a8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000ab:	83 ec 08             	sub    esp,0x8
100000ae:	68 b4 0c 00 10       	push   0x10000cb4	100000af: R_386_32	.text
100000b3:	50                   	push   eax
100000b4:	e8 fc ff ff ff       	call   100000b5 <VGAVideo::VGAVideo()+0x13>	100000b5: R_386_PC32	Video::Video(char const*)
100000b9:	83 c4 10             	add    esp,0x10
100000bc:	ba 08 00 00 00       	mov    edx,0x8	100000bd: R_386_32	vtable for VGAVideo
100000c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c4:	89 10                	mov    DWORD PTR [eax],edx
100000c6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c9:	c7 80 64 01 00 00 00 00 0a 00 	mov    DWORD PTR [eax+0x164],0xa0000
100000d3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000d6:	c7 80 68 01 00 00 12 00 00 00 	mov    DWORD PTR [eax+0x168],0x12
100000e0:	90                   	nop
100000e1:	c9                   	leave  
100000e2:	c3                   	ret    
100000e3:	90                   	nop

100000e4 <VGAVideo::readPixelApprox(int, int)>:
100000e4:	b8 80 80 80 00       	mov    eax,0x808080
100000e9:	c3                   	ret    

100000ea <VGAVideo::close(int, int, void*)>:
100000ea:	31 c0                	xor    eax,eax
100000ec:	c3                   	ret    

100000ed <get_bios_area_video_type()>:
100000ed:	a1 10 04 00 00       	mov    eax,ds:0x410
100000f2:	83 e0 30             	and    eax,0x30
100000f5:	c3                   	ret    

100000f6 <VGAVideo::open(int, int, void*)>:
100000f6:	57                   	push   edi
100000f7:	53                   	push   ebx
100000f8:	83 ec 14             	sub    esp,0x14
100000fb:	e8 fc ff ff ff       	call   100000fc <VGAVideo::open(int, int, void*)+0x6>	100000fc: R_386_PC32	get_bios_area_video_type()
10000100:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10000104:	83 f8 30             	cmp    eax,0x30
10000107:	0f 94 83 61 01 00 00 	sete   BYTE PTR [ebx+0x161]
1000010e:	f6 05 01 00 00 00 08 	test   BYTE PTR ds:0x1,0x8	10000110: R_386_32	sysBootSettings
10000115:	0f 84 af 00 00 00    	je     100001ca <VGAVideo::open(int, int, void*)+0xd4>
1000011b:	c6 83 61 01 00 00 01 	mov    BYTE PTR [ebx+0x161],0x1
10000122:	b8 11 00 00 00       	mov    eax,0x11
10000127:	83 ec 0c             	sub    esp,0xc
1000012a:	89 83 68 01 00 00    	mov    DWORD PTR [ebx+0x168],eax
10000130:	c7 83 58 01 00 00 80 02 00 00 	mov    DWORD PTR [ebx+0x158],0x280
1000013a:	c7 83 5c 01 00 00 e0 01 00 00 	mov    DWORD PTR [ebx+0x15c],0x1e0
10000144:	c7 83 64 01 00 00 00 00 0a 00 	mov    DWORD PTR [ebx+0x164],0xa0000
1000014e:	50                   	push   eax
1000014f:	50                   	push   eax
10000150:	68 90 00 00 00       	push   0x90
10000155:	6a 00                	push   0x0
10000157:	68 c0 0c 00 10       	push   0x10000cc0	10000158: R_386_32	.text
1000015c:	e8 fc ff ff ff       	call   1000015d <VGAVideo::open(int, int, void*)+0x67>	1000015d: R_386_PC32	Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
10000161:	83 c4 20             	add    esp,0x20
10000164:	e8 fc ff ff ff       	call   10000165 <VGAVideo::open(int, int, void*)+0x6f>	10000165: R_386_PC32	Vm::finish8086()
10000169:	83 ec 08             	sub    esp,0x8
1000016c:	ff b3 68 01 00 00    	push   DWORD PTR [ebx+0x168]
10000172:	68 d9 0c 00 10       	push   0x10000cd9	10000173: R_386_32	.text
10000177:	e8 fc ff ff ff       	call   10000178 <VGAVideo::open(int, int, void*)+0x82>	10000178: R_386_PC32	Dbg::kprintf(char const*, ...)
1000017c:	8b 83 64 01 00 00    	mov    eax,DWORD PTR [ebx+0x164]
10000182:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000187:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000018b:	58                   	pop    eax
1000018c:	5a                   	pop    edx
1000018d:	6a 00                	push   0x0
1000018f:	53                   	push   ebx
10000190:	e8 fc ff ff ff       	call   10000191 <VGAVideo::open(int, int, void*)+0x9b>	10000191: R_386_PC32	VGAVideo::setPlane(int)
10000195:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000199:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
1000019f:	83 c4 10             	add    esp,0x10
100001a2:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
100001a9:	85 c9                	test   ecx,ecx
100001ab:	79 03                	jns    100001b0 <VGAVideo::open(int, int, void*)+0xba>
100001ad:	83 c1 07             	add    ecx,0x7
100001b0:	c1 f9 03             	sar    ecx,0x3
100001b3:	31 c0                	xor    eax,eax
100001b5:	89 d7                	mov    edi,edx
100001b7:	f3 aa                	rep stos BYTE PTR es:[edi],al
100001b9:	80 bb 61 01 00 00 00 	cmp    BYTE PTR [ebx+0x161],0x0
100001c0:	74 19                	je     100001db <VGAVideo::open(int, int, void*)+0xe5>
100001c2:	83 c4 14             	add    esp,0x14
100001c5:	31 c0                	xor    eax,eax
100001c7:	5b                   	pop    ebx
100001c8:	5f                   	pop    edi
100001c9:	c3                   	ret    
100001ca:	83 f8 30             	cmp    eax,0x30
100001cd:	0f 95 c0             	setne  al
100001d0:	0f b6 c0             	movzx  eax,al
100001d3:	83 c0 11             	add    eax,0x11
100001d6:	e9 4c ff ff ff       	jmp    10000127 <VGAVideo::open(int, int, void*)+0x31>
100001db:	83 ec 08             	sub    esp,0x8
100001de:	6a 01                	push   0x1
100001e0:	53                   	push   ebx
100001e1:	e8 fc ff ff ff       	call   100001e2 <VGAVideo::open(int, int, void*)+0xec>	100001e2: R_386_PC32	VGAVideo::setPlane(int)
100001e6:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100001ea:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
100001f0:	83 c4 10             	add    esp,0x10
100001f3:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
100001fa:	85 c9                	test   ecx,ecx
100001fc:	78 7c                	js     1000027a <VGAVideo::open(int, int, void*)+0x184>
100001fe:	83 ec 08             	sub    esp,0x8
10000201:	31 c0                	xor    eax,eax
10000203:	89 d7                	mov    edi,edx
10000205:	c1 f9 03             	sar    ecx,0x3
10000208:	f3 aa                	rep stos BYTE PTR es:[edi],al
1000020a:	6a 02                	push   0x2
1000020c:	53                   	push   ebx
1000020d:	e8 fc ff ff ff       	call   1000020e <VGAVideo::open(int, int, void*)+0x118>	1000020e: R_386_PC32	VGAVideo::setPlane(int)
10000212:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000216:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
1000021c:	83 c4 10             	add    esp,0x10
1000021f:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
10000226:	85 c9                	test   ecx,ecx
10000228:	78 4b                	js     10000275 <VGAVideo::open(int, int, void*)+0x17f>
1000022a:	83 ec 08             	sub    esp,0x8
1000022d:	31 c0                	xor    eax,eax
1000022f:	89 d7                	mov    edi,edx
10000231:	c1 f9 03             	sar    ecx,0x3
10000234:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000236:	6a 03                	push   0x3
10000238:	53                   	push   ebx
10000239:	e8 fc ff ff ff       	call   1000023a <VGAVideo::open(int, int, void*)+0x144>	1000023a: R_386_PC32	VGAVideo::setPlane(int)
1000023e:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000242:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
10000248:	83 c4 10             	add    esp,0x10
1000024b:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
10000252:	85 c9                	test   ecx,ecx
10000254:	78 11                	js     10000267 <VGAVideo::open(int, int, void*)+0x171>
10000256:	c1 f9 03             	sar    ecx,0x3
10000259:	31 c0                	xor    eax,eax
1000025b:	89 d7                	mov    edi,edx
1000025d:	f3 aa                	rep stos BYTE PTR es:[edi],al
1000025f:	83 c4 14             	add    esp,0x14
10000262:	31 c0                	xor    eax,eax
10000264:	5b                   	pop    ebx
10000265:	5f                   	pop    edi
10000266:	c3                   	ret    
10000267:	83 c1 07             	add    ecx,0x7
1000026a:	31 c0                	xor    eax,eax
1000026c:	c1 f9 03             	sar    ecx,0x3
1000026f:	89 d7                	mov    edi,edx
10000271:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000273:	eb ea                	jmp    1000025f <VGAVideo::open(int, int, void*)+0x169>
10000275:	83 c1 07             	add    ecx,0x7
10000278:	eb b0                	jmp    1000022a <VGAVideo::open(int, int, void*)+0x134>
1000027a:	83 c1 07             	add    ecx,0x7
1000027d:	e9 7c ff ff ff       	jmp    100001fe <VGAVideo::open(int, int, void*)+0x108>

10000282 <monoPixelLookup(int, int, int)>:
10000282:	56                   	push   esi
10000283:	53                   	push   ebx
10000284:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
10000288:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000028c:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10000290:	89 da                	mov    edx,ebx
10000292:	01 c1                	add    ecx,eax
10000294:	c1 fa 0e             	sar    edx,0xe
10000297:	83 e1 01             	and    ecx,0x1
1000029a:	01 c0                	add    eax,eax
1000029c:	83 e2 03             	and    edx,0x3
1000029f:	83 e0 02             	and    eax,0x2
100002a2:	89 de                	mov    esi,ebx
100002a4:	09 c8                	or     eax,ecx
100002a6:	c1 fe 16             	sar    esi,0x16
100002a9:	89 d9                	mov    ecx,ebx
100002ab:	83 e6 03             	and    esi,0x3
100002ae:	c1 f9 06             	sar    ecx,0x6
100002b1:	83 e1 03             	and    ecx,0x3
100002b4:	81 fb bb bb bb 00    	cmp    ebx,0xbbbbbb
100002ba:	74 1b                	je     100002d7 <monoPixelLookup(int, int, int)+0x55>
100002bc:	8d 1c 32             	lea    ebx,[edx+esi*1]
100002bf:	8d 14 5a             	lea    edx,[edx+ebx*2]
100002c2:	5b                   	pop    ebx
100002c3:	01 d1                	add    ecx,edx
100002c5:	5e                   	pop    esi
100002c6:	ba 80 ea ff 00       	mov    edx,0xffea80
100002cb:	d3 ea                	shr    edx,cl
100002cd:	88 c1                	mov    cl,al
100002cf:	d3 ea                	shr    edx,cl
100002d1:	89 d0                	mov    eax,edx
100002d3:	83 e0 01             	and    eax,0x1
100002d6:	c3                   	ret    
100002d7:	b8 01 00 00 00       	mov    eax,0x1
100002dc:	5b                   	pop    ebx
100002dd:	5e                   	pop    esi
100002de:	c3                   	ret    
100002df:	90                   	nop

100002e0 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)>:
100002e0:	57                   	push   edi
100002e1:	56                   	push   esi
100002e2:	53                   	push   ebx
100002e3:	83 ec 30             	sub    esp,0x30
100002e6:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
100002ea:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
100002ee:	8b 7c 24 48          	mov    edi,DWORD PTR [esp+0x48]
100002f2:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100002f6:	0f af be 58 01 00 00 	imul   edi,DWORD PTR [esi+0x158]
100002fd:	85 c9                	test   ecx,ecx
100002ff:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10000303:	0f 8e 18 02 00 00    	jle    10000521 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x241>
10000309:	8b 5c 24 54          	mov    ebx,DWORD PTR [esp+0x54]
1000030d:	85 db                	test   ebx,ebx
1000030f:	0f 8e 0c 02 00 00    	jle    10000521 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x241>
10000315:	8d 3c 85 00 00 00 00 	lea    edi,[eax*4+0x0]
1000031c:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
10000320:	0f af 44 24 50       	imul   eax,DWORD PTR [esp+0x50]
10000325:	03 4c 24 48          	add    ecx,DWORD PTR [esp+0x48]
10000329:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
1000032d:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
10000331:	8d 04 82             	lea    eax,[edx+eax*4]
10000334:	89 4c 24 28          	mov    DWORD PTR [esp+0x28],ecx
10000338:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
1000033c:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10000340:	c7 44 24 14 00 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
10000348:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000034c:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10000350:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000354:	eb 3f                	jmp    10000395 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xb5>
10000356:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
1000035a:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
1000035e:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10000362:	8d 59 01             	lea    ebx,[ecx+0x1]
10000365:	8b 00                	mov    eax,DWORD PTR [eax]
10000367:	8d 77 04             	lea    esi,[edi+0x4]
1000036a:	ff 37                	push   DWORD PTR [edi]
1000036c:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
10000370:	51                   	push   ecx
10000371:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
10000375:	ff 50 24             	call   DWORD PTR [eax+0x24]
10000378:	ff 44 24 24          	inc    DWORD PTR [esp+0x24]
1000037c:	83 c4 10             	add    esp,0x10
1000037f:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000383:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
10000387:	89 5c 24 18          	mov    DWORD PTR [esp+0x18],ebx
1000038b:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
1000038f:	0f 8e 64 01 00 00    	jle    100004f9 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x219>
10000395:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000399:	2b 44 24 14          	sub    eax,DWORD PTR [esp+0x14]
1000039d:	c1 f8 03             	sar    eax,0x3
100003a0:	74 b4                	je     10000356 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x76>
100003a2:	f6 44 24 18 07       	test   BYTE PTR [esp+0x18],0x7
100003a7:	75 ad                	jne    10000356 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x76>
100003a9:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100003ad:	83 f8 64             	cmp    eax,0x64
100003b0:	7e 08                	jle    100003ba <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xda>
100003b2:	c7 44 24 10 64 00 00 00 	mov    DWORD PTR [esp+0x10],0x64
100003ba:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100003be:	8d 34 c5 00 00 00 00 	lea    esi,[eax*8+0x0]
100003c5:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100003c9:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
100003d0:	0f 84 52 01 00 00    	je     10000528 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x248>
100003d6:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100003da:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
100003de:	31 ff                	xor    edi,edi
100003e0:	8d 1c 08             	lea    ebx,[eax+ecx*1]
100003e3:	83 44 24 0c 04       	add    DWORD PTR [esp+0xc],0x4
100003e8:	8d 04 3b             	lea    eax,[ebx+edi*1]
100003eb:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
100003ef:	47                   	inc    edi
100003f0:	ff 74 24 48          	push   DWORD PTR [esp+0x48]
100003f4:	50                   	push   eax
100003f5:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
100003f8:	e8 fc ff ff ff       	call   100003f9 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x119>	100003f9: R_386_PC32	monoPixelLookup(int, int, int)
100003fd:	83 c4 0c             	add    esp,0xc
10000400:	88 87 df 11 00 10    	mov    BYTE PTR [edi+0x100011df],al	10000402: R_386_32	.bss
10000406:	39 f7                	cmp    edi,esi
10000408:	7c d9                	jl     100003e3 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x103>
1000040a:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
1000040e:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10000412:	8b 91 64 01 00 00    	mov    edx,DWORD PTR [ecx+0x164]
10000418:	03 44 24 20          	add    eax,DWORD PTR [esp+0x20]
1000041c:	31 c9                	xor    ecx,ecx
1000041e:	c1 f8 03             	sar    eax,0x3
10000421:	8d bc 10 00 00 00 c2 	lea    edi,[eax+edx*1-0x3e000000]
10000428:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
1000042c:	80 b8 61 01 00 00 01 	cmp    BYTE PTR [eax+0x161],0x1
10000433:	19 c0                	sbb    eax,eax
10000435:	83 e0 03             	and    eax,0x3
10000438:	40                   	inc    eax
10000439:	39 c1                	cmp    ecx,eax
1000043b:	0f 8d 9b 00 00 00    	jge    100004dc <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x1fc>
10000441:	51                   	push   ecx
10000442:	be 01 00 00 00       	mov    esi,0x1
10000447:	89 4c 24 20          	mov    DWORD PTR [esp+0x20],ecx
1000044b:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
1000044f:	e8 fc ff ff ff       	call   10000450 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x170>	10000450: R_386_PC32	VGAVideo::setPlane(int)
10000454:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10000458:	58                   	pop    eax
10000459:	d3 e6                	shl    esi,cl
1000045b:	5a                   	pop    edx
1000045c:	31 c0                	xor    eax,eax
1000045e:	0f b6 14 c5 e0 11 00 10 	movzx  edx,BYTE PTR [eax*8+0x100011e0]	10000462: R_386_32	.bss
10000466:	0f b6 1c c5 e1 11 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100011e1]	1000046a: R_386_32	.bss
1000046e:	21 f2                	and    edx,esi
10000470:	21 f3                	and    ebx,esi
10000472:	01 d2                	add    edx,edx
10000474:	09 d3                	or     ebx,edx
10000476:	0f b6 14 c5 e2 11 00 10 	movzx  edx,BYTE PTR [eax*8+0x100011e2]	1000047a: R_386_32	.bss
1000047e:	01 db                	add    ebx,ebx
10000480:	21 f2                	and    edx,esi
10000482:	09 da                	or     edx,ebx
10000484:	0f b6 1c c5 e3 11 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100011e3]	10000488: R_386_32	.bss
1000048c:	01 d2                	add    edx,edx
1000048e:	21 f3                	and    ebx,esi
10000490:	09 d3                	or     ebx,edx
10000492:	0f b6 14 c5 e4 11 00 10 	movzx  edx,BYTE PTR [eax*8+0x100011e4]	10000496: R_386_32	.bss
1000049a:	01 db                	add    ebx,ebx
1000049c:	21 f2                	and    edx,esi
1000049e:	09 da                	or     edx,ebx
100004a0:	0f b6 1c c5 e5 11 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100011e5]	100004a4: R_386_32	.bss
100004a8:	01 d2                	add    edx,edx
100004aa:	21 f3                	and    ebx,esi
100004ac:	09 d3                	or     ebx,edx
100004ae:	0f b6 14 c5 e6 11 00 10 	movzx  edx,BYTE PTR [eax*8+0x100011e6]	100004b2: R_386_32	.bss
100004b6:	01 db                	add    ebx,ebx
100004b8:	21 f2                	and    edx,esi
100004ba:	09 da                	or     edx,ebx
100004bc:	0f b6 1c c5 e7 11 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100011e7]	100004c0: R_386_32	.bss
100004c4:	01 d2                	add    edx,edx
100004c6:	21 f3                	and    ebx,esi
100004c8:	09 da                	or     edx,ebx
100004ca:	d3 ea                	shr    edx,cl
100004cc:	88 14 07             	mov    BYTE PTR [edi+eax*1],dl
100004cf:	40                   	inc    eax
100004d0:	39 44 24 10          	cmp    DWORD PTR [esp+0x10],eax
100004d4:	75 88                	jne    1000045e <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x17e>
100004d6:	41                   	inc    ecx
100004d7:	e9 4c ff ff ff       	jmp    10000428 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x148>
100004dc:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100004e0:	c1 e0 03             	shl    eax,0x3
100004e3:	01 44 24 14          	add    DWORD PTR [esp+0x14],eax
100004e7:	01 44 24 18          	add    DWORD PTR [esp+0x18],eax
100004eb:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100004ef:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
100004f3:	0f 8f 9c fe ff ff    	jg     10000395 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xb5>
100004f9:	ff 44 24 48          	inc    DWORD PTR [esp+0x48]
100004fd:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
10000501:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
10000505:	8b bf 58 01 00 00    	mov    edi,DWORD PTR [edi+0x158]
1000050b:	01 4c 24 24          	add    DWORD PTR [esp+0x24],ecx
1000050f:	01 7c 24 20          	add    DWORD PTR [esp+0x20],edi
10000513:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000517:	39 44 24 48          	cmp    DWORD PTR [esp+0x48],eax
1000051b:	0f 85 1b fe ff ff    	jne    1000033c <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x5c>
10000521:	83 c4 30             	add    esp,0x30
10000524:	5b                   	pop    ebx
10000525:	5e                   	pop    esi
10000526:	5f                   	pop    edi
10000527:	c3                   	ret    
10000528:	31 c9                	xor    ecx,ecx
1000052a:	83 44 24 0c 04       	add    DWORD PTR [esp+0xc],0x4
1000052f:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000533:	8b 40 fc             	mov    eax,DWORD PTR [eax-0x4]
10000536:	89 c3                	mov    ebx,eax
10000538:	89 c2                	mov    edx,eax
1000053a:	c1 fb 15             	sar    ebx,0x15
1000053d:	c1 fa 0a             	sar    edx,0xa
10000540:	83 e3 07             	and    ebx,0x7
10000543:	83 e2 38             	and    edx,0x38
10000546:	09 d3                	or     ebx,edx
10000548:	8d 14 00             	lea    edx,[eax+eax*1]
1000054b:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
1000054f:	81 e2 c0 01 00 00    	and    edx,0x1c0
10000555:	01 c8                	add    eax,ecx
10000557:	09 da                	or     edx,ebx
10000559:	83 e0 01             	and    eax,0x1
1000055c:	41                   	inc    ecx
1000055d:	8a 84 50 00 00 00 00 	mov    al,BYTE PTR [eax+edx*2+0x0]	10000560: R_386_32	dither16Data
10000564:	88 81 df 11 00 10    	mov    BYTE PTR [ecx+0x100011df],al	10000566: R_386_32	.bss
1000056a:	39 f1                	cmp    ecx,esi
1000056c:	7c bc                	jl     1000052a <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x24a>
1000056e:	e9 97 fe ff ff       	jmp    1000040a <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x12a>
10000573:	90                   	nop

10000574 <VGAVideo::putrect(int, int, int, int, unsigned int)>:
10000574:	57                   	push   edi
10000575:	56                   	push   esi
10000576:	53                   	push   ebx
10000577:	83 ec 40             	sub    esp,0x40
1000057a:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
1000057e:	8b 80 64 01 00 00    	mov    eax,DWORD PTR [eax+0x164]
10000584:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000589:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000058d:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10000591:	c1 f8 15             	sar    eax,0x15
10000594:	83 e0 07             	and    eax,0x7
10000597:	89 c2                	mov    edx,eax
10000599:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
1000059d:	c1 f8 0a             	sar    eax,0xa
100005a0:	83 e0 38             	and    eax,0x38
100005a3:	09 d0                	or     eax,edx
100005a5:	8b 54 24 64          	mov    edx,DWORD PTR [esp+0x64]
100005a9:	01 d2                	add    edx,edx
100005ab:	81 e2 c0 01 00 00    	and    edx,0x1c0
100005b1:	09 d0                	or     eax,edx
100005b3:	0f b6 bc 00 00 00 00 00 	movzx  edi,BYTE PTR [eax+eax*1+0x0]	100005b7: R_386_32	dither16Data
100005bb:	0f b6 84 00 01 00 00 00 	movzx  eax,BYTE PTR [eax+eax*1+0x1]	100005bf: R_386_32	dither16Data
100005c3:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
100005c7:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100005cb:	8b 7c 24 60          	mov    edi,DWORD PTR [esp+0x60]
100005cf:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100005d3:	03 7c 24 58          	add    edi,DWORD PTR [esp+0x58]
100005d7:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
100005db:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
100005df:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
100005e3:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
100005e7:	0f 8d ad 00 00 00    	jge    1000069a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x126>
100005ed:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
100005f1:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
100005f5:	2b 7c 24 54          	sub    edi,DWORD PTR [esp+0x54]
100005f9:	8b 74 24 50          	mov    esi,DWORD PTR [esp+0x50]
100005fd:	89 7c 24 3c          	mov    DWORD PTR [esp+0x3c],edi
10000601:	0f af 86 58 01 00 00 	imul   eax,DWORD PTR [esi+0x158]
10000608:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
1000060c:	c1 f8 03             	sar    eax,0x3
1000060f:	c1 ff 03             	sar    edi,0x3
10000612:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10000616:	89 7c 24 38          	mov    DWORD PTR [esp+0x38],edi
1000061a:	74 11                	je     1000062d <VGAVideo::putrect(int, int, int, int, unsigned int)+0xb9>
1000061c:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000620:	83 e0 07             	and    eax,0x7
10000623:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000627:	0f 84 ff 01 00 00    	je     1000082c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2b8>
1000062d:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
10000631:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10000635:	a8 01                	test   al,0x1
10000637:	0f 84 da 01 00 00    	je     10000817 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2a3>
1000063d:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000641:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000645:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000649:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000064d:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000651:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
10000658:	74 47                	je     100006a1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x12d>
1000065a:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000065e:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
10000662:	7d 24                	jge    10000688 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
10000664:	8b 5c 24 58          	mov    ebx,DWORD PTR [esp+0x58]
10000668:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
1000066c:	8b 00                	mov    eax,DWORD PTR [eax]
1000066e:	ff 74 24 64          	push   DWORD PTR [esp+0x64]
10000672:	53                   	push   ebx
10000673:	43                   	inc    ebx
10000674:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
10000678:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
1000067c:	ff 50 24             	call   DWORD PTR [eax+0x24]
1000067f:	83 c4 10             	add    esp,0x10
10000682:	39 5c 24 0c          	cmp    DWORD PTR [esp+0xc],ebx
10000686:	75 e0                	jne    10000668 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xf4>
10000688:	ff 44 24 54          	inc    DWORD PTR [esp+0x54]
1000068c:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10000690:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10000694:	0f 8f 53 ff ff ff    	jg     100005ed <VGAVideo::putrect(int, int, int, int, unsigned int)+0x79>
1000069a:	83 c4 40             	add    esp,0x40
1000069d:	5b                   	pop    ebx
1000069e:	5e                   	pop    esi
1000069f:	5f                   	pop    edi
100006a0:	c3                   	ret    
100006a1:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100006a5:	c7 44 24 18 00 00 00 00 	mov    DWORD PTR [esp+0x18],0x0
100006ad:	f7 d0                	not    eax
100006af:	83 e0 07             	and    eax,0x7
100006b2:	89 c7                	mov    edi,eax
100006b4:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100006b8:	89 f9                	mov    ecx,edi
100006ba:	b8 fe ff ff ff       	mov    eax,0xfffffffe
100006bf:	d3 c0                	rol    eax,cl
100006c1:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
100006c5:	83 ec 08             	sub    esp,0x8
100006c8:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100006cc:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
100006d0:	e8 fc ff ff ff       	call   100006d1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x15d>	100006d1: R_386_PC32	VGAVideo::setPlane(int)
100006d5:	83 c4 10             	add    esp,0x10
100006d8:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100006dc:	39 7c 24 14          	cmp    DWORD PTR [esp+0x14],edi
100006e0:	0f 84 c2 00 00 00    	je     100007a8 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x234>
100006e6:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
100006ea:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
100006ee:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100006f2:	d3 fe                	sar    esi,cl
100006f4:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
100006f8:	83 e6 01             	and    esi,0x1
100006fb:	d3 e6                	shl    esi,cl
100006fd:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
10000701:	0f 8d aa 03 00 00    	jge    10000ab1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x53d>
10000707:	8a 44 24 28          	mov    al,BYTE PTR [esp+0x28]
1000070b:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
1000070f:	89 c7                	mov    edi,eax
10000711:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10000715:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000719:	83 c2 02             	add    edx,0x2
1000071c:	8d 1c 08             	lea    ebx,[eax+ecx*1]
1000071f:	89 f8                	mov    eax,edi
10000721:	22 03                	and    al,BYTE PTR [ebx]
10000723:	09 f0                	or     eax,esi
10000725:	88 03                	mov    BYTE PTR [ebx],al
10000727:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
1000072b:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000731:	89 c3                	mov    ebx,eax
10000733:	c1 fb 02             	sar    ebx,0x2
10000736:	01 d9                	add    ecx,ebx
10000738:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
1000073c:	7f d7                	jg     10000715 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1a1>
1000073e:	c1 f8 03             	sar    eax,0x3
10000741:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10000745:	03 44 24 24          	add    eax,DWORD PTR [esp+0x24]
10000749:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
1000074d:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
10000751:	d3 fe                	sar    esi,cl
10000753:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
10000757:	83 e6 01             	and    esi,0x1
1000075a:	d3 e6                	shl    esi,cl
1000075c:	8d 4f 01             	lea    ecx,[edi+0x1]
1000075f:	83 7c 24 60 01       	cmp    DWORD PTR [esp+0x60],0x1
10000764:	7e 2c                	jle    10000792 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x21e>
10000766:	8a 5c 24 28          	mov    bl,BYTE PTR [esp+0x28]
1000076a:	89 df                	mov    edi,ebx
1000076c:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
10000770:	89 fa                	mov    edx,edi
10000772:	01 c3                	add    ebx,eax
10000774:	83 c1 02             	add    ecx,0x2
10000777:	22 13                	and    dl,BYTE PTR [ebx]
10000779:	09 f2                	or     edx,esi
1000077b:	88 13                	mov    BYTE PTR [ebx],dl
1000077d:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
10000781:	8b 93 58 01 00 00    	mov    edx,DWORD PTR [ebx+0x158]
10000787:	c1 fa 02             	sar    edx,0x2
1000078a:	01 d0                	add    eax,edx
1000078c:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
10000790:	7f da                	jg     1000076c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1f8>
10000792:	ff 44 24 18          	inc    DWORD PTR [esp+0x18]
10000796:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000079a:	83 f8 04             	cmp    eax,0x4
1000079d:	0f 85 22 ff ff ff    	jne    100006c5 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x151>
100007a3:	e9 e0 fe ff ff       	jmp    10000688 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
100007a8:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
100007ac:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100007b0:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100007b4:	d3 f8                	sar    eax,cl
100007b6:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
100007ba:	83 e0 01             	and    eax,0x1
100007bd:	d3 e0                	shl    eax,cl
100007bf:	39 7c 24 58          	cmp    DWORD PTR [esp+0x58],edi
100007c3:	7d cd                	jge    10000792 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x21e>
100007c5:	89 c7                	mov    edi,eax
100007c7:	0f b6 74 24 28       	movzx  esi,BYTE PTR [esp+0x28]
100007cc:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
100007d0:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
100007d4:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100007d8:	42                   	inc    edx
100007d9:	8d 1c 08             	lea    ebx,[eax+ecx*1]
100007dc:	89 f0                	mov    eax,esi
100007de:	22 03                	and    al,BYTE PTR [ebx]
100007e0:	88 44 24 1c          	mov    BYTE PTR [esp+0x1c],al
100007e4:	89 f8                	mov    eax,edi
100007e6:	0b 44 24 1c          	or     eax,DWORD PTR [esp+0x1c]
100007ea:	88 03                	mov    BYTE PTR [ebx],al
100007ec:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
100007f0:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
100007f6:	c1 f8 03             	sar    eax,0x3
100007f9:	01 c1                	add    ecx,eax
100007fb:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
100007ff:	75 d3                	jne    100007d4 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x260>
10000801:	ff 44 24 18          	inc    DWORD PTR [esp+0x18]
10000805:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10000809:	83 f8 04             	cmp    eax,0x4
1000080c:	0f 85 b3 fe ff ff    	jne    100006c5 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x151>
10000812:	e9 71 fe ff ff       	jmp    10000688 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
10000817:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000081b:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
1000081f:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000823:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000827:	e9 21 fe ff ff       	jmp    1000064d <VGAVideo::putrect(int, int, int, int, unsigned int)+0xd9>
1000082c:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000830:	83 e0 01             	and    eax,0x1
10000833:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000837:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
1000083b:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
1000083f:	80 b8 61 01 00 00 01 	cmp    BYTE PTR [eax+0x161],0x1
10000846:	19 c0                	sbb    eax,eax
10000848:	83 e0 03             	and    eax,0x3
1000084b:	40                   	inc    eax
1000084c:	39 c7                	cmp    edi,eax
1000084e:	0f 8d 33 02 00 00    	jge    10000a87 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x513>
10000854:	57                   	push   edi
10000855:	ff 74 24 54          	push   DWORD PTR [esp+0x54]
10000859:	e8 fc ff ff ff       	call   1000085a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2e6>	1000085a: R_386_PC32	VGAVideo::setPlane(int)
1000085e:	5a                   	pop    edx
1000085f:	59                   	pop    ecx
10000860:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000864:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
1000086b:	0f 84 59 01 00 00    	je     100009ca <VGAVideo::putrect(int, int, int, int, unsigned int)+0x456>
10000871:	89 f9                	mov    ecx,edi
10000873:	b8 01 00 00 00       	mov    eax,0x1
10000878:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
1000087c:	d3 e0                	shl    eax,cl
1000087e:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000882:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10000886:	01 c7                	add    edi,eax
10000888:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000088c:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
10000890:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000894:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10000898:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
1000089c:	0f 8d 0d 01 00 00    	jge    100009af <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
100008a2:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100008a6:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
100008aa:	40                   	inc    eax
100008ab:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100008af:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100008b3:	85 c0                	test   eax,eax
100008b5:	0f 85 9e 00 00 00    	jne    10000959 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3e5>
100008bb:	eb 2a                	jmp    100008e7 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x373>
100008bd:	85 c0                	test   eax,eax
100008bf:	b9 aa 00 00 00       	mov    ecx,0xaa
100008c4:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100008c8:	74 6d                	je     10000937 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3c3>
100008ca:	88 0c 18             	mov    BYTE PTR [eax+ebx*1],cl
100008cd:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
100008d1:	46                   	inc    esi
100008d2:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
100008d8:	c1 f8 03             	sar    eax,0x3
100008db:	01 c3                	add    ebx,eax
100008dd:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
100008e1:	0f 84 c8 00 00 00    	je     100009af <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
100008e7:	56                   	push   esi
100008e8:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
100008ec:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
100008f0:	e8 fc ff ff ff       	call   100008f1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x37d>	100008f1: R_386_PC32	monoPixelLookup(int, int, int)
100008f5:	83 c4 0c             	add    esp,0xc
100008f8:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100008fc:	56                   	push   esi
100008fd:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000901:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000905:	e8 fc ff ff ff       	call   10000906 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x392>	10000906: R_386_PC32	monoPixelLookup(int, int, int)
1000090a:	83 c4 0c             	add    esp,0xc
1000090d:	89 c7                	mov    edi,eax
1000090f:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10000913:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000917:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
1000091b:	21 ca                	and    edx,ecx
1000091d:	21 f9                	and    ecx,edi
1000091f:	89 d0                	mov    eax,edx
10000921:	89 ca                	mov    edx,ecx
10000923:	74 98                	je     100008bd <VGAVideo::putrect(int, int, int, int, unsigned int)+0x349>
10000925:	85 c0                	test   eax,eax
10000927:	b9 ff 00 00 00       	mov    ecx,0xff
1000092c:	ba 55 00 00 00       	mov    edx,0x55
10000931:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000935:	75 93                	jne    100008ca <VGAVideo::putrect(int, int, int, int, unsigned int)+0x356>
10000937:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
1000093a:	eb 91                	jmp    100008cd <VGAVideo::putrect(int, int, int, int, unsigned int)+0x359>
1000093c:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000940:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
10000943:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000947:	46                   	inc    esi
10000948:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
1000094e:	c1 f8 03             	sar    eax,0x3
10000951:	01 c3                	add    ebx,eax
10000953:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
10000957:	74 56                	je     100009af <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
10000959:	56                   	push   esi
1000095a:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
1000095e:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000962:	e8 fc ff ff ff       	call   10000963 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3ef>	10000963: R_386_PC32	monoPixelLookup(int, int, int)
10000967:	83 c4 0c             	add    esp,0xc
1000096a:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
1000096e:	56                   	push   esi
1000096f:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000973:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000977:	e8 fc ff ff ff       	call   10000978 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x404>	10000978: R_386_PC32	monoPixelLookup(int, int, int)
1000097c:	83 c4 0c             	add    esp,0xc
1000097f:	89 c7                	mov    edi,eax
10000981:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10000985:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000989:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000098d:	21 c8                	and    eax,ecx
1000098f:	83 f8 01             	cmp    eax,0x1
10000992:	19 d2                	sbb    edx,edx
10000994:	f7 d2                	not    edx
10000996:	83 e2 55             	and    edx,0x55
10000999:	83 f8 01             	cmp    eax,0x1
1000099c:	19 c0                	sbb    eax,eax
1000099e:	83 e0 ab             	and    eax,0xffffffab
100009a1:	48                   	dec    eax
100009a2:	85 cf                	test   edi,ecx
100009a4:	74 96                	je     1000093c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3c8>
100009a6:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
100009aa:	88 04 1f             	mov    BYTE PTR [edi+ebx*1],al
100009ad:	eb 94                	jmp    10000943 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3cf>
100009af:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
100009b3:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100009b7:	39 44 24 28          	cmp    DWORD PTR [esp+0x28],eax
100009bb:	0f 85 cf fe ff ff    	jne    10000890 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x31c>
100009c1:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
100009c5:	e9 6d fe ff ff       	jmp    10000837 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2c3>
100009ca:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100009ce:	8a 4c 24 2c          	mov    cl,BYTE PTR [esp+0x2c]
100009d2:	d3 f8                	sar    eax,cl
100009d4:	a8 01                	test   al,0x1
100009d6:	0f 84 92 00 00 00    	je     10000a6e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4fa>
100009dc:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100009e0:	d3 f8                	sar    eax,cl
100009e2:	83 e0 01             	and    eax,0x1
100009e5:	83 f8 01             	cmp    eax,0x1
100009e8:	19 ff                	sbb    edi,edi
100009ea:	89 f9                	mov    ecx,edi
100009ec:	89 f8                	mov    eax,edi
100009ee:	83 e1 56             	and    ecx,0x56
100009f1:	83 e0 ab             	and    eax,0xffffffab
100009f4:	49                   	dec    ecx
100009f5:	05 ff 00 00 00       	add    eax,0xff
100009fa:	88 4c 24 1c          	mov    BYTE PTR [esp+0x1c],cl
100009fe:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000a02:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000a06:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
10000a0a:	7d b5                	jge    100009c1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x44d>
10000a0c:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10000a10:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10000a14:	89 de                	mov    esi,ebx
10000a16:	01 df                	add    edi,ebx
10000a18:	8b 5c 24 54          	mov    ebx,DWORD PTR [esp+0x54]
10000a1c:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10000a20:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
10000a24:	01 df                	add    edi,ebx
10000a26:	8d 1c 03             	lea    ebx,[ebx+eax*1]
10000a29:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
10000a2d:	89 f2                	mov    edx,esi
10000a2f:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000a33:	eb 1b                	jmp    10000a50 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4dc>
10000a35:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10000a39:	88 0c 17             	mov    BYTE PTR [edi+edx*1],cl
10000a3c:	40                   	inc    eax
10000a3d:	8b 7c 24 50          	mov    edi,DWORD PTR [esp+0x50]
10000a41:	8b 8f 58 01 00 00    	mov    ecx,DWORD PTR [edi+0x158]
10000a47:	c1 f9 03             	sar    ecx,0x3
10000a4a:	01 ca                	add    edx,ecx
10000a4c:	39 c3                	cmp    ebx,eax
10000a4e:	74 0e                	je     10000a5e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4ea>
10000a50:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10000a54:	a8 01                	test   al,0x1
10000a56:	74 dd                	je     10000a35 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4c1>
10000a58:	8a 4c 24 1c          	mov    cl,BYTE PTR [esp+0x1c]
10000a5c:	eb db                	jmp    10000a39 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4c5>
10000a5e:	46                   	inc    esi
10000a5f:	39 74 24 20          	cmp    DWORD PTR [esp+0x20],esi
10000a63:	75 c8                	jne    10000a2d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4b9>
10000a65:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10000a69:	e9 c9 fd ff ff       	jmp    10000837 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2c3>
10000a6e:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000a72:	d3 fe                	sar    esi,cl
10000a74:	83 e6 01             	and    esi,0x1
10000a77:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
10000a7b:	75 43                	jne    10000ac0 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x54c>
10000a7d:	c6 44 24 1c 00       	mov    BYTE PTR [esp+0x1c],0x0
10000a82:	e9 7b ff ff ff       	jmp    10000a02 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x48e>
10000a87:	8b 7c 24 54          	mov    edi,DWORD PTR [esp+0x54]
10000a8b:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10000a8f:	83 e0 f8             	and    eax,0xfffffff8
10000a92:	8d 44 07 ff          	lea    eax,[edi+eax*1-0x1]
10000a96:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10000a9a:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10000a9e:	ff 44 24 54          	inc    DWORD PTR [esp+0x54]
10000aa2:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10000aa6:	0f 8f 41 fb ff ff    	jg     100005ed <VGAVideo::putrect(int, int, int, int, unsigned int)+0x79>
10000aac:	e9 e9 fb ff ff       	jmp    1000069a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x126>
10000ab1:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000ab5:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000abb:	e9 7e fc ff ff       	jmp    1000073e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1ca>
10000ac0:	c6 44 24 1c aa       	mov    BYTE PTR [esp+0x1c],0xaa
10000ac5:	c7 44 24 18 55 00 00 00 	mov    DWORD PTR [esp+0x18],0x55
10000acd:	e9 30 ff ff ff       	jmp    10000a02 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x48e>

10000ad2 <VGAVideo::putpixel(int, int, unsigned int)>:
10000ad2:	57                   	push   edi
10000ad3:	56                   	push   esi
10000ad4:	53                   	push   ebx
10000ad5:	83 ec 14             	sub    esp,0x14
10000ad8:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
10000adc:	8b 5c 24 28          	mov    ebx,DWORD PTR [esp+0x28]
10000ae0:	8b 86 64 01 00 00    	mov    eax,DWORD PTR [esi+0x164]
10000ae6:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
10000aec:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000af1:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000af5:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000af9:	89 d8                	mov    eax,ebx
10000afb:	f7 d0                	not    eax
10000afd:	83 e0 07             	and    eax,0x7
10000b00:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000b04:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000b08:	0f af 86 58 01 00 00 	imul   eax,DWORD PTR [esi+0x158]
10000b0f:	01 d8                	add    eax,ebx
10000b11:	c1 f8 03             	sar    eax,0x3
10000b14:	84 d2                	test   dl,dl
10000b16:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000b1a:	74 75                	je     10000b91 <VGAVideo::putpixel(int, int, unsigned int)+0xbf>
10000b1c:	88 54 24 10          	mov    BYTE PTR [esp+0x10],dl
10000b20:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000b24:	53                   	push   ebx
10000b25:	57                   	push   edi
10000b26:	e8 fc ff ff ff       	call   10000b27 <VGAVideo::putpixel(int, int, unsigned int)+0x55>	10000b27: R_386_PC32	monoPixelLookup(int, int, int)
10000b2b:	83 c4 0c             	add    esp,0xc
10000b2e:	89 04 24             	mov    DWORD PTR [esp],eax
10000b31:	8a 54 24 10          	mov    dl,BYTE PTR [esp+0x10]
10000b35:	b8 fe ff ff ff       	mov    eax,0xfffffffe
10000b3a:	8a 4c 24 04          	mov    cl,BYTE PTR [esp+0x4]
10000b3e:	31 db                	xor    ebx,ebx
10000b40:	d3 c0                	rol    eax,cl
10000b42:	84 d2                	test   dl,dl
10000b44:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000b48:	74 3b                	je     10000b85 <VGAVideo::putpixel(int, int, unsigned int)+0xb3>
10000b4a:	85 db                	test   ebx,ebx
10000b4c:	75 3c                	jne    10000b8a <VGAVideo::putpixel(int, int, unsigned int)+0xb8>
10000b4e:	53                   	push   ebx
10000b4f:	43                   	inc    ebx
10000b50:	56                   	push   esi
10000b51:	e8 fc ff ff ff       	call   10000b52 <VGAVideo::putpixel(int, int, unsigned int)+0x80>	10000b52: R_386_PC32	VGAVideo::setPlane(int)
10000b56:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000b5a:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000b5e:	8a 44 24 18          	mov    al,BYTE PTR [esp+0x18]
10000b62:	03 7c 24 14          	add    edi,DWORD PTR [esp+0x14]
10000b66:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10000b6a:	22 07                	and    al,BYTE PTR [edi]
10000b6c:	d1 7c 24 08          	sar    DWORD PTR [esp+0x8],1
10000b70:	83 e2 01             	and    edx,0x1
10000b73:	d3 e2                	shl    edx,cl
10000b75:	09 d0                	or     eax,edx
10000b77:	88 07                	mov    BYTE PTR [edi],al
10000b79:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
10000b7f:	58                   	pop    eax
10000b80:	84 d2                	test   dl,dl
10000b82:	59                   	pop    ecx
10000b83:	75 c5                	jne    10000b4a <VGAVideo::putpixel(int, int, unsigned int)+0x78>
10000b85:	83 fb 04             	cmp    ebx,0x4
10000b88:	75 c4                	jne    10000b4e <VGAVideo::putpixel(int, int, unsigned int)+0x7c>
10000b8a:	83 c4 14             	add    esp,0x14
10000b8d:	5b                   	pop    ebx
10000b8e:	5e                   	pop    esi
10000b8f:	5f                   	pop    edi
10000b90:	c3                   	ret    
10000b91:	89 f9                	mov    ecx,edi
10000b93:	89 f8                	mov    eax,edi
10000b95:	c1 f9 15             	sar    ecx,0x15
10000b98:	c1 f8 0a             	sar    eax,0xa
10000b9b:	83 e1 07             	and    ecx,0x7
10000b9e:	83 e0 38             	and    eax,0x38
10000ba1:	09 c1                	or     ecx,eax
10000ba3:	8d 04 3f             	lea    eax,[edi+edi*1]
10000ba6:	25 c0 01 00 00       	and    eax,0x1c0
10000bab:	09 c8                	or     eax,ecx
10000bad:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
10000bb1:	01 d9                	add    ecx,ebx
10000bb3:	83 e1 01             	and    ecx,0x1
10000bb6:	0f b6 84 41 00 00 00 00 	movzx  eax,BYTE PTR [ecx+eax*2+0x0]	10000bba: R_386_32	dither16Data
10000bbe:	89 04 24             	mov    DWORD PTR [esp],eax
10000bc1:	e9 6f ff ff ff       	jmp    10000b35 <VGAVideo::putpixel(int, int, unsigned int)+0x63>

10000bc6 <VGAVideo::~VGAVideo()>:
10000bc6:	55                   	push   ebp
10000bc7:	89 e5                	mov    ebp,esp
10000bc9:	83 ec 08             	sub    esp,0x8
10000bcc:	ba 08 00 00 00       	mov    edx,0x8	10000bcd: R_386_32	vtable for VGAVideo
10000bd1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000bd4:	89 10                	mov    DWORD PTR [eax],edx
10000bd6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000bd9:	83 ec 0c             	sub    esp,0xc
10000bdc:	50                   	push   eax
10000bdd:	e8 fc ff ff ff       	call   10000bde <VGAVideo::~VGAVideo()+0x18>	10000bde: R_386_PC32	Video::~Video()
10000be2:	83 c4 10             	add    esp,0x10
10000be5:	90                   	nop
10000be6:	c9                   	leave  
10000be7:	c3                   	ret    

10000be8 <VGAVideo::~VGAVideo()>:
10000be8:	55                   	push   ebp
10000be9:	89 e5                	mov    ebp,esp
10000beb:	83 ec 08             	sub    esp,0x8
10000bee:	83 ec 0c             	sub    esp,0xc
10000bf1:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000bf4:	e8 fc ff ff ff       	call   10000bf5 <VGAVideo::~VGAVideo()+0xd>	10000bf5: R_386_PC32	VGAVideo::~VGAVideo()
10000bf9:	83 c4 10             	add    esp,0x10
10000bfc:	83 ec 08             	sub    esp,0x8
10000bff:	68 6c 01 00 00       	push   0x16c
10000c04:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000c07:	e8 fc ff ff ff       	call   10000c08 <VGAVideo::~VGAVideo()+0x20>	10000c08: R_386_PC32	operator delete(void*, unsigned long)
10000c0c:	83 c4 10             	add    esp,0x10
10000c0f:	c9                   	leave  
10000c10:	c3                   	ret    
10000c11:	66 90                	xchg   ax,ax
10000c13:	90                   	nop

10000c14 <PHYS_RAM_TABLE_SIZE>:
10000c14:	13 05 00 00                                         ....

10000c18 <PHYS_HIGHEST_UNUSED_ADDRESS>:
10000c18:	24 05 00 00                                         $...

10000c1c <PHYS_RAM_TABLE>:
10000c1c:	00 06 00 00                                         ....

10000c20 <PHYS_DMA_MEMORY_1>:
10000c20:	00 00 01 00                                         ....

10000c24 <PHYS_PHYS_PAGE_BITMAP>:
10000c24:	00 00 02 00                                         ....

10000c28 <PHYS_VIRT_PAGE_BITMAP>:
10000c28:	00 00 04 00                                         ....

10000c2c <PHYS_DMA_MEMORY_2>:
10000c2c:	00 00 06 00                                         ....

10000c30 <PHYS_ALLOCED_VIRT_PAGES>:
10000c30:	00 00 10 00                                         ....

10000c34 <PHYS_KRNL_PAGE_DIRECTORY>:
10000c34:	00 10 00 00                                         ....

10000c38 <VIRT_KERNEL_BASE>:
10000c38:	00 00 00 c0                                         ....

10000c3c <VIRT_LOW_MEGS>:
10000c3c:	00 00 00 c2                                         ....

10000c40 <VIRT_CPU_SPECIFIC>:
10000c40:	00 00 40 c2                                         ..@.

10000c44 <VIRT_RECURSIVE_SPOT_1>:
10000c44:	00 00 80 c2                                         ....

10000c48 <VIRT_RECURSIVE_SPOT_2>:
10000c48:	00 00 c0 c2                                         ....

10000c4c <VIRT_DMA_MEMORY_1>:
10000c4c:	00 00 01 c2                                         ....

10000c50 <SIZE_DMA_MEMORY_1>:
10000c50:	00 00 01 00                                         ....

10000c54 <VIRT_DMA_MEMORY_2>:
10000c54:	00 00 06 c2                                         ....

10000c58 <SIZE_DMA_MEMORY_2>:
10000c58:	00 00 02 00                                         ....

10000c5c <VIRT_KRNL_PAGE_DIRECTORY>:
10000c5c:	00 10 00 c2                                         ....

10000c60 <VIRT_PHYS_PAGE_BITMAP>:
10000c60:	00 00 02 c2                                         ....

10000c64 <SIZE_PHYS_PAGE_BITMAP>:
10000c64:	00 00 02 00                                         ....

10000c68 <VIRT_VIRT_PAGE_BITMAP>:
10000c68:	00 00 04 c2                                         ....

10000c6c <SIZE_VIRT_PAGE_BITMAP>:
10000c6c:	00 80 00 00                                         ....

10000c70 <VIRT_RAM_TABLE>:
10000c70:	00 06 00 c2                                         ....

10000c74 <VIRT_RAM_TABLE_SIZE>:
10000c74:	13 05 00 c2                                         ....

10000c78 <VIRT_HIGHEST_UNUSED_ADDRESS>:
10000c78:	24 05 00 c2                                         $...

10000c7c <SIZE_APP_STACK_USER>:
10000c7c:	00 00 18 00                                         ....

10000c80 <SIZE_APP_STACK_KRNL>:
10000c80:	00 00 08 00                                         ....

10000c84 <SIZE_APP_STACK_TOTAL>:
10000c84:	00 00 20 00                                         .. .

10000c88 <VIRT_APP_DATA>:
10000c88:	00 00 00 10                                         ....

10000c8c <VIRT_APP_STACK_USER_TOP>:
10000c8c:	00 00 00 02                                         ....

10000c90 <VIRT_APP_STACK_KRNL_TOP>:
10000c90:	00 00 e8 01                                         ....

10000c94 <VIRT_HEAP_MIN>:
10000c94:	00 00 00 c8                                         ....

10000c98 <VIRT_HEAP_MAX>:
10000c98:	ff ff ff ef                                         ....

10000c9c <VIRT_SBRK_MIN>:
10000c9c:	00 00 00 f0                                         ....

10000ca0 <VIRT_SBRK_MAX>:
10000ca0:	00 00 c0 ff                                         ....

10000ca4 <VIRT_ALLOCED_VIRT_PAGES>:
10000ca4:	00 00 10 c2                                         ....

10000ca8 <VIRT_ACPI_DRIVER>:
10000ca8:	00 40 48 c2                                         .@H.

10000cac <TERMINAL_KEYBUFFER_IN_SIZE>:
10000cac:	80 00 00 00                                         ....

10000cb0 <TERMINAL_KEYBUFFER_OUT_SIZE>:
10000cb0:	80 00 00 00 56 47 41 20 44 69 73 70 6c 61 79 00     ....VGA Display.
10000cc0:	43 3a 2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d     C:/Banana/System
10000cd0:	2f 56 47 41 2e 43 4f 4d 00 53 65 74 20 74 6f 20     /VGA.COM.Set to 
10000ce0:	76 69 64 65 6f 20 6d 6f 64 65 20 25 64 0a 00 90     video mode %d...

10000cf0 <vtable for VGAVideo>:
	...
	10000cf8: R_386_32	VGAVideo::~VGAVideo()
	10000cfc: R_386_32	VGAVideo::~VGAVideo()
	10000d00: R_386_32	VGAVideo::open(int, int, void*)
	10000d04: R_386_32	VGAVideo::close(int, int, void*)
	10000d08: R_386_32	Device::hibernate()
	10000d0c: R_386_32	Device::wake()
	10000d10: R_386_32	Device::detect()
	10000d14: R_386_32	Device::disableLegacy()
	10000d18: R_386_32	Device::powerSaving(PowerSavingLevel)
	10000d1c: R_386_32	VGAVideo::putpixel(int, int, unsigned int)
	10000d20: R_386_32	VGAVideo::putrect(int, int, int, int, unsigned int)
	10000d24: R_386_32	Video::putTGA(int, int, unsigned char*, int)
	10000d28: R_386_32	Video::drawCursor(int, int, unsigned int*, int)
	10000d2c: R_386_32	VGAVideo::readPixelApprox(int, int)
	10000d30: R_386_32	VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)
	10000d34: R_386_32	Video::blit(unsigned int*, int, int, int, int)
	10000d38: R_386_32	Video::clearScreen(unsigned int)
