
packages/banana/32/0002/vga.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	53                   	push   ebx
10000004:	83 ec 14             	sub    esp,0x14
10000007:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000000a:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
1000000d:	c7 45 ec 6c 01 00 00 	mov    DWORD PTR [ebp-0x14],0x16c
10000014:	83 ec 0c             	sub    esp,0xc
10000017:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
1000001a:	e8 fc ff ff ff       	call   1000001b <start(void*)+0x1b>	1000001b: R_386_PC32	malloc
1000001f:	83 c4 10             	add    esp,0x10
10000022:	89 c3                	mov    ebx,eax
10000024:	83 ec 0c             	sub    esp,0xc
10000027:	53                   	push   ebx
10000028:	e8 fc ff ff ff       	call   10000029 <start(void*)+0x29>	10000029: R_386_PC32	VGAVideo::VGAVideo()
1000002d:	83 c4 10             	add    esp,0x10
10000030:	89 5d f0             	mov    DWORD PTR [ebp-0x10],ebx
10000033:	83 ec 08             	sub    esp,0x8
10000036:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000039:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000003c:	e8 fc ff ff ff       	call   1000003d <start(void*)+0x3d>	1000003d: R_386_PC32	Device::addChild(Device*)
10000041:	83 c4 10             	add    esp,0x10
10000044:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000047:	8b 00                	mov    eax,DWORD PTR [eax]
10000049:	83 c0 08             	add    eax,0x8
1000004c:	8b 00                	mov    eax,DWORD PTR [eax]
1000004e:	6a 00                	push   0x0
10000050:	6a 00                	push   0x0
10000052:	6a 00                	push   0x0
10000054:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000057:	ff d0                	call   eax
10000059:	83 c4 10             	add    esp,0x10
1000005c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000005f:	a3 00 00 00 00       	mov    ds:0x0,eax	10000060: R_386_32	screen
10000064:	90                   	nop
10000065:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000068:	c9                   	leave  
10000069:	c3                   	ret    

1000006a <VGAVideo::setPlane(int)>:
1000006a:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000006e:	39 0d 80 0d 00 10    	cmp    DWORD PTR ds:0x10000d80,ecx	10000070: R_386_32	.data
10000074:	74 2b                	je     100000a1 <VGAVideo::setPlane(int)+0x37>
10000076:	89 0d 80 0d 00 10    	mov    DWORD PTR ds:0x10000d80,ecx	10000078: R_386_32	.data
1000007c:	b0 04                	mov    al,0x4
1000007e:	ba ce 03 00 00       	mov    edx,0x3ce
10000083:	ee                   	out    dx,al
10000084:	ba cf 03 00 00       	mov    edx,0x3cf
10000089:	88 c8                	mov    al,cl
1000008b:	ee                   	out    dx,al
1000008c:	b0 02                	mov    al,0x2
1000008e:	ba c4 03 00 00       	mov    edx,0x3c4
10000093:	ee                   	out    dx,al
10000094:	b8 01 00 00 00       	mov    eax,0x1
10000099:	ba c5 03 00 00       	mov    edx,0x3c5
1000009e:	d3 e0                	shl    eax,cl
100000a0:	ee                   	out    dx,al
100000a1:	c3                   	ret    

100000a2 <VGAVideo::VGAVideo()>:
100000a2:	55                   	push   ebp
100000a3:	89 e5                	mov    ebp,esp
100000a5:	83 ec 08             	sub    esp,0x8
100000a8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000ab:	83 ec 08             	sub    esp,0x8
100000ae:	68 e0 0c 00 10       	push   0x10000ce0	100000af: R_386_32	.text
100000b3:	50                   	push   eax
100000b4:	e8 fc ff ff ff       	call   100000b5 <VGAVideo::VGAVideo()+0x13>	100000b5: R_386_PC32	Video::Video(char const*)
100000b9:	83 c4 10             	add    esp,0x10
100000bc:	ba 08 00 00 00       	mov    edx,0x8	100000bd: R_386_32	vtable for VGAVideo
100000c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c4:	89 10                	mov    DWORD PTR [eax],edx
100000c6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c9:	c7 80 64 01 00 00 00 00 0a 00 	mov    DWORD PTR [eax+0x164],0xa0000
100000d3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000d6:	c7 80 68 01 00 00 12 00 00 00 	mov    DWORD PTR [eax+0x168],0x12
100000e0:	90                   	nop
100000e1:	c9                   	leave  
100000e2:	c3                   	ret    
100000e3:	90                   	nop

100000e4 <VGAVideo::readPixelApprox(int, int)>:
100000e4:	b8 80 80 80 00       	mov    eax,0x808080
100000e9:	c3                   	ret    

100000ea <VGAVideo::close(int, int, void*)>:
100000ea:	31 c0                	xor    eax,eax
100000ec:	c3                   	ret    

100000ed <get_bios_area_video_type()>:
100000ed:	a1 10 04 00 00       	mov    eax,ds:0x410
100000f2:	83 e0 30             	and    eax,0x30
100000f5:	c3                   	ret    

100000f6 <VGAVideo::open(int, int, void*)>:
100000f6:	57                   	push   edi
100000f7:	53                   	push   ebx
100000f8:	83 ec 14             	sub    esp,0x14
100000fb:	e8 fc ff ff ff       	call   100000fc <VGAVideo::open(int, int, void*)+0x6>	100000fc: R_386_PC32	get_bios_area_video_type()
10000100:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10000104:	83 f8 30             	cmp    eax,0x30
10000107:	0f 94 83 61 01 00 00 	sete   BYTE PTR [ebx+0x161]
1000010e:	f6 05 01 00 00 00 08 	test   BYTE PTR ds:0x1,0x8	10000110: R_386_32	sysBootSettings
10000115:	0f 84 af 00 00 00    	je     100001ca <VGAVideo::open(int, int, void*)+0xd4>
1000011b:	c6 83 61 01 00 00 01 	mov    BYTE PTR [ebx+0x161],0x1
10000122:	b8 11 00 00 00       	mov    eax,0x11
10000127:	83 ec 0c             	sub    esp,0xc
1000012a:	89 83 68 01 00 00    	mov    DWORD PTR [ebx+0x168],eax
10000130:	c7 83 58 01 00 00 80 02 00 00 	mov    DWORD PTR [ebx+0x158],0x280
1000013a:	c7 83 5c 01 00 00 e0 01 00 00 	mov    DWORD PTR [ebx+0x15c],0x1e0
10000144:	c7 83 64 01 00 00 00 00 0a 00 	mov    DWORD PTR [ebx+0x164],0xa0000
1000014e:	50                   	push   eax
1000014f:	50                   	push   eax
10000150:	68 90 00 00 00       	push   0x90
10000155:	6a 00                	push   0x0
10000157:	68 ec 0c 00 10       	push   0x10000cec	10000158: R_386_32	.text
1000015c:	e8 fc ff ff ff       	call   1000015d <VGAVideo::open(int, int, void*)+0x67>	1000015d: R_386_PC32	Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
10000161:	83 c4 20             	add    esp,0x20
10000164:	e8 fc ff ff ff       	call   10000165 <VGAVideo::open(int, int, void*)+0x6f>	10000165: R_386_PC32	Vm::finish8086()
10000169:	83 ec 08             	sub    esp,0x8
1000016c:	ff b3 68 01 00 00    	push   DWORD PTR [ebx+0x168]
10000172:	68 05 0d 00 10       	push   0x10000d05	10000173: R_386_32	.text
10000177:	e8 fc ff ff ff       	call   10000178 <VGAVideo::open(int, int, void*)+0x82>	10000178: R_386_PC32	Dbg::kprintf(char const*, ...)
1000017c:	8b 83 64 01 00 00    	mov    eax,DWORD PTR [ebx+0x164]
10000182:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000187:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000018b:	58                   	pop    eax
1000018c:	5a                   	pop    edx
1000018d:	6a 00                	push   0x0
1000018f:	53                   	push   ebx
10000190:	e8 fc ff ff ff       	call   10000191 <VGAVideo::open(int, int, void*)+0x9b>	10000191: R_386_PC32	VGAVideo::setPlane(int)
10000195:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000199:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
1000019f:	83 c4 10             	add    esp,0x10
100001a2:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
100001a9:	85 c9                	test   ecx,ecx
100001ab:	79 03                	jns    100001b0 <VGAVideo::open(int, int, void*)+0xba>
100001ad:	83 c1 07             	add    ecx,0x7
100001b0:	c1 f9 03             	sar    ecx,0x3
100001b3:	31 c0                	xor    eax,eax
100001b5:	89 d7                	mov    edi,edx
100001b7:	f3 aa                	rep stos BYTE PTR es:[edi],al
100001b9:	80 bb 61 01 00 00 00 	cmp    BYTE PTR [ebx+0x161],0x0
100001c0:	74 19                	je     100001db <VGAVideo::open(int, int, void*)+0xe5>
100001c2:	83 c4 14             	add    esp,0x14
100001c5:	31 c0                	xor    eax,eax
100001c7:	5b                   	pop    ebx
100001c8:	5f                   	pop    edi
100001c9:	c3                   	ret    
100001ca:	83 f8 30             	cmp    eax,0x30
100001cd:	0f 95 c0             	setne  al
100001d0:	0f b6 c0             	movzx  eax,al
100001d3:	83 c0 11             	add    eax,0x11
100001d6:	e9 4c ff ff ff       	jmp    10000127 <VGAVideo::open(int, int, void*)+0x31>
100001db:	83 ec 08             	sub    esp,0x8
100001de:	6a 01                	push   0x1
100001e0:	53                   	push   ebx
100001e1:	e8 fc ff ff ff       	call   100001e2 <VGAVideo::open(int, int, void*)+0xec>	100001e2: R_386_PC32	VGAVideo::setPlane(int)
100001e6:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100001ea:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
100001f0:	83 c4 10             	add    esp,0x10
100001f3:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
100001fa:	85 c9                	test   ecx,ecx
100001fc:	78 7c                	js     1000027a <VGAVideo::open(int, int, void*)+0x184>
100001fe:	83 ec 08             	sub    esp,0x8
10000201:	31 c0                	xor    eax,eax
10000203:	89 d7                	mov    edi,edx
10000205:	c1 f9 03             	sar    ecx,0x3
10000208:	f3 aa                	rep stos BYTE PTR es:[edi],al
1000020a:	6a 02                	push   0x2
1000020c:	53                   	push   ebx
1000020d:	e8 fc ff ff ff       	call   1000020e <VGAVideo::open(int, int, void*)+0x118>	1000020e: R_386_PC32	VGAVideo::setPlane(int)
10000212:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000216:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
1000021c:	83 c4 10             	add    esp,0x10
1000021f:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
10000226:	85 c9                	test   ecx,ecx
10000228:	78 4b                	js     10000275 <VGAVideo::open(int, int, void*)+0x17f>
1000022a:	83 ec 08             	sub    esp,0x8
1000022d:	31 c0                	xor    eax,eax
1000022f:	89 d7                	mov    edi,edx
10000231:	c1 f9 03             	sar    ecx,0x3
10000234:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000236:	6a 03                	push   0x3
10000238:	53                   	push   ebx
10000239:	e8 fc ff ff ff       	call   1000023a <VGAVideo::open(int, int, void*)+0x144>	1000023a: R_386_PC32	VGAVideo::setPlane(int)
1000023e:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000242:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
10000248:	83 c4 10             	add    esp,0x10
1000024b:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
10000252:	85 c9                	test   ecx,ecx
10000254:	78 11                	js     10000267 <VGAVideo::open(int, int, void*)+0x171>
10000256:	c1 f9 03             	sar    ecx,0x3
10000259:	31 c0                	xor    eax,eax
1000025b:	89 d7                	mov    edi,edx
1000025d:	f3 aa                	rep stos BYTE PTR es:[edi],al
1000025f:	83 c4 14             	add    esp,0x14
10000262:	31 c0                	xor    eax,eax
10000264:	5b                   	pop    ebx
10000265:	5f                   	pop    edi
10000266:	c3                   	ret    
10000267:	83 c1 07             	add    ecx,0x7
1000026a:	31 c0                	xor    eax,eax
1000026c:	c1 f9 03             	sar    ecx,0x3
1000026f:	89 d7                	mov    edi,edx
10000271:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000273:	eb ea                	jmp    1000025f <VGAVideo::open(int, int, void*)+0x169>
10000275:	83 c1 07             	add    ecx,0x7
10000278:	eb b0                	jmp    1000022a <VGAVideo::open(int, int, void*)+0x134>
1000027a:	83 c1 07             	add    ecx,0x7
1000027d:	e9 7c ff ff ff       	jmp    100001fe <VGAVideo::open(int, int, void*)+0x108>

10000282 <monoPixelLookup(int, int, int)>:
10000282:	56                   	push   esi
10000283:	53                   	push   ebx
10000284:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
10000288:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000028c:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10000290:	89 da                	mov    edx,ebx
10000292:	01 c1                	add    ecx,eax
10000294:	c1 fa 0e             	sar    edx,0xe
10000297:	83 e1 01             	and    ecx,0x1
1000029a:	01 c0                	add    eax,eax
1000029c:	83 e2 03             	and    edx,0x3
1000029f:	83 e0 02             	and    eax,0x2
100002a2:	89 de                	mov    esi,ebx
100002a4:	09 c8                	or     eax,ecx
100002a6:	c1 fe 16             	sar    esi,0x16
100002a9:	89 d9                	mov    ecx,ebx
100002ab:	83 e6 03             	and    esi,0x3
100002ae:	c1 f9 06             	sar    ecx,0x6
100002b1:	83 e1 03             	and    ecx,0x3
100002b4:	81 fb bb bb bb 00    	cmp    ebx,0xbbbbbb
100002ba:	74 1b                	je     100002d7 <monoPixelLookup(int, int, int)+0x55>
100002bc:	8d 1c 32             	lea    ebx,[edx+esi*1]
100002bf:	8d 14 5a             	lea    edx,[edx+ebx*2]
100002c2:	5b                   	pop    ebx
100002c3:	01 d1                	add    ecx,edx
100002c5:	5e                   	pop    esi
100002c6:	ba 80 ea ff 00       	mov    edx,0xffea80
100002cb:	d3 ea                	shr    edx,cl
100002cd:	88 c1                	mov    cl,al
100002cf:	d3 ea                	shr    edx,cl
100002d1:	89 d0                	mov    eax,edx
100002d3:	83 e0 01             	and    eax,0x1
100002d6:	c3                   	ret    
100002d7:	b8 01 00 00 00       	mov    eax,0x1
100002dc:	5b                   	pop    ebx
100002dd:	5e                   	pop    esi
100002de:	c3                   	ret    
100002df:	90                   	nop

100002e0 <VGAVideo::blit(unsigned int*, int, int, int, int)>:
100002e0:	83 ec 18             	sub    esp,0x18
100002e3:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100002e7:	8b 54 24 2c          	mov    edx,DWORD PTR [esp+0x2c]
100002eb:	8b 08                	mov    ecx,DWORD PTR [eax]
100002ed:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100002f1:	52                   	push   edx
100002f2:	ff 74 24 38          	push   DWORD PTR [esp+0x38]
100002f6:	52                   	push   edx
100002f7:	6a 00                	push   0x0
100002f9:	6a 00                	push   0x0
100002fb:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
100002ff:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
10000303:	50                   	push   eax
10000304:	ff 51 38             	call   DWORD PTR [ecx+0x38]
10000307:	83 c4 3c             	add    esp,0x3c
1000030a:	c3                   	ret    
1000030b:	90                   	nop

1000030c <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)>:
1000030c:	57                   	push   edi
1000030d:	56                   	push   esi
1000030e:	53                   	push   ebx
1000030f:	83 ec 30             	sub    esp,0x30
10000312:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10000316:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
1000031a:	8b 7c 24 48          	mov    edi,DWORD PTR [esp+0x48]
1000031e:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10000322:	0f af be 58 01 00 00 	imul   edi,DWORD PTR [esi+0x158]
10000329:	85 c9                	test   ecx,ecx
1000032b:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
1000032f:	0f 8e 18 02 00 00    	jle    1000054d <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x241>
10000335:	8b 5c 24 54          	mov    ebx,DWORD PTR [esp+0x54]
10000339:	85 db                	test   ebx,ebx
1000033b:	0f 8e 0c 02 00 00    	jle    1000054d <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x241>
10000341:	8d 3c 85 00 00 00 00 	lea    edi,[eax*4+0x0]
10000348:	8b 54 24 60          	mov    edx,DWORD PTR [esp+0x60]
1000034c:	0f af 44 24 50       	imul   eax,DWORD PTR [esp+0x50]
10000351:	03 4c 24 48          	add    ecx,DWORD PTR [esp+0x48]
10000355:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10000359:	89 7c 24 2c          	mov    DWORD PTR [esp+0x2c],edi
1000035d:	8d 04 82             	lea    eax,[edx+eax*4]
10000360:	89 4c 24 28          	mov    DWORD PTR [esp+0x28],ecx
10000364:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10000368:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
1000036c:	c7 44 24 14 00 00 00 00 	mov    DWORD PTR [esp+0x14],0x0
10000374:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000378:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
1000037c:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000380:	eb 3f                	jmp    100003c1 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xb5>
10000382:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10000386:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
1000038a:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
1000038e:	8d 59 01             	lea    ebx,[ecx+0x1]
10000391:	8b 00                	mov    eax,DWORD PTR [eax]
10000393:	8d 77 04             	lea    esi,[edi+0x4]
10000396:	ff 37                	push   DWORD PTR [edi]
10000398:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
1000039c:	51                   	push   ecx
1000039d:	ff 74 24 4c          	push   DWORD PTR [esp+0x4c]
100003a1:	ff 50 24             	call   DWORD PTR [eax+0x24]
100003a4:	ff 44 24 24          	inc    DWORD PTR [esp+0x24]
100003a8:	83 c4 10             	add    esp,0x10
100003ab:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100003af:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
100003b3:	89 5c 24 18          	mov    DWORD PTR [esp+0x18],ebx
100003b7:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
100003bb:	0f 8e 64 01 00 00    	jle    10000525 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x219>
100003c1:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100003c5:	2b 44 24 14          	sub    eax,DWORD PTR [esp+0x14]
100003c9:	c1 f8 03             	sar    eax,0x3
100003cc:	74 b4                	je     10000382 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x76>
100003ce:	f6 44 24 18 07       	test   BYTE PTR [esp+0x18],0x7
100003d3:	75 ad                	jne    10000382 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x76>
100003d5:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100003d9:	83 f8 64             	cmp    eax,0x64
100003dc:	7e 08                	jle    100003e6 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xda>
100003de:	c7 44 24 10 64 00 00 00 	mov    DWORD PTR [esp+0x10],0x64
100003e6:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100003ea:	8d 34 c5 00 00 00 00 	lea    esi,[eax*8+0x0]
100003f1:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100003f5:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
100003fc:	0f 84 52 01 00 00    	je     10000554 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x248>
10000402:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000406:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
1000040a:	31 ff                	xor    edi,edi
1000040c:	8d 1c 08             	lea    ebx,[eax+ecx*1]
1000040f:	83 44 24 0c 04       	add    DWORD PTR [esp+0xc],0x4
10000414:	8d 04 3b             	lea    eax,[ebx+edi*1]
10000417:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
1000041b:	47                   	inc    edi
1000041c:	ff 74 24 48          	push   DWORD PTR [esp+0x48]
10000420:	50                   	push   eax
10000421:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
10000424:	e8 fc ff ff ff       	call   10000425 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x119>	10000425: R_386_PC32	monoPixelLookup(int, int, int)
10000429:	83 c4 0c             	add    esp,0xc
1000042c:	88 87 1f 12 00 10    	mov    BYTE PTR [edi+0x1000121f],al	1000042e: R_386_32	.bss
10000432:	39 f7                	cmp    edi,esi
10000434:	7c d9                	jl     1000040f <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x103>
10000436:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
1000043a:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
1000043e:	8b 91 64 01 00 00    	mov    edx,DWORD PTR [ecx+0x164]
10000444:	03 44 24 20          	add    eax,DWORD PTR [esp+0x20]
10000448:	31 c9                	xor    ecx,ecx
1000044a:	c1 f8 03             	sar    eax,0x3
1000044d:	8d bc 10 00 00 00 c2 	lea    edi,[eax+edx*1-0x3e000000]
10000454:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10000458:	80 b8 61 01 00 00 01 	cmp    BYTE PTR [eax+0x161],0x1
1000045f:	19 c0                	sbb    eax,eax
10000461:	83 e0 03             	and    eax,0x3
10000464:	40                   	inc    eax
10000465:	39 c1                	cmp    ecx,eax
10000467:	0f 8d 9b 00 00 00    	jge    10000508 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x1fc>
1000046d:	51                   	push   ecx
1000046e:	be 01 00 00 00       	mov    esi,0x1
10000473:	89 4c 24 20          	mov    DWORD PTR [esp+0x20],ecx
10000477:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
1000047b:	e8 fc ff ff ff       	call   1000047c <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x170>	1000047c: R_386_PC32	VGAVideo::setPlane(int)
10000480:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10000484:	58                   	pop    eax
10000485:	d3 e6                	shl    esi,cl
10000487:	5a                   	pop    edx
10000488:	31 c0                	xor    eax,eax
1000048a:	0f b6 14 c5 20 12 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001220]	1000048e: R_386_32	.bss
10000492:	0f b6 1c c5 21 12 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001221]	10000496: R_386_32	.bss
1000049a:	21 f2                	and    edx,esi
1000049c:	21 f3                	and    ebx,esi
1000049e:	01 d2                	add    edx,edx
100004a0:	09 d3                	or     ebx,edx
100004a2:	0f b6 14 c5 22 12 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001222]	100004a6: R_386_32	.bss
100004aa:	01 db                	add    ebx,ebx
100004ac:	21 f2                	and    edx,esi
100004ae:	09 da                	or     edx,ebx
100004b0:	0f b6 1c c5 23 12 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001223]	100004b4: R_386_32	.bss
100004b8:	01 d2                	add    edx,edx
100004ba:	21 f3                	and    ebx,esi
100004bc:	09 d3                	or     ebx,edx
100004be:	0f b6 14 c5 24 12 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001224]	100004c2: R_386_32	.bss
100004c6:	01 db                	add    ebx,ebx
100004c8:	21 f2                	and    edx,esi
100004ca:	09 da                	or     edx,ebx
100004cc:	0f b6 1c c5 25 12 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001225]	100004d0: R_386_32	.bss
100004d4:	01 d2                	add    edx,edx
100004d6:	21 f3                	and    ebx,esi
100004d8:	09 d3                	or     ebx,edx
100004da:	0f b6 14 c5 26 12 00 10 	movzx  edx,BYTE PTR [eax*8+0x10001226]	100004de: R_386_32	.bss
100004e2:	01 db                	add    ebx,ebx
100004e4:	21 f2                	and    edx,esi
100004e6:	09 da                	or     edx,ebx
100004e8:	0f b6 1c c5 27 12 00 10 	movzx  ebx,BYTE PTR [eax*8+0x10001227]	100004ec: R_386_32	.bss
100004f0:	01 d2                	add    edx,edx
100004f2:	21 f3                	and    ebx,esi
100004f4:	09 da                	or     edx,ebx
100004f6:	d3 ea                	shr    edx,cl
100004f8:	88 14 07             	mov    BYTE PTR [edi+eax*1],dl
100004fb:	40                   	inc    eax
100004fc:	39 44 24 10          	cmp    DWORD PTR [esp+0x10],eax
10000500:	75 88                	jne    1000048a <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x17e>
10000502:	41                   	inc    ecx
10000503:	e9 4c ff ff ff       	jmp    10000454 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x148>
10000508:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000050c:	c1 e0 03             	shl    eax,0x3
1000050f:	01 44 24 14          	add    DWORD PTR [esp+0x14],eax
10000513:	01 44 24 18          	add    DWORD PTR [esp+0x18],eax
10000517:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000051b:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
1000051f:	0f 8f 9c fe ff ff    	jg     100003c1 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xb5>
10000525:	ff 44 24 48          	inc    DWORD PTR [esp+0x48]
10000529:	8b 7c 24 40          	mov    edi,DWORD PTR [esp+0x40]
1000052d:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
10000531:	8b bf 58 01 00 00    	mov    edi,DWORD PTR [edi+0x158]
10000537:	01 4c 24 24          	add    DWORD PTR [esp+0x24],ecx
1000053b:	01 7c 24 20          	add    DWORD PTR [esp+0x20],edi
1000053f:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000543:	39 44 24 48          	cmp    DWORD PTR [esp+0x48],eax
10000547:	0f 85 1b fe ff ff    	jne    10000368 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x5c>
1000054d:	83 c4 30             	add    esp,0x30
10000550:	5b                   	pop    ebx
10000551:	5e                   	pop    esi
10000552:	5f                   	pop    edi
10000553:	c3                   	ret    
10000554:	31 c9                	xor    ecx,ecx
10000556:	83 44 24 0c 04       	add    DWORD PTR [esp+0xc],0x4
1000055b:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000055f:	8b 40 fc             	mov    eax,DWORD PTR [eax-0x4]
10000562:	89 c3                	mov    ebx,eax
10000564:	89 c2                	mov    edx,eax
10000566:	c1 fb 15             	sar    ebx,0x15
10000569:	c1 fa 0a             	sar    edx,0xa
1000056c:	83 e3 07             	and    ebx,0x7
1000056f:	83 e2 38             	and    edx,0x38
10000572:	09 d3                	or     ebx,edx
10000574:	8d 14 00             	lea    edx,[eax+eax*1]
10000577:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
1000057b:	81 e2 c0 01 00 00    	and    edx,0x1c0
10000581:	01 c8                	add    eax,ecx
10000583:	09 da                	or     edx,ebx
10000585:	83 e0 01             	and    eax,0x1
10000588:	41                   	inc    ecx
10000589:	8a 84 50 00 00 00 00 	mov    al,BYTE PTR [eax+edx*2+0x0]	1000058c: R_386_32	dither16Data
10000590:	88 81 1f 12 00 10    	mov    BYTE PTR [ecx+0x1000121f],al	10000592: R_386_32	.bss
10000596:	39 f1                	cmp    ecx,esi
10000598:	7c bc                	jl     10000556 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x24a>
1000059a:	e9 97 fe ff ff       	jmp    10000436 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x12a>
1000059f:	90                   	nop

100005a0 <VGAVideo::putrect(int, int, int, int, unsigned int)>:
100005a0:	57                   	push   edi
100005a1:	56                   	push   esi
100005a2:	53                   	push   ebx
100005a3:	83 ec 40             	sub    esp,0x40
100005a6:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
100005aa:	8b 80 64 01 00 00    	mov    eax,DWORD PTR [eax+0x164]
100005b0:	2d 00 00 00 3e       	sub    eax,0x3e000000
100005b5:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100005b9:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100005bd:	c1 f8 15             	sar    eax,0x15
100005c0:	83 e0 07             	and    eax,0x7
100005c3:	89 c2                	mov    edx,eax
100005c5:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100005c9:	c1 f8 0a             	sar    eax,0xa
100005cc:	83 e0 38             	and    eax,0x38
100005cf:	09 d0                	or     eax,edx
100005d1:	8b 54 24 64          	mov    edx,DWORD PTR [esp+0x64]
100005d5:	01 d2                	add    edx,edx
100005d7:	81 e2 c0 01 00 00    	and    edx,0x1c0
100005dd:	09 d0                	or     eax,edx
100005df:	0f b6 bc 00 00 00 00 00 	movzx  edi,BYTE PTR [eax+eax*1+0x0]	100005e3: R_386_32	dither16Data
100005e7:	0f b6 84 00 01 00 00 00 	movzx  eax,BYTE PTR [eax+eax*1+0x1]	100005eb: R_386_32	dither16Data
100005ef:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
100005f3:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100005f7:	8b 7c 24 60          	mov    edi,DWORD PTR [esp+0x60]
100005fb:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100005ff:	03 7c 24 58          	add    edi,DWORD PTR [esp+0x58]
10000603:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10000607:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
1000060b:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
1000060f:	39 44 24 54          	cmp    DWORD PTR [esp+0x54],eax
10000613:	0f 8d ad 00 00 00    	jge    100006c6 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x126>
10000619:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
1000061d:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
10000621:	2b 7c 24 54          	sub    edi,DWORD PTR [esp+0x54]
10000625:	8b 74 24 50          	mov    esi,DWORD PTR [esp+0x50]
10000629:	89 7c 24 3c          	mov    DWORD PTR [esp+0x3c],edi
1000062d:	0f af 86 58 01 00 00 	imul   eax,DWORD PTR [esi+0x158]
10000634:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10000638:	c1 f8 03             	sar    eax,0x3
1000063b:	c1 ff 03             	sar    edi,0x3
1000063e:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10000642:	89 7c 24 38          	mov    DWORD PTR [esp+0x38],edi
10000646:	74 11                	je     10000659 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xb9>
10000648:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000064c:	83 e0 07             	and    eax,0x7
1000064f:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000653:	0f 84 ff 01 00 00    	je     10000858 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2b8>
10000659:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
1000065d:	03 44 24 54          	add    eax,DWORD PTR [esp+0x54]
10000661:	a8 01                	test   al,0x1
10000663:	0f 84 da 01 00 00    	je     10000843 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2a3>
10000669:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000066d:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000671:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000675:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000679:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
1000067d:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
10000684:	74 47                	je     100006cd <VGAVideo::putrect(int, int, int, int, unsigned int)+0x12d>
10000686:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000068a:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
1000068e:	7d 24                	jge    100006b4 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
10000690:	8b 5c 24 58          	mov    ebx,DWORD PTR [esp+0x58]
10000694:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000698:	8b 00                	mov    eax,DWORD PTR [eax]
1000069a:	ff 74 24 64          	push   DWORD PTR [esp+0x64]
1000069e:	53                   	push   ebx
1000069f:	43                   	inc    ebx
100006a0:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
100006a4:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
100006a8:	ff 50 24             	call   DWORD PTR [eax+0x24]
100006ab:	83 c4 10             	add    esp,0x10
100006ae:	39 5c 24 0c          	cmp    DWORD PTR [esp+0xc],ebx
100006b2:	75 e0                	jne    10000694 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xf4>
100006b4:	ff 44 24 54          	inc    DWORD PTR [esp+0x54]
100006b8:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
100006bc:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
100006c0:	0f 8f 53 ff ff ff    	jg     10000619 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x79>
100006c6:	83 c4 40             	add    esp,0x40
100006c9:	5b                   	pop    ebx
100006ca:	5e                   	pop    esi
100006cb:	5f                   	pop    edi
100006cc:	c3                   	ret    
100006cd:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100006d1:	c7 44 24 18 00 00 00 00 	mov    DWORD PTR [esp+0x18],0x0
100006d9:	f7 d0                	not    eax
100006db:	83 e0 07             	and    eax,0x7
100006de:	89 c7                	mov    edi,eax
100006e0:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100006e4:	89 f9                	mov    ecx,edi
100006e6:	b8 fe ff ff ff       	mov    eax,0xfffffffe
100006eb:	d3 c0                	rol    eax,cl
100006ed:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
100006f1:	83 ec 08             	sub    esp,0x8
100006f4:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100006f8:	ff 74 24 5c          	push   DWORD PTR [esp+0x5c]
100006fc:	e8 fc ff ff ff       	call   100006fd <VGAVideo::putrect(int, int, int, int, unsigned int)+0x15d>	100006fd: R_386_PC32	VGAVideo::setPlane(int)
10000701:	83 c4 10             	add    esp,0x10
10000704:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000708:	39 7c 24 14          	cmp    DWORD PTR [esp+0x14],edi
1000070c:	0f 84 c2 00 00 00    	je     100007d4 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x234>
10000712:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10000716:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
1000071a:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000071e:	d3 fe                	sar    esi,cl
10000720:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
10000724:	83 e6 01             	and    esi,0x1
10000727:	d3 e6                	shl    esi,cl
10000729:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
1000072d:	0f 8d aa 03 00 00    	jge    10000add <VGAVideo::putrect(int, int, int, int, unsigned int)+0x53d>
10000733:	8a 44 24 28          	mov    al,BYTE PTR [esp+0x28]
10000737:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
1000073b:	89 c7                	mov    edi,eax
1000073d:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10000741:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000745:	83 c2 02             	add    edx,0x2
10000748:	8d 1c 08             	lea    ebx,[eax+ecx*1]
1000074b:	89 f8                	mov    eax,edi
1000074d:	22 03                	and    al,BYTE PTR [ebx]
1000074f:	09 f0                	or     eax,esi
10000751:	88 03                	mov    BYTE PTR [ebx],al
10000753:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000757:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
1000075d:	89 c3                	mov    ebx,eax
1000075f:	c1 fb 02             	sar    ebx,0x2
10000762:	01 d9                	add    ecx,ebx
10000764:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
10000768:	7f d7                	jg     10000741 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1a1>
1000076a:	c1 f8 03             	sar    eax,0x3
1000076d:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10000771:	03 44 24 24          	add    eax,DWORD PTR [esp+0x24]
10000775:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
10000779:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
1000077d:	d3 fe                	sar    esi,cl
1000077f:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
10000783:	83 e6 01             	and    esi,0x1
10000786:	d3 e6                	shl    esi,cl
10000788:	8d 4f 01             	lea    ecx,[edi+0x1]
1000078b:	83 7c 24 60 01       	cmp    DWORD PTR [esp+0x60],0x1
10000790:	7e 2c                	jle    100007be <VGAVideo::putrect(int, int, int, int, unsigned int)+0x21e>
10000792:	8a 5c 24 28          	mov    bl,BYTE PTR [esp+0x28]
10000796:	89 df                	mov    edi,ebx
10000798:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
1000079c:	89 fa                	mov    edx,edi
1000079e:	01 c3                	add    ebx,eax
100007a0:	83 c1 02             	add    ecx,0x2
100007a3:	22 13                	and    dl,BYTE PTR [ebx]
100007a5:	09 f2                	or     edx,esi
100007a7:	88 13                	mov    BYTE PTR [ebx],dl
100007a9:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
100007ad:	8b 93 58 01 00 00    	mov    edx,DWORD PTR [ebx+0x158]
100007b3:	c1 fa 02             	sar    edx,0x2
100007b6:	01 d0                	add    eax,edx
100007b8:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
100007bc:	7f da                	jg     10000798 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1f8>
100007be:	ff 44 24 18          	inc    DWORD PTR [esp+0x18]
100007c2:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100007c6:	83 f8 04             	cmp    eax,0x4
100007c9:	0f 85 22 ff ff ff    	jne    100006f1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x151>
100007cf:	e9 e0 fe ff ff       	jmp    100006b4 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
100007d4:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
100007d8:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100007dc:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100007e0:	d3 f8                	sar    eax,cl
100007e2:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
100007e6:	83 e0 01             	and    eax,0x1
100007e9:	d3 e0                	shl    eax,cl
100007eb:	39 7c 24 58          	cmp    DWORD PTR [esp+0x58],edi
100007ef:	7d cd                	jge    100007be <VGAVideo::putrect(int, int, int, int, unsigned int)+0x21e>
100007f1:	89 c7                	mov    edi,eax
100007f3:	0f b6 74 24 28       	movzx  esi,BYTE PTR [esp+0x28]
100007f8:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
100007fc:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10000800:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000804:	42                   	inc    edx
10000805:	8d 1c 08             	lea    ebx,[eax+ecx*1]
10000808:	89 f0                	mov    eax,esi
1000080a:	22 03                	and    al,BYTE PTR [ebx]
1000080c:	88 44 24 1c          	mov    BYTE PTR [esp+0x1c],al
10000810:	89 f8                	mov    eax,edi
10000812:	0b 44 24 1c          	or     eax,DWORD PTR [esp+0x1c]
10000816:	88 03                	mov    BYTE PTR [ebx],al
10000818:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
1000081c:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000822:	c1 f8 03             	sar    eax,0x3
10000825:	01 c1                	add    ecx,eax
10000827:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
1000082b:	75 d3                	jne    10000800 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x260>
1000082d:	ff 44 24 18          	inc    DWORD PTR [esp+0x18]
10000831:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10000835:	83 f8 04             	cmp    eax,0x4
10000838:	0f 85 b3 fe ff ff    	jne    100006f1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x151>
1000083e:	e9 71 fe ff ff       	jmp    100006b4 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x114>
10000843:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000847:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
1000084b:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000084f:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000853:	e9 21 fe ff ff       	jmp    10000679 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xd9>
10000858:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
1000085c:	83 e0 01             	and    eax,0x1
1000085f:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000863:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000867:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
1000086b:	80 b8 61 01 00 00 01 	cmp    BYTE PTR [eax+0x161],0x1
10000872:	19 c0                	sbb    eax,eax
10000874:	83 e0 03             	and    eax,0x3
10000877:	40                   	inc    eax
10000878:	39 c7                	cmp    edi,eax
1000087a:	0f 8d 33 02 00 00    	jge    10000ab3 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x513>
10000880:	57                   	push   edi
10000881:	ff 74 24 54          	push   DWORD PTR [esp+0x54]
10000885:	e8 fc ff ff ff       	call   10000886 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2e6>	10000886: R_386_PC32	VGAVideo::setPlane(int)
1000088a:	5a                   	pop    edx
1000088b:	59                   	pop    ecx
1000088c:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000890:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
10000897:	0f 84 59 01 00 00    	je     100009f6 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x456>
1000089d:	89 f9                	mov    ecx,edi
1000089f:	b8 01 00 00 00       	mov    eax,0x1
100008a4:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
100008a8:	d3 e0                	shl    eax,cl
100008aa:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100008ae:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
100008b2:	01 c7                	add    edi,eax
100008b4:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
100008b8:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
100008bc:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100008c0:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
100008c4:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
100008c8:	0f 8d 0d 01 00 00    	jge    100009db <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
100008ce:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100008d2:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
100008d6:	40                   	inc    eax
100008d7:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100008db:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100008df:	85 c0                	test   eax,eax
100008e1:	0f 85 9e 00 00 00    	jne    10000985 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3e5>
100008e7:	eb 2a                	jmp    10000913 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x373>
100008e9:	85 c0                	test   eax,eax
100008eb:	b9 aa 00 00 00       	mov    ecx,0xaa
100008f0:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100008f4:	74 6d                	je     10000963 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3c3>
100008f6:	88 0c 18             	mov    BYTE PTR [eax+ebx*1],cl
100008f9:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
100008fd:	46                   	inc    esi
100008fe:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000904:	c1 f8 03             	sar    eax,0x3
10000907:	01 c3                	add    ebx,eax
10000909:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
1000090d:	0f 84 c8 00 00 00    	je     100009db <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
10000913:	56                   	push   esi
10000914:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
10000918:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
1000091c:	e8 fc ff ff ff       	call   1000091d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x37d>	1000091d: R_386_PC32	monoPixelLookup(int, int, int)
10000921:	83 c4 0c             	add    esp,0xc
10000924:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000928:	56                   	push   esi
10000929:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
1000092d:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
10000931:	e8 fc ff ff ff       	call   10000932 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x392>	10000932: R_386_PC32	monoPixelLookup(int, int, int)
10000936:	83 c4 0c             	add    esp,0xc
10000939:	89 c7                	mov    edi,eax
1000093b:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
1000093f:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000943:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000947:	21 ca                	and    edx,ecx
10000949:	21 f9                	and    ecx,edi
1000094b:	89 d0                	mov    eax,edx
1000094d:	89 ca                	mov    edx,ecx
1000094f:	74 98                	je     100008e9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x349>
10000951:	85 c0                	test   eax,eax
10000953:	b9 ff 00 00 00       	mov    ecx,0xff
10000958:	ba 55 00 00 00       	mov    edx,0x55
1000095d:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000961:	75 93                	jne    100008f6 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x356>
10000963:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
10000966:	eb 91                	jmp    100008f9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x359>
10000968:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000096c:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
1000096f:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000973:	46                   	inc    esi
10000974:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
1000097a:	c1 f8 03             	sar    eax,0x3
1000097d:	01 c3                	add    ebx,eax
1000097f:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
10000983:	74 56                	je     100009db <VGAVideo::putrect(int, int, int, int, unsigned int)+0x43b>
10000985:	56                   	push   esi
10000986:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
1000098a:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
1000098e:	e8 fc ff ff ff       	call   1000098f <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3ef>	1000098f: R_386_PC32	monoPixelLookup(int, int, int)
10000993:	83 c4 0c             	add    esp,0xc
10000996:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
1000099a:	56                   	push   esi
1000099b:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
1000099f:	ff 74 24 6c          	push   DWORD PTR [esp+0x6c]
100009a3:	e8 fc ff ff ff       	call   100009a4 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x404>	100009a4: R_386_PC32	monoPixelLookup(int, int, int)
100009a8:	83 c4 0c             	add    esp,0xc
100009ab:	89 c7                	mov    edi,eax
100009ad:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
100009b1:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100009b5:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100009b9:	21 c8                	and    eax,ecx
100009bb:	83 f8 01             	cmp    eax,0x1
100009be:	19 d2                	sbb    edx,edx
100009c0:	f7 d2                	not    edx
100009c2:	83 e2 55             	and    edx,0x55
100009c5:	83 f8 01             	cmp    eax,0x1
100009c8:	19 c0                	sbb    eax,eax
100009ca:	83 e0 ab             	and    eax,0xffffffab
100009cd:	48                   	dec    eax
100009ce:	85 cf                	test   edi,ecx
100009d0:	74 96                	je     10000968 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3c8>
100009d2:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
100009d6:	88 04 1f             	mov    BYTE PTR [edi+ebx*1],al
100009d9:	eb 94                	jmp    1000096f <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3cf>
100009db:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
100009df:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100009e3:	39 44 24 28          	cmp    DWORD PTR [esp+0x28],eax
100009e7:	0f 85 cf fe ff ff    	jne    100008bc <VGAVideo::putrect(int, int, int, int, unsigned int)+0x31c>
100009ed:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
100009f1:	e9 6d fe ff ff       	jmp    10000863 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2c3>
100009f6:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100009fa:	8a 4c 24 2c          	mov    cl,BYTE PTR [esp+0x2c]
100009fe:	d3 f8                	sar    eax,cl
10000a00:	a8 01                	test   al,0x1
10000a02:	0f 84 92 00 00 00    	je     10000a9a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4fa>
10000a08:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000a0c:	d3 f8                	sar    eax,cl
10000a0e:	83 e0 01             	and    eax,0x1
10000a11:	83 f8 01             	cmp    eax,0x1
10000a14:	19 ff                	sbb    edi,edi
10000a16:	89 f9                	mov    ecx,edi
10000a18:	89 f8                	mov    eax,edi
10000a1a:	83 e1 56             	and    ecx,0x56
10000a1d:	83 e0 ab             	and    eax,0xffffffab
10000a20:	49                   	dec    ecx
10000a21:	05 ff 00 00 00       	add    eax,0xff
10000a26:	88 4c 24 1c          	mov    BYTE PTR [esp+0x1c],cl
10000a2a:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000a2e:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000a32:	39 44 24 58          	cmp    DWORD PTR [esp+0x58],eax
10000a36:	7d b5                	jge    100009ed <VGAVideo::putrect(int, int, int, int, unsigned int)+0x44d>
10000a38:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10000a3c:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10000a40:	89 de                	mov    esi,ebx
10000a42:	01 df                	add    edi,ebx
10000a44:	8b 5c 24 54          	mov    ebx,DWORD PTR [esp+0x54]
10000a48:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10000a4c:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
10000a50:	01 df                	add    edi,ebx
10000a52:	8d 1c 03             	lea    ebx,[ebx+eax*1]
10000a55:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
10000a59:	89 f2                	mov    edx,esi
10000a5b:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000a5f:	eb 1b                	jmp    10000a7c <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4dc>
10000a61:	8a 4c 24 18          	mov    cl,BYTE PTR [esp+0x18]
10000a65:	88 0c 17             	mov    BYTE PTR [edi+edx*1],cl
10000a68:	40                   	inc    eax
10000a69:	8b 7c 24 50          	mov    edi,DWORD PTR [esp+0x50]
10000a6d:	8b 8f 58 01 00 00    	mov    ecx,DWORD PTR [edi+0x158]
10000a73:	c1 f9 03             	sar    ecx,0x3
10000a76:	01 ca                	add    edx,ecx
10000a78:	39 c3                	cmp    ebx,eax
10000a7a:	74 0e                	je     10000a8a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4ea>
10000a7c:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10000a80:	a8 01                	test   al,0x1
10000a82:	74 dd                	je     10000a61 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4c1>
10000a84:	8a 4c 24 1c          	mov    cl,BYTE PTR [esp+0x1c]
10000a88:	eb db                	jmp    10000a65 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4c5>
10000a8a:	46                   	inc    esi
10000a8b:	39 74 24 20          	cmp    DWORD PTR [esp+0x20],esi
10000a8f:	75 c8                	jne    10000a59 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4b9>
10000a91:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10000a95:	e9 c9 fd ff ff       	jmp    10000863 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2c3>
10000a9a:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000a9e:	d3 fe                	sar    esi,cl
10000aa0:	83 e6 01             	and    esi,0x1
10000aa3:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
10000aa7:	75 43                	jne    10000aec <VGAVideo::putrect(int, int, int, int, unsigned int)+0x54c>
10000aa9:	c6 44 24 1c 00       	mov    BYTE PTR [esp+0x1c],0x0
10000aae:	e9 7b ff ff ff       	jmp    10000a2e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x48e>
10000ab3:	8b 7c 24 54          	mov    edi,DWORD PTR [esp+0x54]
10000ab7:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10000abb:	83 e0 f8             	and    eax,0xfffffff8
10000abe:	8d 44 07 ff          	lea    eax,[edi+eax*1-0x1]
10000ac2:	89 44 24 54          	mov    DWORD PTR [esp+0x54],eax
10000ac6:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10000aca:	ff 44 24 54          	inc    DWORD PTR [esp+0x54]
10000ace:	3b 44 24 54          	cmp    eax,DWORD PTR [esp+0x54]
10000ad2:	0f 8f 41 fb ff ff    	jg     10000619 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x79>
10000ad8:	e9 e9 fb ff ff       	jmp    100006c6 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x126>
10000add:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10000ae1:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000ae7:	e9 7e fc ff ff       	jmp    1000076a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1ca>
10000aec:	c6 44 24 1c aa       	mov    BYTE PTR [esp+0x1c],0xaa
10000af1:	c7 44 24 18 55 00 00 00 	mov    DWORD PTR [esp+0x18],0x55
10000af9:	e9 30 ff ff ff       	jmp    10000a2e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x48e>

10000afe <VGAVideo::putpixel(int, int, unsigned int)>:
10000afe:	57                   	push   edi
10000aff:	56                   	push   esi
10000b00:	53                   	push   ebx
10000b01:	83 ec 14             	sub    esp,0x14
10000b04:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
10000b08:	8b 5c 24 28          	mov    ebx,DWORD PTR [esp+0x28]
10000b0c:	8b 86 64 01 00 00    	mov    eax,DWORD PTR [esi+0x164]
10000b12:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
10000b18:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000b1d:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000b21:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000b25:	89 d8                	mov    eax,ebx
10000b27:	f7 d0                	not    eax
10000b29:	83 e0 07             	and    eax,0x7
10000b2c:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000b30:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000b34:	0f af 86 58 01 00 00 	imul   eax,DWORD PTR [esi+0x158]
10000b3b:	01 d8                	add    eax,ebx
10000b3d:	c1 f8 03             	sar    eax,0x3
10000b40:	84 d2                	test   dl,dl
10000b42:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000b46:	74 75                	je     10000bbd <VGAVideo::putpixel(int, int, unsigned int)+0xbf>
10000b48:	88 54 24 10          	mov    BYTE PTR [esp+0x10],dl
10000b4c:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000b50:	53                   	push   ebx
10000b51:	57                   	push   edi
10000b52:	e8 fc ff ff ff       	call   10000b53 <VGAVideo::putpixel(int, int, unsigned int)+0x55>	10000b53: R_386_PC32	monoPixelLookup(int, int, int)
10000b57:	83 c4 0c             	add    esp,0xc
10000b5a:	89 04 24             	mov    DWORD PTR [esp],eax
10000b5d:	8a 54 24 10          	mov    dl,BYTE PTR [esp+0x10]
10000b61:	b8 fe ff ff ff       	mov    eax,0xfffffffe
10000b66:	8a 4c 24 04          	mov    cl,BYTE PTR [esp+0x4]
10000b6a:	31 db                	xor    ebx,ebx
10000b6c:	d3 c0                	rol    eax,cl
10000b6e:	84 d2                	test   dl,dl
10000b70:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000b74:	74 3b                	je     10000bb1 <VGAVideo::putpixel(int, int, unsigned int)+0xb3>
10000b76:	85 db                	test   ebx,ebx
10000b78:	75 3c                	jne    10000bb6 <VGAVideo::putpixel(int, int, unsigned int)+0xb8>
10000b7a:	53                   	push   ebx
10000b7b:	43                   	inc    ebx
10000b7c:	56                   	push   esi
10000b7d:	e8 fc ff ff ff       	call   10000b7e <VGAVideo::putpixel(int, int, unsigned int)+0x80>	10000b7e: R_386_PC32	VGAVideo::setPlane(int)
10000b82:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000b86:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000b8a:	8a 44 24 18          	mov    al,BYTE PTR [esp+0x18]
10000b8e:	03 7c 24 14          	add    edi,DWORD PTR [esp+0x14]
10000b92:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10000b96:	22 07                	and    al,BYTE PTR [edi]
10000b98:	d1 7c 24 08          	sar    DWORD PTR [esp+0x8],1
10000b9c:	83 e2 01             	and    edx,0x1
10000b9f:	d3 e2                	shl    edx,cl
10000ba1:	09 d0                	or     eax,edx
10000ba3:	88 07                	mov    BYTE PTR [edi],al
10000ba5:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
10000bab:	58                   	pop    eax
10000bac:	84 d2                	test   dl,dl
10000bae:	59                   	pop    ecx
10000baf:	75 c5                	jne    10000b76 <VGAVideo::putpixel(int, int, unsigned int)+0x78>
10000bb1:	83 fb 04             	cmp    ebx,0x4
10000bb4:	75 c4                	jne    10000b7a <VGAVideo::putpixel(int, int, unsigned int)+0x7c>
10000bb6:	83 c4 14             	add    esp,0x14
10000bb9:	5b                   	pop    ebx
10000bba:	5e                   	pop    esi
10000bbb:	5f                   	pop    edi
10000bbc:	c3                   	ret    
10000bbd:	89 f9                	mov    ecx,edi
10000bbf:	89 f8                	mov    eax,edi
10000bc1:	c1 f9 15             	sar    ecx,0x15
10000bc4:	c1 f8 0a             	sar    eax,0xa
10000bc7:	83 e1 07             	and    ecx,0x7
10000bca:	83 e0 38             	and    eax,0x38
10000bcd:	09 c1                	or     ecx,eax
10000bcf:	8d 04 3f             	lea    eax,[edi+edi*1]
10000bd2:	25 c0 01 00 00       	and    eax,0x1c0
10000bd7:	09 c8                	or     eax,ecx
10000bd9:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
10000bdd:	01 d9                	add    ecx,ebx
10000bdf:	83 e1 01             	and    ecx,0x1
10000be2:	0f b6 84 41 00 00 00 00 	movzx  eax,BYTE PTR [ecx+eax*2+0x0]	10000be6: R_386_32	dither16Data
10000bea:	89 04 24             	mov    DWORD PTR [esp],eax
10000bed:	e9 6f ff ff ff       	jmp    10000b61 <VGAVideo::putpixel(int, int, unsigned int)+0x63>

10000bf2 <VGAVideo::~VGAVideo()>:
10000bf2:	55                   	push   ebp
10000bf3:	89 e5                	mov    ebp,esp
10000bf5:	83 ec 08             	sub    esp,0x8
10000bf8:	ba 08 00 00 00       	mov    edx,0x8	10000bf9: R_386_32	vtable for VGAVideo
10000bfd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000c00:	89 10                	mov    DWORD PTR [eax],edx
10000c02:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000c05:	83 ec 0c             	sub    esp,0xc
10000c08:	50                   	push   eax
10000c09:	e8 fc ff ff ff       	call   10000c0a <VGAVideo::~VGAVideo()+0x18>	10000c0a: R_386_PC32	Video::~Video()
10000c0e:	83 c4 10             	add    esp,0x10
10000c11:	90                   	nop
10000c12:	c9                   	leave  
10000c13:	c3                   	ret    

10000c14 <VGAVideo::~VGAVideo()>:
10000c14:	55                   	push   ebp
10000c15:	89 e5                	mov    ebp,esp
10000c17:	83 ec 08             	sub    esp,0x8
10000c1a:	83 ec 0c             	sub    esp,0xc
10000c1d:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000c20:	e8 fc ff ff ff       	call   10000c21 <VGAVideo::~VGAVideo()+0xd>	10000c21: R_386_PC32	VGAVideo::~VGAVideo()
10000c25:	83 c4 10             	add    esp,0x10
10000c28:	83 ec 08             	sub    esp,0x8
10000c2b:	68 6c 01 00 00       	push   0x16c
10000c30:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000c33:	e8 fc ff ff ff       	call   10000c34 <VGAVideo::~VGAVideo()+0x20>	10000c34: R_386_PC32	operator delete(void*, unsigned long)
10000c38:	83 c4 10             	add    esp,0x10
10000c3b:	c9                   	leave  
10000c3c:	c3                   	ret    
10000c3d:	66 90                	xchg   ax,ax
10000c3f:	90                   	nop

10000c40 <PHYS_RAM_TABLE_SIZE>:
10000c40:	13 05 00 00                                         ....

10000c44 <PHYS_HIGHEST_UNUSED_ADDRESS>:
10000c44:	24 05 00 00                                         $...

10000c48 <PHYS_RAM_TABLE>:
10000c48:	00 06 00 00                                         ....

10000c4c <PHYS_DMA_MEMORY_1>:
10000c4c:	00 00 01 00                                         ....

10000c50 <PHYS_PHYS_PAGE_BITMAP>:
10000c50:	00 00 02 00                                         ....

10000c54 <PHYS_VIRT_PAGE_BITMAP>:
10000c54:	00 00 04 00                                         ....

10000c58 <PHYS_DMA_MEMORY_2>:
10000c58:	00 00 06 00                                         ....

10000c5c <PHYS_ALLOCED_VIRT_PAGES>:
10000c5c:	00 00 10 00                                         ....

10000c60 <PHYS_KRNL_PAGE_DIRECTORY>:
10000c60:	00 10 00 00                                         ....

10000c64 <VIRT_KERNEL_BASE>:
10000c64:	00 00 00 c0                                         ....

10000c68 <VIRT_LOW_MEGS>:
10000c68:	00 00 00 c2                                         ....

10000c6c <VIRT_CPU_SPECIFIC>:
10000c6c:	00 00 40 c2                                         ..@.

10000c70 <VIRT_RECURSIVE_SPOT_1>:
10000c70:	00 00 80 c2                                         ....

10000c74 <VIRT_RECURSIVE_SPOT_2>:
10000c74:	00 00 c0 c2                                         ....

10000c78 <VIRT_DMA_MEMORY_1>:
10000c78:	00 00 01 c2                                         ....

10000c7c <SIZE_DMA_MEMORY_1>:
10000c7c:	00 00 01 00                                         ....

10000c80 <VIRT_DMA_MEMORY_2>:
10000c80:	00 00 06 c2                                         ....

10000c84 <SIZE_DMA_MEMORY_2>:
10000c84:	00 00 02 00                                         ....

10000c88 <VIRT_KRNL_PAGE_DIRECTORY>:
10000c88:	00 10 00 c2                                         ....

10000c8c <VIRT_PHYS_PAGE_BITMAP>:
10000c8c:	00 00 02 c2                                         ....

10000c90 <SIZE_PHYS_PAGE_BITMAP>:
10000c90:	00 00 02 00                                         ....

10000c94 <VIRT_VIRT_PAGE_BITMAP>:
10000c94:	00 00 04 c2                                         ....

10000c98 <SIZE_VIRT_PAGE_BITMAP>:
10000c98:	00 80 00 00                                         ....

10000c9c <VIRT_RAM_TABLE>:
10000c9c:	00 06 00 c2                                         ....

10000ca0 <VIRT_RAM_TABLE_SIZE>:
10000ca0:	13 05 00 c2                                         ....

10000ca4 <VIRT_HIGHEST_UNUSED_ADDRESS>:
10000ca4:	24 05 00 c2                                         $...

10000ca8 <SIZE_APP_STACK_USER>:
10000ca8:	00 00 18 00                                         ....

10000cac <SIZE_APP_STACK_KRNL>:
10000cac:	00 00 08 00                                         ....

10000cb0 <SIZE_APP_STACK_TOTAL>:
10000cb0:	00 00 20 00                                         .. .

10000cb4 <VIRT_APP_DATA>:
10000cb4:	00 00 00 10                                         ....

10000cb8 <VIRT_APP_STACK_USER_TOP>:
10000cb8:	00 00 00 02                                         ....

10000cbc <VIRT_APP_STACK_KRNL_TOP>:
10000cbc:	00 00 e8 01                                         ....

10000cc0 <VIRT_HEAP_MIN>:
10000cc0:	00 00 00 c8                                         ....

10000cc4 <VIRT_HEAP_MAX>:
10000cc4:	ff ff ff ef                                         ....

10000cc8 <VIRT_SBRK_MIN>:
10000cc8:	00 00 00 f0                                         ....

10000ccc <VIRT_SBRK_MAX>:
10000ccc:	00 00 c0 ff                                         ....

10000cd0 <VIRT_ALLOCED_VIRT_PAGES>:
10000cd0:	00 00 10 c2                                         ....

10000cd4 <VIRT_ACPI_DRIVER>:
10000cd4:	00 40 48 c2                                         .@H.

10000cd8 <TERMINAL_KEYBUFFER_IN_SIZE>:
10000cd8:	80 00 00 00                                         ....

10000cdc <TERMINAL_KEYBUFFER_OUT_SIZE>:
10000cdc:	80 00 00 00 56 47 41 20 44 69 73 70 6c 61 79 00     ....VGA Display.
10000cec:	43 3a 2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d     C:/Banana/System
10000cfc:	2f 56 47 41 2e 43 4f 4d 00 53 65 74 20 74 6f 20     /VGA.COM.Set to 
10000d0c:	76 69 64 65 6f 20 6d 6f 64 65 20 25 64 0a 00 90     video mode %d...

10000d1c <vtable for VGAVideo>:
	...
	10000d24: R_386_32	VGAVideo::~VGAVideo()
	10000d28: R_386_32	VGAVideo::~VGAVideo()
	10000d2c: R_386_32	VGAVideo::open(int, int, void*)
	10000d30: R_386_32	VGAVideo::close(int, int, void*)
	10000d34: R_386_32	Device::hibernate()
	10000d38: R_386_32	Device::wake()
	10000d3c: R_386_32	Device::detect()
	10000d40: R_386_32	Device::disableLegacy()
	10000d44: R_386_32	Device::powerSaving(PowerSavingLevel)
	10000d48: R_386_32	VGAVideo::putpixel(int, int, unsigned int)
	10000d4c: R_386_32	VGAVideo::putrect(int, int, int, int, unsigned int)
	10000d50: R_386_32	Video::putTGA(int, int, unsigned char*, int)
	10000d54: R_386_32	Video::drawCursor(int, int, unsigned int*, int)
	10000d58: R_386_32	VGAVideo::readPixelApprox(int, int)
	10000d5c: R_386_32	VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)
	10000d60: R_386_32	VGAVideo::blit(unsigned int*, int, int, int, int)
	10000d64: R_386_32	Video::clearScreen(unsigned int)
