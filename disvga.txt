
packages/banana/32/0002/vga.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	53                   	push   ebx
10000004:	83 ec 14             	sub    esp,0x14
10000007:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000000a:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
1000000d:	c7 45 ec 6c 01 00 00 	mov    DWORD PTR [ebp-0x14],0x16c
10000014:	83 ec 0c             	sub    esp,0xc
10000017:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
1000001a:	e8 fc ff ff ff       	call   1000001b <start(void*)+0x1b>	1000001b: R_386_PC32	malloc
1000001f:	83 c4 10             	add    esp,0x10
10000022:	89 c3                	mov    ebx,eax
10000024:	83 ec 0c             	sub    esp,0xc
10000027:	53                   	push   ebx
10000028:	e8 fc ff ff ff       	call   10000029 <start(void*)+0x29>	10000029: R_386_PC32	VGAVideo::VGAVideo()
1000002d:	83 c4 10             	add    esp,0x10
10000030:	89 5d f0             	mov    DWORD PTR [ebp-0x10],ebx
10000033:	83 ec 08             	sub    esp,0x8
10000036:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000039:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000003c:	e8 fc ff ff ff       	call   1000003d <start(void*)+0x3d>	1000003d: R_386_PC32	Device::addChild(Device*)
10000041:	83 c4 10             	add    esp,0x10
10000044:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000047:	8b 00                	mov    eax,DWORD PTR [eax]
10000049:	83 c0 08             	add    eax,0x8
1000004c:	8b 00                	mov    eax,DWORD PTR [eax]
1000004e:	6a 00                	push   0x0
10000050:	6a 00                	push   0x0
10000052:	6a 00                	push   0x0
10000054:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000057:	ff d0                	call   eax
10000059:	83 c4 10             	add    esp,0x10
1000005c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000005f:	a3 00 00 00 00       	mov    ds:0x0,eax	10000060: R_386_32	screen
10000064:	90                   	nop
10000065:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000068:	c9                   	leave  
10000069:	c3                   	ret    

1000006a <VGAVideo::setPlane(int)>:
1000006a:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000006e:	39 0d 00 0e 00 10    	cmp    DWORD PTR ds:0x10000e00,ecx	10000070: R_386_32	.data
10000074:	74 2b                	je     100000a1 <VGAVideo::setPlane(int)+0x37>
10000076:	89 0d 00 0e 00 10    	mov    DWORD PTR ds:0x10000e00,ecx	10000078: R_386_32	.data
1000007c:	b0 04                	mov    al,0x4
1000007e:	ba ce 03 00 00       	mov    edx,0x3ce
10000083:	ee                   	out    dx,al
10000084:	ba cf 03 00 00       	mov    edx,0x3cf
10000089:	88 c8                	mov    al,cl
1000008b:	ee                   	out    dx,al
1000008c:	b0 02                	mov    al,0x2
1000008e:	ba c4 03 00 00       	mov    edx,0x3c4
10000093:	ee                   	out    dx,al
10000094:	b8 01 00 00 00       	mov    eax,0x1
10000099:	ba c5 03 00 00       	mov    edx,0x3c5
1000009e:	d3 e0                	shl    eax,cl
100000a0:	ee                   	out    dx,al
100000a1:	c3                   	ret    

100000a2 <VGAVideo::VGAVideo()>:
100000a2:	55                   	push   ebp
100000a3:	89 e5                	mov    ebp,esp
100000a5:	83 ec 08             	sub    esp,0x8
100000a8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000ab:	83 ec 08             	sub    esp,0x8
100000ae:	68 68 0d 00 10       	push   0x10000d68	100000af: R_386_32	.text
100000b3:	50                   	push   eax
100000b4:	e8 fc ff ff ff       	call   100000b5 <VGAVideo::VGAVideo()+0x13>	100000b5: R_386_PC32	Video::Video(char const*)
100000b9:	83 c4 10             	add    esp,0x10
100000bc:	ba 08 00 00 00       	mov    edx,0x8	100000bd: R_386_32	vtable for VGAVideo
100000c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c4:	89 10                	mov    DWORD PTR [eax],edx
100000c6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c9:	c7 80 64 01 00 00 00 00 0a 00 	mov    DWORD PTR [eax+0x164],0xa0000
100000d3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000d6:	c7 80 68 01 00 00 12 00 00 00 	mov    DWORD PTR [eax+0x168],0x12
100000e0:	90                   	nop
100000e1:	c9                   	leave  
100000e2:	c3                   	ret    
100000e3:	90                   	nop

100000e4 <VGAVideo::close(int, int, void*)>:
100000e4:	31 c0                	xor    eax,eax
100000e6:	c3                   	ret    

100000e7 <get_bios_area_video_type()>:
100000e7:	a1 10 04 00 00       	mov    eax,ds:0x410
100000ec:	83 e0 30             	and    eax,0x30
100000ef:	c3                   	ret    

100000f0 <VGAVideo::open(int, int, void*)>:
100000f0:	57                   	push   edi
100000f1:	53                   	push   ebx
100000f2:	83 ec 14             	sub    esp,0x14
100000f5:	e8 fc ff ff ff       	call   100000f6 <VGAVideo::open(int, int, void*)+0x6>	100000f6: R_386_PC32	get_bios_area_video_type()
100000fa:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
100000fe:	83 f8 30             	cmp    eax,0x30
10000101:	0f 94 83 61 01 00 00 	sete   BYTE PTR [ebx+0x161]
10000108:	f6 05 01 00 00 00 08 	test   BYTE PTR ds:0x1,0x8	1000010a: R_386_32	sysBootSettings
1000010f:	0f 84 af 00 00 00    	je     100001c4 <VGAVideo::open(int, int, void*)+0xd4>
10000115:	c6 83 61 01 00 00 01 	mov    BYTE PTR [ebx+0x161],0x1
1000011c:	b8 0f 00 00 00       	mov    eax,0xf
10000121:	83 ec 0c             	sub    esp,0xc
10000124:	89 83 68 01 00 00    	mov    DWORD PTR [ebx+0x168],eax
1000012a:	c7 83 58 01 00 00 80 02 00 00 	mov    DWORD PTR [ebx+0x158],0x280
10000134:	c7 83 5c 01 00 00 5e 01 00 00 	mov    DWORD PTR [ebx+0x15c],0x15e
1000013e:	c7 83 64 01 00 00 00 00 0a 00 	mov    DWORD PTR [ebx+0x164],0xa0000
10000148:	50                   	push   eax
10000149:	50                   	push   eax
1000014a:	68 90 00 00 00       	push   0x90
1000014f:	6a 00                	push   0x0
10000151:	68 74 0d 00 10       	push   0x10000d74	10000152: R_386_32	.text
10000156:	e8 fc ff ff ff       	call   10000157 <VGAVideo::open(int, int, void*)+0x67>	10000157: R_386_PC32	Vm::start8086(char const*, unsigned short, unsigned short, unsigned short, unsigned short)
1000015b:	83 c4 20             	add    esp,0x20
1000015e:	e8 fc ff ff ff       	call   1000015f <VGAVideo::open(int, int, void*)+0x6f>	1000015f: R_386_PC32	Vm::finish8086()
10000163:	83 ec 08             	sub    esp,0x8
10000166:	ff b3 68 01 00 00    	push   DWORD PTR [ebx+0x168]
1000016c:	68 8d 0d 00 10       	push   0x10000d8d	1000016d: R_386_32	.text
10000171:	e8 fc ff ff ff       	call   10000172 <VGAVideo::open(int, int, void*)+0x82>	10000172: R_386_PC32	Dbg::kprintf(char const*, ...)
10000176:	8b 83 64 01 00 00    	mov    eax,DWORD PTR [ebx+0x164]
1000017c:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000181:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000185:	58                   	pop    eax
10000186:	5a                   	pop    edx
10000187:	6a 00                	push   0x0
10000189:	53                   	push   ebx
1000018a:	e8 fc ff ff ff       	call   1000018b <VGAVideo::open(int, int, void*)+0x9b>	1000018b: R_386_PC32	VGAVideo::setPlane(int)
1000018f:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000193:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
10000199:	83 c4 10             	add    esp,0x10
1000019c:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
100001a3:	85 c9                	test   ecx,ecx
100001a5:	79 03                	jns    100001aa <VGAVideo::open(int, int, void*)+0xba>
100001a7:	83 c1 07             	add    ecx,0x7
100001aa:	c1 f9 03             	sar    ecx,0x3
100001ad:	31 c0                	xor    eax,eax
100001af:	89 d7                	mov    edi,edx
100001b1:	f3 aa                	rep stos BYTE PTR es:[edi],al
100001b3:	80 bb 61 01 00 00 00 	cmp    BYTE PTR [ebx+0x161],0x0
100001ba:	74 19                	je     100001d5 <VGAVideo::open(int, int, void*)+0xe5>
100001bc:	83 c4 14             	add    esp,0x14
100001bf:	31 c0                	xor    eax,eax
100001c1:	5b                   	pop    ebx
100001c2:	5f                   	pop    edi
100001c3:	c3                   	ret    
100001c4:	83 f8 30             	cmp    eax,0x30
100001c7:	0f 95 c0             	setne  al
100001ca:	0f b6 c0             	movzx  eax,al
100001cd:	83 c0 0f             	add    eax,0xf
100001d0:	e9 4c ff ff ff       	jmp    10000121 <VGAVideo::open(int, int, void*)+0x31>
100001d5:	83 ec 08             	sub    esp,0x8
100001d8:	6a 01                	push   0x1
100001da:	53                   	push   ebx
100001db:	e8 fc ff ff ff       	call   100001dc <VGAVideo::open(int, int, void*)+0xec>	100001dc: R_386_PC32	VGAVideo::setPlane(int)
100001e0:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100001e4:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
100001ea:	83 c4 10             	add    esp,0x10
100001ed:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
100001f4:	85 c9                	test   ecx,ecx
100001f6:	78 7c                	js     10000274 <VGAVideo::open(int, int, void*)+0x184>
100001f8:	83 ec 08             	sub    esp,0x8
100001fb:	31 c0                	xor    eax,eax
100001fd:	89 d7                	mov    edi,edx
100001ff:	c1 f9 03             	sar    ecx,0x3
10000202:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000204:	6a 02                	push   0x2
10000206:	53                   	push   ebx
10000207:	e8 fc ff ff ff       	call   10000208 <VGAVideo::open(int, int, void*)+0x118>	10000208: R_386_PC32	VGAVideo::setPlane(int)
1000020c:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
10000210:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
10000216:	83 c4 10             	add    esp,0x10
10000219:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
10000220:	85 c9                	test   ecx,ecx
10000222:	78 4b                	js     1000026f <VGAVideo::open(int, int, void*)+0x17f>
10000224:	83 ec 08             	sub    esp,0x8
10000227:	31 c0                	xor    eax,eax
10000229:	89 d7                	mov    edi,edx
1000022b:	c1 f9 03             	sar    ecx,0x3
1000022e:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000230:	6a 03                	push   0x3
10000232:	53                   	push   ebx
10000233:	e8 fc ff ff ff       	call   10000234 <VGAVideo::open(int, int, void*)+0x144>	10000234: R_386_PC32	VGAVideo::setPlane(int)
10000238:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000023c:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
10000242:	83 c4 10             	add    esp,0x10
10000245:	0f af 8b 5c 01 00 00 	imul   ecx,DWORD PTR [ebx+0x15c]
1000024c:	85 c9                	test   ecx,ecx
1000024e:	78 11                	js     10000261 <VGAVideo::open(int, int, void*)+0x171>
10000250:	c1 f9 03             	sar    ecx,0x3
10000253:	31 c0                	xor    eax,eax
10000255:	89 d7                	mov    edi,edx
10000257:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000259:	83 c4 14             	add    esp,0x14
1000025c:	31 c0                	xor    eax,eax
1000025e:	5b                   	pop    ebx
1000025f:	5f                   	pop    edi
10000260:	c3                   	ret    
10000261:	83 c1 07             	add    ecx,0x7
10000264:	31 c0                	xor    eax,eax
10000266:	c1 f9 03             	sar    ecx,0x3
10000269:	89 d7                	mov    edi,edx
1000026b:	f3 aa                	rep stos BYTE PTR es:[edi],al
1000026d:	eb ea                	jmp    10000259 <VGAVideo::open(int, int, void*)+0x169>
1000026f:	83 c1 07             	add    ecx,0x7
10000272:	eb b0                	jmp    10000224 <VGAVideo::open(int, int, void*)+0x134>
10000274:	83 c1 07             	add    ecx,0x7
10000277:	e9 7c ff ff ff       	jmp    100001f8 <VGAVideo::open(int, int, void*)+0x108>

1000027c <monoPixelLookup(int, int, int)>:
1000027c:	56                   	push   esi
1000027d:	53                   	push   ebx
1000027e:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10000282:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000286:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
1000028a:	89 d3                	mov    ebx,edx
1000028c:	01 c1                	add    ecx,eax
1000028e:	c1 fb 0e             	sar    ebx,0xe
10000291:	83 e1 01             	and    ecx,0x1
10000294:	01 c0                	add    eax,eax
10000296:	83 e3 03             	and    ebx,0x3
10000299:	83 e0 02             	and    eax,0x2
1000029c:	09 c8                	or     eax,ecx
1000029e:	89 d1                	mov    ecx,edx
100002a0:	c1 f9 06             	sar    ecx,0x6
100002a3:	89 ce                	mov    esi,ecx
100002a5:	89 d1                	mov    ecx,edx
100002a7:	83 e6 03             	and    esi,0x3
100002aa:	c1 f9 16             	sar    ecx,0x16
100002ad:	83 e1 03             	and    ecx,0x3
100002b0:	81 fa bb bb bb 00    	cmp    edx,0xbbbbbb
100002b6:	74 1e                	je     100002d6 <monoPixelLookup(int, int, int)+0x5a>
100002b8:	8d 14 0b             	lea    edx,[ebx+ecx*1]
100002bb:	8d 0c 53             	lea    ecx,[ebx+edx*2]
100002be:	ba 80 ea ff 00       	mov    edx,0xffea80
100002c3:	01 f1                	add    ecx,esi
100002c5:	5b                   	pop    ebx
100002c6:	83 e1 fc             	and    ecx,0xfffffffc
100002c9:	5e                   	pop    esi
100002ca:	d3 ea                	shr    edx,cl
100002cc:	88 c1                	mov    cl,al
100002ce:	d3 ea                	shr    edx,cl
100002d0:	89 d0                	mov    eax,edx
100002d2:	83 e0 01             	and    eax,0x1
100002d5:	c3                   	ret    
100002d6:	b8 01 00 00 00       	mov    eax,0x1
100002db:	5b                   	pop    ebx
100002dc:	5e                   	pop    esi
100002dd:	c3                   	ret    

100002de <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)>:
100002de:	57                   	push   edi
100002df:	56                   	push   esi
100002e0:	53                   	push   ebx
100002e1:	83 ec 40             	sub    esp,0x40
100002e4:	8b 7c 24 50          	mov    edi,DWORD PTR [esp+0x50]
100002e8:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100002ec:	8b 4c 24 70          	mov    ecx,DWORD PTR [esp+0x70]
100002f0:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100002f4:	89 4c 24 08          	mov    DWORD PTR [esp+0x8],ecx
100002f8:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
100002fc:	8b 8f 68 01 00 00    	mov    ecx,DWORD PTR [edi+0x168]
10000302:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10000306:	89 4c 24 0c          	mov    DWORD PTR [esp+0xc],ecx
1000030a:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
1000030e:	83 e9 11             	sub    ecx,0x11
10000311:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10000315:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10000319:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
1000031d:	8b 74 24 60          	mov    esi,DWORD PTR [esp+0x60]
10000321:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10000325:	8b 54 24 6c          	mov    edx,DWORD PTR [esp+0x6c]
10000329:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
1000032d:	83 f9 01             	cmp    ecx,0x1
10000330:	0f 87 80 02 00 00    	ja     100005b6 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x2d8>
10000336:	89 fb                	mov    ebx,edi
10000338:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
1000033c:	8b 8b 58 01 00 00    	mov    ecx,DWORD PTR [ebx+0x158]
10000342:	0f af cf             	imul   ecx,edi
10000345:	85 c0                	test   eax,eax
10000347:	89 4c 24 28          	mov    DWORD PTR [esp+0x28],ecx
1000034b:	0f 8e 13 02 00 00    	jle    10000564 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x286>
10000351:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
10000355:	85 c9                	test   ecx,ecx
10000357:	0f 8e 07 02 00 00    	jle    10000564 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x286>
1000035d:	8d 0c 95 00 00 00 00 	lea    ecx,[edx*4+0x0]
10000364:	01 f8                	add    eax,edi
10000366:	89 4c 24 34          	mov    DWORD PTR [esp+0x34],ecx
1000036a:	0f af d6             	imul   edx,esi
1000036d:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10000371:	03 54 24 3c          	add    edx,DWORD PTR [esp+0x3c]
10000375:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10000379:	8d 0c 91             	lea    ecx,[ecx+edx*4]
1000037c:	89 4c 24 2c          	mov    DWORD PTR [esp+0x2c],ecx
10000380:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000384:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
1000038c:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000390:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10000394:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000398:	eb 3c                	jmp    100003d6 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xf8>
1000039a:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
1000039e:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
100003a2:	8b 54 24 20          	mov    edx,DWORD PTR [esp+0x20]
100003a6:	8d 77 04             	lea    esi,[edi+0x4]
100003a9:	8b 02                	mov    eax,DWORD PTR [edx]
100003ab:	8d 59 01             	lea    ebx,[ecx+0x1]
100003ae:	ff 37                	push   DWORD PTR [edi]
100003b0:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100003b4:	51                   	push   ecx
100003b5:	52                   	push   edx
100003b6:	ff 50 24             	call   DWORD PTR [eax+0x24]
100003b9:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
100003bd:	83 c4 10             	add    esp,0x10
100003c0:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100003c4:	89 74 24 08          	mov    DWORD PTR [esp+0x8],esi
100003c8:	89 5c 24 14          	mov    DWORD PTR [esp+0x14],ebx
100003cc:	39 7c 24 1c          	cmp    DWORD PTR [esp+0x1c],edi
100003d0:	0f 8e 66 01 00 00    	jle    1000053c <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x25e>
100003d6:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100003da:	2b 44 24 10          	sub    eax,DWORD PTR [esp+0x10]
100003de:	c1 f8 03             	sar    eax,0x3
100003e1:	74 b7                	je     1000039a <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xbc>
100003e3:	f6 44 24 14 07       	test   BYTE PTR [esp+0x14],0x7
100003e8:	75 b0                	jne    1000039a <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xbc>
100003ea:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100003ee:	83 f8 64             	cmp    eax,0x64
100003f1:	7e 08                	jle    100003fb <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x11d>
100003f3:	c7 44 24 0c 64 00 00 00 	mov    DWORD PTR [esp+0xc],0x64
100003fb:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100003ff:	8d 34 c5 00 00 00 00 	lea    esi,[eax*8+0x0]
10000406:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
1000040a:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
10000411:	0f 84 54 01 00 00    	je     1000056b <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x28d>
10000417:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000041b:	8b 4c 24 3c          	mov    ecx,DWORD PTR [esp+0x3c]
1000041f:	31 ff                	xor    edi,edi
10000421:	8d 1c 08             	lea    ebx,[eax+ecx*1]
10000424:	83 44 24 08 04       	add    DWORD PTR [esp+0x8],0x4
10000429:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
1000042d:	50                   	push   eax
1000042e:	8d 04 3b             	lea    eax,[ebx+edi*1]
10000431:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000435:	47                   	inc    edi
10000436:	50                   	push   eax
10000437:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
1000043a:	e8 fc ff ff ff       	call   1000043b <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x15d>	1000043b: R_386_PC32	monoPixelLookup(int, int, int)
1000043f:	83 c4 10             	add    esp,0x10
10000442:	88 87 9f 12 00 10    	mov    BYTE PTR [edi+0x1000129f],al	10000444: R_386_32	.bss
10000448:	39 f7                	cmp    edi,esi
1000044a:	7c d8                	jl     10000424 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x146>
1000044c:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
10000450:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000454:	8b 91 64 01 00 00    	mov    edx,DWORD PTR [ecx+0x164]
1000045a:	03 44 24 28          	add    eax,DWORD PTR [esp+0x28]
1000045e:	31 c9                	xor    ecx,ecx
10000460:	c1 f8 03             	sar    eax,0x3
10000463:	8d bc 10 00 00 00 c2 	lea    edi,[eax+edx*1-0x3e000000]
1000046a:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
1000046e:	80 be 61 01 00 00 01 	cmp    BYTE PTR [esi+0x161],0x1
10000475:	19 c0                	sbb    eax,eax
10000477:	83 e0 03             	and    eax,0x3
1000047a:	40                   	inc    eax
1000047b:	39 c1                	cmp    ecx,eax
1000047d:	0f 8d 9c 00 00 00    	jge    1000051f <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x241>
10000483:	83 ec 08             	sub    esp,0x8
10000486:	51                   	push   ecx
10000487:	89 4c 24 30          	mov    DWORD PTR [esp+0x30],ecx
1000048b:	56                   	push   esi
1000048c:	be 01 00 00 00       	mov    esi,0x1
10000491:	e8 fc ff ff ff       	call   10000492 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x1b4>	10000492: R_386_PC32	VGAVideo::setPlane(int)
10000496:	8b 4c 24 34          	mov    ecx,DWORD PTR [esp+0x34]
1000049a:	31 c0                	xor    eax,eax
1000049c:	d3 e6                	shl    esi,cl
1000049e:	83 c4 10             	add    esp,0x10
100004a1:	0f b6 14 c5 a0 12 00 10 	movzx  edx,BYTE PTR [eax*8+0x100012a0]	100004a5: R_386_32	.bss
100004a9:	0f b6 1c c5 a1 12 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100012a1]	100004ad: R_386_32	.bss
100004b1:	21 f2                	and    edx,esi
100004b3:	21 f3                	and    ebx,esi
100004b5:	01 d2                	add    edx,edx
100004b7:	09 d3                	or     ebx,edx
100004b9:	0f b6 14 c5 a2 12 00 10 	movzx  edx,BYTE PTR [eax*8+0x100012a2]	100004bd: R_386_32	.bss
100004c1:	01 db                	add    ebx,ebx
100004c3:	21 f2                	and    edx,esi
100004c5:	09 da                	or     edx,ebx
100004c7:	0f b6 1c c5 a3 12 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100012a3]	100004cb: R_386_32	.bss
100004cf:	01 d2                	add    edx,edx
100004d1:	21 f3                	and    ebx,esi
100004d3:	09 d3                	or     ebx,edx
100004d5:	0f b6 14 c5 a4 12 00 10 	movzx  edx,BYTE PTR [eax*8+0x100012a4]	100004d9: R_386_32	.bss
100004dd:	01 db                	add    ebx,ebx
100004df:	21 f2                	and    edx,esi
100004e1:	09 da                	or     edx,ebx
100004e3:	0f b6 1c c5 a5 12 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100012a5]	100004e7: R_386_32	.bss
100004eb:	01 d2                	add    edx,edx
100004ed:	21 f3                	and    ebx,esi
100004ef:	09 d3                	or     ebx,edx
100004f1:	0f b6 14 c5 a6 12 00 10 	movzx  edx,BYTE PTR [eax*8+0x100012a6]	100004f5: R_386_32	.bss
100004f9:	01 db                	add    ebx,ebx
100004fb:	21 f2                	and    edx,esi
100004fd:	09 da                	or     edx,ebx
100004ff:	0f b6 1c c5 a7 12 00 10 	movzx  ebx,BYTE PTR [eax*8+0x100012a7]	10000503: R_386_32	.bss
10000507:	01 d2                	add    edx,edx
10000509:	21 f3                	and    ebx,esi
1000050b:	09 da                	or     edx,ebx
1000050d:	d3 ea                	shr    edx,cl
1000050f:	88 14 07             	mov    BYTE PTR [edi+eax*1],dl
10000512:	40                   	inc    eax
10000513:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
10000517:	75 88                	jne    100004a1 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x1c3>
10000519:	41                   	inc    ecx
1000051a:	e9 4b ff ff ff       	jmp    1000046a <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x18c>
1000051f:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000523:	c1 e0 03             	shl    eax,0x3
10000526:	01 44 24 10          	add    DWORD PTR [esp+0x10],eax
1000052a:	01 44 24 14          	add    DWORD PTR [esp+0x14],eax
1000052e:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000532:	39 7c 24 1c          	cmp    DWORD PTR [esp+0x1c],edi
10000536:	0f 8f 9a fe ff ff    	jg     100003d6 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xf8>
1000053c:	ff 44 24 18          	inc    DWORD PTR [esp+0x18]
10000540:	8b 4c 24 20          	mov    ecx,DWORD PTR [esp+0x20]
10000544:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10000548:	8b 89 58 01 00 00    	mov    ecx,DWORD PTR [ecx+0x158]
1000054e:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
10000552:	01 4c 24 28          	add    DWORD PTR [esp+0x28],ecx
10000556:	01 7c 24 2c          	add    DWORD PTR [esp+0x2c],edi
1000055a:	3b 44 24 30          	cmp    eax,DWORD PTR [esp+0x30]
1000055e:	0f 85 1c fe ff ff    	jne    10000380 <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0xa2>
10000564:	83 c4 40             	add    esp,0x40
10000567:	5b                   	pop    ebx
10000568:	5e                   	pop    esi
10000569:	5f                   	pop    edi
1000056a:	c3                   	ret    
1000056b:	31 c9                	xor    ecx,ecx
1000056d:	83 44 24 08 04       	add    DWORD PTR [esp+0x8],0x4
10000572:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000576:	8b 40 fc             	mov    eax,DWORD PTR [eax-0x4]
10000579:	89 c3                	mov    ebx,eax
1000057b:	89 c2                	mov    edx,eax
1000057d:	c1 fb 15             	sar    ebx,0x15
10000580:	c1 fa 0a             	sar    edx,0xa
10000583:	83 e3 07             	and    ebx,0x7
10000586:	83 e2 38             	and    edx,0x38
10000589:	09 d3                	or     ebx,edx
1000058b:	8d 14 00             	lea    edx,[eax+eax*1]
1000058e:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
10000592:	81 e2 c0 01 00 00    	and    edx,0x1c0
10000598:	01 c8                	add    eax,ecx
1000059a:	09 da                	or     edx,ebx
1000059c:	83 e0 01             	and    eax,0x1
1000059f:	41                   	inc    ecx
100005a0:	8a 84 50 00 00 00 00 	mov    al,BYTE PTR [eax+edx*2+0x0]	100005a3: R_386_32	dither16Data
100005a7:	88 81 9f 12 00 10    	mov    BYTE PTR [ecx+0x1000129f],al	100005a9: R_386_32	.bss
100005ad:	39 f1                	cmp    ecx,esi
100005af:	7c bc                	jl     1000056d <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x28f>
100005b1:	e9 96 fe ff ff       	jmp    1000044c <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x16e>
100005b6:	83 c4 40             	add    esp,0x40
100005b9:	5b                   	pop    ebx
100005ba:	5e                   	pop    esi
100005bb:	5f                   	pop    edi
100005bc:	e9 fc ff ff ff       	jmp    100005bd <VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)+0x2df>	100005bd: R_386_PC32	Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
100005c1:	90                   	nop

100005c2 <VGAVideo::putrect(int, int, int, int, unsigned int)>:
100005c2:	57                   	push   edi
100005c3:	56                   	push   esi
100005c4:	53                   	push   ebx
100005c5:	83 ec 50             	sub    esp,0x50
100005c8:	8b 74 24 60          	mov    esi,DWORD PTR [esp+0x60]
100005cc:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100005d0:	89 74 24 04          	mov    DWORD PTR [esp+0x4],esi
100005d4:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100005d8:	8b 4c 24 6c          	mov    ecx,DWORD PTR [esp+0x6c]
100005dc:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
100005e0:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
100005e4:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
100005e8:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100005ec:	8b 44 24 74          	mov    eax,DWORD PTR [esp+0x74]
100005f0:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
100005f4:	8b 86 68 01 00 00    	mov    eax,DWORD PTR [esi+0x168]
100005fa:	83 e8 11             	sub    eax,0x11
100005fd:	83 f8 01             	cmp    eax,0x1
10000600:	0f 87 3d 05 00 00    	ja     10000b43 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x581>
10000606:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
1000060a:	8b 86 64 01 00 00    	mov    eax,DWORD PTR [esi+0x164]
10000610:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10000614:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000619:	03 74 24 48          	add    esi,DWORD PTR [esp+0x48]
1000061d:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000621:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
10000625:	89 f8                	mov    eax,edi
10000627:	c1 f8 15             	sar    eax,0x15
1000062a:	83 e0 07             	and    eax,0x7
1000062d:	89 c2                	mov    edx,eax
1000062f:	89 f8                	mov    eax,edi
10000631:	c1 f8 0a             	sar    eax,0xa
10000634:	83 e0 38             	and    eax,0x38
10000637:	09 d0                	or     eax,edx
10000639:	89 fa                	mov    edx,edi
1000063b:	01 fa                	add    edx,edi
1000063d:	81 e2 c0 01 00 00    	and    edx,0x1c0
10000643:	09 d0                	or     eax,edx
10000645:	0f b6 bc 00 00 00 00 00 	movzx  edi,BYTE PTR [eax+eax*1+0x0]	10000649: R_386_32	dither16Data
1000064d:	0f b6 84 00 01 00 00 00 	movzx  eax,BYTE PTR [eax+eax*1+0x1]	10000651: R_386_32	dither16Data
10000655:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
10000659:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000065d:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
10000661:	89 c8                	mov    eax,ecx
10000663:	01 f8                	add    eax,edi
10000665:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10000669:	39 c7                	cmp    edi,eax
1000066b:	0f 8d a6 00 00 00    	jge    10000717 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x155>
10000671:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
10000675:	8b 7c 24 3c          	mov    edi,DWORD PTR [esp+0x3c]
10000679:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
1000067d:	29 f7                	sub    edi,esi
1000067f:	8b 5c 24 04          	mov    ebx,DWORD PTR [esp+0x4]
10000683:	89 7c 24 4c          	mov    DWORD PTR [esp+0x4c],edi
10000687:	0f af 83 58 01 00 00 	imul   eax,DWORD PTR [ebx+0x158]
1000068e:	01 f0                	add    eax,esi
10000690:	c1 f8 03             	sar    eax,0x3
10000693:	c1 ff 03             	sar    edi,0x3
10000696:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
1000069a:	89 7c 24 44          	mov    DWORD PTR [esp+0x44],edi
1000069e:	74 0d                	je     100006ad <VGAVideo::putrect(int, int, int, int, unsigned int)+0xeb>
100006a0:	83 e6 07             	and    esi,0x7
100006a3:	89 74 24 38          	mov    DWORD PTR [esp+0x38],esi
100006a7:	0f 84 fa 01 00 00    	je     100008a7 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2e5>
100006ad:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
100006b1:	03 44 24 14          	add    eax,DWORD PTR [esp+0x14]
100006b5:	a8 01                	test   al,0x1
100006b7:	0f 84 d5 01 00 00    	je     10000892 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2d0>
100006bd:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
100006c1:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
100006c5:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100006c9:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100006cd:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100006d1:	80 b8 61 01 00 00 00 	cmp    BYTE PTR [eax+0x161],0x0
100006d8:	74 44                	je     1000071e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x15c>
100006da:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
100006de:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
100006e2:	39 f8                	cmp    eax,edi
100006e4:	7d 1f                	jge    10000705 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x143>
100006e6:	89 c3                	mov    ebx,eax
100006e8:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
100006ec:	8b 06                	mov    eax,DWORD PTR [esi]
100006ee:	ff 74 24 18          	push   DWORD PTR [esp+0x18]
100006f2:	53                   	push   ebx
100006f3:	43                   	inc    ebx
100006f4:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100006f8:	56                   	push   esi
100006f9:	ff 50 24             	call   DWORD PTR [eax+0x24]
100006fc:	83 c4 10             	add    esp,0x10
100006ff:	39 5c 24 0c          	cmp    DWORD PTR [esp+0xc],ebx
10000703:	75 e3                	jne    100006e8 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x126>
10000705:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
10000709:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000070d:	39 44 24 3c          	cmp    DWORD PTR [esp+0x3c],eax
10000711:	0f 8f 5a ff ff ff    	jg     10000671 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xaf>
10000717:	83 c4 50             	add    esp,0x50
1000071a:	5b                   	pop    ebx
1000071b:	5e                   	pop    esi
1000071c:	5f                   	pop    edi
1000071d:	c3                   	ret    
1000071e:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000722:	c7 44 24 20 00 00 00 00 	mov    DWORD PTR [esp+0x20],0x0
1000072a:	f7 d0                	not    eax
1000072c:	83 e0 07             	and    eax,0x7
1000072f:	89 c7                	mov    edi,eax
10000731:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000735:	89 f9                	mov    ecx,edi
10000737:	b8 fe ff ff ff       	mov    eax,0xfffffffe
1000073c:	d3 c0                	rol    eax,cl
1000073e:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000742:	83 ec 08             	sub    esp,0x8
10000745:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10000749:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
1000074d:	e8 fc ff ff ff       	call   1000074e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x18c>	1000074e: R_386_PC32	VGAVideo::setPlane(int)
10000752:	83 c4 10             	add    esp,0x10
10000755:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10000759:	39 7c 24 1c          	cmp    DWORD PTR [esp+0x1c],edi
1000075d:	0f 84 c0 00 00 00    	je     10000823 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x261>
10000763:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
10000767:	8b 74 24 40          	mov    esi,DWORD PTR [esp+0x40]
1000076b:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
1000076f:	d3 fe                	sar    esi,cl
10000771:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000775:	83 e6 01             	and    esi,0x1
10000778:	8a 4c 24 2c          	mov    cl,BYTE PTR [esp+0x2c]
1000077c:	d3 e6                	shl    esi,cl
1000077e:	39 c2                	cmp    edx,eax
10000780:	0f 8d a4 03 00 00    	jge    10000b2a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x568>
10000786:	8a 44 24 34          	mov    al,BYTE PTR [esp+0x34]
1000078a:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
1000078e:	89 c7                	mov    edi,eax
10000790:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000794:	83 c2 02             	add    edx,0x2
10000797:	8d 1c 08             	lea    ebx,[eax+ecx*1]
1000079a:	89 f8                	mov    eax,edi
1000079c:	22 03                	and    al,BYTE PTR [ebx]
1000079e:	09 f0                	or     eax,esi
100007a0:	88 03                	mov    BYTE PTR [ebx],al
100007a2:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100007a6:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
100007ac:	89 c3                	mov    ebx,eax
100007ae:	c1 fb 02             	sar    ebx,0x2
100007b1:	01 d9                	add    ecx,ebx
100007b3:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
100007b7:	7f d7                	jg     10000790 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1ce>
100007b9:	c1 f8 03             	sar    eax,0x3
100007bc:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
100007c0:	03 44 24 30          	add    eax,DWORD PTR [esp+0x30]
100007c4:	8b 74 24 38          	mov    esi,DWORD PTR [esp+0x38]
100007c8:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
100007cc:	d3 fe                	sar    esi,cl
100007ce:	8a 4c 24 2c          	mov    cl,BYTE PTR [esp+0x2c]
100007d2:	83 e6 01             	and    esi,0x1
100007d5:	d3 e6                	shl    esi,cl
100007d7:	8d 4f 01             	lea    ecx,[edi+0x1]
100007da:	83 7c 24 48 01       	cmp    DWORD PTR [esp+0x48],0x1
100007df:	7e 2c                	jle    1000080d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x24b>
100007e1:	8a 5c 24 34          	mov    bl,BYTE PTR [esp+0x34]
100007e5:	89 df                	mov    edi,ebx
100007e7:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
100007eb:	89 fa                	mov    edx,edi
100007ed:	01 c3                	add    ebx,eax
100007ef:	83 c1 02             	add    ecx,0x2
100007f2:	22 13                	and    dl,BYTE PTR [ebx]
100007f4:	09 f2                	or     edx,esi
100007f6:	88 13                	mov    BYTE PTR [ebx],dl
100007f8:	8b 5c 24 04          	mov    ebx,DWORD PTR [esp+0x4]
100007fc:	8b 93 58 01 00 00    	mov    edx,DWORD PTR [ebx+0x158]
10000802:	c1 fa 02             	sar    edx,0x2
10000805:	01 d0                	add    eax,edx
10000807:	39 4c 24 0c          	cmp    DWORD PTR [esp+0xc],ecx
1000080b:	7f da                	jg     100007e7 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x225>
1000080d:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
10000811:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10000815:	83 f8 04             	cmp    eax,0x4
10000818:	0f 85 24 ff ff ff    	jne    10000742 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x180>
1000081e:	e9 e2 fe ff ff       	jmp    10000705 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x143>
10000823:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
10000827:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000082b:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
1000082f:	d3 f8                	sar    eax,cl
10000831:	8a 4c 24 2c          	mov    cl,BYTE PTR [esp+0x2c]
10000835:	83 e0 01             	and    eax,0x1
10000838:	d3 e0                	shl    eax,cl
1000083a:	39 74 24 28          	cmp    DWORD PTR [esp+0x28],esi
1000083e:	7d cd                	jge    1000080d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x24b>
10000840:	89 c7                	mov    edi,eax
10000842:	0f b6 74 24 34       	movzx  esi,BYTE PTR [esp+0x34]
10000847:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
1000084b:	8b 4c 24 30          	mov    ecx,DWORD PTR [esp+0x30]
1000084f:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000853:	42                   	inc    edx
10000854:	8d 1c 08             	lea    ebx,[eax+ecx*1]
10000857:	89 f0                	mov    eax,esi
10000859:	22 03                	and    al,BYTE PTR [ebx]
1000085b:	88 44 24 24          	mov    BYTE PTR [esp+0x24],al
1000085f:	89 f8                	mov    eax,edi
10000861:	0b 44 24 24          	or     eax,DWORD PTR [esp+0x24]
10000865:	88 03                	mov    BYTE PTR [ebx],al
10000867:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000086b:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000871:	c1 f8 03             	sar    eax,0x3
10000874:	01 c1                	add    ecx,eax
10000876:	39 54 24 0c          	cmp    DWORD PTR [esp+0xc],edx
1000087a:	75 d3                	jne    1000084f <VGAVideo::putrect(int, int, int, int, unsigned int)+0x28d>
1000087c:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
10000880:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10000884:	83 f8 04             	cmp    eax,0x4
10000887:	0f 85 b5 fe ff ff    	jne    10000742 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x180>
1000088d:	e9 73 fe ff ff       	jmp    10000705 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x143>
10000892:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000896:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
1000089a:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
1000089e:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100008a2:	e9 26 fe ff ff       	jmp    100006cd <VGAVideo::putrect(int, int, int, int, unsigned int)+0x10b>
100008a7:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100008ab:	83 e0 01             	and    eax,0x1
100008ae:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
100008b2:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
100008b6:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
100008ba:	80 be 61 01 00 00 01 	cmp    BYTE PTR [esi+0x161],0x1
100008c1:	19 c0                	sbb    eax,eax
100008c3:	83 e0 03             	and    eax,0x3
100008c6:	40                   	inc    eax
100008c7:	39 c7                	cmp    edi,eax
100008c9:	0f 8d 31 02 00 00    	jge    10000b00 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x53e>
100008cf:	83 ec 08             	sub    esp,0x8
100008d2:	57                   	push   edi
100008d3:	56                   	push   esi
100008d4:	e8 fc ff ff ff       	call   100008d5 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x313>	100008d5: R_386_PC32	VGAVideo::setPlane(int)
100008d9:	83 c4 10             	add    esp,0x10
100008dc:	80 be 61 01 00 00 00 	cmp    BYTE PTR [esi+0x161],0x0
100008e3:	0f 84 55 01 00 00    	je     10000a3e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x47c>
100008e9:	89 f9                	mov    ecx,edi
100008eb:	b8 01 00 00 00       	mov    eax,0x1
100008f0:	8b 7c 24 44          	mov    edi,DWORD PTR [esp+0x44]
100008f4:	d3 e0                	shl    eax,cl
100008f6:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100008fa:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
100008fe:	01 c7                	add    edi,eax
10000900:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000904:	89 7c 24 34          	mov    DWORD PTR [esp+0x34],edi
10000908:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
1000090c:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000910:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10000914:	39 c6                	cmp    esi,eax
10000916:	0f 8d 07 01 00 00    	jge    10000a23 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x461>
1000091c:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000920:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
10000924:	40                   	inc    eax
10000925:	85 c9                	test   ecx,ecx
10000927:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000092b:	0f 85 9d 00 00 00    	jne    100009ce <VGAVideo::putrect(int, int, int, int, unsigned int)+0x40c>
10000931:	eb 2a                	jmp    1000095d <VGAVideo::putrect(int, int, int, int, unsigned int)+0x39b>
10000933:	85 c0                	test   eax,eax
10000935:	b9 aa 00 00 00       	mov    ecx,0xaa
1000093a:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000093e:	74 6c                	je     100009ac <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3ea>
10000940:	88 0c 18             	mov    BYTE PTR [eax+ebx*1],cl
10000943:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000947:	46                   	inc    esi
10000948:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
1000094e:	c1 f8 03             	sar    eax,0x3
10000951:	01 c3                	add    ebx,eax
10000953:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
10000957:	0f 84 c6 00 00 00    	je     10000a23 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x461>
1000095d:	52                   	push   edx
1000095e:	56                   	push   esi
1000095f:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000963:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
10000967:	57                   	push   edi
10000968:	e8 fc ff ff ff       	call   10000969 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3a7>	10000969: R_386_PC32	monoPixelLookup(int, int, int)
1000096d:	83 c4 0c             	add    esp,0xc
10000970:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000974:	56                   	push   esi
10000975:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10000979:	57                   	push   edi
1000097a:	e8 fc ff ff ff       	call   1000097b <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3b9>	1000097b: R_386_PC32	monoPixelLookup(int, int, int)
1000097f:	83 c4 10             	add    esp,0x10
10000982:	89 c7                	mov    edi,eax
10000984:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
10000988:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000098c:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000990:	21 ca                	and    edx,ecx
10000992:	21 f9                	and    ecx,edi
10000994:	89 d0                	mov    eax,edx
10000996:	89 ca                	mov    edx,ecx
10000998:	74 99                	je     10000933 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x371>
1000099a:	85 c0                	test   eax,eax
1000099c:	b9 ff 00 00 00       	mov    ecx,0xff
100009a1:	ba 55 00 00 00       	mov    edx,0x55
100009a6:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100009aa:	75 94                	jne    10000940 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x37e>
100009ac:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
100009af:	eb 92                	jmp    10000943 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x381>
100009b1:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
100009b5:	88 14 18             	mov    BYTE PTR [eax+ebx*1],dl
100009b8:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100009bc:	46                   	inc    esi
100009bd:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
100009c3:	c1 f8 03             	sar    eax,0x3
100009c6:	01 c3                	add    ebx,eax
100009c8:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
100009cc:	74 55                	je     10000a23 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x461>
100009ce:	50                   	push   eax
100009cf:	56                   	push   esi
100009d0:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100009d4:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
100009d8:	57                   	push   edi
100009d9:	e8 fc ff ff ff       	call   100009da <VGAVideo::putrect(int, int, int, int, unsigned int)+0x418>	100009da: R_386_PC32	monoPixelLookup(int, int, int)
100009de:	83 c4 0c             	add    esp,0xc
100009e1:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100009e5:	56                   	push   esi
100009e6:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
100009ea:	57                   	push   edi
100009eb:	e8 fc ff ff ff       	call   100009ec <VGAVideo::putrect(int, int, int, int, unsigned int)+0x42a>	100009ec: R_386_PC32	monoPixelLookup(int, int, int)
100009f0:	83 c4 10             	add    esp,0x10
100009f3:	89 c7                	mov    edi,eax
100009f5:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
100009f9:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
100009fd:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000a01:	21 c8                	and    eax,ecx
10000a03:	83 f8 01             	cmp    eax,0x1
10000a06:	19 d2                	sbb    edx,edx
10000a08:	f7 d2                	not    edx
10000a0a:	83 e2 55             	and    edx,0x55
10000a0d:	83 f8 01             	cmp    eax,0x1
10000a10:	19 c0                	sbb    eax,eax
10000a12:	83 e0 ab             	and    eax,0xffffffab
10000a15:	48                   	dec    eax
10000a16:	85 cf                	test   edi,ecx
10000a18:	74 97                	je     100009b1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3ef>
10000a1a:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10000a1e:	88 04 1f             	mov    BYTE PTR [edi+ebx*1],al
10000a21:	eb 95                	jmp    100009b8 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x3f6>
10000a23:	ff 44 24 2c          	inc    DWORD PTR [esp+0x2c]
10000a27:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000a2b:	39 44 24 34          	cmp    DWORD PTR [esp+0x34],eax
10000a2f:	0f 85 d3 fe ff ff    	jne    10000908 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x346>
10000a35:	ff 44 24 38          	inc    DWORD PTR [esp+0x38]
10000a39:	e9 74 fe ff ff       	jmp    100008b2 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2f0>
10000a3e:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000a42:	8a 4c 24 38          	mov    cl,BYTE PTR [esp+0x38]
10000a46:	d3 f8                	sar    eax,cl
10000a48:	a8 01                	test   al,0x1
10000a4a:	0f 84 8f 00 00 00    	je     10000adf <VGAVideo::putrect(int, int, int, int, unsigned int)+0x51d>
10000a50:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10000a54:	d3 f8                	sar    eax,cl
10000a56:	83 e0 01             	and    eax,0x1
10000a59:	83 f8 01             	cmp    eax,0x1
10000a5c:	19 ff                	sbb    edi,edi
10000a5e:	89 f9                	mov    ecx,edi
10000a60:	89 f8                	mov    eax,edi
10000a62:	83 e1 56             	and    ecx,0x56
10000a65:	83 e0 ab             	and    eax,0xffffffab
10000a68:	49                   	dec    ecx
10000a69:	05 ff 00 00 00       	add    eax,0xff
10000a6e:	88 4c 24 24          	mov    BYTE PTR [esp+0x24],cl
10000a72:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10000a76:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000a7a:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10000a7e:	39 f8                	cmp    eax,edi
10000a80:	7d b3                	jge    10000a35 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x473>
10000a82:	8b 54 24 30          	mov    edx,DWORD PTR [esp+0x30]
10000a86:	8b 5c 24 44          	mov    ebx,DWORD PTR [esp+0x44]
10000a8a:	89 d6                	mov    esi,edx
10000a8c:	01 d3                	add    ebx,edx
10000a8e:	89 5c 24 2c          	mov    DWORD PTR [esp+0x2c],ebx
10000a92:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10000a96:	01 d8                	add    eax,ebx
10000a98:	01 fb                	add    ebx,edi
10000a9a:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10000a9e:	89 f2                	mov    edx,esi
10000aa0:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
10000aa4:	eb 1b                	jmp    10000ac1 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4ff>
10000aa6:	8a 4c 24 20          	mov    cl,BYTE PTR [esp+0x20]
10000aaa:	88 0c 17             	mov    BYTE PTR [edi+edx*1],cl
10000aad:	40                   	inc    eax
10000aae:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
10000ab2:	8b 8f 58 01 00 00    	mov    ecx,DWORD PTR [edi+0x158]
10000ab8:	c1 f9 03             	sar    ecx,0x3
10000abb:	01 ca                	add    edx,ecx
10000abd:	39 c3                	cmp    ebx,eax
10000abf:	74 0e                	je     10000acf <VGAVideo::putrect(int, int, int, int, unsigned int)+0x50d>
10000ac1:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10000ac5:	a8 01                	test   al,0x1
10000ac7:	74 dd                	je     10000aa6 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4e4>
10000ac9:	8a 4c 24 24          	mov    cl,BYTE PTR [esp+0x24]
10000acd:	eb db                	jmp    10000aaa <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4e8>
10000acf:	46                   	inc    esi
10000ad0:	39 74 24 2c          	cmp    DWORD PTR [esp+0x2c],esi
10000ad4:	75 c8                	jne    10000a9e <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4dc>
10000ad6:	ff 44 24 38          	inc    DWORD PTR [esp+0x38]
10000ada:	e9 d3 fd ff ff       	jmp    100008b2 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x2f0>
10000adf:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
10000ae3:	d3 fe                	sar    esi,cl
10000ae5:	83 e6 01             	and    esi,0x1
10000ae8:	89 74 24 20          	mov    DWORD PTR [esp+0x20],esi
10000aec:	74 4b                	je     10000b39 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x577>
10000aee:	c6 44 24 24 aa       	mov    BYTE PTR [esp+0x24],0xaa
10000af3:	c7 44 24 20 55 00 00 00 	mov    DWORD PTR [esp+0x20],0x55
10000afb:	e9 76 ff ff ff       	jmp    10000a76 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4b4>
10000b00:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
10000b04:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10000b08:	83 e0 f8             	and    eax,0xfffffff8
10000b0b:	8d 44 07 ff          	lea    eax,[edi+eax*1-0x1]
10000b0f:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000b13:	ff 44 24 14          	inc    DWORD PTR [esp+0x14]
10000b17:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000b1b:	39 44 24 3c          	cmp    DWORD PTR [esp+0x3c],eax
10000b1f:	0f 8f 4c fb ff ff    	jg     10000671 <VGAVideo::putrect(int, int, int, int, unsigned int)+0xaf>
10000b25:	e9 ed fb ff ff       	jmp    10000717 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x155>
10000b2a:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000b2e:	8b 80 58 01 00 00    	mov    eax,DWORD PTR [eax+0x158]
10000b34:	e9 80 fc ff ff       	jmp    100007b9 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x1f7>
10000b39:	c6 44 24 24 00       	mov    BYTE PTR [esp+0x24],0x0
10000b3e:	e9 33 ff ff ff       	jmp    10000a76 <VGAVideo::putrect(int, int, int, int, unsigned int)+0x4b4>
10000b43:	83 c4 50             	add    esp,0x50
10000b46:	5b                   	pop    ebx
10000b47:	5e                   	pop    esi
10000b48:	5f                   	pop    edi
10000b49:	e9 fc ff ff ff       	jmp    10000b4a <VGAVideo::putrect(int, int, int, int, unsigned int)+0x588>	10000b4a: R_386_PC32	Video::putrect(int, int, int, int, unsigned int)

10000b4e <VGAVideo::putpixel(int, int, unsigned int)>:
10000b4e:	57                   	push   edi
10000b4f:	56                   	push   esi
10000b50:	53                   	push   ebx
10000b51:	83 ec 14             	sub    esp,0x14
10000b54:	8b 74 24 24          	mov    esi,DWORD PTR [esp+0x24]
10000b58:	8b 5c 24 28          	mov    ebx,DWORD PTR [esp+0x28]
10000b5c:	8b 86 64 01 00 00    	mov    eax,DWORD PTR [esi+0x164]
10000b62:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000b66:	2d 00 00 00 3e       	sub    eax,0x3e000000
10000b6b:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000b6f:	89 d8                	mov    eax,ebx
10000b71:	f7 d0                	not    eax
10000b73:	83 e0 07             	and    eax,0x7
10000b76:	83 be 68 01 00 00 06 	cmp    DWORD PTR [esi+0x168],0x6
10000b7d:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000b81:	8b 86 58 01 00 00    	mov    eax,DWORD PTR [esi+0x158]
10000b87:	0f 84 c2 00 00 00    	je     10000c4f <VGAVideo::putpixel(int, int, unsigned int)+0x101>
10000b8d:	0f af 44 24 2c       	imul   eax,DWORD PTR [esp+0x2c]
10000b92:	01 d8                	add    eax,ebx
10000b94:	c1 f8 03             	sar    eax,0x3
10000b97:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000b9b:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
10000ba1:	84 d2                	test   dl,dl
10000ba3:	74 75                	je     10000c1a <VGAVideo::putpixel(int, int, unsigned int)+0xcc>
10000ba5:	88 54 24 10          	mov    BYTE PTR [esp+0x10],dl
10000ba9:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000bad:	53                   	push   ebx
10000bae:	57                   	push   edi
10000baf:	e8 fc ff ff ff       	call   10000bb0 <VGAVideo::putpixel(int, int, unsigned int)+0x62>	10000bb0: R_386_PC32	monoPixelLookup(int, int, int)
10000bb4:	83 c4 0c             	add    esp,0xc
10000bb7:	89 04 24             	mov    DWORD PTR [esp],eax
10000bba:	8a 54 24 10          	mov    dl,BYTE PTR [esp+0x10]
10000bbe:	b8 fe ff ff ff       	mov    eax,0xfffffffe
10000bc3:	8a 4c 24 04          	mov    cl,BYTE PTR [esp+0x4]
10000bc7:	31 db                	xor    ebx,ebx
10000bc9:	d3 c0                	rol    eax,cl
10000bcb:	84 d2                	test   dl,dl
10000bcd:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10000bd1:	74 3b                	je     10000c0e <VGAVideo::putpixel(int, int, unsigned int)+0xc0>
10000bd3:	85 db                	test   ebx,ebx
10000bd5:	75 3c                	jne    10000c13 <VGAVideo::putpixel(int, int, unsigned int)+0xc5>
10000bd7:	53                   	push   ebx
10000bd8:	43                   	inc    ebx
10000bd9:	56                   	push   esi
10000bda:	e8 fc ff ff ff       	call   10000bdb <VGAVideo::putpixel(int, int, unsigned int)+0x8d>	10000bdb: R_386_PC32	VGAVideo::setPlane(int)
10000bdf:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000be3:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
10000be7:	8a 44 24 18          	mov    al,BYTE PTR [esp+0x18]
10000beb:	03 7c 24 10          	add    edi,DWORD PTR [esp+0x10]
10000bef:	8a 4c 24 0c          	mov    cl,BYTE PTR [esp+0xc]
10000bf3:	22 07                	and    al,BYTE PTR [edi]
10000bf5:	d1 7c 24 08          	sar    DWORD PTR [esp+0x8],1
10000bf9:	83 e2 01             	and    edx,0x1
10000bfc:	d3 e2                	shl    edx,cl
10000bfe:	09 d0                	or     eax,edx
10000c00:	88 07                	mov    BYTE PTR [edi],al
10000c02:	8a 96 61 01 00 00    	mov    dl,BYTE PTR [esi+0x161]
10000c08:	58                   	pop    eax
10000c09:	84 d2                	test   dl,dl
10000c0b:	59                   	pop    ecx
10000c0c:	75 c5                	jne    10000bd3 <VGAVideo::putpixel(int, int, unsigned int)+0x85>
10000c0e:	83 fb 04             	cmp    ebx,0x4
10000c11:	75 c4                	jne    10000bd7 <VGAVideo::putpixel(int, int, unsigned int)+0x89>
10000c13:	83 c4 14             	add    esp,0x14
10000c16:	5b                   	pop    ebx
10000c17:	5e                   	pop    esi
10000c18:	5f                   	pop    edi
10000c19:	c3                   	ret    
10000c1a:	89 f9                	mov    ecx,edi
10000c1c:	89 f8                	mov    eax,edi
10000c1e:	c1 f9 15             	sar    ecx,0x15
10000c21:	c1 f8 0a             	sar    eax,0xa
10000c24:	83 e1 07             	and    ecx,0x7
10000c27:	83 e0 38             	and    eax,0x38
10000c2a:	09 c1                	or     ecx,eax
10000c2c:	8d 04 3f             	lea    eax,[edi+edi*1]
10000c2f:	25 c0 01 00 00       	and    eax,0x1c0
10000c34:	09 c8                	or     eax,ecx
10000c36:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
10000c3a:	01 d9                	add    ecx,ebx
10000c3c:	83 e1 01             	and    ecx,0x1
10000c3f:	0f b6 84 41 00 00 00 00 	movzx  eax,BYTE PTR [ecx+eax*2+0x0]	10000c43: R_386_32	dither16Data
10000c47:	89 04 24             	mov    DWORD PTR [esp],eax
10000c4a:	e9 6f ff ff ff       	jmp    10000bbe <VGAVideo::putpixel(int, int, unsigned int)+0x70>
10000c4f:	8b 54 24 2c          	mov    edx,DWORD PTR [esp+0x2c]
10000c53:	d1 fa                	sar    edx,1
10000c55:	0f af c2             	imul   eax,edx
10000c58:	01 d8                	add    eax,ebx
10000c5a:	c1 f8 03             	sar    eax,0x3
10000c5d:	f6 44 24 2c 01       	test   BYTE PTR [esp+0x2c],0x1
10000c62:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000c66:	0f 84 2f ff ff ff    	je     10000b9b <VGAVideo::putpixel(int, int, unsigned int)+0x4d>
10000c6c:	05 00 20 00 00       	add    eax,0x2000
10000c71:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000c75:	e9 21 ff ff ff       	jmp    10000b9b <VGAVideo::putpixel(int, int, unsigned int)+0x4d>

10000c7a <VGAVideo::~VGAVideo()>:
10000c7a:	55                   	push   ebp
10000c7b:	89 e5                	mov    ebp,esp
10000c7d:	83 ec 08             	sub    esp,0x8
10000c80:	ba 08 00 00 00       	mov    edx,0x8	10000c81: R_386_32	vtable for VGAVideo
10000c85:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000c88:	89 10                	mov    DWORD PTR [eax],edx
10000c8a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000c8d:	83 ec 0c             	sub    esp,0xc
10000c90:	50                   	push   eax
10000c91:	e8 fc ff ff ff       	call   10000c92 <VGAVideo::~VGAVideo()+0x18>	10000c92: R_386_PC32	Video::~Video()
10000c96:	83 c4 10             	add    esp,0x10
10000c99:	90                   	nop
10000c9a:	c9                   	leave  
10000c9b:	c3                   	ret    

10000c9c <VGAVideo::~VGAVideo()>:
10000c9c:	55                   	push   ebp
10000c9d:	89 e5                	mov    ebp,esp
10000c9f:	83 ec 08             	sub    esp,0x8
10000ca2:	83 ec 0c             	sub    esp,0xc
10000ca5:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000ca8:	e8 fc ff ff ff       	call   10000ca9 <VGAVideo::~VGAVideo()+0xd>	10000ca9: R_386_PC32	VGAVideo::~VGAVideo()
10000cad:	83 c4 10             	add    esp,0x10
10000cb0:	83 ec 08             	sub    esp,0x8
10000cb3:	68 6c 01 00 00       	push   0x16c
10000cb8:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000cbb:	e8 fc ff ff ff       	call   10000cbc <VGAVideo::~VGAVideo()+0x20>	10000cbc: R_386_PC32	operator delete(void*, unsigned long)
10000cc0:	83 c4 10             	add    esp,0x10
10000cc3:	c9                   	leave  
10000cc4:	c3                   	ret    
10000cc5:	66 90                	xchg   ax,ax
10000cc7:	90                   	nop

10000cc8 <PHYS_RAM_TABLE_SIZE>:
10000cc8:	13 05 00 00                                         ....

10000ccc <PHYS_HIGHEST_UNUSED_ADDRESS>:
10000ccc:	24 05 00 00                                         $...

10000cd0 <PHYS_RAM_TABLE>:
10000cd0:	00 06 00 00                                         ....

10000cd4 <PHYS_DMA_MEMORY_1>:
10000cd4:	00 00 01 00                                         ....

10000cd8 <PHYS_PHYS_PAGE_BITMAP>:
10000cd8:	00 00 02 00                                         ....

10000cdc <PHYS_VIRT_PAGE_BITMAP>:
10000cdc:	00 00 04 00                                         ....

10000ce0 <PHYS_DMA_MEMORY_2>:
10000ce0:	00 00 06 00                                         ....

10000ce4 <PHYS_ALLOCED_VIRT_PAGES>:
10000ce4:	00 00 10 00                                         ....

10000ce8 <PHYS_KRNL_PAGE_DIRECTORY>:
10000ce8:	00 10 00 00                                         ....

10000cec <VIRT_KERNEL_BASE>:
10000cec:	00 00 00 c0                                         ....

10000cf0 <VIRT_LOW_MEGS>:
10000cf0:	00 00 00 c2                                         ....

10000cf4 <VIRT_CPU_SPECIFIC>:
10000cf4:	00 00 40 c2                                         ..@.

10000cf8 <VIRT_RECURSIVE_SPOT_1>:
10000cf8:	00 00 80 c2                                         ....

10000cfc <VIRT_RECURSIVE_SPOT_2>:
10000cfc:	00 00 c0 c2                                         ....

10000d00 <VIRT_DMA_MEMORY_1>:
10000d00:	00 00 01 c2                                         ....

10000d04 <SIZE_DMA_MEMORY_1>:
10000d04:	00 00 01 00                                         ....

10000d08 <VIRT_DMA_MEMORY_2>:
10000d08:	00 00 06 c2                                         ....

10000d0c <SIZE_DMA_MEMORY_2>:
10000d0c:	00 00 02 00                                         ....

10000d10 <VIRT_KRNL_PAGE_DIRECTORY>:
10000d10:	00 10 00 c2                                         ....

10000d14 <VIRT_PHYS_PAGE_BITMAP>:
10000d14:	00 00 02 c2                                         ....

10000d18 <SIZE_PHYS_PAGE_BITMAP>:
10000d18:	00 00 02 00                                         ....

10000d1c <VIRT_VIRT_PAGE_BITMAP>:
10000d1c:	00 00 04 c2                                         ....

10000d20 <SIZE_VIRT_PAGE_BITMAP>:
10000d20:	00 80 00 00                                         ....

10000d24 <VIRT_RAM_TABLE>:
10000d24:	00 06 00 c2                                         ....

10000d28 <VIRT_RAM_TABLE_SIZE>:
10000d28:	13 05 00 c2                                         ....

10000d2c <VIRT_HIGHEST_UNUSED_ADDRESS>:
10000d2c:	24 05 00 c2                                         $...

10000d30 <SIZE_APP_STACK_USER>:
10000d30:	00 00 18 00                                         ....

10000d34 <SIZE_APP_STACK_KRNL>:
10000d34:	00 00 08 00                                         ....

10000d38 <SIZE_APP_STACK_TOTAL>:
10000d38:	00 00 20 00                                         .. .

10000d3c <VIRT_APP_DATA>:
10000d3c:	00 00 00 10                                         ....

10000d40 <VIRT_APP_STACK_USER_TOP>:
10000d40:	00 00 00 02                                         ....

10000d44 <VIRT_APP_STACK_KRNL_TOP>:
10000d44:	00 00 e8 01                                         ....

10000d48 <VIRT_HEAP_MIN>:
10000d48:	00 00 00 c8                                         ....

10000d4c <VIRT_HEAP_MAX>:
10000d4c:	ff ff ff ef                                         ....

10000d50 <VIRT_SBRK_MIN>:
10000d50:	00 00 00 f0                                         ....

10000d54 <VIRT_SBRK_MAX>:
10000d54:	00 00 c0 ff                                         ....

10000d58 <VIRT_ALLOCED_VIRT_PAGES>:
10000d58:	00 00 10 c2                                         ....

10000d5c <VIRT_ACPI_DRIVER>:
10000d5c:	00 40 48 c2                                         .@H.

10000d60 <TERMINAL_KEYBUFFER_IN_SIZE>:
10000d60:	96 00 00 00                                         ....

10000d64 <TERMINAL_KEYBUFFER_OUT_SIZE>:
10000d64:	2c 01 00 00 56 47 41 20 44 69 73 70 6c 61 79 00     ,...VGA Display.
10000d74:	43 3a 2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d     C:/Banana/System
10000d84:	2f 56 47 41 2e 43 4f 4d 00 53 65 74 20 74 6f 20     /VGA.COM.Set to 
10000d94:	76 69 64 65 6f 20 6d 6f 64 65 20 25 64 0a 00 90     video mode %d...

10000da4 <vtable for VGAVideo>:
	...
	10000dac: R_386_32	VGAVideo::~VGAVideo()
	10000db0: R_386_32	VGAVideo::~VGAVideo()
	10000db4: R_386_32	VGAVideo::open(int, int, void*)
	10000db8: R_386_32	VGAVideo::close(int, int, void*)
	10000dbc: R_386_32	Device::hibernate()
	10000dc0: R_386_32	Device::wake()
	10000dc4: R_386_32	Device::detect()
	10000dc8: R_386_32	Device::disableLegacy()
	10000dcc: R_386_32	Device::powerSaving(PowerSavingLevel)
	10000dd0: R_386_32	VGAVideo::putpixel(int, int, unsigned int)
	10000dd4: R_386_32	VGAVideo::putrect(int, int, int, int, unsigned int)
	10000dd8: R_386_32	Video::putTGA(int, int, unsigned char*, int)
	10000ddc: R_386_32	Video::drawCursor(int, int, unsigned char*, int)
	10000de0: R_386_32	VGAVideo::bitblit(int, int, int, int, int, int, int, unsigned int*)
	10000de4: R_386_32	Video::blit(unsigned int*, int, int, int, int)
	10000de8: R_386_32	Video::clearScreen(unsigned int)
