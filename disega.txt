
packages/banana/32/0002/egavga.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start(Device*)-0x17>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	83 ec 0c             	sub    esp,0xc
10000009:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000000c:	e8 fc ff ff ff       	call   1000000d <start(Device*)-0xa>	1000000d: R_386_PC32	start(Device*)
10000011:	83 c4 10             	add    esp,0x10
10000014:	90                   	nop
10000015:	c9                   	leave  
10000016:	c3                   	ret    

10000017 <start(Device*)>:
10000017:	53                   	push   ebx
10000018:	83 ec 14             	sub    esp,0x14
1000001b:	68 64 01 00 00       	push   0x164
10000020:	e8 fc ff ff ff       	call   10000021 <start(Device*)+0xa>	10000021: R_386_PC32	operator new(unsigned long)
10000025:	89 c3                	mov    ebx,eax
10000027:	89 04 24             	mov    DWORD PTR [esp],eax
1000002a:	e8 fc ff ff ff       	call   1000002b <start(Device*)+0x14>	1000002b: R_386_PC32	EGAVGA::EGAVGA()
1000002f:	83 c4 08             	add    esp,0x8
10000032:	53                   	push   ebx
10000033:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000037:	e8 fc ff ff ff       	call   10000038 <start(Device*)+0x21>	10000038: R_386_PC32	Device::addChild(Device*)
1000003c:	83 c4 18             	add    esp,0x18
1000003f:	5b                   	pop    ebx
10000040:	c3                   	ret    
10000041:	90                   	nop

10000042 <EGAVGA::EGAVGA()>:
10000042:	55                   	push   ebp
10000043:	89 e5                	mov    ebp,esp
10000045:	83 ec 08             	sub    esp,0x8
10000048:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000004b:	83 ec 08             	sub    esp,0x8
1000004e:	68 34 06 00 10       	push   0x10000634	1000004f: R_386_32	.text
10000053:	50                   	push   eax
10000054:	e8 fc ff ff ff       	call   10000055 <EGAVGA::EGAVGA()+0x13>	10000055: R_386_PC32	Video::Video(char const*)
10000059:	83 c4 10             	add    esp,0x10
1000005c:	ba 08 00 00 00       	mov    edx,0x8	1000005d: R_386_32	vtable for EGAVGA
10000061:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000064:	89 10                	mov    DWORD PTR [eax],edx
10000066:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000069:	c6 80 61 01 00 00 00 	mov    BYTE PTR [eax+0x161],0x0
10000070:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000073:	c6 80 62 01 00 00 01 	mov    BYTE PTR [eax+0x162],0x1
1000007a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000007d:	c6 80 63 01 00 00 00 	mov    BYTE PTR [eax+0x163],0x0
10000084:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000087:	8a 80 c4 00 00 00    	mov    al,BYTE PTR [eax+0xc4]
1000008d:	0f b6 d0             	movzx  edx,al
10000090:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000093:	66 c7 44 90 04 b0 03 	mov    WORD PTR [eax+edx*4+0x4],0x3b0
1000009a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000009d:	8a 80 c4 00 00 00    	mov    al,BYTE PTR [eax+0xc4]
100000a3:	0f b6 d0             	movzx  edx,al
100000a6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000a9:	c6 44 90 06 30       	mov    BYTE PTR [eax+edx*4+0x6],0x30
100000ae:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000b1:	8a 80 c4 00 00 00    	mov    al,BYTE PTR [eax+0xc4]
100000b7:	8d 50 01             	lea    edx,[eax+0x1]
100000ba:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100000bd:	88 91 c4 00 00 00    	mov    BYTE PTR [ecx+0xc4],dl
100000c3:	0f b6 d0             	movzx  edx,al
100000c6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c9:	8a 4c 90 07          	mov    cl,BYTE PTR [eax+edx*4+0x7]
100000cd:	83 e1 3f             	and    ecx,0x3f
100000d0:	88 4c 90 07          	mov    BYTE PTR [eax+edx*4+0x7],cl
100000d4:	90                   	nop
100000d5:	c9                   	leave  
100000d6:	c3                   	ret    
100000d7:	90                   	nop

100000d8 <EGAVGA::open(int, int, void*)>:
100000d8:	b8 00 00 00 00       	mov    eax,0x0
100000dd:	c3                   	ret    

100000de <EGAVGA::close(int, int, void*)>:
100000de:	b8 00 00 00 00       	mov    eax,0x0
100000e3:	c3                   	ret    

100000e4 <EGAVGA::vinb(unsigned short)>:
100000e4:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100000e8:	ec                   	in     al,dx
100000e9:	88 c2                	mov    dl,al
100000eb:	b8 00 00 00 00       	mov    eax,0x0
100000f0:	e6 80                	out    0x80,al
100000f2:	e6 80                	out    0x80,al
100000f4:	88 d0                	mov    al,dl
100000f6:	c3                   	ret    
100000f7:	90                   	nop

100000f8 <EGAVGA::voutb(unsigned short, unsigned char)>:
100000f8:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100000fc:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000100:	ee                   	out    dx,al
10000101:	b8 00 00 00 00       	mov    eax,0x0
10000106:	e6 80                	out    0x80,al
10000108:	e6 80                	out    0x80,al
1000010a:	c3                   	ret    
1000010b:	90                   	nop

1000010c <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)>:
1000010c:	57                   	push   edi
1000010d:	56                   	push   esi
1000010e:	53                   	push   ebx
1000010f:	83 ec 10             	sub    esp,0x10
10000112:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10000116:	8a 44 24 30          	mov    al,BYTE PTR [esp+0x30]
1000011a:	88 44 24 0e          	mov    BYTE PTR [esp+0xe],al
1000011e:	8a 44 24 34          	mov    al,BYTE PTR [esp+0x34]
10000122:	88 44 24 0c          	mov    BYTE PTR [esp+0xc],al
10000126:	c7 44 24 08 00 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
1000012e:	eb 44                	jmp    10000174 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x68>
10000130:	0f b6 44 24 0e       	movzx  eax,BYTE PTR [esp+0xe]
10000135:	50                   	push   eax
10000136:	57                   	push   edi
10000137:	53                   	push   ebx
10000138:	e8 fc ff ff ff       	call   10000139 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x2d>	10000139: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
1000013d:	83 c4 0c             	add    esp,0xc
10000140:	0f b6 44 24 0d       	movzx  eax,BYTE PTR [esp+0xd]
10000145:	50                   	push   eax
10000146:	56                   	push   esi
10000147:	53                   	push   ebx
10000148:	e8 fc ff ff ff       	call   10000149 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x3d>	10000149: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
1000014d:	83 c4 0c             	add    esp,0xc
10000150:	80 7c 24 0c 00       	cmp    BYTE PTR [esp+0xc],0x0
10000155:	74 68                	je     100001bf <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xb3>
10000157:	57                   	push   edi
10000158:	53                   	push   ebx
10000159:	e8 fc ff ff ff       	call   1000015a <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x4e>	1000015a: R_386_PC32	EGAVGA::vinb(unsigned short)
1000015e:	83 c4 08             	add    esp,0x8
10000161:	38 44 24 0e          	cmp    BYTE PTR [esp+0xe],al
10000165:	74 58                	je     100001bf <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xb3>
10000167:	ff 44 24 08          	inc    DWORD PTR [esp+0x8]
1000016b:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000016f:	83 f8 05             	cmp    eax,0x5
10000172:	74 39                	je     100001ad <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xa1>
10000174:	0f b7 74 24 28       	movzx  esi,WORD PTR [esp+0x28]
10000179:	56                   	push   esi
1000017a:	53                   	push   ebx
1000017b:	e8 fc ff ff ff       	call   1000017c <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x70>	1000017c: R_386_PC32	EGAVGA::vinb(unsigned short)
10000180:	88 44 24 15          	mov    BYTE PTR [esp+0x15],al
10000184:	0f b6 44 24 2c       	movzx  eax,BYTE PTR [esp+0x2c]
10000189:	50                   	push   eax
1000018a:	56                   	push   esi
1000018b:	53                   	push   ebx
1000018c:	e8 fc ff ff ff       	call   1000018d <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x81>	1000018d: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
10000191:	0f b7 7c 24 40       	movzx  edi,WORD PTR [esp+0x40]
10000196:	57                   	push   edi
10000197:	53                   	push   ebx
10000198:	e8 fc ff ff ff       	call   10000199 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x8d>	10000199: R_386_PC32	EGAVGA::vinb(unsigned short)
1000019d:	88 44 24 2b          	mov    BYTE PTR [esp+0x2b],al
100001a1:	83 c4 1c             	add    esp,0x1c
100001a4:	80 7c 24 0c 00       	cmp    BYTE PTR [esp+0xc],0x0
100001a9:	74 95                	je     10000140 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x34>
100001ab:	eb 83                	jmp    10000130 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x24>
100001ad:	83 ec 0c             	sub    esp,0xc
100001b0:	68 54 06 00 10       	push   0x10000654	100001b1: R_386_32	.text
100001b5:	e8 fc ff ff ff       	call   100001b6 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xaa>	100001b6: R_386_PC32	Krnl::panic(char const*)
100001ba:	83 c4 10             	add    esp,0x10
100001bd:	eb b5                	jmp    10000174 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x68>
100001bf:	8a 44 24 0f          	mov    al,BYTE PTR [esp+0xf]
100001c3:	83 c4 10             	add    esp,0x10
100001c6:	5b                   	pop    ebx
100001c7:	5e                   	pop    esi
100001c8:	5f                   	pop    edi
100001c9:	c3                   	ret    
100001ca:	83 ec 14             	sub    esp,0x14
100001cd:	6a 00                	push   0x0
100001cf:	6a 00                	push   0x0
100001d1:	68 cf 03 00 00       	push   0x3cf
100001d6:	68 ce 03 00 00       	push   0x3ce
100001db:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100001df:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100001e3:	e8 fc ff ff ff       	call   100001e4 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xd8>	100001e4: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
100001e8:	83 c4 2c             	add    esp,0x2c
100001eb:	c3                   	ret    
100001ec:	83 ec 14             	sub    esp,0x14
100001ef:	6a 00                	push   0x0
100001f1:	6a 00                	push   0x0
100001f3:	68 c5 03 00 00       	push   0x3c5
100001f8:	68 c4 03 00 00       	push   0x3c4
100001fd:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000201:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000205:	e8 fc ff ff ff       	call   10000206 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xfa>	10000206: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
1000020a:	83 c4 2c             	add    esp,0x2c
1000020d:	c3                   	ret    

1000020e <EGAVGA::accessAttrib(int, unsigned char, bool)>:
1000020e:	57                   	push   edi
1000020f:	56                   	push   esi
10000210:	53                   	push   ebx
10000211:	83 ec 10             	sub    esp,0x10
10000214:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10000218:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
1000021c:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000220:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000224:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000228:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000022c:	fa                   	cli    
1000022d:	ff 05 00 00 00 00    	inc    DWORD PTR ds:0x0	1000022f: R_386_32	irqDisableCounter
10000233:	83 ec 0c             	sub    esp,0xc
10000236:	56                   	push   esi
10000237:	e8 fc ff ff ff       	call   10000238 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x2a>	10000238: R_386_PC32	EGAVGA::isVBLANK()
1000023c:	83 c4 10             	add    esp,0x10
1000023f:	84 c0                	test   al,al
10000241:	75 f0                	jne    10000233 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x25>
10000243:	83 ec 0c             	sub    esp,0xc
10000246:	56                   	push   esi
10000247:	e8 fc ff ff ff       	call   10000248 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x3a>	10000248: R_386_PC32	EGAVGA::waitVBLANK()
1000024c:	83 c4 10             	add    esp,0x10
1000024f:	80 be 63 01 00 00 00 	cmp    BYTE PTR [esi+0x163],0x0
10000256:	74 10                	je     10000268 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x5a>
10000258:	83 ec 0c             	sub    esp,0xc
1000025b:	56                   	push   esi
1000025c:	e8 fc ff ff ff       	call   1000025d <EGAVGA::accessAttrib(int, unsigned char, bool)+0x4f>	1000025d: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
10000261:	83 c4 10             	add    esp,0x10
10000264:	84 c0                	test   al,al
10000266:	74 1b                	je     10000283 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x75>
10000268:	83 ec 0c             	sub    esp,0xc
1000026b:	68 f4 06 00 10       	push   0x100006f4	1000026c: R_386_32	.text
10000270:	e8 fc ff ff ff       	call   10000271 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x63>	10000271: R_386_PC32	Dbg::kprintf(char const*, ...)
10000275:	83 c4 08             	add    esp,0x8
10000278:	6a 03                	push   0x3
1000027a:	56                   	push   esi
1000027b:	e8 fc ff ff ff       	call   1000027c <EGAVGA::accessAttrib(int, unsigned char, bool)+0x6e>	1000027c: R_386_PC32	EGAVGA::readRegister(ExtReg)
10000280:	83 c4 10             	add    esp,0x10
10000283:	83 ec 08             	sub    esp,0x8
10000286:	68 c0 03 00 00       	push   0x3c0
1000028b:	56                   	push   esi
1000028c:	e8 fc ff ff ff       	call   1000028d <EGAVGA::accessAttrib(int, unsigned char, bool)+0x7f>	1000028d: R_386_PC32	EGAVGA::vinb(unsigned short)
10000291:	0f b6 f8             	movzx  edi,al
10000294:	83 c4 08             	add    esp,0x8
10000297:	57                   	push   edi
10000298:	68 09 07 00 10       	push   0x10000709	10000299: R_386_32	.text
1000029d:	e8 fc ff ff ff       	call   1000029e <EGAVGA::accessAttrib(int, unsigned char, bool)+0x90>	1000029e: R_386_PC32	Dbg::kprintf(char const*, ...)
100002a2:	83 c4 08             	add    esp,0x8
100002a5:	53                   	push   ebx
100002a6:	68 1a 07 00 10       	push   0x1000071a	100002a7: R_386_32	.text
100002ab:	e8 fc ff ff ff       	call   100002ac <EGAVGA::accessAttrib(int, unsigned char, bool)+0x9e>	100002ac: R_386_PC32	Dbg::kprintf(char const*, ...)
100002b0:	83 c4 0c             	add    esp,0xc
100002b3:	0f b6 db             	movzx  ebx,bl
100002b6:	53                   	push   ebx
100002b7:	68 c0 03 00 00       	push   0x3c0
100002bc:	56                   	push   esi
100002bd:	e8 fc ff ff ff       	call   100002be <EGAVGA::accessAttrib(int, unsigned char, bool)+0xb0>	100002be: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
100002c2:	83 c4 08             	add    esp,0x8
100002c5:	68 c1 03 00 00       	push   0x3c1
100002ca:	56                   	push   esi
100002cb:	e8 fc ff ff ff       	call   100002cc <EGAVGA::accessAttrib(int, unsigned char, bool)+0xbe>	100002cc: R_386_PC32	EGAVGA::vinb(unsigned short)
100002d0:	88 c3                	mov    bl,al
100002d2:	83 c4 08             	add    esp,0x8
100002d5:	0f b6 c0             	movzx  eax,al
100002d8:	50                   	push   eax
100002d9:	68 2f 07 00 10       	push   0x1000072f	100002da: R_386_32	.text
100002de:	e8 fc ff ff ff       	call   100002df <EGAVGA::accessAttrib(int, unsigned char, bool)+0xd1>	100002df: R_386_PC32	Dbg::kprintf(char const*, ...)
100002e3:	83 c4 10             	add    esp,0x10
100002e6:	80 7c 24 08 00       	cmp    BYTE PTR [esp+0x8],0x0
100002eb:	75 36                	jne    10000323 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x115>
100002ed:	83 ec 04             	sub    esp,0x4
100002f0:	57                   	push   edi
100002f1:	68 c0 03 00 00       	push   0x3c0
100002f6:	56                   	push   esi
100002f7:	e8 fc ff ff ff       	call   100002f8 <EGAVGA::accessAttrib(int, unsigned char, bool)+0xea>	100002f8: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
100002fc:	83 c4 08             	add    esp,0x8
100002ff:	6a 03                	push   0x3
10000301:	56                   	push   esi
10000302:	e8 fc ff ff ff       	call   10000303 <EGAVGA::accessAttrib(int, unsigned char, bool)+0xf5>	10000303: R_386_PC32	EGAVGA::readRegister(ExtReg)
10000307:	a1 00 00 00 00       	mov    eax,ds:0x0	10000308: R_386_32	irqDisableCounter
1000030c:	48                   	dec    eax
1000030d:	a3 00 00 00 00       	mov    ds:0x0,eax	1000030e: R_386_32	irqDisableCounter
10000312:	83 c4 10             	add    esp,0x10
10000315:	85 c0                	test   eax,eax
10000317:	75 01                	jne    1000031a <EGAVGA::accessAttrib(int, unsigned char, bool)+0x10c>
10000319:	fb                   	sti    
1000031a:	88 d8                	mov    al,bl
1000031c:	83 c4 10             	add    esp,0x10
1000031f:	5b                   	pop    ebx
10000320:	5e                   	pop    esi
10000321:	5f                   	pop    edi
10000322:	c3                   	ret    
10000323:	83 ec 0c             	sub    esp,0xc
10000326:	68 40 07 00 10       	push   0x10000740	10000327: R_386_32	.text
1000032b:	e8 fc ff ff ff       	call   1000032c <EGAVGA::accessAttrib(int, unsigned char, bool)+0x11e>	1000032c: R_386_PC32	Dbg::kprintf(char const*, ...)
10000330:	83 c4 0c             	add    esp,0xc
10000333:	0f b6 44 24 10       	movzx  eax,BYTE PTR [esp+0x10]
10000338:	50                   	push   eax
10000339:	68 c0 03 00 00       	push   0x3c0
1000033e:	56                   	push   esi
1000033f:	e8 fc ff ff ff       	call   10000340 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x132>	10000340: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
10000344:	83 c4 10             	add    esp,0x10
10000347:	eb a4                	jmp    100002ed <EGAVGA::accessAttrib(int, unsigned char, bool)+0xdf>
10000349:	90                   	nop
1000034a:	83 ec 0c             	sub    esp,0xc
1000034d:	6a 00                	push   0x0
1000034f:	6a 00                	push   0x0
10000351:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000355:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000359:	e8 fc ff ff ff       	call   1000035a <EGAVGA::accessAttrib(int, unsigned char, bool)+0x14c>	1000035a: R_386_PC32	EGAVGA::accessAttrib(int, unsigned char, bool)
1000035e:	83 c4 1c             	add    esp,0x1c
10000361:	c3                   	ret    

10000362 <EGAVGA::readRegister(CRTCReg)>:
10000362:	83 ec 0c             	sub    esp,0xc
10000365:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000369:	8a 90 61 01 00 00    	mov    dl,BYTE PTR [eax+0x161]
1000036f:	84 d2                	test   dl,dl
10000371:	74 25                	je     10000398 <EGAVGA::readRegister(CRTCReg)+0x36>
10000373:	b9 d5 03 00 00       	mov    ecx,0x3d5
10000378:	84 d2                	test   dl,dl
1000037a:	74 23                	je     1000039f <EGAVGA::readRegister(CRTCReg)+0x3d>
1000037c:	ba d4 03 00 00       	mov    edx,0x3d4
10000381:	83 ec 08             	sub    esp,0x8
10000384:	6a 00                	push   0x0
10000386:	6a 00                	push   0x0
10000388:	51                   	push   ecx
10000389:	52                   	push   edx
1000038a:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
1000038e:	50                   	push   eax
1000038f:	e8 fc ff ff ff       	call   10000390 <EGAVGA::readRegister(CRTCReg)+0x2e>	10000390: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
10000394:	83 c4 2c             	add    esp,0x2c
10000397:	c3                   	ret    
10000398:	b9 b5 03 00 00       	mov    ecx,0x3b5
1000039d:	eb d9                	jmp    10000378 <EGAVGA::readRegister(CRTCReg)+0x16>
1000039f:	ba b4 03 00 00       	mov    edx,0x3b4
100003a4:	eb db                	jmp    10000381 <EGAVGA::readRegister(CRTCReg)+0x1f>
100003a6:	b0 fe                	mov    al,0xfe
100003a8:	c3                   	ret    
100003a9:	90                   	nop

100003aa <EGAVGA::readRegister(ExtReg)>:
100003aa:	53                   	push   ebx
100003ab:	83 ec 08             	sub    esp,0x8
100003ae:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100003b2:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100003b6:	83 f8 03             	cmp    eax,0x3
100003b9:	74 1a                	je     100003d5 <EGAVGA::readRegister(ExtReg)+0x2b>
100003bb:	85 c0                	test   eax,eax
100003bd:	75 60                	jne    1000041f <EGAVGA::readRegister(ExtReg)+0x75>
100003bf:	83 ec 08             	sub    esp,0x8
100003c2:	68 cc 03 00 00       	push   0x3cc
100003c7:	53                   	push   ebx
100003c8:	e8 fc ff ff ff       	call   100003c9 <EGAVGA::readRegister(ExtReg)+0x1f>	100003c9: R_386_PC32	EGAVGA::vinb(unsigned short)
100003cd:	83 c4 10             	add    esp,0x10
100003d0:	83 c4 08             	add    esp,0x8
100003d3:	5b                   	pop    ebx
100003d4:	c3                   	ret    
100003d5:	80 bb 62 01 00 00 00 	cmp    BYTE PTR [ebx+0x162],0x0
100003dc:	74 33                	je     10000411 <EGAVGA::readRegister(ExtReg)+0x67>
100003de:	b8 da 03 00 00       	mov    eax,0x3da
100003e3:	83 ec 08             	sub    esp,0x8
100003e6:	50                   	push   eax
100003e7:	68 4f 07 00 10       	push   0x1000074f	100003e8: R_386_32	.text
100003ec:	e8 fc ff ff ff       	call   100003ed <EGAVGA::readRegister(ExtReg)+0x43>	100003ed: R_386_PC32	Dbg::kprintf(char const*, ...)
100003f1:	83 c4 10             	add    esp,0x10
100003f4:	80 bb 62 01 00 00 00 	cmp    BYTE PTR [ebx+0x162],0x0
100003fb:	74 1b                	je     10000418 <EGAVGA::readRegister(ExtReg)+0x6e>
100003fd:	b8 da 03 00 00       	mov    eax,0x3da
10000402:	83 ec 08             	sub    esp,0x8
10000405:	50                   	push   eax
10000406:	53                   	push   ebx
10000407:	e8 fc ff ff ff       	call   10000408 <EGAVGA::readRegister(ExtReg)+0x5e>	10000408: R_386_PC32	EGAVGA::vinb(unsigned short)
1000040c:	83 c4 10             	add    esp,0x10
1000040f:	eb bf                	jmp    100003d0 <EGAVGA::readRegister(ExtReg)+0x26>
10000411:	b8 ba 03 00 00       	mov    eax,0x3ba
10000416:	eb cb                	jmp    100003e3 <EGAVGA::readRegister(ExtReg)+0x39>
10000418:	b8 ba 03 00 00       	mov    eax,0x3ba
1000041d:	eb e3                	jmp    10000402 <EGAVGA::readRegister(ExtReg)+0x58>
1000041f:	83 ec 0c             	sub    esp,0xc
10000422:	68 78 06 00 10       	push   0x10000678	10000423: R_386_32	.text
10000427:	e8 fc ff ff ff       	call   10000428 <EGAVGA::readRegister(ExtReg)+0x7e>	10000428: R_386_PC32	Krnl::panic(char const*)
1000042c:	83 c4 10             	add    esp,0x10
1000042f:	b0 fe                	mov    al,0xfe
10000431:	eb 9d                	jmp    100003d0 <EGAVGA::readRegister(ExtReg)+0x26>
10000433:	90                   	nop
10000434:	83 ec 14             	sub    esp,0x14
10000437:	6a 01                	push   0x1
10000439:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
1000043e:	50                   	push   eax
1000043f:	68 cf 03 00 00       	push   0x3cf
10000444:	68 ce 03 00 00       	push   0x3ce
10000449:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
1000044d:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000451:	e8 fc ff ff ff       	call   10000452 <EGAVGA::readRegister(ExtReg)+0xa8>	10000452: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
10000456:	83 c4 2c             	add    esp,0x2c
10000459:	c3                   	ret    
1000045a:	83 ec 14             	sub    esp,0x14
1000045d:	6a 01                	push   0x1
1000045f:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10000464:	50                   	push   eax
10000465:	68 c5 03 00 00       	push   0x3c5
1000046a:	68 c4 03 00 00       	push   0x3c4
1000046f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000473:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000477:	e8 fc ff ff ff       	call   10000478 <EGAVGA::readRegister(ExtReg)+0xce>	10000478: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
1000047c:	83 c4 2c             	add    esp,0x2c
1000047f:	c3                   	ret    
10000480:	83 ec 0c             	sub    esp,0xc
10000483:	6a 01                	push   0x1
10000485:	0f b6 44 24 1c       	movzx  eax,BYTE PTR [esp+0x1c]
1000048a:	50                   	push   eax
1000048b:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
1000048f:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000493:	e8 fc ff ff ff       	call   10000494 <EGAVGA::readRegister(ExtReg)+0xea>	10000494: R_386_PC32	EGAVGA::accessAttrib(int, unsigned char, bool)
10000498:	83 c4 1c             	add    esp,0x1c
1000049b:	c3                   	ret    
1000049c:	53                   	push   ebx
1000049d:	83 ec 08             	sub    esp,0x8
100004a0:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100004a4:	0f b6 5c 24 18       	movzx  ebx,BYTE PTR [esp+0x18]
100004a9:	8a 90 61 01 00 00    	mov    dl,BYTE PTR [eax+0x161]
100004af:	84 d2                	test   dl,dl
100004b1:	74 25                	je     100004d8 <EGAVGA::readRegister(ExtReg)+0x12e>
100004b3:	b9 d5 03 00 00       	mov    ecx,0x3d5
100004b8:	84 d2                	test   dl,dl
100004ba:	74 23                	je     100004df <EGAVGA::readRegister(ExtReg)+0x135>
100004bc:	ba d4 03 00 00       	mov    edx,0x3d4
100004c1:	83 ec 08             	sub    esp,0x8
100004c4:	6a 01                	push   0x1
100004c6:	53                   	push   ebx
100004c7:	51                   	push   ecx
100004c8:	52                   	push   edx
100004c9:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100004cd:	50                   	push   eax
100004ce:	e8 fc ff ff ff       	call   100004cf <EGAVGA::readRegister(ExtReg)+0x125>	100004cf: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
100004d3:	83 c4 28             	add    esp,0x28
100004d6:	5b                   	pop    ebx
100004d7:	c3                   	ret    
100004d8:	b9 b5 03 00 00       	mov    ecx,0x3b5
100004dd:	eb d9                	jmp    100004b8 <EGAVGA::readRegister(ExtReg)+0x10e>
100004df:	ba b4 03 00 00       	mov    edx,0x3b4
100004e4:	eb db                	jmp    100004c1 <EGAVGA::readRegister(ExtReg)+0x117>
100004e6:	c3                   	ret    
100004e7:	90                   	nop
100004e8:	83 ec 0c             	sub    esp,0xc
100004eb:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100004ef:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
100004f3:	83 f8 03             	cmp    eax,0x3
100004f6:	74 20                	je     10000518 <EGAVGA::readRegister(ExtReg)+0x16e>
100004f8:	85 c0                	test   eax,eax
100004fa:	75 2e                	jne    1000052a <EGAVGA::readRegister(ExtReg)+0x180>
100004fc:	83 ec 04             	sub    esp,0x4
100004ff:	0f b6 d2             	movzx  edx,dl
10000502:	52                   	push   edx
10000503:	68 c2 03 00 00       	push   0x3c2
10000508:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
1000050c:	e8 fc ff ff ff       	call   1000050d <EGAVGA::readRegister(ExtReg)+0x163>	1000050d: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
10000511:	83 c4 10             	add    esp,0x10
10000514:	83 c4 0c             	add    esp,0xc
10000517:	c3                   	ret    
10000518:	83 ec 0c             	sub    esp,0xc
1000051b:	68 a0 06 00 10       	push   0x100006a0	1000051c: R_386_32	.text
10000520:	e8 fc ff ff ff       	call   10000521 <EGAVGA::readRegister(ExtReg)+0x177>	10000521: R_386_PC32	Krnl::panic(char const*)
10000525:	83 c4 10             	add    esp,0x10
10000528:	eb ea                	jmp    10000514 <EGAVGA::readRegister(ExtReg)+0x16a>
1000052a:	83 ec 0c             	sub    esp,0xc
1000052d:	68 78 06 00 10       	push   0x10000678	1000052e: R_386_32	.text
10000532:	e8 fc ff ff ff       	call   10000533 <EGAVGA::readRegister(ExtReg)+0x189>	10000533: R_386_PC32	Krnl::panic(char const*)
10000537:	83 c4 10             	add    esp,0x10
1000053a:	eb d8                	jmp    10000514 <EGAVGA::readRegister(ExtReg)+0x16a>

1000053c <EGAVGA::getUndocumentedCRTC24Bit()>:
1000053c:	83 ec 14             	sub    esp,0x14
1000053f:	6a 24                	push   0x24
10000541:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000545:	e8 fc ff ff ff       	call   10000546 <EGAVGA::getUndocumentedCRTC24Bit()+0xa>	10000546: R_386_PC32	EGAVGA::readRegister(CRTCReg)
1000054a:	a8 80                	test   al,0x80
1000054c:	0f 95 c0             	setne  al
1000054f:	83 c4 1c             	add    esp,0x1c
10000552:	c3                   	ret    
10000553:	90                   	nop
10000554:	53                   	push   ebx
10000555:	83 ec 14             	sub    esp,0x14
10000558:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
1000055c:	68 5e 07 00 10       	push   0x1000075e	1000055d: R_386_32	.text
10000561:	e8 fc ff ff ff       	call   10000562 <EGAVGA::getUndocumentedCRTC24Bit()+0x26>	10000562: R_386_PC32	Dbg::kprintf(char const*, ...)
10000566:	c6 83 63 01 00 00 00 	mov    BYTE PTR [ebx+0x163],0x0
1000056d:	fa                   	cli    
1000056e:	ff 05 00 00 00 00    	inc    DWORD PTR ds:0x0	10000570: R_386_32	irqDisableCounter
10000574:	83 c4 08             	add    esp,0x8
10000577:	6a 03                	push   0x3
10000579:	53                   	push   ebx
1000057a:	e8 fc ff ff ff       	call   1000057b <EGAVGA::getUndocumentedCRTC24Bit()+0x3f>	1000057b: R_386_PC32	EGAVGA::readRegister(ExtReg)
1000057f:	89 1c 24             	mov    DWORD PTR [esp],ebx
10000582:	e8 fc ff ff ff       	call   10000583 <EGAVGA::getUndocumentedCRTC24Bit()+0x47>	10000583: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
10000587:	83 c4 10             	add    esp,0x10
1000058a:	84 c0                	test   al,al
1000058c:	74 13                	je     100005a1 <EGAVGA::getUndocumentedCRTC24Bit()+0x65>
1000058e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000058f: R_386_32	irqDisableCounter
10000593:	48                   	dec    eax
10000594:	a3 00 00 00 00       	mov    ds:0x0,eax	10000595: R_386_32	irqDisableCounter
10000599:	75 01                	jne    1000059c <EGAVGA::getUndocumentedCRTC24Bit()+0x60>
1000059b:	fb                   	sti    
1000059c:	83 c4 08             	add    esp,0x8
1000059f:	5b                   	pop    ebx
100005a0:	c3                   	ret    
100005a1:	83 ec 04             	sub    esp,0x4
100005a4:	6a 55                	push   0x55
100005a6:	68 c0 03 00 00       	push   0x3c0
100005ab:	53                   	push   ebx
100005ac:	e8 fc ff ff ff       	call   100005ad <EGAVGA::getUndocumentedCRTC24Bit()+0x71>	100005ad: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
100005b1:	89 1c 24             	mov    DWORD PTR [esp],ebx
100005b4:	e8 fc ff ff ff       	call   100005b5 <EGAVGA::getUndocumentedCRTC24Bit()+0x79>	100005b5: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
100005b9:	83 c4 10             	add    esp,0x10
100005bc:	84 c0                	test   al,al
100005be:	74 ce                	je     1000058e <EGAVGA::getUndocumentedCRTC24Bit()+0x52>
100005c0:	83 ec 08             	sub    esp,0x8
100005c3:	6a 03                	push   0x3
100005c5:	53                   	push   ebx
100005c6:	e8 fc ff ff ff       	call   100005c7 <EGAVGA::getUndocumentedCRTC24Bit()+0x8b>	100005c7: R_386_PC32	EGAVGA::readRegister(ExtReg)
100005cb:	89 1c 24             	mov    DWORD PTR [esp],ebx
100005ce:	e8 fc ff ff ff       	call   100005cf <EGAVGA::getUndocumentedCRTC24Bit()+0x93>	100005cf: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
100005d3:	83 c4 10             	add    esp,0x10
100005d6:	84 c0                	test   al,al
100005d8:	75 b4                	jne    1000058e <EGAVGA::getUndocumentedCRTC24Bit()+0x52>
100005da:	c6 83 63 01 00 00 01 	mov    BYTE PTR [ebx+0x163],0x1
100005e1:	83 ec 0c             	sub    esp,0xc
100005e4:	68 c8 06 00 10       	push   0x100006c8	100005e5: R_386_32	.text
100005e9:	e8 fc ff ff ff       	call   100005ea <EGAVGA::getUndocumentedCRTC24Bit()+0xae>	100005ea: R_386_PC32	Dbg::kprintf(char const*, ...)
100005ee:	83 c4 10             	add    esp,0x10
100005f1:	eb 9b                	jmp    1000058e <EGAVGA::getUndocumentedCRTC24Bit()+0x52>
100005f3:	90                   	nop

100005f4 <EGAVGA::isVBLANK()>:
100005f4:	83 ec 14             	sub    esp,0x14
100005f7:	6a 03                	push   0x3
100005f9:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100005fd:	e8 fc ff ff ff       	call   100005fe <EGAVGA::isVBLANK()+0xa>	100005fe: R_386_PC32	EGAVGA::readRegister(ExtReg)
10000602:	c0 e8 03             	shr    al,0x3
10000605:	83 e0 01             	and    eax,0x1
10000608:	83 c4 1c             	add    esp,0x1c
1000060b:	c3                   	ret    

1000060c <EGAVGA::waitVBLANK()>:
1000060c:	53                   	push   ebx
1000060d:	83 ec 08             	sub    esp,0x8
10000610:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10000614:	83 ec 0c             	sub    esp,0xc
10000617:	53                   	push   ebx
10000618:	e8 fc ff ff ff       	call   10000619 <EGAVGA::waitVBLANK()+0xd>	10000619: R_386_PC32	EGAVGA::isVBLANK()
1000061d:	83 c4 10             	add    esp,0x10
10000620:	84 c0                	test   al,al
10000622:	74 f0                	je     10000614 <EGAVGA::waitVBLANK()+0x8>
10000624:	83 c4 08             	add    esp,0x8
10000627:	5b                   	pop    ebx
10000628:	c3                   	ret    
10000629:	90                   	nop
1000062a:	c3                   	ret    
1000062b:	90                   	nop
1000062c:	96                   	xchg   esi,eax
1000062d:	00 00                	add    BYTE PTR [eax],al
1000062f:	00 2c 01             	add    BYTE PTR [ecx+eax*1],ch
10000632:	00 00                	add    BYTE PTR [eax],al
10000634:	45                   	inc    ebp
10000635:	47                   	inc    edi
10000636:	41                   	inc    ecx
10000637:	20 2f                	and    BYTE PTR [edi],ch
10000639:	20 56 47             	and    BYTE PTR [esi+0x47],dl
1000063c:	41                   	inc    ecx
1000063d:	20 43 6f             	and    BYTE PTR [ebx+0x6f],al
10000640:	6d                   	ins    DWORD PTR es:[edi],dx
10000641:	70 61                	jo     100006a4 <EGAVGA::waitVBLANK()+0x98>
10000643:	74 69                	je     100006ae <EGAVGA::waitVBLANK()+0xa2>
10000645:	62 6c 65 20          	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
10000649:	56                   	push   esi
1000064a:	69 64 65 6f 20 43 61 72 	imul   esp,DWORD PTR [ebp+eiz*2+0x6f],0x72614320
10000652:	64 00 45 47          	add    BYTE PTR fs:[ebp+0x47],al
10000656:	41                   	inc    ecx
10000657:	56                   	push   esi
10000658:	47                   	inc    edi
10000659:	41                   	inc    ecx
1000065a:	3a 3a                	cmp    bh,BYTE PTR [edx]
1000065c:	61                   	popa   
1000065d:	63 63 65             	arpl   WORD PTR [ebx+0x65],sp
10000660:	73 73                	jae    100006d5 <EGAVGA::waitVBLANK()+0xc9>
10000662:	53                   	push   ebx
10000663:	65 71 47             	gs jno 100006ad <EGAVGA::waitVBLANK()+0xa1>
10000666:	66 78 43             	data16 js 100006ac <EGAVGA::waitVBLANK()+0xa0>
10000669:	52                   	push   edx
1000066a:	54                   	push   esp
1000066b:	43                   	inc    ebx
1000066c:	20 35 20 72 65 74    	and    BYTE PTR ds:0x74657220,dh
10000672:	72 69                	jb     100006dd <EGAVGA::waitVBLANK()+0xd1>
10000674:	65 73 00             	gs jae 10000677 <EGAVGA::waitVBLANK()+0x6b>
10000677:	00 45 47             	add    BYTE PTR [ebp+0x47],al
1000067a:	41                   	inc    ecx
1000067b:	56                   	push   esi
1000067c:	47                   	inc    edi
1000067d:	41                   	inc    ecx
1000067e:	3a 3a                	cmp    bh,BYTE PTR [edx]
10000680:	72 65                	jb     100006e7 <EGAVGA::waitVBLANK()+0xdb>
10000682:	61                   	popa   
10000683:	64 52                	fs push edx
10000685:	65 67 69 73 74 65 72 20 4e 	imul   esi,DWORD PTR gs:[bp+di+0x74],0x4e207265
1000068e:	4f                   	dec    edi
1000068f:	54                   	push   esp
10000690:	20 49 4d             	and    BYTE PTR [ecx+0x4d],cl
10000693:	50                   	push   eax
10000694:	4c                   	dec    esp
10000695:	45                   	inc    ebp
10000696:	4d                   	dec    ebp
10000697:	45                   	inc    ebp
10000698:	4e                   	dec    esi
10000699:	54                   	push   esp
1000069a:	45                   	inc    ebp
1000069b:	44                   	inc    esp
1000069c:	00 00                	add    BYTE PTR [eax],al
1000069e:	00 00                	add    BYTE PTR [eax],al
100006a0:	43                   	inc    ebx
100006a1:	61                   	popa   
100006a2:	6e                   	outs   dx,BYTE PTR ds:[esi]
100006a3:	6e                   	outs   dx,BYTE PTR ds:[esi]
100006a4:	6f                   	outs   dx,DWORD PTR ds:[esi]
100006a5:	74 20                	je     100006c7 <EGAVGA::waitVBLANK()+0xbb>
100006a7:	77 72                	ja     1000071b <EGAVGA::waitVBLANK()+0x10f>
100006a9:	69 74 65 20 74 6f 20 45 	imul   esi,DWORD PTR [ebp+eiz*2+0x20],0x45206f74
100006b1:	78 74                	js     10000727 <EGAVGA::waitVBLANK()+0x11b>
100006b3:	52                   	push   edx
100006b4:	65 67 3a 3a          	cmp    bh,BYTE PTR gs:[bp+si]
100006b8:	49                   	dec    ecx
100006b9:	6e                   	outs   dx,BYTE PTR ds:[esi]
100006ba:	70 75                	jo     10000731 <EGAVGA::waitVBLANK()+0x125>
100006bc:	74 53                	je     10000711 <EGAVGA::waitVBLANK()+0x105>
100006be:	74 61                	je     10000721 <EGAVGA::waitVBLANK()+0x115>
100006c0:	74 75                	je     10000737 <EGAVGA::waitVBLANK()+0x12b>
100006c2:	73 31                	jae    100006f5 <EGAVGA::waitVBLANK()+0xe9>
100006c4:	00 00                	add    BYTE PTR [eax],al
100006c6:	00 00                	add    BYTE PTR [eax],al
100006c8:	48                   	dec    eax
100006c9:	61                   	popa   
100006ca:	73 20                	jae    100006ec <EGAVGA::waitVBLANK()+0xe0>
100006cc:	75 6e                	jne    1000073c <EGAVGA::waitVBLANK()+0x130>
100006ce:	64 6f                	outs   dx,DWORD PTR fs:[esi]
100006d0:	63 75 6d             	arpl   WORD PTR [ebp+0x6d],si
100006d3:	65 6e                	outs   dx,BYTE PTR gs:[esi]
100006d5:	74 65                	je     1000073c <EGAVGA::waitVBLANK()+0x130>
100006d7:	64 20 62 69          	and    BYTE PTR fs:[edx+0x69],ah
100006db:	74 20                	je     100006fd <EGAVGA::waitVBLANK()+0xf1>
100006dd:	6f                   	outs   dx,DWORD PTR ds:[esi]
100006de:	6e                   	outs   dx,BYTE PTR ds:[esi]
100006df:	20 43 52             	and    BYTE PTR [ebx+0x52],al
100006e2:	54                   	push   esp
100006e3:	43                   	inc    ebx
100006e4:	20 69 6e             	and    BYTE PTR [ecx+0x6e],ch
100006e7:	64 65 78 20          	fs gs js 1000070b <EGAVGA::waitVBLANK()+0xff>
100006eb:	30 78 32             	xor    BYTE PTR [eax+0x32],bh
100006ee:	34 2e                	xor    al,0x2e
100006f0:	0a 00                	or     al,BYTE PTR [eax]
100006f2:	00 00                	add    BYTE PTR [eax],al
100006f4:	43                   	inc    ebx
100006f5:	6c                   	ins    BYTE PTR es:[edi],dx
100006f6:	65 61                	gs popa 
100006f8:	72 69                	jb     10000763 <EGAVGA::waitVBLANK()+0x157>
100006fa:	6e                   	outs   dx,BYTE PTR ds:[esi]
100006fb:	67 20 66 6c          	and    BYTE PTR [bp+0x6c],ah
100006ff:	69 70 2d 66 6c 6f 70 	imul   esi,DWORD PTR [eax+0x2d],0x706f6c66
10000706:	2e 0a 00             	or     al,BYTE PTR cs:[eax]
10000709:	4f                   	dec    edi
1000070a:	6c                   	ins    BYTE PTR es:[edi],dx
1000070b:	64 20 61 64          	and    BYTE PTR fs:[ecx+0x64],ah
1000070f:	64 72 20             	fs jb  10000732 <EGAVGA::waitVBLANK()+0x126>
10000712:	3d 20 30 78 25       	cmp    eax,0x25783020
10000717:	58                   	pop    eax
10000718:	0a 00                	or     al,BYTE PTR [eax]
1000071a:	57                   	push   edi
1000071b:	72 69                	jb     10000786 <vtable for EGAVGA+0x1e>
1000071d:	74 69                	je     10000788 <vtable for EGAVGA+0x20>
1000071f:	6e                   	outs   dx,BYTE PTR ds:[esi]
10000720:	67 20 6f 66          	and    BYTE PTR [bx+0x66],ch
10000724:	66 73 65             	data16 jae 1000078c <vtable for EGAVGA+0x24>
10000727:	74 20                	je     10000749 <EGAVGA::waitVBLANK()+0x13d>
10000729:	30 78 25             	xor    BYTE PTR [eax+0x25],bh
1000072c:	58                   	pop    eax
1000072d:	0a 00                	or     al,BYTE PTR [eax]
1000072f:	4f                   	dec    edi
10000730:	6c                   	ins    BYTE PTR es:[edi],dx
10000731:	64 20 64 61 74       	and    BYTE PTR fs:[ecx+eiz*2+0x74],ah
10000736:	61                   	popa   
10000737:	20 3d 20 30 78 25    	and    BYTE PTR ds:0x25783020,bh
1000073d:	58                   	pop    eax
1000073e:	0a 00                	or     al,BYTE PTR [eax]
10000740:	61                   	popa   
10000741:	74 74                	je     100007b7 <vtable for EGAVGA+0x4f>
10000743:	72 69                	jb     100007ae <vtable for EGAVGA+0x46>
10000745:	62 20                	bound  esp,QWORD PTR [eax]
10000747:	77 72                	ja     100007bb <EGAVGA::~EGAVGA()+0xb>
10000749:	69 74 65 2e 0a 00 49 4e 	imul   esi,DWORD PTR [ebp+eiz*2+0x2e],0x4e49000a
10000751:	42                   	inc    edx
10000752:	20 66 72             	and    BYTE PTR [esi+0x72],ah
10000755:	6f                   	outs   dx,DWORD PTR ds:[esi]
10000756:	6d                   	ins    DWORD PTR es:[edi],dx
10000757:	20 30                	and    BYTE PTR [eax],dh
10000759:	78 25                	js     10000780 <vtable for EGAVGA+0x18>
1000075b:	58                   	pop    eax
1000075c:	0a 00                	or     al,BYTE PTR [eax]
1000075e:	27                   	daa    
1000075f:	65 6c                	gs ins BYTE PTR es:[edi],dx
10000761:	6c                   	ins    BYTE PTR es:[edi],dx
10000762:	6f                   	outs   dx,DWORD PTR ds:[esi]
10000763:	21 0a                	and    DWORD PTR [edx],ecx
10000765:	00 66 90             	add    BYTE PTR [esi-0x70],ah

10000768 <vtable for EGAVGA>:
	...
	10000770: R_386_32	EGAVGA::~EGAVGA()
	10000774: R_386_32	EGAVGA::~EGAVGA()
	10000778: R_386_32	EGAVGA::open(int, int, void*)
	1000077c: R_386_32	EGAVGA::close(int, int, void*)
	10000780: R_386_32	Device::hibernate()
	10000784: R_386_32	Device::wake()
	10000788: R_386_32	Device::detect()
	1000078c: R_386_32	Device::disableLegacy()
	10000790: R_386_32	Device::powerSaving(PowerSavingLevel)
	10000794: R_386_32	Video::putpixel(int, int, unsigned int)
	10000798: R_386_32	Video::putrect(int, int, int, int, unsigned int)
	1000079c: R_386_32	Video::putTGA(int, int, unsigned char*, int)
	100007a0: R_386_32	Video::drawCursor(int, int, unsigned char*, int)
	100007a4: R_386_32	Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
	100007a8: R_386_32	Video::blit(unsigned int*, int, int, int, int)
	100007ac: R_386_32	Video::clearScreen(unsigned int)

Disassembly of section .text._ZN6EGAVGAD2Ev:

100007b0 <EGAVGA::~EGAVGA()>:
100007b0:	55                   	push   ebp
100007b1:	89 e5                	mov    ebp,esp
100007b3:	83 ec 08             	sub    esp,0x8
100007b6:	ba 08 00 00 00       	mov    edx,0x8	100007b7: R_386_32	vtable for EGAVGA
100007bb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007be:	89 10                	mov    DWORD PTR [eax],edx
100007c0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007c3:	83 ec 0c             	sub    esp,0xc
100007c6:	50                   	push   eax
100007c7:	e8 fc ff ff ff       	call   100007c8 <EGAVGA::~EGAVGA()+0x18>	100007c8: R_386_PC32	Video::~Video()
100007cc:	83 c4 10             	add    esp,0x10
100007cf:	90                   	nop
100007d0:	c9                   	leave  
100007d1:	c3                   	ret    

Disassembly of section .text._ZN6EGAVGAD0Ev:

100007d2 <EGAVGA::~EGAVGA()>:
100007d2:	55                   	push   ebp
100007d3:	89 e5                	mov    ebp,esp
100007d5:	83 ec 08             	sub    esp,0x8
100007d8:	83 ec 0c             	sub    esp,0xc
100007db:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007de:	e8 fc ff ff ff       	call   100007df <EGAVGA::~EGAVGA()+0xd>	100007df: R_386_PC32	EGAVGA::~EGAVGA()
100007e3:	83 c4 10             	add    esp,0x10
100007e6:	83 ec 08             	sub    esp,0x8
100007e9:	68 64 01 00 00       	push   0x164
100007ee:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007f1:	e8 fc ff ff ff       	call   100007f2 <EGAVGA::~EGAVGA()+0x20>	100007f2: R_386_PC32	operator delete(void*, unsigned long)
100007f6:	83 c4 10             	add    esp,0x10
100007f9:	c9                   	leave  
100007fa:	c3                   	ret    
