
packages/banana/32/0002/egavga.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start(Device*)-0x11>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	83 ec 0c             	sub    esp,0xc
10000009:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000000c:	e8 fc ff ff ff       	call   1000000d <start(Device*)-0x4>	1000000d: R_386_PC32	start(Device*)

10000011 <start(Device*)>:
10000011:	53                   	push   ebx
10000012:	83 ec 14             	sub    esp,0x14
10000015:	68 64 01 00 00       	push   0x164
1000001a:	e8 fc ff ff ff       	call   1000001b <start(Device*)+0xa>	1000001b: R_386_PC32	operator new(unsigned long)
1000001f:	89 c3                	mov    ebx,eax
10000021:	89 04 24             	mov    DWORD PTR [esp],eax
10000024:	e8 fc ff ff ff       	call   10000025 <start(Device*)+0x14>	10000025: R_386_PC32	EGAVGA::EGAVGA()
10000029:	83 c4 08             	add    esp,0x8
1000002c:	53                   	push   ebx
1000002d:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000031:	e8 fc ff ff ff       	call   10000032 <start(Device*)+0x21>	10000032: R_386_PC32	Device::addChild(Device*)
10000036:	89 1c 24             	mov    DWORD PTR [esp],ebx
10000039:	e8 fc ff ff ff       	call   1000003a <start(Device*)+0x29>	1000003a: R_386_PC32	EGAVGA::init()

1000003e <EGAVGA::EGAVGA()>:
1000003e:	55                   	push   ebp
1000003f:	89 e5                	mov    ebp,esp
10000041:	83 ec 08             	sub    esp,0x8
10000044:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000047:	83 ec 08             	sub    esp,0x8
1000004a:	68 5c 06 00 10       	push   0x1000065c	1000004b: R_386_32	.text
1000004f:	50                   	push   eax
10000050:	e8 fc ff ff ff       	call   10000051 <EGAVGA::EGAVGA()+0x13>	10000051: R_386_PC32	Video::Video(char const*)
10000055:	83 c4 10             	add    esp,0x10
10000058:	ba 08 00 00 00       	mov    edx,0x8	10000059: R_386_32	vtable for EGAVGA
1000005d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000060:	89 10                	mov    DWORD PTR [eax],edx
10000062:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000065:	c6 80 61 01 00 00 00 	mov    BYTE PTR [eax+0x161],0x0
1000006c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000006f:	c6 80 62 01 00 00 01 	mov    BYTE PTR [eax+0x162],0x1
10000076:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000079:	c6 80 63 01 00 00 00 	mov    BYTE PTR [eax+0x163],0x0
10000080:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000083:	8a 80 c4 00 00 00    	mov    al,BYTE PTR [eax+0xc4]
10000089:	0f b6 d0             	movzx  edx,al
1000008c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008f:	66 c7 44 90 04 b0 03 	mov    WORD PTR [eax+edx*4+0x4],0x3b0
10000096:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000099:	8a 80 c4 00 00 00    	mov    al,BYTE PTR [eax+0xc4]
1000009f:	0f b6 d0             	movzx  edx,al
100000a2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000a5:	c6 44 90 06 30       	mov    BYTE PTR [eax+edx*4+0x6],0x30
100000aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000ad:	8a 80 c4 00 00 00    	mov    al,BYTE PTR [eax+0xc4]
100000b3:	8d 50 01             	lea    edx,[eax+0x1]
100000b6:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100000b9:	88 91 c4 00 00 00    	mov    BYTE PTR [ecx+0xc4],dl
100000bf:	0f b6 d0             	movzx  edx,al
100000c2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c5:	8a 4c 90 07          	mov    cl,BYTE PTR [eax+edx*4+0x7]
100000c9:	83 e1 3f             	and    ecx,0x3f
100000cc:	88 4c 90 07          	mov    BYTE PTR [eax+edx*4+0x7],cl
100000d0:	90                   	nop
100000d1:	c9                   	leave  
100000d2:	c3                   	ret    
100000d3:	90                   	nop

100000d4 <EGAVGA::open(int, int, void*)>:
100000d4:	b8 00 00 00 00       	mov    eax,0x0
100000d9:	c3                   	ret    

100000da <EGAVGA::close(int, int, void*)>:
100000da:	b8 00 00 00 00       	mov    eax,0x0
100000df:	c3                   	ret    

100000e0 <EGAVGA::vinb(unsigned short)>:
100000e0:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100000e4:	ec                   	in     al,dx
100000e5:	88 c2                	mov    dl,al
100000e7:	b8 00 00 00 00       	mov    eax,0x0
100000ec:	e6 80                	out    0x80,al
100000ee:	e6 80                	out    0x80,al
100000f0:	88 d0                	mov    al,dl
100000f2:	c3                   	ret    
100000f3:	90                   	nop

100000f4 <EGAVGA::voutb(unsigned short, unsigned char)>:
100000f4:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100000f8:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
100000fc:	ee                   	out    dx,al
100000fd:	b8 00 00 00 00       	mov    eax,0x0
10000102:	e6 80                	out    0x80,al
10000104:	e6 80                	out    0x80,al
10000106:	c3                   	ret    
10000107:	90                   	nop

10000108 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)>:
10000108:	57                   	push   edi
10000109:	56                   	push   esi
1000010a:	53                   	push   ebx
1000010b:	83 ec 10             	sub    esp,0x10
1000010e:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10000112:	8a 44 24 30          	mov    al,BYTE PTR [esp+0x30]
10000116:	88 44 24 0e          	mov    BYTE PTR [esp+0xe],al
1000011a:	8a 44 24 34          	mov    al,BYTE PTR [esp+0x34]
1000011e:	88 44 24 0c          	mov    BYTE PTR [esp+0xc],al
10000122:	c7 44 24 08 00 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
1000012a:	eb 44                	jmp    10000170 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x68>
1000012c:	0f b6 44 24 0e       	movzx  eax,BYTE PTR [esp+0xe]
10000131:	50                   	push   eax
10000132:	57                   	push   edi
10000133:	53                   	push   ebx
10000134:	e8 fc ff ff ff       	call   10000135 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x2d>	10000135: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
10000139:	83 c4 0c             	add    esp,0xc
1000013c:	0f b6 44 24 0d       	movzx  eax,BYTE PTR [esp+0xd]
10000141:	50                   	push   eax
10000142:	56                   	push   esi
10000143:	53                   	push   ebx
10000144:	e8 fc ff ff ff       	call   10000145 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x3d>	10000145: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
10000149:	83 c4 0c             	add    esp,0xc
1000014c:	80 7c 24 0c 00       	cmp    BYTE PTR [esp+0xc],0x0
10000151:	74 68                	je     100001bb <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xb3>
10000153:	57                   	push   edi
10000154:	53                   	push   ebx
10000155:	e8 fc ff ff ff       	call   10000156 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x4e>	10000156: R_386_PC32	EGAVGA::vinb(unsigned short)
1000015a:	83 c4 08             	add    esp,0x8
1000015d:	38 44 24 0e          	cmp    BYTE PTR [esp+0xe],al
10000161:	74 58                	je     100001bb <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xb3>
10000163:	ff 44 24 08          	inc    DWORD PTR [esp+0x8]
10000167:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000016b:	83 f8 05             	cmp    eax,0x5
1000016e:	74 39                	je     100001a9 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xa1>
10000170:	0f b7 74 24 28       	movzx  esi,WORD PTR [esp+0x28]
10000175:	56                   	push   esi
10000176:	53                   	push   ebx
10000177:	e8 fc ff ff ff       	call   10000178 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x70>	10000178: R_386_PC32	EGAVGA::vinb(unsigned short)
1000017c:	88 44 24 15          	mov    BYTE PTR [esp+0x15],al
10000180:	0f b6 44 24 2c       	movzx  eax,BYTE PTR [esp+0x2c]
10000185:	50                   	push   eax
10000186:	56                   	push   esi
10000187:	53                   	push   ebx
10000188:	e8 fc ff ff ff       	call   10000189 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x81>	10000189: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
1000018d:	0f b7 7c 24 40       	movzx  edi,WORD PTR [esp+0x40]
10000192:	57                   	push   edi
10000193:	53                   	push   ebx
10000194:	e8 fc ff ff ff       	call   10000195 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x8d>	10000195: R_386_PC32	EGAVGA::vinb(unsigned short)
10000199:	88 44 24 2b          	mov    BYTE PTR [esp+0x2b],al
1000019d:	83 c4 1c             	add    esp,0x1c
100001a0:	80 7c 24 0c 00       	cmp    BYTE PTR [esp+0xc],0x0
100001a5:	74 95                	je     1000013c <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x34>
100001a7:	eb 83                	jmp    1000012c <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x24>
100001a9:	83 ec 0c             	sub    esp,0xc
100001ac:	68 7c 06 00 10       	push   0x1000067c	100001ad: R_386_32	.text
100001b1:	e8 fc ff ff ff       	call   100001b2 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xaa>	100001b2: R_386_PC32	Krnl::panic(char const*)
100001b6:	83 c4 10             	add    esp,0x10
100001b9:	eb b5                	jmp    10000170 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x68>
100001bb:	8a 44 24 0f          	mov    al,BYTE PTR [esp+0xf]
100001bf:	83 c4 10             	add    esp,0x10
100001c2:	5b                   	pop    ebx
100001c3:	5e                   	pop    esi
100001c4:	5f                   	pop    edi
100001c5:	c3                   	ret    
100001c6:	83 ec 14             	sub    esp,0x14
100001c9:	6a 00                	push   0x0
100001cb:	6a 00                	push   0x0
100001cd:	68 cf 03 00 00       	push   0x3cf
100001d2:	68 ce 03 00 00       	push   0x3ce
100001d7:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100001db:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100001df:	e8 fc ff ff ff       	call   100001e0 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xd8>	100001e0: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
100001e4:	83 c4 2c             	add    esp,0x2c
100001e7:	c3                   	ret    
100001e8:	83 ec 14             	sub    esp,0x14
100001eb:	6a 00                	push   0x0
100001ed:	6a 00                	push   0x0
100001ef:	68 c5 03 00 00       	push   0x3c5
100001f4:	68 c4 03 00 00       	push   0x3c4
100001f9:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100001fd:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000201:	e8 fc ff ff ff       	call   10000202 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xfa>	10000202: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
10000206:	83 c4 2c             	add    esp,0x2c
10000209:	c3                   	ret    

1000020a <EGAVGA::accessAttrib(int, unsigned char, bool)>:
1000020a:	57                   	push   edi
1000020b:	56                   	push   esi
1000020c:	53                   	push   ebx
1000020d:	83 ec 10             	sub    esp,0x10
10000210:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10000214:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10000218:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
1000021c:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000220:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000224:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000228:	fa                   	cli    
10000229:	ff 05 00 00 00 00    	inc    DWORD PTR ds:0x0	1000022b: R_386_32	irqDisableCounter
1000022f:	83 ec 0c             	sub    esp,0xc
10000232:	56                   	push   esi
10000233:	e8 fc ff ff ff       	call   10000234 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x2a>	10000234: R_386_PC32	EGAVGA::isVBLANK()
10000238:	83 c4 10             	add    esp,0x10
1000023b:	84 c0                	test   al,al
1000023d:	75 f0                	jne    1000022f <EGAVGA::accessAttrib(int, unsigned char, bool)+0x25>
1000023f:	83 ec 0c             	sub    esp,0xc
10000242:	56                   	push   esi
10000243:	e8 fc ff ff ff       	call   10000244 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x3a>	10000244: R_386_PC32	EGAVGA::waitVBLANK()
10000248:	83 c4 10             	add    esp,0x10
1000024b:	80 be 63 01 00 00 00 	cmp    BYTE PTR [esi+0x163],0x0
10000252:	74 10                	je     10000264 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x5a>
10000254:	83 ec 0c             	sub    esp,0xc
10000257:	56                   	push   esi
10000258:	e8 fc ff ff ff       	call   10000259 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x4f>	10000259: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
1000025d:	83 c4 10             	add    esp,0x10
10000260:	84 c0                	test   al,al
10000262:	74 1b                	je     1000027f <EGAVGA::accessAttrib(int, unsigned char, bool)+0x75>
10000264:	83 ec 0c             	sub    esp,0xc
10000267:	68 1c 07 00 10       	push   0x1000071c	10000268: R_386_32	.text
1000026c:	e8 fc ff ff ff       	call   1000026d <EGAVGA::accessAttrib(int, unsigned char, bool)+0x63>	1000026d: R_386_PC32	Dbg::kprintf(char const*, ...)
10000271:	83 c4 08             	add    esp,0x8
10000274:	6a 03                	push   0x3
10000276:	56                   	push   esi
10000277:	e8 fc ff ff ff       	call   10000278 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x6e>	10000278: R_386_PC32	EGAVGA::readRegister(ExtReg)
1000027c:	83 c4 10             	add    esp,0x10
1000027f:	83 ec 08             	sub    esp,0x8
10000282:	68 c0 03 00 00       	push   0x3c0
10000287:	56                   	push   esi
10000288:	e8 fc ff ff ff       	call   10000289 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x7f>	10000289: R_386_PC32	EGAVGA::vinb(unsigned short)
1000028d:	0f b6 f8             	movzx  edi,al
10000290:	83 c4 08             	add    esp,0x8
10000293:	57                   	push   edi
10000294:	68 31 07 00 10       	push   0x10000731	10000295: R_386_32	.text
10000299:	e8 fc ff ff ff       	call   1000029a <EGAVGA::accessAttrib(int, unsigned char, bool)+0x90>	1000029a: R_386_PC32	Dbg::kprintf(char const*, ...)
1000029e:	83 c4 08             	add    esp,0x8
100002a1:	53                   	push   ebx
100002a2:	68 42 07 00 10       	push   0x10000742	100002a3: R_386_32	.text
100002a7:	e8 fc ff ff ff       	call   100002a8 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x9e>	100002a8: R_386_PC32	Dbg::kprintf(char const*, ...)
100002ac:	83 c4 0c             	add    esp,0xc
100002af:	0f b6 db             	movzx  ebx,bl
100002b2:	53                   	push   ebx
100002b3:	68 c0 03 00 00       	push   0x3c0
100002b8:	56                   	push   esi
100002b9:	e8 fc ff ff ff       	call   100002ba <EGAVGA::accessAttrib(int, unsigned char, bool)+0xb0>	100002ba: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
100002be:	83 c4 08             	add    esp,0x8
100002c1:	68 c1 03 00 00       	push   0x3c1
100002c6:	56                   	push   esi
100002c7:	e8 fc ff ff ff       	call   100002c8 <EGAVGA::accessAttrib(int, unsigned char, bool)+0xbe>	100002c8: R_386_PC32	EGAVGA::vinb(unsigned short)
100002cc:	88 c3                	mov    bl,al
100002ce:	83 c4 08             	add    esp,0x8
100002d1:	0f b6 c0             	movzx  eax,al
100002d4:	50                   	push   eax
100002d5:	68 57 07 00 10       	push   0x10000757	100002d6: R_386_32	.text
100002da:	e8 fc ff ff ff       	call   100002db <EGAVGA::accessAttrib(int, unsigned char, bool)+0xd1>	100002db: R_386_PC32	Dbg::kprintf(char const*, ...)
100002df:	83 c4 10             	add    esp,0x10
100002e2:	80 7c 24 08 00       	cmp    BYTE PTR [esp+0x8],0x0
100002e7:	75 36                	jne    1000031f <EGAVGA::accessAttrib(int, unsigned char, bool)+0x115>
100002e9:	83 ec 04             	sub    esp,0x4
100002ec:	57                   	push   edi
100002ed:	68 c0 03 00 00       	push   0x3c0
100002f2:	56                   	push   esi
100002f3:	e8 fc ff ff ff       	call   100002f4 <EGAVGA::accessAttrib(int, unsigned char, bool)+0xea>	100002f4: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
100002f8:	83 c4 08             	add    esp,0x8
100002fb:	6a 03                	push   0x3
100002fd:	56                   	push   esi
100002fe:	e8 fc ff ff ff       	call   100002ff <EGAVGA::accessAttrib(int, unsigned char, bool)+0xf5>	100002ff: R_386_PC32	EGAVGA::readRegister(ExtReg)
10000303:	a1 00 00 00 00       	mov    eax,ds:0x0	10000304: R_386_32	irqDisableCounter
10000308:	48                   	dec    eax
10000309:	a3 00 00 00 00       	mov    ds:0x0,eax	1000030a: R_386_32	irqDisableCounter
1000030e:	83 c4 10             	add    esp,0x10
10000311:	85 c0                	test   eax,eax
10000313:	75 01                	jne    10000316 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x10c>
10000315:	fb                   	sti    
10000316:	88 d8                	mov    al,bl
10000318:	83 c4 10             	add    esp,0x10
1000031b:	5b                   	pop    ebx
1000031c:	5e                   	pop    esi
1000031d:	5f                   	pop    edi
1000031e:	c3                   	ret    
1000031f:	83 ec 0c             	sub    esp,0xc
10000322:	68 68 07 00 10       	push   0x10000768	10000323: R_386_32	.text
10000327:	e8 fc ff ff ff       	call   10000328 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x11e>	10000328: R_386_PC32	Dbg::kprintf(char const*, ...)
1000032c:	83 c4 0c             	add    esp,0xc
1000032f:	0f b6 44 24 10       	movzx  eax,BYTE PTR [esp+0x10]
10000334:	50                   	push   eax
10000335:	68 c0 03 00 00       	push   0x3c0
1000033a:	56                   	push   esi
1000033b:	e8 fc ff ff ff       	call   1000033c <EGAVGA::accessAttrib(int, unsigned char, bool)+0x132>	1000033c: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
10000340:	83 c4 10             	add    esp,0x10
10000343:	eb a4                	jmp    100002e9 <EGAVGA::accessAttrib(int, unsigned char, bool)+0xdf>
10000345:	90                   	nop
10000346:	83 ec 0c             	sub    esp,0xc
10000349:	6a 00                	push   0x0
1000034b:	6a 00                	push   0x0
1000034d:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000351:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000355:	e8 fc ff ff ff       	call   10000356 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x14c>	10000356: R_386_PC32	EGAVGA::accessAttrib(int, unsigned char, bool)
1000035a:	83 c4 1c             	add    esp,0x1c
1000035d:	c3                   	ret    

1000035e <EGAVGA::readRegister(CRTCReg)>:
1000035e:	83 ec 0c             	sub    esp,0xc
10000361:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000365:	8a 90 61 01 00 00    	mov    dl,BYTE PTR [eax+0x161]
1000036b:	84 d2                	test   dl,dl
1000036d:	74 25                	je     10000394 <EGAVGA::readRegister(CRTCReg)+0x36>
1000036f:	b9 d5 03 00 00       	mov    ecx,0x3d5
10000374:	84 d2                	test   dl,dl
10000376:	74 23                	je     1000039b <EGAVGA::readRegister(CRTCReg)+0x3d>
10000378:	ba d4 03 00 00       	mov    edx,0x3d4
1000037d:	83 ec 08             	sub    esp,0x8
10000380:	6a 00                	push   0x0
10000382:	6a 00                	push   0x0
10000384:	51                   	push   ecx
10000385:	52                   	push   edx
10000386:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
1000038a:	50                   	push   eax
1000038b:	e8 fc ff ff ff       	call   1000038c <EGAVGA::readRegister(CRTCReg)+0x2e>	1000038c: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
10000390:	83 c4 2c             	add    esp,0x2c
10000393:	c3                   	ret    
10000394:	b9 b5 03 00 00       	mov    ecx,0x3b5
10000399:	eb d9                	jmp    10000374 <EGAVGA::readRegister(CRTCReg)+0x16>
1000039b:	ba b4 03 00 00       	mov    edx,0x3b4
100003a0:	eb db                	jmp    1000037d <EGAVGA::readRegister(CRTCReg)+0x1f>
100003a2:	b0 fe                	mov    al,0xfe
100003a4:	c3                   	ret    
100003a5:	90                   	nop

100003a6 <EGAVGA::readRegister(ExtReg)>:
100003a6:	53                   	push   ebx
100003a7:	83 ec 08             	sub    esp,0x8
100003aa:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100003ae:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100003b2:	83 f8 03             	cmp    eax,0x3
100003b5:	74 1a                	je     100003d1 <EGAVGA::readRegister(ExtReg)+0x2b>
100003b7:	85 c0                	test   eax,eax
100003b9:	75 60                	jne    1000041b <EGAVGA::readRegister(ExtReg)+0x75>
100003bb:	83 ec 08             	sub    esp,0x8
100003be:	68 cc 03 00 00       	push   0x3cc
100003c3:	53                   	push   ebx
100003c4:	e8 fc ff ff ff       	call   100003c5 <EGAVGA::readRegister(ExtReg)+0x1f>	100003c5: R_386_PC32	EGAVGA::vinb(unsigned short)
100003c9:	83 c4 10             	add    esp,0x10
100003cc:	83 c4 08             	add    esp,0x8
100003cf:	5b                   	pop    ebx
100003d0:	c3                   	ret    
100003d1:	80 bb 62 01 00 00 00 	cmp    BYTE PTR [ebx+0x162],0x0
100003d8:	74 33                	je     1000040d <EGAVGA::readRegister(ExtReg)+0x67>
100003da:	b8 da 03 00 00       	mov    eax,0x3da
100003df:	83 ec 08             	sub    esp,0x8
100003e2:	50                   	push   eax
100003e3:	68 77 07 00 10       	push   0x10000777	100003e4: R_386_32	.text
100003e8:	e8 fc ff ff ff       	call   100003e9 <EGAVGA::readRegister(ExtReg)+0x43>	100003e9: R_386_PC32	Dbg::kprintf(char const*, ...)
100003ed:	83 c4 10             	add    esp,0x10
100003f0:	80 bb 62 01 00 00 00 	cmp    BYTE PTR [ebx+0x162],0x0
100003f7:	74 1b                	je     10000414 <EGAVGA::readRegister(ExtReg)+0x6e>
100003f9:	b8 da 03 00 00       	mov    eax,0x3da
100003fe:	83 ec 08             	sub    esp,0x8
10000401:	50                   	push   eax
10000402:	53                   	push   ebx
10000403:	e8 fc ff ff ff       	call   10000404 <EGAVGA::readRegister(ExtReg)+0x5e>	10000404: R_386_PC32	EGAVGA::vinb(unsigned short)
10000408:	83 c4 10             	add    esp,0x10
1000040b:	eb bf                	jmp    100003cc <EGAVGA::readRegister(ExtReg)+0x26>
1000040d:	b8 ba 03 00 00       	mov    eax,0x3ba
10000412:	eb cb                	jmp    100003df <EGAVGA::readRegister(ExtReg)+0x39>
10000414:	b8 ba 03 00 00       	mov    eax,0x3ba
10000419:	eb e3                	jmp    100003fe <EGAVGA::readRegister(ExtReg)+0x58>
1000041b:	83 ec 0c             	sub    esp,0xc
1000041e:	68 a0 06 00 10       	push   0x100006a0	1000041f: R_386_32	.text
10000423:	e8 fc ff ff ff       	call   10000424 <EGAVGA::readRegister(ExtReg)+0x7e>	10000424: R_386_PC32	Krnl::panic(char const*)
10000428:	83 c4 10             	add    esp,0x10
1000042b:	b0 fe                	mov    al,0xfe
1000042d:	eb 9d                	jmp    100003cc <EGAVGA::readRegister(ExtReg)+0x26>
1000042f:	90                   	nop
10000430:	83 ec 14             	sub    esp,0x14
10000433:	6a 01                	push   0x1
10000435:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
1000043a:	50                   	push   eax
1000043b:	68 cf 03 00 00       	push   0x3cf
10000440:	68 ce 03 00 00       	push   0x3ce
10000445:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000449:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
1000044d:	e8 fc ff ff ff       	call   1000044e <EGAVGA::readRegister(ExtReg)+0xa8>	1000044e: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
10000452:	83 c4 2c             	add    esp,0x2c
10000455:	c3                   	ret    
10000456:	83 ec 14             	sub    esp,0x14
10000459:	6a 01                	push   0x1
1000045b:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10000460:	50                   	push   eax
10000461:	68 c5 03 00 00       	push   0x3c5
10000466:	68 c4 03 00 00       	push   0x3c4
1000046b:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
1000046f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000473:	e8 fc ff ff ff       	call   10000474 <EGAVGA::readRegister(ExtReg)+0xce>	10000474: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
10000478:	83 c4 2c             	add    esp,0x2c
1000047b:	c3                   	ret    
1000047c:	83 ec 0c             	sub    esp,0xc
1000047f:	6a 01                	push   0x1
10000481:	0f b6 44 24 1c       	movzx  eax,BYTE PTR [esp+0x1c]
10000486:	50                   	push   eax
10000487:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
1000048b:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
1000048f:	e8 fc ff ff ff       	call   10000490 <EGAVGA::readRegister(ExtReg)+0xea>	10000490: R_386_PC32	EGAVGA::accessAttrib(int, unsigned char, bool)
10000494:	83 c4 1c             	add    esp,0x1c
10000497:	c3                   	ret    
10000498:	53                   	push   ebx
10000499:	83 ec 08             	sub    esp,0x8
1000049c:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
100004a0:	0f b6 5c 24 18       	movzx  ebx,BYTE PTR [esp+0x18]
100004a5:	8a 90 61 01 00 00    	mov    dl,BYTE PTR [eax+0x161]
100004ab:	84 d2                	test   dl,dl
100004ad:	74 25                	je     100004d4 <EGAVGA::readRegister(ExtReg)+0x12e>
100004af:	b9 d5 03 00 00       	mov    ecx,0x3d5
100004b4:	84 d2                	test   dl,dl
100004b6:	74 23                	je     100004db <EGAVGA::readRegister(ExtReg)+0x135>
100004b8:	ba d4 03 00 00       	mov    edx,0x3d4
100004bd:	83 ec 08             	sub    esp,0x8
100004c0:	6a 01                	push   0x1
100004c2:	53                   	push   ebx
100004c3:	51                   	push   ecx
100004c4:	52                   	push   edx
100004c5:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100004c9:	50                   	push   eax
100004ca:	e8 fc ff ff ff       	call   100004cb <EGAVGA::readRegister(ExtReg)+0x125>	100004cb: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
100004cf:	83 c4 28             	add    esp,0x28
100004d2:	5b                   	pop    ebx
100004d3:	c3                   	ret    
100004d4:	b9 b5 03 00 00       	mov    ecx,0x3b5
100004d9:	eb d9                	jmp    100004b4 <EGAVGA::readRegister(ExtReg)+0x10e>
100004db:	ba b4 03 00 00       	mov    edx,0x3b4
100004e0:	eb db                	jmp    100004bd <EGAVGA::readRegister(ExtReg)+0x117>
100004e2:	c3                   	ret    
100004e3:	90                   	nop

100004e4 <EGAVGA::writeRegister(ExtReg, unsigned char)>:
100004e4:	83 ec 0c             	sub    esp,0xc
100004e7:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100004eb:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
100004ef:	83 f8 03             	cmp    eax,0x3
100004f2:	74 20                	je     10000514 <EGAVGA::writeRegister(ExtReg, unsigned char)+0x30>
100004f4:	85 c0                	test   eax,eax
100004f6:	75 2e                	jne    10000526 <EGAVGA::writeRegister(ExtReg, unsigned char)+0x42>
100004f8:	83 ec 04             	sub    esp,0x4
100004fb:	0f b6 d2             	movzx  edx,dl
100004fe:	52                   	push   edx
100004ff:	68 c2 03 00 00       	push   0x3c2
10000504:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000508:	e8 fc ff ff ff       	call   10000509 <EGAVGA::writeRegister(ExtReg, unsigned char)+0x25>	10000509: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
1000050d:	83 c4 10             	add    esp,0x10
10000510:	83 c4 0c             	add    esp,0xc
10000513:	c3                   	ret    
10000514:	83 ec 0c             	sub    esp,0xc
10000517:	68 c8 06 00 10       	push   0x100006c8	10000518: R_386_32	.text
1000051c:	e8 fc ff ff ff       	call   1000051d <EGAVGA::writeRegister(ExtReg, unsigned char)+0x39>	1000051d: R_386_PC32	Krnl::panic(char const*)
10000521:	83 c4 10             	add    esp,0x10
10000524:	eb ea                	jmp    10000510 <EGAVGA::writeRegister(ExtReg, unsigned char)+0x2c>
10000526:	83 ec 0c             	sub    esp,0xc
10000529:	68 a0 06 00 10       	push   0x100006a0	1000052a: R_386_32	.text
1000052e:	e8 fc ff ff ff       	call   1000052f <EGAVGA::writeRegister(ExtReg, unsigned char)+0x4b>	1000052f: R_386_PC32	Krnl::panic(char const*)
10000533:	83 c4 10             	add    esp,0x10
10000536:	eb d8                	jmp    10000510 <EGAVGA::writeRegister(ExtReg, unsigned char)+0x2c>

10000538 <EGAVGA::getUndocumentedCRTC24Bit()>:
10000538:	83 ec 14             	sub    esp,0x14
1000053b:	6a 24                	push   0x24
1000053d:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000541:	e8 fc ff ff ff       	call   10000542 <EGAVGA::getUndocumentedCRTC24Bit()+0xa>	10000542: R_386_PC32	EGAVGA::readRegister(CRTCReg)
10000546:	a8 80                	test   al,0x80
10000548:	0f 95 c0             	setne  al
1000054b:	83 c4 1c             	add    esp,0x1c
1000054e:	c3                   	ret    
1000054f:	90                   	nop
10000550:	53                   	push   ebx
10000551:	83 ec 14             	sub    esp,0x14
10000554:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10000558:	68 86 07 00 10       	push   0x10000786	10000559: R_386_32	.text
1000055d:	e8 fc ff ff ff       	call   1000055e <EGAVGA::getUndocumentedCRTC24Bit()+0x26>	1000055e: R_386_PC32	Dbg::kprintf(char const*, ...)
10000562:	c6 83 63 01 00 00 00 	mov    BYTE PTR [ebx+0x163],0x0
10000569:	fa                   	cli    
1000056a:	ff 05 00 00 00 00    	inc    DWORD PTR ds:0x0	1000056c: R_386_32	irqDisableCounter
10000570:	83 c4 08             	add    esp,0x8
10000573:	6a 03                	push   0x3
10000575:	53                   	push   ebx
10000576:	e8 fc ff ff ff       	call   10000577 <EGAVGA::getUndocumentedCRTC24Bit()+0x3f>	10000577: R_386_PC32	EGAVGA::readRegister(ExtReg)
1000057b:	89 1c 24             	mov    DWORD PTR [esp],ebx
1000057e:	e8 fc ff ff ff       	call   1000057f <EGAVGA::getUndocumentedCRTC24Bit()+0x47>	1000057f: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
10000583:	83 c4 10             	add    esp,0x10
10000586:	84 c0                	test   al,al
10000588:	74 13                	je     1000059d <EGAVGA::getUndocumentedCRTC24Bit()+0x65>
1000058a:	a1 00 00 00 00       	mov    eax,ds:0x0	1000058b: R_386_32	irqDisableCounter
1000058f:	48                   	dec    eax
10000590:	a3 00 00 00 00       	mov    ds:0x0,eax	10000591: R_386_32	irqDisableCounter
10000595:	75 01                	jne    10000598 <EGAVGA::getUndocumentedCRTC24Bit()+0x60>
10000597:	fb                   	sti    
10000598:	83 c4 08             	add    esp,0x8
1000059b:	5b                   	pop    ebx
1000059c:	c3                   	ret    
1000059d:	83 ec 04             	sub    esp,0x4
100005a0:	6a 55                	push   0x55
100005a2:	68 c0 03 00 00       	push   0x3c0
100005a7:	53                   	push   ebx
100005a8:	e8 fc ff ff ff       	call   100005a9 <EGAVGA::getUndocumentedCRTC24Bit()+0x71>	100005a9: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
100005ad:	89 1c 24             	mov    DWORD PTR [esp],ebx
100005b0:	e8 fc ff ff ff       	call   100005b1 <EGAVGA::getUndocumentedCRTC24Bit()+0x79>	100005b1: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
100005b5:	83 c4 10             	add    esp,0x10
100005b8:	84 c0                	test   al,al
100005ba:	74 ce                	je     1000058a <EGAVGA::getUndocumentedCRTC24Bit()+0x52>
100005bc:	83 ec 08             	sub    esp,0x8
100005bf:	6a 03                	push   0x3
100005c1:	53                   	push   ebx
100005c2:	e8 fc ff ff ff       	call   100005c3 <EGAVGA::getUndocumentedCRTC24Bit()+0x8b>	100005c3: R_386_PC32	EGAVGA::readRegister(ExtReg)
100005c7:	89 1c 24             	mov    DWORD PTR [esp],ebx
100005ca:	e8 fc ff ff ff       	call   100005cb <EGAVGA::getUndocumentedCRTC24Bit()+0x93>	100005cb: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
100005cf:	83 c4 10             	add    esp,0x10
100005d2:	84 c0                	test   al,al
100005d4:	75 b4                	jne    1000058a <EGAVGA::getUndocumentedCRTC24Bit()+0x52>
100005d6:	c6 83 63 01 00 00 01 	mov    BYTE PTR [ebx+0x163],0x1
100005dd:	83 ec 0c             	sub    esp,0xc
100005e0:	68 f0 06 00 10       	push   0x100006f0	100005e1: R_386_32	.text
100005e5:	e8 fc ff ff ff       	call   100005e6 <EGAVGA::getUndocumentedCRTC24Bit()+0xae>	100005e6: R_386_PC32	Dbg::kprintf(char const*, ...)
100005ea:	83 c4 10             	add    esp,0x10
100005ed:	eb 9b                	jmp    1000058a <EGAVGA::getUndocumentedCRTC24Bit()+0x52>
100005ef:	90                   	nop

100005f0 <EGAVGA::isVBLANK()>:
100005f0:	83 ec 14             	sub    esp,0x14
100005f3:	6a 03                	push   0x3
100005f5:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100005f9:	e8 fc ff ff ff       	call   100005fa <EGAVGA::isVBLANK()+0xa>	100005fa: R_386_PC32	EGAVGA::readRegister(ExtReg)
100005fe:	c0 e8 03             	shr    al,0x3
10000601:	83 e0 01             	and    eax,0x1
10000604:	83 c4 1c             	add    esp,0x1c
10000607:	c3                   	ret    

10000608 <EGAVGA::waitVBLANK()>:
10000608:	53                   	push   ebx
10000609:	83 ec 08             	sub    esp,0x8
1000060c:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10000610:	83 ec 0c             	sub    esp,0xc
10000613:	53                   	push   ebx
10000614:	e8 fc ff ff ff       	call   10000615 <EGAVGA::waitVBLANK()+0xd>	10000615: R_386_PC32	EGAVGA::isVBLANK()
10000619:	83 c4 10             	add    esp,0x10
1000061c:	84 c0                	test   al,al
1000061e:	74 f0                	je     10000610 <EGAVGA::waitVBLANK()+0x8>
10000620:	83 c4 08             	add    esp,0x8
10000623:	5b                   	pop    ebx
10000624:	c3                   	ret    
10000625:	90                   	nop

10000626 <EGAVGA::init()>:
10000626:	53                   	push   ebx
10000627:	83 ec 10             	sub    esp,0x10
1000062a:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
1000062e:	6a 00                	push   0x0
10000630:	53                   	push   ebx
10000631:	e8 fc ff ff ff       	call   10000632 <EGAVGA::init()+0xc>	10000632: R_386_PC32	EGAVGA::readRegister(ExtReg)
10000636:	83 c8 01             	or     eax,0x1
10000639:	83 c4 0c             	add    esp,0xc
1000063c:	0f b6 c0             	movzx  eax,al
1000063f:	50                   	push   eax
10000640:	6a 00                	push   0x0
10000642:	53                   	push   ebx
10000643:	e8 fc ff ff ff       	call   10000644 <EGAVGA::init()+0x1e>	10000644: R_386_PC32	EGAVGA::writeRegister(ExtReg, unsigned char)
10000648:	c6 83 61 01 00 00 01 	mov    BYTE PTR [ebx+0x161],0x1
1000064f:	83 c4 10             	add    esp,0x10
10000652:	eb fe                	jmp    10000652 <EGAVGA::init()+0x2c>
10000654:	96                   	xchg   esi,eax
10000655:	00 00                	add    BYTE PTR [eax],al
10000657:	00 2c 01             	add    BYTE PTR [ecx+eax*1],ch
1000065a:	00 00                	add    BYTE PTR [eax],al
1000065c:	45                   	inc    ebp
1000065d:	47                   	inc    edi
1000065e:	41                   	inc    ecx
1000065f:	20 2f                	and    BYTE PTR [edi],ch
10000661:	20 56 47             	and    BYTE PTR [esi+0x47],dl
10000664:	41                   	inc    ecx
10000665:	20 43 6f             	and    BYTE PTR [ebx+0x6f],al
10000668:	6d                   	ins    DWORD PTR es:[edi],dx
10000669:	70 61                	jo     100006cc <EGAVGA::init()+0xa6>
1000066b:	74 69                	je     100006d6 <EGAVGA::init()+0xb0>
1000066d:	62 6c 65 20          	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
10000671:	56                   	push   esi
10000672:	69 64 65 6f 20 43 61 72 	imul   esp,DWORD PTR [ebp+eiz*2+0x6f],0x72614320
1000067a:	64 00 45 47          	add    BYTE PTR fs:[ebp+0x47],al
1000067e:	41                   	inc    ecx
1000067f:	56                   	push   esi
10000680:	47                   	inc    edi
10000681:	41                   	inc    ecx
10000682:	3a 3a                	cmp    bh,BYTE PTR [edx]
10000684:	61                   	popa   
10000685:	63 63 65             	arpl   WORD PTR [ebx+0x65],sp
10000688:	73 73                	jae    100006fd <EGAVGA::init()+0xd7>
1000068a:	53                   	push   ebx
1000068b:	65 71 47             	gs jno 100006d5 <EGAVGA::init()+0xaf>
1000068e:	66 78 43             	data16 js 100006d4 <EGAVGA::init()+0xae>
10000691:	52                   	push   edx
10000692:	54                   	push   esp
10000693:	43                   	inc    ebx
10000694:	20 35 20 72 65 74    	and    BYTE PTR ds:0x74657220,dh
1000069a:	72 69                	jb     10000705 <EGAVGA::init()+0xdf>
1000069c:	65 73 00             	gs jae 1000069f <EGAVGA::init()+0x79>
1000069f:	00 45 47             	add    BYTE PTR [ebp+0x47],al
100006a2:	41                   	inc    ecx
100006a3:	56                   	push   esi
100006a4:	47                   	inc    edi
100006a5:	41                   	inc    ecx
100006a6:	3a 3a                	cmp    bh,BYTE PTR [edx]
100006a8:	72 65                	jb     1000070f <EGAVGA::init()+0xe9>
100006aa:	61                   	popa   
100006ab:	64 52                	fs push edx
100006ad:	65 67 69 73 74 65 72 20 4e 	imul   esi,DWORD PTR gs:[bp+di+0x74],0x4e207265
100006b6:	4f                   	dec    edi
100006b7:	54                   	push   esp
100006b8:	20 49 4d             	and    BYTE PTR [ecx+0x4d],cl
100006bb:	50                   	push   eax
100006bc:	4c                   	dec    esp
100006bd:	45                   	inc    ebp
100006be:	4d                   	dec    ebp
100006bf:	45                   	inc    ebp
100006c0:	4e                   	dec    esi
100006c1:	54                   	push   esp
100006c2:	45                   	inc    ebp
100006c3:	44                   	inc    esp
100006c4:	00 00                	add    BYTE PTR [eax],al
100006c6:	00 00                	add    BYTE PTR [eax],al
100006c8:	43                   	inc    ebx
100006c9:	61                   	popa   
100006ca:	6e                   	outs   dx,BYTE PTR ds:[esi]
100006cb:	6e                   	outs   dx,BYTE PTR ds:[esi]
100006cc:	6f                   	outs   dx,DWORD PTR ds:[esi]
100006cd:	74 20                	je     100006ef <EGAVGA::init()+0xc9>
100006cf:	77 72                	ja     10000743 <EGAVGA::init()+0x11d>
100006d1:	69 74 65 20 74 6f 20 45 	imul   esi,DWORD PTR [ebp+eiz*2+0x20],0x45206f74
100006d9:	78 74                	js     1000074f <EGAVGA::init()+0x129>
100006db:	52                   	push   edx
100006dc:	65 67 3a 3a          	cmp    bh,BYTE PTR gs:[bp+si]
100006e0:	49                   	dec    ecx
100006e1:	6e                   	outs   dx,BYTE PTR ds:[esi]
100006e2:	70 75                	jo     10000759 <EGAVGA::init()+0x133>
100006e4:	74 53                	je     10000739 <EGAVGA::init()+0x113>
100006e6:	74 61                	je     10000749 <EGAVGA::init()+0x123>
100006e8:	74 75                	je     1000075f <EGAVGA::init()+0x139>
100006ea:	73 31                	jae    1000071d <EGAVGA::init()+0xf7>
100006ec:	00 00                	add    BYTE PTR [eax],al
100006ee:	00 00                	add    BYTE PTR [eax],al
100006f0:	48                   	dec    eax
100006f1:	61                   	popa   
100006f2:	73 20                	jae    10000714 <EGAVGA::init()+0xee>
100006f4:	75 6e                	jne    10000764 <EGAVGA::init()+0x13e>
100006f6:	64 6f                	outs   dx,DWORD PTR fs:[esi]
100006f8:	63 75 6d             	arpl   WORD PTR [ebp+0x6d],si
100006fb:	65 6e                	outs   dx,BYTE PTR gs:[esi]
100006fd:	74 65                	je     10000764 <EGAVGA::init()+0x13e>
100006ff:	64 20 62 69          	and    BYTE PTR fs:[edx+0x69],ah
10000703:	74 20                	je     10000725 <EGAVGA::init()+0xff>
10000705:	6f                   	outs   dx,DWORD PTR ds:[esi]
10000706:	6e                   	outs   dx,BYTE PTR ds:[esi]
10000707:	20 43 52             	and    BYTE PTR [ebx+0x52],al
1000070a:	54                   	push   esp
1000070b:	43                   	inc    ebx
1000070c:	20 69 6e             	and    BYTE PTR [ecx+0x6e],ch
1000070f:	64 65 78 20          	fs gs js 10000733 <EGAVGA::init()+0x10d>
10000713:	30 78 32             	xor    BYTE PTR [eax+0x32],bh
10000716:	34 2e                	xor    al,0x2e
10000718:	0a 00                	or     al,BYTE PTR [eax]
1000071a:	00 00                	add    BYTE PTR [eax],al
1000071c:	43                   	inc    ebx
1000071d:	6c                   	ins    BYTE PTR es:[edi],dx
1000071e:	65 61                	gs popa 
10000720:	72 69                	jb     1000078b <EGAVGA::init()+0x165>
10000722:	6e                   	outs   dx,BYTE PTR ds:[esi]
10000723:	67 20 66 6c          	and    BYTE PTR [bp+0x6c],ah
10000727:	69 70 2d 66 6c 6f 70 	imul   esi,DWORD PTR [eax+0x2d],0x706f6c66
1000072e:	2e 0a 00             	or     al,BYTE PTR cs:[eax]
10000731:	4f                   	dec    edi
10000732:	6c                   	ins    BYTE PTR es:[edi],dx
10000733:	64 20 61 64          	and    BYTE PTR fs:[ecx+0x64],ah
10000737:	64 72 20             	fs jb  1000075a <EGAVGA::init()+0x134>
1000073a:	3d 20 30 78 25       	cmp    eax,0x25783020
1000073f:	58                   	pop    eax
10000740:	0a 00                	or     al,BYTE PTR [eax]
10000742:	57                   	push   edi
10000743:	72 69                	jb     100007ae <vtable for EGAVGA+0x1e>
10000745:	74 69                	je     100007b0 <vtable for EGAVGA+0x20>
10000747:	6e                   	outs   dx,BYTE PTR ds:[esi]
10000748:	67 20 6f 66          	and    BYTE PTR [bx+0x66],ch
1000074c:	66 73 65             	data16 jae 100007b4 <vtable for EGAVGA+0x24>
1000074f:	74 20                	je     10000771 <EGAVGA::init()+0x14b>
10000751:	30 78 25             	xor    BYTE PTR [eax+0x25],bh
10000754:	58                   	pop    eax
10000755:	0a 00                	or     al,BYTE PTR [eax]
10000757:	4f                   	dec    edi
10000758:	6c                   	ins    BYTE PTR es:[edi],dx
10000759:	64 20 64 61 74       	and    BYTE PTR fs:[ecx+eiz*2+0x74],ah
1000075e:	61                   	popa   
1000075f:	20 3d 20 30 78 25    	and    BYTE PTR ds:0x25783020,bh
10000765:	58                   	pop    eax
10000766:	0a 00                	or     al,BYTE PTR [eax]
10000768:	61                   	popa   
10000769:	74 74                	je     100007df <vtable for EGAVGA+0x4f>
1000076b:	72 69                	jb     100007d6 <vtable for EGAVGA+0x46>
1000076d:	62 20                	bound  esp,QWORD PTR [eax]
1000076f:	77 72                	ja     100007e3 <EGAVGA::~EGAVGA()+0xb>
10000771:	69 74 65 2e 0a 00 49 4e 	imul   esi,DWORD PTR [ebp+eiz*2+0x2e],0x4e49000a
10000779:	42                   	inc    edx
1000077a:	20 66 72             	and    BYTE PTR [esi+0x72],ah
1000077d:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000077e:	6d                   	ins    DWORD PTR es:[edi],dx
1000077f:	20 30                	and    BYTE PTR [eax],dh
10000781:	78 25                	js     100007a8 <vtable for EGAVGA+0x18>
10000783:	58                   	pop    eax
10000784:	0a 00                	or     al,BYTE PTR [eax]
10000786:	27                   	daa    
10000787:	65 6c                	gs ins BYTE PTR es:[edi],dx
10000789:	6c                   	ins    BYTE PTR es:[edi],dx
1000078a:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000078b:	21 0a                	and    DWORD PTR [edx],ecx
1000078d:	00 66 90             	add    BYTE PTR [esi-0x70],ah

10000790 <vtable for EGAVGA>:
	...
	10000798: R_386_32	EGAVGA::~EGAVGA()
	1000079c: R_386_32	EGAVGA::~EGAVGA()
	100007a0: R_386_32	EGAVGA::open(int, int, void*)
	100007a4: R_386_32	EGAVGA::close(int, int, void*)
	100007a8: R_386_32	Device::hibernate()
	100007ac: R_386_32	Device::wake()
	100007b0: R_386_32	Device::detect()
	100007b4: R_386_32	Device::disableLegacy()
	100007b8: R_386_32	Device::powerSaving(PowerSavingLevel)
	100007bc: R_386_32	Video::putpixel(int, int, unsigned int)
	100007c0: R_386_32	Video::putrect(int, int, int, int, unsigned int)
	100007c4: R_386_32	Video::putTGA(int, int, unsigned char*, int)
	100007c8: R_386_32	Video::drawCursor(int, int, unsigned char*, int)
	100007cc: R_386_32	Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
	100007d0: R_386_32	Video::blit(unsigned int*, int, int, int, int)
	100007d4: R_386_32	Video::clearScreen(unsigned int)

Disassembly of section .text._ZN6EGAVGAD2Ev:

100007d8 <EGAVGA::~EGAVGA()>:
100007d8:	55                   	push   ebp
100007d9:	89 e5                	mov    ebp,esp
100007db:	83 ec 08             	sub    esp,0x8
100007de:	ba 08 00 00 00       	mov    edx,0x8	100007df: R_386_32	vtable for EGAVGA
100007e3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007e6:	89 10                	mov    DWORD PTR [eax],edx
100007e8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100007eb:	83 ec 0c             	sub    esp,0xc
100007ee:	50                   	push   eax
100007ef:	e8 fc ff ff ff       	call   100007f0 <EGAVGA::~EGAVGA()+0x18>	100007f0: R_386_PC32	Video::~Video()
100007f4:	83 c4 10             	add    esp,0x10
100007f7:	90                   	nop
100007f8:	c9                   	leave  
100007f9:	c3                   	ret    

Disassembly of section .text._ZN6EGAVGAD0Ev:

100007fa <EGAVGA::~EGAVGA()>:
100007fa:	55                   	push   ebp
100007fb:	89 e5                	mov    ebp,esp
100007fd:	83 ec 08             	sub    esp,0x8
10000800:	83 ec 0c             	sub    esp,0xc
10000803:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000806:	e8 fc ff ff ff       	call   10000807 <EGAVGA::~EGAVGA()+0xd>	10000807: R_386_PC32	EGAVGA::~EGAVGA()
1000080b:	83 c4 10             	add    esp,0x10
1000080e:	83 ec 08             	sub    esp,0x8
10000811:	68 64 01 00 00       	push   0x164
10000816:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000819:	e8 fc ff ff ff       	call   1000081a <EGAVGA::~EGAVGA()+0x20>	1000081a: R_386_PC32	operator delete(void*, unsigned long)
1000081e:	83 c4 10             	add    esp,0x10
10000821:	c9                   	leave  
10000822:	c3                   	ret    
