
packages/banana/32/0002/egavga.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start(Device*)-0x17>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	83 ec 0c             	sub    esp,0xc
10000009:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000000c:	e8 fc ff ff ff       	call   1000000d <start(Device*)-0xa>	1000000d: R_386_PC32	start(Device*)
10000011:	83 c4 10             	add    esp,0x10
10000014:	90                   	nop
10000015:	c9                   	leave  
10000016:	c3                   	ret    

10000017 <start(Device*)>:
10000017:	53                   	push   ebx
10000018:	83 ec 14             	sub    esp,0x14
1000001b:	68 64 01 00 00       	push   0x164
10000020:	e8 fc ff ff ff       	call   10000021 <start(Device*)+0xa>	10000021: R_386_PC32	operator new(unsigned long)
10000025:	89 c3                	mov    ebx,eax
10000027:	89 04 24             	mov    DWORD PTR [esp],eax
1000002a:	e8 fc ff ff ff       	call   1000002b <start(Device*)+0x14>	1000002b: R_386_PC32	EGAVGA::EGAVGA()
1000002f:	83 c4 08             	add    esp,0x8
10000032:	53                   	push   ebx
10000033:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000037:	e8 fc ff ff ff       	call   10000038 <start(Device*)+0x21>	10000038: R_386_PC32	Device::addChild(Device*)
1000003c:	83 c4 18             	add    esp,0x18
1000003f:	5b                   	pop    ebx
10000040:	c3                   	ret    
10000041:	90                   	nop

10000042 <EGAVGA::EGAVGA()>:
10000042:	55                   	push   ebp
10000043:	89 e5                	mov    ebp,esp
10000045:	83 ec 08             	sub    esp,0x8
10000048:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000004b:	83 ec 08             	sub    esp,0x8
1000004e:	68 f8 05 00 10       	push   0x100005f8	1000004f: R_386_32	.text
10000053:	50                   	push   eax
10000054:	e8 fc ff ff ff       	call   10000055 <EGAVGA::EGAVGA()+0x13>	10000055: R_386_PC32	Video::Video(char const*)
10000059:	83 c4 10             	add    esp,0x10
1000005c:	ba 08 00 00 00       	mov    edx,0x8	1000005d: R_386_32	vtable for EGAVGA
10000061:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000064:	89 10                	mov    DWORD PTR [eax],edx
10000066:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000069:	c6 80 61 01 00 00 00 	mov    BYTE PTR [eax+0x161],0x0
10000070:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000073:	c6 80 62 01 00 00 01 	mov    BYTE PTR [eax+0x162],0x1
1000007a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000007d:	c6 80 63 01 00 00 00 	mov    BYTE PTR [eax+0x163],0x0
10000084:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000087:	8a 80 c4 00 00 00    	mov    al,BYTE PTR [eax+0xc4]
1000008d:	0f b6 d0             	movzx  edx,al
10000090:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000093:	66 c7 44 90 04 b0 03 	mov    WORD PTR [eax+edx*4+0x4],0x3b0
1000009a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000009d:	8a 80 c4 00 00 00    	mov    al,BYTE PTR [eax+0xc4]
100000a3:	0f b6 d0             	movzx  edx,al
100000a6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000a9:	c6 44 90 06 30       	mov    BYTE PTR [eax+edx*4+0x6],0x30
100000ae:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000b1:	8a 80 c4 00 00 00    	mov    al,BYTE PTR [eax+0xc4]
100000b7:	8d 50 01             	lea    edx,[eax+0x1]
100000ba:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100000bd:	88 91 c4 00 00 00    	mov    BYTE PTR [ecx+0xc4],dl
100000c3:	0f b6 d0             	movzx  edx,al
100000c6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c9:	8a 4c 90 07          	mov    cl,BYTE PTR [eax+edx*4+0x7]
100000cd:	83 e1 3f             	and    ecx,0x3f
100000d0:	88 4c 90 07          	mov    BYTE PTR [eax+edx*4+0x7],cl
100000d4:	90                   	nop
100000d5:	c9                   	leave  
100000d6:	c3                   	ret    
100000d7:	90                   	nop

100000d8 <EGAVGA::open(int, int, void*)>:
100000d8:	b8 00 00 00 00       	mov    eax,0x0
100000dd:	c3                   	ret    

100000de <EGAVGA::close(int, int, void*)>:
100000de:	b8 00 00 00 00       	mov    eax,0x0
100000e3:	c3                   	ret    

100000e4 <EGAVGA::vinb(unsigned short)>:
100000e4:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100000e8:	ec                   	in     al,dx
100000e9:	88 c2                	mov    dl,al
100000eb:	b8 00 00 00 00       	mov    eax,0x0
100000f0:	e6 80                	out    0x80,al
100000f2:	e6 80                	out    0x80,al
100000f4:	88 d0                	mov    al,dl
100000f6:	c3                   	ret    
100000f7:	90                   	nop

100000f8 <EGAVGA::voutb(unsigned short, unsigned char)>:
100000f8:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100000fc:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000100:	ee                   	out    dx,al
10000101:	b8 00 00 00 00       	mov    eax,0x0
10000106:	e6 80                	out    0x80,al
10000108:	e6 80                	out    0x80,al
1000010a:	c3                   	ret    
1000010b:	90                   	nop

1000010c <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)>:
1000010c:	57                   	push   edi
1000010d:	56                   	push   esi
1000010e:	53                   	push   ebx
1000010f:	83 ec 10             	sub    esp,0x10
10000112:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10000116:	8a 44 24 30          	mov    al,BYTE PTR [esp+0x30]
1000011a:	88 44 24 0e          	mov    BYTE PTR [esp+0xe],al
1000011e:	8a 44 24 34          	mov    al,BYTE PTR [esp+0x34]
10000122:	88 44 24 0c          	mov    BYTE PTR [esp+0xc],al
10000126:	c7 44 24 08 00 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
1000012e:	eb 44                	jmp    10000174 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x68>
10000130:	0f b6 44 24 0e       	movzx  eax,BYTE PTR [esp+0xe]
10000135:	50                   	push   eax
10000136:	57                   	push   edi
10000137:	53                   	push   ebx
10000138:	e8 fc ff ff ff       	call   10000139 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x2d>	10000139: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
1000013d:	83 c4 0c             	add    esp,0xc
10000140:	0f b6 44 24 0d       	movzx  eax,BYTE PTR [esp+0xd]
10000145:	50                   	push   eax
10000146:	56                   	push   esi
10000147:	53                   	push   ebx
10000148:	e8 fc ff ff ff       	call   10000149 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x3d>	10000149: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
1000014d:	83 c4 0c             	add    esp,0xc
10000150:	80 7c 24 0c 00       	cmp    BYTE PTR [esp+0xc],0x0
10000155:	74 68                	je     100001bf <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xb3>
10000157:	57                   	push   edi
10000158:	53                   	push   ebx
10000159:	e8 fc ff ff ff       	call   1000015a <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x4e>	1000015a: R_386_PC32	EGAVGA::vinb(unsigned short)
1000015e:	83 c4 08             	add    esp,0x8
10000161:	38 44 24 0e          	cmp    BYTE PTR [esp+0xe],al
10000165:	74 58                	je     100001bf <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xb3>
10000167:	ff 44 24 08          	inc    DWORD PTR [esp+0x8]
1000016b:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000016f:	83 f8 05             	cmp    eax,0x5
10000172:	74 39                	je     100001ad <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xa1>
10000174:	0f b7 74 24 28       	movzx  esi,WORD PTR [esp+0x28]
10000179:	56                   	push   esi
1000017a:	53                   	push   ebx
1000017b:	e8 fc ff ff ff       	call   1000017c <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x70>	1000017c: R_386_PC32	EGAVGA::vinb(unsigned short)
10000180:	88 44 24 15          	mov    BYTE PTR [esp+0x15],al
10000184:	0f b6 44 24 2c       	movzx  eax,BYTE PTR [esp+0x2c]
10000189:	50                   	push   eax
1000018a:	56                   	push   esi
1000018b:	53                   	push   ebx
1000018c:	e8 fc ff ff ff       	call   1000018d <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x81>	1000018d: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
10000191:	0f b7 7c 24 40       	movzx  edi,WORD PTR [esp+0x40]
10000196:	57                   	push   edi
10000197:	53                   	push   ebx
10000198:	e8 fc ff ff ff       	call   10000199 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x8d>	10000199: R_386_PC32	EGAVGA::vinb(unsigned short)
1000019d:	88 44 24 2b          	mov    BYTE PTR [esp+0x2b],al
100001a1:	83 c4 1c             	add    esp,0x1c
100001a4:	80 7c 24 0c 00       	cmp    BYTE PTR [esp+0xc],0x0
100001a9:	74 95                	je     10000140 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x34>
100001ab:	eb 83                	jmp    10000130 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x24>
100001ad:	83 ec 0c             	sub    esp,0xc
100001b0:	68 18 06 00 10       	push   0x10000618	100001b1: R_386_32	.text
100001b5:	e8 fc ff ff ff       	call   100001b6 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xaa>	100001b6: R_386_PC32	Krnl::panic(char const*)
100001ba:	83 c4 10             	add    esp,0x10
100001bd:	eb b5                	jmp    10000174 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x68>
100001bf:	8a 44 24 0f          	mov    al,BYTE PTR [esp+0xf]
100001c3:	83 c4 10             	add    esp,0x10
100001c6:	5b                   	pop    ebx
100001c7:	5e                   	pop    esi
100001c8:	5f                   	pop    edi
100001c9:	c3                   	ret    
100001ca:	83 ec 14             	sub    esp,0x14
100001cd:	6a 00                	push   0x0
100001cf:	6a 00                	push   0x0
100001d1:	68 cf 03 00 00       	push   0x3cf
100001d6:	68 ce 03 00 00       	push   0x3ce
100001db:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100001df:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100001e3:	e8 fc ff ff ff       	call   100001e4 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xd8>	100001e4: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
100001e8:	83 c4 2c             	add    esp,0x2c
100001eb:	c3                   	ret    
100001ec:	83 ec 14             	sub    esp,0x14
100001ef:	6a 00                	push   0x0
100001f1:	6a 00                	push   0x0
100001f3:	68 c5 03 00 00       	push   0x3c5
100001f8:	68 c4 03 00 00       	push   0x3c4
100001fd:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000201:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000205:	e8 fc ff ff ff       	call   10000206 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xfa>	10000206: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
1000020a:	83 c4 2c             	add    esp,0x2c
1000020d:	c3                   	ret    

1000020e <EGAVGA::accessAttrib(int, unsigned char, bool)>:
1000020e:	57                   	push   edi
1000020f:	56                   	push   esi
10000210:	53                   	push   ebx
10000211:	83 ec 10             	sub    esp,0x10
10000214:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10000218:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
1000021c:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10000220:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000224:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000228:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
1000022c:	fa                   	cli    
1000022d:	ff 05 00 00 00 00    	inc    DWORD PTR ds:0x0	1000022f: R_386_32	irqDisableCounter
10000233:	83 ec 0c             	sub    esp,0xc
10000236:	56                   	push   esi
10000237:	e8 fc ff ff ff       	call   10000238 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x2a>	10000238: R_386_PC32	EGAVGA::isVBLANK()
1000023c:	83 c4 10             	add    esp,0x10
1000023f:	84 c0                	test   al,al
10000241:	75 f0                	jne    10000233 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x25>
10000243:	83 ec 0c             	sub    esp,0xc
10000246:	56                   	push   esi
10000247:	e8 fc ff ff ff       	call   10000248 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x3a>	10000248: R_386_PC32	EGAVGA::waitVBLANK()
1000024c:	83 c4 10             	add    esp,0x10
1000024f:	80 be 63 01 00 00 00 	cmp    BYTE PTR [esi+0x163],0x0
10000256:	74 10                	je     10000268 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x5a>
10000258:	83 ec 0c             	sub    esp,0xc
1000025b:	56                   	push   esi
1000025c:	e8 fc ff ff ff       	call   1000025d <EGAVGA::accessAttrib(int, unsigned char, bool)+0x4f>	1000025d: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
10000261:	83 c4 10             	add    esp,0x10
10000264:	84 c0                	test   al,al
10000266:	74 1b                	je     10000283 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x75>
10000268:	83 ec 0c             	sub    esp,0xc
1000026b:	68 b8 06 00 10       	push   0x100006b8	1000026c: R_386_32	.text
10000270:	e8 fc ff ff ff       	call   10000271 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x63>	10000271: R_386_PC32	Dbg::kprintf(char const*, ...)
10000275:	83 c4 08             	add    esp,0x8
10000278:	6a 03                	push   0x3
1000027a:	56                   	push   esi
1000027b:	e8 fc ff ff ff       	call   1000027c <EGAVGA::accessAttrib(int, unsigned char, bool)+0x6e>	1000027c: R_386_PC32	EGAVGA::readRegister(ExtReg)
10000280:	83 c4 10             	add    esp,0x10
10000283:	83 ec 08             	sub    esp,0x8
10000286:	68 c0 03 00 00       	push   0x3c0
1000028b:	56                   	push   esi
1000028c:	e8 fc ff ff ff       	call   1000028d <EGAVGA::accessAttrib(int, unsigned char, bool)+0x7f>	1000028d: R_386_PC32	EGAVGA::vinb(unsigned short)
10000291:	0f b6 f8             	movzx  edi,al
10000294:	83 c4 08             	add    esp,0x8
10000297:	57                   	push   edi
10000298:	68 cd 06 00 10       	push   0x100006cd	10000299: R_386_32	.text
1000029d:	e8 fc ff ff ff       	call   1000029e <EGAVGA::accessAttrib(int, unsigned char, bool)+0x90>	1000029e: R_386_PC32	Dbg::kprintf(char const*, ...)
100002a2:	83 c4 08             	add    esp,0x8
100002a5:	53                   	push   ebx
100002a6:	68 de 06 00 10       	push   0x100006de	100002a7: R_386_32	.text
100002ab:	e8 fc ff ff ff       	call   100002ac <EGAVGA::accessAttrib(int, unsigned char, bool)+0x9e>	100002ac: R_386_PC32	Dbg::kprintf(char const*, ...)
100002b0:	83 c4 0c             	add    esp,0xc
100002b3:	0f b6 db             	movzx  ebx,bl
100002b6:	53                   	push   ebx
100002b7:	68 c0 03 00 00       	push   0x3c0
100002bc:	56                   	push   esi
100002bd:	e8 fc ff ff ff       	call   100002be <EGAVGA::accessAttrib(int, unsigned char, bool)+0xb0>	100002be: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
100002c2:	83 c4 08             	add    esp,0x8
100002c5:	68 c1 03 00 00       	push   0x3c1
100002ca:	56                   	push   esi
100002cb:	e8 fc ff ff ff       	call   100002cc <EGAVGA::accessAttrib(int, unsigned char, bool)+0xbe>	100002cc: R_386_PC32	EGAVGA::vinb(unsigned short)
100002d0:	88 c3                	mov    bl,al
100002d2:	83 c4 08             	add    esp,0x8
100002d5:	0f b6 c0             	movzx  eax,al
100002d8:	50                   	push   eax
100002d9:	68 f3 06 00 10       	push   0x100006f3	100002da: R_386_32	.text
100002de:	e8 fc ff ff ff       	call   100002df <EGAVGA::accessAttrib(int, unsigned char, bool)+0xd1>	100002df: R_386_PC32	Dbg::kprintf(char const*, ...)
100002e3:	83 c4 10             	add    esp,0x10
100002e6:	80 7c 24 08 00       	cmp    BYTE PTR [esp+0x8],0x0
100002eb:	75 36                	jne    10000323 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x115>
100002ed:	83 ec 04             	sub    esp,0x4
100002f0:	57                   	push   edi
100002f1:	68 c0 03 00 00       	push   0x3c0
100002f6:	56                   	push   esi
100002f7:	e8 fc ff ff ff       	call   100002f8 <EGAVGA::accessAttrib(int, unsigned char, bool)+0xea>	100002f8: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
100002fc:	83 c4 08             	add    esp,0x8
100002ff:	6a 03                	push   0x3
10000301:	56                   	push   esi
10000302:	e8 fc ff ff ff       	call   10000303 <EGAVGA::accessAttrib(int, unsigned char, bool)+0xf5>	10000303: R_386_PC32	EGAVGA::readRegister(ExtReg)
10000307:	a1 00 00 00 00       	mov    eax,ds:0x0	10000308: R_386_32	irqDisableCounter
1000030c:	48                   	dec    eax
1000030d:	a3 00 00 00 00       	mov    ds:0x0,eax	1000030e: R_386_32	irqDisableCounter
10000312:	83 c4 10             	add    esp,0x10
10000315:	85 c0                	test   eax,eax
10000317:	75 01                	jne    1000031a <EGAVGA::accessAttrib(int, unsigned char, bool)+0x10c>
10000319:	fb                   	sti    
1000031a:	88 d8                	mov    al,bl
1000031c:	83 c4 10             	add    esp,0x10
1000031f:	5b                   	pop    ebx
10000320:	5e                   	pop    esi
10000321:	5f                   	pop    edi
10000322:	c3                   	ret    
10000323:	83 ec 0c             	sub    esp,0xc
10000326:	68 04 07 00 10       	push   0x10000704	10000327: R_386_32	.text
1000032b:	e8 fc ff ff ff       	call   1000032c <EGAVGA::accessAttrib(int, unsigned char, bool)+0x11e>	1000032c: R_386_PC32	Dbg::kprintf(char const*, ...)
10000330:	83 c4 0c             	add    esp,0xc
10000333:	0f b6 44 24 10       	movzx  eax,BYTE PTR [esp+0x10]
10000338:	50                   	push   eax
10000339:	68 c0 03 00 00       	push   0x3c0
1000033e:	56                   	push   esi
1000033f:	e8 fc ff ff ff       	call   10000340 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x132>	10000340: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
10000344:	83 c4 10             	add    esp,0x10
10000347:	eb a4                	jmp    100002ed <EGAVGA::accessAttrib(int, unsigned char, bool)+0xdf>
10000349:	90                   	nop
1000034a:	83 ec 0c             	sub    esp,0xc
1000034d:	6a 00                	push   0x0
1000034f:	6a 00                	push   0x0
10000351:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000355:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000359:	e8 fc ff ff ff       	call   1000035a <EGAVGA::accessAttrib(int, unsigned char, bool)+0x14c>	1000035a: R_386_PC32	EGAVGA::accessAttrib(int, unsigned char, bool)
1000035e:	83 c4 1c             	add    esp,0x1c
10000361:	c3                   	ret    

10000362 <EGAVGA::readRegister(CRTCReg)>:
10000362:	83 ec 0c             	sub    esp,0xc
10000365:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000369:	8a 90 61 01 00 00    	mov    dl,BYTE PTR [eax+0x161]
1000036f:	84 d2                	test   dl,dl
10000371:	74 25                	je     10000398 <EGAVGA::readRegister(CRTCReg)+0x36>
10000373:	b9 d5 03 00 00       	mov    ecx,0x3d5
10000378:	84 d2                	test   dl,dl
1000037a:	74 23                	je     1000039f <EGAVGA::readRegister(CRTCReg)+0x3d>
1000037c:	ba d4 03 00 00       	mov    edx,0x3d4
10000381:	83 ec 08             	sub    esp,0x8
10000384:	6a 00                	push   0x0
10000386:	6a 00                	push   0x0
10000388:	51                   	push   ecx
10000389:	52                   	push   edx
1000038a:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
1000038e:	50                   	push   eax
1000038f:	e8 fc ff ff ff       	call   10000390 <EGAVGA::readRegister(CRTCReg)+0x2e>	10000390: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
10000394:	83 c4 2c             	add    esp,0x2c
10000397:	c3                   	ret    
10000398:	b9 b5 03 00 00       	mov    ecx,0x3b5
1000039d:	eb d9                	jmp    10000378 <EGAVGA::readRegister(CRTCReg)+0x16>
1000039f:	ba b4 03 00 00       	mov    edx,0x3b4
100003a4:	eb db                	jmp    10000381 <EGAVGA::readRegister(CRTCReg)+0x1f>
100003a6:	b0 fe                	mov    al,0xfe
100003a8:	c3                   	ret    
100003a9:	90                   	nop

100003aa <EGAVGA::readRegister(ExtReg)>:
100003aa:	53                   	push   ebx
100003ab:	83 ec 08             	sub    esp,0x8
100003ae:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100003b2:	83 7c 24 14 03       	cmp    DWORD PTR [esp+0x14],0x3
100003b7:	75 4d                	jne    10000406 <EGAVGA::readRegister(ExtReg)+0x5c>
100003b9:	80 bb 62 01 00 00 00 	cmp    BYTE PTR [ebx+0x162],0x0
100003c0:	74 36                	je     100003f8 <EGAVGA::readRegister(ExtReg)+0x4e>
100003c2:	b8 da 03 00 00       	mov    eax,0x3da
100003c7:	83 ec 08             	sub    esp,0x8
100003ca:	50                   	push   eax
100003cb:	68 13 07 00 10       	push   0x10000713	100003cc: R_386_32	.text
100003d0:	e8 fc ff ff ff       	call   100003d1 <EGAVGA::readRegister(ExtReg)+0x27>	100003d1: R_386_PC32	Dbg::kprintf(char const*, ...)
100003d5:	83 c4 10             	add    esp,0x10
100003d8:	80 bb 62 01 00 00 00 	cmp    BYTE PTR [ebx+0x162],0x0
100003df:	74 1e                	je     100003ff <EGAVGA::readRegister(ExtReg)+0x55>
100003e1:	b8 da 03 00 00       	mov    eax,0x3da
100003e6:	83 ec 08             	sub    esp,0x8
100003e9:	50                   	push   eax
100003ea:	53                   	push   ebx
100003eb:	e8 fc ff ff ff       	call   100003ec <EGAVGA::readRegister(ExtReg)+0x42>	100003ec: R_386_PC32	EGAVGA::vinb(unsigned short)
100003f0:	83 c4 10             	add    esp,0x10
100003f3:	83 c4 08             	add    esp,0x8
100003f6:	5b                   	pop    ebx
100003f7:	c3                   	ret    
100003f8:	b8 ba 03 00 00       	mov    eax,0x3ba
100003fd:	eb c8                	jmp    100003c7 <EGAVGA::readRegister(ExtReg)+0x1d>
100003ff:	b8 ba 03 00 00       	mov    eax,0x3ba
10000404:	eb e0                	jmp    100003e6 <EGAVGA::readRegister(ExtReg)+0x3c>
10000406:	83 ec 0c             	sub    esp,0xc
10000409:	68 3c 06 00 10       	push   0x1000063c	1000040a: R_386_32	.text
1000040e:	e8 fc ff ff ff       	call   1000040f <EGAVGA::readRegister(ExtReg)+0x65>	1000040f: R_386_PC32	Krnl::panic(char const*)
10000413:	83 c4 10             	add    esp,0x10
10000416:	b0 fe                	mov    al,0xfe
10000418:	eb d9                	jmp    100003f3 <EGAVGA::readRegister(ExtReg)+0x49>
1000041a:	83 ec 14             	sub    esp,0x14
1000041d:	6a 01                	push   0x1
1000041f:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
10000424:	50                   	push   eax
10000425:	68 cf 03 00 00       	push   0x3cf
1000042a:	68 ce 03 00 00       	push   0x3ce
1000042f:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000433:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000437:	e8 fc ff ff ff       	call   10000438 <EGAVGA::readRegister(ExtReg)+0x8e>	10000438: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
1000043c:	83 c4 2c             	add    esp,0x2c
1000043f:	c3                   	ret    
10000440:	83 ec 14             	sub    esp,0x14
10000443:	6a 01                	push   0x1
10000445:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
1000044a:	50                   	push   eax
1000044b:	68 c5 03 00 00       	push   0x3c5
10000450:	68 c4 03 00 00       	push   0x3c4
10000455:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000459:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
1000045d:	e8 fc ff ff ff       	call   1000045e <EGAVGA::readRegister(ExtReg)+0xb4>	1000045e: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
10000462:	83 c4 2c             	add    esp,0x2c
10000465:	c3                   	ret    
10000466:	83 ec 0c             	sub    esp,0xc
10000469:	6a 01                	push   0x1
1000046b:	0f b6 44 24 1c       	movzx  eax,BYTE PTR [esp+0x1c]
10000470:	50                   	push   eax
10000471:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000475:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000479:	e8 fc ff ff ff       	call   1000047a <EGAVGA::readRegister(ExtReg)+0xd0>	1000047a: R_386_PC32	EGAVGA::accessAttrib(int, unsigned char, bool)
1000047e:	83 c4 1c             	add    esp,0x1c
10000481:	c3                   	ret    
10000482:	53                   	push   ebx
10000483:	83 ec 08             	sub    esp,0x8
10000486:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000048a:	0f b6 5c 24 18       	movzx  ebx,BYTE PTR [esp+0x18]
1000048f:	8a 90 61 01 00 00    	mov    dl,BYTE PTR [eax+0x161]
10000495:	84 d2                	test   dl,dl
10000497:	74 25                	je     100004be <EGAVGA::readRegister(ExtReg)+0x114>
10000499:	b9 d5 03 00 00       	mov    ecx,0x3d5
1000049e:	84 d2                	test   dl,dl
100004a0:	74 23                	je     100004c5 <EGAVGA::readRegister(ExtReg)+0x11b>
100004a2:	ba d4 03 00 00       	mov    edx,0x3d4
100004a7:	83 ec 08             	sub    esp,0x8
100004aa:	6a 01                	push   0x1
100004ac:	53                   	push   ebx
100004ad:	51                   	push   ecx
100004ae:	52                   	push   edx
100004af:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100004b3:	50                   	push   eax
100004b4:	e8 fc ff ff ff       	call   100004b5 <EGAVGA::readRegister(ExtReg)+0x10b>	100004b5: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
100004b9:	83 c4 28             	add    esp,0x28
100004bc:	5b                   	pop    ebx
100004bd:	c3                   	ret    
100004be:	b9 b5 03 00 00       	mov    ecx,0x3b5
100004c3:	eb d9                	jmp    1000049e <EGAVGA::readRegister(ExtReg)+0xf4>
100004c5:	ba b4 03 00 00       	mov    edx,0x3b4
100004ca:	eb db                	jmp    100004a7 <EGAVGA::readRegister(ExtReg)+0xfd>
100004cc:	c3                   	ret    
100004cd:	90                   	nop
100004ce:	83 ec 0c             	sub    esp,0xc
100004d1:	83 7c 24 14 03       	cmp    DWORD PTR [esp+0x14],0x3
100004d6:	74 14                	je     100004ec <EGAVGA::readRegister(ExtReg)+0x142>
100004d8:	83 ec 0c             	sub    esp,0xc
100004db:	68 3c 06 00 10       	push   0x1000063c	100004dc: R_386_32	.text
100004e0:	e8 fc ff ff ff       	call   100004e1 <EGAVGA::readRegister(ExtReg)+0x137>	100004e1: R_386_PC32	Krnl::panic(char const*)
100004e5:	83 c4 10             	add    esp,0x10
100004e8:	83 c4 0c             	add    esp,0xc
100004eb:	c3                   	ret    
100004ec:	83 ec 0c             	sub    esp,0xc
100004ef:	68 64 06 00 10       	push   0x10000664	100004f0: R_386_32	.text
100004f4:	e8 fc ff ff ff       	call   100004f5 <EGAVGA::readRegister(ExtReg)+0x14b>	100004f5: R_386_PC32	Krnl::panic(char const*)
100004f9:	83 c4 10             	add    esp,0x10
100004fc:	eb ea                	jmp    100004e8 <EGAVGA::readRegister(ExtReg)+0x13e>

100004fe <EGAVGA::getUndocumentedCRTC24Bit()>:
100004fe:	83 ec 14             	sub    esp,0x14
10000501:	6a 24                	push   0x24
10000503:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000507:	e8 fc ff ff ff       	call   10000508 <EGAVGA::getUndocumentedCRTC24Bit()+0xa>	10000508: R_386_PC32	EGAVGA::readRegister(CRTCReg)
1000050c:	a8 80                	test   al,0x80
1000050e:	0f 95 c0             	setne  al
10000511:	83 c4 1c             	add    esp,0x1c
10000514:	c3                   	ret    
10000515:	90                   	nop
10000516:	53                   	push   ebx
10000517:	83 ec 14             	sub    esp,0x14
1000051a:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
1000051e:	68 22 07 00 10       	push   0x10000722	1000051f: R_386_32	.text
10000523:	e8 fc ff ff ff       	call   10000524 <EGAVGA::getUndocumentedCRTC24Bit()+0x26>	10000524: R_386_PC32	Dbg::kprintf(char const*, ...)
10000528:	c6 83 63 01 00 00 00 	mov    BYTE PTR [ebx+0x163],0x0
1000052f:	fa                   	cli    
10000530:	ff 05 00 00 00 00    	inc    DWORD PTR ds:0x0	10000532: R_386_32	irqDisableCounter
10000536:	83 c4 08             	add    esp,0x8
10000539:	6a 03                	push   0x3
1000053b:	53                   	push   ebx
1000053c:	e8 fc ff ff ff       	call   1000053d <EGAVGA::getUndocumentedCRTC24Bit()+0x3f>	1000053d: R_386_PC32	EGAVGA::readRegister(ExtReg)
10000541:	89 1c 24             	mov    DWORD PTR [esp],ebx
10000544:	e8 fc ff ff ff       	call   10000545 <EGAVGA::getUndocumentedCRTC24Bit()+0x47>	10000545: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
10000549:	83 c4 10             	add    esp,0x10
1000054c:	84 c0                	test   al,al
1000054e:	74 13                	je     10000563 <EGAVGA::getUndocumentedCRTC24Bit()+0x65>
10000550:	a1 00 00 00 00       	mov    eax,ds:0x0	10000551: R_386_32	irqDisableCounter
10000555:	48                   	dec    eax
10000556:	a3 00 00 00 00       	mov    ds:0x0,eax	10000557: R_386_32	irqDisableCounter
1000055b:	75 01                	jne    1000055e <EGAVGA::getUndocumentedCRTC24Bit()+0x60>
1000055d:	fb                   	sti    
1000055e:	83 c4 08             	add    esp,0x8
10000561:	5b                   	pop    ebx
10000562:	c3                   	ret    
10000563:	83 ec 04             	sub    esp,0x4
10000566:	6a 55                	push   0x55
10000568:	68 c0 03 00 00       	push   0x3c0
1000056d:	53                   	push   ebx
1000056e:	e8 fc ff ff ff       	call   1000056f <EGAVGA::getUndocumentedCRTC24Bit()+0x71>	1000056f: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
10000573:	89 1c 24             	mov    DWORD PTR [esp],ebx
10000576:	e8 fc ff ff ff       	call   10000577 <EGAVGA::getUndocumentedCRTC24Bit()+0x79>	10000577: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
1000057b:	83 c4 10             	add    esp,0x10
1000057e:	84 c0                	test   al,al
10000580:	74 ce                	je     10000550 <EGAVGA::getUndocumentedCRTC24Bit()+0x52>
10000582:	83 ec 08             	sub    esp,0x8
10000585:	6a 03                	push   0x3
10000587:	53                   	push   ebx
10000588:	e8 fc ff ff ff       	call   10000589 <EGAVGA::getUndocumentedCRTC24Bit()+0x8b>	10000589: R_386_PC32	EGAVGA::readRegister(ExtReg)
1000058d:	89 1c 24             	mov    DWORD PTR [esp],ebx
10000590:	e8 fc ff ff ff       	call   10000591 <EGAVGA::getUndocumentedCRTC24Bit()+0x93>	10000591: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
10000595:	83 c4 10             	add    esp,0x10
10000598:	84 c0                	test   al,al
1000059a:	75 b4                	jne    10000550 <EGAVGA::getUndocumentedCRTC24Bit()+0x52>
1000059c:	c6 83 63 01 00 00 01 	mov    BYTE PTR [ebx+0x163],0x1
100005a3:	83 ec 0c             	sub    esp,0xc
100005a6:	68 8c 06 00 10       	push   0x1000068c	100005a7: R_386_32	.text
100005ab:	e8 fc ff ff ff       	call   100005ac <EGAVGA::getUndocumentedCRTC24Bit()+0xae>	100005ac: R_386_PC32	Dbg::kprintf(char const*, ...)
100005b0:	83 c4 10             	add    esp,0x10
100005b3:	eb 9b                	jmp    10000550 <EGAVGA::getUndocumentedCRTC24Bit()+0x52>
100005b5:	90                   	nop

100005b6 <EGAVGA::isVBLANK()>:
100005b6:	83 ec 14             	sub    esp,0x14
100005b9:	6a 03                	push   0x3
100005bb:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100005bf:	e8 fc ff ff ff       	call   100005c0 <EGAVGA::isVBLANK()+0xa>	100005c0: R_386_PC32	EGAVGA::readRegister(ExtReg)
100005c4:	c0 e8 03             	shr    al,0x3
100005c7:	83 e0 01             	and    eax,0x1
100005ca:	83 c4 1c             	add    esp,0x1c
100005cd:	c3                   	ret    

100005ce <EGAVGA::waitVBLANK()>:
100005ce:	53                   	push   ebx
100005cf:	83 ec 08             	sub    esp,0x8
100005d2:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
100005d6:	83 ec 0c             	sub    esp,0xc
100005d9:	53                   	push   ebx
100005da:	e8 fc ff ff ff       	call   100005db <EGAVGA::waitVBLANK()+0xd>	100005db: R_386_PC32	EGAVGA::isVBLANK()
100005df:	83 c4 10             	add    esp,0x10
100005e2:	84 c0                	test   al,al
100005e4:	74 f0                	je     100005d6 <EGAVGA::waitVBLANK()+0x8>
100005e6:	83 c4 08             	add    esp,0x8
100005e9:	5b                   	pop    ebx
100005ea:	c3                   	ret    
100005eb:	90                   	nop
100005ec:	c3                   	ret    
100005ed:	66 90                	xchg   ax,ax
100005ef:	90                   	nop
100005f0:	96                   	xchg   esi,eax
100005f1:	00 00                	add    BYTE PTR [eax],al
100005f3:	00 2c 01             	add    BYTE PTR [ecx+eax*1],ch
100005f6:	00 00                	add    BYTE PTR [eax],al
100005f8:	45                   	inc    ebp
100005f9:	47                   	inc    edi
100005fa:	41                   	inc    ecx
100005fb:	20 2f                	and    BYTE PTR [edi],ch
100005fd:	20 56 47             	and    BYTE PTR [esi+0x47],dl
10000600:	41                   	inc    ecx
10000601:	20 43 6f             	and    BYTE PTR [ebx+0x6f],al
10000604:	6d                   	ins    DWORD PTR es:[edi],dx
10000605:	70 61                	jo     10000668 <EGAVGA::waitVBLANK()+0x9a>
10000607:	74 69                	je     10000672 <EGAVGA::waitVBLANK()+0xa4>
10000609:	62 6c 65 20          	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
1000060d:	56                   	push   esi
1000060e:	69 64 65 6f 20 43 61 72 	imul   esp,DWORD PTR [ebp+eiz*2+0x6f],0x72614320
10000616:	64 00 45 47          	add    BYTE PTR fs:[ebp+0x47],al
1000061a:	41                   	inc    ecx
1000061b:	56                   	push   esi
1000061c:	47                   	inc    edi
1000061d:	41                   	inc    ecx
1000061e:	3a 3a                	cmp    bh,BYTE PTR [edx]
10000620:	61                   	popa   
10000621:	63 63 65             	arpl   WORD PTR [ebx+0x65],sp
10000624:	73 73                	jae    10000699 <EGAVGA::waitVBLANK()+0xcb>
10000626:	53                   	push   ebx
10000627:	65 71 47             	gs jno 10000671 <EGAVGA::waitVBLANK()+0xa3>
1000062a:	66 78 43             	data16 js 10000670 <EGAVGA::waitVBLANK()+0xa2>
1000062d:	52                   	push   edx
1000062e:	54                   	push   esp
1000062f:	43                   	inc    ebx
10000630:	20 35 20 72 65 74    	and    BYTE PTR ds:0x74657220,dh
10000636:	72 69                	jb     100006a1 <EGAVGA::waitVBLANK()+0xd3>
10000638:	65 73 00             	gs jae 1000063b <EGAVGA::waitVBLANK()+0x6d>
1000063b:	00 45 47             	add    BYTE PTR [ebp+0x47],al
1000063e:	41                   	inc    ecx
1000063f:	56                   	push   esi
10000640:	47                   	inc    edi
10000641:	41                   	inc    ecx
10000642:	3a 3a                	cmp    bh,BYTE PTR [edx]
10000644:	72 65                	jb     100006ab <EGAVGA::waitVBLANK()+0xdd>
10000646:	61                   	popa   
10000647:	64 52                	fs push edx
10000649:	65 67 69 73 74 65 72 20 4e 	imul   esi,DWORD PTR gs:[bp+di+0x74],0x4e207265
10000652:	4f                   	dec    edi
10000653:	54                   	push   esp
10000654:	20 49 4d             	and    BYTE PTR [ecx+0x4d],cl
10000657:	50                   	push   eax
10000658:	4c                   	dec    esp
10000659:	45                   	inc    ebp
1000065a:	4d                   	dec    ebp
1000065b:	45                   	inc    ebp
1000065c:	4e                   	dec    esi
1000065d:	54                   	push   esp
1000065e:	45                   	inc    ebp
1000065f:	44                   	inc    esp
10000660:	00 00                	add    BYTE PTR [eax],al
10000662:	00 00                	add    BYTE PTR [eax],al
10000664:	43                   	inc    ebx
10000665:	61                   	popa   
10000666:	6e                   	outs   dx,BYTE PTR ds:[esi]
10000667:	6e                   	outs   dx,BYTE PTR ds:[esi]
10000668:	6f                   	outs   dx,DWORD PTR ds:[esi]
10000669:	74 20                	je     1000068b <EGAVGA::waitVBLANK()+0xbd>
1000066b:	77 72                	ja     100006df <EGAVGA::waitVBLANK()+0x111>
1000066d:	69 74 65 20 74 6f 20 45 	imul   esi,DWORD PTR [ebp+eiz*2+0x20],0x45206f74
10000675:	78 74                	js     100006eb <EGAVGA::waitVBLANK()+0x11d>
10000677:	52                   	push   edx
10000678:	65 67 3a 3a          	cmp    bh,BYTE PTR gs:[bp+si]
1000067c:	49                   	dec    ecx
1000067d:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000067e:	70 75                	jo     100006f5 <EGAVGA::waitVBLANK()+0x127>
10000680:	74 53                	je     100006d5 <EGAVGA::waitVBLANK()+0x107>
10000682:	74 61                	je     100006e5 <EGAVGA::waitVBLANK()+0x117>
10000684:	74 75                	je     100006fb <EGAVGA::waitVBLANK()+0x12d>
10000686:	73 31                	jae    100006b9 <EGAVGA::waitVBLANK()+0xeb>
10000688:	00 00                	add    BYTE PTR [eax],al
1000068a:	00 00                	add    BYTE PTR [eax],al
1000068c:	48                   	dec    eax
1000068d:	61                   	popa   
1000068e:	73 20                	jae    100006b0 <EGAVGA::waitVBLANK()+0xe2>
10000690:	75 6e                	jne    10000700 <EGAVGA::waitVBLANK()+0x132>
10000692:	64 6f                	outs   dx,DWORD PTR fs:[esi]
10000694:	63 75 6d             	arpl   WORD PTR [ebp+0x6d],si
10000697:	65 6e                	outs   dx,BYTE PTR gs:[esi]
10000699:	74 65                	je     10000700 <EGAVGA::waitVBLANK()+0x132>
1000069b:	64 20 62 69          	and    BYTE PTR fs:[edx+0x69],ah
1000069f:	74 20                	je     100006c1 <EGAVGA::waitVBLANK()+0xf3>
100006a1:	6f                   	outs   dx,DWORD PTR ds:[esi]
100006a2:	6e                   	outs   dx,BYTE PTR ds:[esi]
100006a3:	20 43 52             	and    BYTE PTR [ebx+0x52],al
100006a6:	54                   	push   esp
100006a7:	43                   	inc    ebx
100006a8:	20 69 6e             	and    BYTE PTR [ecx+0x6e],ch
100006ab:	64 65 78 20          	fs gs js 100006cf <EGAVGA::waitVBLANK()+0x101>
100006af:	30 78 32             	xor    BYTE PTR [eax+0x32],bh
100006b2:	34 2e                	xor    al,0x2e
100006b4:	0a 00                	or     al,BYTE PTR [eax]
100006b6:	00 00                	add    BYTE PTR [eax],al
100006b8:	43                   	inc    ebx
100006b9:	6c                   	ins    BYTE PTR es:[edi],dx
100006ba:	65 61                	gs popa 
100006bc:	72 69                	jb     10000727 <EGAVGA::waitVBLANK()+0x159>
100006be:	6e                   	outs   dx,BYTE PTR ds:[esi]
100006bf:	67 20 66 6c          	and    BYTE PTR [bp+0x6c],ah
100006c3:	69 70 2d 66 6c 6f 70 	imul   esi,DWORD PTR [eax+0x2d],0x706f6c66
100006ca:	2e 0a 00             	or     al,BYTE PTR cs:[eax]
100006cd:	4f                   	dec    edi
100006ce:	6c                   	ins    BYTE PTR es:[edi],dx
100006cf:	64 20 61 64          	and    BYTE PTR fs:[ecx+0x64],ah
100006d3:	64 72 20             	fs jb  100006f6 <EGAVGA::waitVBLANK()+0x128>
100006d6:	3d 20 30 78 25       	cmp    eax,0x25783020
100006db:	58                   	pop    eax
100006dc:	0a 00                	or     al,BYTE PTR [eax]
100006de:	57                   	push   edi
100006df:	72 69                	jb     1000074a <vtable for EGAVGA+0x1e>
100006e1:	74 69                	je     1000074c <vtable for EGAVGA+0x20>
100006e3:	6e                   	outs   dx,BYTE PTR ds:[esi]
100006e4:	67 20 6f 66          	and    BYTE PTR [bx+0x66],ch
100006e8:	66 73 65             	data16 jae 10000750 <vtable for EGAVGA+0x24>
100006eb:	74 20                	je     1000070d <EGAVGA::waitVBLANK()+0x13f>
100006ed:	30 78 25             	xor    BYTE PTR [eax+0x25],bh
100006f0:	58                   	pop    eax
100006f1:	0a 00                	or     al,BYTE PTR [eax]
100006f3:	4f                   	dec    edi
100006f4:	6c                   	ins    BYTE PTR es:[edi],dx
100006f5:	64 20 64 61 74       	and    BYTE PTR fs:[ecx+eiz*2+0x74],ah
100006fa:	61                   	popa   
100006fb:	20 3d 20 30 78 25    	and    BYTE PTR ds:0x25783020,bh
10000701:	58                   	pop    eax
10000702:	0a 00                	or     al,BYTE PTR [eax]
10000704:	61                   	popa   
10000705:	74 74                	je     1000077b <vtable for EGAVGA+0x4f>
10000707:	72 69                	jb     10000772 <vtable for EGAVGA+0x46>
10000709:	62 20                	bound  esp,QWORD PTR [eax]
1000070b:	77 72                	ja     1000077f <EGAVGA::~EGAVGA()+0xb>
1000070d:	69 74 65 2e 0a 00 49 4e 	imul   esi,DWORD PTR [ebp+eiz*2+0x2e],0x4e49000a
10000715:	42                   	inc    edx
10000716:	20 66 72             	and    BYTE PTR [esi+0x72],ah
10000719:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000071a:	6d                   	ins    DWORD PTR es:[edi],dx
1000071b:	20 30                	and    BYTE PTR [eax],dh
1000071d:	78 25                	js     10000744 <vtable for EGAVGA+0x18>
1000071f:	58                   	pop    eax
10000720:	0a 00                	or     al,BYTE PTR [eax]
10000722:	27                   	daa    
10000723:	65 6c                	gs ins BYTE PTR es:[edi],dx
10000725:	6c                   	ins    BYTE PTR es:[edi],dx
10000726:	6f                   	outs   dx,DWORD PTR ds:[esi]
10000727:	21 0a                	and    DWORD PTR [edx],ecx
10000729:	00 66 90             	add    BYTE PTR [esi-0x70],ah

1000072c <vtable for EGAVGA>:
	...
	10000734: R_386_32	EGAVGA::~EGAVGA()
	10000738: R_386_32	EGAVGA::~EGAVGA()
	1000073c: R_386_32	EGAVGA::open(int, int, void*)
	10000740: R_386_32	EGAVGA::close(int, int, void*)
	10000744: R_386_32	Device::hibernate()
	10000748: R_386_32	Device::wake()
	1000074c: R_386_32	Device::detect()
	10000750: R_386_32	Device::disableLegacy()
	10000754: R_386_32	Device::powerSaving(PowerSavingLevel)
	10000758: R_386_32	Video::putpixel(int, int, unsigned int)
	1000075c: R_386_32	Video::putrect(int, int, int, int, unsigned int)
	10000760: R_386_32	Video::putTGA(int, int, unsigned char*, int)
	10000764: R_386_32	Video::drawCursor(int, int, unsigned char*, int)
	10000768: R_386_32	Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
	1000076c: R_386_32	Video::blit(unsigned int*, int, int, int, int)
	10000770: R_386_32	Video::clearScreen(unsigned int)

Disassembly of section .text._ZN6EGAVGAD2Ev:

10000774 <EGAVGA::~EGAVGA()>:
10000774:	55                   	push   ebp
10000775:	89 e5                	mov    ebp,esp
10000777:	83 ec 08             	sub    esp,0x8
1000077a:	ba 08 00 00 00       	mov    edx,0x8	1000077b: R_386_32	vtable for EGAVGA
1000077f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000782:	89 10                	mov    DWORD PTR [eax],edx
10000784:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000787:	83 ec 0c             	sub    esp,0xc
1000078a:	50                   	push   eax
1000078b:	e8 fc ff ff ff       	call   1000078c <EGAVGA::~EGAVGA()+0x18>	1000078c: R_386_PC32	Video::~Video()
10000790:	83 c4 10             	add    esp,0x10
10000793:	90                   	nop
10000794:	c9                   	leave  
10000795:	c3                   	ret    

Disassembly of section .text._ZN6EGAVGAD0Ev:

10000796 <EGAVGA::~EGAVGA()>:
10000796:	55                   	push   ebp
10000797:	89 e5                	mov    ebp,esp
10000799:	83 ec 08             	sub    esp,0x8
1000079c:	83 ec 0c             	sub    esp,0xc
1000079f:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007a2:	e8 fc ff ff ff       	call   100007a3 <EGAVGA::~EGAVGA()+0xd>	100007a3: R_386_PC32	EGAVGA::~EGAVGA()
100007a7:	83 c4 10             	add    esp,0x10
100007aa:	83 ec 08             	sub    esp,0x8
100007ad:	68 64 01 00 00       	push   0x164
100007b2:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100007b5:	e8 fc ff ff ff       	call   100007b6 <EGAVGA::~EGAVGA()+0x20>	100007b6: R_386_PC32	operator delete(void*, unsigned long)
100007ba:	83 c4 10             	add    esp,0x10
100007bd:	c9                   	leave  
100007be:	c3                   	ret    
