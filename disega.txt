
packages/banana/32/0002/egavga.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start(Device*)-0x17>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	83 ec 0c             	sub    esp,0xc
10000009:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000000c:	e8 fc ff ff ff       	call   1000000d <start(Device*)-0xa>	1000000d: R_386_PC32	start(Device*)
10000011:	83 c4 10             	add    esp,0x10
10000014:	90                   	nop
10000015:	c9                   	leave  
10000016:	c3                   	ret    

10000017 <start(Device*)>:
10000017:	55                   	push   ebp
10000018:	89 e5                	mov    ebp,esp
1000001a:	53                   	push   ebx
1000001b:	83 ec 14             	sub    esp,0x14
1000001e:	83 ec 0c             	sub    esp,0xc
10000021:	68 64 01 00 00       	push   0x164
10000026:	e8 fc ff ff ff       	call   10000027 <start(Device*)+0x10>	10000027: R_386_PC32	operator new(unsigned long)
1000002b:	83 c4 10             	add    esp,0x10
1000002e:	89 c3                	mov    ebx,eax
10000030:	83 ec 0c             	sub    esp,0xc
10000033:	53                   	push   ebx
10000034:	e8 fc ff ff ff       	call   10000035 <start(Device*)+0x1e>	10000035: R_386_PC32	EGAVGA::EGAVGA()
10000039:	83 c4 10             	add    esp,0x10
1000003c:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
1000003f:	83 ec 08             	sub    esp,0x8
10000042:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000045:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000048:	e8 fc ff ff ff       	call   10000049 <start(Device*)+0x32>	10000049: R_386_PC32	Device::addChild(Device*)
1000004d:	83 c4 10             	add    esp,0x10
10000050:	90                   	nop
10000051:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000054:	c9                   	leave  
10000055:	c3                   	ret    

10000056 <EGAVGA::EGAVGA()>:
10000056:	55                   	push   ebp
10000057:	89 e5                	mov    ebp,esp
10000059:	83 ec 08             	sub    esp,0x8
1000005c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000005f:	83 ec 08             	sub    esp,0x8
10000062:	68 d4 03 00 10       	push   0x100003d4	10000063: R_386_32	.text
10000067:	50                   	push   eax
10000068:	e8 fc ff ff ff       	call   10000069 <EGAVGA::EGAVGA()+0x13>	10000069: R_386_PC32	Video::Video(char const*)
1000006d:	83 c4 10             	add    esp,0x10
10000070:	ba 08 00 00 00       	mov    edx,0x8	10000071: R_386_32	vtable for EGAVGA
10000075:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000078:	89 10                	mov    DWORD PTR [eax],edx
1000007a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000007d:	c6 80 61 01 00 00 00 	mov    BYTE PTR [eax+0x161],0x0
10000084:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000087:	8a 80 c4 00 00 00    	mov    al,BYTE PTR [eax+0xc4]
1000008d:	0f b6 d0             	movzx  edx,al
10000090:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000093:	66 c7 44 90 04 b0 03 	mov    WORD PTR [eax+edx*4+0x4],0x3b0
1000009a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000009d:	8a 80 c4 00 00 00    	mov    al,BYTE PTR [eax+0xc4]
100000a3:	0f b6 d0             	movzx  edx,al
100000a6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000a9:	c6 44 90 06 30       	mov    BYTE PTR [eax+edx*4+0x6],0x30
100000ae:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000b1:	8a 80 c4 00 00 00    	mov    al,BYTE PTR [eax+0xc4]
100000b7:	8d 50 01             	lea    edx,[eax+0x1]
100000ba:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100000bd:	88 91 c4 00 00 00    	mov    BYTE PTR [ecx+0xc4],dl
100000c3:	0f b6 d0             	movzx  edx,al
100000c6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000c9:	8a 4c 90 07          	mov    cl,BYTE PTR [eax+edx*4+0x7]
100000cd:	83 e1 3f             	and    ecx,0x3f
100000d0:	88 4c 90 07          	mov    BYTE PTR [eax+edx*4+0x7],cl
100000d4:	90                   	nop
100000d5:	c9                   	leave  
100000d6:	c3                   	ret    
100000d7:	90                   	nop

100000d8 <EGAVGA::open(int, int, void*)>:
100000d8:	b8 00 00 00 00       	mov    eax,0x0
100000dd:	c3                   	ret    

100000de <EGAVGA::close(int, int, void*)>:
100000de:	b8 00 00 00 00       	mov    eax,0x0
100000e3:	c3                   	ret    

100000e4 <EGAVGA::vinb(unsigned short)>:
100000e4:	55                   	push   ebp
100000e5:	89 e5                	mov    ebp,esp
100000e7:	83 ec 14             	sub    esp,0x14
100000ea:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ed:	66 89 45 ec          	mov    WORD PTR [ebp-0x14],ax
100000f1:	0f b7 45 ec          	movzx  eax,WORD PTR [ebp-0x14]
100000f5:	66 89 45 fc          	mov    WORD PTR [ebp-0x4],ax
100000f9:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000fc:	89 c2                	mov    edx,eax
100000fe:	ec                   	in     al,dx
100000ff:	88 45 fb             	mov    BYTE PTR [ebp-0x5],al
10000102:	8a 45 fb             	mov    al,BYTE PTR [ebp-0x5]
10000105:	88 45 ff             	mov    BYTE PTR [ebp-0x1],al
10000108:	b8 00 00 00 00       	mov    eax,0x0
1000010d:	e6 80                	out    0x80,al
1000010f:	b8 00 00 00 00       	mov    eax,0x0
10000114:	e6 80                	out    0x80,al
10000116:	8a 45 ff             	mov    al,BYTE PTR [ebp-0x1]
10000119:	c9                   	leave  
1000011a:	c3                   	ret    
1000011b:	90                   	nop

1000011c <EGAVGA::voutb(unsigned short, unsigned char)>:
1000011c:	55                   	push   ebp
1000011d:	89 e5                	mov    ebp,esp
1000011f:	83 ec 18             	sub    esp,0x18
10000122:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000125:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
10000128:	66 89 45 ec          	mov    WORD PTR [ebp-0x14],ax
1000012c:	88 d0                	mov    al,dl
1000012e:	88 45 e8             	mov    BYTE PTR [ebp-0x18],al
10000131:	0f b6 55 e8          	movzx  edx,BYTE PTR [ebp-0x18]
10000135:	0f b7 45 ec          	movzx  eax,WORD PTR [ebp-0x14]
10000139:	66 89 45 fe          	mov    WORD PTR [ebp-0x2],ax
1000013d:	88 55 fd             	mov    BYTE PTR [ebp-0x3],dl
10000140:	8a 45 fd             	mov    al,BYTE PTR [ebp-0x3]
10000143:	66 8b 55 fe          	mov    dx,WORD PTR [ebp-0x2]
10000147:	ee                   	out    dx,al
10000148:	b8 00 00 00 00       	mov    eax,0x0
1000014d:	e6 80                	out    0x80,al
1000014f:	b8 00 00 00 00       	mov    eax,0x0
10000154:	e6 80                	out    0x80,al
10000156:	90                   	nop
10000157:	c9                   	leave  
10000158:	c3                   	ret    
10000159:	90                   	nop

1000015a <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)>:
1000015a:	55                   	push   ebp
1000015b:	89 e5                	mov    ebp,esp
1000015d:	83 ec 28             	sub    esp,0x28
10000160:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
10000163:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10000166:	88 55 e4             	mov    BYTE PTR [ebp-0x1c],dl
10000169:	88 45 e0             	mov    BYTE PTR [ebp-0x20],al
1000016c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10000173:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000176:	0f b7 c0             	movzx  eax,ax
10000179:	50                   	push   eax
1000017a:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000017d:	e8 fc ff ff ff       	call   1000017e <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x24>	1000017e: R_386_PC32	EGAVGA::vinb(unsigned short)
10000182:	83 c4 08             	add    esp,0x8
10000185:	88 45 f3             	mov    BYTE PTR [ebp-0xd],al
10000188:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000018b:	0f b6 d0             	movzx  edx,al
1000018e:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000191:	0f b7 c0             	movzx  eax,ax
10000194:	52                   	push   edx
10000195:	50                   	push   eax
10000196:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000199:	e8 fc ff ff ff       	call   1000019a <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x40>	1000019a: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
1000019e:	83 c4 0c             	add    esp,0xc
100001a1:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
100001a4:	0f b7 c0             	movzx  eax,ax
100001a7:	50                   	push   eax
100001a8:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100001ab:	e8 fc ff ff ff       	call   100001ac <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x52>	100001ac: R_386_PC32	EGAVGA::vinb(unsigned short)
100001b0:	83 c4 08             	add    esp,0x8
100001b3:	88 45 f2             	mov    BYTE PTR [ebp-0xe],al
100001b6:	80 7d e0 00          	cmp    BYTE PTR [ebp-0x20],0x0
100001ba:	74 17                	je     100001d3 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x79>
100001bc:	0f b6 55 e4          	movzx  edx,BYTE PTR [ebp-0x1c]
100001c0:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
100001c3:	0f b7 c0             	movzx  eax,ax
100001c6:	52                   	push   edx
100001c7:	50                   	push   eax
100001c8:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100001cb:	e8 fc ff ff ff       	call   100001cc <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x72>	100001cc: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
100001d0:	83 c4 0c             	add    esp,0xc
100001d3:	0f b6 55 f3          	movzx  edx,BYTE PTR [ebp-0xd]
100001d7:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
100001da:	0f b7 c0             	movzx  eax,ax
100001dd:	52                   	push   edx
100001de:	50                   	push   eax
100001df:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100001e2:	e8 fc ff ff ff       	call   100001e3 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x89>	100001e3: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
100001e7:	83 c4 0c             	add    esp,0xc
100001ea:	80 7d e0 00          	cmp    BYTE PTR [ebp-0x20],0x0
100001ee:	74 3f                	je     1000022f <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xd5>
100001f0:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
100001f3:	0f b7 c0             	movzx  eax,ax
100001f6:	50                   	push   eax
100001f7:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100001fa:	e8 fc ff ff ff       	call   100001fb <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xa1>	100001fb: R_386_PC32	EGAVGA::vinb(unsigned short)
100001ff:	83 c4 08             	add    esp,0x8
10000202:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10000205:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10000208:	3a 45 e4             	cmp    al,BYTE PTR [ebp-0x1c]
1000020b:	74 22                	je     1000022f <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xd5>
1000020d:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10000210:	83 7d f4 05          	cmp    DWORD PTR [ebp-0xc],0x5
10000214:	0f 85 59 ff ff ff    	jne    10000173 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x19>
1000021a:	83 ec 0c             	sub    esp,0xc
1000021d:	68 f4 03 00 10       	push   0x100003f4	1000021e: R_386_32	.text
10000222:	e8 fc ff ff ff       	call   10000223 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xc9>	10000223: R_386_PC32	Krnl::panic(char const*)
10000227:	83 c4 10             	add    esp,0x10
1000022a:	e9 44 ff ff ff       	jmp    10000173 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x19>
1000022f:	8a 45 f2             	mov    al,BYTE PTR [ebp-0xe]
10000232:	c9                   	leave  
10000233:	c3                   	ret    
10000234:	55                   	push   ebp
10000235:	89 e5                	mov    ebp,esp
10000237:	83 ec 08             	sub    esp,0x8
1000023a:	83 ec 08             	sub    esp,0x8
1000023d:	6a 00                	push   0x0
1000023f:	6a 00                	push   0x0
10000241:	68 cf 03 00 00       	push   0x3cf
10000246:	68 ce 03 00 00       	push   0x3ce
1000024b:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000024e:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000251:	e8 fc ff ff ff       	call   10000252 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xf8>	10000252: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
10000256:	83 c4 20             	add    esp,0x20
10000259:	c9                   	leave  
1000025a:	c3                   	ret    
1000025b:	90                   	nop
1000025c:	55                   	push   ebp
1000025d:	89 e5                	mov    ebp,esp
1000025f:	83 ec 08             	sub    esp,0x8
10000262:	83 ec 08             	sub    esp,0x8
10000265:	6a 00                	push   0x0
10000267:	6a 00                	push   0x0
10000269:	68 c5 03 00 00       	push   0x3c5
1000026e:	68 c4 03 00 00       	push   0x3c4
10000273:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10000276:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000279:	e8 fc ff ff ff       	call   1000027a <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x120>	1000027a: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
1000027e:	83 c4 20             	add    esp,0x20
10000281:	c9                   	leave  
10000282:	c3                   	ret    
10000283:	90                   	nop
10000284:	90                   	nop
10000285:	c3                   	ret    
10000286:	55                   	push   ebp
10000287:	89 e5                	mov    ebp,esp
10000289:	83 ec 08             	sub    esp,0x8
1000028c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000028f:	8a 80 61 01 00 00    	mov    al,BYTE PTR [eax+0x161]
10000295:	84 c0                	test   al,al
10000297:	74 07                	je     100002a0 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x146>
10000299:	ba d5 03 00 00       	mov    edx,0x3d5
1000029e:	eb 05                	jmp    100002a5 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x14b>
100002a0:	ba b5 03 00 00       	mov    edx,0x3b5
100002a5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002a8:	8a 80 61 01 00 00    	mov    al,BYTE PTR [eax+0x161]
100002ae:	84 c0                	test   al,al
100002b0:	74 07                	je     100002b9 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x15f>
100002b2:	b8 d4 03 00 00       	mov    eax,0x3d4
100002b7:	eb 05                	jmp    100002be <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x164>
100002b9:	b8 b4 03 00 00       	mov    eax,0x3b4
100002be:	83 ec 08             	sub    esp,0x8
100002c1:	6a 00                	push   0x0
100002c3:	6a 00                	push   0x0
100002c5:	52                   	push   edx
100002c6:	50                   	push   eax
100002c7:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100002ca:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100002cd:	e8 fc ff ff ff       	call   100002ce <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x174>	100002ce: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
100002d2:	83 c4 20             	add    esp,0x20
100002d5:	c9                   	leave  
100002d6:	c3                   	ret    
100002d7:	90                   	nop
100002d8:	90                   	nop
100002d9:	c3                   	ret    
100002da:	90                   	nop
100002db:	c3                   	ret    
100002dc:	55                   	push   ebp
100002dd:	89 e5                	mov    ebp,esp
100002df:	83 ec 18             	sub    esp,0x18
100002e2:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
100002e5:	88 45 f4             	mov    BYTE PTR [ebp-0xc],al
100002e8:	0f b6 45 f4          	movzx  eax,BYTE PTR [ebp-0xc]
100002ec:	83 ec 08             	sub    esp,0x8
100002ef:	6a 01                	push   0x1
100002f1:	50                   	push   eax
100002f2:	68 cf 03 00 00       	push   0x3cf
100002f7:	68 ce 03 00 00       	push   0x3ce
100002fc:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100002ff:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000302:	e8 fc ff ff ff       	call   10000303 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x1a9>	10000303: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
10000307:	83 c4 20             	add    esp,0x20
1000030a:	90                   	nop
1000030b:	c9                   	leave  
1000030c:	c3                   	ret    
1000030d:	90                   	nop
1000030e:	55                   	push   ebp
1000030f:	89 e5                	mov    ebp,esp
10000311:	83 ec 18             	sub    esp,0x18
10000314:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000317:	88 45 f4             	mov    BYTE PTR [ebp-0xc],al
1000031a:	0f b6 45 f4          	movzx  eax,BYTE PTR [ebp-0xc]
1000031e:	83 ec 08             	sub    esp,0x8
10000321:	6a 01                	push   0x1
10000323:	50                   	push   eax
10000324:	68 c5 03 00 00       	push   0x3c5
10000329:	68 c4 03 00 00       	push   0x3c4
1000032e:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10000331:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000334:	e8 fc ff ff ff       	call   10000335 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x1db>	10000335: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
10000339:	83 c4 20             	add    esp,0x20
1000033c:	90                   	nop
1000033d:	c9                   	leave  
1000033e:	c3                   	ret    
1000033f:	90                   	nop
10000340:	55                   	push   ebp
10000341:	89 e5                	mov    ebp,esp
10000343:	83 ec 04             	sub    esp,0x4
10000346:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000349:	88 45 fc             	mov    BYTE PTR [ebp-0x4],al
1000034c:	90                   	nop
1000034d:	c9                   	leave  
1000034e:	c3                   	ret    
1000034f:	90                   	nop
10000350:	55                   	push   ebp
10000351:	89 e5                	mov    ebp,esp
10000353:	83 ec 18             	sub    esp,0x18
10000356:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000359:	88 45 f4             	mov    BYTE PTR [ebp-0xc],al
1000035c:	0f b6 4d f4          	movzx  ecx,BYTE PTR [ebp-0xc]
10000360:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000363:	8a 80 61 01 00 00    	mov    al,BYTE PTR [eax+0x161]
10000369:	84 c0                	test   al,al
1000036b:	74 07                	je     10000374 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x21a>
1000036d:	ba d5 03 00 00       	mov    edx,0x3d5
10000372:	eb 05                	jmp    10000379 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x21f>
10000374:	ba b5 03 00 00       	mov    edx,0x3b5
10000379:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000037c:	8a 80 61 01 00 00    	mov    al,BYTE PTR [eax+0x161]
10000382:	84 c0                	test   al,al
10000384:	74 07                	je     1000038d <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x233>
10000386:	b8 d4 03 00 00       	mov    eax,0x3d4
1000038b:	eb 05                	jmp    10000392 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x238>
1000038d:	b8 b4 03 00 00       	mov    eax,0x3b4
10000392:	83 ec 08             	sub    esp,0x8
10000395:	6a 01                	push   0x1
10000397:	51                   	push   ecx
10000398:	52                   	push   edx
10000399:	50                   	push   eax
1000039a:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000039d:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100003a0:	e8 fc ff ff ff       	call   100003a1 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x247>	100003a1: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
100003a5:	83 c4 20             	add    esp,0x20
100003a8:	90                   	nop
100003a9:	c9                   	leave  
100003aa:	c3                   	ret    
100003ab:	90                   	nop
100003ac:	55                   	push   ebp
100003ad:	89 e5                	mov    ebp,esp
100003af:	83 ec 04             	sub    esp,0x4
100003b2:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
100003b5:	88 45 fc             	mov    BYTE PTR [ebp-0x4],al
100003b8:	90                   	nop
100003b9:	c9                   	leave  
100003ba:	c3                   	ret    
100003bb:	90                   	nop
100003bc:	55                   	push   ebp
100003bd:	89 e5                	mov    ebp,esp
100003bf:	83 ec 04             	sub    esp,0x4
100003c2:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
100003c5:	88 45 fc             	mov    BYTE PTR [ebp-0x4],al
100003c8:	90                   	nop
100003c9:	c9                   	leave  
100003ca:	c3                   	ret    
100003cb:	90                   	nop
100003cc:	96                   	xchg   esi,eax
100003cd:	00 00                	add    BYTE PTR [eax],al
100003cf:	00 2c 01             	add    BYTE PTR [ecx+eax*1],ch
100003d2:	00 00                	add    BYTE PTR [eax],al
100003d4:	45                   	inc    ebp
100003d5:	47                   	inc    edi
100003d6:	41                   	inc    ecx
100003d7:	20 2f                	and    BYTE PTR [edi],ch
100003d9:	20 56 47             	and    BYTE PTR [esi+0x47],dl
100003dc:	41                   	inc    ecx
100003dd:	20 43 6f             	and    BYTE PTR [ebx+0x6f],al
100003e0:	6d                   	ins    DWORD PTR es:[edi],dx
100003e1:	70 61                	jo     10000444 <vtable for EGAVGA+0x2c>
100003e3:	74 69                	je     1000044e <vtable for EGAVGA+0x36>
100003e5:	62 6c 65 20          	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
100003e9:	56                   	push   esi
100003ea:	69 64 65 6f 20 43 61 72 	imul   esp,DWORD PTR [ebp+eiz*2+0x6f],0x72614320
100003f2:	64 00 45 47          	add    BYTE PTR fs:[ebp+0x47],al
100003f6:	41                   	inc    ecx
100003f7:	56                   	push   esi
100003f8:	47                   	inc    edi
100003f9:	41                   	inc    ecx
100003fa:	3a 3a                	cmp    bh,BYTE PTR [edx]
100003fc:	61                   	popa   
100003fd:	63 63 65             	arpl   WORD PTR [ebx+0x65],sp
10000400:	73 73                	jae    10000475 <EGAVGA::~EGAVGA()+0x15>
10000402:	53                   	push   ebx
10000403:	65 71 47             	gs jno 1000044d <vtable for EGAVGA+0x35>
10000406:	66 78 43             	data16 js 1000044c <vtable for EGAVGA+0x34>
10000409:	52                   	push   edx
1000040a:	54                   	push   esp
1000040b:	43                   	inc    ebx
1000040c:	20 35 20 72 65 74    	and    BYTE PTR ds:0x74657220,dh
10000412:	72 69                	jb     1000047d <EGAVGA::~EGAVGA()+0x1d>
10000414:	65 73 00             	gs jae 10000417 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x2bd>
10000417:	90                   	nop

10000418 <vtable for EGAVGA>:
	...
	10000420: R_386_32	EGAVGA::~EGAVGA()
	10000424: R_386_32	EGAVGA::~EGAVGA()
	10000428: R_386_32	EGAVGA::open(int, int, void*)
	1000042c: R_386_32	EGAVGA::close(int, int, void*)
	10000430: R_386_32	Device::hibernate()
	10000434: R_386_32	Device::wake()
	10000438: R_386_32	Device::detect()
	1000043c: R_386_32	Device::disableLegacy()
	10000440: R_386_32	Device::powerSaving(PowerSavingLevel)
	10000444: R_386_32	Video::putpixel(int, int, unsigned int)
	10000448: R_386_32	Video::putrect(int, int, int, int, unsigned int)
	1000044c: R_386_32	Video::putTGA(int, int, unsigned char*, int)
	10000450: R_386_32	Video::drawCursor(int, int, unsigned char*, int)
	10000454: R_386_32	Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
	10000458: R_386_32	Video::blit(unsigned int*, int, int, int, int)
	1000045c: R_386_32	Video::clearScreen(unsigned int)

Disassembly of section .text._ZN6EGAVGAD2Ev:

10000460 <EGAVGA::~EGAVGA()>:
10000460:	55                   	push   ebp
10000461:	89 e5                	mov    ebp,esp
10000463:	83 ec 08             	sub    esp,0x8
10000466:	ba 08 00 00 00       	mov    edx,0x8	10000467: R_386_32	vtable for EGAVGA
1000046b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000046e:	89 10                	mov    DWORD PTR [eax],edx
10000470:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000473:	83 ec 0c             	sub    esp,0xc
10000476:	50                   	push   eax
10000477:	e8 fc ff ff ff       	call   10000478 <EGAVGA::~EGAVGA()+0x18>	10000478: R_386_PC32	Video::~Video()
1000047c:	83 c4 10             	add    esp,0x10
1000047f:	90                   	nop
10000480:	c9                   	leave  
10000481:	c3                   	ret    

Disassembly of section .text._ZN6EGAVGAD0Ev:

10000482 <EGAVGA::~EGAVGA()>:
10000482:	55                   	push   ebp
10000483:	89 e5                	mov    ebp,esp
10000485:	83 ec 08             	sub    esp,0x8
10000488:	83 ec 0c             	sub    esp,0xc
1000048b:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000048e:	e8 fc ff ff ff       	call   1000048f <EGAVGA::~EGAVGA()+0xd>	1000048f: R_386_PC32	EGAVGA::~EGAVGA()
10000493:	83 c4 10             	add    esp,0x10
10000496:	83 ec 08             	sub    esp,0x8
10000499:	68 64 01 00 00       	push   0x164
1000049e:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100004a1:	e8 fc ff ff ff       	call   100004a2 <EGAVGA::~EGAVGA()+0x20>	100004a2: R_386_PC32	operator delete(void*, unsigned long)
100004a6:	83 c4 10             	add    esp,0x10
100004a9:	c9                   	leave  
100004aa:	c3                   	ret    
