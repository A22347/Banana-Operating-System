
packages/banana/32/0002/egavga.sys:     file format elf32-i386


Disassembly of section .text:

10000000 <start(Device*)-0x17>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	83 ec 0c             	sub    esp,0xc
10000009:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000000c:	e8 fc ff ff ff       	call   1000000d <start(Device*)-0xa>	1000000d: R_386_PC32	start(Device*)
10000011:	83 c4 10             	add    esp,0x10
10000014:	90                   	nop
10000015:	c9                   	leave  
10000016:	c3                   	ret    

10000017 <start(Device*)>:
10000017:	53                   	push   ebx
10000018:	83 ec 14             	sub    esp,0x14
1000001b:	68 64 01 00 00       	push   0x164
10000020:	e8 fc ff ff ff       	call   10000021 <start(Device*)+0xa>	10000021: R_386_PC32	operator new(unsigned long)
10000025:	89 c3                	mov    ebx,eax
10000027:	89 04 24             	mov    DWORD PTR [esp],eax
1000002a:	e8 fc ff ff ff       	call   1000002b <start(Device*)+0x14>	1000002b: R_386_PC32	EGAVGA::EGAVGA()
1000002f:	83 c4 08             	add    esp,0x8
10000032:	53                   	push   ebx
10000033:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000037:	e8 fc ff ff ff       	call   10000038 <start(Device*)+0x21>	10000038: R_386_PC32	Device::addChild(Device*)
1000003c:	89 1c 24             	mov    DWORD PTR [esp],ebx
1000003f:	e8 fc ff ff ff       	call   10000040 <start(Device*)+0x29>	10000040: R_386_PC32	EGAVGA::init()
10000044:	83 c4 18             	add    esp,0x18
10000047:	5b                   	pop    ebx
10000048:	c3                   	ret    
10000049:	90                   	nop

1000004a <EGAVGA::EGAVGA()>:
1000004a:	55                   	push   ebp
1000004b:	89 e5                	mov    ebp,esp
1000004d:	83 ec 08             	sub    esp,0x8
10000050:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000053:	83 ec 08             	sub    esp,0x8
10000056:	68 48 05 00 10       	push   0x10000548	10000057: R_386_32	.text
1000005b:	50                   	push   eax
1000005c:	e8 fc ff ff ff       	call   1000005d <EGAVGA::EGAVGA()+0x13>	1000005d: R_386_PC32	Video::Video(char const*)
10000061:	83 c4 10             	add    esp,0x10
10000064:	ba 08 00 00 00       	mov    edx,0x8	10000065: R_386_32	vtable for EGAVGA
10000069:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000006c:	89 10                	mov    DWORD PTR [eax],edx
1000006e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000071:	c6 80 61 01 00 00 00 	mov    BYTE PTR [eax+0x161],0x0
10000078:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000007b:	c6 80 62 01 00 00 01 	mov    BYTE PTR [eax+0x162],0x1
10000082:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000085:	c6 80 63 01 00 00 00 	mov    BYTE PTR [eax+0x163],0x0
1000008c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000008f:	8a 80 c4 00 00 00    	mov    al,BYTE PTR [eax+0xc4]
10000095:	0f b6 d0             	movzx  edx,al
10000098:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000009b:	66 c7 44 90 04 b0 03 	mov    WORD PTR [eax+edx*4+0x4],0x3b0
100000a2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000a5:	8a 80 c4 00 00 00    	mov    al,BYTE PTR [eax+0xc4]
100000ab:	0f b6 d0             	movzx  edx,al
100000ae:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000b1:	c6 44 90 06 30       	mov    BYTE PTR [eax+edx*4+0x6],0x30
100000b6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000b9:	8a 80 c4 00 00 00    	mov    al,BYTE PTR [eax+0xc4]
100000bf:	8d 50 01             	lea    edx,[eax+0x1]
100000c2:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100000c5:	88 91 c4 00 00 00    	mov    BYTE PTR [ecx+0xc4],dl
100000cb:	0f b6 d0             	movzx  edx,al
100000ce:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000d1:	8a 4c 90 07          	mov    cl,BYTE PTR [eax+edx*4+0x7]
100000d5:	83 e1 3f             	and    ecx,0x3f
100000d8:	88 4c 90 07          	mov    BYTE PTR [eax+edx*4+0x7],cl
100000dc:	90                   	nop
100000dd:	c9                   	leave  
100000de:	c3                   	ret    
100000df:	90                   	nop

100000e0 <EGAVGA::open(int, int, void*)>:
100000e0:	b8 00 00 00 00       	mov    eax,0x0
100000e5:	c3                   	ret    

100000e6 <EGAVGA::close(int, int, void*)>:
100000e6:	b8 00 00 00 00       	mov    eax,0x0
100000eb:	c3                   	ret    

100000ec <EGAVGA::vinb(unsigned short)>:
100000ec:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100000f0:	ec                   	in     al,dx
100000f1:	88 c2                	mov    dl,al
100000f3:	b8 00 00 00 00       	mov    eax,0x0
100000f8:	e6 80                	out    0x80,al
100000fa:	e6 80                	out    0x80,al
100000fc:	88 d0                	mov    al,dl
100000fe:	c3                   	ret    
100000ff:	90                   	nop

10000100 <EGAVGA::voutb(unsigned short, unsigned char)>:
10000100:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000104:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10000108:	ee                   	out    dx,al
10000109:	b8 00 00 00 00       	mov    eax,0x0
1000010e:	e6 80                	out    0x80,al
10000110:	e6 80                	out    0x80,al
10000112:	c3                   	ret    
10000113:	90                   	nop

10000114 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)>:
10000114:	57                   	push   edi
10000115:	56                   	push   esi
10000116:	53                   	push   ebx
10000117:	83 ec 10             	sub    esp,0x10
1000011a:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
1000011e:	8a 44 24 30          	mov    al,BYTE PTR [esp+0x30]
10000122:	88 44 24 0e          	mov    BYTE PTR [esp+0xe],al
10000126:	8a 44 24 34          	mov    al,BYTE PTR [esp+0x34]
1000012a:	88 44 24 0c          	mov    BYTE PTR [esp+0xc],al
1000012e:	c7 44 24 08 00 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
10000136:	eb 44                	jmp    1000017c <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x68>
10000138:	0f b6 44 24 0e       	movzx  eax,BYTE PTR [esp+0xe]
1000013d:	50                   	push   eax
1000013e:	57                   	push   edi
1000013f:	53                   	push   ebx
10000140:	e8 fc ff ff ff       	call   10000141 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x2d>	10000141: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
10000145:	83 c4 0c             	add    esp,0xc
10000148:	0f b6 44 24 0d       	movzx  eax,BYTE PTR [esp+0xd]
1000014d:	50                   	push   eax
1000014e:	56                   	push   esi
1000014f:	53                   	push   ebx
10000150:	e8 fc ff ff ff       	call   10000151 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x3d>	10000151: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
10000155:	83 c4 0c             	add    esp,0xc
10000158:	80 7c 24 0c 00       	cmp    BYTE PTR [esp+0xc],0x0
1000015d:	74 68                	je     100001c7 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xb3>
1000015f:	57                   	push   edi
10000160:	53                   	push   ebx
10000161:	e8 fc ff ff ff       	call   10000162 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x4e>	10000162: R_386_PC32	EGAVGA::vinb(unsigned short)
10000166:	83 c4 08             	add    esp,0x8
10000169:	38 44 24 0e          	cmp    BYTE PTR [esp+0xe],al
1000016d:	74 58                	je     100001c7 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xb3>
1000016f:	ff 44 24 08          	inc    DWORD PTR [esp+0x8]
10000173:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10000177:	83 f8 05             	cmp    eax,0x5
1000017a:	74 39                	je     100001b5 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xa1>
1000017c:	0f b7 74 24 28       	movzx  esi,WORD PTR [esp+0x28]
10000181:	56                   	push   esi
10000182:	53                   	push   ebx
10000183:	e8 fc ff ff ff       	call   10000184 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x70>	10000184: R_386_PC32	EGAVGA::vinb(unsigned short)
10000188:	88 44 24 15          	mov    BYTE PTR [esp+0x15],al
1000018c:	0f b6 44 24 2c       	movzx  eax,BYTE PTR [esp+0x2c]
10000191:	50                   	push   eax
10000192:	56                   	push   esi
10000193:	53                   	push   ebx
10000194:	e8 fc ff ff ff       	call   10000195 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x81>	10000195: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
10000199:	0f b7 7c 24 40       	movzx  edi,WORD PTR [esp+0x40]
1000019e:	57                   	push   edi
1000019f:	53                   	push   ebx
100001a0:	e8 fc ff ff ff       	call   100001a1 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x8d>	100001a1: R_386_PC32	EGAVGA::vinb(unsigned short)
100001a5:	88 44 24 2b          	mov    BYTE PTR [esp+0x2b],al
100001a9:	83 c4 1c             	add    esp,0x1c
100001ac:	80 7c 24 0c 00       	cmp    BYTE PTR [esp+0xc],0x0
100001b1:	74 95                	je     10000148 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x34>
100001b3:	eb 83                	jmp    10000138 <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x24>
100001b5:	83 ec 0c             	sub    esp,0xc
100001b8:	68 68 05 00 10       	push   0x10000568	100001b9: R_386_32	.text
100001bd:	e8 fc ff ff ff       	call   100001be <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xaa>	100001be: R_386_PC32	Krnl::panic(char const*)
100001c2:	83 c4 10             	add    esp,0x10
100001c5:	eb b5                	jmp    1000017c <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0x68>
100001c7:	8a 44 24 0f          	mov    al,BYTE PTR [esp+0xf]
100001cb:	83 c4 10             	add    esp,0x10
100001ce:	5b                   	pop    ebx
100001cf:	5e                   	pop    esi
100001d0:	5f                   	pop    edi
100001d1:	c3                   	ret    
100001d2:	83 ec 14             	sub    esp,0x14
100001d5:	6a 00                	push   0x0
100001d7:	6a 00                	push   0x0
100001d9:	68 cf 03 00 00       	push   0x3cf
100001de:	68 ce 03 00 00       	push   0x3ce
100001e3:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100001e7:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100001eb:	e8 fc ff ff ff       	call   100001ec <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xd8>	100001ec: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
100001f0:	83 c4 2c             	add    esp,0x2c
100001f3:	c3                   	ret    
100001f4:	83 ec 14             	sub    esp,0x14
100001f7:	6a 00                	push   0x0
100001f9:	6a 00                	push   0x0
100001fb:	68 c5 03 00 00       	push   0x3c5
10000200:	68 c4 03 00 00       	push   0x3c4
10000205:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000209:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
1000020d:	e8 fc ff ff ff       	call   1000020e <EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)+0xfa>	1000020e: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
10000212:	83 c4 2c             	add    esp,0x2c
10000215:	c3                   	ret    

10000216 <EGAVGA::accessAttrib(int, unsigned char, bool)>:
10000216:	57                   	push   edi
10000217:	56                   	push   esi
10000218:	53                   	push   ebx
10000219:	83 ec 10             	sub    esp,0x10
1000021c:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10000220:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
10000224:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
10000228:	fa                   	cli    
10000229:	ff 05 00 00 00 00    	inc    DWORD PTR ds:0x0	1000022b: R_386_32	irqDisableCounter
1000022f:	80 bb 63 01 00 00 00 	cmp    BYTE PTR [ebx+0x163],0x0
10000236:	74 10                	je     10000248 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x32>
10000238:	83 ec 0c             	sub    esp,0xc
1000023b:	53                   	push   ebx
1000023c:	e8 fc ff ff ff       	call   1000023d <EGAVGA::accessAttrib(int, unsigned char, bool)+0x27>	1000023d: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
10000241:	83 c4 10             	add    esp,0x10
10000244:	84 c0                	test   al,al
10000246:	74 0e                	je     10000256 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x40>
10000248:	83 ec 08             	sub    esp,0x8
1000024b:	6a 03                	push   0x3
1000024d:	53                   	push   ebx
1000024e:	e8 fc ff ff ff       	call   1000024f <EGAVGA::accessAttrib(int, unsigned char, bool)+0x39>	1000024f: R_386_PC32	EGAVGA::readRegister(ExtReg)
10000253:	83 c4 10             	add    esp,0x10
10000256:	83 ec 08             	sub    esp,0x8
10000259:	68 c0 03 00 00       	push   0x3c0
1000025e:	53                   	push   ebx
1000025f:	e8 fc ff ff ff       	call   10000260 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x4a>	10000260: R_386_PC32	EGAVGA::vinb(unsigned short)
10000264:	88 44 24 1e          	mov    BYTE PTR [esp+0x1e],al
10000268:	83 c4 0c             	add    esp,0xc
1000026b:	0f b6 44 24 28       	movzx  eax,BYTE PTR [esp+0x28]
10000270:	50                   	push   eax
10000271:	68 c0 03 00 00       	push   0x3c0
10000276:	53                   	push   ebx
10000277:	e8 fc ff ff ff       	call   10000278 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x62>	10000278: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
1000027c:	83 c4 08             	add    esp,0x8
1000027f:	68 c1 03 00 00       	push   0x3c1
10000284:	53                   	push   ebx
10000285:	e8 fc ff ff ff       	call   10000286 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x70>	10000286: R_386_PC32	EGAVGA::vinb(unsigned short)
1000028a:	88 44 24 1f          	mov    BYTE PTR [esp+0x1f],al
1000028e:	83 c4 10             	add    esp,0x10
10000291:	89 f0                	mov    eax,esi
10000293:	84 c0                	test   al,al
10000295:	75 3d                	jne    100002d4 <EGAVGA::accessAttrib(int, unsigned char, bool)+0xbe>
10000297:	83 ec 04             	sub    esp,0x4
1000029a:	0f b6 44 24 12       	movzx  eax,BYTE PTR [esp+0x12]
1000029f:	50                   	push   eax
100002a0:	68 c0 03 00 00       	push   0x3c0
100002a5:	53                   	push   ebx
100002a6:	e8 fc ff ff ff       	call   100002a7 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x91>	100002a7: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
100002ab:	83 c4 08             	add    esp,0x8
100002ae:	6a 03                	push   0x3
100002b0:	53                   	push   ebx
100002b1:	e8 fc ff ff ff       	call   100002b2 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x9c>	100002b2: R_386_PC32	EGAVGA::readRegister(ExtReg)
100002b6:	a1 00 00 00 00       	mov    eax,ds:0x0	100002b7: R_386_32	irqDisableCounter
100002bb:	48                   	dec    eax
100002bc:	a3 00 00 00 00       	mov    ds:0x0,eax	100002bd: R_386_32	irqDisableCounter
100002c1:	83 c4 10             	add    esp,0x10
100002c4:	85 c0                	test   eax,eax
100002c6:	75 01                	jne    100002c9 <EGAVGA::accessAttrib(int, unsigned char, bool)+0xb3>
100002c8:	fb                   	sti    
100002c9:	8a 44 24 0f          	mov    al,BYTE PTR [esp+0xf]
100002cd:	83 c4 10             	add    esp,0x10
100002d0:	5b                   	pop    ebx
100002d1:	5e                   	pop    esi
100002d2:	5f                   	pop    edi
100002d3:	c3                   	ret    
100002d4:	83 ec 04             	sub    esp,0x4
100002d7:	89 f8                	mov    eax,edi
100002d9:	0f b6 f8             	movzx  edi,al
100002dc:	57                   	push   edi
100002dd:	68 c0 03 00 00       	push   0x3c0
100002e2:	53                   	push   ebx
100002e3:	e8 fc ff ff ff       	call   100002e4 <EGAVGA::accessAttrib(int, unsigned char, bool)+0xce>	100002e4: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
100002e8:	83 c4 10             	add    esp,0x10
100002eb:	eb aa                	jmp    10000297 <EGAVGA::accessAttrib(int, unsigned char, bool)+0x81>
100002ed:	90                   	nop
100002ee:	83 ec 0c             	sub    esp,0xc
100002f1:	6a 00                	push   0x0
100002f3:	6a 00                	push   0x0
100002f5:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100002f9:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100002fd:	e8 fc ff ff ff       	call   100002fe <EGAVGA::accessAttrib(int, unsigned char, bool)+0xe8>	100002fe: R_386_PC32	EGAVGA::accessAttrib(int, unsigned char, bool)
10000302:	83 c4 1c             	add    esp,0x1c
10000305:	c3                   	ret    

10000306 <EGAVGA::readRegister(CRTCReg)>:
10000306:	83 ec 0c             	sub    esp,0xc
10000309:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000030d:	8a 90 61 01 00 00    	mov    dl,BYTE PTR [eax+0x161]
10000313:	84 d2                	test   dl,dl
10000315:	74 25                	je     1000033c <EGAVGA::readRegister(CRTCReg)+0x36>
10000317:	b9 d5 03 00 00       	mov    ecx,0x3d5
1000031c:	84 d2                	test   dl,dl
1000031e:	74 23                	je     10000343 <EGAVGA::readRegister(CRTCReg)+0x3d>
10000320:	ba d4 03 00 00       	mov    edx,0x3d4
10000325:	83 ec 08             	sub    esp,0x8
10000328:	6a 00                	push   0x0
1000032a:	6a 00                	push   0x0
1000032c:	51                   	push   ecx
1000032d:	52                   	push   edx
1000032e:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
10000332:	50                   	push   eax
10000333:	e8 fc ff ff ff       	call   10000334 <EGAVGA::readRegister(CRTCReg)+0x2e>	10000334: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
10000338:	83 c4 2c             	add    esp,0x2c
1000033b:	c3                   	ret    
1000033c:	b9 b5 03 00 00       	mov    ecx,0x3b5
10000341:	eb d9                	jmp    1000031c <EGAVGA::readRegister(CRTCReg)+0x16>
10000343:	ba b4 03 00 00       	mov    edx,0x3b4
10000348:	eb db                	jmp    10000325 <EGAVGA::readRegister(CRTCReg)+0x1f>
1000034a:	b0 fe                	mov    al,0xfe
1000034c:	c3                   	ret    
1000034d:	90                   	nop

1000034e <EGAVGA::readRegister(ExtReg)>:
1000034e:	83 ec 0c             	sub    esp,0xc
10000351:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000355:	83 7c 24 14 03       	cmp    DWORD PTR [esp+0x14],0x3
1000035a:	75 23                	jne    1000037f <EGAVGA::readRegister(ExtReg)+0x31>
1000035c:	80 b8 62 01 00 00 00 	cmp    BYTE PTR [eax+0x162],0x0
10000363:	74 13                	je     10000378 <EGAVGA::readRegister(ExtReg)+0x2a>
10000365:	ba da 03 00 00       	mov    edx,0x3da
1000036a:	52                   	push   edx
1000036b:	50                   	push   eax
1000036c:	e8 fc ff ff ff       	call   1000036d <EGAVGA::readRegister(ExtReg)+0x1f>	1000036d: R_386_PC32	EGAVGA::vinb(unsigned short)
10000371:	83 c4 08             	add    esp,0x8
10000374:	83 c4 0c             	add    esp,0xc
10000377:	c3                   	ret    
10000378:	ba ba 03 00 00       	mov    edx,0x3ba
1000037d:	eb eb                	jmp    1000036a <EGAVGA::readRegister(ExtReg)+0x1c>
1000037f:	83 ec 0c             	sub    esp,0xc
10000382:	68 8c 05 00 10       	push   0x1000058c	10000383: R_386_32	.text
10000387:	e8 fc ff ff ff       	call   10000388 <EGAVGA::readRegister(ExtReg)+0x3a>	10000388: R_386_PC32	Krnl::panic(char const*)
1000038c:	83 c4 10             	add    esp,0x10
1000038f:	b0 fe                	mov    al,0xfe
10000391:	eb e1                	jmp    10000374 <EGAVGA::readRegister(ExtReg)+0x26>
10000393:	90                   	nop
10000394:	83 ec 14             	sub    esp,0x14
10000397:	6a 01                	push   0x1
10000399:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
1000039e:	50                   	push   eax
1000039f:	68 cf 03 00 00       	push   0x3cf
100003a4:	68 ce 03 00 00       	push   0x3ce
100003a9:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100003ad:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100003b1:	e8 fc ff ff ff       	call   100003b2 <EGAVGA::readRegister(ExtReg)+0x64>	100003b2: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
100003b6:	83 c4 2c             	add    esp,0x2c
100003b9:	c3                   	ret    
100003ba:	83 ec 14             	sub    esp,0x14
100003bd:	6a 01                	push   0x1
100003bf:	0f b6 44 24 24       	movzx  eax,BYTE PTR [esp+0x24]
100003c4:	50                   	push   eax
100003c5:	68 c5 03 00 00       	push   0x3c5
100003ca:	68 c4 03 00 00       	push   0x3c4
100003cf:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100003d3:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
100003d7:	e8 fc ff ff ff       	call   100003d8 <EGAVGA::readRegister(ExtReg)+0x8a>	100003d8: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
100003dc:	83 c4 2c             	add    esp,0x2c
100003df:	c3                   	ret    
100003e0:	83 ec 0c             	sub    esp,0xc
100003e3:	6a 01                	push   0x1
100003e5:	0f b6 44 24 1c       	movzx  eax,BYTE PTR [esp+0x1c]
100003ea:	50                   	push   eax
100003eb:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100003ef:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
100003f3:	e8 fc ff ff ff       	call   100003f4 <EGAVGA::readRegister(ExtReg)+0xa6>	100003f4: R_386_PC32	EGAVGA::accessAttrib(int, unsigned char, bool)
100003f8:	83 c4 1c             	add    esp,0x1c
100003fb:	c3                   	ret    
100003fc:	53                   	push   ebx
100003fd:	83 ec 08             	sub    esp,0x8
10000400:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000404:	0f b6 5c 24 18       	movzx  ebx,BYTE PTR [esp+0x18]
10000409:	8a 90 61 01 00 00    	mov    dl,BYTE PTR [eax+0x161]
1000040f:	84 d2                	test   dl,dl
10000411:	74 25                	je     10000438 <EGAVGA::readRegister(ExtReg)+0xea>
10000413:	b9 d5 03 00 00       	mov    ecx,0x3d5
10000418:	84 d2                	test   dl,dl
1000041a:	74 23                	je     1000043f <EGAVGA::readRegister(ExtReg)+0xf1>
1000041c:	ba d4 03 00 00       	mov    edx,0x3d4
10000421:	83 ec 08             	sub    esp,0x8
10000424:	6a 01                	push   0x1
10000426:	53                   	push   ebx
10000427:	51                   	push   ecx
10000428:	52                   	push   edx
10000429:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
1000042d:	50                   	push   eax
1000042e:	e8 fc ff ff ff       	call   1000042f <EGAVGA::readRegister(ExtReg)+0xe1>	1000042f: R_386_PC32	EGAVGA::accessSeqGfxCRTC(int, int, int, unsigned char, bool)
10000433:	83 c4 28             	add    esp,0x28
10000436:	5b                   	pop    ebx
10000437:	c3                   	ret    
10000438:	b9 b5 03 00 00       	mov    ecx,0x3b5
1000043d:	eb d9                	jmp    10000418 <EGAVGA::readRegister(ExtReg)+0xca>
1000043f:	ba b4 03 00 00       	mov    edx,0x3b4
10000444:	eb db                	jmp    10000421 <EGAVGA::readRegister(ExtReg)+0xd3>
10000446:	c3                   	ret    
10000447:	90                   	nop
10000448:	83 ec 0c             	sub    esp,0xc
1000044b:	83 7c 24 14 03       	cmp    DWORD PTR [esp+0x14],0x3
10000450:	74 14                	je     10000466 <EGAVGA::readRegister(ExtReg)+0x118>
10000452:	83 ec 0c             	sub    esp,0xc
10000455:	68 8c 05 00 10       	push   0x1000058c	10000456: R_386_32	.text
1000045a:	e8 fc ff ff ff       	call   1000045b <EGAVGA::readRegister(ExtReg)+0x10d>	1000045b: R_386_PC32	Krnl::panic(char const*)
1000045f:	83 c4 10             	add    esp,0x10
10000462:	83 c4 0c             	add    esp,0xc
10000465:	c3                   	ret    
10000466:	83 ec 0c             	sub    esp,0xc
10000469:	68 b4 05 00 10       	push   0x100005b4	1000046a: R_386_32	.text
1000046e:	e8 fc ff ff ff       	call   1000046f <EGAVGA::readRegister(ExtReg)+0x121>	1000046f: R_386_PC32	Krnl::panic(char const*)
10000473:	83 c4 10             	add    esp,0x10
10000476:	eb ea                	jmp    10000462 <EGAVGA::readRegister(ExtReg)+0x114>

10000478 <EGAVGA::getUndocumentedCRTC24Bit()>:
10000478:	83 ec 14             	sub    esp,0x14
1000047b:	6a 24                	push   0x24
1000047d:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000481:	e8 fc ff ff ff       	call   10000482 <EGAVGA::getUndocumentedCRTC24Bit()+0xa>	10000482: R_386_PC32	EGAVGA::readRegister(CRTCReg)
10000486:	a8 80                	test   al,0x80
10000488:	0f 95 c0             	setne  al
1000048b:	83 c4 1c             	add    esp,0x1c
1000048e:	c3                   	ret    
1000048f:	90                   	nop

10000490 <EGAVGA::detectUndocumentedCRTC24()>:
10000490:	53                   	push   ebx
10000491:	83 ec 14             	sub    esp,0x14
10000494:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
10000498:	68 08 06 00 10       	push   0x10000608	10000499: R_386_32	.text
1000049d:	e8 fc ff ff ff       	call   1000049e <EGAVGA::detectUndocumentedCRTC24()+0xe>	1000049e: R_386_PC32	Dbg::kprintf(char const*, ...)
100004a2:	c6 83 63 01 00 00 00 	mov    BYTE PTR [ebx+0x163],0x0
100004a9:	fa                   	cli    
100004aa:	ff 05 00 00 00 00    	inc    DWORD PTR ds:0x0	100004ac: R_386_32	irqDisableCounter
100004b0:	83 c4 08             	add    esp,0x8
100004b3:	6a 03                	push   0x3
100004b5:	53                   	push   ebx
100004b6:	e8 fc ff ff ff       	call   100004b7 <EGAVGA::detectUndocumentedCRTC24()+0x27>	100004b7: R_386_PC32	EGAVGA::readRegister(ExtReg)
100004bb:	89 1c 24             	mov    DWORD PTR [esp],ebx
100004be:	e8 fc ff ff ff       	call   100004bf <EGAVGA::detectUndocumentedCRTC24()+0x2f>	100004bf: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
100004c3:	83 c4 10             	add    esp,0x10
100004c6:	84 c0                	test   al,al
100004c8:	74 13                	je     100004dd <EGAVGA::detectUndocumentedCRTC24()+0x4d>
100004ca:	a1 00 00 00 00       	mov    eax,ds:0x0	100004cb: R_386_32	irqDisableCounter
100004cf:	48                   	dec    eax
100004d0:	a3 00 00 00 00       	mov    ds:0x0,eax	100004d1: R_386_32	irqDisableCounter
100004d5:	75 01                	jne    100004d8 <EGAVGA::detectUndocumentedCRTC24()+0x48>
100004d7:	fb                   	sti    
100004d8:	83 c4 08             	add    esp,0x8
100004db:	5b                   	pop    ebx
100004dc:	c3                   	ret    
100004dd:	83 ec 04             	sub    esp,0x4
100004e0:	6a 55                	push   0x55
100004e2:	68 c0 03 00 00       	push   0x3c0
100004e7:	53                   	push   ebx
100004e8:	e8 fc ff ff ff       	call   100004e9 <EGAVGA::detectUndocumentedCRTC24()+0x59>	100004e9: R_386_PC32	EGAVGA::voutb(unsigned short, unsigned char)
100004ed:	89 1c 24             	mov    DWORD PTR [esp],ebx
100004f0:	e8 fc ff ff ff       	call   100004f1 <EGAVGA::detectUndocumentedCRTC24()+0x61>	100004f1: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
100004f5:	83 c4 10             	add    esp,0x10
100004f8:	84 c0                	test   al,al
100004fa:	74 ce                	je     100004ca <EGAVGA::detectUndocumentedCRTC24()+0x3a>
100004fc:	83 ec 08             	sub    esp,0x8
100004ff:	6a 03                	push   0x3
10000501:	53                   	push   ebx
10000502:	e8 fc ff ff ff       	call   10000503 <EGAVGA::detectUndocumentedCRTC24()+0x73>	10000503: R_386_PC32	EGAVGA::readRegister(ExtReg)
10000507:	89 1c 24             	mov    DWORD PTR [esp],ebx
1000050a:	e8 fc ff ff ff       	call   1000050b <EGAVGA::detectUndocumentedCRTC24()+0x7b>	1000050b: R_386_PC32	EGAVGA::getUndocumentedCRTC24Bit()
1000050f:	83 c4 10             	add    esp,0x10
10000512:	84 c0                	test   al,al
10000514:	75 b4                	jne    100004ca <EGAVGA::detectUndocumentedCRTC24()+0x3a>
10000516:	c6 83 63 01 00 00 01 	mov    BYTE PTR [ebx+0x163],0x1
1000051d:	83 ec 0c             	sub    esp,0xc
10000520:	68 dc 05 00 10       	push   0x100005dc	10000521: R_386_32	.text
10000525:	e8 fc ff ff ff       	call   10000526 <EGAVGA::detectUndocumentedCRTC24()+0x96>	10000526: R_386_PC32	Dbg::kprintf(char const*, ...)
1000052a:	83 c4 10             	add    esp,0x10
1000052d:	eb 9b                	jmp    100004ca <EGAVGA::detectUndocumentedCRTC24()+0x3a>
1000052f:	90                   	nop

10000530 <EGAVGA::init()>:
10000530:	83 ec 18             	sub    esp,0x18
10000533:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10000537:	e8 fc ff ff ff       	call   10000538 <EGAVGA::init()+0x8>	10000538: R_386_PC32	EGAVGA::detectUndocumentedCRTC24()
1000053c:	83 c4 1c             	add    esp,0x1c
1000053f:	c3                   	ret    
10000540:	96                   	xchg   esi,eax
10000541:	00 00                	add    BYTE PTR [eax],al
10000543:	00 2c 01             	add    BYTE PTR [ecx+eax*1],ch
10000546:	00 00                	add    BYTE PTR [eax],al
10000548:	45                   	inc    ebp
10000549:	47                   	inc    edi
1000054a:	41                   	inc    ecx
1000054b:	20 2f                	and    BYTE PTR [edi],ch
1000054d:	20 56 47             	and    BYTE PTR [esi+0x47],dl
10000550:	41                   	inc    ecx
10000551:	20 43 6f             	and    BYTE PTR [ebx+0x6f],al
10000554:	6d                   	ins    DWORD PTR es:[edi],dx
10000555:	70 61                	jo     100005b8 <EGAVGA::init()+0x88>
10000557:	74 69                	je     100005c2 <EGAVGA::init()+0x92>
10000559:	62 6c 65 20          	bound  ebp,QWORD PTR [ebp+eiz*2+0x20]
1000055d:	56                   	push   esi
1000055e:	69 64 65 6f 20 43 61 72 	imul   esp,DWORD PTR [ebp+eiz*2+0x6f],0x72614320
10000566:	64 00 45 47          	add    BYTE PTR fs:[ebp+0x47],al
1000056a:	41                   	inc    ecx
1000056b:	56                   	push   esi
1000056c:	47                   	inc    edi
1000056d:	41                   	inc    ecx
1000056e:	3a 3a                	cmp    bh,BYTE PTR [edx]
10000570:	61                   	popa   
10000571:	63 63 65             	arpl   WORD PTR [ebx+0x65],sp
10000574:	73 73                	jae    100005e9 <EGAVGA::init()+0xb9>
10000576:	53                   	push   ebx
10000577:	65 71 47             	gs jno 100005c1 <EGAVGA::init()+0x91>
1000057a:	66 78 43             	data16 js 100005c0 <EGAVGA::init()+0x90>
1000057d:	52                   	push   edx
1000057e:	54                   	push   esp
1000057f:	43                   	inc    ebx
10000580:	20 35 20 72 65 74    	and    BYTE PTR ds:0x74657220,dh
10000586:	72 69                	jb     100005f1 <EGAVGA::init()+0xc1>
10000588:	65 73 00             	gs jae 1000058b <EGAVGA::init()+0x5b>
1000058b:	00 45 47             	add    BYTE PTR [ebp+0x47],al
1000058e:	41                   	inc    ecx
1000058f:	56                   	push   esi
10000590:	47                   	inc    edi
10000591:	41                   	inc    ecx
10000592:	3a 3a                	cmp    bh,BYTE PTR [edx]
10000594:	72 65                	jb     100005fb <EGAVGA::init()+0xcb>
10000596:	61                   	popa   
10000597:	64 52                	fs push edx
10000599:	65 67 69 73 74 65 72 20 4e 	imul   esi,DWORD PTR gs:[bp+di+0x74],0x4e207265
100005a2:	4f                   	dec    edi
100005a3:	54                   	push   esp
100005a4:	20 49 4d             	and    BYTE PTR [ecx+0x4d],cl
100005a7:	50                   	push   eax
100005a8:	4c                   	dec    esp
100005a9:	45                   	inc    ebp
100005aa:	4d                   	dec    ebp
100005ab:	45                   	inc    ebp
100005ac:	4e                   	dec    esi
100005ad:	54                   	push   esp
100005ae:	45                   	inc    ebp
100005af:	44                   	inc    esp
100005b0:	00 00                	add    BYTE PTR [eax],al
100005b2:	00 00                	add    BYTE PTR [eax],al
100005b4:	43                   	inc    ebx
100005b5:	61                   	popa   
100005b6:	6e                   	outs   dx,BYTE PTR ds:[esi]
100005b7:	6e                   	outs   dx,BYTE PTR ds:[esi]
100005b8:	6f                   	outs   dx,DWORD PTR ds:[esi]
100005b9:	74 20                	je     100005db <EGAVGA::init()+0xab>
100005bb:	77 72                	ja     1000062f <vtable for EGAVGA+0x1f>
100005bd:	69 74 65 20 74 6f 20 45 	imul   esi,DWORD PTR [ebp+eiz*2+0x20],0x45206f74
100005c5:	78 74                	js     1000063b <vtable for EGAVGA+0x2b>
100005c7:	52                   	push   edx
100005c8:	65 67 3a 3a          	cmp    bh,BYTE PTR gs:[bp+si]
100005cc:	49                   	dec    ecx
100005cd:	6e                   	outs   dx,BYTE PTR ds:[esi]
100005ce:	70 75                	jo     10000645 <vtable for EGAVGA+0x35>
100005d0:	74 53                	je     10000625 <vtable for EGAVGA+0x15>
100005d2:	74 61                	je     10000635 <vtable for EGAVGA+0x25>
100005d4:	74 75                	je     1000064b <vtable for EGAVGA+0x3b>
100005d6:	73 31                	jae    10000609 <EGAVGA::init()+0xd9>
100005d8:	00 00                	add    BYTE PTR [eax],al
100005da:	00 00                	add    BYTE PTR [eax],al
100005dc:	48                   	dec    eax
100005dd:	61                   	popa   
100005de:	73 20                	jae    10000600 <EGAVGA::init()+0xd0>
100005e0:	75 6e                	jne    10000650 <vtable for EGAVGA+0x40>
100005e2:	64 6f                	outs   dx,DWORD PTR fs:[esi]
100005e4:	63 75 6d             	arpl   WORD PTR [ebp+0x6d],si
100005e7:	65 6e                	outs   dx,BYTE PTR gs:[esi]
100005e9:	74 65                	je     10000650 <vtable for EGAVGA+0x40>
100005eb:	64 20 62 69          	and    BYTE PTR fs:[edx+0x69],ah
100005ef:	74 20                	je     10000611 <vtable for EGAVGA+0x1>
100005f1:	6f                   	outs   dx,DWORD PTR ds:[esi]
100005f2:	6e                   	outs   dx,BYTE PTR ds:[esi]
100005f3:	20 43 52             	and    BYTE PTR [ebx+0x52],al
100005f6:	54                   	push   esp
100005f7:	43                   	inc    ebx
100005f8:	20 69 6e             	and    BYTE PTR [ecx+0x6e],ch
100005fb:	64 65 78 20          	fs gs js 1000061f <vtable for EGAVGA+0xf>
100005ff:	30 78 32             	xor    BYTE PTR [eax+0x32],bh
10000602:	34 2e                	xor    al,0x2e
10000604:	0a 00                	or     al,BYTE PTR [eax]
10000606:	00 00                	add    BYTE PTR [eax],al
10000608:	27                   	daa    
10000609:	65 6c                	gs ins BYTE PTR es:[edi],dx
1000060b:	6c                   	ins    BYTE PTR es:[edi],dx
1000060c:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000060d:	21 0a                	and    DWORD PTR [edx],ecx
	...

10000610 <vtable for EGAVGA>:
	...
	10000618: R_386_32	EGAVGA::~EGAVGA()
	1000061c: R_386_32	EGAVGA::~EGAVGA()
	10000620: R_386_32	EGAVGA::open(int, int, void*)
	10000624: R_386_32	EGAVGA::close(int, int, void*)
	10000628: R_386_32	Device::hibernate()
	1000062c: R_386_32	Device::wake()
	10000630: R_386_32	Device::detect()
	10000634: R_386_32	Device::disableLegacy()
	10000638: R_386_32	Device::powerSaving(PowerSavingLevel)
	1000063c: R_386_32	Video::putpixel(int, int, unsigned int)
	10000640: R_386_32	Video::putrect(int, int, int, int, unsigned int)
	10000644: R_386_32	Video::putTGA(int, int, unsigned char*, int)
	10000648: R_386_32	Video::drawCursor(int, int, unsigned char*, int)
	1000064c: R_386_32	Video::bitblit(int, int, int, int, int, int, int, unsigned int*)
	10000650: R_386_32	Video::blit(unsigned int*, int, int, int, int)
	10000654: R_386_32	Video::clearScreen(unsigned int)

Disassembly of section .text._ZN6EGAVGAD2Ev:

10000658 <EGAVGA::~EGAVGA()>:
10000658:	55                   	push   ebp
10000659:	89 e5                	mov    ebp,esp
1000065b:	83 ec 08             	sub    esp,0x8
1000065e:	ba 08 00 00 00       	mov    edx,0x8	1000065f: R_386_32	vtable for EGAVGA
10000663:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000666:	89 10                	mov    DWORD PTR [eax],edx
10000668:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000066b:	83 ec 0c             	sub    esp,0xc
1000066e:	50                   	push   eax
1000066f:	e8 fc ff ff ff       	call   10000670 <EGAVGA::~EGAVGA()+0x18>	10000670: R_386_PC32	Video::~Video()
10000674:	83 c4 10             	add    esp,0x10
10000677:	90                   	nop
10000678:	c9                   	leave  
10000679:	c3                   	ret    

Disassembly of section .text._ZN6EGAVGAD0Ev:

1000067a <EGAVGA::~EGAVGA()>:
1000067a:	55                   	push   ebp
1000067b:	89 e5                	mov    ebp,esp
1000067d:	83 ec 08             	sub    esp,0x8
10000680:	83 ec 0c             	sub    esp,0xc
10000683:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000686:	e8 fc ff ff ff       	call   10000687 <EGAVGA::~EGAVGA()+0xd>	10000687: R_386_PC32	EGAVGA::~EGAVGA()
1000068b:	83 c4 10             	add    esp,0x10
1000068e:	83 ec 08             	sub    esp,0x8
10000691:	68 64 01 00 00       	push   0x164
10000696:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000699:	e8 fc ff ff ff       	call   1000069a <EGAVGA::~EGAVGA()+0x20>	1000069a: R_386_PC32	operator delete(void*, unsigned long)
1000069e:	83 c4 10             	add    esp,0x10
100006a1:	c9                   	leave  
100006a2:	c3                   	ret    
