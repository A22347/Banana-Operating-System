
packages/banana/32/0001/clipdrwx.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <start(void*)>:
10000000:	55                   	push   ebp
10000001:	57                   	push   edi
10000002:	56                   	push   esi
10000003:	53                   	push   ebx
10000004:	83 ec 28             	sub    esp,0x28
10000007:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000009: R_386_32	screen
1000000d:	e8 fc ff ff ff       	call   1000000e <start(void*)+0xe>	1000000e: R_386_PC32	Video::getWidth()
10000012:	89 c3                	mov    ebx,eax
10000014:	58                   	pop    eax
10000015:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000017: R_386_32	screen
1000001b:	e8 fc ff ff ff       	call   1000001c <start(void*)+0x1c>	1000001c: R_386_PC32	Video::getHeight()
10000020:	5a                   	pop    edx
10000021:	89 c7                	mov    edi,eax
10000023:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000025: R_386_32	screen
10000029:	e8 fc ff ff ff       	call   1000002a <start(void*)+0x2a>	1000002a: R_386_PC32	Video::getWidth()
1000002e:	c7 04 24 1c 04 00 00 	mov    DWORD PTR [esp],0x41c
10000035:	89 c5                	mov    ebp,eax
10000037:	e8 fc ff ff ff       	call   10000038 <start(void*)+0x38>	10000038: R_386_PC32	malloc
1000003c:	59                   	pop    ecx
1000003d:	89 c6                	mov    esi,eax
1000003f:	58                   	pop    eax
10000040:	6a 20                	push   0x20
10000042:	55                   	push   ebp
10000043:	57                   	push   edi
10000044:	53                   	push   ebx
10000045:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10000047: R_386_32	screen
1000004b:	56                   	push   esi
1000004c:	e8 fc ff ff ff       	call   1000004d <start(void*)+0x4d>	1000004d: R_386_PC32	NIContext::NIContext(Video*, int, int, int, int)
10000051:	83 c4 14             	add    esp,0x14
10000054:	6a 14                	push   0x14
10000056:	e8 fc ff ff ff       	call   10000057 <start(void*)+0x57>	10000057: R_386_PC32	malloc
1000005b:	89 c3                	mov    ebx,eax
1000005d:	58                   	pop    eax
1000005e:	5a                   	pop    edx
1000005f:	56                   	push   esi
10000060:	53                   	push   ebx
10000061:	e8 fc ff ff ff       	call   10000062 <start(void*)+0x62>	10000062: R_386_PC32	NIDesktop::NIDesktop(NIContext*)
10000066:	c7 04 24 38 00 00 00 	mov    DWORD PTR [esp],0x38
1000006d:	e8 fc ff ff ff       	call   1000006e <start(void*)+0x6e>	1000006e: R_386_PC32	malloc
10000072:	5f                   	pop    edi
10000073:	5d                   	pop    ebp
10000074:	6a 01                	push   0x1
10000076:	6a 01                	push   0x1
10000078:	6a 00                	push   0x0
1000007a:	6a 00                	push   0x0
1000007c:	56                   	push   esi
1000007d:	50                   	push   eax
1000007e:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10000082:	e8 fc ff ff ff       	call   10000083 <start(void*)+0x83>	10000083: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
10000087:	83 c4 14             	add    esp,0x14
1000008a:	6a 38                	push   0x38
1000008c:	e8 fc ff ff ff       	call   1000008d <start(void*)+0x8d>	1000008d: R_386_PC32	malloc
10000091:	89 c2                	mov    edx,eax
10000093:	58                   	pop    eax
10000094:	59                   	pop    ecx
10000095:	68 40 01 00 00       	push   0x140
1000009a:	68 90 01 00 00       	push   0x190
1000009f:	6a 32                	push   0x32
100000a1:	6a 32                	push   0x32
100000a3:	56                   	push   esi
100000a4:	52                   	push   edx
100000a5:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
100000a9:	e8 fc ff ff ff       	call   100000aa <start(void*)+0xaa>	100000aa: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000ae:	83 c4 14             	add    esp,0x14
100000b1:	6a 38                	push   0x38
100000b3:	e8 fc ff ff ff       	call   100000b4 <start(void*)+0xb4>	100000b4: R_386_PC32	malloc
100000b8:	5f                   	pop    edi
100000b9:	89 c5                	mov    ebp,eax
100000bb:	58                   	pop    eax
100000bc:	68 7c 01 00 00       	push   0x17c
100000c1:	68 f4 01 00 00       	push   0x1f4
100000c6:	68 96 00 00 00       	push   0x96
100000cb:	68 c8 00 00 00       	push   0xc8
100000d0:	56                   	push   esi
100000d1:	55                   	push   ebp
100000d2:	e8 fc ff ff ff       	call   100000d3 <start(void*)+0xd3>	100000d3: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000d7:	83 c4 14             	add    esp,0x14
100000da:	6a 38                	push   0x38
100000dc:	e8 fc ff ff ff       	call   100000dd <start(void*)+0xdd>	100000dd: R_386_PC32	malloc
100000e1:	89 c7                	mov    edi,eax
100000e3:	58                   	pop    eax
100000e4:	5a                   	pop    edx
100000e5:	68 af 00 00 00       	push   0xaf
100000ea:	68 0e 01 00 00       	push   0x10e
100000ef:	68 90 01 00 00       	push   0x190
100000f4:	6a 7d                	push   0x7d
100000f6:	56                   	push   esi
100000f7:	57                   	push   edi
100000f8:	e8 fc ff ff ff       	call   100000f9 <start(void*)+0xf9>	100000f9: R_386_PC32	NIWindow::NIWindow(NIContext*, int, int, int, int)
100000fd:	83 c4 18             	add    esp,0x18
10000100:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
10000104:	51                   	push   ecx
10000105:	53                   	push   ebx
10000106:	e8 fc ff ff ff       	call   10000107 <start(void*)+0x107>	10000107: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000010b:	59                   	pop    ecx
1000010c:	5e                   	pop    esi
1000010d:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000111:	52                   	push   edx
10000112:	53                   	push   ebx
10000113:	e8 fc ff ff ff       	call   10000114 <start(void*)+0x114>	10000114: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000118:	58                   	pop    eax
10000119:	5a                   	pop    edx
1000011a:	55                   	push   ebp
1000011b:	53                   	push   ebx
1000011c:	e8 fc ff ff ff       	call   1000011d <start(void*)+0x11d>	1000011d: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10000121:	59                   	pop    ecx
10000122:	5e                   	pop    esi
10000123:	57                   	push   edi
10000124:	53                   	push   ebx
10000125:	e8 fc ff ff ff       	call   10000126 <start(void*)+0x126>	10000126: R_386_PC32	NIDesktop::addWindow(NIWindow*)
1000012a:	89 1c 24             	mov    DWORD PTR [esp],ebx
1000012d:	e8 fc ff ff ff       	call   1000012e <start(void*)+0x12e>	1000012e: R_386_PC32	NIDesktop::completeRefresh()
10000132:	83 c4 10             	add    esp,0x10
10000135:	83 ec 0c             	sub    esp,0xc
10000138:	6a 02                	push   0x2
1000013a:	e8 fc ff ff ff       	call   1000013b <start(void*)+0x13b>	1000013b: R_386_PC32	blockTask(TaskState)
1000013f:	eb f1                	jmp    10000132 <start(void*)+0x132>
10000141:	8d 76 00             	lea    esi,[esi+0x0]

10000144 <begin(void*)>:
10000144:	83 ec 18             	sub    esp,0x18
10000147:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
1000014b:	e8 fc ff ff ff       	call   1000014c <begin(void*)+0x8>	1000014c: R_386_PC32	start(void*)

10000150 <_ssfn__bitreverse16>:
10000150:	89 c2                	mov    edx,eax
10000152:	01 c0                	add    eax,eax
10000154:	d1 fa                	sar    edx,1
10000156:	25 aa aa 00 00       	and    eax,0xaaaa
1000015b:	81 e2 55 55 00 00    	and    edx,0x5555
10000161:	09 c2                	or     edx,eax
10000163:	89 d0                	mov    eax,edx
10000165:	c1 e2 02             	shl    edx,0x2
10000168:	c1 f8 02             	sar    eax,0x2
1000016b:	81 e2 cc cc 00 00    	and    edx,0xcccc
10000171:	25 33 33 00 00       	and    eax,0x3333
10000176:	09 d0                	or     eax,edx
10000178:	89 c2                	mov    edx,eax
1000017a:	c1 e0 04             	shl    eax,0x4
1000017d:	c1 fa 04             	sar    edx,0x4
10000180:	25 f0 f0 00 00       	and    eax,0xf0f0
10000185:	81 e2 0f 0f 00 00    	and    edx,0xf0f
1000018b:	09 c2                	or     edx,eax
1000018d:	89 d1                	mov    ecx,edx
1000018f:	c1 e2 08             	shl    edx,0x8
10000192:	c1 f9 08             	sar    ecx,0x8
10000195:	0f b7 c2             	movzx  eax,dx
10000198:	09 c8                	or     eax,ecx
1000019a:	c3                   	ret    

1000019b <_ssfn__zhuffman_decode>:
1000019b:	55                   	push   ebp
1000019c:	57                   	push   edi
1000019d:	56                   	push   esi
1000019e:	53                   	push   ebx
1000019f:	83 78 04 0f          	cmp    DWORD PTR [eax+0x4],0xf
100001a3:	7f 1d                	jg     100001c2 <_ssfn__zhuffman_decode+0x27>
100001a5:	8b 18                	mov    ebx,DWORD PTR [eax]
100001a7:	8d 4b 01             	lea    ecx,[ebx+0x1]
100001aa:	89 08                	mov    DWORD PTR [eax],ecx
100001ac:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
100001af:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
100001b2:	d3 e3                	shl    ebx,cl
100001b4:	83 c1 08             	add    ecx,0x8
100001b7:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
100001ba:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
100001bd:	83 f9 18             	cmp    ecx,0x18
100001c0:	eb e1                	jmp    100001a3 <_ssfn__zhuffman_decode+0x8>
100001c2:	8b 78 08             	mov    edi,DWORD PTR [eax+0x8]
100001c5:	89 f9                	mov    ecx,edi
100001c7:	81 e1 ff 01 00 00    	and    ecx,0x1ff
100001cd:	0f b7 0c 4a          	movzx  ecx,WORD PTR [edx+ecx*2]
100001d1:	89 cb                	mov    ebx,ecx
100001d3:	85 c9                	test   ecx,ecx
100001d5:	74 15                	je     100001ec <_ssfn__zhuffman_decode+0x51>
100001d7:	c1 f9 09             	sar    ecx,0x9
100001da:	89 da                	mov    edx,ebx
100001dc:	d3 ef                	shr    edi,cl
100001de:	29 48 04             	sub    DWORD PTR [eax+0x4],ecx
100001e1:	89 78 08             	mov    DWORD PTR [eax+0x8],edi
100001e4:	81 e2 ff 01 00 00    	and    edx,0x1ff
100001ea:	eb 58                	jmp    10000244 <_ssfn__zhuffman_decode+0xa9>
100001ec:	89 d5                	mov    ebp,edx
100001ee:	89 c3                	mov    ebx,eax
100001f0:	be 0a 00 00 00       	mov    esi,0xa
100001f5:	89 f8                	mov    eax,edi
100001f7:	e8 54 ff ff ff       	call   10000150 <_ssfn__bitreverse16>
100001fc:	3b 84 b5 20 04 00 00 	cmp    eax,DWORD PTR [ebp+esi*4+0x420]
10000203:	7c 03                	jl     10000208 <_ssfn__zhuffman_decode+0x6d>
10000205:	46                   	inc    esi
10000206:	eb f4                	jmp    100001fc <_ssfn__zhuffman_decode+0x61>
10000208:	83 ca ff             	or     edx,0xffffffff
1000020b:	83 fe 10             	cmp    esi,0x10
1000020e:	74 34                	je     10000244 <_ssfn__zhuffman_decode+0xa9>
10000210:	8d 14 36             	lea    edx,[esi+esi*1]
10000213:	b9 10 00 00 00       	mov    ecx,0x10
10000218:	01 ea                	add    edx,ebp
1000021a:	29 f1                	sub    ecx,esi
1000021c:	d3 f8                	sar    eax,cl
1000021e:	0f b7 8a 00 04 00 00 	movzx  ecx,WORD PTR [edx+0x400]
10000225:	0f b7 92 64 04 00 00 	movzx  edx,WORD PTR [edx+0x464]
1000022c:	29 c8                	sub    eax,ecx
1000022e:	29 73 04             	sub    DWORD PTR [ebx+0x4],esi
10000231:	89 f1                	mov    ecx,esi
10000233:	8d 84 10 d0 02 00 00 	lea    eax,[eax+edx*1+0x2d0]
1000023a:	d3 ef                	shr    edi,cl
1000023c:	89 7b 08             	mov    DWORD PTR [ebx+0x8],edi
1000023f:	0f b7 54 45 04       	movzx  edx,WORD PTR [ebp+eax*2+0x4]
10000244:	5b                   	pop    ebx
10000245:	89 d0                	mov    eax,edx
10000247:	5e                   	pop    esi
10000248:	5f                   	pop    edi
10000249:	5d                   	pop    ebp
1000024a:	c3                   	ret    

1000024b <_ssfn__zexpand>:
1000024b:	55                   	push   ebp
1000024c:	57                   	push   edi
1000024d:	56                   	push   esi
1000024e:	53                   	push   ebx
1000024f:	83 ec 0c             	sub    esp,0xc
10000252:	89 50 0c             	mov    DWORD PTR [eax+0xc],edx
10000255:	8b 78 10             	mov    edi,DWORD PTR [eax+0x10]
10000258:	8b 48 14             	mov    ecx,DWORD PTR [eax+0x14]
1000025b:	29 f9                	sub    ecx,edi
1000025d:	83 f9 08             	cmp    ecx,0x8
10000260:	74 04                	je     10000266 <_ssfn__zexpand+0x1b>
10000262:	31 c0                	xor    eax,eax
10000264:	eb 3c                	jmp    100002a2 <_ssfn__zexpand+0x57>
10000266:	80 3f 53             	cmp    BYTE PTR [edi],0x53
10000269:	75 f7                	jne    10000262 <_ssfn__zexpand+0x17>
1000026b:	80 7f 01 46          	cmp    BYTE PTR [edi+0x1],0x46
1000026f:	75 f1                	jne    10000262 <_ssfn__zexpand+0x17>
10000271:	80 7f 02 4e          	cmp    BYTE PTR [edi+0x2],0x4e
10000275:	75 eb                	jne    10000262 <_ssfn__zexpand+0x17>
10000277:	8b 6f 04             	mov    ebp,DWORD PTR [edi+0x4]
1000027a:	89 c3                	mov    ebx,eax
1000027c:	89 d6                	mov    esi,edx
1000027e:	50                   	push   eax
1000027f:	50                   	push   eax
10000280:	55                   	push   ebp
10000281:	57                   	push   edi
10000282:	e8 fc ff ff ff       	call   10000283 <_ssfn__zexpand+0x38>	10000283: R_386_PC32	realloc
10000287:	83 c4 10             	add    esp,0x10
1000028a:	85 c0                	test   eax,eax
1000028c:	74 d4                	je     10000262 <_ssfn__zexpand+0x17>
1000028e:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
10000291:	29 fe                	sub    esi,edi
10000293:	01 c6                	add    esi,eax
10000295:	01 e8                	add    eax,ebp
10000297:	89 73 0c             	mov    DWORD PTR [ebx+0xc],esi
1000029a:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
1000029d:	b8 01 00 00 00       	mov    eax,0x1
100002a2:	83 c4 0c             	add    esp,0xc
100002a5:	5b                   	pop    ebx
100002a6:	5e                   	pop    esi
100002a7:	5f                   	pop    edi
100002a8:	5d                   	pop    ebp
100002a9:	c3                   	ret    

100002aa <_ssfn__zbuild_huffman>:
100002aa:	55                   	push   ebp
100002ab:	57                   	push   edi
100002ac:	56                   	push   esi
100002ad:	53                   	push   ebx
100002ae:	89 c3                	mov    ebx,eax
100002b0:	81 ec a0 00 00 00    	sub    esp,0xa0
100002b6:	31 c0                	xor    eax,eax
100002b8:	89 0c 24             	mov    DWORD PTR [esp],ecx
100002bb:	8d 6c 24 5c          	lea    ebp,[esp+0x5c]
100002bf:	b9 11 00 00 00       	mov    ecx,0x11
100002c4:	89 ef                	mov    edi,ebp
100002c6:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
100002ca:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100002cc:	b9 00 01 00 00       	mov    ecx,0x100
100002d1:	89 df                	mov    edi,ebx
100002d3:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100002d5:	3b 04 24             	cmp    eax,DWORD PTR [esp]
100002d8:	7d 0f                	jge    100002e9 <_ssfn__zbuild_huffman+0x3f>
100002da:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
100002de:	0f b6 0c 06          	movzx  ecx,BYTE PTR [esi+eax*1]
100002e2:	40                   	inc    eax
100002e3:	ff 44 8c 5c          	inc    DWORD PTR [esp+ecx*4+0x5c]
100002e7:	eb ec                	jmp    100002d5 <_ssfn__zbuild_huffman+0x2b>
100002e9:	c7 44 24 5c 00 00 00 00 	mov    DWORD PTR [esp+0x5c],0x0
100002f1:	b9 01 00 00 00       	mov    ecx,0x1
100002f6:	b8 01 00 00 00       	mov    eax,0x1
100002fb:	89 c7                	mov    edi,eax
100002fd:	d3 e7                	shl    edi,cl
100002ff:	39 7c 8d 00          	cmp    DWORD PTR [ebp+ecx*4+0x0],edi
10000303:	0f 8f 10 01 00 00    	jg     10000419 <_ssfn__zbuild_huffman+0x16f>
10000309:	41                   	inc    ecx
1000030a:	83 f9 10             	cmp    ecx,0x10
1000030d:	75 ec                	jne    100002fb <_ssfn__zbuild_huffman+0x51>
1000030f:	31 ff                	xor    edi,edi
10000311:	31 f6                	xor    esi,esi
10000313:	b8 01 00 00 00       	mov    eax,0x1
10000318:	8b 6c 84 5c          	mov    ebp,DWORD PTR [esp+eax*4+0x5c]
1000031c:	89 7c 84 1c          	mov    DWORD PTR [esp+eax*4+0x1c],edi
10000320:	66 89 bc 43 00 04 00 00 	mov    WORD PTR [ebx+eax*2+0x400],di
10000328:	66 89 b4 43 64 04 00 00 	mov    WORD PTR [ebx+eax*2+0x464],si
10000330:	01 ef                	add    edi,ebp
10000332:	85 ed                	test   ebp,ebp
10000334:	74 11                	je     10000347 <_ssfn__zbuild_huffman+0x9d>
10000336:	ba 01 00 00 00       	mov    edx,0x1
1000033b:	88 c1                	mov    cl,al
1000033d:	d3 e2                	shl    edx,cl
1000033f:	39 fa                	cmp    edx,edi
10000341:	0f 8c d2 00 00 00    	jl     10000419 <_ssfn__zbuild_huffman+0x16f>
10000347:	89 fa                	mov    edx,edi
10000349:	b9 10 00 00 00       	mov    ecx,0x10
1000034e:	01 ff                	add    edi,edi
10000350:	29 c1                	sub    ecx,eax
10000352:	01 ee                	add    esi,ebp
10000354:	d3 e2                	shl    edx,cl
10000356:	89 94 83 20 04 00 00 	mov    DWORD PTR [ebx+eax*4+0x420],edx
1000035d:	40                   	inc    eax
1000035e:	83 f8 10             	cmp    eax,0x10
10000361:	75 b5                	jne    10000318 <_ssfn__zbuild_huffman+0x6e>
10000363:	8b 04 24             	mov    eax,DWORD PTR [esp]
10000366:	c7 83 60 04 00 00 00 00 01 00 	mov    DWORD PTR [ebx+0x460],0x10000
10000370:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000374:	31 ff                	xor    edi,edi
10000376:	3b 7c 24 08          	cmp    edi,DWORD PTR [esp+0x8]
1000037a:	0f 8d 9d 00 00 00    	jge    1000041d <_ssfn__zbuild_huffman+0x173>
10000380:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10000384:	0f b6 34 38          	movzx  esi,BYTE PTR [eax+edi*1]
10000388:	89 f2                	mov    edx,esi
1000038a:	85 f6                	test   esi,esi
1000038c:	0f 84 81 00 00 00    	je     10000413 <_ssfn__zbuild_huffman+0x169>
10000392:	8d 0c 36             	lea    ecx,[esi+esi*1]
10000395:	8b 6c b4 1c          	mov    ebp,DWORD PTR [esp+esi*4+0x1c]
10000399:	8d 04 19             	lea    eax,[ecx+ebx*1]
1000039c:	89 e9                	mov    ecx,ebp
1000039e:	89 04 24             	mov    DWORD PTR [esp],eax
100003a1:	0f b7 80 00 04 00 00 	movzx  eax,WORD PTR [eax+0x400]
100003a8:	29 c1                	sub    ecx,eax
100003aa:	89 c8                	mov    eax,ecx
100003ac:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
100003af:	0f b7 89 64 04 00 00 	movzx  ecx,WORD PTR [ecx+0x464]
100003b6:	01 c8                	add    eax,ecx
100003b8:	83 fe 09             	cmp    esi,0x9
100003bb:	88 94 03 84 04 00 00 	mov    BYTE PTR [ebx+eax*1+0x484],dl
100003c2:	66 89 bc 43 a4 05 00 00 	mov    WORD PTR [ebx+eax*2+0x5a4],di
100003ca:	7f 42                	jg     1000040e <_ssfn__zbuild_huffman+0x164>
100003cc:	88 54 24 0f          	mov    BYTE PTR [esp+0xf],dl
100003d0:	89 e8                	mov    eax,ebp
100003d2:	e8 79 fd ff ff       	call   10000150 <_ssfn__bitreverse16>
100003d7:	8a 54 24 0f          	mov    dl,BYTE PTR [esp+0xf]
100003db:	b9 10 00 00 00       	mov    ecx,0x10
100003e0:	29 f1                	sub    ecx,esi
100003e2:	d3 f8                	sar    eax,cl
100003e4:	88 d1                	mov    cl,dl
100003e6:	89 04 24             	mov    DWORD PTR [esp],eax
100003e9:	89 f2                	mov    edx,esi
100003eb:	b8 01 00 00 00       	mov    eax,0x1
100003f0:	c1 e2 09             	shl    edx,0x9
100003f3:	d3 e0                	shl    eax,cl
100003f5:	09 fa                	or     edx,edi
100003f7:	89 c1                	mov    ecx,eax
100003f9:	81 3c 24 ff 01 00 00 	cmp    DWORD PTR [esp],0x1ff
10000400:	7f 0c                	jg     1000040e <_ssfn__zbuild_huffman+0x164>
10000402:	8b 04 24             	mov    eax,DWORD PTR [esp]
10000405:	01 0c 24             	add    DWORD PTR [esp],ecx
10000408:	66 89 14 43          	mov    WORD PTR [ebx+eax*2],dx
1000040c:	eb eb                	jmp    100003f9 <_ssfn__zbuild_huffman+0x14f>
1000040e:	45                   	inc    ebp
1000040f:	89 6c b4 1c          	mov    DWORD PTR [esp+esi*4+0x1c],ebp
10000413:	47                   	inc    edi
10000414:	e9 5d ff ff ff       	jmp    10000376 <_ssfn__zbuild_huffman+0xcc>
10000419:	31 c0                	xor    eax,eax
1000041b:	eb 05                	jmp    10000422 <_ssfn__zbuild_huffman+0x178>
1000041d:	b8 01 00 00 00       	mov    eax,0x1
10000422:	81 c4 a0 00 00 00    	add    esp,0xa0
10000428:	5b                   	pop    ebx
10000429:	5e                   	pop    esi
1000042a:	5f                   	pop    edi
1000042b:	5d                   	pop    ebp
1000042c:	c3                   	ret    

1000042d <_ssfn_fc.part.1>:
1000042d:	55                   	push   ebp
1000042e:	57                   	push   edi
1000042f:	8d b8 6c f5 00 00    	lea    edi,[eax+0xf56c]
10000435:	56                   	push   esi
10000436:	53                   	push   ebx
10000437:	8d 98 28 f5 00 00    	lea    ebx,[eax+0xf528]
1000043d:	83 ec 0c             	sub    esp,0xc
10000440:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
10000443:	74 5d                	je     100004a2 <_ssfn_fc.part.1+0x75>
10000445:	31 f6                	xor    esi,esi
10000447:	8b 03                	mov    eax,DWORD PTR [ebx]
10000449:	83 3c 30 00          	cmp    DWORD PTR [eax+esi*1],0x0
1000044d:	74 35                	je     10000484 <_ssfn_fc.part.1+0x57>
1000044f:	31 ed                	xor    ebp,ebp
10000451:	8b 03                	mov    eax,DWORD PTR [ebx]
10000453:	8b 04 30             	mov    eax,DWORD PTR [eax+esi*1]
10000456:	8b 04 28             	mov    eax,DWORD PTR [eax+ebp*1]
10000459:	85 c0                	test   eax,eax
1000045b:	74 0c                	je     10000469 <_ssfn_fc.part.1+0x3c>
1000045d:	83 ec 0c             	sub    esp,0xc
10000460:	50                   	push   eax
10000461:	e8 fc ff ff ff       	call   10000462 <_ssfn_fc.part.1+0x35>	10000462: R_386_PC32	free
10000466:	83 c4 10             	add    esp,0x10
10000469:	83 c5 04             	add    ebp,0x4
1000046c:	81 fd 00 04 00 00    	cmp    ebp,0x400
10000472:	75 dd                	jne    10000451 <_ssfn_fc.part.1+0x24>
10000474:	83 ec 0c             	sub    esp,0xc
10000477:	8b 03                	mov    eax,DWORD PTR [ebx]
10000479:	ff 34 30             	push   DWORD PTR [eax+esi*1]
1000047c:	e8 fc ff ff ff       	call   1000047d <_ssfn_fc.part.1+0x50>	1000047d: R_386_PC32	free
10000481:	83 c4 10             	add    esp,0x10
10000484:	83 c6 04             	add    esi,0x4
10000487:	81 fe 00 04 00 00    	cmp    esi,0x400
1000048d:	75 b8                	jne    10000447 <_ssfn_fc.part.1+0x1a>
1000048f:	83 ec 0c             	sub    esp,0xc
10000492:	ff 33                	push   DWORD PTR [ebx]
10000494:	e8 fc ff ff ff       	call   10000495 <_ssfn_fc.part.1+0x68>	10000495: R_386_PC32	free
10000499:	c7 03 00 00 00 00    	mov    DWORD PTR [ebx],0x0
1000049f:	83 c4 10             	add    esp,0x10
100004a2:	83 c3 04             	add    ebx,0x4
100004a5:	39 fb                	cmp    ebx,edi
100004a7:	75 97                	jne    10000440 <_ssfn_fc.part.1+0x13>
100004a9:	83 c4 0c             	add    esp,0xc
100004ac:	5b                   	pop    ebx
100004ad:	5e                   	pop    esi
100004ae:	5f                   	pop    edi
100004af:	5d                   	pop    ebp
100004b0:	c3                   	ret    

100004b1 <_ssfn_l>:
100004b1:	57                   	push   edi
100004b2:	56                   	push   esi
100004b3:	53                   	push   ebx
100004b4:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
100004b8:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100004bc:	39 ce                	cmp    esi,ecx
100004be:	89 f3                	mov    ebx,esi
100004c0:	0f 9d c1             	setge  cl
100004c3:	c1 eb 1f             	shr    ebx,0x1f
100004c6:	09 d9                	or     ecx,ebx
100004c8:	89 fb                	mov    ebx,edi
100004ca:	c1 eb 1f             	shr    ebx,0x1f
100004cd:	08 d9                	or     cl,bl
100004cf:	0f 85 e9 00 00 00    	jne    100005be <_ssfn_l+0x10d>
100004d5:	39 d7                	cmp    edi,edx
100004d7:	0f 8d e1 00 00 00    	jge    100005be <_ssfn_l+0x10d>
100004dd:	8b 88 9c f5 00 00    	mov    ecx,DWORD PTR [eax+0xf59c]
100004e3:	8d 51 08             	lea    edx,[ecx+0x8]
100004e6:	8d 4f 08             	lea    ecx,[edi+0x8]
100004e9:	c1 fa 04             	sar    edx,0x4
100004ec:	c1 f9 04             	sar    ecx,0x4
100004ef:	39 ca                	cmp    edx,ecx
100004f1:	75 1a                	jne    1000050d <_ssfn_l+0x5c>
100004f3:	8b 90 a0 f5 00 00    	mov    edx,DWORD PTR [eax+0xf5a0]
100004f9:	8d 4e 08             	lea    ecx,[esi+0x8]
100004fc:	83 c2 08             	add    edx,0x8
100004ff:	c1 f9 04             	sar    ecx,0x4
10000502:	c1 fa 04             	sar    edx,0x4
10000505:	39 ca                	cmp    edx,ecx
10000507:	0f 84 b1 00 00 00    	je     100005be <_ssfn_l+0x10d>
1000050d:	89 c3                	mov    ebx,eax
1000050f:	8b 80 80 f5 00 00    	mov    eax,DWORD PTR [eax+0xf580]
10000515:	39 83 84 f5 00 00    	cmp    DWORD PTR [ebx+0xf584],eax
1000051b:	7f 3e                	jg     1000055b <_ssfn_l+0xaa>
1000051d:	05 00 02 00 00       	add    eax,0x200
10000522:	89 83 84 f5 00 00    	mov    DWORD PTR [ebx+0xf584],eax
10000528:	52                   	push   edx
10000529:	01 c0                	add    eax,eax
1000052b:	52                   	push   edx
1000052c:	50                   	push   eax
1000052d:	ff b3 6c f5 00 00    	push   DWORD PTR [ebx+0xf56c]
10000533:	e8 fc ff ff ff       	call   10000534 <_ssfn_l+0x83>	10000534: R_386_PC32	realloc
10000538:	83 c4 10             	add    esp,0x10
1000053b:	89 83 6c f5 00 00    	mov    DWORD PTR [ebx+0xf56c],eax
10000541:	85 c0                	test   eax,eax
10000543:	75 16                	jne    1000055b <_ssfn_l+0xaa>
10000545:	c7 83 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf580],0x0
1000054f:	c7 83 84 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf584],0x0
10000559:	eb 63                	jmp    100005be <_ssfn_l+0x10d>
1000055b:	83 bb 80 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf580],0x0
10000562:	75 26                	jne    1000058a <_ssfn_l+0xd9>
10000564:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
1000056a:	8b 93 94 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf594]
10000570:	66 89 10             	mov    WORD PTR [eax],dx
10000573:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000579:	8b 93 98 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf598]
1000057f:	66 89 50 02          	mov    WORD PTR [eax+0x2],dx
10000583:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
1000058a:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
10000590:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
10000596:	66 89 3c 50          	mov    WORD PTR [eax+edx*2],di
1000059a:	8b 93 80 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf580]
100005a0:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100005a6:	66 89 74 50 02       	mov    WORD PTR [eax+edx*2+0x2],si
100005ab:	89 bb 9c f5 00 00    	mov    DWORD PTR [ebx+0xf59c],edi
100005b1:	83 83 80 f5 00 00 02 	add    DWORD PTR [ebx+0xf580],0x2
100005b8:	89 b3 a0 f5 00 00    	mov    DWORD PTR [ebx+0xf5a0],esi
100005be:	5b                   	pop    ebx
100005bf:	5e                   	pop    esi
100005c0:	5f                   	pop    edi
100005c1:	c3                   	ret    

100005c2 <_ssfn_b>:
100005c2:	55                   	push   ebp
100005c3:	57                   	push   edi
100005c4:	56                   	push   esi
100005c5:	53                   	push   ebx
100005c6:	83 ec 4c             	sub    esp,0x4c
100005c9:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
100005cd:	89 4c 24 2c          	mov    DWORD PTR [esp+0x2c],ecx
100005d1:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
100005d5:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
100005d9:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100005dd:	8b 5c 24 68          	mov    ebx,DWORD PTR [esp+0x68]
100005e1:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
100005e5:	8b 6c 24 6c          	mov    ebp,DWORD PTR [esp+0x6c]
100005e9:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100005ed:	8b 7c 24 70          	mov    edi,DWORD PTR [esp+0x70]
100005f1:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
100005f5:	8b 4c 24 74          	mov    ecx,DWORD PTR [esp+0x74]
100005f9:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100005fd:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10000601:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10000605:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
1000060c:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10000610:	83 f8 04             	cmp    eax,0x4
10000613:	75 28                	jne    1000063d <_ssfn_b+0x7b>
10000615:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10000619:	8b 4c 24 2c          	mov    ecx,DWORD PTR [esp+0x2c]
1000061d:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
10000621:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10000625:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000629:	89 44 24 60          	mov    DWORD PTR [esp+0x60],eax
1000062d:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10000631:	83 c4 4c             	add    esp,0x4c
10000634:	5b                   	pop    ebx
10000635:	5e                   	pop    esi
10000636:	5f                   	pop    edi
10000637:	5d                   	pop    ebp
10000638:	e9 74 fe ff ff       	jmp    100004b1 <_ssfn_l>
1000063d:	8b 54 24 10          	mov    edx,DWORD PTR [esp+0x10]
10000641:	39 54 24 08          	cmp    DWORD PTR [esp+0x8],edx
10000645:	75 0e                	jne    10000655 <_ssfn_b+0x93>
10000647:	8b 74 24 14          	mov    esi,DWORD PTR [esp+0x14]
1000064b:	39 74 24 0c          	cmp    DWORD PTR [esp+0xc],esi
1000064f:	0f 84 19 01 00 00    	je     1000076e <_ssfn_b+0x1ac>
10000655:	be 02 00 00 00       	mov    esi,0x2
1000065a:	89 d8                	mov    eax,ebx
1000065c:	2b 44 24 08          	sub    eax,DWORD PTR [esp+0x8]
10000660:	99                   	cdq    
10000661:	f7 fe                	idiv   esi
10000663:	03 44 24 08          	add    eax,DWORD PTR [esp+0x8]
10000667:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000066b:	89 e8                	mov    eax,ebp
1000066d:	2b 44 24 0c          	sub    eax,DWORD PTR [esp+0xc]
10000671:	99                   	cdq    
10000672:	f7 fe                	idiv   esi
10000674:	03 44 24 0c          	add    eax,DWORD PTR [esp+0xc]
10000678:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
1000067c:	89 f8                	mov    eax,edi
1000067e:	29 d8                	sub    eax,ebx
10000680:	99                   	cdq    
10000681:	f7 fe                	idiv   esi
10000683:	01 c3                	add    ebx,eax
10000685:	89 c8                	mov    eax,ecx
10000687:	29 e8                	sub    eax,ebp
10000689:	99                   	cdq    
1000068a:	f7 fe                	idiv   esi
1000068c:	01 e8                	add    eax,ebp
1000068e:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10000692:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
10000696:	29 f8                	sub    eax,edi
10000698:	99                   	cdq    
10000699:	f7 fe                	idiv   esi
1000069b:	01 f8                	add    eax,edi
1000069d:	8b 7c 24 18          	mov    edi,DWORD PTR [esp+0x18]
100006a1:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
100006a5:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100006a9:	29 c8                	sub    eax,ecx
100006ab:	99                   	cdq    
100006ac:	f7 fe                	idiv   esi
100006ae:	01 c8                	add    eax,ecx
100006b0:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100006b4:	89 d8                	mov    eax,ebx
100006b6:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
100006ba:	99                   	cdq    
100006bb:	f7 fe                	idiv   esi
100006bd:	8d 0c 38             	lea    ecx,[eax+edi*1]
100006c0:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100006c4:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100006c8:	2b 44 24 1c          	sub    eax,DWORD PTR [esp+0x1c]
100006cc:	99                   	cdq    
100006cd:	f7 fe                	idiv   esi
100006cf:	8d 2c 38             	lea    ebp,[eax+edi*1]
100006d2:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100006d6:	29 d8                	sub    eax,ebx
100006d8:	99                   	cdq    
100006d9:	f7 fe                	idiv   esi
100006db:	83 ec 0c             	sub    esp,0xc
100006de:	01 d8                	add    eax,ebx
100006e0:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100006e4:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100006e8:	2b 44 24 2c          	sub    eax,DWORD PTR [esp+0x2c]
100006ec:	99                   	cdq    
100006ed:	f7 fe                	idiv   esi
100006ef:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
100006f3:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
100006f7:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100006fb:	29 c8                	sub    eax,ecx
100006fd:	99                   	cdq    
100006fe:	f7 fe                	idiv   esi
10000700:	8d 1c 08             	lea    ebx,[eax+ecx*1]
10000703:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10000707:	29 e8                	sub    eax,ebp
10000709:	99                   	cdq    
1000070a:	f7 fe                	idiv   esi
1000070c:	8d 34 28             	lea    esi,[eax+ebp*1]
1000070f:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10000713:	8d 78 01             	lea    edi,[eax+0x1]
10000716:	57                   	push   edi
10000717:	56                   	push   esi
10000718:	53                   	push   ebx
10000719:	55                   	push   ebp
1000071a:	51                   	push   ecx
1000071b:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
1000071f:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10000723:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
10000727:	ff 74 24 34          	push   DWORD PTR [esp+0x34]
1000072b:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
1000072f:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10000733:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000737:	e8 86 fe ff ff       	call   100005c2 <_ssfn_b>
1000073c:	83 c4 24             	add    esp,0x24
1000073f:	57                   	push   edi
10000740:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10000744:	ff 74 24 24          	push   DWORD PTR [esp+0x24]
10000748:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
1000074c:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
10000750:	ff 74 24 40          	push   DWORD PTR [esp+0x40]
10000754:	ff 74 24 60          	push   DWORD PTR [esp+0x60]
10000758:	56                   	push   esi
10000759:	53                   	push   ebx
1000075a:	8b 4c 24 5c          	mov    ecx,DWORD PTR [esp+0x5c]
1000075e:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10000762:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10000766:	e8 57 fe ff ff       	call   100005c2 <_ssfn_b>
1000076b:	83 c4 30             	add    esp,0x30
1000076e:	83 7c 24 30 00       	cmp    DWORD PTR [esp+0x30],0x0
10000773:	0f 85 9c fe ff ff    	jne    10000615 <_ssfn_b+0x53>
10000779:	83 c4 4c             	add    esp,0x4c
1000077c:	5b                   	pop    ebx
1000077d:	5e                   	pop    esi
1000077e:	5f                   	pop    edi
1000077f:	5d                   	pop    ebp
10000780:	c3                   	ret    

10000781 <_ssfn__zreceive>:
10000781:	56                   	push   esi
10000782:	53                   	push   ebx
10000783:	39 50 04             	cmp    DWORD PTR [eax+0x4],edx
10000786:	7d 1d                	jge    100007a5 <_ssfn__zreceive+0x24>
10000788:	8b 18                	mov    ebx,DWORD PTR [eax]
1000078a:	8d 4b 01             	lea    ecx,[ebx+0x1]
1000078d:	89 08                	mov    DWORD PTR [eax],ecx
1000078f:	8b 48 04             	mov    ecx,DWORD PTR [eax+0x4]
10000792:	0f b6 1b             	movzx  ebx,BYTE PTR [ebx]
10000795:	d3 e3                	shl    ebx,cl
10000797:	83 c1 08             	add    ecx,0x8
1000079a:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
1000079d:	89 48 04             	mov    DWORD PTR [eax+0x4],ecx
100007a0:	83 f9 18             	cmp    ecx,0x18
100007a3:	7e e3                	jle    10000788 <_ssfn__zreceive+0x7>
100007a5:	8b 70 08             	mov    esi,DWORD PTR [eax+0x8]
100007a8:	29 50 04             	sub    DWORD PTR [eax+0x4],edx
100007ab:	89 f3                	mov    ebx,esi
100007ad:	88 d1                	mov    cl,dl
100007af:	d3 eb                	shr    ebx,cl
100007b1:	88 d1                	mov    cl,dl
100007b3:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
100007b6:	bb 01 00 00 00       	mov    ebx,0x1
100007bb:	d3 e3                	shl    ebx,cl
100007bd:	8d 43 ff             	lea    eax,[ebx-0x1]
100007c0:	5b                   	pop    ebx
100007c1:	21 f0                	and    eax,esi
100007c3:	5e                   	pop    esi
100007c4:	c3                   	ret    

100007c5 <ssfn_utf8>:
100007c5:	56                   	push   esi
100007c6:	53                   	push   ebx
100007c7:	8b 4c 24 0c          	mov    ecx,DWORD PTR [esp+0xc]
100007cb:	8b 11                	mov    edx,DWORD PTR [ecx]
100007cd:	0f b6 32             	movzx  esi,BYTE PTR [edx]
100007d0:	89 f0                	mov    eax,esi
100007d2:	84 c0                	test   al,al
100007d4:	0f be d8             	movsx  ebx,al
100007d7:	78 04                	js     100007dd <ssfn_utf8+0x18>
100007d9:	89 d8                	mov    eax,ebx
100007db:	eb 7d                	jmp    1000085a <ssfn_utf8+0x95>
100007dd:	f7 c6 20 00 00 00    	test   esi,0x20
100007e3:	75 14                	jne    100007f9 <ssfn_utf8+0x34>
100007e5:	8a 42 01             	mov    al,BYTE PTR [edx+0x1]
100007e8:	c1 e3 06             	shl    ebx,0x6
100007eb:	83 e0 3f             	and    eax,0x3f
100007ee:	81 e3 c0 07 00 00    	and    ebx,0x7c0
100007f4:	42                   	inc    edx
100007f5:	09 d8                	or     eax,ebx
100007f7:	eb 5f                	jmp    10000858 <ssfn_utf8+0x93>
100007f9:	f7 c6 10 00 00 00    	test   esi,0x10
100007ff:	75 20                	jne    10000821 <ssfn_utf8+0x5c>
10000801:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
10000805:	c1 e3 0c             	shl    ebx,0xc
10000808:	c1 e0 06             	shl    eax,0x6
1000080b:	0f b7 db             	movzx  ebx,bx
1000080e:	25 c0 0f 00 00       	and    eax,0xfc0
10000813:	83 c2 02             	add    edx,0x2
10000816:	09 d8                	or     eax,ebx
10000818:	8a 1a                	mov    bl,BYTE PTR [edx]
1000081a:	83 e3 3f             	and    ebx,0x3f
1000081d:	09 d8                	or     eax,ebx
1000081f:	eb 37                	jmp    10000858 <ssfn_utf8+0x93>
10000821:	31 c0                	xor    eax,eax
10000823:	83 e6 08             	and    esi,0x8
10000826:	75 32                	jne    1000085a <ssfn_utf8+0x95>
10000828:	0f be 42 01          	movsx  eax,BYTE PTR [edx+0x1]
1000082c:	c1 e3 12             	shl    ebx,0x12
1000082f:	c1 e0 0c             	shl    eax,0xc
10000832:	81 e3 00 00 1c 00    	and    ebx,0x1c0000
10000838:	25 00 f0 03 00       	and    eax,0x3f000
1000083d:	83 c2 03             	add    edx,0x3
10000840:	09 d8                	or     eax,ebx
10000842:	8a 1a                	mov    bl,BYTE PTR [edx]
10000844:	83 e3 3f             	and    ebx,0x3f
10000847:	09 d8                	or     eax,ebx
10000849:	0f be 5a ff          	movsx  ebx,BYTE PTR [edx-0x1]
1000084d:	c1 e3 06             	shl    ebx,0x6
10000850:	81 e3 c0 0f 00 00    	and    ebx,0xfc0
10000856:	09 d8                	or     eax,ebx
10000858:	89 11                	mov    DWORD PTR [ecx],edx
1000085a:	ff 01                	inc    DWORD PTR [ecx]
1000085c:	5b                   	pop    ebx
1000085d:	5e                   	pop    esi
1000085e:	c3                   	ret    

1000085f <_ssfn_c>:
1000085f:	55                   	push   ebp
10000860:	57                   	push   edi
10000861:	56                   	push   esi
10000862:	53                   	push   ebx
10000863:	83 ec 14             	sub    esp,0x14
10000866:	c7 01 00 00 00 00    	mov    DWORD PTR [ecx],0x0
1000086c:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10000870:	85 c0                	test   eax,eax
10000872:	c7 06 00 00 00 00    	mov    DWORD PTR [esi],0x0
10000878:	0f 84 e6 00 00 00    	je     10000964 <_ssfn_c+0x105>
1000087e:	31 ff                	xor    edi,edi
10000880:	83 78 10 00          	cmp    DWORD PTR [eax+0x10],0x0
10000884:	0f 84 f3 00 00 00    	je     1000097d <_ssfn_c+0x11e>
1000088a:	85 d2                	test   edx,edx
1000088c:	0f 84 eb 00 00 00    	je     1000097d <_ssfn_c+0x11e>
10000892:	80 3a 00             	cmp    BYTE PTR [edx],0x0
10000895:	0f 84 e2 00 00 00    	je     1000097d <_ssfn_c+0x11e>
1000089b:	89 d6                	mov    esi,edx
1000089d:	89 cd                	mov    ebp,ecx
1000089f:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
100008a2:	89 c3                	mov    ebx,eax
100008a4:	85 d2                	test   edx,edx
100008a6:	74 38                	je     100008e0 <_ssfn_c+0x81>
100008a8:	8d 0c 13             	lea    ecx,[ebx+edx*1]
100008ab:	31 c0                	xor    eax,eax
100008ad:	89 0c 24             	mov    DWORD PTR [esp],ecx
100008b0:	8b 0c 24             	mov    ecx,DWORD PTR [esp]
100008b3:	0f b7 14 41          	movzx  edx,WORD PTR [ecx+eax*2]
100008b7:	66 85 d2             	test   dx,dx
100008ba:	74 24                	je     100008e0 <_ssfn_c+0x81>
100008bc:	01 da                	add    edx,ebx
100008be:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
100008c2:	8a 0a                	mov    cl,BYTE PTR [edx]
100008c4:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
100008c8:	84 c9                	test   cl,cl
100008ca:	0f 84 9e 00 00 00    	je     1000096e <_ssfn_c+0x10f>
100008d0:	3a 0f                	cmp    cl,BYTE PTR [edi]
100008d2:	0f 85 90 00 00 00    	jne    10000968 <_ssfn_c+0x109>
100008d8:	47                   	inc    edi
100008d9:	42                   	inc    edx
100008da:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
100008de:	eb e2                	jmp    100008c2 <_ssfn_c+0x63>
100008e0:	89 74 24 10          	mov    DWORD PTR [esp+0x10],esi
100008e4:	8d 44 24 10          	lea    eax,[esp+0x10]
100008e8:	50                   	push   eax
100008e9:	e8 fc ff ff ff       	call   100008ea <_ssfn_c+0x8b>	100008ea: R_386_PC32	ssfn_utf8
100008ee:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
100008f2:	29 f2                	sub    edx,esi
100008f4:	89 55 00             	mov    DWORD PTR [ebp+0x0],edx
100008f7:	5a                   	pop    edx
100008f8:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
100008fc:	89 06                	mov    DWORD PTR [esi],eax
100008fe:	03 5b 10             	add    ebx,DWORD PTR [ebx+0x10]
10000901:	89 df                	mov    edi,ebx
10000903:	31 db                	xor    ebx,ebx
10000905:	8a 17                	mov    dl,BYTE PTR [edi]
10000907:	80 fa ff             	cmp    dl,0xff
1000090a:	75 08                	jne    10000914 <_ssfn_c+0xb5>
1000090c:	81 c3 ff ff 00 00    	add    ebx,0xffff
10000912:	eb 2a                	jmp    1000093e <_ssfn_c+0xdf>
10000914:	88 d1                	mov    cl,dl
10000916:	83 e1 c0             	and    ecx,0xffffffc0
10000919:	80 f9 c0             	cmp    cl,0xc0
1000091c:	75 16                	jne    10000934 <_ssfn_c+0xd5>
1000091e:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
10000922:	c1 e2 08             	shl    edx,0x8
10000925:	83 c7 02             	add    edi,0x2
10000928:	81 e2 00 3f 00 00    	and    edx,0x3f00
1000092e:	09 ca                	or     edx,ecx
10000930:	01 d3                	add    ebx,edx
10000932:	eb 27                	jmp    1000095b <_ssfn_c+0xfc>
10000934:	80 f9 80             	cmp    cl,0x80
10000937:	75 08                	jne    10000941 <_ssfn_c+0xe2>
10000939:	83 e2 3f             	and    edx,0x3f
1000093c:	01 d3                	add    ebx,edx
1000093e:	47                   	inc    edi
1000093f:	eb 1a                	jmp    1000095b <_ssfn_c+0xfc>
10000941:	39 d8                	cmp    eax,ebx
10000943:	74 38                	je     1000097d <_ssfn_c+0x11e>
10000945:	0f b6 4f 01          	movzx  ecx,BYTE PTR [edi+0x1]
10000949:	83 e2 40             	and    edx,0x40
1000094c:	80 fa 01             	cmp    dl,0x1
1000094f:	19 d2                	sbb    edx,edx
10000951:	83 c2 06             	add    edx,0x6
10000954:	0f af d1             	imul   edx,ecx
10000957:	8d 7c 17 06          	lea    edi,[edi+edx*1+0x6]
1000095b:	43                   	inc    ebx
1000095c:	81 fb ff ff 10 00    	cmp    ebx,0x10ffff
10000962:	76 a1                	jbe    10000905 <_ssfn_c+0xa6>
10000964:	31 ff                	xor    edi,edi
10000966:	eb 15                	jmp    1000097d <_ssfn_c+0x11e>
10000968:	40                   	inc    eax
10000969:	e9 42 ff ff ff       	jmp    100008b0 <_ssfn_c+0x51>
1000096e:	29 f7                	sub    edi,esi
10000970:	05 00 f0 00 00       	add    eax,0xf000
10000975:	89 7d 00             	mov    DWORD PTR [ebp+0x0],edi
10000978:	e9 7b ff ff ff       	jmp    100008f8 <_ssfn_c+0x99>
1000097d:	83 c4 14             	add    esp,0x14
10000980:	89 f8                	mov    eax,edi
10000982:	5b                   	pop    ebx
10000983:	5e                   	pop    esi
10000984:	5f                   	pop    edi
10000985:	5d                   	pop    ebp
10000986:	c3                   	ret    

10000987 <_ssfn_zlib_decode>:
10000987:	55                   	push   ebp
10000988:	57                   	push   edi
10000989:	56                   	push   esi
1000098a:	53                   	push   ebx
1000098b:	81 ec c8 19 00 00    	sub    esp,0x19c8
10000991:	6a 08                	push   0x8
10000993:	e8 fc ff ff ff       	call   10000994 <_ssfn_zlib_decode+0xd>	10000994: R_386_PC32	malloc
10000998:	83 c4 10             	add    esp,0x10
1000099b:	89 c2                	mov    edx,eax
1000099d:	85 c0                	test   eax,eax
1000099f:	0f 84 eb 04 00 00    	je     10000e90 <_ssfn_zlib_decode+0x509>
100009a5:	8b 84 24 d0 19 00 00 	mov    eax,DWORD PTR [esp+0x19d0]
100009ac:	89 94 24 e0 09 00 00 	mov    DWORD PTR [esp+0x9e0],edx
100009b3:	89 84 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],eax
100009ba:	89 94 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],edx
100009c1:	31 c0                	xor    eax,eax
100009c3:	83 c2 08             	add    edx,0x8
100009c6:	89 94 24 e4 09 00 00 	mov    DWORD PTR [esp+0x9e4],edx
100009cd:	c6 80 a0 f9 05 10 08 	mov    BYTE PTR [eax+0x1005f9a0],0x8	100009cf: R_386_32	.bss
100009d4:	40                   	inc    eax
100009d5:	3d 90 00 00 00       	cmp    eax,0x90
100009da:	75 f1                	jne    100009cd <_ssfn_zlib_decode+0x46>
100009dc:	c6 80 a0 f9 05 10 09 	mov    BYTE PTR [eax+0x1005f9a0],0x9	100009de: R_386_32	.bss
100009e3:	40                   	inc    eax
100009e4:	3d 00 01 00 00       	cmp    eax,0x100
100009e9:	75 f1                	jne    100009dc <_ssfn_zlib_decode+0x55>
100009eb:	c6 80 a0 f9 05 10 07 	mov    BYTE PTR [eax+0x1005f9a0],0x7	100009ed: R_386_32	.bss
100009f2:	40                   	inc    eax
100009f3:	3d 18 01 00 00       	cmp    eax,0x118
100009f8:	75 f1                	jne    100009eb <_ssfn_zlib_decode+0x64>
100009fa:	c7 05 b8 fa 05 10 08 08 08 08 	mov    DWORD PTR ds:0x1005fab8,0x8080808	100009fc: R_386_32	.bss
10000a04:	c7 05 bc fa 05 10 08 08 08 08 	mov    DWORD PTR ds:0x1005fabc,0x8080808	10000a06: R_386_32	.bss
10000a0e:	31 c0                	xor    eax,eax
10000a10:	c6 80 80 f9 05 10 05 	mov    BYTE PTR [eax+0x1005f980],0x5	10000a12: R_386_32	.bss
10000a17:	40                   	inc    eax
10000a18:	83 f8 20             	cmp    eax,0x20
10000a1b:	75 f3                	jne    10000a10 <_ssfn_zlib_decode+0x89>
10000a1d:	c7 84 24 d4 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d4],0x0
10000a28:	c7 84 24 d8 09 00 00 00 00 00 00 	mov    DWORD PTR [esp+0x9d8],0x0
10000a33:	ba 01 00 00 00       	mov    edx,0x1
10000a38:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a3f:	e8 3d fd ff ff       	call   10000781 <_ssfn__zreceive>
10000a44:	ba 02 00 00 00       	mov    edx,0x2
10000a49:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10000a4d:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a54:	e8 28 fd ff ff       	call   10000781 <_ssfn__zreceive>
10000a59:	89 c6                	mov    esi,eax
10000a5b:	85 c0                	test   eax,eax
10000a5d:	0f 85 09 01 00 00    	jne    10000b6c <_ssfn_zlib_decode+0x1e5>
10000a63:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000a6a:	83 e2 07             	and    edx,0x7
10000a6d:	74 0c                	je     10000a7b <_ssfn_zlib_decode+0xf4>
10000a6f:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000a76:	e8 06 fd ff ff       	call   10000781 <_ssfn__zreceive>
10000a7b:	8b 94 24 d4 09 00 00 	mov    edx,DWORD PTR [esp+0x9d4]
10000a82:	8b 8c 24 d8 09 00 00 	mov    ecx,DWORD PTR [esp+0x9d8]
10000a89:	31 c0                	xor    eax,eax
10000a8b:	31 db                	xor    ebx,ebx
10000a8d:	85 d2                	test   edx,edx
10000a8f:	7f 14                	jg     10000aa5 <_ssfn_zlib_decode+0x11e>
10000a91:	84 db                	test   bl,bl
10000a93:	74 22                	je     10000ab7 <_ssfn_zlib_decode+0x130>
10000a95:	89 94 24 d4 09 00 00 	mov    DWORD PTR [esp+0x9d4],edx
10000a9c:	89 8c 24 d8 09 00 00 	mov    DWORD PTR [esp+0x9d8],ecx
10000aa3:	eb 12                	jmp    10000ab7 <_ssfn_zlib_decode+0x130>
10000aa5:	40                   	inc    eax
10000aa6:	83 ea 08             	sub    edx,0x8
10000aa9:	88 8c 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],cl
10000ab0:	b3 01                	mov    bl,0x1
10000ab2:	c1 e9 08             	shr    ecx,0x8
10000ab5:	eb d6                	jmp    10000a8d <_ssfn_zlib_decode+0x106>
10000ab7:	83 f8 04             	cmp    eax,0x4
10000aba:	74 1d                	je     10000ad9 <_ssfn_zlib_decode+0x152>
10000abc:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000ac3:	40                   	inc    eax
10000ac4:	8d 4a 01             	lea    ecx,[edx+0x1]
10000ac7:	89 8c 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],ecx
10000ace:	8a 12                	mov    dl,BYTE PTR [edx]
10000ad0:	88 94 04 eb 01 00 00 	mov    BYTE PTR [esp+eax*1+0x1eb],dl
10000ad7:	eb de                	jmp    10000ab7 <_ssfn_zlib_decode+0x130>
10000ad9:	0f b6 84 24 ec 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ec]
10000ae1:	0f b6 94 24 ee 01 00 00 	movzx  edx,BYTE PTR [esp+0x1ee]
10000ae9:	0f b6 9c 24 ed 01 00 00 	movzx  ebx,BYTE PTR [esp+0x1ed]
10000af1:	c1 e3 08             	shl    ebx,0x8
10000af4:	01 c3                	add    ebx,eax
10000af6:	0f b6 84 24 ef 01 00 00 	movzx  eax,BYTE PTR [esp+0x1ef]
10000afe:	c1 e0 08             	shl    eax,0x8
10000b01:	01 d0                	add    eax,edx
10000b03:	89 da                	mov    edx,ebx
10000b05:	81 f2 ff ff 00 00    	xor    edx,0xffff
10000b0b:	39 d0                	cmp    eax,edx
10000b0d:	0f 85 69 03 00 00    	jne    10000e7c <_ssfn_zlib_decode+0x4f5>
10000b13:	8b 94 24 dc 09 00 00 	mov    edx,DWORD PTR [esp+0x9dc]
10000b1a:	8d 04 1a             	lea    eax,[edx+ebx*1]
10000b1d:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000b24:	73 14                	jae    10000b3a <_ssfn_zlib_decode+0x1b3>
10000b26:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000b2d:	e8 19 f7 ff ff       	call   1000024b <_ssfn__zexpand>
10000b32:	85 c0                	test   eax,eax
10000b34:	0f 84 42 03 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000b3a:	8b 94 24 d0 09 00 00 	mov    edx,DWORD PTR [esp+0x9d0]
10000b41:	8b 84 24 dc 09 00 00 	mov    eax,DWORD PTR [esp+0x9dc]
10000b48:	39 f3                	cmp    ebx,esi
10000b4a:	74 09                	je     10000b55 <_ssfn_zlib_decode+0x1ce>
10000b4c:	8a 14 32             	mov    dl,BYTE PTR [edx+esi*1]
10000b4f:	88 14 30             	mov    BYTE PTR [eax+esi*1],dl
10000b52:	46                   	inc    esi
10000b53:	eb e5                	jmp    10000b3a <_ssfn_zlib_decode+0x1b3>
10000b55:	01 da                	add    edx,ebx
10000b57:	01 c3                	add    ebx,eax
10000b59:	89 94 24 d0 09 00 00 	mov    DWORD PTR [esp+0x9d0],edx
10000b60:	89 9c 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebx
10000b67:	e9 fc 02 00 00       	jmp    10000e68 <_ssfn_zlib_decode+0x4e1>
10000b6c:	83 f8 03             	cmp    eax,0x3
10000b6f:	0f 84 07 03 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000b75:	4e                   	dec    esi
10000b76:	75 2d                	jne    10000ba5 <_ssfn_zlib_decode+0x21e>
10000b78:	b9 20 01 00 00       	mov    ecx,0x120
10000b7d:	ba a0 f9 05 10       	mov    edx,0x1005f9a0	10000b7e: R_386_32	.bss
10000b82:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000b89:	e8 1c f7 ff ff       	call   100002aa <_ssfn__zbuild_huffman>
10000b8e:	85 c0                	test   eax,eax
10000b90:	0f 84 e6 02 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000b96:	b9 20 00 00 00       	mov    ecx,0x20
10000b9b:	ba 80 f9 05 10       	mov    edx,0x1005f980	10000b9c: R_386_32	.bss
10000ba0:	e9 78 01 00 00       	jmp    10000d1d <_ssfn_zlib_decode+0x396>
10000ba5:	ba 05 00 00 00       	mov    edx,0x5
10000baa:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bb1:	8d 5c 24 12          	lea    ebx,[esp+0x12]
10000bb5:	e8 c7 fb ff ff       	call   10000781 <_ssfn__zreceive>
10000bba:	89 df                	mov    edi,ebx
10000bbc:	ba 05 00 00 00       	mov    edx,0x5
10000bc1:	89 c5                	mov    ebp,eax
10000bc3:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bca:	e8 b2 fb ff ff       	call   10000781 <_ssfn__zreceive>
10000bcf:	ba 04 00 00 00       	mov    edx,0x4
10000bd4:	89 c6                	mov    esi,eax
10000bd6:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000bdd:	e8 9f fb ff ff       	call   10000781 <_ssfn__zreceive>
10000be2:	b9 13 00 00 00       	mov    ecx,0x13
10000be7:	83 c0 04             	add    eax,0x4
10000bea:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000bee:	31 c0                	xor    eax,eax
10000bf0:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000bf2:	31 ff                	xor    edi,edi
10000bf4:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10000bf8:	7e 1f                	jle    10000c19 <_ssfn_zlib_decode+0x292>
10000bfa:	ba 03 00 00 00       	mov    edx,0x3
10000bff:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c06:	47                   	inc    edi
10000c07:	e8 75 fb ff ff       	call   10000781 <_ssfn__zreceive>
10000c0c:	0f b6 97 5f 48 00 10 	movzx  edx,BYTE PTR [edi+0x1000485f]	10000c0f: R_386_32	.text
10000c13:	88 44 14 12          	mov    BYTE PTR [esp+edx*1+0x12],al
10000c17:	eb db                	jmp    10000bf4 <_ssfn_zlib_decode+0x26d>
10000c19:	b9 13 00 00 00       	mov    ecx,0x13
10000c1e:	89 da                	mov    edx,ebx
10000c20:	8d 84 24 ec 01 00 00 	lea    eax,[esp+0x1ec]
10000c27:	e8 7e f6 ff ff       	call   100002aa <_ssfn__zbuild_huffman>
10000c2c:	85 c0                	test   eax,eax
10000c2e:	0f 84 48 02 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000c34:	8d 46 01             	lea    eax,[esi+0x1]
10000c37:	81 c5 01 01 00 00    	add    ebp,0x101
10000c3d:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10000c41:	31 f6                	xor    esi,esi
10000c43:	01 e8                	add    eax,ebp
10000c45:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10000c49:	39 74 24 08          	cmp    DWORD PTR [esp+0x8],esi
10000c4d:	0f 8e 9f 00 00 00    	jle    10000cf2 <_ssfn_zlib_decode+0x36b>
10000c53:	8d 94 24 ec 01 00 00 	lea    edx,[esp+0x1ec]
10000c5a:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c61:	e8 35 f5 ff ff       	call   1000019b <_ssfn__zhuffman_decode>
10000c66:	83 f8 12             	cmp    eax,0x12
10000c69:	0f 87 0d 02 00 00    	ja     10000e7c <_ssfn_zlib_decode+0x4f5>
10000c6f:	83 f8 0f             	cmp    eax,0xf
10000c72:	7f 07                	jg     10000c7b <_ssfn_zlib_decode+0x2f4>
10000c74:	88 44 34 25          	mov    BYTE PTR [esp+esi*1+0x25],al
10000c78:	46                   	inc    esi
10000c79:	eb ce                	jmp    10000c49 <_ssfn_zlib_decode+0x2c2>
10000c7b:	83 f8 10             	cmp    eax,0x10
10000c7e:	75 22                	jne    10000ca2 <_ssfn_zlib_decode+0x31b>
10000c80:	ba 02 00 00 00       	mov    edx,0x2
10000c85:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000c8c:	e8 f0 fa ff ff       	call   10000781 <_ssfn__zreceive>
10000c91:	85 f6                	test   esi,esi
10000c93:	8d 58 03             	lea    ebx,[eax+0x3]
10000c96:	0f 84 e0 01 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000c9c:	8a 44 34 24          	mov    al,BYTE PTR [esp+esi*1+0x24]
10000ca0:	eb 31                	jmp    10000cd3 <_ssfn_zlib_decode+0x34c>
10000ca2:	83 f8 11             	cmp    eax,0x11
10000ca5:	75 16                	jne    10000cbd <_ssfn_zlib_decode+0x336>
10000ca7:	ba 03 00 00 00       	mov    edx,0x3
10000cac:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cb3:	e8 c9 fa ff ff       	call   10000781 <_ssfn__zreceive>
10000cb8:	8d 58 03             	lea    ebx,[eax+0x3]
10000cbb:	eb 14                	jmp    10000cd1 <_ssfn_zlib_decode+0x34a>
10000cbd:	ba 07 00 00 00       	mov    edx,0x7
10000cc2:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000cc9:	e8 b3 fa ff ff       	call   10000781 <_ssfn__zreceive>
10000cce:	8d 58 0b             	lea    ebx,[eax+0xb]
10000cd1:	31 c0                	xor    eax,eax
10000cd3:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10000cd7:	29 f2                	sub    edx,esi
10000cd9:	39 da                	cmp    edx,ebx
10000cdb:	0f 8c 9b 01 00 00    	jl     10000e7c <_ssfn_zlib_decode+0x4f5>
10000ce1:	8d 54 34 25          	lea    edx,[esp+esi*1+0x25]
10000ce5:	89 d9                	mov    ecx,ebx
10000ce7:	89 d7                	mov    edi,edx
10000ce9:	01 de                	add    esi,ebx
10000ceb:	f3 aa                	rep stos BYTE PTR es:[edi],al
10000ced:	e9 57 ff ff ff       	jmp    10000c49 <_ssfn_zlib_decode+0x2c2>
10000cf2:	0f 85 84 01 00 00    	jne    10000e7c <_ssfn_zlib_decode+0x4f5>
10000cf8:	89 e9                	mov    ecx,ebp
10000cfa:	8d 54 24 25          	lea    edx,[esp+0x25]
10000cfe:	8d 84 24 e8 09 00 00 	lea    eax,[esp+0x9e8]
10000d05:	e8 a0 f5 ff ff       	call   100002aa <_ssfn__zbuild_huffman>
10000d0a:	85 c0                	test   eax,eax
10000d0c:	0f 84 6a 01 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000d12:	8d 44 24 25          	lea    eax,[esp+0x25]
10000d16:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10000d1a:	8d 14 28             	lea    edx,[eax+ebp*1]
10000d1d:	8d 84 24 cc 11 00 00 	lea    eax,[esp+0x11cc]
10000d24:	e8 81 f5 ff ff       	call   100002aa <_ssfn__zbuild_huffman>
10000d29:	85 c0                	test   eax,eax
10000d2b:	0f 84 4b 01 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000d31:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d38:	8d 94 24 e8 09 00 00 	lea    edx,[esp+0x9e8]
10000d3f:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d46:	e8 50 f4 ff ff       	call   1000019b <_ssfn__zhuffman_decode>
10000d4b:	89 c3                	mov    ebx,eax
10000d4d:	3d ff 00 00 00       	cmp    eax,0xff
10000d52:	7f 34                	jg     10000d88 <_ssfn_zlib_decode+0x401>
10000d54:	85 c0                	test   eax,eax
10000d56:	0f 88 20 01 00 00    	js     10000e7c <_ssfn_zlib_decode+0x4f5>
10000d5c:	39 ac 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],ebp
10000d63:	77 1d                	ja     10000d82 <_ssfn_zlib_decode+0x3fb>
10000d65:	89 ea                	mov    edx,ebp
10000d67:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000d6e:	e8 d8 f4 ff ff       	call   1000024b <_ssfn__zexpand>
10000d73:	85 c0                	test   eax,eax
10000d75:	0f 84 01 01 00 00    	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000d7b:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000d82:	88 5d 00             	mov    BYTE PTR [ebp+0x0],bl
10000d85:	45                   	inc    ebp
10000d86:	eb b0                	jmp    10000d38 <_ssfn_zlib_decode+0x3b1>
10000d88:	3d 00 01 00 00       	cmp    eax,0x100
10000d8d:	75 0c                	jne    10000d9b <_ssfn_zlib_decode+0x414>
10000d8f:	89 ac 24 dc 09 00 00 	mov    DWORD PTR [esp+0x9dc],ebp
10000d96:	e9 cd 00 00 00       	jmp    10000e68 <_ssfn_zlib_decode+0x4e1>
10000d9b:	8d 80 ff fe ff ff    	lea    eax,[eax-0x101]
10000da1:	8b 14 85 80 49 00 10 	mov    edx,DWORD PTR [eax*4+0x10004980]	10000da4: R_386_32	.text
10000da8:	8b 1c 85 00 4a 00 10 	mov    ebx,DWORD PTR [eax*4+0x10004a00]	10000dab: R_386_32	.text
10000daf:	85 d2                	test   edx,edx
10000db1:	74 0e                	je     10000dc1 <_ssfn_zlib_decode+0x43a>
10000db3:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000dba:	e8 c2 f9 ff ff       	call   10000781 <_ssfn__zreceive>
10000dbf:	01 c3                	add    ebx,eax
10000dc1:	8d 94 24 cc 11 00 00 	lea    edx,[esp+0x11cc]
10000dc8:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000dcf:	e8 c7 f3 ff ff       	call   1000019b <_ssfn__zhuffman_decode>
10000dd4:	85 c0                	test   eax,eax
10000dd6:	0f 88 a0 00 00 00    	js     10000e7c <_ssfn_zlib_decode+0x4f5>
10000ddc:	8b 14 85 80 48 00 10 	mov    edx,DWORD PTR [eax*4+0x10004880]	10000ddf: R_386_32	.text
10000de3:	8b 3c 85 00 49 00 10 	mov    edi,DWORD PTR [eax*4+0x10004900]	10000de6: R_386_32	.text
10000dea:	85 d2                	test   edx,edx
10000dec:	74 0e                	je     10000dfc <_ssfn_zlib_decode+0x475>
10000dee:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000df5:	e8 87 f9 ff ff       	call   10000781 <_ssfn__zreceive>
10000dfa:	01 c7                	add    edi,eax
10000dfc:	89 e8                	mov    eax,ebp
10000dfe:	2b 84 24 e0 09 00 00 	sub    eax,DWORD PTR [esp+0x9e0]
10000e05:	39 f8                	cmp    eax,edi
10000e07:	7c 73                	jl     10000e7c <_ssfn_zlib_decode+0x4f5>
10000e09:	8d 44 1d 00          	lea    eax,[ebp+ebx*1+0x0]
10000e0d:	39 84 24 e4 09 00 00 	cmp    DWORD PTR [esp+0x9e4],eax
10000e14:	73 19                	jae    10000e2f <_ssfn_zlib_decode+0x4a8>
10000e16:	89 ea                	mov    edx,ebp
10000e18:	8d 84 24 d0 09 00 00 	lea    eax,[esp+0x9d0]
10000e1f:	e8 27 f4 ff ff       	call   1000024b <_ssfn__zexpand>
10000e24:	85 c0                	test   eax,eax
10000e26:	74 54                	je     10000e7c <_ssfn_zlib_decode+0x4f5>
10000e28:	8b ac 24 dc 09 00 00 	mov    ebp,DWORD PTR [esp+0x9dc]
10000e2f:	89 ee                	mov    esi,ebp
10000e31:	29 fe                	sub    esi,edi
10000e33:	4f                   	dec    edi
10000e34:	75 19                	jne    10000e4f <_ssfn_zlib_decode+0x4c8>
10000e36:	85 db                	test   ebx,ebx
10000e38:	0f 84 fa fe ff ff    	je     10000d38 <_ssfn_zlib_decode+0x3b1>
10000e3e:	8a 06                	mov    al,BYTE PTR [esi]
10000e40:	01 eb                	add    ebx,ebp
10000e42:	45                   	inc    ebp
10000e43:	88 45 ff             	mov    BYTE PTR [ebp-0x1],al
10000e46:	39 dd                	cmp    ebp,ebx
10000e48:	75 f8                	jne    10000e42 <_ssfn_zlib_decode+0x4bb>
10000e4a:	e9 e9 fe ff ff       	jmp    10000d38 <_ssfn_zlib_decode+0x3b1>
10000e4f:	85 db                	test   ebx,ebx
10000e51:	0f 84 e1 fe ff ff    	je     10000d38 <_ssfn_zlib_decode+0x3b1>
10000e57:	8d 04 1e             	lea    eax,[esi+ebx*1]
10000e5a:	89 ef                	mov    edi,ebp
10000e5c:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000e5d:	39 f0                	cmp    eax,esi
10000e5f:	75 fb                	jne    10000e5c <_ssfn_zlib_decode+0x4d5>
10000e61:	01 dd                	add    ebp,ebx
10000e63:	e9 d0 fe ff ff       	jmp    10000d38 <_ssfn_zlib_decode+0x3b1>
10000e68:	83 7c 24 0c 00       	cmp    DWORD PTR [esp+0xc],0x0
10000e6d:	0f 84 c0 fb ff ff    	je     10000a33 <_ssfn_zlib_decode+0xac>
10000e73:	8b 84 24 e0 09 00 00 	mov    eax,DWORD PTR [esp+0x9e0]
10000e7a:	eb 14                	jmp    10000e90 <_ssfn_zlib_decode+0x509>
10000e7c:	83 ec 0c             	sub    esp,0xc
10000e7f:	ff b4 24 ec 09 00 00 	push   DWORD PTR [esp+0x9ec]
10000e86:	e8 fc ff ff ff       	call   10000e87 <_ssfn_zlib_decode+0x500>	10000e87: R_386_PC32	free
10000e8b:	83 c4 10             	add    esp,0x10
10000e8e:	31 c0                	xor    eax,eax
10000e90:	81 c4 bc 19 00 00    	add    esp,0x19bc
10000e96:	5b                   	pop    ebx
10000e97:	5e                   	pop    esi
10000e98:	5f                   	pop    edi
10000e99:	5d                   	pop    ebp
10000e9a:	c3                   	ret    

10000e9b <ssfn_load>:
10000e9b:	55                   	push   ebp
10000e9c:	57                   	push   edi
10000e9d:	56                   	push   esi
10000e9e:	53                   	push   ebx
10000e9f:	83 ec 1c             	sub    esp,0x1c
10000ea2:	8b 7c 24 30          	mov    edi,DWORD PTR [esp+0x30]
10000ea6:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
10000eaa:	85 ff                	test   edi,edi
10000eac:	0f 84 d0 01 00 00    	je     10001082 <ssfn_load+0x1e7>
10000eb2:	85 f6                	test   esi,esi
10000eb4:	0f 84 c8 01 00 00    	je     10001082 <ssfn_load+0x1e7>
10000eba:	80 3e 1f             	cmp    BYTE PTR [esi],0x1f
10000ebd:	0f 85 a8 00 00 00    	jne    10000f6b <ssfn_load+0xd0>
10000ec3:	80 7e 01 8b          	cmp    BYTE PTR [esi+0x1],0x8b
10000ec7:	0f 85 9e 00 00 00    	jne    10000f6b <ssfn_load+0xd0>
10000ecd:	80 7e 02 08          	cmp    BYTE PTR [esi+0x2],0x8
10000ed1:	74 0a                	je     10000edd <ssfn_load+0x42>
10000ed3:	bd fe ff ff ff       	mov    ebp,0xfffffffe
10000ed8:	e9 aa 01 00 00       	jmp    10001087 <ssfn_load+0x1ec>
10000edd:	8a 46 03             	mov    al,BYTE PTR [esi+0x3]
10000ee0:	a8 04                	test   al,0x4
10000ee2:	75 05                	jne    10000ee9 <ssfn_load+0x4e>
10000ee4:	83 c6 0a             	add    esi,0xa
10000ee7:	eb 08                	jmp    10000ef1 <ssfn_load+0x56>
10000ee9:	0f b6 56 0a          	movzx  edx,BYTE PTR [esi+0xa]
10000eed:	8d 74 16 0c          	lea    esi,[esi+edx*1+0xc]
10000ef1:	a8 08                	test   al,0x8
10000ef3:	74 07                	je     10000efc <ssfn_load+0x61>
10000ef5:	46                   	inc    esi
10000ef6:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000efa:	eb f7                	jmp    10000ef3 <ssfn_load+0x58>
10000efc:	a8 10                	test   al,0x10
10000efe:	74 07                	je     10000f07 <ssfn_load+0x6c>
10000f00:	46                   	inc    esi
10000f01:	80 7e ff 00          	cmp    BYTE PTR [esi-0x1],0x0
10000f05:	eb f7                	jmp    10000efe <ssfn_load+0x63>
10000f07:	83 ec 0c             	sub    esp,0xc
10000f0a:	56                   	push   esi
10000f0b:	e8 fc ff ff ff       	call   10000f0c <ssfn_load+0x71>	10000f0c: R_386_PC32	_ssfn_zlib_decode
10000f10:	83 c4 10             	add    esp,0x10
10000f13:	89 c6                	mov    esi,eax
10000f15:	85 c0                	test   eax,eax
10000f17:	74 ba                	je     10000ed3 <ssfn_load+0x38>
10000f19:	50                   	push   eax
10000f1a:	50                   	push   eax
10000f1b:	8b 87 78 f5 00 00    	mov    eax,DWORD PTR [edi+0xf578]
10000f21:	8d 04 85 04 00 00 00 	lea    eax,[eax*4+0x4]
10000f28:	50                   	push   eax
10000f29:	ff b7 70 f5 00 00    	push   DWORD PTR [edi+0xf570]
10000f2f:	e8 fc ff ff ff       	call   10000f30 <ssfn_load+0x95>	10000f30: R_386_PC32	realloc
10000f34:	83 c4 10             	add    esp,0x10
10000f37:	89 87 70 f5 00 00    	mov    DWORD PTR [edi+0xf570],eax
10000f3d:	85 c0                	test   eax,eax
10000f3f:	75 0f                	jne    10000f50 <ssfn_load+0xb5>
10000f41:	c7 87 78 f5 00 00 00 00 00 00 	mov    DWORD PTR [edi+0xf578],0x0
10000f4b:	e9 1a 01 00 00       	jmp    1000106a <ssfn_load+0x1cf>
10000f50:	8b 97 78 f5 00 00    	mov    edx,DWORD PTR [edi+0xf578]
10000f56:	8d 4a 01             	lea    ecx,[edx+0x1]
10000f59:	89 8f 78 f5 00 00    	mov    DWORD PTR [edi+0xf578],ecx
10000f5f:	89 34 90             	mov    DWORD PTR [eax+edx*4],esi
10000f62:	8b 46 04             	mov    eax,DWORD PTR [esi+0x4]
10000f65:	01 87 7c f5 00 00    	add    DWORD PTR [edi+0xf57c],eax
10000f6b:	50                   	push   eax
10000f6c:	6a 04                	push   0x4
10000f6e:	68 41 47 00 10       	push   0x10004741	10000f6f: R_386_32	.text
10000f73:	56                   	push   esi
10000f74:	e8 fc ff ff ff       	call   10000f75 <ssfn_load+0xda>	10000f75: R_386_PC32	memcmp
10000f79:	83 c4 10             	add    esp,0x10
10000f7c:	89 c5                	mov    ebp,eax
10000f7e:	85 c0                	test   eax,eax
10000f80:	75 29                	jne    10000fab <ssfn_load+0x110>
10000f82:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000f85:	01 f3                	add    ebx,esi
10000f87:	83 c6 08             	add    esi,0x8
10000f8a:	39 de                	cmp    esi,ebx
10000f8c:	0f 83 f5 00 00 00    	jae    10001087 <ssfn_load+0x1ec>
10000f92:	50                   	push   eax
10000f93:	50                   	push   eax
10000f94:	56                   	push   esi
10000f95:	57                   	push   edi
10000f96:	e8 fc ff ff ff       	call   10000f97 <ssfn_load+0xfc>	10000f97: R_386_PC32	ssfn_load
10000f9b:	83 c4 10             	add    esp,0x10
10000f9e:	85 c0                	test   eax,eax
10000fa0:	0f 85 e1 00 00 00    	jne    10001087 <ssfn_load+0x1ec>
10000fa6:	03 76 04             	add    esi,DWORD PTR [esi+0x4]
10000fa9:	eb df                	jmp    10000f8a <ssfn_load+0xef>
10000fab:	8a 46 08             	mov    al,BYTE PTR [esi+0x8]
10000fae:	83 e0 0f             	and    eax,0xf
10000fb1:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
10000fb5:	53                   	push   ebx
10000fb6:	6a 04                	push   0x4
10000fb8:	68 46 47 00 10       	push   0x10004746	10000fb9: R_386_32	.text
10000fbd:	56                   	push   esi
10000fbe:	e8 fc ff ff ff       	call   10000fbf <ssfn_load+0x124>	10000fbf: R_386_PC32	memcmp
10000fc3:	83 c4 10             	add    esp,0x10
10000fc6:	89 c5                	mov    ebp,eax
10000fc8:	85 c0                	test   eax,eax
10000fca:	0f 85 03 ff ff ff    	jne    10000ed3 <ssfn_load+0x38>
10000fd0:	8b 5e 04             	mov    ebx,DWORD PTR [esi+0x4]
10000fd3:	8d 44 1e fc          	lea    eax,[esi+ebx*1-0x4]
10000fd7:	51                   	push   ecx
10000fd8:	6a 04                	push   0x4
10000fda:	68 4b 47 00 10       	push   0x1000474b	10000fdb: R_386_32	.text
10000fdf:	50                   	push   eax
10000fe0:	e8 fc ff ff ff       	call   10000fe1 <ssfn_load+0x146>	10000fe1: R_386_PC32	memcmp
10000fe5:	83 c4 10             	add    esp,0x10
10000fe8:	85 c0                	test   eax,eax
10000fea:	0f 85 e3 fe ff ff    	jne    10000ed3 <ssfn_load+0x38>
10000ff0:	80 7c 24 0f 04       	cmp    BYTE PTR [esp+0xf],0x4
10000ff5:	0f 87 d8 fe ff ff    	ja     10000ed3 <ssfn_load+0x38>
10000ffb:	0f b7 4e 0e          	movzx  ecx,WORD PTR [esi+0xe]
10000fff:	39 cb                	cmp    ebx,ecx
10001001:	0f 86 cc fe ff ff    	jbe    10000ed3 <ssfn_load+0x38>
10001007:	8b 46 10             	mov    eax,DWORD PTR [esi+0x10]
1000100a:	39 c3                	cmp    ebx,eax
1000100c:	0f 86 c1 fe ff ff    	jbe    10000ed3 <ssfn_load+0x38>
10001012:	3b 5e 14             	cmp    ebx,DWORD PTR [esi+0x14]
10001015:	0f 86 b8 fe ff ff    	jbe    10000ed3 <ssfn_load+0x38>
1000101b:	3b 5e 18             	cmp    ebx,DWORD PTR [esi+0x18]
1000101e:	0f 86 af fe ff ff    	jbe    10000ed3 <ssfn_load+0x38>
10001024:	3b 5e 1c             	cmp    ebx,DWORD PTR [esi+0x1c]
10001027:	0f 86 a6 fe ff ff    	jbe    10000ed3 <ssfn_load+0x38>
1000102d:	39 c1                	cmp    ecx,eax
1000102f:	0f 83 9e fe ff ff    	jae    10000ed3 <ssfn_load+0x38>
10001035:	0f b6 5c 24 0f       	movzx  ebx,BYTE PTR [esp+0xf]
1000103a:	8d 1c 9f             	lea    ebx,[edi+ebx*4]
1000103d:	8b 83 a4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5a4]
10001043:	40                   	inc    eax
10001044:	89 83 a4 f5 00 00    	mov    DWORD PTR [ebx+0xf5a4],eax
1000104a:	52                   	push   edx
1000104b:	c1 e0 02             	shl    eax,0x2
1000104e:	52                   	push   edx
1000104f:	50                   	push   eax
10001050:	ff 33                	push   DWORD PTR [ebx]
10001052:	e8 fc ff ff ff       	call   10001053 <ssfn_load+0x1b8>	10001053: R_386_PC32	realloc
10001057:	83 c4 10             	add    esp,0x10
1000105a:	89 03                	mov    DWORD PTR [ebx],eax
1000105c:	85 c0                	test   eax,eax
1000105e:	75 0f                	jne    1000106f <ssfn_load+0x1d4>
10001060:	c7 83 a4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5a4],0x0
1000106a:	83 cd ff             	or     ebp,0xffffffff
1000106d:	eb 18                	jmp    10001087 <ssfn_load+0x1ec>
1000106f:	8b 93 a4 f5 00 00    	mov    edx,DWORD PTR [ebx+0xf5a4]
10001075:	89 74 90 fc          	mov    DWORD PTR [eax+edx*4-0x4],esi
10001079:	89 f8                	mov    eax,edi
1000107b:	e8 ad f3 ff ff       	call   1000042d <_ssfn_fc.part.1>
10001080:	eb 05                	jmp    10001087 <ssfn_load+0x1ec>
10001082:	bd fc ff ff ff       	mov    ebp,0xfffffffc
10001087:	83 c4 1c             	add    esp,0x1c
1000108a:	89 e8                	mov    eax,ebp
1000108c:	5b                   	pop    ebx
1000108d:	5e                   	pop    esi
1000108e:	5f                   	pop    edi
1000108f:	5d                   	pop    ebp
10001090:	c3                   	ret    

10001091 <ssfn_free>:
10001091:	57                   	push   edi
10001092:	56                   	push   esi
10001093:	53                   	push   ebx
10001094:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10001098:	85 db                	test   ebx,ebx
1000109a:	74 7e                	je     1000111a <ssfn_free+0x89>
1000109c:	89 d8                	mov    eax,ebx
1000109e:	e8 8a f3 ff ff       	call   1000042d <_ssfn_fc.part.1>
100010a3:	83 bb 70 f5 00 00 00 	cmp    DWORD PTR [ebx+0xf570],0x0
100010aa:	74 32                	je     100010de <ssfn_free+0x4d>
100010ac:	31 f6                	xor    esi,esi
100010ae:	8b 83 70 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf570]
100010b4:	39 b3 78 f5 00 00    	cmp    DWORD PTR [ebx+0xf578],esi
100010ba:	7e 16                	jle    100010d2 <ssfn_free+0x41>
100010bc:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
100010bf:	85 c0                	test   eax,eax
100010c1:	74 0c                	je     100010cf <ssfn_free+0x3e>
100010c3:	83 ec 0c             	sub    esp,0xc
100010c6:	50                   	push   eax
100010c7:	e8 fc ff ff ff       	call   100010c8 <ssfn_free+0x37>	100010c8: R_386_PC32	free
100010cc:	83 c4 10             	add    esp,0x10
100010cf:	46                   	inc    esi
100010d0:	eb dc                	jmp    100010ae <ssfn_free+0x1d>
100010d2:	83 ec 0c             	sub    esp,0xc
100010d5:	50                   	push   eax
100010d6:	e8 fc ff ff ff       	call   100010d7 <ssfn_free+0x46>	100010d7: R_386_PC32	free
100010db:	83 c4 10             	add    esp,0x10
100010de:	31 f6                	xor    esi,esi
100010e0:	8b 04 b3             	mov    eax,DWORD PTR [ebx+esi*4]
100010e3:	85 c0                	test   eax,eax
100010e5:	74 0c                	je     100010f3 <ssfn_free+0x62>
100010e7:	83 ec 0c             	sub    esp,0xc
100010ea:	50                   	push   eax
100010eb:	e8 fc ff ff ff       	call   100010ec <ssfn_free+0x5b>	100010ec: R_386_PC32	free
100010f0:	83 c4 10             	add    esp,0x10
100010f3:	46                   	inc    esi
100010f4:	83 fe 05             	cmp    esi,0x5
100010f7:	75 e7                	jne    100010e0 <ssfn_free+0x4f>
100010f9:	8b 83 6c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf56c]
100010ff:	85 c0                	test   eax,eax
10001101:	74 0c                	je     1000110f <ssfn_free+0x7e>
10001103:	83 ec 0c             	sub    esp,0xc
10001106:	50                   	push   eax
10001107:	e8 fc ff ff ff       	call   10001108 <ssfn_free+0x77>	10001108: R_386_PC32	free
1000110c:	83 c4 10             	add    esp,0x10
1000110f:	b9 72 3d 00 00       	mov    ecx,0x3d72
10001114:	31 c0                	xor    eax,eax
10001116:	89 df                	mov    edi,ebx
10001118:	f3 ab                	rep stos DWORD PTR es:[edi],eax
1000111a:	5b                   	pop    ebx
1000111b:	5e                   	pop    esi
1000111c:	5f                   	pop    edi
1000111d:	c3                   	ret    

1000111e <ssfn_mem>:
1000111e:	55                   	push   ebp
1000111f:	31 c0                	xor    eax,eax
10001121:	57                   	push   edi
10001122:	56                   	push   esi
10001123:	53                   	push   ebx
10001124:	83 ec 08             	sub    esp,0x8
10001127:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
1000112b:	85 d2                	test   edx,edx
1000112d:	0f 84 8e 00 00 00    	je     100011c1 <ssfn_mem+0xa3>
10001133:	b8 c8 f5 00 00       	mov    eax,0xf5c8
10001138:	31 c9                	xor    ecx,ecx
1000113a:	8b 9c 8a a4 f5 00 00 	mov    ebx,DWORD PTR [edx+ecx*4+0xf5a4]
10001141:	41                   	inc    ecx
10001142:	8d 04 98             	lea    eax,[eax+ebx*4]
10001145:	83 f9 05             	cmp    ecx,0x5
10001148:	75 f0                	jne    1000113a <ssfn_mem+0x1c>
1000114a:	03 82 7c f5 00 00    	add    eax,DWORD PTR [edx+0xf57c]
10001150:	31 c9                	xor    ecx,ecx
10001152:	8b b4 8a 28 f5 00 00 	mov    esi,DWORD PTR [edx+ecx*4+0xf528]
10001159:	89 34 24             	mov    DWORD PTR [esp],esi
1000115c:	85 f6                	test   esi,esi
1000115e:	74 48                	je     100011a8 <ssfn_mem+0x8a>
10001160:	31 db                	xor    ebx,ebx
10001162:	8b 34 24             	mov    esi,DWORD PTR [esp]
10001165:	8b 3c 9e             	mov    edi,DWORD PTR [esi+ebx*4]
10001168:	89 7c 24 04          	mov    DWORD PTR [esp+0x4],edi
1000116c:	85 ff                	test   edi,edi
1000116e:	74 2a                	je     1000119a <ssfn_mem+0x7c>
10001170:	31 f6                	xor    esi,esi
10001172:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
10001176:	8b 2c b7             	mov    ebp,DWORD PTR [edi+esi*4]
10001179:	85 ed                	test   ebp,ebp
1000117b:	74 0f                	je     1000118c <ssfn_mem+0x6e>
1000117d:	0f b7 7d 00          	movzx  edi,WORD PTR [ebp+0x0]
10001181:	0f b6 6d 02          	movzx  ebp,BYTE PTR [ebp+0x2]
10001185:	0f af fd             	imul   edi,ebp
10001188:	8d 44 38 08          	lea    eax,[eax+edi*1+0x8]
1000118c:	46                   	inc    esi
1000118d:	81 fe 00 01 00 00    	cmp    esi,0x100
10001193:	75 dd                	jne    10001172 <ssfn_mem+0x54>
10001195:	05 00 04 00 00       	add    eax,0x400
1000119a:	43                   	inc    ebx
1000119b:	81 fb 00 01 00 00    	cmp    ebx,0x100
100011a1:	75 bf                	jne    10001162 <ssfn_mem+0x44>
100011a3:	05 00 04 00 00       	add    eax,0x400
100011a8:	41                   	inc    ecx
100011a9:	83 f9 11             	cmp    ecx,0x11
100011ac:	75 a4                	jne    10001152 <ssfn_mem+0x34>
100011ae:	83 ba 6c f5 00 00 00 	cmp    DWORD PTR [edx+0xf56c],0x0
100011b5:	74 0a                	je     100011c1 <ssfn_mem+0xa3>
100011b7:	8b 92 84 f5 00 00    	mov    edx,DWORD PTR [edx+0xf584]
100011bd:	01 d2                	add    edx,edx
100011bf:	01 d0                	add    eax,edx
100011c1:	83 c4 08             	add    esp,0x8
100011c4:	5b                   	pop    ebx
100011c5:	5e                   	pop    esi
100011c6:	5f                   	pop    edi
100011c7:	5d                   	pop    ebp
100011c8:	c3                   	ret    

100011c9 <ssfn_select>:
100011c9:	55                   	push   ebp
100011ca:	57                   	push   edi
100011cb:	56                   	push   esi
100011cc:	53                   	push   ebx
100011cd:	83 ec 1c             	sub    esp,0x1c
100011d0:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
100011d4:	85 db                	test   ebx,ebx
100011d6:	75 0a                	jne    100011e2 <ssfn_select+0x19>
100011d8:	be fc ff ff ff       	mov    esi,0xfffffffc
100011dd:	e9 13 01 00 00       	jmp    100012f5 <ssfn_select+0x12c>
100011e2:	89 d8                	mov    eax,ebx
100011e4:	e8 44 f2 ff ff       	call   1000042d <_ssfn_fc.part.1>
100011e9:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
100011ed:	81 e6 00 e0 ff ff    	and    esi,0xffffe000
100011f3:	0f 85 e9 00 00 00    	jne    100012e2 <ssfn_select+0x119>
100011f9:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100011fd:	83 e8 08             	sub    eax,0x8
10001200:	3d b8 00 00 00       	cmp    eax,0xb8
10001205:	0f 87 de 00 00 00    	ja     100012e9 <ssfn_select+0x120>
1000120b:	81 7c 24 34 fe 00 00 00 	cmp    DWORD PTR [esp+0x34],0xfe
10001213:	75 76                	jne    1000128b <ssfn_select+0xc2>
10001215:	83 7c 24 38 00       	cmp    DWORD PTR [esp+0x38],0x0
1000121a:	74 bc                	je     100011d8 <ssfn_select+0xf>
1000121c:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001220:	80 38 00             	cmp    BYTE PTR [eax],0x0
10001223:	74 b3                	je     100011d8 <ssfn_select+0xf>
10001225:	31 ed                	xor    ebp,ebp
10001227:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
1000122b:	80 3c 28 00          	cmp    BYTE PTR [eax+ebp*1],0x0
1000122f:	74 03                	je     10001234 <ssfn_select+0x6b>
10001231:	45                   	inc    ebp
10001232:	eb f3                	jmp    10001227 <ssfn_select+0x5e>
10001234:	8d 43 14             	lea    eax,[ebx+0x14]
10001237:	89 df                	mov    edi,ebx
10001239:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
1000123d:	8b 87 a4 f5 00 00    	mov    eax,DWORD PTR [edi+0xf5a4]
10001243:	31 d2                	xor    edx,edx
10001245:	89 04 24             	mov    DWORD PTR [esp],eax
10001248:	39 14 24             	cmp    DWORD PTR [esp],edx
1000124b:	7e 33                	jle    10001280 <ssfn_select+0xb7>
1000124d:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
10001251:	8b 07                	mov    eax,DWORD PTR [edi]
10001253:	8b 0c 90             	mov    ecx,DWORD PTR [eax+edx*4]
10001256:	50                   	push   eax
10001257:	8d 41 20             	lea    eax,[ecx+0x20]
1000125a:	55                   	push   ebp
1000125b:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
1000125f:	50                   	push   eax
10001260:	ff 74 24 44          	push   DWORD PTR [esp+0x44]
10001264:	e8 fc ff ff ff       	call   10001265 <ssfn_select+0x9c>	10001265: R_386_PC32	memcmp
10001269:	83 c4 10             	add    esp,0x10
1000126c:	85 c0                	test   eax,eax
1000126e:	8b 4c 24 08          	mov    ecx,DWORD PTR [esp+0x8]
10001272:	8b 54 24 0c          	mov    edx,DWORD PTR [esp+0xc]
10001276:	75 05                	jne    1000127d <ssfn_select+0xb4>
10001278:	89 4b 14             	mov    DWORD PTR [ebx+0x14],ecx
1000127b:	eb 34                	jmp    100012b1 <ssfn_select+0xe8>
1000127d:	42                   	inc    edx
1000127e:	eb c8                	jmp    10001248 <ssfn_select+0x7f>
10001280:	83 c7 04             	add    edi,0x4
10001283:	39 7c 24 04          	cmp    DWORD PTR [esp+0x4],edi
10001287:	75 b4                	jne    1000123d <ssfn_select+0x74>
10001289:	eb 65                	jmp    100012f0 <ssfn_select+0x127>
1000128b:	81 7c 24 34 ff 00 00 00 	cmp    DWORD PTR [esp+0x34],0xff
10001293:	74 15                	je     100012aa <ssfn_select+0xe1>
10001295:	83 7c 24 34 04       	cmp    DWORD PTR [esp+0x34],0x4
1000129a:	7f 54                	jg     100012f0 <ssfn_select+0x127>
1000129c:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100012a0:	83 bc 83 a4 f5 00 00 00 	cmp    DWORD PTR [ebx+eax*4+0xf5a4],0x0
100012a8:	74 46                	je     100012f0 <ssfn_select+0x127>
100012aa:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
100012b1:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100012b5:	c7 43 18 00 00 00 00 	mov    DWORD PTR [ebx+0x18],0x0
100012bc:	89 83 b8 f5 00 00    	mov    DWORD PTR [ebx+0xf5b8],eax
100012c2:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
100012cc:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
100012d0:	89 83 bc f5 00 00    	mov    DWORD PTR [ebx+0xf5bc],eax
100012d6:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
100012da:	89 83 c0 f5 00 00    	mov    DWORD PTR [ebx+0xf5c0],eax
100012e0:	eb 13                	jmp    100012f5 <ssfn_select+0x12c>
100012e2:	be fb ff ff ff       	mov    esi,0xfffffffb
100012e7:	eb 0c                	jmp    100012f5 <ssfn_select+0x12c>
100012e9:	be fa ff ff ff       	mov    esi,0xfffffffa
100012ee:	eb 05                	jmp    100012f5 <ssfn_select+0x12c>
100012f0:	be fd ff ff ff       	mov    esi,0xfffffffd
100012f5:	83 c4 1c             	add    esp,0x1c
100012f8:	89 f0                	mov    eax,esi
100012fa:	5b                   	pop    ebx
100012fb:	5e                   	pop    esi
100012fc:	5f                   	pop    edi
100012fd:	5d                   	pop    ebp
100012fe:	c3                   	ret    

100012ff <ssfn_render>:
100012ff:	55                   	push   ebp
10001300:	57                   	push   edi
10001301:	56                   	push   esi
10001302:	53                   	push   ebx
10001303:	81 ec cc 05 01 00    	sub    esp,0x105cc
10001309:	8b ac 24 e0 05 01 00 	mov    ebp,DWORD PTR [esp+0x105e0]
10001310:	c7 84 24 b8 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xb8],0x0
1000131b:	85 ed                	test   ebp,ebp
1000131d:	0f 94 c2             	sete   dl
10001320:	83 bc 24 e8 05 01 00 00 	cmp    DWORD PTR [esp+0x105e8],0x0
10001328:	0f 94 c0             	sete   al
1000132b:	08 c2                	or     dl,al
1000132d:	74 0a                	je     10001339 <ssfn_render+0x3a>
1000132f:	b9 fc ff ff ff       	mov    ecx,0xfffffffc
10001334:	e9 86 1d 00 00       	jmp    100030bf <ssfn_render+0x1dc0>
10001339:	8b 84 24 e8 05 01 00 	mov    eax,DWORD PTR [esp+0x105e8]
10001340:	31 c9                	xor    ecx,ecx
10001342:	8a 00                	mov    al,BYTE PTR [eax]
10001344:	84 c0                	test   al,al
10001346:	0f 84 73 1d 00 00    	je     100030bf <ssfn_render+0x1dc0>
1000134c:	3c 0d                	cmp    al,0xd
1000134e:	75 0f                	jne    1000135f <ssfn_render+0x60>
10001350:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
10001357:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
1000135d:	eb 31                	jmp    10001390 <ssfn_render+0x91>
1000135f:	3c 0a                	cmp    al,0xa
10001361:	75 37                	jne    1000139a <ssfn_render+0x9b>
10001363:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
1000136a:	66 c7 40 0a 00 00    	mov    WORD PTR [eax+0xa],0x0
10001370:	8b 50 0c             	mov    edx,DWORD PTR [eax+0xc]
10001373:	8b 85 c4 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c4]
10001379:	85 c0                	test   eax,eax
1000137b:	75 06                	jne    10001383 <ssfn_render+0x84>
1000137d:	8b 85 c0 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5c0]
10001383:	01 d0                	add    eax,edx
10001385:	8b b4 24 e4 05 01 00 	mov    esi,DWORD PTR [esp+0x105e4]
1000138c:	66 89 46 0c          	mov    WORD PTR [esi+0xc],ax
10001390:	b9 01 00 00 00       	mov    ecx,0x1
10001395:	e9 25 1d 00 00       	jmp    100030bf <ssfn_render+0x1dc0>
1000139a:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000139d:	85 c0                	test   eax,eax
1000139f:	74 3e                	je     100013df <ssfn_render+0xe0>
100013a1:	89 45 18             	mov    DWORD PTR [ebp+0x18],eax
100013a4:	8d b4 24 b0 00 00 00 	lea    esi,[esp+0xb0]
100013ab:	56                   	push   esi
100013ac:	8d 8c 24 bc 00 00 00 	lea    ecx,[esp+0xbc]
100013b3:	8b 94 24 ec 05 01 00 	mov    edx,DWORD PTR [esp+0x105ec]
100013ba:	e8 a0 f4 ff ff       	call   1000085f <_ssfn_c>
100013bf:	5b                   	pop    ebx
100013c0:	85 c0                	test   eax,eax
100013c2:	0f 85 16 02 00 00    	jne    100015de <ssfn_render+0x2df>
100013c8:	8b 95 bc f5 00 00    	mov    edx,DWORD PTR [ebp+0xf5bc]
100013ce:	81 e2 00 01 00 00    	and    edx,0x100
100013d4:	0f 84 a2 01 00 00    	je     1000157c <ssfn_render+0x27d>
100013da:	e9 c2 01 00 00       	jmp    100015a1 <ssfn_render+0x2a2>
100013df:	8b b5 b8 f5 00 00    	mov    esi,DWORD PTR [ebp+0xf5b8]
100013e5:	c7 45 18 00 00 00 00 	mov    DWORD PTR [ebp+0x18],0x0
100013ec:	81 fe fd 00 00 00    	cmp    esi,0xfd
100013f2:	89 34 24             	mov    DWORD PTR [esp],esi
100013f5:	0f 4e c6             	cmovle eax,esi
100013f8:	89 c3                	mov    ebx,eax
100013fa:	b8 04 00 00 00       	mov    eax,0x4
100013ff:	0f 4e c6             	cmovle eax,esi
10001402:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10001406:	31 c0                	xor    eax,eax
10001408:	3b 5c 24 04          	cmp    ebx,DWORD PTR [esp+0x4]
1000140c:	0f 8f 3f 01 00 00    	jg     10001551 <ssfn_render+0x252>
10001412:	8b 74 9d 00          	mov    esi,DWORD PTR [ebp+ebx*4+0x0]
10001416:	f6 85 bc f5 00 00 03 	test   BYTE PTR [ebp+0xf5bc],0x3
1000141d:	0f 84 cc 00 00 00    	je     100014ef <ssfn_render+0x1f0>
10001423:	c7 84 24 bc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xbc],0x0
1000142e:	8b 94 24 bc 00 00 00 	mov    edx,DWORD PTR [esp+0xbc]
10001435:	39 94 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],edx
1000143c:	7e 50                	jle    1000148e <ssfn_render+0x18f>
1000143e:	8b 3c 96             	mov    edi,DWORD PTR [esi+edx*4]
10001441:	0f b6 57 08          	movzx  edx,BYTE PTR [edi+0x8]
10001445:	c1 fa 04             	sar    edx,0x4
10001448:	33 95 bc f5 00 00    	xor    edx,DWORD PTR [ebp+0xf5bc]
1000144e:	80 e2 03             	and    dl,0x3
10001451:	75 32                	jne    10001485 <ssfn_render+0x186>
10001453:	0f b6 57 0b          	movzx  edx,BYTE PTR [edi+0xb]
10001457:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
1000145d:	75 26                	jne    10001485 <ssfn_render+0x186>
1000145f:	8d 84 24 b0 00 00 00 	lea    eax,[esp+0xb0]
10001466:	50                   	push   eax
10001467:	89 f8                	mov    eax,edi
10001469:	8d 8c 24 bc 00 00 00 	lea    ecx,[esp+0xbc]
10001470:	8b 94 24 ec 05 01 00 	mov    edx,DWORD PTR [esp+0x105ec]
10001477:	e8 e3 f3 ff ff       	call   1000085f <_ssfn_c>
1000147c:	59                   	pop    ecx
1000147d:	85 c0                	test   eax,eax
1000147f:	0f 85 ac 00 00 00    	jne    10001531 <ssfn_render+0x232>
10001485:	ff 84 24 bc 00 00 00 	inc    DWORD PTR [esp+0xbc]
1000148c:	eb a0                	jmp    1000142e <ssfn_render+0x12f>
1000148e:	85 c0                	test   eax,eax
10001490:	0f 85 b5 00 00 00    	jne    1000154b <ssfn_render+0x24c>
10001496:	c7 84 24 bc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xbc],0x0
100014a1:	8b 84 24 bc 00 00 00 	mov    eax,DWORD PTR [esp+0xbc]
100014a8:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
100014af:	0f 8e 48 1b 00 00    	jle    10002ffd <ssfn_render+0x1cfe>
100014b5:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
100014b8:	0f b6 50 0b          	movzx  edx,BYTE PTR [eax+0xb]
100014bc:	3b 95 c0 f5 00 00    	cmp    edx,DWORD PTR [ebp+0xf5c0]
100014c2:	74 09                	je     100014cd <ssfn_render+0x1ce>
100014c4:	ff 84 24 bc 00 00 00 	inc    DWORD PTR [esp+0xbc]
100014cb:	eb d4                	jmp    100014a1 <ssfn_render+0x1a2>
100014cd:	8d bc 24 b0 00 00 00 	lea    edi,[esp+0xb0]
100014d4:	57                   	push   edi
100014d5:	8d 8c 24 bc 00 00 00 	lea    ecx,[esp+0xbc]
100014dc:	8b 94 24 ec 05 01 00 	mov    edx,DWORD PTR [esp+0x105ec]
100014e3:	e8 77 f3 ff ff       	call   1000085f <_ssfn_c>
100014e8:	5a                   	pop    edx
100014e9:	85 c0                	test   eax,eax
100014eb:	74 d7                	je     100014c4 <ssfn_render+0x1c5>
100014ed:	eb 42                	jmp    10001531 <ssfn_render+0x232>
100014ef:	85 c0                	test   eax,eax
100014f1:	75 58                	jne    1000154b <ssfn_render+0x24c>
100014f3:	c7 84 24 bc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xbc],0x0
100014fe:	8b 84 24 bc 00 00 00 	mov    eax,DWORD PTR [esp+0xbc]
10001505:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
1000150c:	7e 3b                	jle    10001549 <ssfn_render+0x24a>
1000150e:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10001511:	8d bc 24 b0 00 00 00 	lea    edi,[esp+0xb0]
10001518:	57                   	push   edi
10001519:	8d 8c 24 bc 00 00 00 	lea    ecx,[esp+0xbc]
10001520:	8b 94 24 ec 05 01 00 	mov    edx,DWORD PTR [esp+0x105ec]
10001527:	e8 33 f3 ff ff       	call   1000085f <_ssfn_c>
1000152c:	5a                   	pop    edx
1000152d:	85 c0                	test   eax,eax
1000152f:	74 0f                	je     10001540 <ssfn_render+0x241>
10001531:	8b 94 24 bc 00 00 00 	mov    edx,DWORD PTR [esp+0xbc]
10001538:	8b 14 96             	mov    edx,DWORD PTR [esi+edx*4]
1000153b:	89 55 18             	mov    DWORD PTR [ebp+0x18],edx
1000153e:	eb 0b                	jmp    1000154b <ssfn_render+0x24c>
10001540:	ff 84 24 bc 00 00 00 	inc    DWORD PTR [esp+0xbc]
10001547:	eb b5                	jmp    100014fe <ssfn_render+0x1ff>
10001549:	31 c0                	xor    eax,eax
1000154b:	43                   	inc    ebx
1000154c:	e9 b7 fe ff ff       	jmp    10001408 <ssfn_render+0x109>
10001551:	85 c0                	test   eax,eax
10001553:	0f 85 85 00 00 00    	jne    100015de <ssfn_render+0x2df>
10001559:	31 db                	xor    ebx,ebx
1000155b:	c7 44 24 04 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x4
10001563:	81 3c 24 ff 00 00 00 	cmp    DWORD PTR [esp],0xff
1000156a:	0f 84 58 fe ff ff    	je     100013c8 <ssfn_render+0xc9>
10001570:	c7 04 24 ff 00 00 00 	mov    DWORD PTR [esp],0xff
10001577:	e9 8a fe ff ff       	jmp    10001406 <ssfn_render+0x107>
1000157c:	8b 9d b8 f5 00 00    	mov    ebx,DWORD PTR [ebp+0xf5b8]
10001582:	c7 84 24 b0 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xb0],0x0
1000158d:	81 fb fd 00 00 00    	cmp    ebx,0xfd
10001593:	7f 16                	jg     100015ab <ssfn_render+0x2ac>
10001595:	89 da                	mov    edx,ebx
10001597:	31 c0                	xor    eax,eax
10001599:	39 da                	cmp    edx,ebx
1000159b:	7e 15                	jle    100015b2 <ssfn_render+0x2b3>
1000159d:	85 c0                	test   eax,eax
1000159f:	75 3d                	jne    100015de <ssfn_render+0x2df>
100015a1:	b9 f9 ff ff ff       	mov    ecx,0xfffffff9
100015a6:	e9 14 1b 00 00       	jmp    100030bf <ssfn_render+0x1dc0>
100015ab:	bb 04 00 00 00       	mov    ebx,0x4
100015b0:	eb e5                	jmp    10001597 <ssfn_render+0x298>
100015b2:	85 c0                	test   eax,eax
100015b4:	75 28                	jne    100015de <ssfn_render+0x2df>
100015b6:	83 bc 95 a4 f5 00 00 00 	cmp    DWORD PTR [ebp+edx*4+0xf5a4],0x0
100015be:	74 1b                	je     100015db <ssfn_render+0x2dc>
100015c0:	8b 4c 95 00          	mov    ecx,DWORD PTR [ebp+edx*4+0x0]
100015c4:	8b 09                	mov    ecx,DWORD PTR [ecx]
100015c6:	85 c9                	test   ecx,ecx
100015c8:	74 11                	je     100015db <ssfn_render+0x2dc>
100015ca:	8b 71 10             	mov    esi,DWORD PTR [ecx+0x10]
100015cd:	80 3c 31 00          	cmp    BYTE PTR [ecx+esi*1],0x0
100015d1:	78 08                	js     100015db <ssfn_render+0x2dc>
100015d3:	89 4d 18             	mov    DWORD PTR [ebp+0x18],ecx
100015d6:	8b 41 10             	mov    eax,DWORD PTR [ecx+0x10]
100015d9:	01 c8                	add    eax,ecx
100015db:	42                   	inc    edx
100015dc:	eb bb                	jmp    10001599 <ssfn_render+0x29a>
100015de:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
100015e1:	b9 fd ff ff ff       	mov    ecx,0xfffffffd
100015e6:	85 d2                	test   edx,edx
100015e8:	0f 84 d1 1a 00 00    	je     100030bf <ssfn_render+0x1dc0>
100015ee:	80 7a 0b 00          	cmp    BYTE PTR [edx+0xb],0x0
100015f2:	0f 84 c7 1a 00 00    	je     100030bf <ssfn_render+0x1dc0>
100015f8:	8b bd c0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5c0]
100015fe:	89 3c 24             	mov    DWORD PTR [esp],edi
10001601:	85 ff                	test   edi,edi
10001603:	0f 84 b6 1a 00 00    	je     100030bf <ssfn_render+0x1dc0>
10001609:	8b bc 24 b0 00 00 00 	mov    edi,DWORD PTR [esp+0xb0]
10001610:	89 7c 24 08          	mov    DWORD PTR [esp+0x8],edi
10001614:	c1 ef 10             	shr    edi,0x10
10001617:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
1000161b:	83 ff 10             	cmp    edi,0x10
1000161e:	0f 87 0b fd ff ff    	ja     1000132f <ssfn_render+0x30>
10001624:	8d 70 06             	lea    esi,[eax+0x6]
10001627:	89 85 74 f5 00 00    	mov    DWORD PTR [ebp+0xf574],eax
1000162d:	89 74 24 0c          	mov    DWORD PTR [esp+0xc],esi
10001631:	8b b5 bc f5 00 00    	mov    esi,DWORD PTR [ebp+0xf5bc]
10001637:	89 f7                	mov    edi,esi
10001639:	81 e7 00 02 00 00    	and    edi,0x200
1000163f:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10001643:	75 34                	jne    10001679 <ssfn_render+0x37a>
10001645:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001649:	8b 8c bd 28 f5 00 00 	mov    ecx,DWORD PTR [ebp+edi*4+0xf528]
10001650:	85 c9                	test   ecx,ecx
10001652:	74 25                	je     10001679 <ssfn_render+0x37a>
10001654:	8b 5c 24 08          	mov    ebx,DWORD PTR [esp+0x8]
10001658:	0f b6 ff             	movzx  edi,bh
1000165b:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
1000165e:	85 c9                	test   ecx,ecx
10001660:	74 17                	je     10001679 <ssfn_render+0x37a>
10001662:	0f b6 7c 24 08       	movzx  edi,BYTE PTR [esp+0x8]
10001667:	8b 0c b9             	mov    ecx,DWORD PTR [ecx+edi*4]
1000166a:	85 c9                	test   ecx,ecx
1000166c:	74 0b                	je     10001679 <ssfn_render+0x37a>
1000166e:	89 8d 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],ecx
10001674:	e9 06 0d 00 00       	jmp    1000237f <ssfn_render+0x1080>
10001679:	0f b6 4a 0b          	movzx  ecx,BYTE PTR [edx+0xb]
1000167d:	f7 c6 40 00 00 00    	test   esi,0x40
10001683:	75 16                	jne    1000169b <ssfn_render+0x39c>
10001685:	39 0c 24             	cmp    DWORD PTR [esp],ecx
10001688:	7e 0e                	jle    10001698 <ssfn_render+0x399>
1000168a:	8b 3c 24             	mov    edi,DWORD PTR [esp]
1000168d:	83 c7 04             	add    edi,0x4
10001690:	83 e7 fc             	and    edi,0xfffffffc
10001693:	89 3c 24             	mov    DWORD PTR [esp],edi
10001696:	eb 03                	jmp    1000169b <ssfn_render+0x39c>
10001698:	89 0c 24             	mov    DWORD PTR [esp],ecx
1000169b:	c6 44 24 1c 00       	mov    BYTE PTR [esp+0x1c],0x0
100016a0:	f7 c6 02 00 00 00    	test   esi,0x2
100016a6:	74 14                	je     100016bc <ssfn_render+0x3bd>
100016a8:	8a 5a 08             	mov    bl,BYTE PTR [edx+0x8]
100016ab:	c0 eb 05             	shr    bl,0x5
100016ae:	89 df                	mov    edi,ebx
100016b0:	83 f7 01             	xor    edi,0x1
100016b3:	83 e7 01             	and    edi,0x1
100016b6:	89 fb                	mov    ebx,edi
100016b8:	88 5c 24 1c          	mov    BYTE PTR [esp+0x1c],bl
100016bc:	c6 44 24 3c 00       	mov    BYTE PTR [esp+0x3c],0x0
100016c1:	83 e6 01             	and    esi,0x1
100016c4:	74 13                	je     100016d9 <ssfn_render+0x3da>
100016c6:	8d 71 40             	lea    esi,[ecx+0x40]
100016c9:	b3 00                	mov    bl,0x0
100016cb:	c1 fe 06             	sar    esi,0x6
100016ce:	f6 42 08 10          	test   BYTE PTR [edx+0x8],0x10
100016d2:	0f 44 de             	cmove  ebx,esi
100016d5:	88 5c 24 3c          	mov    BYTE PTR [esp+0x3c],bl
100016d9:	0f b6 40 02          	movzx  eax,BYTE PTR [eax+0x2]
100016dd:	0f af 04 24          	imul   eax,DWORD PTR [esp]
100016e1:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
100016e5:	99                   	cdq    
100016e6:	f7 f9                	idiv   ecx
100016e8:	89 c1                	mov    ecx,eax
100016ea:	31 c0                	xor    eax,eax
100016ec:	80 7c 24 1c 00       	cmp    BYTE PTR [esp+0x1c],0x0
100016f1:	74 0b                	je     100016fe <ssfn_render+0x3ff>
100016f3:	8b 04 24             	mov    eax,DWORD PTR [esp]
100016f6:	be 04 00 00 00       	mov    esi,0x4
100016fb:	99                   	cdq    
100016fc:	f7 fe                	idiv   esi
100016fe:	01 c8                	add    eax,ecx
10001700:	0f b6 74 24 3c       	movzx  esi,BYTE PTR [esp+0x3c]
10001705:	b9 fa ff ff ff       	mov    ecx,0xfffffffa
1000170a:	01 f0                	add    eax,esi
1000170c:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
10001710:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10001714:	8b 04 24             	mov    eax,DWORD PTR [esp]
10001717:	0f af 44 24 04       	imul   eax,DWORD PTR [esp+0x4]
1000171c:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10001720:	3d ff f4 00 00       	cmp    eax,0xf4ff
10001725:	0f 8f 94 19 00 00    	jg     100030bf <ssfn_render+0x1dc0>
1000172b:	83 7c 24 20 00       	cmp    DWORD PTR [esp+0x20],0x0
10001730:	0f 85 f0 00 00 00    	jne    10001826 <ssfn_render+0x527>
10001736:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000173a:	8d 74 85 00          	lea    esi,[ebp+eax*4+0x0]
1000173e:	83 be 28 f5 00 00 00 	cmp    DWORD PTR [esi+0xf528],0x0
10001745:	75 2f                	jne    10001776 <ssfn_render+0x477>
10001747:	83 ec 0c             	sub    esp,0xc
1000174a:	68 00 04 00 00       	push   0x400
1000174f:	e8 fc ff ff ff       	call   10001750 <ssfn_render+0x451>	10001750: R_386_PC32	malloc
10001754:	83 c4 10             	add    esp,0x10
10001757:	89 86 28 f5 00 00    	mov    DWORD PTR [esi+0xf528],eax
1000175d:	85 c0                	test   eax,eax
1000175f:	75 08                	jne    10001769 <ssfn_render+0x46a>
10001761:	83 c9 ff             	or     ecx,0xffffffff
10001764:	e9 56 19 00 00       	jmp    100030bf <ssfn_render+0x1dc0>
10001769:	89 c7                	mov    edi,eax
1000176b:	b9 00 01 00 00       	mov    ecx,0x100
10001770:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10001774:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10001776:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000177a:	0f b6 dc             	movzx  ebx,ah
1000177d:	8b 86 28 f5 00 00    	mov    eax,DWORD PTR [esi+0xf528]
10001783:	8d 1c 98             	lea    ebx,[eax+ebx*4]
10001786:	83 3b 00             	cmp    DWORD PTR [ebx],0x0
10001789:	75 3a                	jne    100017c5 <ssfn_render+0x4c6>
1000178b:	83 ec 0c             	sub    esp,0xc
1000178e:	68 00 04 00 00       	push   0x400
10001793:	e8 fc ff ff ff       	call   10001794 <ssfn_render+0x495>	10001794: R_386_PC32	malloc
10001798:	89 03                	mov    DWORD PTR [ebx],eax
1000179a:	8b 84 24 c0 00 00 00 	mov    eax,DWORD PTR [esp+0xc0]
100017a1:	83 c4 10             	add    esp,0x10
100017a4:	89 c2                	mov    edx,eax
100017a6:	0f b6 c4             	movzx  eax,ah
100017a9:	c1 ea 10             	shr    edx,0x10
100017ac:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
100017b3:	8b 14 82             	mov    edx,DWORD PTR [edx+eax*4]
100017b6:	85 d2                	test   edx,edx
100017b8:	74 a7                	je     10001761 <ssfn_render+0x462>
100017ba:	b9 00 01 00 00       	mov    ecx,0x100
100017bf:	31 c0                	xor    eax,eax
100017c1:	89 d7                	mov    edi,edx
100017c3:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100017c5:	8b 84 24 b0 00 00 00 	mov    eax,DWORD PTR [esp+0xb0]
100017cc:	83 ec 0c             	sub    esp,0xc
100017cf:	0f b6 cc             	movzx  ecx,ah
100017d2:	89 c2                	mov    edx,eax
100017d4:	0f b6 c0             	movzx  eax,al
100017d7:	c1 ea 10             	shr    edx,0x10
100017da:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
100017e1:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
100017e4:	8d 1c 82             	lea    ebx,[edx+eax*4]
100017e7:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100017eb:	83 c0 08             	add    eax,0x8
100017ee:	50                   	push   eax
100017ef:	e8 fc ff ff ff       	call   100017f0 <ssfn_render+0x4f1>	100017f0: R_386_PC32	malloc
100017f4:	89 03                	mov    DWORD PTR [ebx],eax
100017f6:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
100017fc:	8b 84 24 c0 00 00 00 	mov    eax,DWORD PTR [esp+0xc0]
10001803:	83 c4 10             	add    esp,0x10
10001806:	89 c2                	mov    edx,eax
10001808:	0f b6 cc             	movzx  ecx,ah
1000180b:	c1 ea 10             	shr    edx,0x10
1000180e:	0f b6 c0             	movzx  eax,al
10001811:	8b 94 95 28 f5 00 00 	mov    edx,DWORD PTR [ebp+edx*4+0xf528]
10001818:	8b 14 8a             	mov    edx,DWORD PTR [edx+ecx*4]
1000181b:	83 3c 82 00          	cmp    DWORD PTR [edx+eax*4],0x0
1000181f:	75 0e                	jne    1000182f <ssfn_render+0x530>
10001821:	e9 3b ff ff ff       	jmp    10001761 <ssfn_render+0x462>
10001826:	8d 45 1c             	lea    eax,[ebp+0x1c]
10001829:	89 85 24 f5 00 00    	mov    DWORD PTR [ebp+0xf524],eax
1000182f:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10001835:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
10001839:	74 29                	je     10001864 <ssfn_render+0x565>
1000183b:	80 7c 24 1c 00       	cmp    BYTE PTR [esp+0x1c],0x0
10001840:	74 22                	je     10001864 <ssfn_render+0x565>
10001842:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001845:	bb 04 00 00 00       	mov    ebx,0x4
1000184a:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
1000184e:	0f b6 40 0c          	movzx  eax,BYTE PTR [eax+0xc]
10001852:	89 cf                	mov    edi,ecx
10001854:	29 c7                	sub    edi,eax
10001856:	8b 04 24             	mov    eax,DWORD PTR [esp]
10001859:	0f af c7             	imul   eax,edi
1000185c:	99                   	cdq    
1000185d:	f7 fb                	idiv   ebx
1000185f:	99                   	cdq    
10001860:	f7 f9                	idiv   ecx
10001862:	eb 02                	jmp    10001866 <ssfn_render+0x567>
10001864:	31 c0                	xor    eax,eax
10001866:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
1000186c:	8a 1c 24             	mov    bl,BYTE PTR [esp]
1000186f:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
10001873:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
1000187b:	66 89 32             	mov    WORD PTR [edx],si
1000187e:	c6 44 24 08 fe       	mov    BYTE PTR [esp+0x8],0xfe
10001883:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001889:	88 5a 02             	mov    BYTE PTR [edx+0x2],bl
1000188c:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
10001892:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001898:	8a 59 04             	mov    bl,BYTE PTR [ecx+0x4]
1000189b:	01 c3                	add    ebx,eax
1000189d:	88 5a 04             	mov    BYTE PTR [edx+0x4],bl
100018a0:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100018a6:	8b 8d 74 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf574]
100018ac:	8a 49 05             	mov    cl,BYTE PTR [ecx+0x5]
100018af:	88 4a 05             	mov    BYTE PTR [edx+0x5],cl
100018b2:	8b 8d 24 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf524]
100018b8:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
100018be:	8a 12                	mov    dl,BYTE PTR [edx]
100018c0:	83 e2 3f             	and    edx,0x3f
100018c3:	01 d0                	add    eax,edx
100018c5:	88 41 03             	mov    BYTE PTR [ecx+0x3],al
100018c8:	8b 4c 24 14          	mov    ecx,DWORD PTR [esp+0x14]
100018cc:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100018d2:	8d 50 08             	lea    edx,[eax+0x8]
100018d5:	b0 ff                	mov    al,0xff
100018d7:	89 d7                	mov    edi,edx
100018d9:	f3 aa                	rep stos BYTE PTR es:[edi],al
100018db:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100018e1:	c6 40 07 00          	mov    BYTE PTR [eax+0x7],0x0
100018e5:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100018eb:	c6 40 06 00          	mov    BYTE PTR [eax+0x6],0x0
100018ef:	8b 04 24             	mov    eax,DWORD PTR [esp]
100018f2:	c1 e0 04             	shl    eax,0x4
100018f5:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
100018f9:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
100018fd:	c1 e0 04             	shl    eax,0x4
10001900:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10001904:	8b 95 74 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf574]
1000190a:	0f b6 42 01          	movzx  eax,BYTE PTR [edx+0x1]
1000190e:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10001912:	0f 8e 39 0a 00 00    	jle    10002351 <ssfn_render+0x1052>
10001918:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
1000191c:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001920:	8a 4e 01             	mov    cl,BYTE PTR [esi+0x1]
10001923:	0f b6 00             	movzx  eax,BYTE PTR [eax]
10001926:	8a 12                	mov    dl,BYTE PTR [edx]
10001928:	0f b6 5e 02          	movzx  ebx,BYTE PTR [esi+0x2]
1000192c:	83 e2 40             	and    edx,0x40
1000192f:	88 54 24 10          	mov    BYTE PTR [esp+0x10],dl
10001933:	88 c2                	mov    dl,al
10001935:	21 ca                	and    edx,ecx
10001937:	fe c2                	inc    dl
10001939:	75 14                	jne    1000194f <ssfn_render+0x650>
1000193b:	80 7c 24 10 01       	cmp    BYTE PTR [esp+0x10],0x1
10001940:	19 c0                	sbb    eax,eax
10001942:	8d 44 06 06          	lea    eax,[esi+eax*1+0x6]
10001946:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000194a:	e9 f5 09 00 00       	jmp    10002344 <ssfn_render+0x1045>
1000194f:	03 44 24 18          	add    eax,DWORD PTR [esp+0x18]
10001953:	8b 7d 18             	mov    edi,DWORD PTR [ebp+0x18]
10001956:	c1 e0 04             	shl    eax,0x4
10001959:	0f b6 77 0b          	movzx  esi,BYTE PTR [edi+0xb]
1000195d:	0f af 04 24          	imul   eax,DWORD PTR [esp]
10001961:	99                   	cdq    
10001962:	f7 fe                	idiv   esi
10001964:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10001968:	0f b6 c1             	movzx  eax,cl
1000196b:	c1 e0 04             	shl    eax,0x4
1000196e:	0f af 04 24          	imul   eax,DWORD PTR [esp]
10001972:	99                   	cdq    
10001973:	f7 fe                	idiv   esi
10001975:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10001979:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
1000197d:	0f b6 50 04          	movzx  edx,BYTE PTR [eax+0x4]
10001981:	0f b6 40 03          	movzx  eax,BYTE PTR [eax+0x3]
10001985:	c1 e2 10             	shl    edx,0x10
10001988:	80 7c 24 10 00       	cmp    BYTE PTR [esp+0x10],0x0
1000198d:	74 0e                	je     1000199d <ssfn_render+0x69e>
1000198f:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10001993:	83 44 24 0c 06       	add    DWORD PTR [esp+0xc],0x6
10001998:	8b 58 02             	mov    ebx,DWORD PTR [eax+0x2]
1000199b:	eb 0c                	jmp    100019a9 <ssfn_render+0x6aa>
1000199d:	c1 e0 08             	shl    eax,0x8
100019a0:	83 44 24 0c 05       	add    DWORD PTR [esp+0xc],0x5
100019a5:	09 d0                	or     eax,edx
100019a7:	09 c3                	or     ebx,eax
100019a9:	8d 0c 1f             	lea    ecx,[edi+ebx*1]
100019ac:	8a 01                	mov    al,BYTE PTR [ecx]
100019ae:	84 c0                	test   al,al
100019b0:	0f 88 12 05 00 00    	js     10001ec8 <ssfn_render+0xbc9>
100019b6:	89 c7                	mov    edi,eax
100019b8:	83 e7 3f             	and    edi,0x3f
100019bb:	a8 40                	test   al,0x40
100019bd:	89 7c 24 24          	mov    DWORD PTR [esp+0x24],edi
100019c1:	74 10                	je     100019d3 <ssfn_render+0x6d4>
100019c3:	0f b6 51 01          	movzx  edx,BYTE PTR [ecx+0x1]
100019c7:	89 f8                	mov    eax,edi
100019c9:	41                   	inc    ecx
100019ca:	c1 e0 08             	shl    eax,0x8
100019cd:	09 c2                	or     edx,eax
100019cf:	89 54 24 24          	mov    DWORD PTR [esp+0x24],edx
100019d3:	8d 41 01             	lea    eax,[ecx+0x1]
100019d6:	c7 85 80 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf580],0x0
100019e0:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
100019e4:	c7 84 24 bc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xbc],0x0
100019ef:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
100019f3:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
100019f7:	83 c0 04             	add    eax,0x4
100019fa:	c1 f8 02             	sar    eax,0x2
100019fd:	01 c7                	add    edi,eax
100019ff:	8b 8c 24 bc 00 00 00 	mov    ecx,DWORD PTR [esp+0xbc]
10001a06:	3b 4c 24 24          	cmp    ecx,DWORD PTR [esp+0x24]
10001a0a:	0f 8f d3 01 00 00    	jg     10001be3 <ssfn_render+0x8e4>
10001a10:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001a13:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10001a17:	0f b6 40 0b          	movzx  eax,BYTE PTR [eax+0xb]
10001a1b:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10001a1f:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001a23:	0f b6 07             	movzx  eax,BYTE PTR [edi]
10001a26:	c1 e0 04             	shl    eax,0x4
10001a29:	0f af 04 24          	imul   eax,DWORD PTR [esp]
10001a2d:	99                   	cdq    
10001a2e:	f7 7c 24 10          	idiv   DWORD PTR [esp+0x10]
10001a32:	01 c6                	add    esi,eax
10001a34:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10001a38:	0f b6 47 01          	movzx  eax,BYTE PTR [edi+0x1]
10001a3c:	c1 e0 04             	shl    eax,0x4
10001a3f:	0f af 04 24          	imul   eax,DWORD PTR [esp]
10001a43:	99                   	cdq    
10001a44:	f7 7c 24 10          	idiv   DWORD PTR [esp+0x10]
10001a48:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10001a4c:	01 c3                	add    ebx,eax
10001a4e:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10001a52:	89 c8                	mov    eax,ecx
10001a54:	01 c9                	add    ecx,ecx
10001a56:	c1 f8 02             	sar    eax,0x2
10001a59:	83 e1 06             	and    ecx,0x6
10001a5c:	0f b6 04 02          	movzx  eax,BYTE PTR [edx+eax*1]
10001a60:	d3 f8                	sar    eax,cl
10001a62:	83 e0 03             	and    eax,0x3
10001a65:	89 c1                	mov    ecx,eax
10001a67:	83 f8 02             	cmp    eax,0x2
10001a6a:	74 4a                	je     10001ab6 <ssfn_render+0x7b7>
10001a6c:	83 f8 03             	cmp    eax,0x3
10001a6f:	0f 84 e2 00 00 00    	je     10001b57 <ssfn_render+0x858>
10001a75:	49                   	dec    ecx
10001a76:	74 20                	je     10001a98 <ssfn_render+0x799>
10001a78:	89 b5 9c f5 00 00    	mov    DWORD PTR [ebp+0xf59c],esi
10001a7e:	89 b5 94 f5 00 00    	mov    DWORD PTR [ebp+0xf594],esi
10001a84:	89 9d a0 f5 00 00    	mov    DWORD PTR [ebp+0xf5a0],ebx
10001a8a:	89 9d 98 f5 00 00    	mov    DWORD PTR [ebp+0xf598],ebx
10001a90:	83 c7 02             	add    edi,0x2
10001a93:	e9 3f 01 00 00       	jmp    10001bd7 <ssfn_render+0x8d8>
10001a98:	83 c7 02             	add    edi,0x2
10001a9b:	50                   	push   eax
10001a9c:	50                   	push   eax
10001a9d:	89 e8                	mov    eax,ebp
10001a9f:	53                   	push   ebx
10001aa0:	56                   	push   esi
10001aa1:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
10001aa5:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10001aa9:	e8 03 ea ff ff       	call   100004b1 <_ssfn_l>
10001aae:	83 c4 10             	add    esp,0x10
10001ab1:	e9 21 01 00 00       	jmp    10001bd7 <ssfn_render+0x8d8>
10001ab6:	0f b6 47 02          	movzx  eax,BYTE PTR [edi+0x2]
10001aba:	83 c7 04             	add    edi,0x4
10001abd:	c1 e0 04             	shl    eax,0x4
10001ac0:	0f af 04 24          	imul   eax,DWORD PTR [esp]
10001ac4:	99                   	cdq    
10001ac5:	f7 7c 24 10          	idiv   DWORD PTR [esp+0x10]
10001ac9:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10001acd:	03 44 24 20          	add    eax,DWORD PTR [esp+0x20]
10001ad1:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001ad5:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001ad9:	c1 e0 04             	shl    eax,0x4
10001adc:	0f af 04 24          	imul   eax,DWORD PTR [esp]
10001ae0:	99                   	cdq    
10001ae1:	f7 7c 24 10          	idiv   DWORD PTR [esp+0x10]
10001ae5:	83 ec 0c             	sub    esp,0xc
10001ae8:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10001aec:	6a 00                	push   0x0
10001aee:	53                   	push   ebx
10001aef:	56                   	push   esi
10001af0:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10001af4:	2b 44 24 58          	sub    eax,DWORD PTR [esp+0x58]
10001af8:	99                   	cdq    
10001af9:	f7 f9                	idiv   ecx
10001afb:	01 d8                	add    eax,ebx
10001afd:	50                   	push   eax
10001afe:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10001b02:	2b 44 24 64          	sub    eax,DWORD PTR [esp+0x64]
10001b06:	99                   	cdq    
10001b07:	f7 f9                	idiv   ecx
10001b09:	03 44 24 48          	add    eax,DWORD PTR [esp+0x48]
10001b0d:	50                   	push   eax
10001b0e:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10001b12:	03 44 24 34          	add    eax,DWORD PTR [esp+0x34]
10001b16:	2b 85 a0 f5 00 00    	sub    eax,DWORD PTR [ebp+0xf5a0]
10001b1c:	99                   	cdq    
10001b1d:	f7 f9                	idiv   ecx
10001b1f:	03 85 a0 f5 00 00    	add    eax,DWORD PTR [ebp+0xf5a0]
10001b25:	50                   	push   eax
10001b26:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10001b2a:	2b 85 9c f5 00 00    	sub    eax,DWORD PTR [ebp+0xf59c]
10001b30:	99                   	cdq    
10001b31:	f7 f9                	idiv   ecx
10001b33:	03 85 9c f5 00 00    	add    eax,DWORD PTR [ebp+0xf59c]
10001b39:	50                   	push   eax
10001b3a:	89 e8                	mov    eax,ebp
10001b3c:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001b42:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001b48:	8b 4c 24 60          	mov    ecx,DWORD PTR [esp+0x60]
10001b4c:	8b 54 24 64          	mov    edx,DWORD PTR [esp+0x64]
10001b50:	e8 6d ea ff ff       	call   100005c2 <_ssfn_b>
10001b55:	eb 7d                	jmp    10001bd4 <ssfn_render+0x8d5>
10001b57:	83 ec 0c             	sub    esp,0xc
10001b5a:	83 c7 06             	add    edi,0x6
10001b5d:	6a 00                	push   0x0
10001b5f:	53                   	push   ebx
10001b60:	56                   	push   esi
10001b61:	0f b6 47 ff          	movzx  eax,BYTE PTR [edi-0x1]
10001b65:	c1 e0 04             	shl    eax,0x4
10001b68:	0f af 44 24 18       	imul   eax,DWORD PTR [esp+0x18]
10001b6d:	99                   	cdq    
10001b6e:	f7 7c 24 28          	idiv   DWORD PTR [esp+0x28]
10001b72:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
10001b76:	50                   	push   eax
10001b77:	0f b6 47 fe          	movzx  eax,BYTE PTR [edi-0x2]
10001b7b:	c1 e0 04             	shl    eax,0x4
10001b7e:	0f af 44 24 1c       	imul   eax,DWORD PTR [esp+0x1c]
10001b83:	99                   	cdq    
10001b84:	f7 7c 24 2c          	idiv   DWORD PTR [esp+0x2c]
10001b88:	03 44 24 3c          	add    eax,DWORD PTR [esp+0x3c]
10001b8c:	50                   	push   eax
10001b8d:	0f b6 47 fd          	movzx  eax,BYTE PTR [edi-0x3]
10001b91:	c1 e0 04             	shl    eax,0x4
10001b94:	0f af 44 24 20       	imul   eax,DWORD PTR [esp+0x20]
10001b99:	99                   	cdq    
10001b9a:	f7 7c 24 30          	idiv   DWORD PTR [esp+0x30]
10001b9e:	03 44 24 34          	add    eax,DWORD PTR [esp+0x34]
10001ba2:	50                   	push   eax
10001ba3:	0f b6 47 fc          	movzx  eax,BYTE PTR [edi-0x4]
10001ba7:	c1 e0 04             	shl    eax,0x4
10001baa:	0f af 44 24 24       	imul   eax,DWORD PTR [esp+0x24]
10001baf:	99                   	cdq    
10001bb0:	f7 7c 24 34          	idiv   DWORD PTR [esp+0x34]
10001bb4:	03 44 24 44          	add    eax,DWORD PTR [esp+0x44]
10001bb8:	50                   	push   eax
10001bb9:	89 e8                	mov    eax,ebp
10001bbb:	ff b5 a0 f5 00 00    	push   DWORD PTR [ebp+0xf5a0]
10001bc1:	ff b5 9c f5 00 00    	push   DWORD PTR [ebp+0xf59c]
10001bc7:	8b 4c 24 60          	mov    ecx,DWORD PTR [esp+0x60]
10001bcb:	8b 54 24 64          	mov    edx,DWORD PTR [esp+0x64]
10001bcf:	e8 ee e9 ff ff       	call   100005c2 <_ssfn_b>
10001bd4:	83 c4 30             	add    esp,0x30
10001bd7:	ff 84 24 bc 00 00 00 	inc    DWORD PTR [esp+0xbc]
10001bde:	e9 1c fe ff ff       	jmp    100019ff <ssfn_render+0x700>
10001be3:	8b 85 94 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf594]
10001be9:	3b 85 9c f5 00 00    	cmp    eax,DWORD PTR [ebp+0xf59c]
10001bef:	75 0e                	jne    10001bff <ssfn_render+0x900>
10001bf1:	8b bd a0 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf5a0]
10001bf7:	39 bd 98 f5 00 00    	cmp    DWORD PTR [ebp+0xf598],edi
10001bfd:	74 2e                	je     10001c2d <ssfn_render+0x92e>
10001bff:	8b 8d 80 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf580]
10001c05:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001c0b:	66 89 04 4a          	mov    WORD PTR [edx+ecx*2],ax
10001c0f:	8b 95 80 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf580]
10001c15:	8b 85 6c f5 00 00    	mov    eax,DWORD PTR [ebp+0xf56c]
10001c1b:	8b 8d 98 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf598]
10001c21:	66 89 4c 50 02       	mov    WORD PTR [eax+edx*2+0x2],cx
10001c26:	83 85 80 f5 00 00 02 	add    DWORD PTR [ebp+0xf580],0x2
10001c2d:	b3 fe                	mov    bl,0xfe
10001c2f:	83 bd 80 f5 00 00 04 	cmp    DWORD PTR [ebp+0xf580],0x4
10001c36:	0f 8e 08 07 00 00    	jle    10002344 <ssfn_render+0x1045>
10001c3c:	c7 44 24 24 00 00 00 00 	mov    DWORD PTR [esp+0x24],0x0
10001c44:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10001c4c:	c7 44 24 20 00 00 00 00 	mov    DWORD PTR [esp+0x20],0x0
10001c54:	c7 44 24 10 00 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
10001c5c:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
10001c64:	8b 3c 24             	mov    edi,DWORD PTR [esp]
10001c67:	39 7c 24 20          	cmp    DWORD PTR [esp+0x20],edi
10001c6b:	0f 8d d1 06 00 00    	jge    10002342 <ssfn_render+0x1043>
10001c71:	8b 85 80 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf580]
10001c77:	c7 84 24 bc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xbc],0x0
10001c82:	83 e8 03             	sub    eax,0x3
10001c85:	31 f6                	xor    esi,esi
10001c87:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10001c8b:	89 f8                	mov    eax,edi
10001c8d:	2b 44 24 20          	sub    eax,DWORD PTR [esp+0x20]
10001c91:	c1 f8 02             	sar    eax,0x2
10001c94:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001c98:	8b bc 24 bc 00 00 00 	mov    edi,DWORD PTR [esp+0xbc]
10001c9f:	39 7c 24 48          	cmp    DWORD PTR [esp+0x48],edi
10001ca3:	0f 8e 16 01 00 00    	jle    10001dbf <ssfn_render+0xac0>
10001ca9:	8b 95 6c f5 00 00    	mov    edx,DWORD PTR [ebp+0xf56c]
10001caf:	8d 47 01             	lea    eax,[edi+0x1]
10001cb2:	01 c0                	add    eax,eax
10001cb4:	0f b7 1c 02          	movzx  ebx,WORD PTR [edx+eax*1]
10001cb8:	89 5c 24 28          	mov    DWORD PTR [esp+0x28],ebx
10001cbc:	0f b7 5c 02 04       	movzx  ebx,WORD PTR [edx+eax*1+0x4]
10001cc1:	8b 4c 24 28          	mov    ecx,DWORD PTR [esp+0x28]
10001cc5:	3b 4c 24 24          	cmp    ecx,DWORD PTR [esp+0x24]
10001cc9:	7d 0c                	jge    10001cd7 <ssfn_render+0x9d8>
10001ccb:	39 5c 24 24          	cmp    DWORD PTR [esp+0x24],ebx
10001ccf:	0f 8f db 00 00 00    	jg     10001db0 <ssfn_render+0xab1>
10001cd5:	eb 0a                	jmp    10001ce1 <ssfn_render+0x9e2>
10001cd7:	39 5c 24 24          	cmp    DWORD PTR [esp+0x24],ebx
10001cdb:	0f 8e cf 00 00 00    	jle    10001db0 <ssfn_render+0xab1>
10001ce1:	0f b7 4c 02 fe       	movzx  ecx,WORD PTR [edx+eax*1-0x2]
10001ce6:	89 4c 24 40          	mov    DWORD PTR [esp+0x40],ecx
10001cea:	0f b7 4c 02 02       	movzx  ecx,WORD PTR [edx+eax*1+0x2]
10001cef:	8b 54 24 28          	mov    edx,DWORD PTR [esp+0x28]
10001cf3:	89 d8                	mov    eax,ebx
10001cf5:	c1 fa 04             	sar    edx,0x4
10001cf8:	c1 f8 04             	sar    eax,0x4
10001cfb:	39 c2                	cmp    edx,eax
10001cfd:	75 0a                	jne    10001d09 <ssfn_render+0xa0a>
10001cff:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10001d03:	01 c8                	add    eax,ecx
10001d05:	d1 f8                	sar    eax,1
10001d07:	eb 1a                	jmp    10001d23 <ssfn_render+0xa24>
10001d09:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10001d0d:	2b 4c 24 40          	sub    ecx,DWORD PTR [esp+0x40]
10001d11:	2b 44 24 28          	sub    eax,DWORD PTR [esp+0x28]
10001d15:	2b 5c 24 28          	sub    ebx,DWORD PTR [esp+0x28]
10001d19:	0f af c1             	imul   eax,ecx
10001d1c:	99                   	cdq    
10001d1d:	f7 fb                	idiv   ebx
10001d1f:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001d23:	c1 f8 04             	sar    eax,0x4
10001d26:	80 7c 24 1c 00       	cmp    BYTE PTR [esp+0x1c],0x0
10001d2b:	74 04                	je     10001d31 <ssfn_render+0xa32>
10001d2d:	03 44 24 4c          	add    eax,DWORD PTR [esp+0x4c]
10001d31:	83 7c 24 2c 00       	cmp    DWORD PTR [esp+0x2c],0x0
10001d36:	75 3f                	jne    10001d77 <ssfn_render+0xa78>
10001d38:	80 7c 24 3c 00       	cmp    BYTE PTR [esp+0x3c],0x0
10001d3d:	74 38                	je     10001d77 <ssfn_render+0xa78>
10001d3f:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10001d43:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10001d49:	f7 db                	neg    ebx
10001d4b:	01 c2                	add    edx,eax
10001d4d:	89 5c 24 10          	mov    DWORD PTR [esp+0x10],ebx
10001d51:	8b 4c 24 38          	mov    ecx,DWORD PTR [esp+0x38]
10001d55:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10001d59:	89 5c 24 2c          	mov    DWORD PTR [esp+0x2c],ebx
10001d5d:	8a 5c 24 08          	mov    bl,BYTE PTR [esp+0x8]
10001d61:	38 5c 11 08          	cmp    BYTE PTR [ecx+edx*1+0x8],bl
10001d65:	74 10                	je     10001d77 <ssfn_render+0xa78>
10001d67:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10001d6b:	89 5c 24 2c          	mov    DWORD PTR [esp+0x2c],ebx
10001d6f:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10001d73:	89 5c 24 10          	mov    DWORD PTR [esp+0x10],ebx
10001d77:	31 d2                	xor    edx,edx
10001d79:	39 f2                	cmp    edx,esi
10001d7b:	75 0b                	jne    10001d88 <ssfn_render+0xa89>
10001d7d:	66 89 84 54 c0 00 00 00 	mov    WORD PTR [esp+edx*2+0xc0],ax
10001d85:	46                   	inc    esi
10001d86:	eb 28                	jmp    10001db0 <ssfn_render+0xab1>
10001d88:	0f b7 8c 54 c0 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xc0]
10001d90:	39 c1                	cmp    ecx,eax
10001d92:	7d 03                	jge    10001d97 <ssfn_render+0xa98>
10001d94:	42                   	inc    edx
10001d95:	eb e2                	jmp    10001d79 <ssfn_render+0xa7a>
10001d97:	89 f1                	mov    ecx,esi
10001d99:	49                   	dec    ecx
10001d9a:	66 8b 9c 4c c0 00 00 00 	mov    bx,WORD PTR [esp+ecx*2+0xc0]
10001da2:	39 d1                	cmp    ecx,edx
10001da4:	66 89 9c 4c c2 00 00 00 	mov    WORD PTR [esp+ecx*2+0xc2],bx
10001dac:	7f eb                	jg     10001d99 <ssfn_render+0xa9a>
10001dae:	eb cd                	jmp    10001d7d <ssfn_render+0xa7e>
10001db0:	8d 47 02             	lea    eax,[edi+0x2]
10001db3:	89 84 24 bc 00 00 00 	mov    DWORD PTR [esp+0xbc],eax
10001dba:	e9 d9 fe ff ff       	jmp    10001c98 <ssfn_render+0x999>
10001dbf:	83 fe 01             	cmp    esi,0x1
10001dc2:	7e 1f                	jle    10001de3 <ssfn_render+0xae4>
10001dc4:	f7 c6 01 00 00 00    	test   esi,0x1
10001dca:	74 24                	je     10001df0 <ssfn_render+0xaf1>
10001dcc:	8d 46 ff             	lea    eax,[esi-0x1]
10001dcf:	66 8b 94 44 c0 00 00 00 	mov    dx,WORD PTR [esp+eax*2+0xc0]
10001dd7:	66 89 94 74 bc 00 00 00 	mov    WORD PTR [esp+esi*2+0xbc],dx
10001ddf:	89 c6                	mov    esi,eax
10001de1:	eb 0d                	jmp    10001df0 <ssfn_render+0xaf1>
10001de3:	85 f6                	test   esi,esi
10001de5:	0f 84 c7 00 00 00    	je     10001eb2 <ssfn_render+0xbb3>
10001deb:	be 01 00 00 00       	mov    esi,0x1
10001df0:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001df6:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10001dfa:	0f b6 48 07          	movzx  ecx,BYTE PTR [eax+0x7]
10001dfe:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
10001e02:	39 d1                	cmp    ecx,edx
10001e04:	7d 0b                	jge    10001e11 <ssfn_render+0xb12>
10001e06:	8a 54 24 14          	mov    dl,BYTE PTR [esp+0x14]
10001e0a:	03 54 24 20          	add    edx,DWORD PTR [esp+0x20]
10001e0e:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001e11:	c7 84 24 bc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xbc],0x0
10001e1c:	31 c0                	xor    eax,eax
10001e1e:	31 d2                	xor    edx,edx
10001e20:	8d 4e ff             	lea    ecx,[esi-0x1]
10001e23:	39 d1                	cmp    ecx,edx
10001e25:	7e 7d                	jle    10001ea4 <ssfn_render+0xba5>
10001e27:	0f b7 84 54 c0 00 00 00 	movzx  eax,WORD PTR [esp+edx*2+0xc0]
10001e2f:	0f b7 8c 54 c2 00 00 00 	movzx  ecx,WORD PTR [esp+edx*2+0xc2]
10001e37:	bb 00 00 00 00       	mov    ebx,0x0
10001e3c:	03 4c 24 10          	add    ecx,DWORD PTR [esp+0x10]
10001e40:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
10001e44:	0f 48 c3             	cmovs  eax,ebx
10001e47:	39 4c 24 04          	cmp    DWORD PTR [esp+0x4],ecx
10001e4b:	0f 4e 4c 24 04       	cmovle ecx,DWORD PTR [esp+0x4]
10001e50:	85 d2                	test   edx,edx
10001e52:	89 4c 24 28          	mov    DWORD PTR [esp+0x28],ecx
10001e56:	74 11                	je     10001e69 <ssfn_render+0xb6a>
10001e58:	0f b7 9c 54 be 00 00 00 	movzx  ebx,WORD PTR [esp+edx*2+0xbe]
10001e60:	03 5c 24 10          	add    ebx,DWORD PTR [esp+0x10]
10001e64:	39 d8                	cmp    eax,ebx
10001e66:	0f 4c c3             	cmovl  eax,ebx
10001e69:	3b 44 24 28          	cmp    eax,DWORD PTR [esp+0x28]
10001e6d:	7d 2b                	jge    10001e9a <ssfn_render+0xb9b>
10001e6f:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
10001e73:	8a 4c 24 08          	mov    cl,BYTE PTR [esp+0x8]
10001e77:	8d 1c 07             	lea    ebx,[edi+eax*1]
10001e7a:	8b bd 24 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf524]
10001e80:	38 4c 1f 08          	cmp    BYTE PTR [edi+ebx*1+0x8],cl
10001e84:	8b 7c 24 08          	mov    edi,DWORD PTR [esp+0x8]
10001e88:	b1 ff                	mov    cl,0xff
10001e8a:	0f 45 cf             	cmovne ecx,edi
10001e8d:	8b bd 24 f5 00 00    	mov    edi,DWORD PTR [ebp+0xf524]
10001e93:	40                   	inc    eax
10001e94:	88 4c 1f 08          	mov    BYTE PTR [edi+ebx*1+0x8],cl
10001e98:	eb cf                	jmp    10001e69 <ssfn_render+0xb6a>
10001e9a:	83 c2 02             	add    edx,0x2
10001e9d:	b0 01                	mov    al,0x1
10001e9f:	e9 7c ff ff ff       	jmp    10001e20 <ssfn_render+0xb21>
10001ea4:	83 e6 fe             	and    esi,0xfffffffe
10001ea7:	84 c0                	test   al,al
10001ea9:	74 07                	je     10001eb2 <ssfn_render+0xbb3>
10001eab:	89 b4 24 bc 00 00 00 	mov    DWORD PTR [esp+0xbc],esi
10001eb2:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
10001eb6:	ff 44 24 20          	inc    DWORD PTR [esp+0x20]
10001eba:	01 7c 24 38          	add    DWORD PTR [esp+0x38],edi
10001ebe:	83 44 24 24 10       	add    DWORD PTR [esp+0x24],0x10
10001ec3:	e9 9c fd ff ff       	jmp    10001c64 <ssfn_render+0x965>
10001ec8:	88 c2                	mov    dl,al
10001eca:	80 e2 60             	and    dl,0x60
10001ecd:	0f 85 91 02 00 00    	jne    10002164 <ssfn_render+0xe65>
10001ed3:	83 e0 1f             	and    eax,0x1f
10001ed6:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10001eda:	8d 04 c5 08 00 00 00 	lea    eax,[eax*8+0x8]
10001ee1:	c1 fb 04             	sar    ebx,0x4
10001ee4:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10001ee8:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
10001eec:	40                   	inc    eax
10001eed:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10001ef1:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10001ef5:	c1 f8 04             	sar    eax,0x4
10001ef8:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10001efc:	8b 04 24             	mov    eax,DWORD PTR [esp]
10001eff:	0f af 44 24 24       	imul   eax,DWORD PTR [esp+0x24]
10001f04:	99                   	cdq    
10001f05:	f7 fe                	idiv   esi
10001f07:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10001f0b:	8b 04 24             	mov    eax,DWORD PTR [esp]
10001f0e:	0f af 44 24 28       	imul   eax,DWORD PTR [esp+0x28]
10001f13:	99                   	cdq    
10001f14:	f7 fe                	idiv   esi
10001f16:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10001f1a:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10001f20:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001f24:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
10001f28:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001f2b:	39 d6                	cmp    esi,edx
10001f2d:	7d 0a                	jge    10001f39 <ssfn_render+0xc3a>
10001f2f:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
10001f33:	8d 14 3b             	lea    edx,[ebx+edi*1]
10001f36:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
10001f39:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10001f3d:	c7 44 24 38 00 00 00 00 	mov    DWORD PTR [esp+0x38],0x0
10001f45:	0f af c3             	imul   eax,ebx
10001f48:	31 ff                	xor    edi,edi
10001f4a:	89 44 24 40          	mov    DWORD PTR [esp+0x40],eax
10001f4e:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10001f52:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
10001f56:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10001f5a:	8b 04 24             	mov    eax,DWORD PTR [esp]
10001f5d:	29 d8                	sub    eax,ebx
10001f5f:	89 44 24 50          	mov    DWORD PTR [esp+0x50],eax
10001f63:	3b 7c 24 10          	cmp    edi,DWORD PTR [esp+0x10]
10001f67:	0f 8d b1 00 00 00    	jge    1000201e <ssfn_render+0xd1f>
10001f6d:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
10001f71:	99                   	cdq    
10001f72:	f7 7c 24 10          	idiv   DWORD PTR [esp+0x10]
10001f76:	89 c6                	mov    esi,eax
10001f78:	31 c0                	xor    eax,eax
10001f7a:	80 7c 24 1c 00       	cmp    BYTE PTR [esp+0x1c],0x0
10001f7f:	74 0e                	je     10001f8f <ssfn_render+0xc90>
10001f81:	8b 44 24 50          	mov    eax,DWORD PTR [esp+0x50]
10001f85:	bb 04 00 00 00       	mov    ebx,0x4
10001f8a:	29 f8                	sub    eax,edi
10001f8c:	99                   	cdq    
10001f8d:	f7 fb                	idiv   ebx
10001f8f:	03 44 24 48          	add    eax,DWORD PTR [esp+0x48]
10001f93:	c7 84 24 bc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xbc],0x0
10001f9e:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
10001fa2:	0f af 74 24 24       	imul   esi,DWORD PTR [esp+0x24]
10001fa7:	8b 84 24 bc 00 00 00 	mov    eax,DWORD PTR [esp+0xbc]
10001fae:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10001fb2:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10001fb6:	39 d8                	cmp    eax,ebx
10001fb8:	7d 4e                	jge    10002008 <ssfn_render+0xd09>
10001fba:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10001fbe:	0f af 44 24 14       	imul   eax,DWORD PTR [esp+0x14]
10001fc3:	99                   	cdq    
10001fc4:	f7 fb                	idiv   ebx
10001fc6:	8d 14 06             	lea    edx,[esi+eax*1]
10001fc9:	83 e0 07             	and    eax,0x7
10001fcc:	c1 fa 03             	sar    edx,0x3
10001fcf:	0f b6 54 11 02       	movzx  edx,BYTE PTR [ecx+edx*1+0x2]
10001fd4:	0f a3 c2             	bt     edx,eax
10001fd7:	72 0e                	jb     10001fe7 <ssfn_render+0xce8>
10001fd9:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10001fdd:	43                   	inc    ebx
10001fde:	89 9c 24 bc 00 00 00 	mov    DWORD PTR [esp+0xbc],ebx
10001fe5:	eb c0                	jmp    10001fa7 <ssfn_render+0xca8>
10001fe7:	31 c0                	xor    eax,eax
10001fe9:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
10001fed:	8a 5c 24 08          	mov    bl,BYTE PTR [esp+0x8]
10001ff1:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
10001ff7:	40                   	inc    eax
10001ff8:	03 54 24 4c          	add    edx,DWORD PTR [esp+0x4c]
10001ffc:	88 5c 10 07          	mov    BYTE PTR [eax+edx*1+0x7],bl
10002000:	39 44 24 18          	cmp    DWORD PTR [esp+0x18],eax
10002004:	7d e3                	jge    10001fe9 <ssfn_render+0xcea>
10002006:	eb d1                	jmp    10001fd9 <ssfn_render+0xcda>
10002008:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
1000200c:	47                   	inc    edi
1000200d:	01 74 24 48          	add    DWORD PTR [esp+0x48],esi
10002011:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10002015:	01 74 24 38          	add    DWORD PTR [esp+0x38],esi
10002019:	e9 45 ff ff ff       	jmp    10001f63 <ssfn_render+0xc64>
1000201e:	b3 fe                	mov    bl,0xfe
10002020:	f6 85 bc f5 00 00 40 	test   BYTE PTR [ebp+0xf5bc],0x40
10002027:	0f 85 17 03 00 00    	jne    10002344 <ssfn_render+0x1045>
1000202d:	31 c0                	xor    eax,eax
1000202f:	8b 3c 24             	mov    edi,DWORD PTR [esp]
10002032:	80 7c 24 08 fd       	cmp    BYTE PTR [esp+0x8],0xfd
10002037:	89 7c 24 24          	mov    DWORD PTR [esp+0x24],edi
1000203b:	0f 95 c0             	setne  al
1000203e:	8b 7c 24 20          	mov    edi,DWORD PTR [esp+0x20]
10002042:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002046:	4f                   	dec    edi
10002047:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
1000204b:	81 44 24 14 fc 00 00 00 	add    DWORD PTR [esp+0x14],0xfc
10002053:	03 44 24 04          	add    eax,DWORD PTR [esp+0x4]
10002057:	8b 94 24 bc 00 00 00 	mov    edx,DWORD PTR [esp+0xbc]
1000205e:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
10002062:	89 7c 24 38          	mov    DWORD PTR [esp+0x38],edi
10002066:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000206a:	31 c0                	xor    eax,eax
1000206c:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
1000206f:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
10002073:	83 c1 04             	add    ecx,0x4
10002076:	3b 4c 24 24          	cmp    ecx,DWORD PTR [esp+0x24]
1000207a:	0f 8d b7 02 00 00    	jge    10002337 <ssfn_render+0x1038>
10002080:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
10002084:	8d 77 01             	lea    esi,[edi+0x1]
10002087:	8b 7c 24 10          	mov    edi,DWORD PTR [esp+0x10]
1000208b:	89 74 24 28          	mov    DWORD PTR [esp+0x28],esi
1000208f:	4f                   	dec    edi
10002090:	be 01 00 00 00       	mov    esi,0x1
10002095:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10002099:	39 74 24 20          	cmp    DWORD PTR [esp+0x20],esi
1000209d:	7e 63                	jle    10002102 <ssfn_render+0xe03>
1000209f:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
100020a3:	b9 01 00 00 00       	mov    ecx,0x1
100020a8:	89 ca                	mov    edx,ecx
100020aa:	39 4c 24 38          	cmp    DWORD PTR [esp+0x38],ecx
100020ae:	7e 45                	jle    100020f5 <ssfn_render+0xdf6>
100020b0:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
100020b6:	80 7c 02 08 ff       	cmp    BYTE PTR [edx+eax*1+0x8],0xff
100020bb:	75 34                	jne    100020f1 <ssfn_render+0xdf2>
100020bd:	89 c7                	mov    edi,eax
100020bf:	8a 5c 24 08          	mov    bl,BYTE PTR [esp+0x8]
100020c3:	2b 7c 24 04          	sub    edi,DWORD PTR [esp+0x4]
100020c7:	38 5c 3a 08          	cmp    BYTE PTR [edx+edi*1+0x8],bl
100020cb:	74 0c                	je     100020d9 <ssfn_render+0xdda>
100020cd:	8b 7c 24 04          	mov    edi,DWORD PTR [esp+0x4]
100020d1:	01 d7                	add    edi,edx
100020d3:	38 5c 38 08          	cmp    BYTE PTR [eax+edi*1+0x8],bl
100020d7:	75 18                	jne    100020f1 <ssfn_render+0xdf2>
100020d9:	8a 5c 24 08          	mov    bl,BYTE PTR [esp+0x8]
100020dd:	38 5c 02 07          	cmp    BYTE PTR [edx+eax*1+0x7],bl
100020e1:	74 06                	je     100020e9 <ssfn_render+0xdea>
100020e3:	38 5c 02 09          	cmp    BYTE PTR [edx+eax*1+0x9],bl
100020e7:	75 08                	jne    100020f1 <ssfn_render+0xdf2>
100020e9:	8a 5c 24 14          	mov    bl,BYTE PTR [esp+0x14]
100020ed:	88 5c 02 08          	mov    BYTE PTR [edx+eax*1+0x8],bl
100020f1:	41                   	inc    ecx
100020f2:	40                   	inc    eax
100020f3:	eb b3                	jmp    100020a8 <ssfn_render+0xda9>
100020f5:	8b 5c 24 04          	mov    ebx,DWORD PTR [esp+0x4]
100020f9:	46                   	inc    esi
100020fa:	01 5c 24 28          	add    DWORD PTR [esp+0x28],ebx
100020fe:	b0 01                	mov    al,0x1
10002100:	eb 97                	jmp    10002099 <ssfn_render+0xd9a>
10002102:	8b 7c 24 2c          	mov    edi,DWORD PTR [esp+0x2c]
10002106:	bb 01 00 00 00       	mov    ebx,0x1
1000210b:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
1000210f:	39 5c 24 20          	cmp    DWORD PTR [esp+0x20],ebx
10002113:	7e 3d                	jle    10002152 <ssfn_render+0xe53>
10002115:	b8 01 00 00 00       	mov    eax,0x1
1000211a:	89 c2                	mov    edx,eax
1000211c:	39 44 24 38          	cmp    DWORD PTR [esp+0x38],eax
10002120:	7e 23                	jle    10002145 <ssfn_render+0xe46>
10002122:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
10002126:	8b b5 24 f5 00 00    	mov    esi,DWORD PTR [ebp+0xf524]
1000212c:	8d 14 07             	lea    edx,[edi+eax*1]
1000212f:	0f b6 7c 16 08       	movzx  edi,BYTE PTR [esi+edx*1+0x8]
10002134:	3b 7c 24 14          	cmp    edi,DWORD PTR [esp+0x14]
10002138:	75 08                	jne    10002142 <ssfn_render+0xe43>
1000213a:	8a 4c 24 08          	mov    cl,BYTE PTR [esp+0x8]
1000213e:	88 4c 16 08          	mov    BYTE PTR [esi+edx*1+0x8],cl
10002142:	40                   	inc    eax
10002143:	eb d5                	jmp    1000211a <ssfn_render+0xe1b>
10002145:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
10002149:	43                   	inc    ebx
1000214a:	01 74 24 28          	add    DWORD PTR [esp+0x28],esi
1000214e:	b0 01                	mov    al,0x1
10002150:	eb bd                	jmp    1000210f <ssfn_render+0xe10>
10002152:	8b 4d 18             	mov    ecx,DWORD PTR [ebp+0x18]
10002155:	0f b6 49 0b          	movzx  ecx,BYTE PTR [ecx+0xb]
10002159:	01 c9                	add    ecx,ecx
1000215b:	29 4c 24 24          	sub    DWORD PTR [esp+0x24],ecx
1000215f:	e9 08 ff ff ff       	jmp    1000206c <ssfn_render+0xd6d>
10002164:	b3 fe                	mov    bl,0xfe
10002166:	80 fa 20             	cmp    dl,0x20
10002169:	0f 85 d5 01 00 00    	jne    10002344 <ssfn_render+0x1045>
1000216f:	89 c3                	mov    ebx,eax
10002171:	0f b6 41 01          	movzx  eax,BYTE PTR [ecx+0x1]
10002175:	c1 e3 08             	shl    ebx,0x8
10002178:	81 e3 00 1f 00 00    	and    ebx,0x1f00
1000217e:	09 c3                	or     ebx,eax
10002180:	0f b6 41 02          	movzx  eax,BYTE PTR [ecx+0x2]
10002184:	43                   	inc    ebx
10002185:	40                   	inc    eax
10002186:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
1000218a:	0f b6 41 03          	movzx  eax,BYTE PTR [ecx+0x3]
1000218e:	40                   	inc    eax
1000218f:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10002193:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
10002197:	c1 f8 04             	sar    eax,0x4
1000219a:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
1000219e:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100021a2:	c1 f8 04             	sar    eax,0x4
100021a5:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100021a9:	8b 04 24             	mov    eax,DWORD PTR [esp]
100021ac:	0f af 44 24 24       	imul   eax,DWORD PTR [esp+0x24]
100021b1:	99                   	cdq    
100021b2:	f7 fe                	idiv   esi
100021b4:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100021b8:	8b 04 24             	mov    eax,DWORD PTR [esp]
100021bb:	0f af 44 24 28       	imul   eax,DWORD PTR [esp+0x28]
100021c0:	99                   	cdq    
100021c1:	f7 fe                	idiv   esi
100021c3:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
100021c7:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100021cb:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100021d1:	03 54 24 14          	add    edx,DWORD PTR [esp+0x14]
100021d5:	0f b6 70 07          	movzx  esi,BYTE PTR [eax+0x7]
100021d9:	39 d6                	cmp    esi,edx
100021db:	7d 0b                	jge    100021e8 <ssfn_render+0xee9>
100021dd:	8a 54 24 08          	mov    dl,BYTE PTR [esp+0x8]
100021e1:	03 54 24 14          	add    edx,DWORD PTR [esp+0x14]
100021e5:	88 50 07             	mov    BYTE PTR [eax+0x7],dl
100021e8:	83 c1 04             	add    ecx,0x4
100021eb:	c7 84 24 bc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xbc],0x0
100021f6:	8d 04 19             	lea    eax,[ecx+ebx*1]
100021f9:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100021fd:	3b 4c 24 38          	cmp    ecx,DWORD PTR [esp+0x38]
10002201:	72 34                	jb     10002237 <ssfn_render+0xf38>
10002203:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10002207:	8b 34 24             	mov    esi,DWORD PTR [esp]
1000220a:	0f af 44 24 08       	imul   eax,DWORD PTR [esp+0x8]
1000220f:	2b 74 24 08          	sub    esi,DWORD PTR [esp+0x8]
10002213:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
10002217:	8b 94 24 bc 00 00 00 	mov    edx,DWORD PTR [esp+0xbc]
1000221e:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002222:	c7 44 24 20 00 00 00 00 	mov    DWORD PTR [esp+0x20],0x0
1000222a:	31 c0                	xor    eax,eax
1000222c:	31 ff                	xor    edi,edi
1000222e:	89 74 24 38          	mov    DWORD PTR [esp+0x38],esi
10002232:	e9 d1 00 00 00       	jmp    10002308 <ssfn_render+0x1009>
10002237:	8a 11                	mov    dl,BYTE PTR [ecx]
10002239:	89 d0                	mov    eax,edx
1000223b:	83 e0 7f             	and    eax,0x7f
1000223e:	84 d2                	test   dl,dl
10002240:	8d 78 01             	lea    edi,[eax+0x1]
10002243:	78 09                	js     1000224e <ssfn_render+0xf4f>
10002245:	41                   	inc    ecx
10002246:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
1000224a:	89 ca                	mov    edx,ecx
1000224c:	eb 3d                	jmp    1000228b <ssfn_render+0xf8c>
1000224e:	48                   	dec    eax
1000224f:	8b 94 24 bc 00 00 00 	mov    edx,DWORD PTR [esp+0xbc]
10002256:	83 f8 fe             	cmp    eax,0xfffffffe
10002259:	74 16                	je     10002271 <ssfn_render+0xf72>
1000225b:	8d 5a 01             	lea    ebx,[edx+0x1]
1000225e:	89 9c 24 bc 00 00 00 	mov    DWORD PTR [esp+0xbc],ebx
10002265:	8a 59 01             	mov    bl,BYTE PTR [ecx+0x1]
10002268:	88 9c 14 c0 05 00 00 	mov    BYTE PTR [esp+edx*1+0x5c0],bl
1000226f:	eb dd                	jmp    1000224e <ssfn_render+0xf4f>
10002271:	83 c1 02             	add    ecx,0x2
10002274:	eb 87                	jmp    100021fd <ssfn_render+0xefe>
10002276:	42                   	inc    edx
10002277:	8d 73 01             	lea    esi,[ebx+0x1]
1000227a:	89 b4 24 bc 00 00 00 	mov    DWORD PTR [esp+0xbc],esi
10002281:	8a 42 ff             	mov    al,BYTE PTR [edx-0x1]
10002284:	88 84 1c c0 05 00 00 	mov    BYTE PTR [esp+ebx*1+0x5c0],al
1000228b:	ff 4c 24 20          	dec    DWORD PTR [esp+0x20]
1000228f:	8b 9c 24 bc 00 00 00 	mov    ebx,DWORD PTR [esp+0xbc]
10002296:	83 7c 24 20 fe       	cmp    DWORD PTR [esp+0x20],0xfffffffe
1000229b:	75 d9                	jne    10002276 <ssfn_render+0xf77>
1000229d:	01 f9                	add    ecx,edi
1000229f:	e9 59 ff ff ff       	jmp    100021fd <ssfn_render+0xefe>
100022a4:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100022a8:	8b 4c 24 24          	mov    ecx,DWORD PTR [esp+0x24]
100022ac:	99                   	cdq    
100022ad:	f7 7c 24 14          	idiv   DWORD PTR [esp+0x14]
100022b1:	0f af c8             	imul   ecx,eax
100022b4:	31 c0                	xor    eax,eax
100022b6:	80 7c 24 1c 00       	cmp    BYTE PTR [esp+0x1c],0x0
100022bb:	74 0e                	je     100022cb <ssfn_render+0xfcc>
100022bd:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
100022c1:	bb 04 00 00 00       	mov    ebx,0x4
100022c6:	29 f8                	sub    eax,edi
100022c8:	99                   	cdq    
100022c9:	f7 fb                	idiv   ebx
100022cb:	03 44 24 2c          	add    eax,DWORD PTR [esp+0x2c]
100022cf:	31 db                	xor    ebx,ebx
100022d1:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100022d5:	31 f6                	xor    esi,esi
100022d7:	8d 84 24 c0 05 01 00 	lea    eax,[esp+0x105c0]
100022de:	01 c1                	add    ecx,eax
100022e0:	39 74 24 10          	cmp    DWORD PTR [esp+0x10],esi
100022e4:	7f 2a                	jg     10002310 <ssfn_render+0x1011>
100022e6:	83 7c 24 10 00       	cmp    DWORD PTR [esp+0x10],0x0
100022eb:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
100022ef:	ba 00 00 00 00       	mov    edx,0x0
100022f4:	b0 01                	mov    al,0x1
100022f6:	0f 49 54 24 10       	cmovns edx,DWORD PTR [esp+0x10]
100022fb:	01 74 24 2c          	add    DWORD PTR [esp+0x2c],esi
100022ff:	47                   	inc    edi
10002300:	8b 74 24 28          	mov    esi,DWORD PTR [esp+0x28]
10002304:	01 74 24 20          	add    DWORD PTR [esp+0x20],esi
10002308:	3b 7c 24 14          	cmp    edi,DWORD PTR [esp+0x14]
1000230c:	7c 96                	jl     100022a4 <ssfn_render+0xfa5>
1000230e:	eb 27                	jmp    10002337 <ssfn_render+0x1038>
10002310:	89 d8                	mov    eax,ebx
10002312:	99                   	cdq    
10002313:	f7 7c 24 10          	idiv   DWORD PTR [esp+0x10]
10002317:	8a 84 08 00 00 ff ff 	mov    al,BYTE PTR [eax+ecx*1-0x10000]
1000231e:	3c ff                	cmp    al,0xff
10002320:	74 0e                	je     10002330 <ssfn_render+0x1031>
10002322:	8b 54 24 08          	mov    edx,DWORD PTR [esp+0x8]
10002326:	03 95 24 f5 00 00    	add    edx,DWORD PTR [ebp+0xf524]
1000232c:	88 44 16 08          	mov    BYTE PTR [esi+edx*1+0x8],al
10002330:	46                   	inc    esi
10002331:	03 5c 24 24          	add    ebx,DWORD PTR [esp+0x24]
10002335:	eb a9                	jmp    100022e0 <ssfn_render+0xfe1>
10002337:	84 c0                	test   al,al
10002339:	74 07                	je     10002342 <ssfn_render+0x1043>
1000233b:	89 94 24 bc 00 00 00 	mov    DWORD PTR [esp+0xbc],edx
10002342:	b3 fe                	mov    bl,0xfe
10002344:	ff 44 24 44          	inc    DWORD PTR [esp+0x44]
10002348:	88 5c 24 08          	mov    BYTE PTR [esp+0x8],bl
1000234c:	e9 b3 f5 ff ff       	jmp    10001904 <ssfn_render+0x605>
10002351:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002357:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
1000235a:	8a 52 0c             	mov    dl,BYTE PTR [edx+0xc]
1000235d:	88 50 06             	mov    BYTE PTR [eax+0x6],dl
10002360:	8b 95 24 f5 00 00    	mov    edx,DWORD PTR [ebp+0xf524]
10002366:	0f b6 5a 07          	movzx  ebx,BYTE PTR [edx+0x7]
1000236a:	0f b6 4a 06          	movzx  ecx,BYTE PTR [edx+0x6]
1000236e:	89 d8                	mov    eax,ebx
10002370:	41                   	inc    ecx
10002371:	48                   	dec    eax
10002372:	2a 42 06             	sub    al,BYTE PTR [edx+0x6]
10002375:	39 cb                	cmp    ebx,ecx
10002377:	b1 00                	mov    cl,0x0
10002379:	0f 4e c1             	cmovle eax,ecx
1000237c:	88 42 07             	mov    BYTE PTR [edx+0x7],al
1000237f:	83 bc 24 e4 05 01 00 00 	cmp    DWORD PTR [esp+0x105e4],0x0
10002387:	0f 84 64 0c 00 00    	je     10002ff1 <ssfn_render+0x1cf2>
1000238d:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
10002393:	8b b5 c0 f5 00 00    	mov    esi,DWORD PTR [ebp+0xf5c0]
10002399:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
1000239d:	8b 5d 18             	mov    ebx,DWORD PTR [ebp+0x18]
100023a0:	89 34 24             	mov    DWORD PTR [esp],esi
100023a3:	0f ba e0 0c          	bt     eax,0xc
100023a7:	72 21                	jb     100023ca <ssfn_render+0x10cb>
100023a9:	8a 43 08             	mov    al,BYTE PTR [ebx+0x8]
100023ac:	83 e0 0f             	and    eax,0xf
100023af:	3c 03                	cmp    al,0x3
100023b1:	74 17                	je     100023ca <ssfn_render+0x10cb>
100023b3:	0f b6 4b 0c          	movzx  ecx,BYTE PTR [ebx+0xc]
100023b7:	84 c9                	test   cl,cl
100023b9:	74 0f                	je     100023ca <ssfn_render+0x10cb>
100023bb:	0f b6 53 0b          	movzx  edx,BYTE PTR [ebx+0xb]
100023bf:	0f af d6             	imul   edx,esi
100023c2:	89 d0                	mov    eax,edx
100023c4:	99                   	cdq    
100023c5:	f7 f9                	idiv   ecx
100023c7:	89 04 24             	mov    DWORD PTR [esp],eax
100023ca:	8b 04 24             	mov    eax,DWORD PTR [esp]
100023cd:	39 85 c4 f5 00 00    	cmp    DWORD PTR [ebp+0xf5c4],eax
100023d3:	7d 06                	jge    100023db <ssfn_render+0x10dc>
100023d5:	89 85 c4 f5 00 00    	mov    DWORD PTR [ebp+0xf5c4],eax
100023db:	8b 8d 24 f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf524]
100023e1:	0f b6 79 02          	movzx  edi,BYTE PTR [ecx+0x2]
100023e5:	0f b7 11             	movzx  edx,WORD PTR [ecx]
100023e8:	0f af 14 24          	imul   edx,DWORD PTR [esp]
100023ec:	89 d0                	mov    eax,edx
100023ee:	99                   	cdq    
100023ef:	f7 ff                	idiv   edi
100023f1:	0f b6 7b 0b          	movzx  edi,BYTE PTR [ebx+0xb]
100023f5:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100023f9:	0f b6 41 03          	movzx  eax,BYTE PTR [ecx+0x3]
100023fd:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10002401:	0f b6 41 04          	movzx  eax,BYTE PTR [ecx+0x4]
10002405:	2b 44 24 08          	sub    eax,DWORD PTR [esp+0x8]
10002409:	0f af 04 24          	imul   eax,DWORD PTR [esp]
1000240d:	8d 44 07 ff          	lea    eax,[edi+eax*1-0x1]
10002411:	99                   	cdq    
10002412:	f7 ff                	idiv   edi
10002414:	31 d2                	xor    edx,edx
10002416:	83 fe 10             	cmp    esi,0x10
10002419:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
1000241d:	0f 9f c2             	setg   dl
10002420:	42                   	inc    edx
10002421:	3b 54 24 0c          	cmp    edx,DWORD PTR [esp+0xc]
10002425:	0f 4d f2             	cmovge esi,edx
10002428:	39 c2                	cmp    edx,eax
1000242a:	89 74 24 14          	mov    DWORD PTR [esp+0x14],esi
1000242e:	0f 4d c2             	cmovge eax,edx
10002431:	80 79 04 00          	cmp    BYTE PTR [ecx+0x4],0x0
10002435:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10002439:	74 47                	je     10002482 <ssfn_render+0x1183>
1000243b:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
1000243f:	0f af 04 24          	imul   eax,DWORD PTR [esp]
10002443:	8d 44 07 ff          	lea    eax,[edi+eax*1-0x1]
10002447:	99                   	cdq    
10002448:	f7 ff                	idiv   edi
1000244a:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
1000244e:	81 e2 00 08 00 00    	and    edx,0x800
10002454:	0f 45 d6             	cmovne edx,esi
10002457:	01 d0                	add    eax,edx
10002459:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
1000245f:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
10002463:	0f b6 5b 0b          	movzx  ebx,BYTE PTR [ebx+0xb]
10002467:	0f b6 41 06          	movzx  eax,BYTE PTR [ecx+0x6]
1000246b:	0f af 04 24          	imul   eax,DWORD PTR [esp]
1000246f:	8d 44 03 ff          	lea    eax,[ebx+eax*1-0x1]
10002473:	99                   	cdq    
10002474:	f7 fb                	idiv   ebx
10002476:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
1000247a:	89 85 8c f5 00 00    	mov    DWORD PTR [ebp+0xf58c],eax
10002480:	eb 22                	jmp    100024a4 <ssfn_render+0x11a5>
10002482:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10002486:	c7 85 8c f5 00 00 00 00 00 00 	mov    DWORD PTR [ebp+0xf58c],0x0
10002490:	d1 f8                	sar    eax,1
10002492:	c7 44 24 18 00 00 00 00 	mov    DWORD PTR [esp+0x18],0x0
1000249a:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
1000249e:	89 85 88 f5 00 00    	mov    DWORD PTR [ebp+0xf588],eax
100024a4:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
100024ab:	8b 18                	mov    ebx,DWORD PTR [eax]
100024ad:	85 db                	test   ebx,ebx
100024af:	0f 84 e4 08 00 00    	je     10002d99 <ssfn_render+0x1a9a>
100024b5:	0f bf 50 04          	movsx  edx,WORD PTR [eax+0x4]
100024b9:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
100024bd:	89 d1                	mov    ecx,edx
100024bf:	89 d0                	mov    eax,edx
100024c1:	66 c1 f9 0b          	sar    cx,0xb
100024c5:	c1 f8 1f             	sar    eax,0x1f
100024c8:	31 c2                	xor    edx,eax
100024ca:	89 54 24 50          	mov    DWORD PTR [esp+0x50],edx
100024ce:	29 44 24 50          	sub    DWORD PTR [esp+0x50],eax
100024d2:	88 c8                	mov    al,cl
100024d4:	83 e0 10             	and    eax,0x10
100024d7:	88 44 24 08          	mov    BYTE PTR [esp+0x8],al
100024db:	8b 04 24             	mov    eax,DWORD PTR [esp]
100024de:	83 c0 40             	add    eax,0x40
100024e1:	c1 f8 06             	sar    eax,0x6
100024e4:	39 7c 24 14          	cmp    DWORD PTR [esp+0x14],edi
100024e8:	89 84 24 90 00 00 00 	mov    DWORD PTR [esp+0x90],eax
100024ef:	89 f8                	mov    eax,edi
100024f1:	0f 4d 44 24 14       	cmovge eax,DWORD PTR [esp+0x14]
100024f6:	89 84 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],eax
100024fd:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002500:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
10002504:	0f b6 40 0d          	movzx  eax,BYTE PTR [eax+0xd]
10002508:	0f af 04 24          	imul   eax,DWORD PTR [esp]
1000250c:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002510:	99                   	cdq    
10002511:	f7 f9                	idiv   ecx
10002513:	89 44 24 60          	mov    DWORD PTR [esp+0x60],eax
10002517:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
1000251e:	8b 40 10             	mov    eax,DWORD PTR [eax+0x10]
10002521:	0f b6 fc             	movzx  edi,ah
10002524:	89 c2                	mov    edx,eax
10002526:	89 7c 24 58          	mov    DWORD PTR [esp+0x58],edi
1000252a:	c1 ea 10             	shr    edx,0x10
1000252d:	0f b6 f2             	movzx  esi,dl
10002530:	89 74 24 54          	mov    DWORD PTR [esp+0x54],esi
10002534:	0f b6 f0             	movzx  esi,al
10002537:	c1 e8 18             	shr    eax,0x18
1000253a:	89 74 24 5c          	mov    DWORD PTR [esp+0x5c],esi
1000253e:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10002542:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
10002549:	8b 40 14             	mov    eax,DWORD PTR [eax+0x14]
1000254c:	0f b6 f4             	movzx  esi,ah
1000254f:	89 c2                	mov    edx,eax
10002551:	89 74 24 7c          	mov    DWORD PTR [esp+0x7c],esi
10002555:	c1 ea 10             	shr    edx,0x10
10002558:	0f b6 c0             	movzx  eax,al
1000255b:	0f b6 fa             	movzx  edi,dl
1000255e:	89 44 24 78          	mov    DWORD PTR [esp+0x78],eax
10002562:	8b b4 24 e4 05 01 00 	mov    esi,DWORD PTR [esp+0x105e4]
10002569:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
10002570:	0f b7 56 08          	movzx  edx,WORD PTR [esi+0x8]
10002574:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002578:	89 bc 24 80 00 00 00 	mov    DWORD PTR [esp+0x80],edi
1000257f:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
10002583:	0f af c2             	imul   eax,edx
10002586:	0f bf 56 0a          	movsx  edx,WORD PTR [esi+0xa]
1000258a:	c7 44 24 40 00 00 00 00 	mov    DWORD PTR [esp+0x40],0x0
10002592:	2b 54 24 10          	sub    edx,DWORD PTR [esp+0x10]
10002596:	c7 44 24 44 00 00 00 00 	mov    DWORD PTR [esp+0x44],0x0
1000259e:	8d 04 90             	lea    eax,[eax+edx*4]
100025a1:	01 d8                	add    eax,ebx
100025a3:	89 44 24 74          	mov    DWORD PTR [esp+0x74],eax
100025a7:	8b 84 24 8c 00 00 00 	mov    eax,DWORD PTR [esp+0x8c]
100025ae:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
100025b2:	8b 3c 24             	mov    edi,DWORD PTR [esp]
100025b5:	39 7c 24 40          	cmp    DWORD PTR [esp+0x40],edi
100025b9:	0f 8d b6 04 00 00    	jge    10002a75 <ssfn_render+0x1776>
100025bf:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
100025c6:	8b b4 24 e4 05 01 00 	mov    esi,DWORD PTR [esp+0x105e4]
100025cd:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
100025d1:	0f bf 56 06          	movsx  edx,WORD PTR [esi+0x6]
100025d5:	03 44 24 40          	add    eax,DWORD PTR [esp+0x40]
100025d9:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
100025dd:	39 d0                	cmp    eax,edx
100025df:	0f 8d 90 04 00 00    	jge    10002a75 <ssfn_render+0x1776>
100025e5:	85 c0                	test   eax,eax
100025e7:	0f 88 6b 04 00 00    	js     10002a58 <ssfn_render+0x1759>
100025ed:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100025f3:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
100025f7:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
100025fb:	c1 e1 08             	shl    ecx,0x8
100025fe:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
10002606:	89 c8                	mov    eax,ecx
10002608:	0f af c3             	imul   eax,ebx
1000260b:	99                   	cdq    
1000260c:	f7 ff                	idiv   edi
1000260e:	89 84 24 84 00 00 00 	mov    DWORD PTR [esp+0x84],eax
10002615:	c1 f8 08             	sar    eax,0x8
10002618:	89 84 24 98 00 00 00 	mov    DWORD PTR [esp+0x98],eax
1000261f:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
10002625:	0f af c3             	imul   eax,ebx
10002628:	99                   	cdq    
10002629:	f7 ff                	idiv   edi
1000262b:	89 44 24 64          	mov    DWORD PTR [esp+0x64],eax
1000262f:	c1 f8 08             	sar    eax,0x8
10002632:	89 84 24 9c 00 00 00 	mov    DWORD PTR [esp+0x9c],eax
10002639:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
10002640:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002644:	03 44 24 04          	add    eax,DWORD PTR [esp+0x4]
10002648:	2b 44 24 10          	sub    eax,DWORD PTR [esp+0x10]
1000264c:	3b 44 24 50          	cmp    eax,DWORD PTR [esp+0x50]
10002650:	0f 8d 02 04 00 00    	jge    10002a58 <ssfn_render+0x1759>
10002656:	85 c0                	test   eax,eax
10002658:	0f 88 e8 03 00 00    	js     10002a46 <ssfn_render+0x1747>
1000265e:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
10002665:	83 78 14 00          	cmp    DWORD PTR [eax+0x14],0x0
10002669:	75 36                	jne    100026a1 <ssfn_render+0x13a2>
1000266b:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
1000266f:	8b 44 24 74          	mov    eax,DWORD PTR [esp+0x74]
10002673:	b9 10 00 00 00       	mov    ecx,0x10
10002678:	8b 04 b0             	mov    eax,DWORD PTR [eax+esi*4]
1000267b:	2b 4c 24 08          	sub    ecx,DWORD PTR [esp+0x8]
1000267f:	89 c2                	mov    edx,eax
10002681:	0f b6 f4             	movzx  esi,ah
10002684:	d3 ea                	shr    edx,cl
10002686:	89 74 24 7c          	mov    DWORD PTR [esp+0x7c],esi
1000268a:	0f b6 fa             	movzx  edi,dl
1000268d:	8a 4c 24 08          	mov    cl,BYTE PTR [esp+0x8]
10002691:	89 bc 24 80 00 00 00 	mov    DWORD PTR [esp+0x80],edi
10002698:	d3 e8                	shr    eax,cl
1000269a:	0f b6 c0             	movzx  eax,al
1000269d:	89 44 24 78          	mov    DWORD PTR [esp+0x78],eax
100026a1:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
100026a7:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
100026ab:	0f b7 18             	movzx  ebx,WORD PTR [eax]
100026ae:	c1 e1 08             	shl    ecx,0x8
100026b1:	89 44 24 6c          	mov    DWORD PTR [esp+0x6c],eax
100026b5:	c7 44 24 20 00 00 00 00 	mov    DWORD PTR [esp+0x20],0x0
100026bd:	89 c8                	mov    eax,ecx
100026bf:	c7 44 24 34 00 00 00 00 	mov    DWORD PTR [esp+0x34],0x0
100026c7:	0f af c3             	imul   eax,ebx
100026ca:	c7 44 24 30 00 00 00 00 	mov    DWORD PTR [esp+0x30],0x0
100026d2:	99                   	cdq    
100026d3:	c7 44 24 2c 00 00 00 00 	mov    DWORD PTR [esp+0x2c],0x0
100026db:	f7 7c 24 14          	idiv   DWORD PTR [esp+0x14]
100026df:	c7 44 24 28 00 00 00 00 	mov    DWORD PTR [esp+0x28],0x0
100026e7:	89 84 24 88 00 00 00 	mov    DWORD PTR [esp+0x88],eax
100026ee:	c1 f8 08             	sar    eax,0x8
100026f1:	89 84 24 a0 00 00 00 	mov    DWORD PTR [esp+0xa0],eax
100026f8:	8d 81 00 01 00 00    	lea    eax,[ecx+0x100]
100026fe:	0f af c3             	imul   eax,ebx
10002701:	99                   	cdq    
10002702:	f7 7c 24 14          	idiv   DWORD PTR [esp+0x14]
10002706:	89 44 24 68          	mov    DWORD PTR [esp+0x68],eax
1000270a:	c1 f8 08             	sar    eax,0x8
1000270d:	89 84 24 a4 00 00 00 	mov    DWORD PTR [esp+0xa4],eax
10002714:	8b 84 24 84 00 00 00 	mov    eax,DWORD PTR [esp+0x84]
1000271b:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
1000271f:	8b 74 24 64          	mov    esi,DWORD PTR [esp+0x64]
10002723:	39 74 24 3c          	cmp    DWORD PTR [esp+0x3c],esi
10002727:	0f 8d 43 02 00 00    	jge    10002970 <ssfn_render+0x1671>
1000272d:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10002731:	c1 f8 08             	sar    eax,0x8
10002734:	3b 84 24 98 00 00 00 	cmp    eax,DWORD PTR [esp+0x98]
1000273b:	75 2a                	jne    10002767 <ssfn_render+0x1468>
1000273d:	0f b6 54 24 3c       	movzx  edx,BYTE PTR [esp+0x3c]
10002742:	bf 00 01 00 00       	mov    edi,0x100
10002747:	81 64 24 3c 00 ff ff ff 	and    DWORD PTR [esp+0x3c],0xffffff00
1000274f:	29 d7                	sub    edi,edx
10002751:	89 f1                	mov    ecx,esi
10002753:	89 fa                	mov    edx,edi
10002755:	2b 8c 24 84 00 00 00 	sub    ecx,DWORD PTR [esp+0x84]
1000275c:	39 f9                	cmp    ecx,edi
1000275e:	0f 4e d1             	cmovle edx,ecx
10002761:	89 54 24 24          	mov    DWORD PTR [esp+0x24],edx
10002765:	eb 1a                	jmp    10002781 <ssfn_render+0x1482>
10002767:	c7 44 24 24 00 01 00 00 	mov    DWORD PTR [esp+0x24],0x100
1000276f:	3b 84 24 9c 00 00 00 	cmp    eax,DWORD PTR [esp+0x9c]
10002776:	75 09                	jne    10002781 <ssfn_render+0x1482>
10002778:	0f b6 5c 24 64       	movzx  ebx,BYTE PTR [esp+0x64]
1000277d:	89 5c 24 24          	mov    DWORD PTR [esp+0x24],ebx
10002781:	8b 7c 24 6c          	mov    edi,DWORD PTR [esp+0x6c]
10002785:	0f b7 17             	movzx  edx,WORD PTR [edi]
10002788:	0f af d0             	imul   edx,eax
1000278b:	0f b6 44 24 68       	movzx  eax,BYTE PTR [esp+0x68]
10002790:	89 94 24 a8 00 00 00 	mov    DWORD PTR [esp+0xa8],edx
10002797:	0f af 44 24 24       	imul   eax,DWORD PTR [esp+0x24]
1000279c:	c1 f8 08             	sar    eax,0x8
1000279f:	89 84 24 ac 00 00 00 	mov    DWORD PTR [esp+0xac],eax
100027a6:	8b 84 24 88 00 00 00 	mov    eax,DWORD PTR [esp+0x88]
100027ad:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
100027b1:	8b 44 24 68          	mov    eax,DWORD PTR [esp+0x68]
100027b5:	2b 84 24 88 00 00 00 	sub    eax,DWORD PTR [esp+0x88]
100027bc:	89 84 24 94 00 00 00 	mov    DWORD PTR [esp+0x94],eax
100027c3:	8b 7c 24 68          	mov    edi,DWORD PTR [esp+0x68]
100027c7:	39 7c 24 38          	cmp    DWORD PTR [esp+0x38],edi
100027cb:	0f 8d 92 01 00 00    	jge    10002963 <ssfn_render+0x1664>
100027d1:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
100027d5:	c1 f8 08             	sar    eax,0x8
100027d8:	3b 84 24 a0 00 00 00 	cmp    eax,DWORD PTR [esp+0xa0]
100027df:	75 39                	jne    1000281a <ssfn_render+0x151b>
100027e1:	0f b6 54 24 38       	movzx  edx,BYTE PTR [esp+0x38]
100027e6:	be 00 01 00 00       	mov    esi,0x100
100027eb:	81 64 24 38 00 ff ff ff 	and    DWORD PTR [esp+0x38],0xffffff00
100027f3:	29 d6                	sub    esi,edx
100027f5:	8b 8c 24 94 00 00 00 	mov    ecx,DWORD PTR [esp+0x94]
100027fc:	39 f1                	cmp    ecx,esi
100027fe:	7c 0e                	jl     1000280e <ssfn_render+0x150f>
10002800:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
10002804:	81 fe 00 01 00 00    	cmp    esi,0x100
1000280a:	74 21                	je     1000282d <ssfn_render+0x152e>
1000280c:	89 f1                	mov    ecx,esi
1000280e:	0f af 4c 24 24       	imul   ecx,DWORD PTR [esp+0x24]
10002813:	89 cf                	mov    edi,ecx
10002815:	c1 ff 08             	sar    edi,0x8
10002818:	eb 13                	jmp    1000282d <ssfn_render+0x152e>
1000281a:	3b 84 24 a4 00 00 00 	cmp    eax,DWORD PTR [esp+0xa4]
10002821:	8b 7c 24 24          	mov    edi,DWORD PTR [esp+0x24]
10002825:	0f 44 bc 24 ac 00 00 00 	cmove  edi,DWORD PTR [esp+0xac]
1000282d:	03 44 24 6c          	add    eax,DWORD PTR [esp+0x6c]
10002831:	01 7c 24 20          	add    DWORD PTR [esp+0x20],edi
10002835:	8b 9c 24 a8 00 00 00 	mov    ebx,DWORD PTR [esp+0xa8]
1000283c:	0f b6 54 03 08       	movzx  edx,BYTE PTR [ebx+eax*1+0x8]
10002841:	81 fa ff 00 00 00    	cmp    edx,0xff
10002847:	75 31                	jne    1000287a <ssfn_render+0x157b>
10002849:	8b 44 24 78          	mov    eax,DWORD PTR [esp+0x78]
1000284d:	81 44 24 34 ff 00 00 00 	add    DWORD PTR [esp+0x34],0xff
10002855:	0f af c7             	imul   eax,edi
10002858:	01 44 24 30          	add    DWORD PTR [esp+0x30],eax
1000285c:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10002860:	0f af c7             	imul   eax,edi
10002863:	01 44 24 2c          	add    DWORD PTR [esp+0x2c],eax
10002867:	8b 84 24 80 00 00 00 	mov    eax,DWORD PTR [esp+0x80]
1000286e:	0f af c7             	imul   eax,edi
10002871:	01 44 24 28          	add    DWORD PTR [esp+0x28],eax
10002875:	e9 dc 00 00 00       	jmp    10002956 <ssfn_render+0x1657>
1000287a:	81 fa fe 00 00 00    	cmp    edx,0xfe
10002880:	74 2d                	je     100028af <ssfn_render+0x15b0>
10002882:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002885:	8b 48 1c             	mov    ecx,DWORD PTR [eax+0x1c]
10002888:	85 c9                	test   ecx,ecx
1000288a:	74 23                	je     100028af <ssfn_render+0x15b0>
1000288c:	01 c8                	add    eax,ecx
1000288e:	8b 1c 90             	mov    ebx,DWORD PTR [eax+edx*4]
10002891:	89 d9                	mov    ecx,ebx
10002893:	89 9c 24 b4 00 00 00 	mov    DWORD PTR [esp+0xb4],ebx
1000289a:	c1 e9 10             	shr    ecx,0x10
1000289d:	0f b6 f7             	movzx  esi,bh
100028a0:	0f b6 c1             	movzx  eax,cl
100028a3:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
100028a7:	0f b6 c3             	movzx  eax,bl
100028aa:	c1 eb 18             	shr    ebx,0x18
100028ad:	eb 14                	jmp    100028c3 <ssfn_render+0x15c4>
100028af:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
100028b3:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
100028b7:	89 44 24 4c          	mov    DWORD PTR [esp+0x4c],eax
100028bb:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
100028bf:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100028c3:	81 fb ff 00 00 00    	cmp    ebx,0xff
100028c9:	75 25                	jne    100028f0 <ssfn_render+0x15f1>
100028cb:	0f af c7             	imul   eax,edi
100028ce:	0f af f7             	imul   esi,edi
100028d1:	01 44 24 30          	add    DWORD PTR [esp+0x30],eax
100028d5:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
100028d9:	69 c7 ff 00 00 00    	imul   eax,edi,0xff
100028df:	0f af cf             	imul   ecx,edi
100028e2:	01 74 24 2c          	add    DWORD PTR [esp+0x2c],esi
100028e6:	01 4c 24 28          	add    DWORD PTR [esp+0x28],ecx
100028ea:	01 44 24 34          	add    DWORD PTR [esp+0x34],eax
100028ee:	eb 66                	jmp    10002956 <ssfn_render+0x1657>
100028f0:	0f af f3             	imul   esi,ebx
100028f3:	0f af c3             	imul   eax,ebx
100028f6:	b9 ff 00 00 00       	mov    ecx,0xff
100028fb:	8b 54 24 78          	mov    edx,DWORD PTR [esp+0x78]
100028ff:	29 d9                	sub    ecx,ebx
10002901:	89 4c 24 70          	mov    DWORD PTR [esp+0x70],ecx
10002905:	0f af d1             	imul   edx,ecx
10002908:	b9 ff 00 00 00       	mov    ecx,0xff
1000290d:	01 d0                	add    eax,edx
1000290f:	0f af c7             	imul   eax,edi
10002912:	99                   	cdq    
10002913:	f7 f9                	idiv   ecx
10002915:	01 44 24 30          	add    DWORD PTR [esp+0x30],eax
10002919:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
1000291d:	0f af 44 24 7c       	imul   eax,DWORD PTR [esp+0x7c]
10002922:	01 f0                	add    eax,esi
10002924:	89 ce                	mov    esi,ecx
10002926:	0f af c7             	imul   eax,edi
10002929:	99                   	cdq    
1000292a:	f7 f9                	idiv   ecx
1000292c:	8b 4c 24 4c          	mov    ecx,DWORD PTR [esp+0x4c]
10002930:	01 44 24 2c          	add    DWORD PTR [esp+0x2c],eax
10002934:	0f af cb             	imul   ecx,ebx
10002937:	8b 44 24 70          	mov    eax,DWORD PTR [esp+0x70]
1000293b:	0f af df             	imul   ebx,edi
1000293e:	0f af 84 24 80 00 00 00 	imul   eax,DWORD PTR [esp+0x80]
10002946:	01 5c 24 34          	add    DWORD PTR [esp+0x34],ebx
1000294a:	01 c8                	add    eax,ecx
1000294c:	0f af c7             	imul   eax,edi
1000294f:	99                   	cdq    
10002950:	f7 fe                	idiv   esi
10002952:	01 44 24 28          	add    DWORD PTR [esp+0x28],eax
10002956:	81 44 24 38 00 01 00 00 	add    DWORD PTR [esp+0x38],0x100
1000295e:	e9 60 fe ff ff       	jmp    100027c3 <ssfn_render+0x14c4>
10002963:	81 44 24 3c 00 01 00 00 	add    DWORD PTR [esp+0x3c],0x100
1000296b:	e9 af fd ff ff       	jmp    1000271f <ssfn_render+0x1420>
10002970:	83 7c 24 20 00       	cmp    DWORD PTR [esp+0x20],0x0
10002975:	74 30                	je     100029a7 <ssfn_render+0x16a8>
10002977:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
1000297b:	31 d2                	xor    edx,edx
1000297d:	f7 74 24 20          	div    DWORD PTR [esp+0x20]
10002981:	31 d2                	xor    edx,edx
10002983:	89 c1                	mov    ecx,eax
10002985:	8b 44 24 2c          	mov    eax,DWORD PTR [esp+0x2c]
10002989:	f7 74 24 20          	div    DWORD PTR [esp+0x20]
1000298d:	31 d2                	xor    edx,edx
1000298f:	89 c6                	mov    esi,eax
10002991:	8b 44 24 30          	mov    eax,DWORD PTR [esp+0x30]
10002995:	f7 74 24 20          	div    DWORD PTR [esp+0x20]
10002999:	31 d2                	xor    edx,edx
1000299b:	89 c3                	mov    ebx,eax
1000299d:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100029a1:	f7 74 24 20          	div    DWORD PTR [esp+0x20]
100029a5:	eb 1c                	jmp    100029c3 <ssfn_render+0x16c4>
100029a7:	8b 4c 24 28          	mov    ecx,DWORD PTR [esp+0x28]
100029ab:	8b 74 24 2c          	mov    esi,DWORD PTR [esp+0x2c]
100029af:	8b 5c 24 30          	mov    ebx,DWORD PTR [esp+0x30]
100029b3:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
100029b7:	c1 e9 08             	shr    ecx,0x8
100029ba:	c1 ee 08             	shr    esi,0x8
100029bd:	c1 eb 08             	shr    ebx,0x8
100029c0:	c1 e8 08             	shr    eax,0x8
100029c3:	83 f8 0f             	cmp    eax,0xf
100029c6:	76 7e                	jbe    10002a46 <ssfn_render+0x1747>
100029c8:	bf ff 00 00 00       	mov    edi,0xff
100029cd:	81 f9 ff 00 00 00    	cmp    ecx,0xff
100029d3:	0f 47 cf             	cmova  ecx,edi
100029d6:	89 ca                	mov    edx,ecx
100029d8:	b9 10 00 00 00       	mov    ecx,0x10
100029dd:	2b 4c 24 08          	sub    ecx,DWORD PTR [esp+0x8]
100029e1:	d3 e2                	shl    edx,cl
100029e3:	3d ff 00 00 00       	cmp    eax,0xff
100029e8:	89 d1                	mov    ecx,edx
100029ea:	0f 47 c7             	cmova  eax,edi
100029ed:	89 c2                	mov    edx,eax
100029ef:	8b 44 24 74          	mov    eax,DWORD PTR [esp+0x74]
100029f3:	c1 e2 18             	shl    edx,0x18
100029f6:	09 ca                	or     edx,ecx
100029f8:	81 fe ff 00 00 00    	cmp    esi,0xff
100029fe:	8a 4c 24 08          	mov    cl,BYTE PTR [esp+0x8]
10002a02:	0f 47 f7             	cmova  esi,edi
10002a05:	c1 e6 08             	shl    esi,0x8
10002a08:	09 d6                	or     esi,edx
10002a0a:	81 fb ff 00 00 00    	cmp    ebx,0xff
10002a10:	0f 47 df             	cmova  ebx,edi
10002a13:	d3 e3                	shl    ebx,cl
10002a15:	09 f3                	or     ebx,esi
10002a17:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
10002a1b:	89 1c b0             	mov    DWORD PTR [eax+esi*4],ebx
10002a1e:	8b 5c 24 60          	mov    ebx,DWORD PTR [esp+0x60]
10002a22:	39 5c 24 40          	cmp    DWORD PTR [esp+0x40],ebx
10002a26:	75 1e                	jne    10002a46 <ssfn_render+0x1747>
10002a28:	39 74 24 48          	cmp    DWORD PTR [esp+0x48],esi
10002a2c:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10002a30:	0f 4f c6             	cmovg  eax,esi
10002a33:	39 74 24 44          	cmp    DWORD PTR [esp+0x44],esi
10002a37:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10002a3b:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10002a3f:	0f 4c c6             	cmovl  eax,esi
10002a42:	89 44 24 44          	mov    DWORD PTR [esp+0x44],eax
10002a46:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
10002a4a:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10002a4e:	3b 44 24 14          	cmp    eax,DWORD PTR [esp+0x14]
10002a52:	0f 85 e1 fb ff ff    	jne    10002639 <ssfn_render+0x133a>
10002a58:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
10002a5f:	ff 44 24 40          	inc    DWORD PTR [esp+0x40]
10002a63:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002a67:	25 fc ff 00 00       	and    eax,0xfffc
10002a6c:	01 44 24 74          	add    DWORD PTR [esp+0x74],eax
10002a70:	e9 3d fb ff ff       	jmp    100025b2 <ssfn_render+0x12b3>
10002a75:	f6 85 bc f5 00 00 10 	test   BYTE PTR [ebp+0xf5bc],0x10
10002a7c:	0f 84 90 01 00 00    	je     10002c12 <ssfn_render+0x1913>
10002a82:	0f b6 84 24 90 00 00 00 	movzx  eax,BYTE PTR [esp+0x90]
10002a8a:	8b 7c 24 48          	mov    edi,DWORD PTR [esp+0x48]
10002a8e:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10002a92:	40                   	inc    eax
10002a93:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10002a97:	29 c7                	sub    edi,eax
10002a99:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
10002a9d:	89 7c 24 28          	mov    DWORD PTR [esp+0x28],edi
10002aa1:	8d 44 18 02          	lea    eax,[eax+ebx*1+0x2]
10002aa5:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002aa9:	39 44 24 28          	cmp    DWORD PTR [esp+0x28],eax
10002aad:	7e 09                	jle    10002ab8 <ssfn_render+0x17b9>
10002aaf:	8b 44 24 28          	mov    eax,DWORD PTR [esp+0x28]
10002ab3:	40                   	inc    eax
10002ab4:	89 44 24 20          	mov    DWORD PTR [esp+0x20],eax
10002ab8:	8b bc 24 e4 05 01 00 	mov    edi,DWORD PTR [esp+0x105e4]
10002abf:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
10002ac6:	0f b7 57 08          	movzx  edx,WORD PTR [edi+0x8]
10002aca:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002ace:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
10002ad2:	03 44 24 60          	add    eax,DWORD PTR [esp+0x60]
10002ad6:	0f af c2             	imul   eax,edx
10002ad9:	0f bf 57 0a          	movsx  edx,WORD PTR [edi+0xa]
10002add:	2b 54 24 10          	sub    edx,DWORD PTR [esp+0x10]
10002ae1:	8d 44 90 fc          	lea    eax,[eax+edx*4-0x4]
10002ae5:	03 07                	add    eax,DWORD PTR [edi]
10002ae7:	89 c7                	mov    edi,eax
10002ae9:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10002aed:	c1 e0 18             	shl    eax,0x18
10002af0:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10002af4:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10002af8:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10002afc:	0f b6 44 24 08       	movzx  eax,BYTE PTR [esp+0x8]
10002b01:	89 44 24 3c          	mov    DWORD PTR [esp+0x3c],eax
10002b05:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10002b09:	03 44 24 60          	add    eax,DWORD PTR [esp+0x60]
10002b0d:	3b 44 24 04          	cmp    eax,DWORD PTR [esp+0x4]
10002b11:	0f 8e fb 00 00 00    	jle    10002c12 <ssfn_render+0x1913>
10002b17:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
10002b1e:	8b b4 24 e4 05 01 00 	mov    esi,DWORD PTR [esp+0x105e4]
10002b25:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002b29:	0f bf 56 06          	movsx  edx,WORD PTR [esi+0x6]
10002b2d:	03 44 24 04          	add    eax,DWORD PTR [esp+0x4]
10002b31:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
10002b35:	39 d0                	cmp    eax,edx
10002b37:	0f 8d d5 00 00 00    	jge    10002c12 <ssfn_render+0x1913>
10002b3d:	31 db                	xor    ebx,ebx
10002b3f:	85 c0                	test   eax,eax
10002b41:	79 26                	jns    10002b69 <ssfn_render+0x186a>
10002b43:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
10002b4a:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
10002b4e:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002b52:	25 fc ff 00 00       	and    eax,0xfffc
10002b57:	01 c7                	add    edi,eax
10002b59:	eb aa                	jmp    10002b05 <ssfn_render+0x1806>
10002b5b:	85 c0                	test   eax,eax
10002b5d:	79 23                	jns    10002b82 <ssfn_render+0x1883>
10002b5f:	43                   	inc    ebx
10002b60:	39 9c 24 8c 00 00 00 	cmp    DWORD PTR [esp+0x8c],ebx
10002b67:	7c da                	jl     10002b43 <ssfn_render+0x1844>
10002b69:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
10002b70:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002b74:	01 d8                	add    eax,ebx
10002b76:	2b 44 24 10          	sub    eax,DWORD PTR [esp+0x10]
10002b7a:	3b 44 24 50          	cmp    eax,DWORD PTR [esp+0x50]
10002b7e:	7c db                	jl     10002b5b <ssfn_render+0x185c>
10002b80:	eb c1                	jmp    10002b43 <ssfn_render+0x1844>
10002b82:	39 5c 24 20          	cmp    DWORD PTR [esp+0x20],ebx
10002b86:	7e 06                	jle    10002b8e <ssfn_render+0x188f>
10002b88:	3b 5c 24 28          	cmp    ebx,DWORD PTR [esp+0x28]
10002b8c:	7f d1                	jg     10002b5f <ssfn_render+0x1860>
10002b8e:	8b 14 9f             	mov    edx,DWORD PTR [edi+ebx*4]
10002b91:	b8 10 00 00 00       	mov    eax,0x10
10002b96:	0f b6 f6             	movzx  esi,dh
10002b99:	2b 44 24 3c          	sub    eax,DWORD PTR [esp+0x3c]
10002b9d:	89 74 24 30          	mov    DWORD PTR [esp+0x30],esi
10002ba1:	89 44 24 2c          	mov    DWORD PTR [esp+0x2c],eax
10002ba5:	89 d0                	mov    eax,edx
10002ba7:	8a 4c 24 2c          	mov    cl,BYTE PTR [esp+0x2c]
10002bab:	d3 e8                	shr    eax,cl
10002bad:	8a 4c 24 08          	mov    cl,BYTE PTR [esp+0x8]
10002bb1:	0f b6 c0             	movzx  eax,al
10002bb4:	d3 ea                	shr    edx,cl
10002bb6:	8b 4c 24 54          	mov    ecx,DWORD PTR [esp+0x54]
10002bba:	0f b6 f2             	movzx  esi,dl
10002bbd:	29 c1                	sub    ecx,eax
10002bbf:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002bc3:	0f af 4c 24 0c       	imul   ecx,DWORD PTR [esp+0xc]
10002bc8:	29 f2                	sub    edx,esi
10002bca:	c1 f9 08             	sar    ecx,0x8
10002bcd:	0f af 54 24 0c       	imul   edx,DWORD PTR [esp+0xc]
10002bd2:	01 c8                	add    eax,ecx
10002bd4:	c1 fa 08             	sar    edx,0x8
10002bd7:	8a 4c 24 2c          	mov    cl,BYTE PTR [esp+0x2c]
10002bdb:	89 54 24 34          	mov    DWORD PTR [esp+0x34],edx
10002bdf:	d3 e0                	shl    eax,cl
10002be1:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10002be5:	03 74 24 34          	add    esi,DWORD PTR [esp+0x34]
10002be9:	2b 54 24 30          	sub    edx,DWORD PTR [esp+0x30]
10002bed:	8a 4c 24 08          	mov    cl,BYTE PTR [esp+0x8]
10002bf1:	0f af 54 24 0c       	imul   edx,DWORD PTR [esp+0xc]
10002bf6:	d3 e6                	shl    esi,cl
10002bf8:	c1 fa 08             	sar    edx,0x8
10002bfb:	03 54 24 30          	add    edx,DWORD PTR [esp+0x30]
10002bff:	c1 e2 08             	shl    edx,0x8
10002c02:	09 d0                	or     eax,edx
10002c04:	0b 44 24 38          	or     eax,DWORD PTR [esp+0x38]
10002c08:	09 c6                	or     esi,eax
10002c0a:	89 34 9f             	mov    DWORD PTR [edi+ebx*4],esi
10002c0d:	e9 4d ff ff ff       	jmp    10002b5f <ssfn_render+0x1860>
10002c12:	f6 85 bc f5 00 00 20 	test   BYTE PTR [ebp+0xf5bc],0x20
10002c19:	0f 84 7a 01 00 00    	je     10002d99 <ssfn_render+0x1a9a>
10002c1f:	8b 04 24             	mov    eax,DWORD PTR [esp]
10002c22:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10002c26:	d1 f8                	sar    eax,1
10002c28:	47                   	inc    edi
10002c29:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10002c2d:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10002c31:	39 7c 24 14          	cmp    DWORD PTR [esp+0x14],edi
10002c35:	7e 09                	jle    10002c40 <ssfn_render+0x1941>
10002c37:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
10002c3b:	47                   	inc    edi
10002c3c:	89 7c 24 20          	mov    DWORD PTR [esp+0x20],edi
10002c40:	8b 9c 24 e4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105e4]
10002c47:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10002c4b:	0f b7 4b 08          	movzx  ecx,WORD PTR [ebx+0x8]
10002c4f:	0f bf 53 0c          	movsx  edx,WORD PTR [ebx+0xc]
10002c53:	8b 3b                	mov    edi,DWORD PTR [ebx]
10002c55:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10002c59:	8b 74 24 0c          	mov    esi,DWORD PTR [esp+0xc]
10002c5d:	01 c2                	add    edx,eax
10002c5f:	c1 e6 18             	shl    esi,0x18
10002c62:	0f af d1             	imul   edx,ecx
10002c65:	0f b6 84 24 90 00 00 00 	movzx  eax,BYTE PTR [esp+0x90]
10002c6d:	0f bf 4b 0a          	movsx  ecx,WORD PTR [ebx+0xa]
10002c71:	03 44 24 04          	add    eax,DWORD PTR [esp+0x4]
10002c75:	2b 4c 24 10          	sub    ecx,DWORD PTR [esp+0x10]
10002c79:	89 44 24 30          	mov    DWORD PTR [esp+0x30],eax
10002c7d:	8d 54 8a fc          	lea    edx,[edx+ecx*4-0x4]
10002c81:	0f b6 44 24 08       	movzx  eax,BYTE PTR [esp+0x8]
10002c86:	01 d7                	add    edi,edx
10002c88:	89 74 24 2c          	mov    DWORD PTR [esp+0x2c],esi
10002c8c:	89 44 24 34          	mov    DWORD PTR [esp+0x34],eax
10002c90:	8b 5c 24 04          	mov    ebx,DWORD PTR [esp+0x4]
10002c94:	39 5c 24 30          	cmp    DWORD PTR [esp+0x30],ebx
10002c98:	0f 8e fb 00 00 00    	jle    10002d99 <ssfn_render+0x1a9a>
10002c9e:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
10002ca5:	8b b4 24 e4 05 01 00 	mov    esi,DWORD PTR [esp+0x105e4]
10002cac:	0f bf 40 0c          	movsx  eax,WORD PTR [eax+0xc]
10002cb0:	0f bf 56 06          	movsx  edx,WORD PTR [esi+0x6]
10002cb4:	01 d8                	add    eax,ebx
10002cb6:	2b 44 24 18          	sub    eax,DWORD PTR [esp+0x18]
10002cba:	39 d0                	cmp    eax,edx
10002cbc:	0f 8d d7 00 00 00    	jge    10002d99 <ssfn_render+0x1a9a>
10002cc2:	31 f6                	xor    esi,esi
10002cc4:	85 c0                	test   eax,eax
10002cc6:	0f 89 ad 00 00 00    	jns    10002d79 <ssfn_render+0x1a7a>
10002ccc:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
10002cd3:	ff 44 24 04          	inc    DWORD PTR [esp+0x4]
10002cd7:	0f b7 40 08          	movzx  eax,WORD PTR [eax+0x8]
10002cdb:	25 fc ff 00 00       	and    eax,0xfffc
10002ce0:	01 c7                	add    edi,eax
10002ce2:	eb ac                	jmp    10002c90 <ssfn_render+0x1991>
10002ce4:	85 c0                	test   eax,eax
10002ce6:	0f 88 82 00 00 00    	js     10002d6e <ssfn_render+0x1a6f>
10002cec:	8b 1c b7             	mov    ebx,DWORD PTR [edi+esi*4]
10002cef:	b8 10 00 00 00       	mov    eax,0x10
10002cf4:	8b 54 24 5c          	mov    edx,DWORD PTR [esp+0x5c]
10002cf8:	2b 44 24 34          	sub    eax,DWORD PTR [esp+0x34]
10002cfc:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10002d00:	89 d8                	mov    eax,ebx
10002d02:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10002d06:	d3 e8                	shr    eax,cl
10002d08:	0f b6 cf             	movzx  ecx,bh
10002d0b:	0f b6 c0             	movzx  eax,al
10002d0e:	89 4c 24 24          	mov    DWORD PTR [esp+0x24],ecx
10002d12:	8a 4c 24 08          	mov    cl,BYTE PTR [esp+0x8]
10002d16:	d3 eb                	shr    ebx,cl
10002d18:	8b 4c 24 54          	mov    ecx,DWORD PTR [esp+0x54]
10002d1c:	0f b6 db             	movzx  ebx,bl
10002d1f:	29 c1                	sub    ecx,eax
10002d21:	29 da                	sub    edx,ebx
10002d23:	0f af 4c 24 0c       	imul   ecx,DWORD PTR [esp+0xc]
10002d28:	0f af 54 24 0c       	imul   edx,DWORD PTR [esp+0xc]
10002d2d:	c1 f9 08             	sar    ecx,0x8
10002d30:	c1 fa 08             	sar    edx,0x8
10002d33:	01 c8                	add    eax,ecx
10002d35:	89 54 24 28          	mov    DWORD PTR [esp+0x28],edx
10002d39:	8a 4c 24 14          	mov    cl,BYTE PTR [esp+0x14]
10002d3d:	8b 54 24 58          	mov    edx,DWORD PTR [esp+0x58]
10002d41:	d3 e0                	shl    eax,cl
10002d43:	2b 54 24 24          	sub    edx,DWORD PTR [esp+0x24]
10002d47:	8b 4c 24 28          	mov    ecx,DWORD PTR [esp+0x28]
10002d4b:	0f af 54 24 0c       	imul   edx,DWORD PTR [esp+0xc]
10002d50:	c1 fa 08             	sar    edx,0x8
10002d53:	03 54 24 24          	add    edx,DWORD PTR [esp+0x24]
10002d57:	c1 e2 08             	shl    edx,0x8
10002d5a:	09 d0                	or     eax,edx
10002d5c:	8d 14 19             	lea    edx,[ecx+ebx*1]
10002d5f:	0b 44 24 2c          	or     eax,DWORD PTR [esp+0x2c]
10002d63:	8a 4c 24 08          	mov    cl,BYTE PTR [esp+0x8]
10002d67:	d3 e2                	shl    edx,cl
10002d69:	09 c2                	or     edx,eax
10002d6b:	89 14 b7             	mov    DWORD PTR [edi+esi*4],edx
10002d6e:	46                   	inc    esi
10002d6f:	39 74 24 20          	cmp    DWORD PTR [esp+0x20],esi
10002d73:	0f 8c 53 ff ff ff    	jl     10002ccc <ssfn_render+0x19cd>
10002d79:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
10002d80:	0f bf 40 0a          	movsx  eax,WORD PTR [eax+0xa]
10002d84:	01 f0                	add    eax,esi
10002d86:	2b 44 24 10          	sub    eax,DWORD PTR [esp+0x10]
10002d8a:	3b 44 24 50          	cmp    eax,DWORD PTR [esp+0x50]
10002d8e:	0f 8c 50 ff ff ff    	jl     10002ce4 <ssfn_render+0x19e5>
10002d94:	e9 33 ff ff ff       	jmp    10002ccc <ssfn_render+0x19cd>
10002d99:	f6 85 bd f5 00 00 08 	test   BYTE PTR [ebp+0xf5bd],0x8
10002da0:	74 04                	je     10002da6 <ssfn_render+0x1aa7>
10002da2:	f7 5c 24 1c          	neg    DWORD PTR [esp+0x1c]
10002da6:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
10002daa:	8b 7c 24 1c          	mov    edi,DWORD PTR [esp+0x1c]
10002dae:	89 85 90 f5 00 00    	mov    DWORD PTR [ebp+0xf590],eax
10002db4:	8b 84 24 e4 05 01 00 	mov    eax,DWORD PTR [esp+0x105e4]
10002dbb:	66 01 78 0a          	add    WORD PTR [eax+0xa],di
10002dbf:	8b bc 24 e4 05 01 00 	mov    edi,DWORD PTR [esp+0x105e4]
10002dc6:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002dc9:	0f b6 48 0b          	movzx  ecx,BYTE PTR [eax+0xb]
10002dcd:	8b 85 24 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf524]
10002dd3:	0f b6 40 05          	movzx  eax,BYTE PTR [eax+0x5]
10002dd7:	0f af 04 24          	imul   eax,DWORD PTR [esp]
10002ddb:	8d 44 01 ff          	lea    eax,[ecx+eax*1-0x1]
10002ddf:	99                   	cdq    
10002de0:	f7 f9                	idiv   ecx
10002de2:	66 01 47 0c          	add    WORD PTR [edi+0xc],ax
10002de6:	8b 85 bc f5 00 00    	mov    eax,DWORD PTR [ebp+0xf5bc]
10002dec:	25 80 00 00 00       	and    eax,0x80
10002df1:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
10002df5:	0f 85 f6 01 00 00    	jne    10002ff1 <ssfn_render+0x1cf2>
10002dfb:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002dfe:	83 78 18 00          	cmp    DWORD PTR [eax+0x18],0x0
10002e02:	0f 84 e9 01 00 00    	je     10002ff1 <ssfn_render+0x1cf2>
10002e08:	8b 94 24 e8 05 01 00 	mov    edx,DWORD PTR [esp+0x105e8]
10002e0f:	83 ec 0c             	sub    esp,0xc
10002e12:	03 94 24 c4 00 00 00 	add    edx,DWORD PTR [esp+0xc4]
10002e19:	8d 8c 24 c0 00 00 00 	lea    ecx,[esp+0xc0]
10002e20:	51                   	push   ecx
10002e21:	8d 8c 24 cc 00 00 00 	lea    ecx,[esp+0xcc]
10002e28:	e8 32 da ff ff       	call   1000085f <_ssfn_c>
10002e2d:	83 c4 10             	add    esp,0x10
10002e30:	85 c0                	test   eax,eax
10002e32:	0f 84 b9 01 00 00    	je     10002ff1 <ssfn_render+0x1cf2>
10002e38:	83 bc 24 b4 00 00 00 20 	cmp    DWORD PTR [esp+0xb4],0x20
10002e40:	0f 86 ab 01 00 00    	jbe    10002ff1 <ssfn_render+0x1cf2>
10002e46:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002e4c:	8d 48 06             	lea    ecx,[eax+0x6]
10002e4f:	8b 85 74 f5 00 00    	mov    eax,DWORD PTR [ebp+0xf574]
10002e55:	0f b6 50 01          	movzx  edx,BYTE PTR [eax+0x1]
10002e59:	3b 54 24 08          	cmp    edx,DWORD PTR [esp+0x8]
10002e5d:	0f 8e 8e 01 00 00    	jle    10002ff1 <ssfn_render+0x1cf2>
10002e63:	8a 19                	mov    bl,BYTE PTR [ecx]
10002e65:	88 5c 24 0c          	mov    BYTE PTR [esp+0xc],bl
10002e69:	8a 18                	mov    bl,BYTE PTR [eax]
10002e6b:	83 e3 40             	and    ebx,0x40
10002e6e:	80 7c 24 0c ff       	cmp    BYTE PTR [esp+0xc],0xff
10002e73:	75 14                	jne    10002e89 <ssfn_render+0x1b8a>
10002e75:	80 79 01 ff          	cmp    BYTE PTR [ecx+0x1],0xff
10002e79:	75 0e                	jne    10002e89 <ssfn_render+0x1b8a>
10002e7b:	80 fb 01             	cmp    bl,0x1
10002e7e:	19 c0                	sbb    eax,eax
10002e80:	8d 4c 01 06          	lea    ecx,[ecx+eax*1+0x6]
10002e84:	e9 5f 01 00 00       	jmp    10002fe8 <ssfn_render+0x1ce9>
10002e89:	0f b6 71 04          	movzx  esi,BYTE PTR [ecx+0x4]
10002e8d:	0f b6 51 03          	movzx  edx,BYTE PTR [ecx+0x3]
10002e91:	c1 e6 10             	shl    esi,0x10
10002e94:	0f b6 79 02          	movzx  edi,BYTE PTR [ecx+0x2]
10002e98:	84 db                	test   bl,bl
10002e9a:	74 08                	je     10002ea4 <ssfn_render+0x1ba5>
10002e9c:	8b 79 02             	mov    edi,DWORD PTR [ecx+0x2]
10002e9f:	83 c1 06             	add    ecx,0x6
10002ea2:	eb 0c                	jmp    10002eb0 <ssfn_render+0x1bb1>
10002ea4:	c1 e2 08             	shl    edx,0x8
10002ea7:	83 c1 05             	add    ecx,0x5
10002eaa:	89 d0                	mov    eax,edx
10002eac:	09 f0                	or     eax,esi
10002eae:	09 c7                	or     edi,eax
10002eb0:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10002eb3:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10002eb7:	01 f8                	add    eax,edi
10002eb9:	8a 10                	mov    dl,BYTE PTR [eax]
10002ebb:	88 d3                	mov    bl,dl
10002ebd:	83 e3 e0             	and    ebx,0xffffffe0
10002ec0:	80 fb c0             	cmp    bl,0xc0
10002ec3:	0f 85 1f 01 00 00    	jne    10002fe8 <ssfn_render+0x1ce9>
10002ec9:	0f b6 58 01          	movzx  ebx,BYTE PTR [eax+0x1]
10002ecd:	c1 e2 08             	shl    edx,0x8
10002ed0:	83 c0 02             	add    eax,0x2
10002ed3:	81 e2 00 1f 00 00    	and    edx,0x1f00
10002ed9:	8b b4 24 b4 00 00 00 	mov    esi,DWORD PTR [esp+0xb4]
10002ee0:	09 da                	or     edx,ebx
10002ee2:	8d 7a 01             	lea    edi,[edx+0x1]
10002ee5:	89 7c 24 10          	mov    DWORD PTR [esp+0x10],edi
10002ee9:	ff 4c 24 10          	dec    DWORD PTR [esp+0x10]
10002eed:	83 7c 24 10 ff       	cmp    DWORD PTR [esp+0x10],0xffffffff
10002ef2:	0f 84 f0 00 00 00    	je     10002fe8 <ssfn_render+0x1ce9>
10002ef8:	0f b6 58 02          	movzx  ebx,BYTE PTR [eax+0x2]
10002efc:	0f b7 10             	movzx  edx,WORD PTR [eax]
10002eff:	c1 e3 10             	shl    ebx,0x10
10002f02:	81 e3 00 00 0f 00    	and    ebx,0xf0000
10002f08:	09 d3                	or     ebx,edx
10002f0a:	39 de                	cmp    esi,ebx
10002f0c:	0f 82 ce 00 00 00    	jb     10002fe0 <ssfn_render+0x1ce1>
10002f12:	8a 50 05             	mov    dl,BYTE PTR [eax+0x5]
10002f15:	89 d7                	mov    edi,edx
10002f17:	c1 e7 10             	shl    edi,0x10
10002f1a:	81 e7 00 00 0f 00    	and    edi,0xf0000
10002f20:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
10002f24:	0f b7 78 03          	movzx  edi,WORD PTR [eax+0x3]
10002f28:	0b 7c 24 14          	or     edi,DWORD PTR [esp+0x14]
10002f2c:	39 fe                	cmp    esi,edi
10002f2e:	0f 87 ac 00 00 00    	ja     10002fe0 <ssfn_render+0x1ce1>
10002f34:	29 de                	sub    esi,ebx
10002f36:	c0 ea 04             	shr    dl,0x4
10002f39:	89 b4 24 b4 00 00 00 	mov    DWORD PTR [esp+0xb4],esi
10002f40:	0f b6 d2             	movzx  edx,dl
10002f43:	8b 74 24 04          	mov    esi,DWORD PTR [esp+0x4]
10002f47:	89 d3                	mov    ebx,edx
10002f49:	0f b7 50 06          	movzx  edx,WORD PTR [eax+0x6]
10002f4d:	c1 e3 10             	shl    ebx,0x10
10002f50:	8a 40 02             	mov    al,BYTE PTR [eax+0x2]
10002f53:	09 da                	or     edx,ebx
10002f55:	c0 e8 04             	shr    al,0x4
10002f58:	c1 e0 18             	shl    eax,0x18
10002f5b:	09 c2                	or     edx,eax
10002f5d:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10002f61:	03 50 18             	add    edx,DWORD PTR [eax+0x18]
10002f64:	01 c2                	add    edx,eax
10002f66:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10002f69:	8d 7c 06 fc          	lea    edi,[esi+eax*1-0x4]
10002f6d:	39 d7                	cmp    edi,edx
10002f6f:	76 77                	jbe    10002fe8 <ssfn_render+0x1ce9>
10002f71:	8a 1a                	mov    bl,BYTE PTR [edx]
10002f73:	8b 84 24 b4 00 00 00 	mov    eax,DWORD PTR [esp+0xb4]
10002f7a:	89 de                	mov    esi,ebx
10002f7c:	83 e6 7f             	and    esi,0x7f
10002f7f:	39 c6                	cmp    esi,eax
10002f81:	73 1d                	jae    10002fa0 <ssfn_render+0x1ca1>
10002f83:	48                   	dec    eax
10002f84:	bb 02 00 00 00       	mov    ebx,0x2
10002f89:	29 f0                	sub    eax,esi
10002f8b:	89 84 24 b4 00 00 00 	mov    DWORD PTR [esp+0xb4],eax
10002f92:	0f b6 02             	movzx  eax,BYTE PTR [edx]
10002f95:	84 c0                	test   al,al
10002f97:	78 03                	js     10002f9c <ssfn_render+0x1c9d>
10002f99:	8d 58 02             	lea    ebx,[eax+0x2]
10002f9c:	01 da                	add    edx,ebx
10002f9e:	eb cd                	jmp    10002f6d <ssfn_render+0x1c6e>
10002fa0:	be 01 00 00 00       	mov    esi,0x1
10002fa5:	84 db                	test   bl,bl
10002fa7:	78 03                	js     10002fac <ssfn_render+0x1cad>
10002fa9:	8d 70 01             	lea    esi,[eax+0x1]
10002fac:	0f be 04 32          	movsx  eax,BYTE PTR [edx+esi*1]
10002fb0:	8b 5c 24 04          	mov    ebx,DWORD PTR [esp+0x4]
10002fb4:	0f af 04 24          	imul   eax,DWORD PTR [esp]
10002fb8:	0f b6 5b 0b          	movzx  ebx,BYTE PTR [ebx+0xb]
10002fbc:	99                   	cdq    
10002fbd:	f7 fb                	idiv   ebx
10002fbf:	80 7c 24 0c 00       	cmp    BYTE PTR [esp+0xc],0x0
10002fc4:	74 0d                	je     10002fd3 <ssfn_render+0x1cd4>
10002fc6:	8b b4 24 e4 05 01 00 	mov    esi,DWORD PTR [esp+0x105e4]
10002fcd:	66 01 46 0a          	add    WORD PTR [esi+0xa],ax
10002fd1:	eb 15                	jmp    10002fe8 <ssfn_render+0x1ce9>
10002fd3:	8b 9c 24 e4 05 01 00 	mov    ebx,DWORD PTR [esp+0x105e4]
10002fda:	66 01 43 0c          	add    WORD PTR [ebx+0xc],ax
10002fde:	eb 08                	jmp    10002fe8 <ssfn_render+0x1ce9>
10002fe0:	83 c0 08             	add    eax,0x8
10002fe3:	e9 01 ff ff ff       	jmp    10002ee9 <ssfn_render+0x1bea>
10002fe8:	ff 44 24 08          	inc    DWORD PTR [esp+0x8]
10002fec:	e9 5e fe ff ff       	jmp    10002e4f <ssfn_render+0x1b50>
10002ff1:	8b 8c 24 b8 00 00 00 	mov    ecx,DWORD PTR [esp+0xb8]
10002ff8:	e9 c2 00 00 00       	jmp    100030bf <ssfn_render+0x1dc0>
10002ffd:	c7 84 24 bc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xbc],0x0
10003008:	8b 84 24 bc 00 00 00 	mov    eax,DWORD PTR [esp+0xbc]
1000300f:	8b 8d bc f5 00 00    	mov    ecx,DWORD PTR [ebp+0xf5bc]
10003015:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
1000301c:	7e 3f                	jle    1000305d <ssfn_render+0x1d5e>
1000301e:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
10003021:	0f b6 50 08          	movzx  edx,BYTE PTR [eax+0x8]
10003025:	c1 fa 04             	sar    edx,0x4
10003028:	31 ca                	xor    edx,ecx
1000302a:	80 e2 03             	and    dl,0x3
1000302d:	74 09                	je     10003038 <ssfn_render+0x1d39>
1000302f:	ff 84 24 bc 00 00 00 	inc    DWORD PTR [esp+0xbc]
10003036:	eb d0                	jmp    10003008 <ssfn_render+0x1d09>
10003038:	8d bc 24 b0 00 00 00 	lea    edi,[esp+0xb0]
1000303f:	57                   	push   edi
10003040:	8d 8c 24 bc 00 00 00 	lea    ecx,[esp+0xbc]
10003047:	8b 94 24 ec 05 01 00 	mov    edx,DWORD PTR [esp+0x105ec]
1000304e:	e8 0c d8 ff ff       	call   1000085f <_ssfn_c>
10003053:	5f                   	pop    edi
10003054:	85 c0                	test   eax,eax
10003056:	74 d7                	je     1000302f <ssfn_render+0x1d30>
10003058:	e9 d4 e4 ff ff       	jmp    10001531 <ssfn_render+0x232>
1000305d:	83 e1 03             	and    ecx,0x3
10003060:	83 f9 03             	cmp    ecx,0x3
10003063:	0f 85 8a e4 ff ff    	jne    100014f3 <ssfn_render+0x1f4>
10003069:	c7 84 24 bc 00 00 00 00 00 00 00 	mov    DWORD PTR [esp+0xbc],0x0
10003074:	8b 84 24 bc 00 00 00 	mov    eax,DWORD PTR [esp+0xbc]
1000307b:	39 84 9d a4 f5 00 00 	cmp    DWORD PTR [ebp+ebx*4+0xf5a4],eax
10003082:	0f 8e 6b e4 ff ff    	jle    100014f3 <ssfn_render+0x1f4>
10003088:	8b 04 86             	mov    eax,DWORD PTR [esi+eax*4]
1000308b:	f6 40 08 30          	test   BYTE PTR [eax+0x8],0x30
1000308f:	75 09                	jne    1000309a <ssfn_render+0x1d9b>
10003091:	ff 84 24 bc 00 00 00 	inc    DWORD PTR [esp+0xbc]
10003098:	eb da                	jmp    10003074 <ssfn_render+0x1d75>
1000309a:	8d bc 24 b0 00 00 00 	lea    edi,[esp+0xb0]
100030a1:	57                   	push   edi
100030a2:	8d 8c 24 bc 00 00 00 	lea    ecx,[esp+0xbc]
100030a9:	8b 94 24 ec 05 01 00 	mov    edx,DWORD PTR [esp+0x105ec]
100030b0:	e8 aa d7 ff ff       	call   1000085f <_ssfn_c>
100030b5:	59                   	pop    ecx
100030b6:	85 c0                	test   eax,eax
100030b8:	74 d7                	je     10003091 <ssfn_render+0x1d92>
100030ba:	e9 72 e4 ff ff       	jmp    10001531 <ssfn_render+0x232>
100030bf:	81 c4 cc 05 01 00    	add    esp,0x105cc
100030c5:	89 c8                	mov    eax,ecx
100030c7:	5b                   	pop    ebx
100030c8:	5e                   	pop    esi
100030c9:	5f                   	pop    edi
100030ca:	5d                   	pop    ebp
100030cb:	c3                   	ret    

100030cc <ssfn_bbox>:
100030cc:	55                   	push   ebp
100030cd:	57                   	push   edi
100030ce:	56                   	push   esi
100030cf:	53                   	push   ebx
100030d0:	83 ec 3c             	sub    esp,0x3c
100030d3:	83 7c 24 64 00       	cmp    DWORD PTR [esp+0x64],0x0
100030d8:	8b 5c 24 50          	mov    ebx,DWORD PTR [esp+0x50]
100030dc:	0f 94 c0             	sete   al
100030df:	83 7c 24 60 00       	cmp    DWORD PTR [esp+0x60],0x0
100030e4:	0f 94 c2             	sete   dl
100030e7:	09 d0                	or     eax,edx
100030e9:	83 7c 24 5c 00       	cmp    DWORD PTR [esp+0x5c],0x0
100030ee:	0f 94 c2             	sete   dl
100030f1:	09 d0                	or     eax,edx
100030f3:	83 7c 24 58 00       	cmp    DWORD PTR [esp+0x58],0x0
100030f8:	0f 94 c2             	sete   dl
100030fb:	09 d0                	or     eax,edx
100030fd:	83 7c 24 54 00       	cmp    DWORD PTR [esp+0x54],0x0
10003102:	0f 94 c2             	sete   dl
10003105:	08 d0                	or     al,dl
10003107:	0f 85 7f 01 00 00    	jne    1000328c <ssfn_bbox+0x1c0>
1000310d:	85 db                	test   ebx,ebx
1000310f:	0f 84 77 01 00 00    	je     1000328c <ssfn_bbox+0x1c0>
10003115:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10003119:	31 f6                	xor    esi,esi
1000311b:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003121:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10003125:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000312b:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
1000312f:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003135:	8b 44 24 58          	mov    eax,DWORD PTR [esp+0x58]
10003139:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000313f:	8b 44 24 54          	mov    eax,DWORD PTR [esp+0x54]
10003143:	80 38 00             	cmp    BYTE PTR [eax],0x0
10003146:	0f 84 45 01 00 00    	je     10003291 <ssfn_bbox+0x1c5>
1000314c:	8d 54 24 18          	lea    edx,[esp+0x18]
10003150:	b9 06 00 00 00       	mov    ecx,0x6
10003155:	89 d7                	mov    edi,edx
10003157:	89 f0                	mov    eax,esi
10003159:	c7 83 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0xf5c4],0x0
10003163:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10003165:	c7 44 24 0c 00 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
1000316d:	31 ff                	xor    edi,edi
1000316f:	bd 01 00 00 00       	mov    ebp,0x1
10003174:	50                   	push   eax
10003175:	ff 74 24 58          	push   DWORD PTR [esp+0x58]
10003179:	8d 44 24 20          	lea    eax,[esp+0x20]
1000317d:	50                   	push   eax
1000317e:	53                   	push   ebx
1000317f:	e8 fc ff ff ff       	call   10003180 <ssfn_bbox+0xb4>	10003180: R_386_PC32	ssfn_render
10003184:	83 c4 10             	add    esp,0x10
10003187:	89 c6                	mov    esi,eax
10003189:	85 c0                	test   eax,eax
1000318b:	74 72                	je     100031ff <ssfn_bbox+0x133>
1000318d:	0f 88 fe 00 00 00    	js     10003291 <ssfn_bbox+0x1c5>
10003193:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
10003199:	85 c0                	test   eax,eax
1000319b:	0f 84 f0 00 00 00    	je     10003291 <ssfn_bbox+0x1c5>
100031a1:	85 ed                	test   ebp,ebp
100031a3:	74 0b                	je     100031b0 <ssfn_bbox+0xe4>
100031a5:	8b bb 88 f5 00 00    	mov    edi,DWORD PTR [ebx+0xf588]
100031ab:	66 01 7c 24 22       	add    WORD PTR [esp+0x22],di
100031b0:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
100031b4:	74 15                	je     100031cb <ssfn_bbox+0xff>
100031b6:	8b 83 8c f5 00 00    	mov    eax,DWORD PTR [ebx+0xf58c]
100031bc:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
100031c0:	0f 4d 44 24 0c       	cmovge eax,DWORD PTR [esp+0xc]
100031c5:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
100031c9:	eb 29                	jmp    100031f4 <ssfn_bbox+0x128>
100031cb:	0f b7 08             	movzx  ecx,WORD PTR [eax]
100031ce:	0f bf 6c 24 1c       	movsx  ebp,WORD PTR [esp+0x1c]
100031d3:	39 cd                	cmp    ebp,ecx
100031d5:	7d 05                	jge    100031dc <ssfn_bbox+0x110>
100031d7:	66 89 4c 24 1c       	mov    WORD PTR [esp+0x1c],cx
100031dc:	0f b6 50 05          	movzx  edx,BYTE PTR [eax+0x5]
100031e0:	66 8b 4c 24 1e       	mov    cx,WORD PTR [esp+0x1e]
100031e5:	84 d2                	test   dl,dl
100031e7:	75 04                	jne    100031ed <ssfn_bbox+0x121>
100031e9:	0f b6 50 02          	movzx  edx,BYTE PTR [eax+0x2]
100031ed:	01 ca                	add    edx,ecx
100031ef:	66 89 54 24 1e       	mov    WORD PTR [esp+0x1e],dx
100031f4:	01 74 24 54          	add    DWORD PTR [esp+0x54],esi
100031f8:	31 ed                	xor    ebp,ebp
100031fa:	e9 75 ff ff ff       	jmp    10003174 <ssfn_bbox+0xa8>
100031ff:	f6 83 bc f5 00 00 02 	test   BYTE PTR [ebx+0xf5bc],0x2
10003206:	74 23                	je     1000322b <ssfn_bbox+0x15f>
10003208:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
1000320b:	f6 40 08 20          	test   BYTE PTR [eax+0x8],0x20
1000320f:	75 1a                	jne    1000322b <ssfn_bbox+0x15f>
10003211:	8b 83 c0 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c0]
10003217:	b9 04 00 00 00       	mov    ecx,0x4
1000321c:	99                   	cdq    
1000321d:	f7 f9                	idiv   ecx
1000321f:	66 03 44 24 22       	add    ax,WORD PTR [esp+0x22]
10003224:	29 f8                	sub    eax,edi
10003226:	66 89 44 24 22       	mov    WORD PTR [esp+0x22],ax
1000322b:	8b 83 24 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf524]
10003231:	80 78 04 00          	cmp    BYTE PTR [eax+0x4],0x0
10003235:	74 29                	je     10003260 <ssfn_bbox+0x194>
10003237:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
1000323c:	8b 4c 24 58          	mov    ecx,DWORD PTR [esp+0x58]
10003240:	89 01                	mov    DWORD PTR [ecx],eax
10003242:	8b 83 c4 f5 00 00    	mov    eax,DWORD PTR [ebx+0xf5c4]
10003248:	8b 5c 24 5c          	mov    ebx,DWORD PTR [esp+0x5c]
1000324c:	89 03                	mov    DWORD PTR [ebx],eax
1000324e:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
10003252:	89 38                	mov    DWORD PTR [eax],edi
10003254:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10003258:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
1000325c:	89 38                	mov    DWORD PTR [eax],edi
1000325e:	eb 31                	jmp    10003291 <ssfn_bbox+0x1c5>
10003260:	0f bf 44 24 1c       	movsx  eax,WORD PTR [esp+0x1c]
10003265:	8b 7c 24 58          	mov    edi,DWORD PTR [esp+0x58]
10003269:	89 07                	mov    DWORD PTR [edi],eax
1000326b:	0f bf 44 24 24       	movsx  eax,WORD PTR [esp+0x24]
10003270:	8b 7c 24 5c          	mov    edi,DWORD PTR [esp+0x5c]
10003274:	89 07                	mov    DWORD PTR [edi],eax
10003276:	8b 44 24 60          	mov    eax,DWORD PTR [esp+0x60]
1000327a:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
10003280:	8b 44 24 64          	mov    eax,DWORD PTR [esp+0x64]
10003284:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000328a:	eb 05                	jmp    10003291 <ssfn_bbox+0x1c5>
1000328c:	be fc ff ff ff       	mov    esi,0xfffffffc
10003291:	83 c4 3c             	add    esp,0x3c
10003294:	89 f0                	mov    eax,esi
10003296:	5b                   	pop    ebx
10003297:	5e                   	pop    esi
10003298:	5f                   	pop    edi
10003299:	5d                   	pop    ebp
1000329a:	c3                   	ret    

1000329b <ssfn_text>:
1000329b:	55                   	push   ebp
1000329c:	57                   	push   edi
1000329d:	56                   	push   esi
1000329e:	53                   	push   ebx
1000329f:	83 ec 1c             	sub    esp,0x1c
100032a2:	8b 74 24 34          	mov    esi,DWORD PTR [esp+0x34]
100032a6:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
100032aa:	85 f6                	test   esi,esi
100032ac:	0f 84 b2 00 00 00    	je     10003364 <ssfn_text+0xc9>
100032b2:	85 ed                	test   ebp,ebp
100032b4:	0f 94 44 24 0b       	sete   BYTE PTR [esp+0xb]
100032b9:	0f 84 a5 00 00 00    	je     10003364 <ssfn_text+0xc9>
100032bf:	83 ec 0c             	sub    esp,0xc
100032c2:	6a 18                	push   0x18
100032c4:	e8 fc ff ff ff       	call   100032c5 <ssfn_text+0x2a>	100032c5: R_386_PC32	malloc
100032c9:	83 c4 10             	add    esp,0x10
100032cc:	89 c3                	mov    ebx,eax
100032ce:	85 c0                	test   eax,eax
100032d0:	0f 84 8e 00 00 00    	je     10003364 <ssfn_text+0xc9>
100032d6:	31 c0                	xor    eax,eax
100032d8:	b9 06 00 00 00       	mov    ecx,0x6
100032dd:	89 df                	mov    edi,ebx
100032df:	80 3e 00             	cmp    BYTE PTR [esi],0x0
100032e2:	f3 ab                	rep stos DWORD PTR es:[edi],eax
100032e4:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
100032e8:	89 43 10             	mov    DWORD PTR [ebx+0x10],eax
100032eb:	74 79                	je     10003366 <ssfn_text+0xcb>
100032ed:	8d 43 0c             	lea    eax,[ebx+0xc]
100032f0:	52                   	push   edx
100032f1:	52                   	push   edx
100032f2:	50                   	push   eax
100032f3:	8d 43 0a             	lea    eax,[ebx+0xa]
100032f6:	50                   	push   eax
100032f7:	8d 43 06             	lea    eax,[ebx+0x6]
100032fa:	50                   	push   eax
100032fb:	8d 43 04             	lea    eax,[ebx+0x4]
100032fe:	50                   	push   eax
100032ff:	56                   	push   esi
10003300:	55                   	push   ebp
10003301:	e8 fc ff ff ff       	call   10003302 <ssfn_text+0x67>	10003302: R_386_PC32	ssfn_bbox
10003306:	83 c4 20             	add    esp,0x20
10003309:	85 c0                	test   eax,eax
1000330b:	75 59                	jne    10003366 <ssfn_text+0xcb>
1000330d:	83 ec 0c             	sub    esp,0xc
10003310:	0f bf 4b 04          	movsx  ecx,WORD PTR [ebx+0x4]
10003314:	0f bf 43 06          	movsx  eax,WORD PTR [ebx+0x6]
10003318:	0f af c8             	imul   ecx,eax
1000331b:	c1 e1 02             	shl    ecx,0x2
1000331e:	51                   	push   ecx
1000331f:	89 4c 24 1c          	mov    DWORD PTR [esp+0x1c],ecx
10003323:	e8 fc ff ff ff       	call   10003324 <ssfn_text+0x89>	10003324: R_386_PC32	malloc
10003328:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
1000332c:	89 c7                	mov    edi,eax
1000332e:	89 03                	mov    DWORD PTR [ebx],eax
10003330:	8a 44 24 1b          	mov    al,BYTE PTR [esp+0x1b]
10003334:	83 c4 10             	add    esp,0x10
10003337:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003339:	50                   	push   eax
1000333a:	56                   	push   esi
1000333b:	53                   	push   ebx
1000333c:	55                   	push   ebp
1000333d:	e8 fc ff ff ff       	call   1000333e <ssfn_text+0xa3>	1000333e: R_386_PC32	ssfn_render
10003342:	83 c4 10             	add    esp,0x10
10003345:	85 c0                	test   eax,eax
10003347:	7e 04                	jle    1000334d <ssfn_text+0xb2>
10003349:	01 c6                	add    esi,eax
1000334b:	eb ec                	jmp    10003339 <ssfn_text+0x9e>
1000334d:	74 17                	je     10003366 <ssfn_text+0xcb>
1000334f:	83 ec 0c             	sub    esp,0xc
10003352:	ff 33                	push   DWORD PTR [ebx]
10003354:	e8 fc ff ff ff       	call   10003355 <ssfn_text+0xba>	10003355: R_386_PC32	free
10003359:	89 1c 24             	mov    DWORD PTR [esp],ebx
1000335c:	e8 fc ff ff ff       	call   1000335d <ssfn_text+0xc2>	1000335d: R_386_PC32	free
10003361:	83 c4 10             	add    esp,0x10
10003364:	31 db                	xor    ebx,ebx
10003366:	83 c4 1c             	add    esp,0x1c
10003369:	89 d8                	mov    eax,ebx
1000336b:	5b                   	pop    ebx
1000336c:	5e                   	pop    esi
1000336d:	5f                   	pop    edi
1000336e:	5d                   	pop    ebp
1000336f:	c3                   	ret    

10003370 <NIContext::drvPutpixel4(int, int, unsigned int)>:
10003370:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10003374:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
1000337a:	8b 10                	mov    edx,DWORD PTR [eax]
1000337c:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
10003380:	ff 62 24             	jmp    DWORD PTR [edx+0x24]
10003383:	90                   	nop

10003384 <NIContext::drvDarken4(int, int, int)>:
10003384:	55                   	push   ebp
10003385:	57                   	push   edi
10003386:	56                   	push   esi
10003387:	53                   	push   ebx
10003388:	83 ec 20             	sub    esp,0x20
1000338b:	8b 7c 24 34          	mov    edi,DWORD PTR [esp+0x34]
1000338f:	8b 5c 24 38          	mov    ebx,DWORD PTR [esp+0x38]
10003393:	8b 74 24 3c          	mov    esi,DWORD PTR [esp+0x3c]
10003397:	8b 4c 24 40          	mov    ecx,DWORD PTR [esp+0x40]
1000339b:	8b 87 08 04 00 00    	mov    eax,DWORD PTR [edi+0x408]
100033a1:	89 4c 24 10          	mov    DWORD PTR [esp+0x10],ecx
100033a5:	8b 10                	mov    edx,DWORD PTR [eax]
100033a7:	56                   	push   esi
100033a8:	53                   	push   ebx
100033a9:	50                   	push   eax
100033aa:	ff 52 34             	call   DWORD PTR [edx+0x34]
100033ad:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
100033b1:	89 c2                	mov    edx,eax
100033b3:	0f b6 ec             	movzx  ebp,ah
100033b6:	c1 ea 10             	shr    edx,0x10
100033b9:	0f af e9             	imul   ebp,ecx
100033bc:	0f b6 d2             	movzx  edx,dl
100033bf:	0f b6 c0             	movzx  eax,al
100033c2:	0f af d1             	imul   edx,ecx
100033c5:	0f af c1             	imul   eax,ecx
100033c8:	c1 ea 07             	shr    edx,0x7
100033cb:	8b 8f 08 04 00 00    	mov    ecx,DWORD PTR [edi+0x408]
100033d1:	c1 e8 07             	shr    eax,0x7
100033d4:	8b 39                	mov    edi,DWORD PTR [ecx]
100033d6:	c1 e2 10             	shl    edx,0x10
100033d9:	89 74 24 48          	mov    DWORD PTR [esp+0x48],esi
100033dd:	89 5c 24 44          	mov    DWORD PTR [esp+0x44],ebx
100033e1:	89 4c 24 40          	mov    DWORD PTR [esp+0x40],ecx
100033e5:	c1 ed 07             	shr    ebp,0x7
100033e8:	c1 e5 08             	shl    ebp,0x8
100033eb:	09 ea                	or     edx,ebp
100033ed:	09 c2                	or     edx,eax
100033ef:	89 54 24 4c          	mov    DWORD PTR [esp+0x4c],edx
100033f3:	8b 47 24             	mov    eax,DWORD PTR [edi+0x24]
100033f6:	83 c4 2c             	add    esp,0x2c
100033f9:	5b                   	pop    ebx
100033fa:	5e                   	pop    esi
100033fb:	5f                   	pop    edi
100033fc:	5d                   	pop    ebp
100033fd:	ff e0                	jmp    eax
100033ff:	90                   	nop

10003400 <NIContext::renderTTF(int, int, unsigned int, char*, int*)>:
10003400:	55                   	push   ebp
10003401:	b9 00 40 00 00       	mov    ecx,0x4000
10003406:	57                   	push   edi
10003407:	b0 ff                	mov    al,0xff
10003409:	56                   	push   esi
1000340a:	53                   	push   ebx
1000340b:	83 ec 3c             	sub    esp,0x3c
1000340e:	8b 6c 24 50          	mov    ebp,DWORD PTR [esp+0x50]
10003412:	8b 5c 24 64          	mov    ebx,DWORD PTR [esp+0x64]
10003416:	8b 7d 00             	mov    edi,DWORD PTR [ebp+0x0]
10003419:	8b 74 24 60          	mov    esi,DWORD PTR [esp+0x60]
1000341d:	f3 aa                	rep stos BYTE PTR es:[edi],al
1000341f:	85 db                	test   ebx,ebx
10003421:	75 10                	jne    10003433 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x33>
10003423:	83 ec 0c             	sub    esp,0xc
10003426:	68 50 47 00 10       	push   0x10004750	10003427: R_386_32	.text
1000342b:	e8 fc ff ff ff       	call   1000342c <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x2c>	1000342c: R_386_PC32	KePanic(char const*)
10003430:	83 c4 10             	add    esp,0x10
10003433:	50                   	push   eax
10003434:	50                   	push   eax
10003435:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003439:	50                   	push   eax
1000343a:	8d 44 24 1c          	lea    eax,[esp+0x1c]
1000343e:	50                   	push   eax
1000343f:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003443:	50                   	push   eax
10003444:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003448:	50                   	push   eax
10003449:	56                   	push   esi
1000344a:	68 00 00 00 00       	push   0x0	1000344b: R_386_32	ssfn_ctx
1000344f:	e8 fc ff ff ff       	call   10003450 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x50>	10003450: R_386_PC32	ssfn_bbox
10003454:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003457:	c7 44 24 3c 40 00 40 00 	mov    DWORD PTR [esp+0x3c],0x400040
1000345f:	89 44 24 38          	mov    DWORD PTR [esp+0x38],eax
10003463:	c7 44 24 40 00 01 00 00 	mov    DWORD PTR [esp+0x40],0x100
1000346b:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
1000346f:	66 89 44 24 44       	mov    WORD PTR [esp+0x44],ax
10003474:	8b 44 24 7c          	mov    eax,DWORD PTR [esp+0x7c]
10003478:	0d 00 00 00 ff       	or     eax,0xff000000
1000347d:	89 44 24 48          	mov    DWORD PTR [esp+0x48],eax
10003481:	83 c4 1c             	add    esp,0x1c
10003484:	56                   	push   esi
10003485:	8d 44 24 20          	lea    eax,[esp+0x20]
10003489:	50                   	push   eax
1000348a:	68 00 00 00 00       	push   0x0	1000348b: R_386_32	ssfn_ctx
1000348f:	e8 fc ff ff ff       	call   10003490 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x90>	10003490: R_386_PC32	ssfn_render
10003494:	83 c4 10             	add    esp,0x10
10003497:	89 03                	mov    DWORD PTR [ebx],eax
10003499:	8b 74 24 58          	mov    esi,DWORD PTR [esp+0x58]
1000349d:	31 db                	xor    ebx,ebx
1000349f:	89 f0                	mov    eax,esi
100034a1:	2b 44 24 58          	sub    eax,DWORD PTR [esp+0x58]
100034a5:	39 44 24 0c          	cmp    DWORD PTR [esp+0xc],eax
100034a9:	7e 3f                	jle    100034ea <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xea>
100034ab:	31 ff                	xor    edi,edi
100034ad:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
100034b2:	39 f8                	cmp    eax,edi
100034b4:	7e 2c                	jle    100034e2 <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xe2>
100034b6:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100034b9:	8b 04 98             	mov    eax,DWORD PTR [eax+ebx*4]
100034bc:	83 f8 ff             	cmp    eax,0xffffffff
100034bf:	74 1d                	je     100034de <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xde>
100034c1:	8b 95 08 04 00 00    	mov    edx,DWORD PTR [ebp+0x408]
100034c7:	25 ff ff ff 00       	and    eax,0xffffff
100034cc:	8b 0a                	mov    ecx,DWORD PTR [edx]
100034ce:	50                   	push   eax
100034cf:	56                   	push   esi
100034d0:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
100034d4:	01 f8                	add    eax,edi
100034d6:	50                   	push   eax
100034d7:	52                   	push   edx
100034d8:	ff 51 24             	call   DWORD PTR [ecx+0x24]
100034db:	83 c4 10             	add    esp,0x10
100034de:	43                   	inc    ebx
100034df:	47                   	inc    edi
100034e0:	eb cb                	jmp    100034ad <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0xad>
100034e2:	29 c3                	sub    ebx,eax
100034e4:	46                   	inc    esi
100034e5:	83 c3 40             	add    ebx,0x40
100034e8:	eb b5                	jmp    1000349f <NIContext::renderTTF(int, int, unsigned int, char*, int*)+0x9f>
100034ea:	0f bf 44 24 22       	movsx  eax,WORD PTR [esp+0x22]
100034ef:	83 c4 3c             	add    esp,0x3c
100034f2:	5b                   	pop    ebx
100034f3:	5e                   	pop    esi
100034f4:	5f                   	pop    edi
100034f5:	5d                   	pop    ebp
100034f6:	c3                   	ret    
100034f7:	90                   	nop

100034f8 <NIContext::~NIContext()>:
100034f8:	c7 44 24 04 00 00 00 00 	mov    DWORD PTR [esp+0x4],0x0	100034fc: R_386_32	ssfn_ctx
10003500:	e9 8c db ff ff       	jmp    10001091 <ssfn_free>
10003505:	90                   	nop

10003506 <NIContext::NIContext(Video*, int, int, int, int)>:
10003506:	55                   	push   ebp
10003507:	ba 00 00 00 00       	mov    edx,0x0	10003508: R_386_32	ssfn_ctx
1000350c:	57                   	push   edi
1000350d:	b9 72 3d 00 00       	mov    ecx,0x3d72
10003512:	56                   	push   esi
10003513:	89 d7                	mov    edi,edx
10003515:	53                   	push   ebx
10003516:	81 ec 48 02 00 00    	sub    esp,0x248
1000351c:	8b 9c 24 5c 02 00 00 	mov    ebx,DWORD PTR [esp+0x25c]
10003523:	8b 84 24 60 02 00 00 	mov    eax,DWORD PTR [esp+0x260]
1000352a:	89 83 08 04 00 00    	mov    DWORD PTR [ebx+0x408],eax
10003530:	8b 84 24 64 02 00 00 	mov    eax,DWORD PTR [esp+0x264]
10003537:	89 83 0c 04 00 00    	mov    DWORD PTR [ebx+0x40c],eax
1000353d:	8b 84 24 68 02 00 00 	mov    eax,DWORD PTR [esp+0x268]
10003544:	89 83 10 04 00 00    	mov    DWORD PTR [ebx+0x410],eax
1000354a:	8b 84 24 6c 02 00 00 	mov    eax,DWORD PTR [esp+0x26c]
10003551:	89 83 14 04 00 00    	mov    DWORD PTR [ebx+0x414],eax
10003557:	8b 84 24 70 02 00 00 	mov    eax,DWORD PTR [esp+0x270]
1000355e:	89 83 18 04 00 00    	mov    DWORD PTR [ebx+0x418],eax
10003564:	31 c0                	xor    eax,eax
10003566:	f3 ab                	rep stos DWORD PTR es:[edi],eax
10003568:	68 00 40 00 00       	push   0x4000
1000356d:	e8 fc ff ff ff       	call   1000356e <NIContext::NIContext(Video*, int, int, int, int)+0x68>	1000356e: R_386_PC32	malloc
10003572:	c7 83 04 04 00 00 00 00 00 00 	mov    DWORD PTR [ebx+0x404],0x0
1000357c:	89 03                	mov    DWORD PTR [ebx],eax
1000357e:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
10003585:	e8 fc ff ff ff       	call   10003586 <NIContext::NIContext(Video*, int, int, int, int)+0x80>	10003586: R_386_PC32	malloc
1000358a:	83 c4 0c             	add    esp,0xc
1000358d:	89 c6                	mov    esi,eax
1000358f:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10003591: R_386_32	kernelProcess
10003595:	68 69 47 00 10       	push   0x10004769	10003596: R_386_32	.text
1000359a:	50                   	push   eax
1000359b:	e8 fc ff ff ff       	call   1000359c <NIContext::NIContext(Video*, int, int, int, int)+0x96>	1000359c: R_386_PC32	Directory::Directory(char const*, Process*)
100035a0:	83 c4 10             	add    esp,0x10
100035a3:	85 f6                	test   esi,esi
100035a5:	75 10                	jne    100035b7 <NIContext::NIContext(Video*, int, int, int, int)+0xb1>
100035a7:	83 ec 0c             	sub    esp,0xc
100035aa:	68 7d 47 00 10       	push   0x1000477d	100035ab: R_386_32	.text
100035af:	e8 fc ff ff ff       	call   100035b0 <NIContext::NIContext(Video*, int, int, int, int)+0xaa>	100035b0: R_386_PC32	KePanic(char const*)
100035b4:	83 c4 10             	add    esp,0x10
100035b7:	83 ec 0c             	sub    esp,0xc
100035ba:	56                   	push   esi
100035bb:	e8 fc ff ff ff       	call   100035bc <NIContext::NIContext(Video*, int, int, int, int)+0xb6>	100035bc: R_386_PC32	Directory::open()
100035c0:	83 c4 10             	add    esp,0x10
100035c3:	85 c0                	test   eax,eax
100035c5:	75 e0                	jne    100035a7 <NIContext::NIContext(Video*, int, int, int, int)+0xa1>
100035c7:	83 ec 0c             	sub    esp,0xc
100035ca:	8b 06                	mov    eax,DWORD PTR [esi]
100035cc:	8d 4c 24 20          	lea    ecx,[esp+0x20]
100035d0:	51                   	push   ecx
100035d1:	8d 94 24 30 01 00 00 	lea    edx,[esp+0x130]
100035d8:	52                   	push   edx
100035d9:	6a 00                	push   0x0
100035db:	68 10 01 00 00       	push   0x110
100035e0:	56                   	push   esi
100035e1:	ff 50 0c             	call   DWORD PTR [eax+0xc]
100035e4:	83 c4 20             	add    esp,0x20
100035e7:	85 c0                	test   eax,eax
100035e9:	0f 85 a0 01 00 00    	jne    1000378f <NIContext::NIContext(Video*, int, int, int, int)+0x289>
100035ef:	81 7c 24 14 10 01 00 00 	cmp    DWORD PTR [esp+0x14],0x110
100035f7:	0f 85 92 01 00 00    	jne    1000378f <NIContext::NIContext(Video*, int, int, int, int)+0x289>
100035fd:	8d ac 24 30 01 00 00 	lea    ebp,[esp+0x130]
10003604:	83 c9 ff             	or     ecx,0xffffffff
10003607:	83 ec 0c             	sub    esp,0xc
1000360a:	89 ef                	mov    edi,ebp
1000360c:	f2 ae                	repnz scas al,BYTE PTR es:[edi]
1000360e:	8b bb 04 04 00 00    	mov    edi,DWORD PTR [ebx+0x404]
10003614:	89 ca                	mov    edx,ecx
10003616:	f7 d2                	not    edx
10003618:	52                   	push   edx
10003619:	e8 fc ff ff ff       	call   1000361a <NIContext::NIContext(Video*, int, int, int, int)+0x114>	1000361a: R_386_PC32	malloc
1000361e:	89 44 bb 04          	mov    DWORD PTR [ebx+edi*4+0x4],eax
10003622:	47                   	inc    edi
10003623:	89 bb 04 04 00 00    	mov    DWORD PTR [ebx+0x404],edi
10003629:	5a                   	pop    edx
1000362a:	59                   	pop    ecx
1000362b:	55                   	push   ebp
1000362c:	50                   	push   eax
1000362d:	e8 fc ff ff ff       	call   1000362e <NIContext::NIContext(Video*, int, int, int, int)+0x128>	1000362e: R_386_PC32	strcpy
10003632:	5f                   	pop    edi
10003633:	58                   	pop    eax
10003634:	68 98 47 00 10       	push   0x10004798	10003635: R_386_32	.text
10003639:	8d 7c 24 2c          	lea    edi,[esp+0x2c]
1000363d:	57                   	push   edi
1000363e:	e8 fc ff ff ff       	call   1000363f <NIContext::NIContext(Video*, int, int, int, int)+0x139>	1000363f: R_386_PC32	strcpy
10003643:	58                   	pop    eax
10003644:	5a                   	pop    edx
10003645:	55                   	push   ebp
10003646:	57                   	push   edi
10003647:	e8 fc ff ff ff       	call   10003648 <NIContext::NIContext(Video*, int, int, int, int)+0x142>	10003648: R_386_PC32	strcat
1000364c:	c7 04 24 14 01 00 00 	mov    DWORD PTR [esp],0x114
10003653:	e8 fc ff ff ff       	call   10003654 <NIContext::NIContext(Video*, int, int, int, int)+0x14e>	10003654: R_386_PC32	malloc
10003658:	83 c4 0c             	add    esp,0xc
1000365b:	89 c5                	mov    ebp,eax
1000365d:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	1000365f: R_386_32	kernelProcess
10003663:	57                   	push   edi
10003664:	50                   	push   eax
10003665:	e8 fc ff ff ff       	call   10003666 <NIContext::NIContext(Video*, int, int, int, int)+0x160>	10003666: R_386_PC32	File::File(char const*, Process*)
1000366a:	83 c4 10             	add    esp,0x10
1000366d:	85 ed                	test   ebp,ebp
1000366f:	0f 84 52 ff ff ff    	je     100035c7 <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
10003675:	50                   	push   eax
10003676:	50                   	push   eax
10003677:	6a 01                	push   0x1
10003679:	55                   	push   ebp
1000367a:	e8 fc ff ff ff       	call   1000367b <NIContext::NIContext(Video*, int, int, int, int)+0x175>	1000367b: R_386_PC32	File::open(FileOpenMode)
1000367f:	83 c4 10             	add    esp,0x10
10003682:	85 c0                	test   eax,eax
10003684:	74 0c                	je     10003692 <NIContext::NIContext(Video*, int, int, int, int)+0x18c>
10003686:	83 ec 0c             	sub    esp,0xc
10003689:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
1000368c:	55                   	push   ebp
1000368d:	e9 b4 00 00 00       	jmp    10003746 <NIContext::NIContext(Video*, int, int, int, int)+0x240>
10003692:	50                   	push   eax
10003693:	8d 44 24 17          	lea    eax,[esp+0x17]
10003697:	50                   	push   eax
10003698:	8d 44 24 20          	lea    eax,[esp+0x20]
1000369c:	50                   	push   eax
1000369d:	55                   	push   ebp
1000369e:	e8 fc ff ff ff       	call   1000369f <NIContext::NIContext(Video*, int, int, int, int)+0x199>	1000369f: R_386_PC32	File::stat(unsigned long long*, bool*)
100036a3:	83 c4 10             	add    esp,0x10
100036a6:	80 7c 24 13 00       	cmp    BYTE PTR [esp+0x13],0x0
100036ab:	74 0e                	je     100036bb <NIContext::NIContext(Video*, int, int, int, int)+0x1b5>
100036ad:	83 ec 0c             	sub    esp,0xc
100036b0:	55                   	push   ebp
100036b1:	e8 fc ff ff ff       	call   100036b2 <NIContext::NIContext(Video*, int, int, int, int)+0x1ac>	100036b2: R_386_PC32	File::close()
100036b6:	e9 85 00 00 00       	jmp    10003740 <NIContext::NIContext(Video*, int, int, int, int)+0x23a>
100036bb:	8b 44 24 18          	mov    eax,DWORD PTR [esp+0x18]
100036bf:	8b 54 24 1c          	mov    edx,DWORD PTR [esp+0x1c]
100036c3:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
100036c7:	89 54 24 0c          	mov    DWORD PTR [esp+0xc],edx
100036cb:	83 ec 0c             	sub    esp,0xc
100036ce:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
100036d2:	e8 fc ff ff ff       	call   100036d3 <NIContext::NIContext(Video*, int, int, int, int)+0x1cd>	100036d3: R_386_PC32	malloc
100036d7:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
100036db:	58                   	pop    eax
100036dc:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
100036df:	8d 54 24 20          	lea    edx,[esp+0x20]
100036e3:	52                   	push   edx
100036e4:	ff 74 24 14          	push   DWORD PTR [esp+0x14]
100036e8:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100036ec:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100036f0:	55                   	push   ebp
100036f1:	ff 50 0c             	call   DWORD PTR [eax+0xc]
100036f4:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
100036f8:	83 c4 1c             	add    esp,0x1c
100036fb:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
100036ff:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003703:	68 ad 47 00 10       	push   0x100047ad	10003704: R_386_32	.text
10003708:	e8 fc ff ff ff       	call   10003709 <NIContext::NIContext(Video*, int, int, int, int)+0x203>	10003709: R_386_PC32	Dbg::kprintf(char const*, ...)
1000370d:	83 c4 10             	add    esp,0x10
10003710:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003714:	85 c0                	test   eax,eax
10003716:	75 15                	jne    1000372d <NIContext::NIContext(Video*, int, int, int, int)+0x227>
10003718:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000371c:	89 c1                	mov    ecx,eax
1000371e:	c1 f9 1f             	sar    ecx,0x1f
10003721:	3b 4c 24 1c          	cmp    ecx,DWORD PTR [esp+0x1c]
10003725:	75 06                	jne    1000372d <NIContext::NIContext(Video*, int, int, int, int)+0x227>
10003727:	3b 44 24 18          	cmp    eax,DWORD PTR [esp+0x18]
1000372b:	74 24                	je     10003751 <NIContext::NIContext(Video*, int, int, int, int)+0x24b>
1000372d:	83 ec 0c             	sub    esp,0xc
10003730:	55                   	push   ebp
10003731:	e8 fc ff ff ff       	call   10003732 <NIContext::NIContext(Video*, int, int, int, int)+0x22c>	10003732: R_386_PC32	File::close()
10003736:	58                   	pop    eax
10003737:	ff 74 24 10          	push   DWORD PTR [esp+0x10]
1000373b:	e8 fc ff ff ff       	call   1000373c <NIContext::NIContext(Video*, int, int, int, int)+0x236>	1000373c: R_386_PC32	free
10003740:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003743:	89 2c 24             	mov    DWORD PTR [esp],ebp
10003746:	ff 50 08             	call   DWORD PTR [eax+0x8]
10003749:	83 c4 10             	add    esp,0x10
1000374c:	e9 76 fe ff ff       	jmp    100035c7 <NIContext::NIContext(Video*, int, int, int, int)+0xc1>
10003751:	50                   	push   eax
10003752:	50                   	push   eax
10003753:	57                   	push   edi
10003754:	68 c1 47 00 10       	push   0x100047c1	10003755: R_386_32	.text
10003759:	e8 fc ff ff ff       	call   1000375a <NIContext::NIContext(Video*, int, int, int, int)+0x254>	1000375a: R_386_PC32	Dbg::kprintf(char const*, ...)
1000375e:	5a                   	pop    edx
1000375f:	59                   	pop    ecx
10003760:	ff 74 24 0c          	push   DWORD PTR [esp+0xc]
10003764:	68 00 00 00 00       	push   0x0	10003765: R_386_32	ssfn_ctx
10003769:	e8 fc ff ff ff       	call   1000376a <NIContext::NIContext(Video*, int, int, int, int)+0x264>	1000376a: R_386_PC32	ssfn_load
1000376e:	5b                   	pop    ebx
1000376f:	5f                   	pop    edi
10003770:	50                   	push   eax
10003771:	68 d2 47 00 10       	push   0x100047d2	10003772: R_386_32	.text
10003776:	e8 fc ff ff ff       	call   10003777 <NIContext::NIContext(Video*, int, int, int, int)+0x271>	10003777: R_386_PC32	Dbg::kprintf(char const*, ...)
1000377b:	89 2c 24             	mov    DWORD PTR [esp],ebp
1000377e:	e8 fc ff ff ff       	call   1000377f <NIContext::NIContext(Video*, int, int, int, int)+0x279>	1000377f: R_386_PC32	File::close()
10003783:	8b 45 00             	mov    eax,DWORD PTR [ebp+0x0]
10003786:	89 2c 24             	mov    DWORD PTR [esp],ebp
10003789:	ff 50 08             	call   DWORD PTR [eax+0x8]
1000378c:	83 c4 10             	add    esp,0x10
1000378f:	83 ec 0c             	sub    esp,0xc
10003792:	56                   	push   esi
10003793:	e8 fc ff ff ff       	call   10003794 <NIContext::NIContext(Video*, int, int, int, int)+0x28e>	10003794: R_386_PC32	Directory::close()
10003798:	8b 06                	mov    eax,DWORD PTR [esi]
1000379a:	89 34 24             	mov    DWORD PTR [esp],esi
1000379d:	ff 50 08             	call   DWORD PTR [eax+0x8]
100037a0:	b8 00 00 00 00       	mov    eax,0x0	100037a1: R_386_32	ssfn_ctx
100037a5:	e8 83 cc ff ff       	call   1000042d <_ssfn_fc.part.1>
100037aa:	c7 05 14 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x14,0x0	100037ac: R_386_32	ssfn_ctx
100037b4:	c7 05 18 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x18,0x0	100037b6: R_386_32	ssfn_ctx
100037be:	c7 05 b8 f5 00 00 ff 00 00 00 	mov    DWORD PTR ds:0xf5b8,0xff	100037c0: R_386_32	ssfn_ctx
100037c8:	c7 05 bc f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5bc,0x0	100037ca: R_386_32	ssfn_ctx
100037d2:	c7 05 c0 f5 00 00 10 00 00 00 	mov    DWORD PTR ds:0xf5c0,0x10	100037d4: R_386_32	ssfn_ctx
100037dc:	c7 05 c4 f5 00 00 00 00 00 00 	mov    DWORD PTR ds:0xf5c4,0x0	100037de: R_386_32	ssfn_ctx
100037e6:	81 c4 4c 02 00 00    	add    esp,0x24c
100037ec:	5b                   	pop    ebx
100037ed:	5e                   	pop    esi
100037ee:	5f                   	pop    edi
100037ef:	5d                   	pop    ebp
100037f0:	c3                   	ret    
100037f1:	90                   	nop

100037f2 <NIDesktop::NIDesktop(NIContext*)>:
100037f2:	53                   	push   ebx
100037f3:	83 ec 14             	sub    esp,0x14
100037f6:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
100037fa:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
100037fe:	c7 43 08 1e 00 00 00 	mov    DWORD PTR [ebx+0x8],0x1e
10003805:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
10003808:	c7 43 0c 1e 00 00 00 	mov    DWORD PTR [ebx+0xc],0x1e
1000380f:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
10003816:	6a 08                	push   0x8
10003818:	e8 fc ff ff ff       	call   10003819 <NIDesktop::NIDesktop(NIContext*)+0x27>	10003819: R_386_PC32	malloc
1000381d:	89 03                	mov    DWORD PTR [ebx],eax
1000381f:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
10003826:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
1000382c:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	1000382e: R_386_32	mouseDesktop
10003832:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10003834: R_386_32	guiMouseHandler
	10003838: R_386_32	clipdrawHandleMouse(int, int, int, int)
1000383c:	83 c4 18             	add    esp,0x18
1000383f:	5b                   	pop    ebx
10003840:	c3                   	ret    
10003841:	90                   	nop

10003842 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)>:
10003842:	53                   	push   ebx
10003843:	83 ec 08             	sub    esp,0x8
10003846:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000384a:	8b 00                	mov    eax,DWORD PTR [eax]
1000384c:	8b 18                	mov    ebx,DWORD PTR [eax]
1000384e:	83 7b 04 00          	cmp    DWORD PTR [ebx+0x4],0x0
10003852:	74 1d                	je     10003871 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2f>
10003854:	8b 03                	mov    eax,DWORD PTR [ebx]
10003856:	85 c0                	test   eax,eax
10003858:	74 12                	je     1000386c <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
1000385a:	3b 44 24 14          	cmp    eax,DWORD PTR [esp+0x14]
1000385e:	74 0c                	je     1000386c <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x2a>
10003860:	83 ec 0c             	sub    esp,0xc
10003863:	50                   	push   eax
10003864:	e8 fc ff ff ff       	call   10003865 <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0x23>	10003865: R_386_PC32	NIWindow::invalidate()
10003869:	83 c4 10             	add    esp,0x10
1000386c:	8b 5b 04             	mov    ebx,DWORD PTR [ebx+0x4]
1000386f:	eb dd                	jmp    1000384e <NIDesktop::invalidateAllDueToFullscreen(NIWindow*)+0xc>
10003871:	83 c4 08             	add    esp,0x8
10003874:	5b                   	pop    ebx
10003875:	c3                   	ret    

10003876 <NIDesktop::getTopmostWindowAtPixel(int, int)>:
10003876:	57                   	push   edi
10003877:	56                   	push   esi
10003878:	53                   	push   ebx
10003879:	8b 44 24 10          	mov    eax,DWORD PTR [esp+0x10]
1000387d:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
10003881:	8b 00                	mov    eax,DWORD PTR [eax]
10003883:	8b 00                	mov    eax,DWORD PTR [eax]
10003885:	8b 58 04             	mov    ebx,DWORD PTR [eax+0x4]
10003888:	85 db                	test   ebx,ebx
1000388a:	74 43                	je     100038cf <NIDesktop::getTopmostWindowAtPixel(int, int)+0x59>
1000388c:	8b 00                	mov    eax,DWORD PTR [eax]
1000388e:	85 c0                	test   eax,eax
10003890:	74 3f                	je     100038d1 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
10003892:	8b 50 1c             	mov    edx,DWORD PTR [eax+0x1c]
10003895:	39 ca                	cmp    edx,ecx
10003897:	7e 04                	jle    1000389d <NIDesktop::getTopmostWindowAtPixel(int, int)+0x27>
10003899:	89 d8                	mov    eax,ebx
1000389b:	eb e8                	jmp    10003885 <NIDesktop::getTopmostWindowAtPixel(int, int)+0xf>
1000389d:	8b 70 24             	mov    esi,DWORD PTR [eax+0x24]
100038a0:	01 d6                	add    esi,edx
100038a2:	39 ce                	cmp    esi,ecx
100038a4:	7e f3                	jle    10003899 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
100038a6:	89 ce                	mov    esi,ecx
100038a8:	29 d6                	sub    esi,edx
100038aa:	8b 50 14             	mov    edx,DWORD PTR [eax+0x14]
100038ad:	8d 34 b2             	lea    esi,[edx+esi*4]
100038b0:	8b 50 18             	mov    edx,DWORD PTR [eax+0x18]
100038b3:	0f b7 3e             	movzx  edi,WORD PTR [esi]
100038b6:	01 d7                	add    edi,edx
100038b8:	3b 7c 24 14          	cmp    edi,DWORD PTR [esp+0x14]
100038bc:	7f db                	jg     10003899 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
100038be:	03 50 20             	add    edx,DWORD PTR [eax+0x20]
100038c1:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
100038c5:	29 f2                	sub    edx,esi
100038c7:	3b 54 24 14          	cmp    edx,DWORD PTR [esp+0x14]
100038cb:	7e cc                	jle    10003899 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x23>
100038cd:	eb 02                	jmp    100038d1 <NIDesktop::getTopmostWindowAtPixel(int, int)+0x5b>
100038cf:	31 c0                	xor    eax,eax
100038d1:	5b                   	pop    ebx
100038d2:	5e                   	pop    esi
100038d3:	5f                   	pop    edi
100038d4:	c3                   	ret    
100038d5:	90                   	nop

100038d6 <NIDesktop::renderScanline(int, int, int)>:
100038d6:	55                   	push   ebp
100038d7:	57                   	push   edi
100038d8:	56                   	push   esi
100038d9:	53                   	push   ebx
100038da:	83 ec 2c             	sub    esp,0x2c
100038dd:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
100038e1:	2b 44 24 48          	sub    eax,DWORD PTR [esp+0x48]
100038e5:	89 44 24 10          	mov    DWORD PTR [esp+0x10],eax
100038e9:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
100038ed:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
100038f1:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	100038f3: R_386_32	render
100038f7:	31 c0                	xor    eax,eax
100038f9:	89 d7                	mov    edi,edx
100038fb:	f3 aa                	rep stos BYTE PTR es:[edi],al
100038fd:	8b 44 24 48          	mov    eax,DWORD PTR [esp+0x48]
10003901:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
10003905:	8d 90 00 00 00 00    	lea    edx,[eax+0x0]	10003907: R_386_32	shadow
1000390b:	b0 80                	mov    al,0x80
1000390d:	89 d7                	mov    edi,edx
1000390f:	f3 aa                	rep stos BYTE PTR es:[edi],al
10003911:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003915:	8b 00                	mov    eax,DWORD PTR [eax]
10003917:	8b 00                	mov    eax,DWORD PTR [eax]
10003919:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
1000391d:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	1000391f: R_386_32	movingWin
10003923:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10003927:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
1000392a:	85 c0                	test   eax,eax
1000392c:	75 11                	jne    1000393f <NIDesktop::renderScanline(int, int, int)+0x69>
1000392e:	69 7c 24 44 e0 01 00 00 	imul   edi,DWORD PTR [esp+0x44],0x1e0
10003936:	8b 4c 24 48          	mov    ecx,DWORD PTR [esp+0x48]
1000393a:	e9 ce 02 00 00       	jmp    10003c0d <NIDesktop::renderScanline(int, int, int)+0x337>
1000393f:	8b 7c 24 0c          	mov    edi,DWORD PTR [esp+0xc]
10003943:	8b 1f                	mov    ebx,DWORD PTR [edi]
10003945:	85 db                	test   ebx,ebx
10003947:	74 e5                	je     1000392e <NIDesktop::renderScanline(int, int, int)+0x58>
10003949:	39 da                	cmp    edx,ebx
1000394b:	75 06                	jne    10003953 <NIDesktop::renderScanline(int, int, int)+0x7d>
1000394d:	89 44 24 0c          	mov    DWORD PTR [esp+0xc],eax
10003951:	eb d0                	jmp    10003923 <NIDesktop::renderScanline(int, int, int)+0x4d>
10003953:	83 ec 0c             	sub    esp,0xc
10003956:	53                   	push   ebx
10003957:	e8 fc ff ff ff       	call   10003958 <NIDesktop::renderScanline(int, int, int)+0x82>	10003958: R_386_PC32	NIWindow::request()
1000395c:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
1000395f:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
10003962:	83 c4 10             	add    esp,0x10
10003965:	01 c2                	add    edx,eax
10003967:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
1000396b:	0f 8e ad 00 00 00    	jle    10003a1e <NIDesktop::renderScanline(int, int, int)+0x148>
10003971:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003975:	0f 85 a3 00 00 00    	jne    10003a1e <NIDesktop::renderScanline(int, int, int)+0x148>
1000397b:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
1000397f:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003982:	83 c0 06             	add    eax,0x6
10003985:	89 44 24 1c          	mov    DWORD PTR [esp+0x1c],eax
10003989:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
1000398c:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
1000398f:	01 c8                	add    eax,ecx
10003991:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10003995:	39 d0                	cmp    eax,edx
10003997:	0f 8e 40 01 00 00    	jle    10003add <NIDesktop::renderScanline(int, int, int)+0x207>
1000399d:	3b 54 24 48          	cmp    edx,DWORD PTR [esp+0x48]
100039a1:	7c 75                	jl     10003a18 <NIDesktop::renderScanline(int, int, int)+0x142>
100039a3:	3b 54 24 4c          	cmp    edx,DWORD PTR [esp+0x4c]
100039a7:	0f 8f 30 01 00 00    	jg     10003add <NIDesktop::renderScanline(int, int, int)+0x207>
100039ad:	8b 73 1c             	mov    esi,DWORD PTR [ebx+0x1c]
100039b0:	89 d5                	mov    ebp,edx
100039b2:	6b fe fc             	imul   edi,esi,0xfffffffc
100039b5:	29 cd                	sub    ebp,ecx
100039b7:	8b 44 24 44          	mov    eax,DWORD PTR [esp+0x44]
100039bb:	89 6c 24 18          	mov    DWORD PTR [esp+0x18],ebp
100039bf:	39 f0                	cmp    eax,esi
100039c1:	7c 1d                	jl     100039e0 <NIDesktop::renderScanline(int, int, int)+0x10a>
100039c3:	8d 0c 87             	lea    ecx,[edi+eax*4]
100039c6:	03 4b 14             	add    ecx,DWORD PTR [ebx+0x14]
100039c9:	0f b7 29             	movzx  ebp,WORD PTR [ecx]
100039cc:	3b 6c 24 18          	cmp    ebp,DWORD PTR [esp+0x18]
100039d0:	7f 0e                	jg     100039e0 <NIDesktop::renderScanline(int, int, int)+0x10a>
100039d2:	0f b7 49 02          	movzx  ecx,WORD PTR [ecx+0x2]
100039d6:	8b 6c 24 14          	mov    ebp,DWORD PTR [esp+0x14]
100039da:	29 cd                	sub    ebp,ecx
100039dc:	39 d5                	cmp    ebp,edx
100039de:	7d 07                	jge    100039e7 <NIDesktop::renderScanline(int, int, int)+0x111>
100039e0:	40                   	inc    eax
100039e1:	3b 44 24 1c          	cmp    eax,DWORD PTR [esp+0x1c]
100039e5:	75 d8                	jne    100039bf <NIDesktop::renderScanline(int, int, int)+0xe9>
100039e7:	2b 44 24 44          	sub    eax,DWORD PTR [esp+0x44]
100039eb:	48                   	dec    eax
100039ec:	83 f8 03             	cmp    eax,0x3
100039ef:	77 27                	ja     10003a18 <NIDesktop::renderScanline(int, int, int)+0x142>
100039f1:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	100039f3: R_386_32	render
100039f8:	75 1e                	jne    10003a18 <NIDesktop::renderScanline(int, int, int)+0x142>
100039fa:	8d 0c c5 65 00 00 00 	lea    ecx,[eax*8+0x65]
10003a01:	0f b6 82 00 00 00 00 	movzx  eax,BYTE PTR [edx+0x0]	10003a04: R_386_32	shadow
10003a08:	0f af c1             	imul   eax,ecx
10003a0b:	d1 f9                	sar    ecx,1
10003a0d:	c1 f8 08             	sar    eax,0x8
10003a10:	01 c1                	add    ecx,eax
10003a12:	88 8a 00 00 00 00    	mov    BYTE PTR [edx+0x0],cl	10003a14: R_386_32	shadow
10003a18:	42                   	inc    edx
10003a19:	e9 6b ff ff ff       	jmp    10003989 <NIDesktop::renderScanline(int, int, int)+0xb3>
10003a1e:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003a22:	0f 8d b5 00 00 00    	jge    10003add <NIDesktop::renderScanline(int, int, int)+0x207>
10003a28:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003a2c:	0f 85 ab 00 00 00    	jne    10003add <NIDesktop::renderScanline(int, int, int)+0x207>
10003a32:	8b 7c 24 44          	mov    edi,DWORD PTR [esp+0x44]
10003a36:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003a39:	83 ef 06             	sub    edi,0x6
10003a3c:	89 7c 24 1c          	mov    DWORD PTR [esp+0x1c],edi
10003a40:	8b 4b 18             	mov    ecx,DWORD PTR [ebx+0x18]
10003a43:	8b 7b 20             	mov    edi,DWORD PTR [ebx+0x20]
10003a46:	01 cf                	add    edi,ecx
10003a48:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
10003a4c:	39 c7                	cmp    edi,eax
10003a4e:	0f 8e 89 00 00 00    	jle    10003add <NIDesktop::renderScanline(int, int, int)+0x207>
10003a54:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003a58:	7c 7d                	jl     10003ad7 <NIDesktop::renderScanline(int, int, int)+0x201>
10003a5a:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003a5e:	7f 7d                	jg     10003add <NIDesktop::renderScanline(int, int, int)+0x207>
10003a60:	89 c6                	mov    esi,eax
10003a62:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003a66:	29 ce                	sub    esi,ecx
10003a68:	89 74 24 18          	mov    DWORD PTR [esp+0x18],esi
10003a6c:	4a                   	dec    edx
10003a6d:	8b 4c 24 44          	mov    ecx,DWORD PTR [esp+0x44]
10003a71:	29 d1                	sub    ecx,edx
10003a73:	3b 54 24 1c          	cmp    edx,DWORD PTR [esp+0x1c]
10003a77:	74 32                	je     10003aab <NIDesktop::renderScanline(int, int, int)+0x1d5>
10003a79:	8b 7b 1c             	mov    edi,DWORD PTR [ebx+0x1c]
10003a7c:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
10003a7f:	8d 2c 37             	lea    ebp,[edi+esi*1]
10003a82:	39 d5                	cmp    ebp,edx
10003a84:	7e e6                	jle    10003a6c <NIDesktop::renderScanline(int, int, int)+0x196>
10003a86:	89 d5                	mov    ebp,edx
10003a88:	29 fd                	sub    ebp,edi
10003a8a:	39 ee                	cmp    esi,ebp
10003a8c:	7e 1d                	jle    10003aab <NIDesktop::renderScanline(int, int, int)+0x1d5>
10003a8e:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10003a91:	8d 34 ae             	lea    esi,[esi+ebp*4]
10003a94:	0f b7 3e             	movzx  edi,WORD PTR [esi]
10003a97:	3b 7c 24 18          	cmp    edi,DWORD PTR [esp+0x18]
10003a9b:	7f cf                	jg     10003a6c <NIDesktop::renderScanline(int, int, int)+0x196>
10003a9d:	0f b7 76 02          	movzx  esi,WORD PTR [esi+0x2]
10003aa1:	8b 7c 24 14          	mov    edi,DWORD PTR [esp+0x14]
10003aa5:	29 f7                	sub    edi,esi
10003aa7:	39 c7                	cmp    edi,eax
10003aa9:	7c c1                	jl     10003a6c <NIDesktop::renderScanline(int, int, int)+0x196>
10003aab:	83 f9 04             	cmp    ecx,0x4
10003aae:	77 27                	ja     10003ad7 <NIDesktop::renderScanline(int, int, int)+0x201>
10003ab0:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003ab2: R_386_32	render
10003ab7:	75 1e                	jne    10003ad7 <NIDesktop::renderScanline(int, int, int)+0x201>
10003ab9:	8d 0c cd 5d 00 00 00 	lea    ecx,[ecx*8+0x5d]
10003ac0:	0f b6 90 00 00 00 00 	movzx  edx,BYTE PTR [eax+0x0]	10003ac3: R_386_32	shadow
10003ac7:	0f af d1             	imul   edx,ecx
10003aca:	d1 f9                	sar    ecx,1
10003acc:	c1 fa 08             	sar    edx,0x8
10003acf:	01 d1                	add    ecx,edx
10003ad1:	88 88 00 00 00 00    	mov    BYTE PTR [eax+0x0],cl	10003ad3: R_386_32	shadow
10003ad7:	40                   	inc    eax
10003ad8:	e9 63 ff ff ff       	jmp    10003a40 <NIDesktop::renderScanline(int, int, int)+0x16a>
10003add:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003ae0:	3b 44 24 44          	cmp    eax,DWORD PTR [esp+0x44]
10003ae4:	0f 8f 03 01 00 00    	jg     10003bed <NIDesktop::renderScanline(int, int, int)+0x317>
10003aea:	8b 53 24             	mov    edx,DWORD PTR [ebx+0x24]
10003aed:	01 c2                	add    edx,eax
10003aef:	3b 54 24 44          	cmp    edx,DWORD PTR [esp+0x44]
10003af3:	0f 8e f4 00 00 00    	jle    10003bed <NIDesktop::renderScanline(int, int, int)+0x317>
10003af9:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003afd:	29 c2                	sub    edx,eax
10003aff:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10003b02:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003b06:	8d 14 90             	lea    edx,[eax+edx*4]
10003b09:	0f b7 02             	movzx  eax,WORD PTR [edx]
10003b0c:	89 44 24 14          	mov    DWORD PTR [esp+0x14],eax
10003b10:	0f b7 42 02          	movzx  eax,WORD PTR [edx+0x2]
10003b14:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10003b18:	74 09                	je     10003b23 <NIDesktop::renderScanline(int, int, int)+0x24d>
10003b1a:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10003b1e:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
10003b21:	eb 78                	jmp    10003b9b <NIDesktop::renderScanline(int, int, int)+0x2c5>
10003b23:	31 c9                	xor    ecx,ecx
10003b25:	8b 53 18             	mov    edx,DWORD PTR [ebx+0x18]
10003b28:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
10003b2c:	8d 6c 02 fc          	lea    ebp,[edx+eax*1-0x4]
10003b30:	03 53 20             	add    edx,DWORD PTR [ebx+0x20]
10003b33:	01 cd                	add    ebp,ecx
10003b35:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003b39:	01 ca                	add    edx,ecx
10003b3b:	80 bd 00 00 00 00 00 	cmp    BYTE PTR [ebp+0x0],0x0	10003b3d: R_386_32	render
10003b42:	75 1f                	jne    10003b63 <NIDesktop::renderScanline(int, int, int)+0x28d>
10003b44:	0f b6 b5 00 00 00 00 	movzx  esi,BYTE PTR [ebp+0x0]	10003b47: R_386_32	shadow
10003b4b:	6b f9 f8             	imul   edi,ecx,0xfffffff8
10003b4e:	83 c7 7d             	add    edi,0x7d
10003b51:	0f af f7             	imul   esi,edi
10003b54:	d1 ff                	sar    edi,1
10003b56:	c1 fe 08             	sar    esi,0x8
10003b59:	01 f7                	add    edi,esi
10003b5b:	89 f8                	mov    eax,edi
10003b5d:	88 85 00 00 00 00    	mov    BYTE PTR [ebp+0x0],al	10003b5f: R_386_32	shadow
10003b63:	80 ba 00 00 00 00 00 	cmp    BYTE PTR [edx+0x0],0x0	10003b65: R_386_32	render
10003b6a:	75 20                	jne    10003b8c <NIDesktop::renderScanline(int, int, int)+0x2b6>
10003b6c:	8d 3c cd 65 00 00 00 	lea    edi,[ecx*8+0x65]
10003b73:	0f b6 b2 00 00 00 00 	movzx  esi,BYTE PTR [edx+0x0]	10003b76: R_386_32	shadow
10003b7a:	0f af f7             	imul   esi,edi
10003b7d:	d1 ff                	sar    edi,1
10003b7f:	c1 fe 08             	sar    esi,0x8
10003b82:	01 f7                	add    edi,esi
10003b84:	89 f8                	mov    eax,edi
10003b86:	88 82 00 00 00 00    	mov    BYTE PTR [edx+0x0],al	10003b88: R_386_32	shadow
10003b8c:	41                   	inc    ecx
10003b8d:	83 f9 04             	cmp    ecx,0x4
10003b90:	75 93                	jne    10003b25 <NIDesktop::renderScanline(int, int, int)+0x24f>
10003b92:	eb 86                	jmp    10003b1a <NIDesktop::renderScanline(int, int, int)+0x244>
10003b94:	3b 44 24 48          	cmp    eax,DWORD PTR [esp+0x48]
10003b98:	7d 11                	jge    10003bab <NIDesktop::renderScanline(int, int, int)+0x2d5>
10003b9a:	40                   	inc    eax
10003b9b:	8b 53 20             	mov    edx,DWORD PTR [ebx+0x20]
10003b9e:	03 53 18             	add    edx,DWORD PTR [ebx+0x18]
10003ba1:	2b 54 24 18          	sub    edx,DWORD PTR [esp+0x18]
10003ba5:	39 c2                	cmp    edx,eax
10003ba7:	7f eb                	jg     10003b94 <NIDesktop::renderScanline(int, int, int)+0x2be>
10003ba9:	eb 42                	jmp    10003bed <NIDesktop::renderScanline(int, int, int)+0x317>
10003bab:	3b 44 24 4c          	cmp    eax,DWORD PTR [esp+0x4c]
10003baf:	7f 3c                	jg     10003bed <NIDesktop::renderScanline(int, int, int)+0x317>
10003bb1:	80 b8 00 00 00 00 00 	cmp    BYTE PTR [eax+0x0],0x0	10003bb3: R_386_32	render
10003bb8:	75 e0                	jne    10003b9a <NIDesktop::renderScanline(int, int, int)+0x2c4>
10003bba:	c6 80 00 00 00 00 01 	mov    BYTE PTR [eax+0x0],0x1	10003bbc: R_386_32	render
10003bc1:	8b 54 24 44          	mov    edx,DWORD PTR [esp+0x44]
10003bc5:	8b 4b 20             	mov    ecx,DWORD PTR [ebx+0x20]
10003bc8:	2b 53 1c             	sub    edx,DWORD PTR [ebx+0x1c]
10003bcb:	0f af ca             	imul   ecx,edx
10003bce:	89 c2                	mov    edx,eax
10003bd0:	2b 53 18             	sub    edx,DWORD PTR [ebx+0x18]
10003bd3:	01 ca                	add    edx,ecx
10003bd5:	8b 4b 08             	mov    ecx,DWORD PTR [ebx+0x8]
10003bd8:	ff 4c 24 10          	dec    DWORD PTR [esp+0x10]
10003bdc:	8b 14 91             	mov    edx,DWORD PTR [ecx+edx*4]
10003bdf:	89 14 85 00 00 00 00 	mov    DWORD PTR [eax*4+0x0],edx	10003be2: R_386_32	renderData
10003be6:	75 b2                	jne    10003b9a <NIDesktop::renderScanline(int, int, int)+0x2c4>
10003be8:	e9 8f 00 00 00       	jmp    10003c7c <NIDesktop::renderScanline(int, int, int)+0x3a6>
10003bed:	80 7b 28 00          	cmp    BYTE PTR [ebx+0x28],0x0
10003bf1:	0f 85 37 fd ff ff    	jne    1000392e <NIDesktop::renderScanline(int, int, int)+0x58>
10003bf7:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10003bfb:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003bfe:	e9 16 fd ff ff       	jmp    10003919 <NIDesktop::renderScanline(int, int, int)+0x43>
10003c03:	80 b9 00 00 00 00 00 	cmp    BYTE PTR [ecx+0x0],0x0	10003c05: R_386_32	render
10003c0a:	74 09                	je     10003c15 <NIDesktop::renderScanline(int, int, int)+0x33f>
10003c0c:	41                   	inc    ecx
10003c0d:	3b 4c 24 4c          	cmp    ecx,DWORD PTR [esp+0x4c]
10003c11:	7c f0                	jl     10003c03 <NIDesktop::renderScanline(int, int, int)+0x32d>
10003c13:	eb 67                	jmp    10003c7c <NIDesktop::renderScanline(int, int, int)+0x3a6>
10003c15:	c6 81 00 00 00 00 01 	mov    BYTE PTR [ecx+0x0],0x1	10003c17: R_386_32	render
10003c1c:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003c20:	8b 58 04             	mov    ebx,DWORD PTR [eax+0x4]
10003c23:	89 f8                	mov    eax,edi
10003c25:	99                   	cdq    
10003c26:	f7 bb 10 04 00 00    	idiv   DWORD PTR [ebx+0x410]
10003c2c:	89 c6                	mov    esi,eax
10003c2e:	69 c1 80 02 00 00    	imul   eax,ecx,0x280
10003c34:	69 f6 80 02 00 00    	imul   esi,esi,0x280
10003c3a:	99                   	cdq    
10003c3b:	f7 bb 0c 04 00 00    	idiv   DWORD PTR [ebx+0x40c]
10003c41:	0f b6 84 30 00 00 00 00 	movzx  eax,BYTE PTR [eax+esi*1+0x0]	10003c45: R_386_32	justMonika
10003c49:	89 c3                	mov    ebx,eax
10003c4b:	89 c2                	mov    edx,eax
10003c4d:	83 e3 03             	and    ebx,0x3
10003c50:	c1 fa 05             	sar    edx,0x5
10003c53:	c1 f8 02             	sar    eax,0x2
10003c56:	83 e2 03             	and    edx,0x3
10003c59:	83 e0 07             	and    eax,0x7
10003c5c:	6b d2 55             	imul   edx,edx,0x55
10003c5f:	6b c0 24             	imul   eax,eax,0x24
10003c62:	c1 e2 10             	shl    edx,0x10
10003c65:	c1 e0 08             	shl    eax,0x8
10003c68:	09 c2                	or     edx,eax
10003c6a:	6b c3 55             	imul   eax,ebx,0x55
10003c6d:	09 c2                	or     edx,eax
10003c6f:	ff 4c 24 10          	dec    DWORD PTR [esp+0x10]
10003c73:	89 14 8d 00 00 00 00 	mov    DWORD PTR [ecx*4+0x0],edx	10003c76: R_386_32	renderData
10003c7a:	75 90                	jne    10003c0c <NIDesktop::renderScanline(int, int, int)+0x336>
10003c7c:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003c80:	8b 00                	mov    eax,DWORD PTR [eax]
10003c82:	8b 00                	mov    eax,DWORD PTR [eax]
10003c84:	85 c0                	test   eax,eax
10003c86:	74 62                	je     10003cea <NIDesktop::renderScanline(int, int, int)+0x414>
10003c88:	8b 00                	mov    eax,DWORD PTR [eax]
10003c8a:	85 c0                	test   eax,eax
10003c8c:	74 5c                	je     10003cea <NIDesktop::renderScanline(int, int, int)+0x414>
10003c8e:	80 78 28 00          	cmp    BYTE PTR [eax+0x28],0x0
10003c92:	75 56                	jne    10003cea <NIDesktop::renderScanline(int, int, int)+0x414>
10003c94:	8b 5c 24 48          	mov    ebx,DWORD PTR [esp+0x48]
10003c98:	3b 5c 24 4c          	cmp    ebx,DWORD PTR [esp+0x4c]
10003c9c:	7d 4c                	jge    10003cea <NIDesktop::renderScanline(int, int, int)+0x414>
10003c9e:	8a 83 00 00 00 00    	mov    al,BYTE PTR [ebx+0x0]	10003ca0: R_386_32	shadow
10003ca4:	3c 80                	cmp    al,0x80
10003ca6:	74 3f                	je     10003ce7 <NIDesktop::renderScanline(int, int, int)+0x411>
10003ca8:	8b 14 9d 00 00 00 00 	mov    edx,DWORD PTR [ebx*4+0x0]	10003cab: R_386_32	renderData
10003caf:	0f b6 f0             	movzx  esi,al
10003cb2:	0f b6 ce             	movzx  ecx,dh
10003cb5:	89 d0                	mov    eax,edx
10003cb7:	0f af ce             	imul   ecx,esi
10003cba:	0f b6 d2             	movzx  edx,dl
10003cbd:	c1 e8 10             	shr    eax,0x10
10003cc0:	c1 e9 07             	shr    ecx,0x7
10003cc3:	0f b6 c0             	movzx  eax,al
10003cc6:	c1 e1 08             	shl    ecx,0x8
10003cc9:	0f af c6             	imul   eax,esi
10003ccc:	0f af f2             	imul   esi,edx
10003ccf:	c1 e8 07             	shr    eax,0x7
10003cd2:	c1 ee 07             	shr    esi,0x7
10003cd5:	89 c2                	mov    edx,eax
10003cd7:	c1 e2 10             	shl    edx,0x10
10003cda:	09 d1                	or     ecx,edx
10003cdc:	89 f2                	mov    edx,esi
10003cde:	09 ca                	or     edx,ecx
10003ce0:	89 14 9d 00 00 00 00 	mov    DWORD PTR [ebx*4+0x0],edx	10003ce3: R_386_32	renderData
10003ce7:	43                   	inc    ebx
10003ce8:	eb ae                	jmp    10003c98 <NIDesktop::renderScanline(int, int, int)+0x3c2>
10003cea:	8b 44 24 4c          	mov    eax,DWORD PTR [esp+0x4c]
10003cee:	39 44 24 48          	cmp    DWORD PTR [esp+0x48],eax
10003cf2:	7d 2f                	jge    10003d23 <NIDesktop::renderScanline(int, int, int)+0x44d>
10003cf4:	8b 44 24 40          	mov    eax,DWORD PTR [esp+0x40]
10003cf8:	8b 5c 24 48          	mov    ebx,DWORD PTR [esp+0x48]
10003cfc:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
10003cff:	8b 80 08 04 00 00    	mov    eax,DWORD PTR [eax+0x408]
10003d05:	8b 10                	mov    edx,DWORD PTR [eax]
10003d07:	ff 34 9d 00 00 00 00 	push   DWORD PTR [ebx*4+0x0]	10003d0a: R_386_32	renderData
10003d0e:	ff 74 24 48          	push   DWORD PTR [esp+0x48]
10003d12:	ff 74 24 50          	push   DWORD PTR [esp+0x50]
10003d16:	50                   	push   eax
10003d17:	ff 52 24             	call   DWORD PTR [edx+0x24]
10003d1a:	ff 44 24 58          	inc    DWORD PTR [esp+0x58]
10003d1e:	83 c4 10             	add    esp,0x10
10003d21:	eb c7                	jmp    10003cea <NIDesktop::renderScanline(int, int, int)+0x414>
10003d23:	83 c4 2c             	add    esp,0x2c
10003d26:	5b                   	pop    ebx
10003d27:	5e                   	pop    esi
10003d28:	5f                   	pop    edi
10003d29:	5d                   	pop    ebp
10003d2a:	c3                   	ret    
10003d2b:	90                   	nop

10003d2c <NIDesktop::rangeRefresh(int, int, int, int)>:
10003d2c:	53                   	push   ebx
10003d2d:	83 ec 08             	sub    esp,0x8
10003d30:	8b 5c 24 14          	mov    ebx,DWORD PTR [esp+0x14]
10003d34:	3b 5c 24 18          	cmp    ebx,DWORD PTR [esp+0x18]
10003d38:	7d 18                	jge    10003d52 <NIDesktop::rangeRefresh(int, int, int, int)+0x26>
10003d3a:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003d3e:	ff 74 24 20          	push   DWORD PTR [esp+0x20]
10003d42:	53                   	push   ebx
10003d43:	43                   	inc    ebx
10003d44:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003d48:	e8 fc ff ff ff       	call   10003d49 <NIDesktop::rangeRefresh(int, int, int, int)+0x1d>	10003d49: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003d4d:	83 c4 10             	add    esp,0x10
10003d50:	eb e2                	jmp    10003d34 <NIDesktop::rangeRefresh(int, int, int, int)+0x8>
10003d52:	83 c4 08             	add    esp,0x8
10003d55:	5b                   	pop    ebx
10003d56:	c3                   	ret    
10003d57:	90                   	nop

10003d58 <NIDesktop::refreshWindowBounds(NIWindow*)>:
10003d58:	55                   	push   ebp
10003d59:	ba 05 00 00 00       	mov    edx,0x5
10003d5e:	57                   	push   edi
10003d5f:	56                   	push   esi
10003d60:	53                   	push   ebx
10003d61:	83 ec 0c             	sub    esp,0xc
10003d64:	8b 5c 24 24          	mov    ebx,DWORD PTR [esp+0x24]
10003d68:	8b 74 24 20          	mov    esi,DWORD PTR [esp+0x20]
10003d6c:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10003d6f:	8b 7e 04             	mov    edi,DWORD PTR [esi+0x4]
10003d72:	83 f8 05             	cmp    eax,0x5
10003d75:	8b 8f 10 04 00 00    	mov    ecx,DWORD PTR [edi+0x410]
10003d7b:	0f 4d d0             	cmovge edx,eax
10003d7e:	8d 69 fb             	lea    ebp,[ecx-0x5]
10003d81:	83 ea 05             	sub    edx,0x5
10003d84:	03 43 24             	add    eax,DWORD PTR [ebx+0x24]
10003d87:	8d 71 ff             	lea    esi,[ecx-0x1]
10003d8a:	39 c5                	cmp    ebp,eax
10003d8c:	7e 03                	jle    10003d91 <NIDesktop::refreshWindowBounds(NIWindow*)+0x39>
10003d8e:	8d 70 05             	lea    esi,[eax+0x5]
10003d91:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
10003d94:	b9 05 00 00 00       	mov    ecx,0x5
10003d99:	83 f8 05             	cmp    eax,0x5
10003d9c:	8b bf 0c 04 00 00    	mov    edi,DWORD PTR [edi+0x40c]
10003da2:	0f 4d c8             	cmovge ecx,eax
10003da5:	8d 6f fb             	lea    ebp,[edi-0x5]
10003da8:	03 43 20             	add    eax,DWORD PTR [ebx+0x20]
10003dab:	83 e9 05             	sub    ecx,0x5
10003dae:	8d 58 05             	lea    ebx,[eax+0x5]
10003db1:	39 c5                	cmp    ebp,eax
10003db3:	7f 03                	jg     10003db8 <NIDesktop::refreshWindowBounds(NIWindow*)+0x60>
10003db5:	8d 5f ff             	lea    ebx,[edi-0x1]
10003db8:	83 ec 0c             	sub    esp,0xc
10003dbb:	53                   	push   ebx
10003dbc:	51                   	push   ecx
10003dbd:	56                   	push   esi
10003dbe:	52                   	push   edx
10003dbf:	ff 74 24 3c          	push   DWORD PTR [esp+0x3c]
10003dc3:	e8 fc ff ff ff       	call   10003dc4 <NIDesktop::refreshWindowBounds(NIWindow*)+0x6c>	10003dc4: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003dc8:	83 c4 2c             	add    esp,0x2c
10003dcb:	5b                   	pop    ebx
10003dcc:	5e                   	pop    esi
10003dcd:	5f                   	pop    edi
10003dce:	5d                   	pop    ebp
10003dcf:	c3                   	ret    

10003dd0 <NIDesktop::completeRefresh()>:
10003dd0:	56                   	push   esi
10003dd1:	53                   	push   ebx
10003dd2:	31 f6                	xor    esi,esi
10003dd4:	50                   	push   eax
10003dd5:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10003dd9:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10003ddc:	39 b0 10 04 00 00    	cmp    DWORD PTR [eax+0x410],esi
10003de2:	7e 15                	jle    10003df9 <NIDesktop::completeRefresh()+0x29>
10003de4:	ff b0 0c 04 00 00    	push   DWORD PTR [eax+0x40c]
10003dea:	6a 00                	push   0x0
10003dec:	56                   	push   esi
10003ded:	46                   	inc    esi
10003dee:	53                   	push   ebx
10003def:	e8 fc ff ff ff       	call   10003df0 <NIDesktop::completeRefresh()+0x20>	10003df0: R_386_PC32	NIDesktop::renderScanline(int, int, int)
10003df4:	83 c4 10             	add    esp,0x10
10003df7:	eb e0                	jmp    10003dd9 <NIDesktop::completeRefresh()+0x9>
10003df9:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10003dff:	83 ec 0c             	sub    esp,0xc
10003e02:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003e04:	6a 00                	push   0x0
10003e06:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10003e09:	05 00 00 00 00       	add    eax,0x0	10003e0a: R_386_32	___mouse_data
10003e0e:	50                   	push   eax
10003e0f:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003e12:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003e15:	52                   	push   edx
10003e16:	ff 51 30             	call   DWORD PTR [ecx+0x30]
10003e19:	83 c4 24             	add    esp,0x24
10003e1c:	5b                   	pop    ebx
10003e1d:	5e                   	pop    esi
10003e1e:	c3                   	ret    
10003e1f:	90                   	nop

10003e20 <NIDesktop::addWindow(NIWindow*)>:
10003e20:	56                   	push   esi
10003e21:	53                   	push   ebx
10003e22:	83 ec 0c             	sub    esp,0xc
10003e25:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003e29:	8b 74 24 1c          	mov    esi,DWORD PTR [esp+0x1c]
10003e2d:	56                   	push   esi
10003e2e:	ff 33                	push   DWORD PTR [ebx]
10003e30:	e8 fc ff ff ff       	call   10003e31 <NIDesktop::addWindow(NIWindow*)+0x11>	10003e31: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003e35:	89 74 24 24          	mov    DWORD PTR [esp+0x24],esi
10003e39:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
10003e3d:	83 c4 14             	add    esp,0x14
10003e40:	5b                   	pop    ebx
10003e41:	5e                   	pop    esi
10003e42:	e9 11 ff ff ff       	jmp    10003d58 <NIDesktop::refreshWindowBounds(NIWindow*)>
10003e47:	90                   	nop

10003e48 <NIDesktop::raiseWindow(NIWindow*)>:
10003e48:	53                   	push   ebx
10003e49:	83 ec 10             	sub    esp,0x10
10003e4c:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003e50:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003e54:	50                   	push   eax
10003e55:	ff 33                	push   DWORD PTR [ebx]
10003e57:	e8 fc ff ff ff       	call   10003e58 <NIDesktop::raiseWindow(NIWindow*)+0x10>	10003e58: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003e5c:	58                   	pop    eax
10003e5d:	5a                   	pop    edx
10003e5e:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003e62:	ff 33                	push   DWORD PTR [ebx]
10003e64:	e8 fc ff ff ff       	call   10003e65 <NIDesktop::raiseWindow(NIWindow*)+0x1d>	10003e65: R_386_PC32	List<NIWindow*>::insertAtHead(NIWindow*)
10003e69:	59                   	pop    ecx
10003e6a:	58                   	pop    eax
10003e6b:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003e6f:	53                   	push   ebx
10003e70:	e8 fc ff ff ff       	call   10003e71 <NIDesktop::raiseWindow(NIWindow*)+0x29>	10003e71: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003e75:	83 c4 18             	add    esp,0x18
10003e78:	5b                   	pop    ebx
10003e79:	c3                   	ret    

10003e7a <NIDesktop::deleteWindow(NIWindow*)>:
10003e7a:	53                   	push   ebx
10003e7b:	83 ec 10             	sub    esp,0x10
10003e7e:	8b 5c 24 18          	mov    ebx,DWORD PTR [esp+0x18]
10003e82:	8d 44 24 1c          	lea    eax,[esp+0x1c]
10003e86:	50                   	push   eax
10003e87:	ff 33                	push   DWORD PTR [ebx]
10003e89:	e8 fc ff ff ff       	call   10003e8a <NIDesktop::deleteWindow(NIWindow*)+0x10>	10003e8a: R_386_PC32	List<NIWindow*>::deleteElement(NIWindow*&)
10003e8e:	58                   	pop    eax
10003e8f:	5a                   	pop    edx
10003e90:	ff 74 24 1c          	push   DWORD PTR [esp+0x1c]
10003e94:	53                   	push   ebx
10003e95:	e8 fc ff ff ff       	call   10003e96 <NIDesktop::deleteWindow(NIWindow*)+0x1c>	10003e96: R_386_PC32	NIDesktop::refreshWindowBounds(NIWindow*)
10003e9a:	83 c4 18             	add    esp,0x18
10003e9d:	5b                   	pop    ebx
10003e9e:	c3                   	ret    
10003e9f:	90                   	nop

10003ea0 <NIDesktop::handleMouse(int, int, int, int)>:
10003ea0:	55                   	push   ebp
10003ea1:	57                   	push   edi
10003ea2:	56                   	push   esi
10003ea3:	53                   	push   ebx
10003ea4:	83 ec 28             	sub    esp,0x28
10003ea7:	8b 5c 24 3c          	mov    ebx,DWORD PTR [esp+0x3c]
10003eab:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10003eae:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003eb1:	8d 4a 20             	lea    ecx,[edx+0x20]
10003eb4:	51                   	push   ecx
10003eb5:	52                   	push   edx
10003eb6:	8d 50 20             	lea    edx,[eax+0x20]
10003eb9:	52                   	push   edx
10003eba:	50                   	push   eax
10003ebb:	53                   	push   ebx
10003ebc:	e8 fc ff ff ff       	call   10003ebd <NIDesktop::handleMouse(int, int, int, int)+0x1d>	10003ebd: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003ec1:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10003ec4:	89 44 24 24          	mov    DWORD PTR [esp+0x24],eax
10003ec8:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003ecb:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
10003ecf:	89 44 24 28          	mov    DWORD PTR [esp+0x28],eax
10003ed3:	03 54 24 54          	add    edx,DWORD PTR [esp+0x54]
10003ed7:	03 44 24 58          	add    eax,DWORD PTR [esp+0x58]
10003edb:	89 53 08             	mov    DWORD PTR [ebx+0x8],edx
10003ede:	83 c4 20             	add    esp,0x20
10003ee1:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003ee4:	85 d2                	test   edx,edx
10003ee6:	79 07                	jns    10003eef <NIDesktop::handleMouse(int, int, int, int)+0x4f>
10003ee8:	c7 43 08 00 00 00 00 	mov    DWORD PTR [ebx+0x8],0x0
10003eef:	85 c0                	test   eax,eax
10003ef1:	79 07                	jns    10003efa <NIDesktop::handleMouse(int, int, int, int)+0x5a>
10003ef3:	c7 43 0c 00 00 00 00 	mov    DWORD PTR [ebx+0xc],0x0
10003efa:	8b 53 04             	mov    edx,DWORD PTR [ebx+0x4]
10003efd:	8b 82 0c 04 00 00    	mov    eax,DWORD PTR [edx+0x40c]
10003f03:	3b 43 08             	cmp    eax,DWORD PTR [ebx+0x8]
10003f06:	7f 04                	jg     10003f0c <NIDesktop::handleMouse(int, int, int, int)+0x6c>
10003f08:	48                   	dec    eax
10003f09:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10003f0c:	8b 82 10 04 00 00    	mov    eax,DWORD PTR [edx+0x410]
10003f12:	3b 43 0c             	cmp    eax,DWORD PTR [ebx+0xc]
10003f15:	7f 04                	jg     10003f1b <NIDesktop::handleMouse(int, int, int, int)+0x7b>
10003f17:	48                   	dec    eax
10003f18:	89 43 0c             	mov    DWORD PTR [ebx+0xc],eax
10003f1b:	50                   	push   eax
10003f1c:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
10003f1f:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10003f22:	53                   	push   ebx
10003f23:	e8 fc ff ff ff       	call   10003f24 <NIDesktop::handleMouse(int, int, int, int)+0x84>	10003f24: R_386_PC32	NIDesktop::getTopmostWindowAtPixel(int, int)
10003f28:	83 c4 10             	add    esp,0x10
10003f2b:	89 c6                	mov    esi,eax
10003f2d:	8b 44 24 3c          	mov    eax,DWORD PTR [esp+0x3c]
10003f31:	83 e0 01             	and    eax,0x1
10003f34:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	10003f36: R_386_32	movingWin
10003f3b:	0f 84 89 01 00 00    	je     100040ca <NIDesktop::handleMouse(int, int, int, int)+0x22a>
10003f41:	c6 44 24 0f 00       	mov    BYTE PTR [esp+0xf],0x0
10003f46:	85 c0                	test   eax,eax
10003f48:	75 0c                	jne    10003f56 <NIDesktop::handleMouse(int, int, int, int)+0xb6>
10003f4a:	a0 f8 2a 06 10       	mov    al,ds:0x10062af8	10003f4b: R_386_32	.bss
10003f4f:	83 e0 01             	and    eax,0x1
10003f52:	88 44 24 0f          	mov    BYTE PTR [esp+0xf],al
10003f56:	bf 01 00 00 00       	mov    edi,0x1
10003f5b:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10003f5d: R_386_32	movingWin
10003f61:	8b 42 24             	mov    eax,DWORD PTR [edx+0x24]
10003f64:	48                   	dec    eax
10003f65:	39 f8                	cmp    eax,edi
10003f67:	0f 8e 8b 00 00 00    	jle    10003ff8 <NIDesktop::handleMouse(int, int, int, int)+0x158>
10003f6d:	bd 01 00 00 00       	mov    ebp,0x1
10003f72:	a1 00 00 00 00       	mov    eax,ds:0x0	10003f73: R_386_32	movingWin
10003f77:	8b 40 20             	mov    eax,DWORD PTR [eax+0x20]
10003f7a:	48                   	dec    eax
10003f7b:	39 e8                	cmp    eax,ebp
10003f7d:	7e 73                	jle    10003ff2 <NIDesktop::handleMouse(int, int, int, int)+0x152>
10003f7f:	8d 04 2f             	lea    eax,[edi+ebp*1]
10003f82:	89 fa                	mov    edx,edi
10003f84:	83 e0 1f             	and    eax,0x1f
10003f87:	83 e2 03             	and    edx,0x3
10003f8a:	09 d0                	or     eax,edx
10003f8c:	75 61                	jne    10003fef <NIDesktop::handleMouse(int, int, int, int)+0x14f>
10003f8e:	8b 54 24 04          	mov    edx,DWORD PTR [esp+0x4]
10003f92:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10003f96:	2b 15 f4 2a 06 10    	sub    edx,DWORD PTR ds:0x10062af4	10003f98: R_386_32	.bss
10003f9c:	83 ec 0c             	sub    esp,0xc
10003f9f:	01 ea                	add    edx,ebp
10003fa1:	2b 05 f0 2a 06 10    	sub    eax,DWORD PTR ds:0x10062af0	10003fa3: R_386_32	.bss
10003fa7:	8d 4a 01             	lea    ecx,[edx+0x1]
10003faa:	01 f8                	add    eax,edi
10003fac:	51                   	push   ecx
10003fad:	52                   	push   edx
10003fae:	8d 50 01             	lea    edx,[eax+0x1]
10003fb1:	52                   	push   edx
10003fb2:	50                   	push   eax
10003fb3:	53                   	push   ebx
10003fb4:	e8 fc ff ff ff       	call   10003fb5 <NIDesktop::handleMouse(int, int, int, int)+0x115>	10003fb5: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10003fb9:	83 c4 20             	add    esp,0x20
10003fbc:	80 7c 24 0f 00       	cmp    BYTE PTR [esp+0xf],0x0
10003fc1:	75 2c                	jne    10003fef <NIDesktop::handleMouse(int, int, int, int)+0x14f>
10003fc3:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10003fc6:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10003fcc:	8b 0a                	mov    ecx,DWORD PTR [edx]
10003fce:	6a 00                	push   0x0
10003fd0:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
10003fd3:	01 f8                	add    eax,edi
10003fd5:	2b 05 f0 2a 06 10    	sub    eax,DWORD PTR ds:0x10062af0	10003fd7: R_386_32	.bss
10003fdb:	50                   	push   eax
10003fdc:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10003fdf:	01 e8                	add    eax,ebp
10003fe1:	2b 05 f4 2a 06 10    	sub    eax,DWORD PTR ds:0x10062af4	10003fe3: R_386_32	.bss
10003fe7:	50                   	push   eax
10003fe8:	52                   	push   edx
10003fe9:	ff 51 24             	call   DWORD PTR [ecx+0x24]
10003fec:	83 c4 10             	add    esp,0x10
10003fef:	45                   	inc    ebp
10003ff0:	eb 80                	jmp    10003f72 <NIDesktop::handleMouse(int, int, int, int)+0xd2>
10003ff2:	47                   	inc    edi
10003ff3:	e9 63 ff ff ff       	jmp    10003f5b <NIDesktop::handleMouse(int, int, int, int)+0xbb>
10003ff8:	8b 4c 24 04          	mov    ecx,DWORD PTR [esp+0x4]
10003ffc:	8b 44 24 08          	mov    eax,DWORD PTR [esp+0x8]
10004000:	8b 7a 20             	mov    edi,DWORD PTR [edx+0x20]
10004003:	83 ec 0c             	sub    esp,0xc
10004006:	2b 0d f4 2a 06 10    	sub    ecx,DWORD PTR ds:0x10062af4	10004008: R_386_32	.bss
1000400c:	2b 05 f0 2a 06 10    	sub    eax,DWORD PTR ds:0x10062af0	1000400e: R_386_32	.bss
10004012:	01 cf                	add    edi,ecx
10004014:	8d 50 01             	lea    edx,[eax+0x1]
10004017:	57                   	push   edi
10004018:	51                   	push   ecx
10004019:	52                   	push   edx
1000401a:	50                   	push   eax
1000401b:	53                   	push   ebx
1000401c:	e8 fc ff ff ff       	call   1000401d <NIDesktop::handleMouse(int, int, int, int)+0x17d>	1000401d: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10004021:	8b 44 24 24          	mov    eax,DWORD PTR [esp+0x24]
10004025:	8b 4c 24 28          	mov    ecx,DWORD PTR [esp+0x28]
10004029:	2b 05 f4 2a 06 10    	sub    eax,DWORD PTR ds:0x10062af4	1000402b: R_386_32	.bss
1000402f:	83 c4 14             	add    esp,0x14
10004032:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10004034: R_386_32	movingWin
10004038:	2b 0d f0 2a 06 10    	sub    ecx,DWORD PTR ds:0x10062af0	1000403a: R_386_32	.bss
1000403e:	8b 7a 20             	mov    edi,DWORD PTR [edx+0x20]
10004041:	03 4a 24             	add    ecx,DWORD PTR [edx+0x24]
10004044:	01 c7                	add    edi,eax
10004046:	57                   	push   edi
10004047:	50                   	push   eax
10004048:	51                   	push   ecx
10004049:	49                   	dec    ecx
1000404a:	51                   	push   ecx
1000404b:	53                   	push   ebx
1000404c:	e8 fc ff ff ff       	call   1000404d <NIDesktop::handleMouse(int, int, int, int)+0x1ad>	1000404d: R_386_PC32	NIDesktop::rangeRefresh(int, int, int, int)
10004051:	83 c4 20             	add    esp,0x20
10004054:	80 7c 24 0f 00       	cmp    BYTE PTR [esp+0xf],0x0
10004059:	0f 85 d6 01 00 00    	jne    10004235 <NIDesktop::handleMouse(int, int, int, int)+0x395>
1000405f:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004062:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
10004068:	50                   	push   eax
10004069:	50                   	push   eax
1000406a:	a1 00 00 00 00       	mov    eax,ds:0x0	1000406b: R_386_32	movingWin
1000406f:	8b 0a                	mov    ecx,DWORD PTR [edx]
10004071:	6a 00                	push   0x0
10004073:	6a 01                	push   0x1
10004075:	ff 70 20             	push   DWORD PTR [eax+0x20]
10004078:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
1000407b:	2b 05 f0 2a 06 10    	sub    eax,DWORD PTR ds:0x10062af0	1000407d: R_386_32	.bss
10004081:	50                   	push   eax
10004082:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
10004085:	2b 05 f4 2a 06 10    	sub    eax,DWORD PTR ds:0x10062af4	10004087: R_386_32	.bss
1000408b:	50                   	push   eax
1000408c:	52                   	push   edx
1000408d:	ff 51 28             	call   DWORD PTR [ecx+0x28]
10004090:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004093:	83 c4 18             	add    esp,0x18
10004096:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
1000409c:	8b 3d 00 00 00 00    	mov    edi,DWORD PTR ds:0x0	1000409e: R_386_32	movingWin
100040a2:	8b 0a                	mov    ecx,DWORD PTR [edx]
100040a4:	6a 00                	push   0x0
100040a6:	6a 01                	push   0x1
100040a8:	ff 77 20             	push   DWORD PTR [edi+0x20]
100040ab:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100040ae:	2b 05 f0 2a 06 10    	sub    eax,DWORD PTR ds:0x10062af0	100040b0: R_386_32	.bss
100040b4:	03 47 24             	add    eax,DWORD PTR [edi+0x24]
100040b7:	48                   	dec    eax
100040b8:	50                   	push   eax
100040b9:	8b 43 08             	mov    eax,DWORD PTR [ebx+0x8]
100040bc:	2b 05 f4 2a 06 10    	sub    eax,DWORD PTR ds:0x10062af4	100040be: R_386_32	.bss
100040c2:	50                   	push   eax
100040c3:	52                   	push   edx
100040c4:	ff 51 28             	call   DWORD PTR [ecx+0x28]
100040c7:	83 c4 20             	add    esp,0x20
100040ca:	85 f6                	test   esi,esi
100040cc:	0f 84 2f 01 00 00    	je     10004201 <NIDesktop::handleMouse(int, int, int, int)+0x361>
100040d2:	f6 44 24 3c 01       	test   BYTE PTR [esp+0x3c],0x1
100040d7:	0f 84 24 01 00 00    	je     10004201 <NIDesktop::handleMouse(int, int, int, int)+0x361>
100040dd:	8b 15 f8 2a 06 10    	mov    edx,DWORD PTR ds:0x10062af8	100040df: R_386_32	.bss
100040e3:	83 e2 01             	and    edx,0x1
100040e6:	0f 85 de 00 00 00    	jne    100041ca <NIDesktop::handleMouse(int, int, int, int)+0x32a>
100040ec:	c5 fa 7e 05 00 00 00 00 	vmovq  xmm0,QWORD PTR ds:0x0	100040f0: R_386_32	milliTenthsSinceBoot
100040f4:	c5 fa 7e 0d e8 2a 06 10 	vmovq  xmm1,QWORD PTR ds:0x10062ae8	100040f8: R_386_32	.bss
100040fc:	bf b7 0b 00 00       	mov    edi,0xbb7
10004101:	c5 f9 fb c1          	vpsubq xmm0,xmm0,xmm1
10004105:	c5 f9 7e c1          	vmovd  ecx,xmm0
10004109:	c4 e3 79 16 c0 01    	vpextrd eax,xmm0,0x1
1000410f:	39 cf                	cmp    edi,ecx
10004111:	19 c2                	sbb    edx,eax
10004113:	0f 82 8b 00 00 00    	jb     100041a4 <NIDesktop::handleMouse(int, int, int, int)+0x304>
10004119:	8b 56 1c             	mov    edx,DWORD PTR [esi+0x1c]
1000411c:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
1000411f:	29 d0                	sub    eax,edx
10004121:	83 f8 18             	cmp    eax,0x18
10004124:	7f 7e                	jg     100041a4 <NIDesktop::handleMouse(int, int, int, int)+0x304>
10004126:	80 7e 28 00          	cmp    BYTE PTR [esi+0x28],0x0
1000412a:	74 26                	je     10004152 <NIDesktop::handleMouse(int, int, int, int)+0x2b2>
1000412c:	8b 46 2c             	mov    eax,DWORD PTR [esi+0x2c]
1000412f:	89 46 18             	mov    DWORD PTR [esi+0x18],eax
10004132:	8b 46 30             	mov    eax,DWORD PTR [esi+0x30]
10004135:	89 46 1c             	mov    DWORD PTR [esi+0x1c],eax
10004138:	8b 46 34             	mov    eax,DWORD PTR [esi+0x34]
1000413b:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
1000413e:	8b 46 38             	mov    eax,DWORD PTR [esi+0x38]
10004141:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
10004144:	55                   	push   ebp
10004145:	55                   	push   ebp
10004146:	56                   	push   esi
10004147:	53                   	push   ebx
10004148:	e8 fc ff ff ff       	call   10004149 <NIDesktop::handleMouse(int, int, int, int)+0x2a9>	10004149: R_386_PC32	NIDesktop::invalidateAllDueToFullscreen(NIWindow*)
1000414d:	83 c4 10             	add    esp,0x10
10004150:	eb 3b                	jmp    1000418d <NIDesktop::handleMouse(int, int, int, int)+0x2ed>
10004152:	89 56 30             	mov    DWORD PTR [esi+0x30],edx
10004155:	c7 46 1c 00 00 00 00 	mov    DWORD PTR [esi+0x1c],0x0
1000415c:	8b 46 18             	mov    eax,DWORD PTR [esi+0x18]
1000415f:	c7 46 18 00 00 00 00 	mov    DWORD PTR [esi+0x18],0x0
10004166:	89 46 2c             	mov    DWORD PTR [esi+0x2c],eax
10004169:	8b 46 20             	mov    eax,DWORD PTR [esi+0x20]
1000416c:	89 46 34             	mov    DWORD PTR [esi+0x34],eax
1000416f:	8b 46 24             	mov    eax,DWORD PTR [esi+0x24]
10004172:	89 46 38             	mov    DWORD PTR [esi+0x38],eax
10004175:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004178:	8b 80 0c 04 00 00    	mov    eax,DWORD PTR [eax+0x40c]
1000417e:	89 46 20             	mov    DWORD PTR [esi+0x20],eax
10004181:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004184:	8b 80 10 04 00 00    	mov    eax,DWORD PTR [eax+0x410]
1000418a:	89 46 24             	mov    DWORD PTR [esi+0x24],eax
1000418d:	83 ec 0c             	sub    esp,0xc
10004190:	80 76 28 01          	xor    BYTE PTR [esi+0x28],0x1
10004194:	56                   	push   esi
10004195:	e8 fc ff ff ff       	call   10004196 <NIDesktop::handleMouse(int, int, int, int)+0x2f6>	10004196: R_386_PC32	NIWindow::rerender()
1000419a:	89 1c 24             	mov    DWORD PTR [esp],ebx
1000419d:	e8 fc ff ff ff       	call   1000419e <NIDesktop::handleMouse(int, int, int, int)+0x2fe>	1000419e: R_386_PC32	NIDesktop::completeRefresh()
100041a2:	eb 11                	jmp    100041b5 <NIDesktop::handleMouse(int, int, int, int)+0x315>
100041a4:	8b 03                	mov    eax,DWORD PTR [ebx]
100041a6:	8b 00                	mov    eax,DWORD PTR [eax]
100041a8:	39 30                	cmp    DWORD PTR [eax],esi
100041aa:	74 0c                	je     100041b8 <NIDesktop::handleMouse(int, int, int, int)+0x318>
100041ac:	57                   	push   edi
100041ad:	57                   	push   edi
100041ae:	56                   	push   esi
100041af:	53                   	push   ebx
100041b0:	e8 fc ff ff ff       	call   100041b1 <NIDesktop::handleMouse(int, int, int, int)+0x311>	100041b1: R_386_PC32	NIDesktop::raiseWindow(NIWindow*)
100041b5:	83 c4 10             	add    esp,0x10
100041b8:	c5 fa 7e 15 00 00 00 00 	vmovq  xmm2,QWORD PTR ds:0x0	100041bc: R_386_32	milliTenthsSinceBoot
100041c0:	c5 f9 d6 15 e8 2a 06 10 	vmovq  QWORD PTR ds:0x10062ae8,xmm2	100041c4: R_386_32	.bss
100041c8:	eb 37                	jmp    10004201 <NIDesktop::handleMouse(int, int, int, int)+0x361>
100041ca:	83 3d 00 00 00 00 00 	cmp    DWORD PTR ds:0x0,0x0	100041cc: R_386_32	movingWin
100041d1:	75 2e                	jne    10004201 <NIDesktop::handleMouse(int, int, int, int)+0x361>
100041d3:	8b 43 0c             	mov    eax,DWORD PTR [ebx+0xc]
100041d6:	2b 46 1c             	sub    eax,DWORD PTR [esi+0x1c]
100041d9:	83 f8 18             	cmp    eax,0x18
100041dc:	7f 23                	jg     10004201 <NIDesktop::handleMouse(int, int, int, int)+0x361>
100041de:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
100041e1:	2b 56 18             	sub    edx,DWORD PTR [esi+0x18]
100041e4:	89 35 00 00 00 00    	mov    DWORD PTR ds:0x0,esi	100041e6: R_386_32	movingWin
100041ea:	51                   	push   ecx
100041eb:	89 15 f4 2a 06 10    	mov    DWORD PTR ds:0x10062af4,edx	100041ed: R_386_32	.bss
100041f1:	51                   	push   ecx
100041f2:	a3 f0 2a 06 10       	mov    ds:0x10062af0,eax	100041f3: R_386_32	.bss
100041f7:	56                   	push   esi
100041f8:	53                   	push   ebx
100041f9:	e8 fc ff ff ff       	call   100041fa <NIDesktop::handleMouse(int, int, int, int)+0x35a>	100041fa: R_386_PC32	NIDesktop::deleteWindow(NIWindow*)
100041fe:	83 c4 10             	add    esp,0x10
10004201:	8b 43 04             	mov    eax,DWORD PTR [ebx+0x4]
10004204:	83 ec 0c             	sub    esp,0xc
10004207:	8b 90 08 04 00 00    	mov    edx,DWORD PTR [eax+0x408]
1000420d:	8b 0a                	mov    ecx,DWORD PTR [edx]
1000420f:	6a 00                	push   0x0
10004211:	8b 43 10             	mov    eax,DWORD PTR [ebx+0x10]
10004214:	05 00 00 00 00       	add    eax,0x0	10004215: R_386_32	___mouse_data
10004219:	50                   	push   eax
1000421a:	ff 73 0c             	push   DWORD PTR [ebx+0xc]
1000421d:	ff 73 08             	push   DWORD PTR [ebx+0x8]
10004220:	52                   	push   edx
10004221:	ff 51 30             	call   DWORD PTR [ecx+0x30]
10004224:	8b 44 24 5c          	mov    eax,DWORD PTR [esp+0x5c]
10004228:	a3 f8 2a 06 10       	mov    ds:0x10062af8,eax	10004229: R_386_32	.bss
1000422d:	83 c4 3c             	add    esp,0x3c
10004230:	5b                   	pop    ebx
10004231:	5e                   	pop    esi
10004232:	5f                   	pop    edi
10004233:	5d                   	pop    ebp
10004234:	c3                   	ret    
10004235:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
10004238:	a1 00 00 00 00       	mov    eax,ds:0x0	10004239: R_386_32	movingWin
1000423d:	2b 15 f4 2a 06 10    	sub    edx,DWORD PTR ds:0x10062af4	1000423f: R_386_32	.bss
10004243:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10004245: R_386_32	movingWin
1000424d:	89 50 18             	mov    DWORD PTR [eax+0x18],edx
10004250:	8b 53 0c             	mov    edx,DWORD PTR [ebx+0xc]
10004253:	2b 15 f0 2a 06 10    	sub    edx,DWORD PTR ds:0x10062af0	10004255: R_386_32	.bss
10004259:	89 50 1c             	mov    DWORD PTR [eax+0x1c],edx
1000425c:	52                   	push   edx
1000425d:	52                   	push   edx
1000425e:	50                   	push   eax
1000425f:	53                   	push   ebx
10004260:	e8 fc ff ff ff       	call   10004261 <NIDesktop::handleMouse(int, int, int, int)+0x3c1>	10004261: R_386_PC32	NIDesktop::addWindow(NIWindow*)
10004265:	83 c4 10             	add    esp,0x10
10004268:	e9 5d fe ff ff       	jmp    100040ca <NIDesktop::handleMouse(int, int, int, int)+0x22a>

1000426d <clipdrawHandleMouse(int, int, int, int)>:
1000426d:	83 ec 18             	sub    esp,0x18
10004270:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004274:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004278:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
1000427c:	ff 74 24 28          	push   DWORD PTR [esp+0x28]
10004280:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0	10004282: R_386_32	mouseDesktop
10004286:	e8 fc ff ff ff       	call   10004287 <clipdrawHandleMouse(int, int, int, int)+0x1a>	10004287: R_386_PC32	NIDesktop::handleMouse(int, int, int, int)
1000428b:	83 c4 2c             	add    esp,0x2c
1000428e:	c3                   	ret    
1000428f:	90                   	nop

10004290 <NIWindow::invalidate()>:
10004290:	53                   	push   ebx
10004291:	83 ec 08             	sub    esp,0x8
10004294:	8b 5c 24 10          	mov    ebx,DWORD PTR [esp+0x10]
10004298:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
1000429c:	74 1d                	je     100042bb <NIWindow::invalidate()+0x2b>
1000429e:	83 7b 14 00          	cmp    DWORD PTR [ebx+0x14],0x0
100042a2:	74 17                	je     100042bb <NIWindow::invalidate()+0x2b>
100042a4:	83 ec 0c             	sub    esp,0xc
100042a7:	ff 73 08             	push   DWORD PTR [ebx+0x8]
100042aa:	e8 fc ff ff ff       	call   100042ab <NIWindow::invalidate()+0x1b>	100042ab: R_386_PC32	free
100042af:	59                   	pop    ecx
100042b0:	ff 73 14             	push   DWORD PTR [ebx+0x14]
100042b3:	e8 fc ff ff ff       	call   100042b4 <NIWindow::invalidate()+0x24>	100042b4: R_386_PC32	free
100042b8:	83 c4 10             	add    esp,0x10
100042bb:	c7 43 14 00 00 00 00 	mov    DWORD PTR [ebx+0x14],0x0
100042c2:	c7 43 10 00 00 00 00 	mov    DWORD PTR [ebx+0x10],0x0
100042c9:	c6 43 0c 00          	mov    BYTE PTR [ebx+0xc],0x0
100042cd:	83 c4 08             	add    esp,0x8
100042d0:	5b                   	pop    ebx
100042d1:	c3                   	ret    

100042d2 <NIWindow::putpixel(int, int, unsigned int)>:
100042d2:	56                   	push   esi
100042d3:	53                   	push   ebx
100042d4:	8b 5c 24 0c          	mov    ebx,DWORD PTR [esp+0xc]
100042d8:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100042dc:	8b 73 04             	mov    esi,DWORD PTR [ebx+0x4]
100042df:	0f af 43 20          	imul   eax,DWORD PTR [ebx+0x20]
100042e3:	8b 4c 24 18          	mov    ecx,DWORD PTR [esp+0x18]
100042e7:	03 44 24 10          	add    eax,DWORD PTR [esp+0x10]
100042eb:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
100042ee:	83 fe 04             	cmp    esi,0x4
100042f1:	75 05                	jne    100042f8 <NIWindow::putpixel(int, int, unsigned int)+0x26>
100042f3:	89 0c 82             	mov    DWORD PTR [edx+eax*4],ecx
100042f6:	eb 0e                	jmp    10004306 <NIWindow::putpixel(int, int, unsigned int)+0x34>
100042f8:	83 fe 02             	cmp    esi,0x2
100042fb:	75 06                	jne    10004303 <NIWindow::putpixel(int, int, unsigned int)+0x31>
100042fd:	66 89 0c 42          	mov    WORD PTR [edx+eax*2],cx
10004301:	eb 03                	jmp    10004306 <NIWindow::putpixel(int, int, unsigned int)+0x34>
10004303:	88 0c 02             	mov    BYTE PTR [edx+eax*1],cl
10004306:	5b                   	pop    ebx
10004307:	5e                   	pop    esi
10004308:	c3                   	ret    
10004309:	90                   	nop

1000430a <NIWindow::rerender()>:
1000430a:	55                   	push   ebp
1000430b:	57                   	push   edi
1000430c:	56                   	push   esi
1000430d:	53                   	push   ebx
1000430e:	83 ec 0c             	sub    esp,0xc
10004311:	8b 5c 24 20          	mov    ebx,DWORD PTR [esp+0x20]
10004315:	80 7b 0c 00          	cmp    BYTE PTR [ebx+0xc],0x0
10004319:	74 0c                	je     10004327 <NIWindow::rerender()+0x1d>
1000431b:	83 ec 0c             	sub    esp,0xc
1000431e:	53                   	push   ebx
1000431f:	e8 fc ff ff ff       	call   10004320 <NIWindow::rerender()+0x16>	10004320: R_386_PC32	NIWindow::invalidate()
10004324:	83 c4 10             	add    esp,0x10
10004327:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
1000432a:	83 ec 0c             	sub    esp,0xc
1000432d:	89 73 10             	mov    DWORD PTR [ebx+0x10],esi
10004330:	8d 04 b5 00 00 00 00 	lea    eax,[esi*4+0x0]
10004337:	50                   	push   eax
10004338:	e8 fc ff ff ff       	call   10004339 <NIWindow::rerender()+0x2f>	10004339: R_386_PC32	malloc
1000433d:	0f af 73 20          	imul   esi,DWORD PTR [ebx+0x20]
10004341:	89 43 14             	mov    DWORD PTR [ebx+0x14],eax
10004344:	0f af 73 04          	imul   esi,DWORD PTR [ebx+0x4]
10004348:	89 34 24             	mov    DWORD PTR [esp],esi
1000434b:	e8 fc ff ff ff       	call   1000434c <NIWindow::rerender()+0x42>	1000434c: R_386_PC32	malloc
10004350:	83 c4 10             	add    esp,0x10
10004353:	89 43 08             	mov    DWORD PTR [ebx+0x8],eax
10004356:	31 c0                	xor    eax,eax
10004358:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
1000435b:	7e 6a                	jle    100043c7 <NIWindow::rerender()+0xbd>
1000435d:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10004364:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
10004367:	01 d6                	add    esi,edx
10004369:	83 f8 06             	cmp    eax,0x6
1000436c:	7f 1b                	jg     10004389 <NIWindow::rerender()+0x7f>
1000436e:	8b 0c 85 00 00 00 00 	mov    ecx,DWORD PTR [eax*4+0x0]	10004371: R_386_32	curveLookup7
10004375:	66 89 0e             	mov    WORD PTR [esi],cx
10004378:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
1000437b:	8b 34 85 00 00 00 00 	mov    esi,DWORD PTR [eax*4+0x0]	1000437e: R_386_32	curveLookup7
10004382:	66 89 74 11 02       	mov    WORD PTR [ecx+edx*1+0x2],si
10004387:	eb 3b                	jmp    100043c4 <NIWindow::rerender()+0xba>
10004389:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
1000438c:	8d 79 fa             	lea    edi,[ecx-0x6]
1000438f:	39 c7                	cmp    edi,eax
10004391:	7f 22                	jg     100043b5 <NIWindow::rerender()+0xab>
10004393:	29 c1                	sub    ecx,eax
10004395:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	10004398: R_386_32	curveLookup7
1000439c:	66 89 0e             	mov    WORD PTR [esi],cx
1000439f:	8b 4b 24             	mov    ecx,DWORD PTR [ebx+0x24]
100043a2:	8b 73 14             	mov    esi,DWORD PTR [ebx+0x14]
100043a5:	29 c1                	sub    ecx,eax
100043a7:	8b 0c 8d 00 00 00 00 	mov    ecx,DWORD PTR [ecx*4+0x0]	100043aa: R_386_32	curveLookup7
100043ae:	66 89 4c 16 02       	mov    WORD PTR [esi+edx*1+0x2],cx
100043b3:	eb 0f                	jmp    100043c4 <NIWindow::rerender()+0xba>
100043b5:	66 c7 06 00 00       	mov    WORD PTR [esi],0x0
100043ba:	8b 4b 14             	mov    ecx,DWORD PTR [ebx+0x14]
100043bd:	66 c7 44 11 02 00 00 	mov    WORD PTR [ecx+edx*1+0x2],0x0
100043c4:	40                   	inc    eax
100043c5:	eb 91                	jmp    10004358 <NIWindow::rerender()+0x4e>
100043c7:	c6 43 0c 01          	mov    BYTE PTR [ebx+0xc],0x1
100043cb:	31 f6                	xor    esi,esi
100043cd:	39 73 24             	cmp    DWORD PTR [ebx+0x24],esi
100043d0:	7e 29                	jle    100043fb <NIWindow::rerender()+0xf1>
100043d2:	83 fe 19             	cmp    esi,0x19
100043d5:	bd d4 d4 d4 00       	mov    ebp,0xd4d4d4
100043da:	b8 ff ff ff 00       	mov    eax,0xffffff
100043df:	0f 4e e8             	cmovle ebp,eax
100043e2:	31 ff                	xor    edi,edi
100043e4:	39 7b 20             	cmp    DWORD PTR [ebx+0x20],edi
100043e7:	7e 0f                	jle    100043f8 <NIWindow::rerender()+0xee>
100043e9:	55                   	push   ebp
100043ea:	56                   	push   esi
100043eb:	57                   	push   edi
100043ec:	47                   	inc    edi
100043ed:	53                   	push   ebx
100043ee:	e8 fc ff ff ff       	call   100043ef <NIWindow::rerender()+0xe5>	100043ef: R_386_PC32	NIWindow::putpixel(int, int, unsigned int)
100043f3:	83 c4 10             	add    esp,0x10
100043f6:	eb ec                	jmp    100043e4 <NIWindow::rerender()+0xda>
100043f8:	46                   	inc    esi
100043f9:	eb d2                	jmp    100043cd <NIWindow::rerender()+0xc3>
100043fb:	83 c4 0c             	add    esp,0xc
100043fe:	5b                   	pop    ebx
100043ff:	5e                   	pop    esi
10004400:	5f                   	pop    edi
10004401:	5d                   	pop    ebp
10004402:	c3                   	ret    
10004403:	90                   	nop

10004404 <NIWindow::changeContext(NIContext*, int, int)>:
10004404:	55                   	push   ebp
10004405:	57                   	push   edi
10004406:	56                   	push   esi
10004407:	53                   	push   ebx
10004408:	83 ec 18             	sub    esp,0x18
1000440b:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
1000440f:	8b 74 24 30          	mov    esi,DWORD PTR [esp+0x30]
10004413:	8b 6c 24 34          	mov    ebp,DWORD PTR [esp+0x34]
10004417:	8b 7c 24 38          	mov    edi,DWORD PTR [esp+0x38]
1000441b:	53                   	push   ebx
1000441c:	e8 fc ff ff ff       	call   1000441d <NIWindow::changeContext(NIContext*, int, int)+0x19>	1000441d: R_386_PC32	NIWindow::invalidate()
10004421:	89 33                	mov    DWORD PTR [ebx],esi
10004423:	89 6b 18             	mov    DWORD PTR [ebx+0x18],ebp
10004426:	89 7b 1c             	mov    DWORD PTR [ebx+0x1c],edi
10004429:	83 c4 10             	add    esp,0x10
1000442c:	8b 86 18 04 00 00    	mov    eax,DWORD PTR [esi+0x418]
10004432:	83 f8 08             	cmp    eax,0x8
10004435:	7f 09                	jg     10004440 <NIWindow::changeContext(NIContext*, int, int)+0x3c>
10004437:	c7 43 04 01 00 00 00 	mov    DWORD PTR [ebx+0x4],0x1
1000443e:	eb 15                	jmp    10004455 <NIWindow::changeContext(NIContext*, int, int)+0x51>
10004440:	83 f8 10             	cmp    eax,0x10
10004443:	7f 09                	jg     1000444e <NIWindow::changeContext(NIContext*, int, int)+0x4a>
10004445:	c7 43 04 02 00 00 00 	mov    DWORD PTR [ebx+0x4],0x2
1000444c:	eb 07                	jmp    10004455 <NIWindow::changeContext(NIContext*, int, int)+0x51>
1000444e:	c7 43 04 04 00 00 00 	mov    DWORD PTR [ebx+0x4],0x4
10004455:	89 5c 24 20          	mov    DWORD PTR [esp+0x20],ebx
10004459:	83 c4 0c             	add    esp,0xc
1000445c:	5b                   	pop    ebx
1000445d:	5e                   	pop    esi
1000445e:	5f                   	pop    edi
1000445f:	5d                   	pop    ebp
10004460:	e9 a5 fe ff ff       	jmp    1000430a <NIWindow::rerender()>
10004465:	90                   	nop

10004466 <NIWindow::NIWindow(NIContext*, int, int, int, int)>:
10004466:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
1000446a:	8b 54 24 14          	mov    edx,DWORD PTR [esp+0x14]
1000446e:	c6 40 28 00          	mov    BYTE PTR [eax+0x28],0x0
10004472:	89 50 20             	mov    DWORD PTR [eax+0x20],edx
10004475:	c6 40 0c 00          	mov    BYTE PTR [eax+0xc],0x0
10004479:	8b 54 24 18          	mov    edx,DWORD PTR [esp+0x18]
1000447d:	c7 40 14 00 00 00 00 	mov    DWORD PTR [eax+0x14],0x0
10004484:	89 50 24             	mov    DWORD PTR [eax+0x24],edx
10004487:	c7 40 10 00 00 00 00 	mov    DWORD PTR [eax+0x10],0x0
1000448e:	e9 71 ff ff ff       	jmp    10004404 <NIWindow::changeContext(NIContext*, int, int)>
10004493:	90                   	nop

10004494 <NIWindow::request()>:
10004494:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
10004498:	80 78 0c 00          	cmp    BYTE PTR [eax+0xc],0x0
1000449c:	75 05                	jne    100044a3 <NIWindow::request()+0xf>
1000449e:	e9 67 fe ff ff       	jmp    1000430a <NIWindow::rerender()>
100044a3:	c3                   	ret    

100044a4 <NIWindow::SHADOW_TEST()>:
100044a4:	55                   	push   ebp
100044a5:	57                   	push   edi
100044a6:	56                   	push   esi
100044a7:	53                   	push   ebx
100044a8:	83 ec 38             	sub    esp,0x38
100044ab:	8b 5c 24 4c          	mov    ebx,DWORD PTR [esp+0x4c]
100044af:	53                   	push   ebx
100044b0:	e8 fc ff ff ff       	call   100044b1 <NIWindow::SHADOW_TEST()+0xd>	100044b1: R_386_PC32	NIWindow::request()
100044b5:	83 c4 10             	add    esp,0x10
100044b8:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
100044bb:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
100044be:	74 10                	je     100044d0 <NIWindow::SHADOW_TEST()+0x2c>
100044c0:	83 ec 0c             	sub    esp,0xc
100044c3:	68 7c 4a 00 10       	push   0x10004a7c	100044c4: R_386_32	.text
100044c8:	e8 fc ff ff ff       	call   100044c9 <NIWindow::SHADOW_TEST()+0x25>	100044c9: R_386_PC32	KePanic(char const*)
100044cd:	83 c4 10             	add    esp,0x10
100044d0:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
100044d4:	0f 85 33 01 00 00    	jne    1000460d <NIWindow::SHADOW_TEST()+0x169>
100044da:	c7 44 24 10 05 00 00 00 	mov    DWORD PTR [esp+0x10],0x5
100044e2:	31 c9                	xor    ecx,ecx
100044e4:	39 4b 24             	cmp    DWORD PTR [ebx+0x24],ecx
100044e7:	0f 8e 20 01 00 00    	jle    1000460d <NIWindow::SHADOW_TEST()+0x169>
100044ed:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
100044f0:	8d 04 88             	lea    eax,[eax+ecx*4]
100044f3:	0f b7 38             	movzx  edi,WORD PTR [eax]
100044f6:	0f b7 40 02          	movzx  eax,WORD PTR [eax+0x2]
100044fa:	89 7c 24 14          	mov    DWORD PTR [esp+0x14],edi
100044fe:	89 44 24 18          	mov    DWORD PTR [esp+0x18],eax
10004502:	89 7c 24 0c          	mov    DWORD PTR [esp+0xc],edi
10004506:	8b 7b 20             	mov    edi,DWORD PTR [ebx+0x20]
10004509:	8b 73 24             	mov    esi,DWORD PTR [ebx+0x24]
1000450c:	2b 7c 24 18          	sub    edi,DWORD PTR [esp+0x18]
10004510:	3b 7c 24 0c          	cmp    edi,DWORD PTR [esp+0xc]
10004514:	0f 8e dc 00 00 00    	jle    100045f6 <NIWindow::SHADOW_TEST()+0x152>
1000451a:	83 f9 05             	cmp    ecx,0x5
1000451d:	7e 21                	jle    10004540 <NIWindow::SHADOW_TEST()+0x9c>
1000451f:	8d 46 fb             	lea    eax,[esi-0x5]
10004522:	39 c8                	cmp    eax,ecx
10004524:	7e 1a                	jle    10004540 <NIWindow::SHADOW_TEST()+0x9c>
10004526:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
1000452a:	83 c0 05             	add    eax,0x5
1000452d:	3b 44 24 0c          	cmp    eax,DWORD PTR [esp+0xc]
10004531:	7d 0d                	jge    10004540 <NIWindow::SHADOW_TEST()+0x9c>
10004533:	8d 47 fb             	lea    eax,[edi-0x5]
10004536:	3b 44 24 0c          	cmp    eax,DWORD PTR [esp+0xc]
1000453a:	0f 8f ad 00 00 00    	jg     100045ed <NIWindow::SHADOW_TEST()+0x149>
10004540:	2b 74 24 18          	sub    esi,DWORD PTR [esp+0x18]
10004544:	b8 ea 01 00 00       	mov    eax,0x1ea
10004549:	29 ce                	sub    esi,ecx
1000454b:	99                   	cdq    
1000454c:	83 c6 04             	add    esi,0x4
1000454f:	bd 0a 00 00 00       	mov    ebp,0xa
10004554:	f7 fe                	idiv   esi
10004556:	89 c6                	mov    esi,eax
10004558:	b8 ea 01 00 00       	mov    eax,0x1ea
1000455d:	99                   	cdq    
1000455e:	f7 7c 24 10          	idiv   DWORD PTR [esp+0x10]
10004562:	83 f8 0a             	cmp    eax,0xa
10004565:	0f 4c c5             	cmovl  eax,ebp
10004568:	39 c6                	cmp    esi,eax
1000456a:	0f 4c f0             	cmovl  esi,eax
1000456d:	2b 7c 24 0c          	sub    edi,DWORD PTR [esp+0xc]
10004571:	b8 ea 01 00 00       	mov    eax,0x1ea
10004576:	83 c7 04             	add    edi,0x4
10004579:	99                   	cdq    
1000457a:	f7 ff                	idiv   edi
1000457c:	83 f8 0a             	cmp    eax,0xa
1000457f:	0f 4d e8             	cmovge ebp,eax
10004582:	8b 44 24 0c          	mov    eax,DWORD PTR [esp+0xc]
10004586:	8d 78 05             	lea    edi,[eax+0x5]
10004589:	b8 ea 01 00 00       	mov    eax,0x1ea
1000458e:	99                   	cdq    
1000458f:	f7 ff                	idiv   edi
10004591:	89 f2                	mov    edx,esi
10004593:	39 c5                	cmp    ebp,eax
10004595:	0f 4c e8             	cmovl  ebp,eax
10004598:	0f af d6             	imul   edx,esi
1000459b:	89 e8                	mov    eax,ebp
1000459d:	0f af c5             	imul   eax,ebp
100045a0:	0f af ee             	imul   ebp,esi
100045a3:	01 c2                	add    edx,eax
100045a5:	8d 44 d5 00          	lea    eax,[ebp+edx*8+0x0]
100045a9:	c1 f8 08             	sar    eax,0x8
100045ac:	83 f8 66             	cmp    eax,0x66
100045af:	7e 4f                	jle    10004600 <NIWindow::SHADOW_TEST()+0x15c>
100045b1:	8d 50 9a             	lea    edx,[eax-0x66]
100045b4:	d1 fa                	sar    edx,1
100045b6:	8d 42 66             	lea    eax,[edx+0x66]
100045b9:	83 f8 73             	cmp    eax,0x73
100045bc:	7e 42                	jle    10004600 <NIWindow::SHADOW_TEST()+0x15c>
100045be:	8d 42 f3             	lea    eax,[edx-0xd]
100045c1:	c1 f8 02             	sar    eax,0x2
100045c4:	83 c0 73             	add    eax,0x73
100045c7:	83 f8 7f             	cmp    eax,0x7f
100045ca:	7f 21                	jg     100045ed <NIWindow::SHADOW_TEST()+0x149>
100045cc:	50                   	push   eax
100045cd:	89 c8                	mov    eax,ecx
100045cf:	89 4c 24 20          	mov    DWORD PTR [esp+0x20],ecx
100045d3:	03 43 1c             	add    eax,DWORD PTR [ebx+0x1c]
100045d6:	50                   	push   eax
100045d7:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100045db:	03 43 18             	add    eax,DWORD PTR [ebx+0x18]
100045de:	50                   	push   eax
100045df:	ff 33                	push   DWORD PTR [ebx]
100045e1:	e8 fc ff ff ff       	call   100045e2 <NIWindow::SHADOW_TEST()+0x13e>	100045e2: R_386_PC32	NIContext::drvDarken4(int, int, int)
100045e6:	83 c4 10             	add    esp,0x10
100045e9:	8b 4c 24 1c          	mov    ecx,DWORD PTR [esp+0x1c]
100045ed:	ff 44 24 0c          	inc    DWORD PTR [esp+0xc]
100045f1:	e9 10 ff ff ff       	jmp    10004506 <NIWindow::SHADOW_TEST()+0x62>
100045f6:	41                   	inc    ecx
100045f7:	ff 44 24 10          	inc    DWORD PTR [esp+0x10]
100045fb:	e9 e4 fe ff ff       	jmp    100044e4 <NIWindow::SHADOW_TEST()+0x40>
10004600:	83 f8 0a             	cmp    eax,0xa
10004603:	ba 0a 00 00 00       	mov    edx,0xa
10004608:	0f 4c c2             	cmovl  eax,edx
1000460b:	eb bf                	jmp    100045cc <NIWindow::SHADOW_TEST()+0x128>
1000460d:	83 c4 2c             	add    esp,0x2c
10004610:	5b                   	pop    ebx
10004611:	5e                   	pop    esi
10004612:	5f                   	pop    edi
10004613:	5d                   	pop    ebp
10004614:	c3                   	ret    
10004615:	90                   	nop

10004616 <NIWindow::realdraw()>:
10004616:	55                   	push   ebp
10004617:	57                   	push   edi
10004618:	56                   	push   esi
10004619:	53                   	push   ebx
1000461a:	83 ec 18             	sub    esp,0x18
1000461d:	8b 5c 24 2c          	mov    ebx,DWORD PTR [esp+0x2c]
10004621:	53                   	push   ebx
10004622:	e8 fc ff ff ff       	call   10004623 <NIWindow::realdraw()+0xd>	10004623: R_386_PC32	NIWindow::request()
10004627:	83 c4 10             	add    esp,0x10
1000462a:	8b 43 24             	mov    eax,DWORD PTR [ebx+0x24]
1000462d:	39 43 10             	cmp    DWORD PTR [ebx+0x10],eax
10004630:	74 10                	je     10004642 <NIWindow::realdraw()+0x2c>
10004632:	83 ec 0c             	sub    esp,0xc
10004635:	68 7c 4a 00 10       	push   0x10004a7c	10004636: R_386_32	.text
1000463a:	e8 fc ff ff ff       	call   1000463b <NIWindow::realdraw()+0x25>	1000463b: R_386_PC32	KePanic(char const*)
1000463f:	83 c4 10             	add    esp,0x10
10004642:	83 7b 04 04          	cmp    DWORD PTR [ebx+0x4],0x4
10004646:	75 46                	jne    1000468e <NIWindow::realdraw()+0x78>
10004648:	31 f6                	xor    esi,esi
1000464a:	39 73 24             	cmp    DWORD PTR [ebx+0x24],esi
1000464d:	7e 3f                	jle    1000468e <NIWindow::realdraw()+0x78>
1000464f:	8b 43 14             	mov    eax,DWORD PTR [ebx+0x14]
10004652:	8d 04 b0             	lea    eax,[eax+esi*4]
10004655:	0f b7 28             	movzx  ebp,WORD PTR [eax]
10004658:	0f b7 78 02          	movzx  edi,WORD PTR [eax+0x2]
1000465c:	8b 43 20             	mov    eax,DWORD PTR [ebx+0x20]
1000465f:	89 c2                	mov    edx,eax
10004661:	29 fa                	sub    edx,edi
10004663:	39 ea                	cmp    edx,ebp
10004665:	7e 24                	jle    1000468b <NIWindow::realdraw()+0x75>
10004667:	8b 53 08             	mov    edx,DWORD PTR [ebx+0x8]
1000466a:	0f af c6             	imul   eax,esi
1000466d:	01 e8                	add    eax,ebp
1000466f:	ff 34 82             	push   DWORD PTR [edx+eax*4]
10004672:	8b 43 1c             	mov    eax,DWORD PTR [ebx+0x1c]
10004675:	01 f0                	add    eax,esi
10004677:	50                   	push   eax
10004678:	8b 43 18             	mov    eax,DWORD PTR [ebx+0x18]
1000467b:	01 e8                	add    eax,ebp
1000467d:	45                   	inc    ebp
1000467e:	50                   	push   eax
1000467f:	ff 33                	push   DWORD PTR [ebx]
10004681:	e8 fc ff ff ff       	call   10004682 <NIWindow::realdraw()+0x6c>	10004682: R_386_PC32	NIContext::drvPutpixel4(int, int, unsigned int)
10004686:	83 c4 10             	add    esp,0x10
10004689:	eb d1                	jmp    1000465c <NIWindow::realdraw()+0x46>
1000468b:	46                   	inc    esi
1000468c:	eb bc                	jmp    1000464a <NIWindow::realdraw()+0x34>
1000468e:	83 c4 0c             	add    esp,0xc
10004691:	5b                   	pop    ebx
10004692:	5e                   	pop    esi
10004693:	5f                   	pop    edi
10004694:	5d                   	pop    ebp
10004695:	c3                   	ret    

10004696 <List<NIWindow*>::insertAtHead(NIWindow*)>:
10004696:	53                   	push   ebx
10004697:	83 ec 14             	sub    esp,0x14
1000469a:	8b 5c 24 1c          	mov    ebx,DWORD PTR [esp+0x1c]
1000469e:	6a 0c                	push   0xc
100046a0:	e8 fc ff ff ff       	call   100046a1 <List<NIWindow*>::insertAtHead(NIWindow*)+0xb>	100046a1: R_386_PC32	malloc
100046a5:	8b 54 24 24          	mov    edx,DWORD PTR [esp+0x24]
100046a9:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
100046b0:	89 10                	mov    DWORD PTR [eax],edx
100046b2:	83 c4 10             	add    esp,0x10
100046b5:	8b 13                	mov    edx,DWORD PTR [ebx]
100046b7:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
100046ba:	85 d2                	test   edx,edx
100046bc:	74 05                	je     100046c3 <List<NIWindow*>::insertAtHead(NIWindow*)+0x2d>
100046be:	89 42 08             	mov    DWORD PTR [edx+0x8],eax
100046c1:	eb 03                	jmp    100046c6 <List<NIWindow*>::insertAtHead(NIWindow*)+0x30>
100046c3:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
100046c6:	89 03                	mov    DWORD PTR [ebx],eax
100046c8:	83 c4 08             	add    esp,0x8
100046cb:	5b                   	pop    ebx
100046cc:	c3                   	ret    
100046cd:	90                   	nop

100046ce <List<NIWindow*>::deleteElement(NIWindow*&)>:
100046ce:	57                   	push   edi
100046cf:	56                   	push   esi
100046d0:	53                   	push   ebx
100046d1:	8b 4c 24 10          	mov    ecx,DWORD PTR [esp+0x10]
100046d5:	8b 44 24 14          	mov    eax,DWORD PTR [esp+0x14]
100046d9:	8b 19                	mov    ebx,DWORD PTR [ecx]
100046db:	85 db                	test   ebx,ebx
100046dd:	74 5e                	je     1000473d <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
100046df:	8b 30                	mov    esi,DWORD PTR [eax]
100046e1:	89 da                	mov    edx,ebx
100046e3:	8b 42 04             	mov    eax,DWORD PTR [edx+0x4]
100046e6:	8b 3a                	mov    edi,DWORD PTR [edx]
100046e8:	85 c0                	test   eax,eax
100046ea:	74 08                	je     100046f4 <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
100046ec:	39 f7                	cmp    edi,esi
100046ee:	73 04                	jae    100046f4 <List<NIWindow*>::deleteElement(NIWindow*&)+0x26>
100046f0:	89 c2                	mov    edx,eax
100046f2:	eb ef                	jmp    100046e3 <List<NIWindow*>::deleteElement(NIWindow*&)+0x15>
100046f4:	39 f7                	cmp    edi,esi
100046f6:	75 45                	jne    1000473d <List<NIWindow*>::deleteElement(NIWindow*&)+0x6f>
100046f8:	39 d3                	cmp    ebx,edx
100046fa:	75 18                	jne    10004714 <List<NIWindow*>::deleteElement(NIWindow*&)+0x46>
100046fc:	89 01                	mov    DWORD PTR [ecx],eax
100046fe:	85 c0                	test   eax,eax
10004700:	75 09                	jne    1000470b <List<NIWindow*>::deleteElement(NIWindow*&)+0x3d>
10004702:	c7 41 04 00 00 00 00 	mov    DWORD PTR [ecx+0x4],0x0
10004709:	eb 1e                	jmp    10004729 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
1000470b:	c7 40 08 00 00 00 00 	mov    DWORD PTR [eax+0x8],0x0
10004712:	eb 15                	jmp    10004729 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004714:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
10004717:	85 c0                	test   eax,eax
10004719:	89 43 04             	mov    DWORD PTR [ebx+0x4],eax
1000471c:	8b 5a 08             	mov    ebx,DWORD PTR [edx+0x8]
1000471f:	74 05                	je     10004726 <List<NIWindow*>::deleteElement(NIWindow*&)+0x58>
10004721:	89 58 08             	mov    DWORD PTR [eax+0x8],ebx
10004724:	eb 03                	jmp    10004729 <List<NIWindow*>::deleteElement(NIWindow*&)+0x5b>
10004726:	89 59 04             	mov    DWORD PTR [ecx+0x4],ebx
10004729:	c7 44 24 14 0c 00 00 00 	mov    DWORD PTR [esp+0x14],0xc
10004731:	89 54 24 10          	mov    DWORD PTR [esp+0x10],edx
10004735:	5b                   	pop    ebx
10004736:	5e                   	pop    esi
10004737:	5f                   	pop    edi
10004738:	e9 fc ff ff ff       	jmp    10004739 <List<NIWindow*>::deleteElement(NIWindow*&)+0x6b>	10004739: R_386_PC32	operator delete(void*, unsigned long)
1000473d:	5b                   	pop    ebx
1000473e:	5e                   	pop    esi
1000473f:	5f                   	pop    edi
10004740:	c3                   	ret    
10004741:	53                   	push   ebx
10004742:	46                   	inc    esi
10004743:	4e                   	dec    esi
10004744:	43                   	inc    ebx
10004745:	00 53 46             	add    BYTE PTR [ebx+0x46],dl
10004748:	4e                   	dec    esi
10004749:	32 00                	xor    al,BYTE PTR [eax]
1000474b:	32 4e 46             	xor    cl,BYTE PTR [esi+0x46]
1000474e:	53                   	push   ebx
1000474f:	00 4e 49             	add    BYTE PTR [esi+0x49],cl
10004752:	43                   	inc    ebx
10004753:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004754:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004755:	74 65                	je     100047bc <List<NIWindow*>::deleteElement(NIWindow*&)+0xee>
10004757:	78 74                	js     100047cd <List<NIWindow*>::deleteElement(NIWindow*&)+0xff>
10004759:	3a 3a                	cmp    bh,BYTE PTR [edx]
1000475b:	64 72 76             	fs jb  100047d4 <List<NIWindow*>::deleteElement(NIWindow*&)+0x106>
1000475e:	52                   	push   edx
1000475f:	65 6e                	outs   dx,BYTE PTR gs:[esi]
10004761:	64 65 72 54          	fs gs jb 100047b9 <List<NIWindow*>::deleteElement(NIWindow*&)+0xeb>
10004765:	54                   	push   esp
10004766:	46                   	inc    esi
10004767:	34 00                	xor    al,0x0
10004769:	43                   	inc    ebx
1000476a:	3a 2f                	cmp    ch,BYTE PTR [edi]
1000476c:	42                   	inc    edx
1000476d:	61                   	popa   
1000476e:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000476f:	61                   	popa   
10004770:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004771:	61                   	popa   
10004772:	2f                   	das    
10004773:	46                   	inc    esi
10004774:	6f                   	outs   dx,DWORD PTR ds:[esi]
10004775:	6e                   	outs   dx,BYTE PTR ds:[esi]
10004776:	74 73                	je     100047eb <List<NIWindow*>::deleteElement(NIWindow*&)+0x11d>
10004778:	2f                   	das    
10004779:	53                   	push   ebx
1000477a:	46                   	inc    esi
1000477b:	4e                   	dec    esi
1000477c:	00 43 41             	add    BYTE PTR [ebx+0x41],al
1000477f:	4e                   	dec    esi
10004780:	4e                   	dec    esi
10004781:	4f                   	dec    edi
10004782:	54                   	push   esp
10004783:	20 4c 4f 41          	and    BYTE PTR [edi+ecx*2+0x41],cl
10004787:	44                   	inc    esp
10004788:	20 46 4f             	and    BYTE PTR [esi+0x4f],al
1000478b:	4e                   	dec    esi
1000478c:	54                   	push   esp
1000478d:	20 44 49 52          	and    BYTE PTR [ecx+ecx*2+0x52],al
10004791:	45                   	inc    ebp
10004792:	43                   	inc    ebx
10004793:	54                   	push   esp
10004794:	4f                   	dec    edi
10004795:	52                   	push   edx
10004796:	59                   	pop    ecx
10004797:	00 43 3a             	add    BYTE PTR [ebx+0x3a],al
1000479a:	2f                   	das    
1000479b:	42                   	inc    edx
1000479c:	61                   	popa   
1000479d:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000479e:	61                   	popa   
1000479f:	6e                   	outs   dx,BYTE PTR ds:[esi]
100047a0:	61                   	popa   
100047a1:	2f                   	das    
100047a2:	46                   	inc    esi
100047a3:	6f                   	outs   dx,DWORD PTR ds:[esi]
100047a4:	6e                   	outs   dx,BYTE PTR ds:[esi]
100047a5:	74 73                	je     1000481a <List<NIWindow*>::deleteElement(NIWindow*&)+0x14c>
100047a7:	2f                   	das    
100047a8:	53                   	push   ebx
100047a9:	46                   	inc    esi
100047aa:	4e                   	dec    esi
100047ab:	2f                   	das    
100047ac:	00 66 6f             	add    BYTE PTR [esi+0x6f],ah
100047af:	6e                   	outs   dx,BYTE PTR ds:[esi]
100047b0:	74 20                	je     100047d2 <List<NIWindow*>::deleteElement(NIWindow*&)+0x104>
100047b2:	69 73 20 6f 66 20 73 	imul   esi,DWORD PTR [ebx+0x20],0x7320666f
100047b9:	69 7a 65 20 25 64 0a 	imul   edi,DWORD PTR [edx+0x65],0xa642520
100047c0:	00 4c 6f 61          	add    BYTE PTR [edi+ebp*2+0x61],cl
100047c4:	64 65 64 20 66 6f    	fs gs and BYTE PTR fs:[esi+0x6f],ah
100047ca:	6e                   	outs   dx,BYTE PTR ds:[esi]
100047cb:	74 3a                	je     10004807 <List<NIWindow*>::deleteElement(NIWindow*&)+0x139>
100047cd:	20 25 73 0a 00 53    	and    BYTE PTR ds:0x53000a73,ah
100047d3:	53                   	push   ebx
100047d4:	46                   	inc    esi
100047d5:	4e                   	dec    esi
100047d6:	5f                   	pop    edi
100047d7:	52                   	push   edx
100047d8:	45                   	inc    ebp
100047d9:	53                   	push   ebx
100047da:	20 3d 20 25 64 0a    	and    BYTE PTR ds:0xa642520,bh
100047e0:	00 4d 65             	add    BYTE PTR [ebp+0x65],cl
100047e3:	6d                   	ins    DWORD PTR es:[edi],dx
100047e4:	6f                   	outs   dx,DWORD PTR ds:[esi]
100047e5:	72 79                	jb     10004860 <_ssfn__compute_huffman_codes::length_dezigzag>
100047e7:	20 61 6c             	and    BYTE PTR [ecx+0x6c],ah
100047ea:	6c                   	ins    BYTE PTR es:[edi],dx
100047eb:	6f                   	outs   dx,DWORD PTR ds:[esi]
100047ec:	63 61 74             	arpl   WORD PTR [ecx+0x74],sp
100047ef:	69 6f 6e 20 65 72 72 	imul   ebp,DWORD PTR [edi+0x6e],0x72726520
100047f6:	6f                   	outs   dx,DWORD PTR ds:[esi]
100047f7:	72 00                	jb     100047f9 <List<NIWindow*>::deleteElement(NIWindow*&)+0x12b>
100047f9:	42                   	inc    edx
100047fa:	61                   	popa   
100047fb:	64 20 66 69          	and    BYTE PTR fs:[esi+0x69],ah
100047ff:	6c                   	ins    BYTE PTR es:[edi],dx
10004800:	65 20 66 6f          	and    BYTE PTR gs:[esi+0x6f],ah
10004804:	72 6d                	jb     10004873 <_ssfn__compute_huffman_codes::length_dezigzag+0x13>
10004806:	61                   	popa   
10004807:	74 00                	je     10004809 <List<NIWindow*>::deleteElement(NIWindow*&)+0x13b>
10004809:	4e                   	dec    esi
1000480a:	6f                   	outs   dx,DWORD PTR ds:[esi]
1000480b:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
1000480e:	6e                   	outs   dx,BYTE PTR ds:[esi]
1000480f:	74 20                	je     10004831 <List<NIWindow*>::deleteElement(NIWindow*&)+0x163>
10004811:	66 61                	popaw  
10004813:	63 65 20             	arpl   WORD PTR [ebp+0x20],sp
10004816:	66 6f                	outs   dx,WORD PTR ds:[esi]
10004818:	75 6e                	jne    10004888 <_ssfn__zdist_extra+0x8>
1000481a:	64 00 49 6e          	add    BYTE PTR fs:[ecx+0x6e],cl
1000481e:	76 61                	jbe    10004881 <_ssfn__zdist_extra+0x1>
10004820:	6c                   	ins    BYTE PTR es:[edi],dx
10004821:	69 64 20 69 6e 70 75 74 	imul   esp,DWORD PTR [eax+eiz*1+0x69],0x7475706e
10004829:	20 76 61             	and    BYTE PTR [esi+0x61],dh
1000482c:	6c                   	ins    BYTE PTR es:[edi],dx
1000482d:	75 65                	jne    10004894 <_ssfn__zdist_extra+0x14>
1000482f:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
10004832:	76 61                	jbe    10004895 <_ssfn__zdist_extra+0x15>
10004834:	6c                   	ins    BYTE PTR es:[edi],dx
10004835:	69 64 20 73 74 79 6c 65 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x656c7974
1000483d:	00 49 6e             	add    BYTE PTR [ecx+0x6e],cl
10004840:	76 61                	jbe    100048a3 <_ssfn__zdist_extra+0x23>
10004842:	6c                   	ins    BYTE PTR es:[edi],dx
10004843:	69 64 20 73 69 7a 65 00 	imul   esp,DWORD PTR [eax+eiz*1+0x73],0x657a69
1000484b:	47                   	inc    edi
1000484c:	6c                   	ins    BYTE PTR es:[edi],dx
1000484d:	79 70                	jns    100048bf <_ssfn__zdist_extra+0x3f>
1000484f:	68 20 6e 6f 74       	push   0x746f6e20
10004854:	20 66 6f             	and    BYTE PTR [esi+0x6f],ah
10004857:	75 6e                	jne    100048c7 <_ssfn__zdist_extra+0x47>
10004859:	64 00 66 90          	add    BYTE PTR fs:[esi-0x70],ah
1000485d:	66 90                	xchg   ax,ax
1000485f:	90                   	nop

10004860 <_ssfn__compute_huffman_codes::length_dezigzag>:
10004860:	10 11 12 00 08 07 09 06 0a 05 0b 04 0c 03 0d 02     ................
10004870:	0e 01 0f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................

10004880 <_ssfn__zdist_extra>:
	...
10004890:	01 00 00 00 01 00 00 00 02 00 00 00 02 00 00 00     ................
100048a0:	03 00 00 00 03 00 00 00 04 00 00 00 04 00 00 00     ................
100048b0:	05 00 00 00 05 00 00 00 06 00 00 00 06 00 00 00     ................
100048c0:	07 00 00 00 07 00 00 00 08 00 00 00 08 00 00 00     ................
100048d0:	09 00 00 00 09 00 00 00 0a 00 00 00 0a 00 00 00     ................
100048e0:	0b 00 00 00 0b 00 00 00 0c 00 00 00 0c 00 00 00     ................
100048f0:	0d 00 00 00 0d 00 00 00 00 00 00 00 00 00 00 00     ................

10004900 <_ssfn__zdist_base>:
10004900:	01 00 00 00 02 00 00 00 03 00 00 00 04 00 00 00     ................
10004910:	05 00 00 00 07 00 00 00 09 00 00 00 0d 00 00 00     ................
10004920:	11 00 00 00 19 00 00 00 21 00 00 00 31 00 00 00     ........!...1...
10004930:	41 00 00 00 61 00 00 00 81 00 00 00 c1 00 00 00     A...a...........
10004940:	01 01 00 00 81 01 00 00 01 02 00 00 01 03 00 00     ................
10004950:	01 04 00 00 01 06 00 00 01 08 00 00 01 0c 00 00     ................
10004960:	01 10 00 00 01 18 00 00 01 20 00 00 01 30 00 00     ......... ...0..
10004970:	01 40 00 00 01 60 00 00 00 00 00 00 00 00 00 00     .@...`..........

10004980 <_ssfn__zlength_extra>:
	...
100049a0:	01 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00     ................
100049b0:	02 00 00 00 02 00 00 00 02 00 00 00 02 00 00 00     ................
100049c0:	03 00 00 00 03 00 00 00 03 00 00 00 03 00 00 00     ................
100049d0:	04 00 00 00 04 00 00 00 04 00 00 00 04 00 00 00     ................
100049e0:	05 00 00 00 05 00 00 00 05 00 00 00 05 00 00 00     ................
	...

10004a00 <_ssfn__zlength_base>:
10004a00:	03 00 00 00 04 00 00 00 05 00 00 00 06 00 00 00     ................
10004a10:	07 00 00 00 08 00 00 00 09 00 00 00 0a 00 00 00     ................
10004a20:	0b 00 00 00 0d 00 00 00 0f 00 00 00 11 00 00 00     ................
10004a30:	13 00 00 00 17 00 00 00 1b 00 00 00 1f 00 00 00     ................
10004a40:	23 00 00 00 2b 00 00 00 33 00 00 00 3b 00 00 00     #...+...3...;...
10004a50:	43 00 00 00 53 00 00 00 63 00 00 00 73 00 00 00     C...S...c...s...
10004a60:	83 00 00 00 a3 00 00 00 c3 00 00 00 e3 00 00 00     ................
10004a70:	02 01 00 00 00 00 00 00 00 00 00 00 41 53 53 45     ............ASSE
10004a80:	52 54 49 4f 4e 20 46 41 49 4c 55 52 45 20 28 41     RTION FAILURE (A
10004a90:	29 2e 00                                            )..
