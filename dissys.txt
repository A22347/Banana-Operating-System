
packages/system/32/0001/system.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <beginx(void*)>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	83 ec 0c             	sub    esp,0xc
10000009:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000000c:	e8 fc ff ff ff       	call   1000000d <beginx(void*)+0xd>	1000000d: R_386_PC32	begin(void*)
10000011:	83 c4 10             	add    esp,0x10
10000014:	90                   	nop
10000015:	c9                   	leave  
10000016:	c3                   	ret    

10000017 <memcmp(void*, void*, unsigned long)>:
10000017:	55                   	push   ebp
10000018:	89 e5                	mov    ebp,esp
1000001a:	83 ec 10             	sub    esp,0x10
1000001d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000020:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000023:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000026:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
10000029:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
1000002c:	8d 50 ff             	lea    edx,[eax-0x1]
1000002f:	89 55 10             	mov    DWORD PTR [ebp+0x10],edx
10000032:	85 c0                	test   eax,eax
10000034:	74 12                	je     10000048 <memcmp(void*, void*, unsigned long)+0x31>
10000036:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000039:	8a 10                	mov    dl,BYTE PTR [eax]
1000003b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000003e:	8a 00                	mov    al,BYTE PTR [eax]
10000040:	38 c2                	cmp    dl,al
10000042:	75 04                	jne    10000048 <memcmp(void*, void*, unsigned long)+0x31>
10000044:	b0 01                	mov    al,0x1
10000046:	eb 02                	jmp    1000004a <memcmp(void*, void*, unsigned long)+0x33>
10000048:	b0 00                	mov    al,0x0
1000004a:	84 c0                	test   al,al
1000004c:	74 08                	je     10000056 <memcmp(void*, void*, unsigned long)+0x3f>
1000004e:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
10000051:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
10000054:	eb d3                	jmp    10000029 <memcmp(void*, void*, unsigned long)+0x12>
10000056:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000059:	8a 00                	mov    al,BYTE PTR [eax]
1000005b:	0f b6 d0             	movzx  edx,al
1000005e:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10000061:	8a 00                	mov    al,BYTE PTR [eax]
10000063:	0f b6 c0             	movzx  eax,al
10000066:	29 c2                	sub    edx,eax
10000068:	89 d0                	mov    eax,edx
1000006a:	c9                   	leave  
1000006b:	c3                   	ret    

1000006c <memmove>:
1000006c:	55                   	push   ebp
1000006d:	89 e5                	mov    ebp,esp
1000006f:	83 ec 10             	sub    esp,0x10
10000072:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000075:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000078:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000007b:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000007e:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10000081:	3b 45 fc             	cmp    eax,DWORD PTR [ebp-0x4]
10000084:	76 1b                	jbe    100000a1 <memmove+0x35>
10000086:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
1000008a:	74 46                	je     100000d2 <memmove+0x66>
1000008c:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000008f:	8a 10                	mov    dl,BYTE PTR [eax]
10000091:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000094:	88 10                	mov    BYTE PTR [eax],dl
10000096:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
10000099:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
1000009c:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
1000009f:	eb e5                	jmp    10000086 <memmove+0x1a>
100000a1:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100000a4:	3b 45 fc             	cmp    eax,DWORD PTR [ebp-0x4]
100000a7:	73 29                	jae    100000d2 <memmove+0x66>
100000a9:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
100000ac:	48                   	dec    eax
100000ad:	01 45 fc             	add    DWORD PTR [ebp-0x4],eax
100000b0:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
100000b3:	48                   	dec    eax
100000b4:	01 45 f8             	add    DWORD PTR [ebp-0x8],eax
100000b7:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
100000bb:	74 15                	je     100000d2 <memmove+0x66>
100000bd:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100000c0:	8a 10                	mov    dl,BYTE PTR [eax]
100000c2:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000c5:	88 10                	mov    BYTE PTR [eax],dl
100000c7:	ff 4d fc             	dec    DWORD PTR [ebp-0x4]
100000ca:	ff 4d f8             	dec    DWORD PTR [ebp-0x8]
100000cd:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
100000d0:	eb e5                	jmp    100000b7 <memmove+0x4b>
100000d2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000d5:	c9                   	leave  
100000d6:	c3                   	ret    

100000d7 <memset>:
100000d7:	55                   	push   ebp
100000d8:	89 e5                	mov    ebp,esp
100000da:	83 ec 10             	sub    esp,0x10
100000dd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000e0:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
100000e3:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
100000e7:	74 12                	je     100000fb <memset+0x24>
100000e9:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ec:	88 c2                	mov    dl,al
100000ee:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000f1:	88 10                	mov    BYTE PTR [eax],dl
100000f3:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
100000f6:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
100000f9:	eb e8                	jmp    100000e3 <memset+0xc>
100000fb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fe:	c9                   	leave  
100000ff:	c3                   	ret    

10000100 <strlen>:
10000100:	55                   	push   ebp
10000101:	89 e5                	mov    ebp,esp
10000103:	83 ec 10             	sub    esp,0x10
10000106:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [ebp-0x4],0x0
1000010d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000110:	8a 00                	mov    al,BYTE PTR [eax]
10000112:	84 c0                	test   al,al
10000114:	74 0c                	je     10000122 <strlen+0x22>
10000116:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000119:	40                   	inc    eax
1000011a:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000011d:	ff 45 08             	inc    DWORD PTR [ebp+0x8]
10000120:	eb eb                	jmp    1000010d <strlen+0xd>
10000122:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000125:	c9                   	leave  
10000126:	c3                   	ret    

10000127 <strpbrk(char const*, char const*)>:
10000127:	55                   	push   ebp
10000128:	89 e5                	mov    ebp,esp
1000012a:	83 ec 10             	sub    esp,0x10
1000012d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000130:	8a 00                	mov    al,BYTE PTR [eax]
10000132:	84 c0                	test   al,al
10000134:	74 30                	je     10000166 <strpbrk(char const*, char const*)+0x3f>
10000136:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000139:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000013c:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000013f:	8a 00                	mov    al,BYTE PTR [eax]
10000141:	84 c0                	test   al,al
10000143:	74 18                	je     1000015d <strpbrk(char const*, char const*)+0x36>
10000145:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000148:	8a 10                	mov    dl,BYTE PTR [eax]
1000014a:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000014d:	8a 00                	mov    al,BYTE PTR [eax]
1000014f:	38 c2                	cmp    dl,al
10000151:	75 05                	jne    10000158 <strpbrk(char const*, char const*)+0x31>
10000153:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000156:	eb 13                	jmp    1000016b <strpbrk(char const*, char const*)+0x44>
10000158:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
1000015b:	eb df                	jmp    1000013c <strpbrk(char const*, char const*)+0x15>
1000015d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000160:	40                   	inc    eax
10000161:	89 45 08             	mov    DWORD PTR [ebp+0x8],eax
10000164:	eb c7                	jmp    1000012d <strpbrk(char const*, char const*)+0x6>
10000166:	b8 00 00 00 00       	mov    eax,0x0
1000016b:	c9                   	leave  
1000016c:	c3                   	ret    

1000016d <strtok>:
1000016d:	55                   	push   ebp
1000016e:	89 e5                	mov    ebp,esp
10000170:	83 ec 10             	sub    esp,0x10
10000173:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000176:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000179:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000017c:	85 c0                	test   eax,eax
1000017e:	75 18                	jne    10000198 <strtok+0x2b>
10000180:	a1 00 00 00 00       	mov    eax,ds:0x0	10000181: R_386_32	SavedPtr
10000185:	85 c0                	test   eax,eax
10000187:	75 07                	jne    10000190 <strtok+0x23>
10000189:	b8 00 00 00 00       	mov    eax,0x0
1000018e:	eb 6f                	jmp    100001ff <strtok+0x92>
10000190:	a1 00 00 00 00       	mov    eax,ds:0x0	10000191: R_386_32	SavedPtr
10000195:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000198:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000019b:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000019e:	50                   	push   eax
1000019f:	e8 fc ff ff ff       	call   100001a0 <strtok+0x33>	100001a0: R_386_PC32	strpbrk(char const*, char const*)
100001a4:	83 c4 08             	add    esp,0x8
100001a7:	a3 00 00 00 00       	mov    ds:0x0,eax	100001a8: R_386_32	SavedPtr
100001ac:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100001ae: R_386_32	SavedPtr
100001b2:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100001b5:	39 c2                	cmp    edx,eax
100001b7:	75 22                	jne    100001db <strtok+0x6e>
100001b9:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100001bc:	8d 50 01             	lea    edx,[eax+0x1]
100001bf:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
100001c2:	c6 00 00             	mov    BYTE PTR [eax],0x0
100001c5:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100001c8:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100001cb:	50                   	push   eax
100001cc:	e8 fc ff ff ff       	call   100001cd <strtok+0x60>	100001cd: R_386_PC32	strpbrk(char const*, char const*)
100001d1:	83 c4 08             	add    esp,0x8
100001d4:	a3 00 00 00 00       	mov    ds:0x0,eax	100001d5: R_386_32	SavedPtr
100001d9:	eb d1                	jmp    100001ac <strtok+0x3f>
100001db:	a1 00 00 00 00       	mov    eax,ds:0x0	100001dc: R_386_32	SavedPtr
100001e0:	85 c0                	test   eax,eax
100001e2:	74 16                	je     100001fa <strtok+0x8d>
100001e4:	a1 00 00 00 00       	mov    eax,ds:0x0	100001e5: R_386_32	SavedPtr
100001e9:	8d 50 01             	lea    edx,[eax+0x1]
100001ec:	89 15 00 00 00 00    	mov    DWORD PTR ds:0x0,edx	100001ee: R_386_32	SavedPtr
100001f2:	c6 00 00             	mov    BYTE PTR [eax],0x0
100001f5:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100001f8:	eb 05                	jmp    100001ff <strtok+0x92>
100001fa:	b8 00 00 00 00       	mov    eax,0x0
100001ff:	c9                   	leave  
10000200:	c3                   	ret    

10000201 <strcpy>:
10000201:	55                   	push   ebp
10000202:	89 e5                	mov    ebp,esp
10000204:	83 ec 10             	sub    esp,0x10
10000207:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000020a:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000020d:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000210:	8a 00                	mov    al,BYTE PTR [eax]
10000212:	84 c0                	test   al,al
10000214:	74 12                	je     10000228 <strcpy+0x27>
10000216:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000219:	8a 10                	mov    dl,BYTE PTR [eax]
1000021b:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000021e:	88 10                	mov    BYTE PTR [eax],dl
10000220:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
10000223:	ff 45 0c             	inc    DWORD PTR [ebp+0xc]
10000226:	eb e5                	jmp    1000020d <strcpy+0xc>
10000228:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000022b:	c6 00 00             	mov    BYTE PTR [eax],0x0
1000022e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000231:	c9                   	leave  
10000232:	c3                   	ret    

10000233 <strncpyxx(char*, char const*, unsigned long)>:
10000233:	55                   	push   ebp
10000234:	89 e5                	mov    ebp,esp
10000236:	83 ec 10             	sub    esp,0x10
10000239:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000023c:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000023f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000242:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000245:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
10000249:	74 23                	je     1000026e <strncpyxx(char*, char const*, unsigned long)+0x3b>
1000024b:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
1000024e:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
10000251:	8d 42 01             	lea    eax,[edx+0x1]
10000254:	89 45 0c             	mov    DWORD PTR [ebp+0xc],eax
10000257:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000025a:	8d 48 01             	lea    ecx,[eax+0x1]
1000025d:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
10000260:	8a 12                	mov    dl,BYTE PTR [edx]
10000262:	88 10                	mov    BYTE PTR [eax],dl
10000264:	8a 00                	mov    al,BYTE PTR [eax]
10000266:	84 c0                	test   al,al
10000268:	74 04                	je     1000026e <strncpyxx(char*, char const*, unsigned long)+0x3b>
1000026a:	b0 01                	mov    al,0x1
1000026c:	eb 02                	jmp    10000270 <strncpyxx(char*, char const*, unsigned long)+0x3d>
1000026e:	b0 00                	mov    al,0x0
10000270:	84 c0                	test   al,al
10000272:	74 02                	je     10000276 <strncpyxx(char*, char const*, unsigned long)+0x43>
10000274:	eb cf                	jmp    10000245 <strncpyxx(char*, char const*, unsigned long)+0x12>
10000276:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000279:	8d 50 ff             	lea    edx,[eax-0x1]
1000027c:	89 55 10             	mov    DWORD PTR [ebp+0x10],edx
1000027f:	85 c0                	test   eax,eax
10000281:	0f 95 c0             	setne  al
10000284:	84 c0                	test   al,al
10000286:	74 0b                	je     10000293 <strncpyxx(char*, char const*, unsigned long)+0x60>
10000288:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000028b:	c6 00 00             	mov    BYTE PTR [eax],0x0
1000028e:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
10000291:	eb e3                	jmp    10000276 <strncpyxx(char*, char const*, unsigned long)+0x43>
10000293:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000296:	c9                   	leave  
10000297:	c3                   	ret    

10000298 <strcmp>:
10000298:	55                   	push   ebp
10000299:	89 e5                	mov    ebp,esp
1000029b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000029e:	8a 10                	mov    dl,BYTE PTR [eax]
100002a0:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002a3:	8a 00                	mov    al,BYTE PTR [eax]
100002a5:	38 c2                	cmp    dl,al
100002a7:	75 20                	jne    100002c9 <strcmp+0x31>
100002a9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002ac:	8d 50 01             	lea    edx,[eax+0x1]
100002af:	89 55 08             	mov    DWORD PTR [ebp+0x8],edx
100002b2:	8a 00                	mov    al,BYTE PTR [eax]
100002b4:	84 c0                	test   al,al
100002b6:	0f 94 c0             	sete   al
100002b9:	84 c0                	test   al,al
100002bb:	74 07                	je     100002c4 <strcmp+0x2c>
100002bd:	b8 00 00 00 00       	mov    eax,0x0
100002c2:	eb 19                	jmp    100002dd <strcmp+0x45>
100002c4:	ff 45 0c             	inc    DWORD PTR [ebp+0xc]
100002c7:	eb d2                	jmp    1000029b <strcmp+0x3>
100002c9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002cc:	8a 00                	mov    al,BYTE PTR [eax]
100002ce:	0f b6 d0             	movzx  edx,al
100002d1:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002d4:	8a 00                	mov    al,BYTE PTR [eax]
100002d6:	0f b6 c0             	movzx  eax,al
100002d9:	29 c2                	sub    edx,eax
100002db:	89 d0                	mov    eax,edx
100002dd:	5d                   	pop    ebp
100002de:	c3                   	ret    

100002df <strchr(char const*, int)>:
100002df:	55                   	push   ebp
100002e0:	89 e5                	mov    ebp,esp
100002e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002e5:	8a 00                	mov    al,BYTE PTR [eax]
100002e7:	84 c0                	test   al,al
100002e9:	74 16                	je     10000301 <strchr(char const*, int)+0x22>
100002eb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002ee:	8a 00                	mov    al,BYTE PTR [eax]
100002f0:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
100002f3:	38 d0                	cmp    al,dl
100002f5:	75 05                	jne    100002fc <strchr(char const*, int)+0x1d>
100002f7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fa:	eb 0a                	jmp    10000306 <strchr(char const*, int)+0x27>
100002fc:	ff 45 08             	inc    DWORD PTR [ebp+0x8]
100002ff:	eb e1                	jmp    100002e2 <strchr(char const*, int)+0x3>
10000301:	b8 00 00 00 00       	mov    eax,0x0
10000306:	5d                   	pop    ebp
10000307:	c3                   	ret    

10000308 <strncmp>:
10000308:	55                   	push   ebp
10000309:	89 e5                	mov    ebp,esp
1000030b:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
1000030e:	8d 50 ff             	lea    edx,[eax-0x1]
10000311:	89 55 10             	mov    DWORD PTR [ebp+0x10],edx
10000314:	85 c0                	test   eax,eax
10000316:	74 12                	je     1000032a <strncmp+0x22>
10000318:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000031b:	8a 10                	mov    dl,BYTE PTR [eax]
1000031d:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000320:	8a 00                	mov    al,BYTE PTR [eax]
10000322:	38 c2                	cmp    dl,al
10000324:	75 04                	jne    1000032a <strncmp+0x22>
10000326:	b0 01                	mov    al,0x1
10000328:	eb 02                	jmp    1000032c <strncmp+0x24>
1000032a:	b0 00                	mov    al,0x0
1000032c:	84 c0                	test   al,al
1000032e:	74 20                	je     10000350 <strncmp+0x48>
10000330:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000333:	8d 50 01             	lea    edx,[eax+0x1]
10000336:	89 55 08             	mov    DWORD PTR [ebp+0x8],edx
10000339:	8a 00                	mov    al,BYTE PTR [eax]
1000033b:	84 c0                	test   al,al
1000033d:	0f 94 c0             	sete   al
10000340:	84 c0                	test   al,al
10000342:	74 07                	je     1000034b <strncmp+0x43>
10000344:	b8 00 00 00 00       	mov    eax,0x0
10000349:	eb 19                	jmp    10000364 <strncmp+0x5c>
1000034b:	ff 45 0c             	inc    DWORD PTR [ebp+0xc]
1000034e:	eb bb                	jmp    1000030b <strncmp+0x3>
10000350:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000353:	8a 00                	mov    al,BYTE PTR [eax]
10000355:	0f b6 d0             	movzx  edx,al
10000358:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000035b:	8a 00                	mov    al,BYTE PTR [eax]
1000035d:	0f b6 c0             	movzx  eax,al
10000360:	29 c2                	sub    edx,eax
10000362:	89 d0                	mov    eax,edx
10000364:	5d                   	pop    ebp
10000365:	c3                   	ret    

10000366 <strcat>:
10000366:	55                   	push   ebp
10000367:	89 e5                	mov    ebp,esp
10000369:	83 ec 10             	sub    esp,0x10
1000036c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000036f:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000372:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000375:	8d 50 01             	lea    edx,[eax+0x1]
10000378:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
1000037b:	8a 00                	mov    al,BYTE PTR [eax]
1000037d:	84 c0                	test   al,al
1000037f:	0f 95 c0             	setne  al
10000382:	84 c0                	test   al,al
10000384:	74 02                	je     10000388 <strcat+0x22>
10000386:	eb ea                	jmp    10000372 <strcat+0xc>
10000388:	ff 4d fc             	dec    DWORD PTR [ebp-0x4]
1000038b:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
1000038e:	8d 42 01             	lea    eax,[edx+0x1]
10000391:	89 45 0c             	mov    DWORD PTR [ebp+0xc],eax
10000394:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000397:	8d 48 01             	lea    ecx,[eax+0x1]
1000039a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000039d:	8a 12                	mov    dl,BYTE PTR [edx]
1000039f:	88 10                	mov    BYTE PTR [eax],dl
100003a1:	8a 00                	mov    al,BYTE PTR [eax]
100003a3:	84 c0                	test   al,al
100003a5:	0f 95 c0             	setne  al
100003a8:	84 c0                	test   al,al
100003aa:	74 02                	je     100003ae <strcat+0x48>
100003ac:	eb dd                	jmp    1000038b <strcat+0x25>
100003ae:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003b1:	c9                   	leave  
100003b2:	c3                   	ret    

100003b3 <strncat(char*, char const*, unsigned long)>:
100003b3:	55                   	push   ebp
100003b4:	89 e5                	mov    ebp,esp
100003b6:	83 ec 10             	sub    esp,0x10
100003b9:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
100003bd:	74 5c                	je     1000041b <strncat(char*, char const*, unsigned long)+0x68>
100003bf:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003c2:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
100003c5:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100003c8:	8d 50 01             	lea    edx,[eax+0x1]
100003cb:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
100003ce:	8a 00                	mov    al,BYTE PTR [eax]
100003d0:	84 c0                	test   al,al
100003d2:	0f 95 c0             	setne  al
100003d5:	84 c0                	test   al,al
100003d7:	74 02                	je     100003db <strncat(char*, char const*, unsigned long)+0x28>
100003d9:	eb ea                	jmp    100003c5 <strncat(char*, char const*, unsigned long)+0x12>
100003db:	ff 4d fc             	dec    DWORD PTR [ebp-0x4]
100003de:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
100003e1:	8d 42 01             	lea    eax,[edx+0x1]
100003e4:	89 45 0c             	mov    DWORD PTR [ebp+0xc],eax
100003e7:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100003ea:	8d 48 01             	lea    ecx,[eax+0x1]
100003ed:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100003f0:	8a 12                	mov    dl,BYTE PTR [edx]
100003f2:	88 10                	mov    BYTE PTR [eax],dl
100003f4:	8a 00                	mov    al,BYTE PTR [eax]
100003f6:	84 c0                	test   al,al
100003f8:	74 0d                	je     10000407 <strncat(char*, char const*, unsigned long)+0x54>
100003fa:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
100003fd:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
10000401:	74 04                	je     10000407 <strncat(char*, char const*, unsigned long)+0x54>
10000403:	b0 01                	mov    al,0x1
10000405:	eb 02                	jmp    10000409 <strncat(char*, char const*, unsigned long)+0x56>
10000407:	b0 00                	mov    al,0x0
10000409:	84 c0                	test   al,al
1000040b:	74 02                	je     1000040f <strncat(char*, char const*, unsigned long)+0x5c>
1000040d:	eb cf                	jmp    100003de <strncat(char*, char const*, unsigned long)+0x2b>
1000040f:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
10000413:	75 06                	jne    1000041b <strncat(char*, char const*, unsigned long)+0x68>
10000415:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000418:	c6 00 00             	mov    BYTE PTR [eax],0x0
1000041b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000041e:	c9                   	leave  
1000041f:	c3                   	ret    

10000420 <strstr(char*, char*)>:
10000420:	55                   	push   ebp
10000421:	89 e5                	mov    ebp,esp
10000423:	83 ec 10             	sub    esp,0x10
10000426:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10000429:	e8 fc ff ff ff       	call   1000042a <strstr(char*, char*)+0xa>	1000042a: R_386_PC32	strlen
1000042e:	83 c4 04             	add    esp,0x4
10000431:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000434:	83 7d fc 00          	cmp    DWORD PTR [ebp-0x4],0x0
10000438:	75 05                	jne    1000043f <strstr(char*, char*)+0x1f>
1000043a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000043d:	eb 3f                	jmp    1000047e <strstr(char*, char*)+0x5e>
1000043f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000442:	50                   	push   eax
10000443:	e8 fc ff ff ff       	call   10000444 <strstr(char*, char*)+0x24>	10000444: R_386_PC32	strlen
10000448:	83 c4 04             	add    esp,0x4
1000044b:	39 45 fc             	cmp    DWORD PTR [ebp-0x4],eax
1000044e:	77 29                	ja     10000479 <strstr(char*, char*)+0x59>
10000450:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000453:	ff 75 fc             	push   DWORD PTR [ebp-0x4]
10000456:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10000459:	50                   	push   eax
1000045a:	e8 fc ff ff ff       	call   1000045b <strstr(char*, char*)+0x3b>	1000045b: R_386_PC32	memcmp(void*, void*, unsigned long)
1000045f:	83 c4 0c             	add    esp,0xc
10000462:	85 c0                	test   eax,eax
10000464:	0f 94 c0             	sete   al
10000467:	84 c0                	test   al,al
10000469:	74 05                	je     10000470 <strstr(char*, char*)+0x50>
1000046b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000046e:	eb 0e                	jmp    1000047e <strstr(char*, char*)+0x5e>
10000470:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000473:	40                   	inc    eax
10000474:	89 45 08             	mov    DWORD PTR [ebp+0x8],eax
10000477:	eb c6                	jmp    1000043f <strstr(char*, char*)+0x1f>
10000479:	b8 00 00 00 00       	mov    eax,0x0
1000047e:	c9                   	leave  
1000047f:	c3                   	ret    

10000480 <rmtree(char*)>:
10000480:	55                   	push   ebp
10000481:	89 e5                	mov    ebp,esp
10000483:	53                   	push   ebx
10000484:	81 ec 64 02 00 00    	sub    esp,0x264
1000048a:	68 2c 01 00 00       	push   0x12c
1000048f:	6a 00                	push   0x0
10000491:	8d 85 b8 fe ff ff    	lea    eax,[ebp-0x148]
10000497:	50                   	push   eax
10000498:	e8 fc ff ff ff       	call   10000499 <rmtree(char*)+0x19>	10000499: R_386_PC32	memset
1000049d:	83 c4 0c             	add    esp,0xc
100004a0:	8d 85 a8 fd ff ff    	lea    eax,[ebp-0x258]
100004a6:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
100004a9:	83 ec 0c             	sub    esp,0xc
100004ac:	68 14 01 00 00       	push   0x114
100004b1:	e8 fc ff ff ff       	call   100004b2 <rmtree(char*)+0x32>	100004b2: R_386_PC32	operator new(unsigned long)
100004b6:	83 c4 10             	add    esp,0x10
100004b9:	89 c3                	mov    ebx,eax
100004bb:	b8 00 20 00 c2       	mov    eax,0xc2002000
100004c0:	8b 00                	mov    eax,DWORD PTR [eax]
100004c2:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
100004c5:	83 ec 04             	sub    esp,0x4
100004c8:	50                   	push   eax
100004c9:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100004cc:	53                   	push   ebx
100004cd:	e8 fc ff ff ff       	call   100004ce <rmtree(char*)+0x4e>	100004ce: R_386_PC32	Directory::Directory(char const*, Process*)
100004d2:	83 c4 10             	add    esp,0x10
100004d5:	89 5d f0             	mov    DWORD PTR [ebp-0x10],ebx
100004d8:	83 ec 0c             	sub    esp,0xc
100004db:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100004de:	e8 fc ff ff ff       	call   100004df <rmtree(char*)+0x5f>	100004df: R_386_PC32	Directory::open()
100004e3:	83 c4 10             	add    esp,0x10
100004e6:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
100004e9:	83 7d ec 00          	cmp    DWORD PTR [ebp-0x14],0x0
100004ed:	74 24                	je     10000513 <rmtree(char*)+0x93>
100004ef:	83 7d f0 00          	cmp    DWORD PTR [ebp-0x10],0x0
100004f3:	0f 84 8b 01 00 00    	je     10000684 <rmtree(char*)+0x204>
100004f9:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100004fc:	8b 00                	mov    eax,DWORD PTR [eax]
100004fe:	83 c0 08             	add    eax,0x8
10000501:	8b 00                	mov    eax,DWORD PTR [eax]
10000503:	83 ec 0c             	sub    esp,0xc
10000506:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000509:	ff d0                	call   eax
1000050b:	83 c4 10             	add    esp,0x10
1000050e:	e9 72 01 00 00       	jmp    10000685 <rmtree(char*)+0x205>
10000513:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000516:	8b 00                	mov    eax,DWORD PTR [eax]
10000518:	83 c0 0c             	add    eax,0xc
1000051b:	8b 00                	mov    eax,DWORD PTR [eax]
1000051d:	83 ec 0c             	sub    esp,0xc
10000520:	8d 95 a4 fd ff ff    	lea    edx,[ebp-0x25c]
10000526:	52                   	push   edx
10000527:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000052a:	6a 00                	push   0x0
1000052c:	68 10 01 00 00       	push   0x110
10000531:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000534:	ff d0                	call   eax
10000536:	83 c4 20             	add    esp,0x20
10000539:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
1000053c:	83 7d e8 00          	cmp    DWORD PTR [ebp-0x18],0x0
10000540:	0f 85 04 01 00 00    	jne    1000064a <rmtree(char*)+0x1ca>
10000546:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000549:	83 c0 10             	add    eax,0x10
1000054c:	83 ec 08             	sub    esp,0x8
1000054f:	68 e0 b8 00 10       	push   0x1000b8e0	10000550: R_386_32	.text
10000554:	50                   	push   eax
10000555:	e8 fc ff ff ff       	call   10000556 <rmtree(char*)+0xd6>	10000556: R_386_PC32	strcmp
1000055a:	83 c4 10             	add    esp,0x10
1000055d:	85 c0                	test   eax,eax
1000055f:	74 b2                	je     10000513 <rmtree(char*)+0x93>
10000561:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000564:	83 c0 10             	add    eax,0x10
10000567:	83 ec 08             	sub    esp,0x8
1000056a:	68 e2 b8 00 10       	push   0x1000b8e2	1000056b: R_386_32	.text
1000056f:	50                   	push   eax
10000570:	e8 fc ff ff ff       	call   10000571 <rmtree(char*)+0xf1>	10000571: R_386_PC32	strcmp
10000575:	83 c4 10             	add    esp,0x10
10000578:	85 c0                	test   eax,eax
1000057a:	74 97                	je     10000513 <rmtree(char*)+0x93>
1000057c:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000057f:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000582:	83 e0 02             	and    eax,0x2
10000585:	85 c0                	test   eax,eax
10000587:	74 17                	je     100005a0 <rmtree(char*)+0x120>
10000589:	83 ec 0c             	sub    esp,0xc
1000058c:	8d 85 b8 fe ff ff    	lea    eax,[ebp-0x148]
10000592:	50                   	push   eax
10000593:	e8 fc ff ff ff       	call   10000594 <rmtree(char*)+0x114>	10000594: R_386_PC32	rmtree(char*)
10000598:	83 c4 10             	add    esp,0x10
1000059b:	e9 73 ff ff ff       	jmp    10000513 <rmtree(char*)+0x93>
100005a0:	83 ec 08             	sub    esp,0x8
100005a3:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100005a6:	8d 85 b8 fe ff ff    	lea    eax,[ebp-0x148]
100005ac:	50                   	push   eax
100005ad:	e8 fc ff ff ff       	call   100005ae <rmtree(char*)+0x12e>	100005ae: R_386_PC32	strcpy
100005b2:	83 c4 10             	add    esp,0x10
100005b5:	83 ec 08             	sub    esp,0x8
100005b8:	68 e5 b8 00 10       	push   0x1000b8e5	100005b9: R_386_32	.text
100005bd:	8d 85 b8 fe ff ff    	lea    eax,[ebp-0x148]
100005c3:	50                   	push   eax
100005c4:	e8 fc ff ff ff       	call   100005c5 <rmtree(char*)+0x145>	100005c5: R_386_PC32	strcat
100005c9:	83 c4 10             	add    esp,0x10
100005cc:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
100005cf:	83 c0 10             	add    eax,0x10
100005d2:	83 ec 08             	sub    esp,0x8
100005d5:	50                   	push   eax
100005d6:	8d 85 b8 fe ff ff    	lea    eax,[ebp-0x148]
100005dc:	50                   	push   eax
100005dd:	e8 fc ff ff ff       	call   100005de <rmtree(char*)+0x15e>	100005de: R_386_PC32	strcat
100005e2:	83 c4 10             	add    esp,0x10
100005e5:	83 ec 0c             	sub    esp,0xc
100005e8:	68 14 01 00 00       	push   0x114
100005ed:	e8 fc ff ff ff       	call   100005ee <rmtree(char*)+0x16e>	100005ee: R_386_PC32	operator new(unsigned long)
100005f2:	83 c4 10             	add    esp,0x10
100005f5:	89 c3                	mov    ebx,eax
100005f7:	b8 00 20 00 c2       	mov    eax,0xc2002000
100005fc:	8b 00                	mov    eax,DWORD PTR [eax]
100005fe:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
10000601:	83 ec 04             	sub    esp,0x4
10000604:	50                   	push   eax
10000605:	8d 85 b8 fe ff ff    	lea    eax,[ebp-0x148]
1000060b:	50                   	push   eax
1000060c:	53                   	push   ebx
1000060d:	e8 fc ff ff ff       	call   1000060e <rmtree(char*)+0x18e>	1000060e: R_386_PC32	File::File(char const*, Process*)
10000612:	83 c4 10             	add    esp,0x10
10000615:	89 5d e4             	mov    DWORD PTR [ebp-0x1c],ebx
10000618:	83 ec 0c             	sub    esp,0xc
1000061b:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
1000061e:	e8 fc ff ff ff       	call   1000061f <rmtree(char*)+0x19f>	1000061f: R_386_PC32	File::unlink()
10000623:	83 c4 10             	add    esp,0x10
10000626:	83 7d e4 00          	cmp    DWORD PTR [ebp-0x1c],0x0
1000062a:	0f 84 e3 fe ff ff    	je     10000513 <rmtree(char*)+0x93>
10000630:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000633:	8b 00                	mov    eax,DWORD PTR [eax]
10000635:	83 c0 08             	add    eax,0x8
10000638:	8b 00                	mov    eax,DWORD PTR [eax]
1000063a:	83 ec 0c             	sub    esp,0xc
1000063d:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10000640:	ff d0                	call   eax
10000642:	83 c4 10             	add    esp,0x10
10000645:	e9 c9 fe ff ff       	jmp    10000513 <rmtree(char*)+0x93>
1000064a:	90                   	nop
1000064b:	83 ec 0c             	sub    esp,0xc
1000064e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000651:	e8 fc ff ff ff       	call   10000652 <rmtree(char*)+0x1d2>	10000652: R_386_PC32	Directory::close()
10000656:	83 c4 10             	add    esp,0x10
10000659:	83 ec 0c             	sub    esp,0xc
1000065c:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
1000065f:	e8 fc ff ff ff       	call   10000660 <rmtree(char*)+0x1e0>	10000660: R_386_PC32	Directory::unlink()
10000664:	83 c4 10             	add    esp,0x10
10000667:	83 7d f0 00          	cmp    DWORD PTR [ebp-0x10],0x0
1000066b:	74 18                	je     10000685 <rmtree(char*)+0x205>
1000066d:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000670:	8b 00                	mov    eax,DWORD PTR [eax]
10000672:	83 c0 08             	add    eax,0x8
10000675:	8b 00                	mov    eax,DWORD PTR [eax]
10000677:	83 ec 0c             	sub    esp,0xc
1000067a:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
1000067d:	ff d0                	call   eax
1000067f:	83 c4 10             	add    esp,0x10
10000682:	eb 01                	jmp    10000685 <rmtree(char*)+0x205>
10000684:	90                   	nop
10000685:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000688:	c9                   	leave  
10000689:	c3                   	ret    

1000068a <mkdir(char const*, int)>:
1000068a:	55                   	push   ebp
1000068b:	89 e5                	mov    ebp,esp
1000068d:	53                   	push   ebx
1000068e:	83 ec 14             	sub    esp,0x14
10000691:	83 ec 0c             	sub    esp,0xc
10000694:	68 14 01 00 00       	push   0x114
10000699:	e8 fc ff ff ff       	call   1000069a <mkdir(char const*, int)+0x10>	1000069a: R_386_PC32	operator new(unsigned long)
1000069e:	83 c4 10             	add    esp,0x10
100006a1:	89 c3                	mov    ebx,eax
100006a3:	a1 00 00 00 00       	mov    eax,ds:0x0	100006a4: R_386_32	kernelProcess
100006a8:	83 ec 04             	sub    esp,0x4
100006ab:	50                   	push   eax
100006ac:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100006af:	53                   	push   ebx
100006b0:	e8 fc ff ff ff       	call   100006b1 <mkdir(char const*, int)+0x27>	100006b1: R_386_PC32	Directory::Directory(char const*, Process*)
100006b5:	83 c4 10             	add    esp,0x10
100006b8:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006bb:	83 ec 0c             	sub    esp,0xc
100006be:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c1:	e8 fc ff ff ff       	call   100006c2 <mkdir(char const*, int)+0x38>	100006c2: R_386_PC32	Directory::create()
100006c6:	83 c4 10             	add    esp,0x10
100006c9:	83 7d f4 00          	cmp    DWORD PTR [ebp-0xc],0x0
100006cd:	74 15                	je     100006e4 <mkdir(char const*, int)+0x5a>
100006cf:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
100006d2:	8b 00                	mov    eax,DWORD PTR [eax]
100006d4:	83 c0 08             	add    eax,0x8
100006d7:	8b 00                	mov    eax,DWORD PTR [eax]
100006d9:	83 ec 0c             	sub    esp,0xc
100006dc:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006df:	ff d0                	call   eax
100006e1:	83 c4 10             	add    esp,0x10
100006e4:	b8 00 00 00 00       	mov    eax,0x0
100006e9:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006ec:	c9                   	leave  
100006ed:	c3                   	ret    

100006ee <copytree(char*, char*)>:
100006ee:	55                   	push   ebp
100006ef:	89 e5                	mov    ebp,esp
100006f1:	53                   	push   ebx
100006f2:	81 ec 54 01 00 00    	sub    esp,0x154
100006f8:	83 ec 0c             	sub    esp,0xc
100006fb:	68 90 01 00 00       	push   0x190
10000700:	e8 fc ff ff ff       	call   10000701 <copytree(char*, char*)+0x13>	10000701: R_386_PC32	malloc
10000705:	83 c4 10             	add    esp,0x10
10000708:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
1000070b:	83 ec 0c             	sub    esp,0xc
1000070e:	68 90 01 00 00       	push   0x190
10000713:	e8 fc ff ff ff       	call   10000714 <copytree(char*, char*)+0x26>	10000714: R_386_PC32	malloc
10000718:	83 c4 10             	add    esp,0x10
1000071b:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
1000071e:	83 ec 04             	sub    esp,0x4
10000721:	68 90 01 00 00       	push   0x190
10000726:	6a 00                	push   0x0
10000728:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000072b:	e8 fc ff ff ff       	call   1000072c <copytree(char*, char*)+0x3e>	1000072c: R_386_PC32	memset
10000730:	83 c4 10             	add    esp,0x10
10000733:	83 ec 04             	sub    esp,0x4
10000736:	68 90 01 00 00       	push   0x190
1000073b:	6a 00                	push   0x0
1000073d:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000740:	e8 fc ff ff ff       	call   10000741 <copytree(char*, char*)+0x53>	10000741: R_386_PC32	memset
10000745:	83 c4 10             	add    esp,0x10
10000748:	8d 85 bc fe ff ff    	lea    eax,[ebp-0x144]
1000074e:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000751:	83 ec 0c             	sub    esp,0xc
10000754:	68 14 01 00 00       	push   0x114
10000759:	e8 fc ff ff ff       	call   1000075a <copytree(char*, char*)+0x6c>	1000075a: R_386_PC32	operator new(unsigned long)
1000075e:	83 c4 10             	add    esp,0x10
10000761:	89 c3                	mov    ebx,eax
10000763:	b8 00 20 00 c2       	mov    eax,0xc2002000
10000768:	8b 00                	mov    eax,DWORD PTR [eax]
1000076a:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
1000076d:	83 ec 04             	sub    esp,0x4
10000770:	50                   	push   eax
10000771:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000774:	53                   	push   ebx
10000775:	e8 fc ff ff ff       	call   10000776 <copytree(char*, char*)+0x88>	10000776: R_386_PC32	Directory::Directory(char const*, Process*)
1000077a:	83 c4 10             	add    esp,0x10
1000077d:	89 5d e8             	mov    DWORD PTR [ebp-0x18],ebx
10000780:	83 ec 0c             	sub    esp,0xc
10000783:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
10000786:	e8 fc ff ff ff       	call   10000787 <copytree(char*, char*)+0x99>	10000787: R_386_PC32	Directory::open()
1000078b:	83 c4 10             	add    esp,0x10
1000078e:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10000791:	83 7d e4 00          	cmp    DWORD PTR [ebp-0x1c],0x0
10000795:	74 34                	je     100007cb <copytree(char*, char*)+0xdd>
10000797:	83 ec 0c             	sub    esp,0xc
1000079a:	68 e7 b8 00 10       	push   0x1000b8e7	1000079b: R_386_32	.text
1000079f:	e8 fc ff ff ff       	call   100007a0 <copytree(char*, char*)+0xb2>	100007a0: R_386_PC32	Dbg::kprintf(char const*, ...)
100007a4:	83 c4 10             	add    esp,0x10
100007a7:	83 7d e8 00          	cmp    DWORD PTR [ebp-0x18],0x0
100007ab:	0f 84 90 03 00 00    	je     10000b41 <copytree(char*, char*)+0x453>
100007b1:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
100007b4:	8b 00                	mov    eax,DWORD PTR [eax]
100007b6:	83 c0 08             	add    eax,0x8
100007b9:	8b 00                	mov    eax,DWORD PTR [eax]
100007bb:	83 ec 0c             	sub    esp,0xc
100007be:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
100007c1:	ff d0                	call   eax
100007c3:	83 c4 10             	add    esp,0x10
100007c6:	e9 76 03 00 00       	jmp    10000b41 <copytree(char*, char*)+0x453>
100007cb:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
100007ce:	8b 00                	mov    eax,DWORD PTR [eax]
100007d0:	83 c0 0c             	add    eax,0xc
100007d3:	8b 00                	mov    eax,DWORD PTR [eax]
100007d5:	83 ec 0c             	sub    esp,0xc
100007d8:	8d 95 b8 fe ff ff    	lea    edx,[ebp-0x148]
100007de:	52                   	push   edx
100007df:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
100007e2:	6a 00                	push   0x0
100007e4:	68 10 01 00 00       	push   0x110
100007e9:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
100007ec:	ff d0                	call   eax
100007ee:	83 c4 20             	add    esp,0x20
100007f1:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
100007f4:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
100007f8:	0f 85 fb 02 00 00    	jne    10000af9 <copytree(char*, char*)+0x40b>
100007fe:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000801:	83 c0 10             	add    eax,0x10
10000804:	83 ec 08             	sub    esp,0x8
10000807:	68 e0 b8 00 10       	push   0x1000b8e0	10000808: R_386_32	.text
1000080c:	50                   	push   eax
1000080d:	e8 fc ff ff ff       	call   1000080e <copytree(char*, char*)+0x120>	1000080e: R_386_PC32	strcmp
10000812:	83 c4 10             	add    esp,0x10
10000815:	85 c0                	test   eax,eax
10000817:	74 b2                	je     100007cb <copytree(char*, char*)+0xdd>
10000819:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
1000081c:	83 c0 10             	add    eax,0x10
1000081f:	83 ec 08             	sub    esp,0x8
10000822:	68 e2 b8 00 10       	push   0x1000b8e2	10000823: R_386_32	.text
10000827:	50                   	push   eax
10000828:	e8 fc ff ff ff       	call   10000829 <copytree(char*, char*)+0x13b>	10000829: R_386_PC32	strcmp
1000082d:	83 c4 10             	add    esp,0x10
10000830:	85 c0                	test   eax,eax
10000832:	74 97                	je     100007cb <copytree(char*, char*)+0xdd>
10000834:	83 ec 08             	sub    esp,0x8
10000837:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000083a:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000083d:	e8 fc ff ff ff       	call   1000083e <copytree(char*, char*)+0x150>	1000083e: R_386_PC32	strcpy
10000842:	83 c4 10             	add    esp,0x10
10000845:	83 ec 08             	sub    esp,0x8
10000848:	68 e5 b8 00 10       	push   0x1000b8e5	10000849: R_386_32	.text
1000084d:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000850:	e8 fc ff ff ff       	call   10000851 <copytree(char*, char*)+0x163>	10000851: R_386_PC32	strcat
10000855:	83 c4 10             	add    esp,0x10
10000858:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
1000085b:	83 c0 10             	add    eax,0x10
1000085e:	83 ec 08             	sub    esp,0x8
10000861:	50                   	push   eax
10000862:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000865:	e8 fc ff ff ff       	call   10000866 <copytree(char*, char*)+0x178>	10000866: R_386_PC32	strcat
1000086a:	83 c4 10             	add    esp,0x10
1000086d:	83 ec 08             	sub    esp,0x8
10000870:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10000873:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000876:	e8 fc ff ff ff       	call   10000877 <copytree(char*, char*)+0x189>	10000877: R_386_PC32	strcpy
1000087b:	83 c4 10             	add    esp,0x10
1000087e:	83 ec 08             	sub    esp,0x8
10000881:	68 e5 b8 00 10       	push   0x1000b8e5	10000882: R_386_32	.text
10000886:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000889:	e8 fc ff ff ff       	call   1000088a <copytree(char*, char*)+0x19c>	1000088a: R_386_PC32	strcat
1000088e:	83 c4 10             	add    esp,0x10
10000891:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000894:	83 c0 10             	add    eax,0x10
10000897:	83 ec 08             	sub    esp,0x8
1000089a:	50                   	push   eax
1000089b:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
1000089e:	e8 fc ff ff ff       	call   1000089f <copytree(char*, char*)+0x1b1>	1000089f: R_386_PC32	strcat
100008a3:	83 c4 10             	add    esp,0x10
100008a6:	83 ec 04             	sub    esp,0x4
100008a9:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100008ac:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100008af:	68 01 b9 00 10       	push   0x1000b901	100008b0: R_386_32	.text
100008b4:	e8 fc ff ff ff       	call   100008b5 <copytree(char*, char*)+0x1c7>	100008b5: R_386_PC32	Dbg::kprintf(char const*, ...)
100008b9:	83 c4 10             	add    esp,0x10
100008bc:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100008bf:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
100008c2:	83 e0 02             	and    eax,0x2
100008c5:	85 c0                	test   eax,eax
100008c7:	74 47                	je     10000910 <copytree(char*, char*)+0x222>
100008c9:	83 ec 08             	sub    esp,0x8
100008cc:	68 c0 01 00 00       	push   0x1c0
100008d1:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100008d4:	e8 fc ff ff ff       	call   100008d5 <copytree(char*, char*)+0x1e7>	100008d5: R_386_PC32	mkdir(char const*, int)
100008d9:	83 c4 10             	add    esp,0x10
100008dc:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
100008df:	83 7d dc 00          	cmp    DWORD PTR [ebp-0x24],0x0
100008e3:	74 15                	je     100008fa <copytree(char*, char*)+0x20c>
100008e5:	83 ec 0c             	sub    esp,0xc
100008e8:	68 0b b9 00 10       	push   0x1000b90b	100008e9: R_386_32	.text
100008ed:	e8 fc ff ff ff       	call   100008ee <copytree(char*, char*)+0x200>	100008ee: R_386_PC32	KePanic(char const*)
100008f2:	83 c4 10             	add    esp,0x10
100008f5:	e9 d1 fe ff ff       	jmp    100007cb <copytree(char*, char*)+0xdd>
100008fa:	83 ec 08             	sub    esp,0x8
100008fd:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000900:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000903:	e8 fc ff ff ff       	call   10000904 <copytree(char*, char*)+0x216>	10000904: R_386_PC32	copytree(char*, char*)
10000908:	83 c4 10             	add    esp,0x10
1000090b:	e9 bb fe ff ff       	jmp    100007cb <copytree(char*, char*)+0xdd>
10000910:	83 ec 0c             	sub    esp,0xc
10000913:	68 14 01 00 00       	push   0x114
10000918:	e8 fc ff ff ff       	call   10000919 <copytree(char*, char*)+0x22b>	10000919: R_386_PC32	operator new(unsigned long)
1000091d:	83 c4 10             	add    esp,0x10
10000920:	89 c3                	mov    ebx,eax
10000922:	b8 00 20 00 c2       	mov    eax,0xc2002000
10000927:	8b 00                	mov    eax,DWORD PTR [eax]
10000929:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
1000092c:	83 ec 04             	sub    esp,0x4
1000092f:	50                   	push   eax
10000930:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000933:	53                   	push   ebx
10000934:	e8 fc ff ff ff       	call   10000935 <copytree(char*, char*)+0x247>	10000935: R_386_PC32	File::File(char const*, Process*)
10000939:	83 c4 10             	add    esp,0x10
1000093c:	89 5d d8             	mov    DWORD PTR [ebp-0x28],ebx
1000093f:	83 ec 08             	sub    esp,0x8
10000942:	6a 01                	push   0x1
10000944:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000947:	e8 fc ff ff ff       	call   10000948 <copytree(char*, char*)+0x25a>	10000948: R_386_PC32	File::open(FileOpenMode)
1000094c:	83 c4 10             	add    esp,0x10
1000094f:	83 7d d8 00          	cmp    DWORD PTR [ebp-0x28],0x0
10000953:	75 15                	jne    1000096a <copytree(char*, char*)+0x27c>
10000955:	83 ec 0c             	sub    esp,0xc
10000958:	68 1c b9 00 10       	push   0x1000b91c	10000959: R_386_32	.text
1000095d:	e8 fc ff ff ff       	call   1000095e <copytree(char*, char*)+0x270>	1000095e: R_386_PC32	KePanic(char const*)
10000962:	83 c4 10             	add    esp,0x10
10000965:	e9 8a 01 00 00       	jmp    10000af4 <copytree(char*, char*)+0x406>
1000096a:	83 7d d8 00          	cmp    DWORD PTR [ebp-0x28],0x0
1000096e:	0f 84 57 fe ff ff    	je     100007cb <copytree(char*, char*)+0xdd>
10000974:	83 ec 0c             	sub    esp,0xc
10000977:	68 14 01 00 00       	push   0x114
1000097c:	e8 fc ff ff ff       	call   1000097d <copytree(char*, char*)+0x28f>	1000097d: R_386_PC32	operator new(unsigned long)
10000981:	83 c4 10             	add    esp,0x10
10000984:	89 c3                	mov    ebx,eax
10000986:	b8 00 20 00 c2       	mov    eax,0xc2002000
1000098b:	8b 00                	mov    eax,DWORD PTR [eax]
1000098d:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
10000990:	83 ec 04             	sub    esp,0x4
10000993:	50                   	push   eax
10000994:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000997:	53                   	push   ebx
10000998:	e8 fc ff ff ff       	call   10000999 <copytree(char*, char*)+0x2ab>	10000999: R_386_PC32	File::File(char const*, Process*)
1000099d:	83 c4 10             	add    esp,0x10
100009a0:	89 5d d4             	mov    DWORD PTR [ebp-0x2c],ebx
100009a3:	83 ec 08             	sub    esp,0x8
100009a6:	6a 12                	push   0x12
100009a8:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
100009ab:	e8 fc ff ff ff       	call   100009ac <copytree(char*, char*)+0x2be>	100009ac: R_386_PC32	File::open(FileOpenMode)
100009b0:	83 c4 10             	add    esp,0x10
100009b3:	83 7d d4 00          	cmp    DWORD PTR [ebp-0x2c],0x0
100009b7:	75 23                	jne    100009dc <copytree(char*, char*)+0x2ee>
100009b9:	83 ec 0c             	sub    esp,0xc
100009bc:	68 1c b9 00 10       	push   0x1000b91c	100009bd: R_386_32	.text
100009c1:	e8 fc ff ff ff       	call   100009c2 <copytree(char*, char*)+0x2d4>	100009c2: R_386_PC32	KePanic(char const*)
100009c6:	83 c4 10             	add    esp,0x10
100009c9:	83 ec 0c             	sub    esp,0xc
100009cc:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
100009cf:	e8 fc ff ff ff       	call   100009d0 <copytree(char*, char*)+0x2e2>	100009d0: R_386_PC32	File::close()
100009d4:	83 c4 10             	add    esp,0x10
100009d7:	e9 18 01 00 00       	jmp    10000af4 <copytree(char*, char*)+0x406>
100009dc:	83 ec 0c             	sub    esp,0xc
100009df:	68 00 10 00 00       	push   0x1000
100009e4:	e8 fc ff ff ff       	call   100009e5 <copytree(char*, char*)+0x2f7>	100009e5: R_386_PC32	malloc
100009e9:	83 c4 10             	add    esp,0x10
100009ec:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100009ef:	83 7d d0 00          	cmp    DWORD PTR [ebp-0x30],0x0
100009f3:	75 31                	jne    10000a26 <copytree(char*, char*)+0x338>
100009f5:	83 ec 0c             	sub    esp,0xc
100009f8:	68 2b b9 00 10       	push   0x1000b92b	100009f9: R_386_32	.text
100009fd:	e8 fc ff ff ff       	call   100009fe <copytree(char*, char*)+0x310>	100009fe: R_386_PC32	KePanic(char const*)
10000a02:	83 c4 10             	add    esp,0x10
10000a05:	83 ec 0c             	sub    esp,0xc
10000a08:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000a0b:	e8 fc ff ff ff       	call   10000a0c <copytree(char*, char*)+0x31e>	10000a0c: R_386_PC32	free
10000a10:	83 c4 10             	add    esp,0x10
10000a13:	83 ec 0c             	sub    esp,0xc
10000a16:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000a19:	e8 fc ff ff ff       	call   10000a1a <copytree(char*, char*)+0x32c>	10000a1a: R_386_PC32	free
10000a1e:	83 c4 10             	add    esp,0x10
10000a21:	e9 1c 01 00 00       	jmp    10000b42 <copytree(char*, char*)+0x454>
10000a26:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10000a29:	8b 00                	mov    eax,DWORD PTR [eax]
10000a2b:	83 c0 0c             	add    eax,0xc
10000a2e:	8b 00                	mov    eax,DWORD PTR [eax]
10000a30:	83 ec 0c             	sub    esp,0xc
10000a33:	8d 95 b4 fe ff ff    	lea    edx,[ebp-0x14c]
10000a39:	52                   	push   edx
10000a3a:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10000a3d:	6a 00                	push   0x0
10000a3f:	68 00 10 00 00       	push   0x1000
10000a44:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000a47:	ff d0                	call   eax
10000a49:	83 c4 20             	add    esp,0x20
10000a4c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10000a4f:	83 7d cc 00          	cmp    DWORD PTR [ebp-0x34],0x0
10000a53:	75 37                	jne    10000a8c <copytree(char*, char*)+0x39e>
10000a55:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000a58:	8b 00                	mov    eax,DWORD PTR [eax]
10000a5a:	83 c0 10             	add    eax,0x10
10000a5d:	8b 08                	mov    ecx,DWORD PTR [eax]
10000a5f:	8b 85 b4 fe ff ff    	mov    eax,DWORD PTR [ebp-0x14c]
10000a65:	99                   	cdq    
10000a66:	83 ec 0c             	sub    esp,0xc
10000a69:	8d 9d b0 fe ff ff    	lea    ebx,[ebp-0x150]
10000a6f:	53                   	push   ebx
10000a70:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10000a73:	52                   	push   edx
10000a74:	50                   	push   eax
10000a75:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
10000a78:	ff d1                	call   ecx
10000a7a:	83 c4 20             	add    esp,0x20
10000a7d:	8b 85 b4 fe ff ff    	mov    eax,DWORD PTR [ebp-0x14c]
10000a83:	3d 00 10 00 00       	cmp    eax,0x1000
10000a88:	75 05                	jne    10000a8f <copytree(char*, char*)+0x3a1>
10000a8a:	eb 9a                	jmp    10000a26 <copytree(char*, char*)+0x338>
10000a8c:	90                   	nop
10000a8d:	eb 01                	jmp    10000a90 <copytree(char*, char*)+0x3a2>
10000a8f:	90                   	nop
10000a90:	83 ec 0c             	sub    esp,0xc
10000a93:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10000a96:	e8 fc ff ff ff       	call   10000a97 <copytree(char*, char*)+0x3a9>	10000a97: R_386_PC32	free
10000a9b:	83 c4 10             	add    esp,0x10
10000a9e:	83 ec 0c             	sub    esp,0xc
10000aa1:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000aa4:	e8 fc ff ff ff       	call   10000aa5 <copytree(char*, char*)+0x3b7>	10000aa5: R_386_PC32	File::close()
10000aa9:	83 c4 10             	add    esp,0x10
10000aac:	83 ec 0c             	sub    esp,0xc
10000aaf:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
10000ab2:	e8 fc ff ff ff       	call   10000ab3 <copytree(char*, char*)+0x3c5>	10000ab3: R_386_PC32	File::close()
10000ab7:	83 c4 10             	add    esp,0x10
10000aba:	83 7d d8 00          	cmp    DWORD PTR [ebp-0x28],0x0
10000abe:	74 15                	je     10000ad5 <copytree(char*, char*)+0x3e7>
10000ac0:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10000ac3:	8b 00                	mov    eax,DWORD PTR [eax]
10000ac5:	83 c0 08             	add    eax,0x8
10000ac8:	8b 00                	mov    eax,DWORD PTR [eax]
10000aca:	83 ec 0c             	sub    esp,0xc
10000acd:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000ad0:	ff d0                	call   eax
10000ad2:	83 c4 10             	add    esp,0x10
10000ad5:	83 7d d4 00          	cmp    DWORD PTR [ebp-0x2c],0x0
10000ad9:	0f 84 ec fc ff ff    	je     100007cb <copytree(char*, char*)+0xdd>
10000adf:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000ae2:	8b 00                	mov    eax,DWORD PTR [eax]
10000ae4:	83 c0 08             	add    eax,0x8
10000ae7:	8b 00                	mov    eax,DWORD PTR [eax]
10000ae9:	83 ec 0c             	sub    esp,0xc
10000aec:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
10000aef:	ff d0                	call   eax
10000af1:	83 c4 10             	add    esp,0x10
10000af4:	e9 d2 fc ff ff       	jmp    100007cb <copytree(char*, char*)+0xdd>
10000af9:	90                   	nop
10000afa:	83 ec 0c             	sub    esp,0xc
10000afd:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000b00:	e8 fc ff ff ff       	call   10000b01 <copytree(char*, char*)+0x413>	10000b01: R_386_PC32	free
10000b05:	83 c4 10             	add    esp,0x10
10000b08:	83 ec 0c             	sub    esp,0xc
10000b0b:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000b0e:	e8 fc ff ff ff       	call   10000b0f <copytree(char*, char*)+0x421>	10000b0f: R_386_PC32	free
10000b13:	83 c4 10             	add    esp,0x10
10000b16:	83 ec 0c             	sub    esp,0xc
10000b19:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
10000b1c:	e8 fc ff ff ff       	call   10000b1d <copytree(char*, char*)+0x42f>	10000b1d: R_386_PC32	Directory::close()
10000b21:	83 c4 10             	add    esp,0x10
10000b24:	83 7d e8 00          	cmp    DWORD PTR [ebp-0x18],0x0
10000b28:	74 18                	je     10000b42 <copytree(char*, char*)+0x454>
10000b2a:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
10000b2d:	8b 00                	mov    eax,DWORD PTR [eax]
10000b2f:	83 c0 08             	add    eax,0x8
10000b32:	8b 00                	mov    eax,DWORD PTR [eax]
10000b34:	83 ec 0c             	sub    esp,0xc
10000b37:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
10000b3a:	ff d0                	call   eax
10000b3c:	83 c4 10             	add    esp,0x10
10000b3f:	eb 01                	jmp    10000b42 <copytree(char*, char*)+0x454>
10000b41:	90                   	nop
10000b42:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000b45:	c9                   	leave  
10000b46:	c3                   	ret    

10000b47 <backupTree(char*, unsigned short)>:
10000b47:	55                   	push   ebp
10000b48:	89 e5                	mov    ebp,esp
10000b4a:	57                   	push   edi
10000b4b:	56                   	push   esi
10000b4c:	53                   	push   ebx
10000b4d:	81 ec 8c 12 00 00    	sub    esp,0x128c
10000b53:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000b56:	66 89 85 74 ed ff ff 	mov    WORD PTR [ebp-0x128c],ax
10000b5d:	83 ec 0c             	sub    esp,0xc
10000b60:	68 90 01 00 00       	push   0x190
10000b65:	e8 fc ff ff ff       	call   10000b66 <backupTree(char*, unsigned short)+0x1f>	10000b66: R_386_PC32	malloc
10000b6a:	83 c4 10             	add    esp,0x10
10000b6d:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10000b70:	83 ec 04             	sub    esp,0x4
10000b73:	68 90 01 00 00       	push   0x190
10000b78:	6a 00                	push   0x0
10000b7a:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000b7d:	e8 fc ff ff ff       	call   10000b7e <backupTree(char*, unsigned short)+0x37>	10000b7e: R_386_PC32	memset
10000b82:	83 c4 10             	add    esp,0x10
10000b85:	8d 85 a8 fe ff ff    	lea    eax,[ebp-0x158]
10000b8b:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
10000b8e:	83 ec 0c             	sub    esp,0xc
10000b91:	68 14 01 00 00       	push   0x114
10000b96:	e8 fc ff ff ff       	call   10000b97 <backupTree(char*, unsigned short)+0x50>	10000b97: R_386_PC32	operator new(unsigned long)
10000b9b:	83 c4 10             	add    esp,0x10
10000b9e:	89 c3                	mov    ebx,eax
10000ba0:	b8 00 20 00 c2       	mov    eax,0xc2002000
10000ba5:	8b 00                	mov    eax,DWORD PTR [eax]
10000ba7:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
10000baa:	83 ec 04             	sub    esp,0x4
10000bad:	50                   	push   eax
10000bae:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000bb1:	53                   	push   ebx
10000bb2:	e8 fc ff ff ff       	call   10000bb3 <backupTree(char*, unsigned short)+0x6c>	10000bb3: R_386_PC32	Directory::Directory(char const*, Process*)
10000bb7:	83 c4 10             	add    esp,0x10
10000bba:	89 5d d0             	mov    DWORD PTR [ebp-0x30],ebx
10000bbd:	83 ec 0c             	sub    esp,0xc
10000bc0:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10000bc3:	e8 fc ff ff ff       	call   10000bc4 <backupTree(char*, unsigned short)+0x7d>	10000bc4: R_386_PC32	Directory::open()
10000bc8:	83 c4 10             	add    esp,0x10
10000bcb:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10000bce:	83 7d cc 00          	cmp    DWORD PTR [ebp-0x34],0x0
10000bd2:	74 34                	je     10000c08 <backupTree(char*, unsigned short)+0xc1>
10000bd4:	83 ec 0c             	sub    esp,0xc
10000bd7:	68 e7 b8 00 10       	push   0x1000b8e7	10000bd8: R_386_32	.text
10000bdc:	e8 fc ff ff ff       	call   10000bdd <backupTree(char*, unsigned short)+0x96>	10000bdd: R_386_PC32	Dbg::kprintf(char const*, ...)
10000be1:	83 c4 10             	add    esp,0x10
10000be4:	83 7d d0 00          	cmp    DWORD PTR [ebp-0x30],0x0
10000be8:	0f 84 c8 05 00 00    	je     100011b6 <backupTree(char*, unsigned short)+0x66f>
10000bee:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10000bf1:	8b 00                	mov    eax,DWORD PTR [eax]
10000bf3:	83 c0 08             	add    eax,0x8
10000bf6:	8b 00                	mov    eax,DWORD PTR [eax]
10000bf8:	83 ec 0c             	sub    esp,0xc
10000bfb:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10000bfe:	ff d0                	call   eax
10000c00:	83 c4 10             	add    esp,0x10
10000c03:	e9 af 05 00 00       	jmp    100011b7 <backupTree(char*, unsigned short)+0x670>
10000c08:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10000c0b:	8b 00                	mov    eax,DWORD PTR [eax]
10000c0d:	83 c0 0c             	add    eax,0xc
10000c10:	8b 00                	mov    eax,DWORD PTR [eax]
10000c12:	83 ec 0c             	sub    esp,0xc
10000c15:	8d 95 a4 fe ff ff    	lea    edx,[ebp-0x15c]
10000c1b:	52                   	push   edx
10000c1c:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
10000c1f:	6a 00                	push   0x0
10000c21:	68 10 01 00 00       	push   0x110
10000c26:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10000c29:	ff d0                	call   eax
10000c2b:	83 c4 20             	add    esp,0x20
10000c2e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10000c31:	83 7d c8 00          	cmp    DWORD PTR [ebp-0x38],0x0
10000c35:	0f 85 41 05 00 00    	jne    1000117c <backupTree(char*, unsigned short)+0x635>
10000c3b:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000c3e:	83 c0 10             	add    eax,0x10
10000c41:	83 ec 08             	sub    esp,0x8
10000c44:	68 e0 b8 00 10       	push   0x1000b8e0	10000c45: R_386_32	.text
10000c49:	50                   	push   eax
10000c4a:	e8 fc ff ff ff       	call   10000c4b <backupTree(char*, unsigned short)+0x104>	10000c4b: R_386_PC32	strcmp
10000c4f:	83 c4 10             	add    esp,0x10
10000c52:	85 c0                	test   eax,eax
10000c54:	74 b2                	je     10000c08 <backupTree(char*, unsigned short)+0xc1>
10000c56:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000c59:	83 c0 10             	add    eax,0x10
10000c5c:	83 ec 08             	sub    esp,0x8
10000c5f:	68 e2 b8 00 10       	push   0x1000b8e2	10000c60: R_386_32	.text
10000c64:	50                   	push   eax
10000c65:	e8 fc ff ff ff       	call   10000c66 <backupTree(char*, unsigned short)+0x11f>	10000c66: R_386_PC32	strcmp
10000c6a:	83 c4 10             	add    esp,0x10
10000c6d:	85 c0                	test   eax,eax
10000c6f:	74 97                	je     10000c08 <backupTree(char*, unsigned short)+0xc1>
10000c71:	83 ec 08             	sub    esp,0x8
10000c74:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000c77:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000c7a:	e8 fc ff ff ff       	call   10000c7b <backupTree(char*, unsigned short)+0x134>	10000c7b: R_386_PC32	strcpy
10000c7f:	83 c4 10             	add    esp,0x10
10000c82:	83 ec 08             	sub    esp,0x8
10000c85:	68 e5 b8 00 10       	push   0x1000b8e5	10000c86: R_386_32	.text
10000c8a:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000c8d:	e8 fc ff ff ff       	call   10000c8e <backupTree(char*, unsigned short)+0x147>	10000c8e: R_386_PC32	strcat
10000c92:	83 c4 10             	add    esp,0x10
10000c95:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000c98:	83 c0 10             	add    eax,0x10
10000c9b:	83 ec 08             	sub    esp,0x8
10000c9e:	50                   	push   eax
10000c9f:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000ca2:	e8 fc ff ff ff       	call   10000ca3 <backupTree(char*, unsigned short)+0x15c>	10000ca3: R_386_PC32	strcat
10000ca7:	83 c4 10             	add    esp,0x10
10000caa:	66 c7 45 e6 bc ad    	mov    WORD PTR [ebp-0x1a],0xadbc
10000cb0:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10000cb7:	8b 55 d4             	mov    edx,DWORD PTR [ebp-0x2c]
10000cba:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10000cbd:	01 d0                	add    eax,edx
10000cbf:	83 c0 10             	add    eax,0x10
10000cc2:	8a 00                	mov    al,BYTE PTR [eax]
10000cc4:	84 c0                	test   al,al
10000cc6:	74 3c                	je     10000d04 <backupTree(char*, unsigned short)+0x1bd>
10000cc8:	8b 55 d4             	mov    edx,DWORD PTR [ebp-0x2c]
10000ccb:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10000cce:	01 d0                	add    eax,edx
10000cd0:	83 c0 10             	add    eax,0x10
10000cd3:	8a 00                	mov    al,BYTE PTR [eax]
10000cd5:	66 0f be d0          	movsx  dx,al
10000cd9:	66 8b 45 e6          	mov    ax,WORD PTR [ebp-0x1a]
10000cdd:	31 d0                	xor    eax,edx
10000cdf:	66 89 45 e6          	mov    WORD PTR [ebp-0x1a],ax
10000ce3:	0f b7 45 e6          	movzx  eax,WORD PTR [ebp-0x1a]
10000ce7:	c1 e0 03             	shl    eax,0x3
10000cea:	89 c2                	mov    edx,eax
10000cec:	0f b7 45 e6          	movzx  eax,WORD PTR [ebp-0x1a]
10000cf0:	c1 f8 0d             	sar    eax,0xd
10000cf3:	09 d0                	or     eax,edx
10000cf5:	66 89 45 e6          	mov    WORD PTR [ebp-0x1a],ax
10000cf9:	66 81 6d e6 f1 06    	sub    WORD PTR [ebp-0x1a],0x6f1
10000cff:	ff 45 e0             	inc    DWORD PTR [ebp-0x20]
10000d02:	eb b3                	jmp    10000cb7 <backupTree(char*, unsigned short)+0x170>
10000d04:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000d07:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000d0a:	83 e0 02             	and    eax,0x2
10000d0d:	85 c0                	test   eax,eax
10000d0f:	74 37                	je     10000d48 <backupTree(char*, unsigned short)+0x201>
10000d11:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000d14:	83 c0 10             	add    eax,0x10
10000d17:	83 ec 08             	sub    esp,0x8
10000d1a:	68 35 b9 00 10       	push   0x1000b935	10000d1b: R_386_32	.text
10000d1f:	50                   	push   eax
10000d20:	e8 fc ff ff ff       	call   10000d21 <backupTree(char*, unsigned short)+0x1da>	10000d21: R_386_PC32	strcmp
10000d25:	83 c4 10             	add    esp,0x10
10000d28:	85 c0                	test   eax,eax
10000d2a:	0f 84 d8 fe ff ff    	je     10000c08 <backupTree(char*, unsigned short)+0xc1>
10000d30:	0f b7 45 e6          	movzx  eax,WORD PTR [ebp-0x1a]
10000d34:	83 ec 08             	sub    esp,0x8
10000d37:	50                   	push   eax
10000d38:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000d3b:	e8 fc ff ff ff       	call   10000d3c <backupTree(char*, unsigned short)+0x1f5>	10000d3c: R_386_PC32	backupTree(char*, unsigned short)
10000d40:	83 c4 10             	add    esp,0x10
10000d43:	e9 c0 fe ff ff       	jmp    10000c08 <backupTree(char*, unsigned short)+0xc1>
10000d48:	c6 85 a3 fe ff ff 00 	mov    BYTE PTR [ebp-0x15d],0x0
10000d4f:	83 ec 08             	sub    esp,0x8
10000d52:	68 3c b9 00 10       	push   0x1000b93c	10000d53: R_386_32	.text
10000d57:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000d5d:	50                   	push   eax
10000d5e:	e8 fc ff ff ff       	call   10000d5f <backupTree(char*, unsigned short)+0x218>	10000d5f: R_386_PC32	strcpy
10000d63:	83 c4 10             	add    esp,0x10
10000d66:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000d69:	8a 40 0a             	mov    al,BYTE PTR [eax+0xa]
10000d6c:	88 85 a2 fe ff ff    	mov    BYTE PTR [ebp-0x15e],al
10000d72:	83 ec 08             	sub    esp,0x8
10000d75:	8d 85 a2 fe ff ff    	lea    eax,[ebp-0x15e]
10000d7b:	50                   	push   eax
10000d7c:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000d82:	50                   	push   eax
10000d83:	e8 fc ff ff ff       	call   10000d84 <backupTree(char*, unsigned short)+0x23d>	10000d84: R_386_PC32	strcat
10000d88:	83 c4 10             	add    esp,0x10
10000d8b:	83 ec 04             	sub    esp,0x4
10000d8e:	6a 09                	push   0x9
10000d90:	6a 00                	push   0x0
10000d92:	8d 85 99 fe ff ff    	lea    eax,[ebp-0x167]
10000d98:	50                   	push   eax
10000d99:	e8 fc ff ff ff       	call   10000d9a <backupTree(char*, unsigned short)+0x253>	10000d9a: R_386_PC32	memset
10000d9e:	83 c4 10             	add    esp,0x10
10000da1:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000da4:	83 c0 10             	add    eax,0x10
10000da7:	83 ec 04             	sub    esp,0x4
10000daa:	6a 08                	push   0x8
10000dac:	50                   	push   eax
10000dad:	8d 85 99 fe ff ff    	lea    eax,[ebp-0x167]
10000db3:	50                   	push   eax
10000db4:	e8 fc ff ff ff       	call   10000db5 <backupTree(char*, unsigned short)+0x26e>	10000db5: R_386_PC32	strncpyxx(char*, char const*, unsigned long)
10000db9:	83 c4 10             	add    esp,0x10
10000dbc:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [ebp-0x24],0x0
10000dc3:	83 7d dc 07          	cmp    DWORD PTR [ebp-0x24],0x7
10000dc7:	0f 8f c5 00 00 00    	jg     10000e92 <backupTree(char*, unsigned short)+0x34b>
10000dcd:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000dd3:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000dd6:	01 d0                	add    eax,edx
10000dd8:	8a 00                	mov    al,BYTE PTR [eax]
10000dda:	3c 60                	cmp    al,0x60
10000ddc:	7e 30                	jle    10000e0e <backupTree(char*, unsigned short)+0x2c7>
10000dde:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000de4:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000de7:	01 d0                	add    eax,edx
10000de9:	8a 00                	mov    al,BYTE PTR [eax]
10000deb:	3c 7a                	cmp    al,0x7a
10000ded:	7f 1f                	jg     10000e0e <backupTree(char*, unsigned short)+0x2c7>
10000def:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000df5:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000df8:	01 d0                	add    eax,edx
10000dfa:	8a 00                	mov    al,BYTE PTR [eax]
10000dfc:	83 e8 20             	sub    eax,0x20
10000dff:	88 c2                	mov    dl,al
10000e01:	8d 8d 99 fe ff ff    	lea    ecx,[ebp-0x167]
10000e07:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e0a:	01 c8                	add    eax,ecx
10000e0c:	88 10                	mov    BYTE PTR [eax],dl
10000e0e:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e14:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e17:	01 d0                	add    eax,edx
10000e19:	8a 00                	mov    al,BYTE PTR [eax]
10000e1b:	3c 59                	cmp    al,0x59
10000e1d:	75 0e                	jne    10000e2d <backupTree(char*, unsigned short)+0x2e6>
10000e1f:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e25:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e28:	01 d0                	add    eax,edx
10000e2a:	c6 00 51             	mov    BYTE PTR [eax],0x51
10000e2d:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e33:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e36:	01 d0                	add    eax,edx
10000e38:	8a 00                	mov    al,BYTE PTR [eax]
10000e3a:	3c 5a                	cmp    al,0x5a
10000e3c:	75 0e                	jne    10000e4c <backupTree(char*, unsigned short)+0x305>
10000e3e:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e44:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e47:	01 d0                	add    eax,edx
10000e49:	c6 00 51             	mov    BYTE PTR [eax],0x51
10000e4c:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e52:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e55:	01 d0                	add    eax,edx
10000e57:	8a 00                	mov    al,BYTE PTR [eax]
10000e59:	3c 20                	cmp    al,0x20
10000e5b:	75 0e                	jne    10000e6b <backupTree(char*, unsigned short)+0x324>
10000e5d:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e63:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e66:	01 d0                	add    eax,edx
10000e68:	c6 00 59             	mov    BYTE PTR [eax],0x59
10000e6b:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e71:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e74:	01 d0                	add    eax,edx
10000e76:	8a 00                	mov    al,BYTE PTR [eax]
10000e78:	3c 2e                	cmp    al,0x2e
10000e7a:	75 0e                	jne    10000e8a <backupTree(char*, unsigned short)+0x343>
10000e7c:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e82:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e85:	01 d0                	add    eax,edx
10000e87:	c6 00 5a             	mov    BYTE PTR [eax],0x5a
10000e8a:	ff 45 dc             	inc    DWORD PTR [ebp-0x24]
10000e8d:	e9 31 ff ff ff       	jmp    10000dc3 <backupTree(char*, unsigned short)+0x27c>
10000e92:	83 ec 08             	sub    esp,0x8
10000e95:	8d 85 99 fe ff ff    	lea    eax,[ebp-0x167]
10000e9b:	50                   	push   eax
10000e9c:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000ea2:	50                   	push   eax
10000ea3:	e8 fc ff ff ff       	call   10000ea4 <backupTree(char*, unsigned short)+0x35d>	10000ea4: R_386_PC32	strcat
10000ea8:	83 c4 10             	add    esp,0x10
10000eab:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000eae:	83 c0 10             	add    eax,0x10
10000eb1:	83 ec 0c             	sub    esp,0xc
10000eb4:	50                   	push   eax
10000eb5:	e8 fc ff ff ff       	call   10000eb6 <backupTree(char*, unsigned short)+0x36f>	10000eb6: R_386_PC32	strlen
10000eba:	83 c4 10             	add    esp,0x10
10000ebd:	83 c0 41             	add    eax,0x41
10000ec0:	88 85 a2 fe ff ff    	mov    BYTE PTR [ebp-0x15e],al
10000ec6:	83 ec 08             	sub    esp,0x8
10000ec9:	8d 85 a2 fe ff ff    	lea    eax,[ebp-0x15e]
10000ecf:	50                   	push   eax
10000ed0:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000ed6:	50                   	push   eax
10000ed7:	e8 fc ff ff ff       	call   10000ed8 <backupTree(char*, unsigned short)+0x391>	10000ed8: R_386_PC32	strcat
10000edc:	83 c4 10             	add    esp,0x10
10000edf:	83 ec 08             	sub    esp,0x8
10000ee2:	68 e0 b8 00 10       	push   0x1000b8e0	10000ee3: R_386_32	.text
10000ee7:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000eed:	50                   	push   eax
10000eee:	e8 fc ff ff ff       	call   10000eef <backupTree(char*, unsigned short)+0x3a8>	10000eef: R_386_PC32	strcat
10000ef3:	83 c4 10             	add    esp,0x10
10000ef6:	66 8b 45 e6          	mov    ax,WORD PTR [ebp-0x1a]
10000efa:	25 65 07 00 00       	and    eax,0x765
10000eff:	33 85 74 ed ff ff    	xor    eax,DWORD PTR [ebp-0x128c]
10000f05:	66 89 45 c6          	mov    WORD PTR [ebp-0x3a],ax
10000f09:	8d 85 88 fe ff ff    	lea    eax,[ebp-0x178]
10000f0f:	bb 55 b9 00 10       	mov    ebx,0x1000b955	10000f10: R_386_32	.text
10000f14:	ba 11 00 00 00       	mov    edx,0x11
10000f19:	89 c7                	mov    edi,eax
10000f1b:	89 de                	mov    esi,ebx
10000f1d:	89 d1                	mov    ecx,edx
10000f1f:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000f21:	0f b7 45 c6          	movzx  eax,WORD PTR [ebp-0x3a]
10000f25:	83 e0 0f             	and    eax,0xf
10000f28:	8a 84 05 88 fe ff ff 	mov    al,BYTE PTR [ebp+eax*1-0x178]
10000f2f:	88 85 a2 fe ff ff    	mov    BYTE PTR [ebp-0x15e],al
10000f35:	83 ec 08             	sub    esp,0x8
10000f38:	8d 85 a2 fe ff ff    	lea    eax,[ebp-0x15e]
10000f3e:	50                   	push   eax
10000f3f:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000f45:	50                   	push   eax
10000f46:	e8 fc ff ff ff       	call   10000f47 <backupTree(char*, unsigned short)+0x400>	10000f47: R_386_PC32	strcat
10000f4b:	83 c4 10             	add    esp,0x10
10000f4e:	0f b7 45 c6          	movzx  eax,WORD PTR [ebp-0x3a]
10000f52:	c1 f8 04             	sar    eax,0x4
10000f55:	83 e0 0f             	and    eax,0xf
10000f58:	8a 84 05 88 fe ff ff 	mov    al,BYTE PTR [ebp+eax*1-0x178]
10000f5f:	88 85 a2 fe ff ff    	mov    BYTE PTR [ebp-0x15e],al
10000f65:	83 ec 08             	sub    esp,0x8
10000f68:	8d 85 a2 fe ff ff    	lea    eax,[ebp-0x15e]
10000f6e:	50                   	push   eax
10000f6f:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000f75:	50                   	push   eax
10000f76:	e8 fc ff ff ff       	call   10000f77 <backupTree(char*, unsigned short)+0x430>	10000f77: R_386_PC32	strcat
10000f7b:	83 c4 10             	add    esp,0x10
10000f7e:	0f b7 45 c6          	movzx  eax,WORD PTR [ebp-0x3a]
10000f82:	c1 f8 08             	sar    eax,0x8
10000f85:	83 e0 0f             	and    eax,0xf
10000f88:	8a 84 05 88 fe ff ff 	mov    al,BYTE PTR [ebp+eax*1-0x178]
10000f8f:	88 85 a2 fe ff ff    	mov    BYTE PTR [ebp-0x15e],al
10000f95:	83 ec 08             	sub    esp,0x8
10000f98:	8d 85 a2 fe ff ff    	lea    eax,[ebp-0x15e]
10000f9e:	50                   	push   eax
10000f9f:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000fa5:	50                   	push   eax
10000fa6:	e8 fc ff ff ff       	call   10000fa7 <backupTree(char*, unsigned short)+0x460>	10000fa7: R_386_PC32	strcat
10000fab:	83 c4 10             	add    esp,0x10
10000fae:	66 8b 45 c6          	mov    ax,WORD PTR [ebp-0x3a]
10000fb2:	66 c1 e8 0c          	shr    ax,0xc
10000fb6:	0f b7 c0             	movzx  eax,ax
10000fb9:	8a 84 05 88 fe ff ff 	mov    al,BYTE PTR [ebp+eax*1-0x178]
10000fc0:	88 85 a2 fe ff ff    	mov    BYTE PTR [ebp-0x15e],al
10000fc6:	83 ec 08             	sub    esp,0x8
10000fc9:	8d 85 a2 fe ff ff    	lea    eax,[ebp-0x15e]
10000fcf:	50                   	push   eax
10000fd0:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000fd6:	50                   	push   eax
10000fd7:	e8 fc ff ff ff       	call   10000fd8 <backupTree(char*, unsigned short)+0x491>	10000fd8: R_386_PC32	strcat
10000fdc:	83 c4 10             	add    esp,0x10
10000fdf:	83 ec 0c             	sub    esp,0xc
10000fe2:	68 14 01 00 00       	push   0x114
10000fe7:	e8 fc ff ff ff       	call   10000fe8 <backupTree(char*, unsigned short)+0x4a1>	10000fe8: R_386_PC32	operator new(unsigned long)
10000fec:	83 c4 10             	add    esp,0x10
10000fef:	89 c3                	mov    ebx,eax
10000ff1:	b8 00 20 00 c2       	mov    eax,0xc2002000
10000ff6:	8b 00                	mov    eax,DWORD PTR [eax]
10000ff8:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
10000ffb:	83 ec 04             	sub    esp,0x4
10000ffe:	50                   	push   eax
10000fff:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10001002:	53                   	push   ebx
10001003:	e8 fc ff ff ff       	call   10001004 <backupTree(char*, unsigned short)+0x4bd>	10001004: R_386_PC32	File::File(char const*, Process*)
10001008:	83 c4 10             	add    esp,0x10
1000100b:	89 5d c0             	mov    DWORD PTR [ebp-0x40],ebx
1000100e:	83 ec 08             	sub    esp,0x8
10001011:	6a 01                	push   0x1
10001013:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10001016:	e8 fc ff ff ff       	call   10001017 <backupTree(char*, unsigned short)+0x4d0>	10001017: R_386_PC32	File::open(FileOpenMode)
1000101b:	83 c4 10             	add    esp,0x10
1000101e:	83 7d c0 00          	cmp    DWORD PTR [ebp-0x40],0x0
10001022:	75 15                	jne    10001039 <backupTree(char*, unsigned short)+0x4f2>
10001024:	83 ec 0c             	sub    esp,0xc
10001027:	68 1c b9 00 10       	push   0x1000b91c	10001028: R_386_32	.text
1000102c:	e8 fc ff ff ff       	call   1000102d <backupTree(char*, unsigned short)+0x4e6>	1000102d: R_386_PC32	KePanic(char const*)
10001031:	83 c4 10             	add    esp,0x10
10001034:	e9 3e 01 00 00       	jmp    10001177 <backupTree(char*, unsigned short)+0x630>
10001039:	83 7d c0 00          	cmp    DWORD PTR [ebp-0x40],0x0
1000103d:	0f 84 c5 fb ff ff    	je     10000c08 <backupTree(char*, unsigned short)+0xc1>
10001043:	83 ec 0c             	sub    esp,0xc
10001046:	68 14 01 00 00       	push   0x114
1000104b:	e8 fc ff ff ff       	call   1000104c <backupTree(char*, unsigned short)+0x505>	1000104c: R_386_PC32	operator new(unsigned long)
10001050:	83 c4 10             	add    esp,0x10
10001053:	89 c3                	mov    ebx,eax
10001055:	b8 00 20 00 c2       	mov    eax,0xc2002000
1000105a:	8b 00                	mov    eax,DWORD PTR [eax]
1000105c:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
1000105f:	83 ec 04             	sub    esp,0x4
10001062:	50                   	push   eax
10001063:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10001069:	50                   	push   eax
1000106a:	53                   	push   ebx
1000106b:	e8 fc ff ff ff       	call   1000106c <backupTree(char*, unsigned short)+0x525>	1000106c: R_386_PC32	File::File(char const*, Process*)
10001070:	83 c4 10             	add    esp,0x10
10001073:	89 5d bc             	mov    DWORD PTR [ebp-0x44],ebx
10001076:	83 ec 08             	sub    esp,0x8
10001079:	6a 12                	push   0x12
1000107b:	ff 75 bc             	push   DWORD PTR [ebp-0x44]
1000107e:	e8 fc ff ff ff       	call   1000107f <backupTree(char*, unsigned short)+0x538>	1000107f: R_386_PC32	File::open(FileOpenMode)
10001083:	83 c4 10             	add    esp,0x10
10001086:	83 7d bc 00          	cmp    DWORD PTR [ebp-0x44],0x0
1000108a:	75 23                	jne    100010af <backupTree(char*, unsigned short)+0x568>
1000108c:	83 ec 0c             	sub    esp,0xc
1000108f:	68 1c b9 00 10       	push   0x1000b91c	10001090: R_386_32	.text
10001094:	e8 fc ff ff ff       	call   10001095 <backupTree(char*, unsigned short)+0x54e>	10001095: R_386_PC32	KePanic(char const*)
10001099:	83 c4 10             	add    esp,0x10
1000109c:	83 ec 0c             	sub    esp,0xc
1000109f:	ff 75 bc             	push   DWORD PTR [ebp-0x44]
100010a2:	e8 fc ff ff ff       	call   100010a3 <backupTree(char*, unsigned short)+0x55c>	100010a3: R_386_PC32	File::close()
100010a7:	83 c4 10             	add    esp,0x10
100010aa:	e9 c8 00 00 00       	jmp    10001177 <backupTree(char*, unsigned short)+0x630>
100010af:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
100010b2:	8b 00                	mov    eax,DWORD PTR [eax]
100010b4:	83 c0 0c             	add    eax,0xc
100010b7:	8b 00                	mov    eax,DWORD PTR [eax]
100010b9:	83 ec 0c             	sub    esp,0xc
100010bc:	8d 95 84 fe ff ff    	lea    edx,[ebp-0x17c]
100010c2:	52                   	push   edx
100010c3:	8d 95 80 ee ff ff    	lea    edx,[ebp-0x1180]
100010c9:	52                   	push   edx
100010ca:	6a 00                	push   0x0
100010cc:	68 00 10 00 00       	push   0x1000
100010d1:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
100010d4:	ff d0                	call   eax
100010d6:	83 c4 20             	add    esp,0x20
100010d9:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
100010dc:	83 7d b8 00          	cmp    DWORD PTR [ebp-0x48],0x0
100010e0:	75 3b                	jne    1000111d <backupTree(char*, unsigned short)+0x5d6>
100010e2:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
100010e5:	8b 00                	mov    eax,DWORD PTR [eax]
100010e7:	83 c0 10             	add    eax,0x10
100010ea:	8b 08                	mov    ecx,DWORD PTR [eax]
100010ec:	8b 85 84 fe ff ff    	mov    eax,DWORD PTR [ebp-0x17c]
100010f2:	99                   	cdq    
100010f3:	83 ec 0c             	sub    esp,0xc
100010f6:	8d 9d 80 fe ff ff    	lea    ebx,[ebp-0x180]
100010fc:	53                   	push   ebx
100010fd:	8d 9d 80 ee ff ff    	lea    ebx,[ebp-0x1180]
10001103:	53                   	push   ebx
10001104:	52                   	push   edx
10001105:	50                   	push   eax
10001106:	ff 75 bc             	push   DWORD PTR [ebp-0x44]
10001109:	ff d1                	call   ecx
1000110b:	83 c4 20             	add    esp,0x20
1000110e:	8b 85 84 fe ff ff    	mov    eax,DWORD PTR [ebp-0x17c]
10001114:	3d 00 10 00 00       	cmp    eax,0x1000
10001119:	75 05                	jne    10001120 <backupTree(char*, unsigned short)+0x5d9>
1000111b:	eb 92                	jmp    100010af <backupTree(char*, unsigned short)+0x568>
1000111d:	90                   	nop
1000111e:	eb 01                	jmp    10001121 <backupTree(char*, unsigned short)+0x5da>
10001120:	90                   	nop
10001121:	83 ec 0c             	sub    esp,0xc
10001124:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10001127:	e8 fc ff ff ff       	call   10001128 <backupTree(char*, unsigned short)+0x5e1>	10001128: R_386_PC32	File::close()
1000112c:	83 c4 10             	add    esp,0x10
1000112f:	83 ec 0c             	sub    esp,0xc
10001132:	ff 75 bc             	push   DWORD PTR [ebp-0x44]
10001135:	e8 fc ff ff ff       	call   10001136 <backupTree(char*, unsigned short)+0x5ef>	10001136: R_386_PC32	File::close()
1000113a:	83 c4 10             	add    esp,0x10
1000113d:	83 7d c0 00          	cmp    DWORD PTR [ebp-0x40],0x0
10001141:	74 15                	je     10001158 <backupTree(char*, unsigned short)+0x611>
10001143:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
10001146:	8b 00                	mov    eax,DWORD PTR [eax]
10001148:	83 c0 08             	add    eax,0x8
1000114b:	8b 00                	mov    eax,DWORD PTR [eax]
1000114d:	83 ec 0c             	sub    esp,0xc
10001150:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10001153:	ff d0                	call   eax
10001155:	83 c4 10             	add    esp,0x10
10001158:	83 7d bc 00          	cmp    DWORD PTR [ebp-0x44],0x0
1000115c:	0f 84 a6 fa ff ff    	je     10000c08 <backupTree(char*, unsigned short)+0xc1>
10001162:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
10001165:	8b 00                	mov    eax,DWORD PTR [eax]
10001167:	83 c0 08             	add    eax,0x8
1000116a:	8b 00                	mov    eax,DWORD PTR [eax]
1000116c:	83 ec 0c             	sub    esp,0xc
1000116f:	ff 75 bc             	push   DWORD PTR [ebp-0x44]
10001172:	ff d0                	call   eax
10001174:	83 c4 10             	add    esp,0x10
10001177:	e9 8c fa ff ff       	jmp    10000c08 <backupTree(char*, unsigned short)+0xc1>
1000117c:	90                   	nop
1000117d:	83 ec 0c             	sub    esp,0xc
10001180:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10001183:	e8 fc ff ff ff       	call   10001184 <backupTree(char*, unsigned short)+0x63d>	10001184: R_386_PC32	free
10001188:	83 c4 10             	add    esp,0x10
1000118b:	83 ec 0c             	sub    esp,0xc
1000118e:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10001191:	e8 fc ff ff ff       	call   10001192 <backupTree(char*, unsigned short)+0x64b>	10001192: R_386_PC32	Directory::close()
10001196:	83 c4 10             	add    esp,0x10
10001199:	83 7d d0 00          	cmp    DWORD PTR [ebp-0x30],0x0
1000119d:	74 18                	je     100011b7 <backupTree(char*, unsigned short)+0x670>
1000119f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100011a2:	8b 00                	mov    eax,DWORD PTR [eax]
100011a4:	83 c0 08             	add    eax,0x8
100011a7:	8b 00                	mov    eax,DWORD PTR [eax]
100011a9:	83 ec 0c             	sub    esp,0xc
100011ac:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
100011af:	ff d0                	call   eax
100011b1:	83 c4 10             	add    esp,0x10
100011b4:	eb 01                	jmp    100011b7 <backupTree(char*, unsigned short)+0x670>
100011b6:	90                   	nop
100011b7:	8d 65 f4             	lea    esp,[ebp-0xc]
100011ba:	5b                   	pop    ebx
100011bb:	5e                   	pop    esi
100011bc:	5f                   	pop    edi
100011bd:	5d                   	pop    ebp
100011be:	c3                   	ret    

100011bf <createUser(char const*)>:
100011bf:	55                   	push   ebp
100011c0:	89 e5                	mov    ebp,esp
100011c2:	81 ec 08 01 00 00    	sub    esp,0x108
100011c8:	68 66 b9 00 10       	push   0x1000b966	100011c9: R_386_32	.text
100011cd:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100011d3:	50                   	push   eax
100011d4:	e8 fc ff ff ff       	call   100011d5 <createUser(char const*)+0x16>	100011d5: R_386_PC32	strcpy
100011d9:	83 c4 08             	add    esp,0x8
100011dc:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100011df:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100011e5:	50                   	push   eax
100011e6:	e8 fc ff ff ff       	call   100011e7 <createUser(char const*)+0x28>	100011e7: R_386_PC32	strcat
100011eb:	83 c4 08             	add    esp,0x8
100011ee:	83 ec 08             	sub    esp,0x8
100011f1:	68 c0 01 00 00       	push   0x1c0
100011f6:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100011fc:	50                   	push   eax
100011fd:	e8 fc ff ff ff       	call   100011fe <createUser(char const*)+0x3f>	100011fe: R_386_PC32	mkdir(char const*, int)
10001202:	83 c4 10             	add    esp,0x10
10001205:	83 ec 08             	sub    esp,0x8
10001208:	68 70 b9 00 10       	push   0x1000b970	10001209: R_386_32	.text
1000120d:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001213:	50                   	push   eax
10001214:	e8 fc ff ff ff       	call   10001215 <createUser(char const*)+0x56>	10001215: R_386_PC32	strcat
10001219:	83 c4 10             	add    esp,0x10
1000121c:	83 ec 08             	sub    esp,0x8
1000121f:	68 c0 01 00 00       	push   0x1c0
10001224:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000122a:	50                   	push   eax
1000122b:	e8 fc ff ff ff       	call   1000122c <createUser(char const*)+0x6d>	1000122c: R_386_PC32	mkdir(char const*, int)
10001230:	83 c4 10             	add    esp,0x10
10001233:	83 ec 08             	sub    esp,0x8
10001236:	68 66 b9 00 10       	push   0x1000b966	10001237: R_386_32	.text
1000123b:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001241:	50                   	push   eax
10001242:	e8 fc ff ff ff       	call   10001243 <createUser(char const*)+0x84>	10001243: R_386_PC32	strcpy
10001247:	83 c4 10             	add    esp,0x10
1000124a:	83 ec 08             	sub    esp,0x8
1000124d:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001250:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001256:	50                   	push   eax
10001257:	e8 fc ff ff ff       	call   10001258 <createUser(char const*)+0x99>	10001258: R_386_PC32	strcat
1000125c:	83 c4 10             	add    esp,0x10
1000125f:	83 ec 08             	sub    esp,0x8
10001262:	68 79 b9 00 10       	push   0x1000b979	10001263: R_386_32	.text
10001267:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000126d:	50                   	push   eax
1000126e:	e8 fc ff ff ff       	call   1000126f <createUser(char const*)+0xb0>	1000126f: R_386_PC32	strcat
10001273:	83 c4 10             	add    esp,0x10
10001276:	83 ec 08             	sub    esp,0x8
10001279:	68 c0 01 00 00       	push   0x1c0
1000127e:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001284:	50                   	push   eax
10001285:	e8 fc ff ff ff       	call   10001286 <createUser(char const*)+0xc7>	10001286: R_386_PC32	mkdir(char const*, int)
1000128a:	83 c4 10             	add    esp,0x10
1000128d:	83 ec 08             	sub    esp,0x8
10001290:	68 66 b9 00 10       	push   0x1000b966	10001291: R_386_32	.text
10001295:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000129b:	50                   	push   eax
1000129c:	e8 fc ff ff ff       	call   1000129d <createUser(char const*)+0xde>	1000129d: R_386_PC32	strcpy
100012a1:	83 c4 10             	add    esp,0x10
100012a4:	83 ec 08             	sub    esp,0x8
100012a7:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100012aa:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100012b0:	50                   	push   eax
100012b1:	e8 fc ff ff ff       	call   100012b2 <createUser(char const*)+0xf3>	100012b2: R_386_PC32	strcat
100012b6:	83 c4 10             	add    esp,0x10
100012b9:	83 ec 08             	sub    esp,0x8
100012bc:	68 84 b9 00 10       	push   0x1000b984	100012bd: R_386_32	.text
100012c1:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100012c7:	50                   	push   eax
100012c8:	e8 fc ff ff ff       	call   100012c9 <createUser(char const*)+0x10a>	100012c9: R_386_PC32	strcat
100012cd:	83 c4 10             	add    esp,0x10
100012d0:	83 ec 08             	sub    esp,0x8
100012d3:	68 c0 01 00 00       	push   0x1c0
100012d8:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100012de:	50                   	push   eax
100012df:	e8 fc ff ff ff       	call   100012e0 <createUser(char const*)+0x121>	100012e0: R_386_PC32	mkdir(char const*, int)
100012e4:	83 c4 10             	add    esp,0x10
100012e7:	83 ec 08             	sub    esp,0x8
100012ea:	68 66 b9 00 10       	push   0x1000b966	100012eb: R_386_32	.text
100012ef:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100012f5:	50                   	push   eax
100012f6:	e8 fc ff ff ff       	call   100012f7 <createUser(char const*)+0x138>	100012f7: R_386_PC32	strcpy
100012fb:	83 c4 10             	add    esp,0x10
100012fe:	83 ec 08             	sub    esp,0x8
10001301:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001304:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000130a:	50                   	push   eax
1000130b:	e8 fc ff ff ff       	call   1000130c <createUser(char const*)+0x14d>	1000130c: R_386_PC32	strcat
10001310:	83 c4 10             	add    esp,0x10
10001313:	83 ec 08             	sub    esp,0x8
10001316:	68 8f b9 00 10       	push   0x1000b98f	10001317: R_386_32	.text
1000131b:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001321:	50                   	push   eax
10001322:	e8 fc ff ff ff       	call   10001323 <createUser(char const*)+0x164>	10001323: R_386_PC32	strcat
10001327:	83 c4 10             	add    esp,0x10
1000132a:	83 ec 08             	sub    esp,0x8
1000132d:	68 c0 01 00 00       	push   0x1c0
10001332:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001338:	50                   	push   eax
10001339:	e8 fc ff ff ff       	call   1000133a <createUser(char const*)+0x17b>	1000133a: R_386_PC32	mkdir(char const*, int)
1000133e:	83 c4 10             	add    esp,0x10
10001341:	83 ec 08             	sub    esp,0x8
10001344:	68 66 b9 00 10       	push   0x1000b966	10001345: R_386_32	.text
10001349:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000134f:	50                   	push   eax
10001350:	e8 fc ff ff ff       	call   10001351 <createUser(char const*)+0x192>	10001351: R_386_PC32	strcpy
10001355:	83 c4 10             	add    esp,0x10
10001358:	83 ec 08             	sub    esp,0x8
1000135b:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000135e:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001364:	50                   	push   eax
10001365:	e8 fc ff ff ff       	call   10001366 <createUser(char const*)+0x1a7>	10001366: R_386_PC32	strcat
1000136a:	83 c4 10             	add    esp,0x10
1000136d:	83 ec 08             	sub    esp,0x8
10001370:	68 97 b9 00 10       	push   0x1000b997	10001371: R_386_32	.text
10001375:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000137b:	50                   	push   eax
1000137c:	e8 fc ff ff ff       	call   1000137d <createUser(char const*)+0x1be>	1000137d: R_386_PC32	strcat
10001381:	83 c4 10             	add    esp,0x10
10001384:	83 ec 08             	sub    esp,0x8
10001387:	68 c0 01 00 00       	push   0x1c0
1000138c:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001392:	50                   	push   eax
10001393:	e8 fc ff ff ff       	call   10001394 <createUser(char const*)+0x1d5>	10001394: R_386_PC32	mkdir(char const*, int)
10001398:	83 c4 10             	add    esp,0x10
1000139b:	83 ec 08             	sub    esp,0x8
1000139e:	68 66 b9 00 10       	push   0x1000b966	1000139f: R_386_32	.text
100013a3:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100013a9:	50                   	push   eax
100013aa:	e8 fc ff ff ff       	call   100013ab <createUser(char const*)+0x1ec>	100013ab: R_386_PC32	strcpy
100013af:	83 c4 10             	add    esp,0x10
100013b2:	83 ec 08             	sub    esp,0x8
100013b5:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100013b8:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100013be:	50                   	push   eax
100013bf:	e8 fc ff ff ff       	call   100013c0 <createUser(char const*)+0x201>	100013c0: R_386_PC32	strcat
100013c4:	83 c4 10             	add    esp,0x10
100013c7:	83 ec 08             	sub    esp,0x8
100013ca:	68 a2 b9 00 10       	push   0x1000b9a2	100013cb: R_386_32	.text
100013cf:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100013d5:	50                   	push   eax
100013d6:	e8 fc ff ff ff       	call   100013d7 <createUser(char const*)+0x218>	100013d7: R_386_PC32	strcat
100013db:	83 c4 10             	add    esp,0x10
100013de:	83 ec 08             	sub    esp,0x8
100013e1:	68 c0 01 00 00       	push   0x1c0
100013e6:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100013ec:	50                   	push   eax
100013ed:	e8 fc ff ff ff       	call   100013ee <createUser(char const*)+0x22f>	100013ee: R_386_PC32	mkdir(char const*, int)
100013f2:	83 c4 10             	add    esp,0x10
100013f5:	83 ec 08             	sub    esp,0x8
100013f8:	68 66 b9 00 10       	push   0x1000b966	100013f9: R_386_32	.text
100013fd:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001403:	50                   	push   eax
10001404:	e8 fc ff ff ff       	call   10001405 <createUser(char const*)+0x246>	10001405: R_386_PC32	strcpy
10001409:	83 c4 10             	add    esp,0x10
1000140c:	83 ec 08             	sub    esp,0x8
1000140f:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001412:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001418:	50                   	push   eax
10001419:	e8 fc ff ff ff       	call   1000141a <createUser(char const*)+0x25b>	1000141a: R_386_PC32	strcat
1000141e:	83 c4 10             	add    esp,0x10
10001421:	83 ec 08             	sub    esp,0x8
10001424:	68 a9 b9 00 10       	push   0x1000b9a9	10001425: R_386_32	.text
10001429:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000142f:	50                   	push   eax
10001430:	e8 fc ff ff ff       	call   10001431 <createUser(char const*)+0x272>	10001431: R_386_PC32	strcat
10001435:	83 c4 10             	add    esp,0x10
10001438:	83 ec 08             	sub    esp,0x8
1000143b:	68 c0 01 00 00       	push   0x1c0
10001440:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001446:	50                   	push   eax
10001447:	e8 fc ff ff ff       	call   10001448 <createUser(char const*)+0x289>	10001448: R_386_PC32	mkdir(char const*, int)
1000144c:	83 c4 10             	add    esp,0x10
1000144f:	83 ec 08             	sub    esp,0x8
10001452:	68 b1 b9 00 10       	push   0x1000b9b1	10001453: R_386_32	.text
10001457:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000145d:	50                   	push   eax
1000145e:	e8 fc ff ff ff       	call   1000145f <createUser(char const*)+0x2a0>	1000145f: R_386_PC32	strcpy
10001463:	83 c4 10             	add    esp,0x10
10001466:	83 ec 08             	sub    esp,0x8
10001469:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000146c:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001472:	50                   	push   eax
10001473:	e8 fc ff ff ff       	call   10001474 <createUser(char const*)+0x2b5>	10001474: R_386_PC32	strcat
10001478:	83 c4 10             	add    esp,0x10
1000147b:	83 ec 08             	sub    esp,0x8
1000147e:	68 c0 01 00 00       	push   0x1c0
10001483:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001489:	50                   	push   eax
1000148a:	e8 fc ff ff ff       	call   1000148b <createUser(char const*)+0x2cc>	1000148b: R_386_PC32	mkdir(char const*, int)
1000148f:	83 c4 10             	add    esp,0x10
10001492:	83 ec 08             	sub    esp,0x8
10001495:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000149b:	50                   	push   eax
1000149c:	68 cc b9 00 10       	push   0x1000b9cc	1000149d: R_386_32	.text
100014a1:	e8 fc ff ff ff       	call   100014a2 <createUser(char const*)+0x2e3>	100014a2: R_386_PC32	copytree(char*, char*)
100014a6:	83 c4 10             	add    esp,0x10
100014a9:	90                   	nop
100014aa:	c9                   	leave  
100014ab:	c3                   	ret    

100014ac <drawBootScreen()>:
100014ac:	55                   	push   ebp
100014ad:	89 e5                	mov    ebp,esp
100014af:	83 ec 18             	sub    esp,0x18
100014b2:	a1 00 00 00 00       	mov    eax,ds:0x0	100014b3: R_386_32	term
100014b7:	83 ec 08             	sub    esp,0x8
100014ba:	6a 0b                	push   0xb
100014bc:	50                   	push   eax
100014bd:	e8 fc ff ff ff       	call   100014be <drawBootScreen()+0x12>	100014be: R_386_PC32	VgaText::setDefaultBgColour(VgaColour)
100014c2:	83 c4 10             	add    esp,0x10
100014c5:	a1 00 00 00 00       	mov    eax,ds:0x0	100014c6: R_386_32	term
100014ca:	83 ec 08             	sub    esp,0x8
100014cd:	6a 00                	push   0x0
100014cf:	50                   	push   eax
100014d0:	e8 fc ff ff ff       	call   100014d1 <drawBootScreen()+0x25>	100014d1: R_386_PC32	VgaText::setDefaultFgColour(VgaColour)
100014d5:	83 c4 10             	add    esp,0x10
100014d8:	a1 00 00 00 00       	mov    eax,ds:0x0	100014d9: R_386_32	term
100014dd:	83 ec 0c             	sub    esp,0xc
100014e0:	50                   	push   eax
100014e1:	e8 fc ff ff ff       	call   100014e2 <drawBootScreen()+0x36>	100014e2: R_386_PC32	VgaText::clearScreen()
100014e6:	83 c4 10             	add    esp,0x10
100014e9:	a1 00 00 00 00       	mov    eax,ds:0x0	100014ea: R_386_32	term
100014ee:	83 ec 08             	sub    esp,0x8
100014f1:	68 eb b9 00 10       	push   0x1000b9eb	100014f2: R_386_32	.text
100014f6:	50                   	push   eax
100014f7:	e8 fc ff ff ff       	call   100014f8 <drawBootScreen()+0x4c>	100014f8: R_386_PC32	VgaText::setTitle(char*)
100014fc:	83 c4 10             	add    esp,0x10
100014ff:	a1 00 00 00 00       	mov    eax,ds:0x0	10001500: R_386_32	term
10001504:	83 ec 08             	sub    esp,0x8
10001507:	6a 00                	push   0x0
10001509:	50                   	push   eax
1000150a:	e8 fc ff ff ff       	call   1000150b <drawBootScreen()+0x5f>	1000150b: R_386_PC32	VgaText::setTitleColour(VgaColour)
1000150f:	83 c4 10             	add    esp,0x10
10001512:	a1 00 00 00 00       	mov    eax,ds:0x0	10001513: R_386_32	term
10001517:	83 ec 08             	sub    esp,0x8
1000151a:	6a 00                	push   0x0
1000151c:	50                   	push   eax
1000151d:	e8 fc ff ff ff       	call   1000151e <drawBootScreen()+0x72>	1000151e: R_386_PC32	VgaText::setTitleTextColour(VgaColour)
10001522:	83 c4 10             	add    esp,0x10
10001525:	a1 00 00 00 00       	mov    eax,ds:0x0	10001526: R_386_32	term
1000152a:	83 ec 04             	sub    esp,0x4
1000152d:	6a 00                	push   0x0
1000152f:	6a 00                	push   0x0
10001531:	50                   	push   eax
10001532:	e8 fc ff ff ff       	call   10001533 <drawBootScreen()+0x87>	10001533: R_386_PC32	VgaText::setCursor(int, int)
10001537:	83 c4 10             	add    esp,0x10
1000153a:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10001541:	83 7d f4 4f          	cmp    DWORD PTR [ebp-0xc],0x4f
10001545:	7f 19                	jg     10001560 <drawBootScreen()+0xb4>
10001547:	a1 00 00 00 00       	mov    eax,ds:0x0	10001548: R_386_32	term
1000154c:	6a 00                	push   0x0
1000154e:	6a 00                	push   0x0
10001550:	6a 20                	push   0x20
10001552:	50                   	push   eax
10001553:	e8 fc ff ff ff       	call   10001554 <drawBootScreen()+0xa8>	10001554: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
10001558:	83 c4 10             	add    esp,0x10
1000155b:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000155e:	eb e1                	jmp    10001541 <drawBootScreen()+0x95>
10001560:	a0 00 00 00 00       	mov    al,ds:0x0	10001561: R_386_32	showSidebar
10001565:	84 c0                	test   al,al
10001567:	0f 84 91 00 00 00    	je     100015fe <drawBootScreen()+0x152>
1000156d:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10001574:	83 7d f0 18          	cmp    DWORD PTR [ebp-0x10],0x18
10001578:	7f 41                	jg     100015bb <drawBootScreen()+0x10f>
1000157a:	a1 00 00 00 00       	mov    eax,ds:0x0	1000157b: R_386_32	term
1000157f:	83 ec 04             	sub    esp,0x4
10001582:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10001585:	6a 00                	push   0x0
10001587:	50                   	push   eax
10001588:	e8 fc ff ff ff       	call   10001589 <drawBootScreen()+0xdd>	10001589: R_386_PC32	VgaText::setCursor(int, int)
1000158d:	83 c4 10             	add    esp,0x10
10001590:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [ebp-0x14],0x0
10001597:	83 7d ec 0f          	cmp    DWORD PTR [ebp-0x14],0xf
1000159b:	7f 19                	jg     100015b6 <drawBootScreen()+0x10a>
1000159d:	a1 00 00 00 00       	mov    eax,ds:0x0	1000159e: R_386_32	term
100015a2:	6a 00                	push   0x0
100015a4:	6a 00                	push   0x0
100015a6:	6a 20                	push   0x20
100015a8:	50                   	push   eax
100015a9:	e8 fc ff ff ff       	call   100015aa <drawBootScreen()+0xfe>	100015aa: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
100015ae:	83 c4 10             	add    esp,0x10
100015b1:	ff 45 ec             	inc    DWORD PTR [ebp-0x14]
100015b4:	eb e1                	jmp    10001597 <drawBootScreen()+0xeb>
100015b6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100015b9:	eb b9                	jmp    10001574 <drawBootScreen()+0xc8>
100015bb:	a1 00 00 00 00       	mov    eax,ds:0x0	100015bc: R_386_32	term
100015c0:	83 ec 04             	sub    esp,0x4
100015c3:	6a 01                	push   0x1
100015c5:	6a 01                	push   0x1
100015c7:	50                   	push   eax
100015c8:	e8 fc ff ff ff       	call   100015c9 <drawBootScreen()+0x11d>	100015c9: R_386_PC32	VgaText::setCursor(int, int)
100015cd:	83 c4 10             	add    esp,0x10
100015d0:	a1 00 00 00 00       	mov    eax,ds:0x0	100015d1: R_386_32	term
100015d5:	6a 00                	push   0x0
100015d7:	6a 0f                	push   0xf
100015d9:	68 ec b9 00 10       	push   0x1000b9ec	100015da: R_386_32	.text
100015de:	50                   	push   eax
100015df:	e8 fc ff ff ff       	call   100015e0 <drawBootScreen()+0x134>	100015e0: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
100015e4:	83 c4 10             	add    esp,0x10
100015e7:	a1 00 00 00 00       	mov    eax,ds:0x0	100015e8: R_386_32	term
100015ec:	6a 00                	push   0x0
100015ee:	6a 0e                	push   0xe
100015f0:	68 6f ba 00 10       	push   0x1000ba6f	100015f1: R_386_32	.text
100015f5:	50                   	push   eax
100015f6:	e8 fc ff ff ff       	call   100015f7 <drawBootScreen()+0x14b>	100015f7: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
100015fb:	83 c4 10             	add    esp,0x10
100015fe:	a1 00 00 00 00       	mov    eax,ds:0x0	100015ff: R_386_32	term
10001603:	83 ec 08             	sub    esp,0x8
10001606:	6a 0f                	push   0xf
10001608:	50                   	push   eax
10001609:	e8 fc ff ff ff       	call   1000160a <drawBootScreen()+0x15e>	1000160a: R_386_PC32	VgaText::setDefaultBgColour(VgaColour)
1000160e:	83 c4 10             	add    esp,0x10
10001611:	a1 00 00 00 00       	mov    eax,ds:0x0	10001612: R_386_32	term
10001616:	83 ec 08             	sub    esp,0x8
10001619:	6a 00                	push   0x0
1000161b:	50                   	push   eax
1000161c:	e8 fc ff ff ff       	call   1000161d <drawBootScreen()+0x171>	1000161d: R_386_PC32	VgaText::setDefaultFgColour(VgaColour)
10001621:	83 c4 10             	add    esp,0x10
10001624:	90                   	nop
10001625:	c9                   	leave  
10001626:	c3                   	ret    

10001627 <drawBasicWindowX(int, int, int, int, char const*, bool)>:
10001627:	55                   	push   ebp
10001628:	89 e5                	mov    ebp,esp
1000162a:	53                   	push   ebx
1000162b:	83 ec 34             	sub    esp,0x34
1000162e:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10001631:	88 45 d4             	mov    BYTE PTR [ebp-0x2c],al
10001634:	ff 45 0c             	inc    DWORD PTR [ebp+0xc]
10001637:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
1000163e:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10001641:	3b 45 14             	cmp    eax,DWORD PTR [ebp+0x14]
10001644:	7d 6c                	jge    100016b2 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x8b>
10001646:	a1 00 00 00 00       	mov    eax,ds:0x0	10001647: R_386_32	term
1000164b:	8b 4d 0c             	mov    ecx,DWORD PTR [ebp+0xc]
1000164e:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001651:	01 ca                	add    edx,ecx
10001653:	83 ec 04             	sub    esp,0x4
10001656:	52                   	push   edx
10001657:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000165a:	50                   	push   eax
1000165b:	e8 fc ff ff ff       	call   1000165c <drawBasicWindowX(int, int, int, int, char const*, bool)+0x35>	1000165c: R_386_PC32	VgaText::setCursor(int, int)
10001660:	83 c4 10             	add    esp,0x10
10001663:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000166a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000166d:	3b 45 10             	cmp    eax,DWORD PTR [ebp+0x10]
10001670:	7d 3b                	jge    100016ad <drawBasicWindowX(int, int, int, int, char const*, bool)+0x86>
10001672:	a1 00 00 00 00       	mov    eax,ds:0x0	10001673: R_386_32	term
10001677:	80 7d d4 00          	cmp    BYTE PTR [ebp-0x2c],0x0
1000167b:	74 07                	je     10001684 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x5d>
1000167d:	b9 07 00 00 00       	mov    ecx,0x7
10001682:	eb 05                	jmp    10001689 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x62>
10001684:	b9 0f 00 00 00       	mov    ecx,0xf
10001689:	80 7d d4 00          	cmp    BYTE PTR [ebp-0x2c],0x0
1000168d:	74 07                	je     10001696 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x6f>
1000168f:	ba 07 00 00 00       	mov    edx,0x7
10001694:	eb 05                	jmp    1000169b <drawBasicWindowX(int, int, int, int, char const*, bool)+0x74>
10001696:	ba 0f 00 00 00       	mov    edx,0xf
1000169b:	51                   	push   ecx
1000169c:	52                   	push   edx
1000169d:	6a 20                	push   0x20
1000169f:	50                   	push   eax
100016a0:	e8 fc ff ff ff       	call   100016a1 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x7a>	100016a1: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
100016a5:	83 c4 10             	add    esp,0x10
100016a8:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100016ab:	eb bd                	jmp    1000166a <drawBasicWindowX(int, int, int, int, char const*, bool)+0x43>
100016ad:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100016b0:	eb 8c                	jmp    1000163e <drawBasicWindowX(int, int, int, int, char const*, bool)+0x17>
100016b2:	a1 00 00 00 00       	mov    eax,ds:0x0	100016b3: R_386_32	term
100016b7:	83 ec 04             	sub    esp,0x4
100016ba:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100016bd:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100016c0:	50                   	push   eax
100016c1:	e8 fc ff ff ff       	call   100016c2 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x9b>	100016c2: R_386_PC32	VgaText::setCursor(int, int)
100016c6:	83 c4 10             	add    esp,0x10
100016c9:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [ebp-0x14],0x0
100016d0:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100016d3:	3b 45 10             	cmp    eax,DWORD PTR [ebp+0x10]
100016d6:	7d 19                	jge    100016f1 <drawBasicWindowX(int, int, int, int, char const*, bool)+0xca>
100016d8:	a1 00 00 00 00       	mov    eax,ds:0x0	100016d9: R_386_32	term
100016dd:	6a 01                	push   0x1
100016df:	6a 01                	push   0x1
100016e1:	6a 20                	push   0x20
100016e3:	50                   	push   eax
100016e4:	e8 fc ff ff ff       	call   100016e5 <drawBasicWindowX(int, int, int, int, char const*, bool)+0xbe>	100016e5: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
100016e9:	83 c4 10             	add    esp,0x10
100016ec:	ff 45 ec             	inc    DWORD PTR [ebp-0x14]
100016ef:	eb df                	jmp    100016d0 <drawBasicWindowX(int, int, int, int, char const*, bool)+0xa9>
100016f1:	a1 00 00 00 00       	mov    eax,ds:0x0	100016f2: R_386_32	term
100016f6:	8b 4d 0c             	mov    ecx,DWORD PTR [ebp+0xc]
100016f9:	8b 55 14             	mov    edx,DWORD PTR [ebp+0x14]
100016fc:	01 d1                	add    ecx,edx
100016fe:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10001701:	42                   	inc    edx
10001702:	83 ec 04             	sub    esp,0x4
10001705:	51                   	push   ecx
10001706:	52                   	push   edx
10001707:	50                   	push   eax
10001708:	e8 fc ff ff ff       	call   10001709 <drawBasicWindowX(int, int, int, int, char const*, bool)+0xe2>	10001709: R_386_PC32	VgaText::setCursor(int, int)
1000170d:	83 c4 10             	add    esp,0x10
10001710:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [ebp-0x18],0x0
10001717:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
1000171a:	3b 45 10             	cmp    eax,DWORD PTR [ebp+0x10]
1000171d:	7d 19                	jge    10001738 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x111>
1000171f:	a1 00 00 00 00       	mov    eax,ds:0x0	10001720: R_386_32	term
10001724:	6a 03                	push   0x3
10001726:	6a 03                	push   0x3
10001728:	6a 20                	push   0x20
1000172a:	50                   	push   eax
1000172b:	e8 fc ff ff ff       	call   1000172c <drawBasicWindowX(int, int, int, int, char const*, bool)+0x105>	1000172c: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
10001730:	83 c4 10             	add    esp,0x10
10001733:	ff 45 e8             	inc    DWORD PTR [ebp-0x18]
10001736:	eb df                	jmp    10001717 <drawBasicWindowX(int, int, int, int, char const*, bool)+0xf0>
10001738:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000173b:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000173e:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
10001741:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10001744:	01 d0                	add    eax,edx
10001746:	39 45 e4             	cmp    DWORD PTR [ebp-0x1c],eax
10001749:	0f 8d 89 00 00 00    	jge    100017d8 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x1b1>
1000174f:	a1 00 00 00 00       	mov    eax,ds:0x0	10001750: R_386_32	term
10001754:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10001757:	8d 4a 01             	lea    ecx,[edx+0x1]
1000175a:	8b 5d 10             	mov    ebx,DWORD PTR [ebp+0x10]
1000175d:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10001760:	01 da                	add    edx,ebx
10001762:	83 ec 04             	sub    esp,0x4
10001765:	51                   	push   ecx
10001766:	52                   	push   edx
10001767:	50                   	push   eax
10001768:	e8 fc ff ff ff       	call   10001769 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x142>	10001769: R_386_PC32	VgaText::setCursor(int, int)
1000176d:	83 c4 10             	add    esp,0x10
10001770:	a1 00 00 00 00       	mov    eax,ds:0x0	10001771: R_386_32	term
10001775:	6a 03                	push   0x3
10001777:	6a 03                	push   0x3
10001779:	6a 20                	push   0x20
1000177b:	50                   	push   eax
1000177c:	e8 fc ff ff ff       	call   1000177d <drawBasicWindowX(int, int, int, int, char const*, bool)+0x156>	1000177d: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
10001781:	83 c4 10             	add    esp,0x10
10001784:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
10001787:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000178a:	01 d0                	add    eax,edx
1000178c:	48                   	dec    eax
1000178d:	39 45 e4             	cmp    DWORD PTR [ebp-0x1c],eax
10001790:	74 3e                	je     100017d0 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x1a9>
10001792:	a1 00 00 00 00       	mov    eax,ds:0x0	10001793: R_386_32	term
10001797:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
1000179a:	42                   	inc    edx
1000179b:	83 ec 04             	sub    esp,0x4
1000179e:	52                   	push   edx
1000179f:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100017a2:	50                   	push   eax
100017a3:	e8 fc ff ff ff       	call   100017a4 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x17d>	100017a4: R_386_PC32	VgaText::setCursor(int, int)
100017a8:	83 c4 10             	add    esp,0x10
100017ab:	a1 00 00 00 00       	mov    eax,ds:0x0	100017ac: R_386_32	term
100017b0:	80 7d d4 00          	cmp    BYTE PTR [ebp-0x2c],0x0
100017b4:	74 07                	je     100017bd <drawBasicWindowX(int, int, int, int, char const*, bool)+0x196>
100017b6:	ba 07 00 00 00       	mov    edx,0x7
100017bb:	eb 05                	jmp    100017c2 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x19b>
100017bd:	ba 0f 00 00 00       	mov    edx,0xf
100017c2:	52                   	push   edx
100017c3:	6a 00                	push   0x0
100017c5:	6a dd                	push   0xffffffdd
100017c7:	50                   	push   eax
100017c8:	e8 fc ff ff ff       	call   100017c9 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x1a2>	100017c9: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
100017cd:	83 c4 10             	add    esp,0x10
100017d0:	ff 45 e4             	inc    DWORD PTR [ebp-0x1c]
100017d3:	e9 66 ff ff ff       	jmp    1000173e <drawBasicWindowX(int, int, int, int, char const*, bool)+0x117>
100017d8:	8b 5d 10             	mov    ebx,DWORD PTR [ebp+0x10]
100017db:	83 ec 0c             	sub    esp,0xc
100017de:	ff 75 18             	push   DWORD PTR [ebp+0x18]
100017e1:	e8 fc ff ff ff       	call   100017e2 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x1bb>	100017e2: R_386_PC32	strlen
100017e6:	83 c4 10             	add    esp,0x10
100017e9:	29 c3                	sub    ebx,eax
100017eb:	89 d8                	mov    eax,ebx
100017ed:	d1 e8                	shr    eax,1
100017ef:	48                   	dec    eax
100017f0:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
100017f3:	a1 00 00 00 00       	mov    eax,ds:0x0	100017f4: R_386_32	term
100017f8:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100017fb:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
100017fe:	01 ca                	add    edx,ecx
10001800:	83 ec 04             	sub    esp,0x4
10001803:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10001806:	52                   	push   edx
10001807:	50                   	push   eax
10001808:	e8 fc ff ff ff       	call   10001809 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x1e2>	10001809: R_386_PC32	VgaText::setCursor(int, int)
1000180d:	83 c4 10             	add    esp,0x10
10001810:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10001817:	83 ec 0c             	sub    esp,0xc
1000181a:	ff 75 18             	push   DWORD PTR [ebp+0x18]
1000181d:	e8 fc ff ff ff       	call   1000181e <drawBasicWindowX(int, int, int, int, char const*, bool)+0x1f7>	1000181e: R_386_PC32	strlen
10001822:	83 c4 10             	add    esp,0x10
10001825:	89 c2                	mov    edx,eax
10001827:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000182a:	39 c2                	cmp    edx,eax
1000182c:	76 25                	jbe    10001853 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x22c>
1000182e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000182f: R_386_32	term
10001833:	8b 4d e0             	mov    ecx,DWORD PTR [ebp-0x20]
10001836:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
10001839:	01 ca                	add    edx,ecx
1000183b:	8a 12                	mov    dl,BYTE PTR [edx]
1000183d:	0f be d2             	movsx  edx,dl
10001840:	6a 01                	push   0x1
10001842:	6a 0f                	push   0xf
10001844:	52                   	push   edx
10001845:	50                   	push   eax
10001846:	e8 fc ff ff ff       	call   10001847 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x220>	10001847: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
1000184b:	83 c4 10             	add    esp,0x10
1000184e:	ff 45 e0             	inc    DWORD PTR [ebp-0x20]
10001851:	eb c4                	jmp    10001817 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x1f0>
10001853:	90                   	nop
10001854:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10001857:	c9                   	leave  
10001858:	c3                   	ret    

10001859 <drawBasicWindow(int, int, int, int, char const*)>:
10001859:	55                   	push   ebp
1000185a:	89 e5                	mov    ebp,esp
1000185c:	83 ec 08             	sub    esp,0x8
1000185f:	83 ec 08             	sub    esp,0x8
10001862:	6a 00                	push   0x0
10001864:	ff 75 18             	push   DWORD PTR [ebp+0x18]
10001867:	ff 75 14             	push   DWORD PTR [ebp+0x14]
1000186a:	ff 75 10             	push   DWORD PTR [ebp+0x10]
1000186d:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10001870:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001873:	e8 fc ff ff ff       	call   10001874 <drawBasicWindow(int, int, int, int, char const*)+0x1b>	10001874: R_386_PC32	drawBasicWindowX(int, int, int, int, char const*, bool)
10001878:	83 c4 20             	add    esp,0x20
1000187b:	90                   	nop
1000187c:	c9                   	leave  
1000187d:	c3                   	ret    

1000187e <bootInstallKeybrd(KeyboardToken, bool*)>:
1000187e:	55                   	push   ebp
1000187f:	89 e5                	mov    ebp,esp
10001881:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10001884:	05 04 01 00 00       	add    eax,0x104
10001889:	8a 00                	mov    al,BYTE PTR [eax]
1000188b:	84 c0                	test   al,al
1000188d:	74 15                	je     100018a4 <bootInstallKeybrd(KeyboardToken, bool*)+0x26>
1000188f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001892:	66 83 f8 09          	cmp    ax,0x9
10001896:	75 0c                	jne    100018a4 <bootInstallKeybrd(KeyboardToken, bool*)+0x26>
10001898:	c6 05 00 00 00 00 7f 	mov    BYTE PTR ds:0x0,0x7f	1000189a: R_386_32	installKey
1000189f:	e9 94 00 00 00       	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
100018a4:	8a 45 0a             	mov    al,BYTE PTR [ebp+0xa]
100018a7:	84 c0                	test   al,al
100018a9:	0f 85 88 00 00 00    	jne    10001937 <bootInstallKeybrd(KeyboardToken, bool*)+0xb9>
100018af:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100018b2:	66 3d 0a 02          	cmp    ax,0x20a
100018b6:	75 09                	jne    100018c1 <bootInstallKeybrd(KeyboardToken, bool*)+0x43>
100018b8:	c6 05 00 00 00 00 1b 	mov    BYTE PTR ds:0x0,0x1b	100018ba: R_386_32	installKey
100018bf:	eb 77                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
100018c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100018c4:	66 3d 0d 02          	cmp    ax,0x20d
100018c8:	75 09                	jne    100018d3 <bootInstallKeybrd(KeyboardToken, bool*)+0x55>
100018ca:	c6 05 00 00 00 00 03 	mov    BYTE PTR ds:0x0,0x3	100018cc: R_386_32	installKey
100018d1:	eb 65                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
100018d3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100018d6:	66 3d 0e 02          	cmp    ax,0x20e
100018da:	75 09                	jne    100018e5 <bootInstallKeybrd(KeyboardToken, bool*)+0x67>
100018dc:	c6 05 00 00 00 00 04 	mov    BYTE PTR ds:0x0,0x4	100018de: R_386_32	installKey
100018e3:	eb 53                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
100018e5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100018e8:	66 3d 0b 02          	cmp    ax,0x20b
100018ec:	75 09                	jne    100018f7 <bootInstallKeybrd(KeyboardToken, bool*)+0x79>
100018ee:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	100018f0: R_386_32	installKey
100018f5:	eb 41                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
100018f7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100018fa:	66 3d 0c 02          	cmp    ax,0x20c
100018fe:	75 09                	jne    10001909 <bootInstallKeybrd(KeyboardToken, bool*)+0x8b>
10001900:	c6 05 00 00 00 00 02 	mov    BYTE PTR ds:0x0,0x2	10001902: R_386_32	installKey
10001907:	eb 2f                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
10001909:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000190c:	66 3d 05 02          	cmp    ax,0x205
10001910:	75 09                	jne    1000191b <bootInstallKeybrd(KeyboardToken, bool*)+0x9d>
10001912:	c6 05 00 00 00 00 7d 	mov    BYTE PTR ds:0x0,0x7d	10001914: R_386_32	installKey
10001919:	eb 1d                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
1000191b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000191e:	66 3d 05 02          	cmp    ax,0x205
10001922:	75 09                	jne    1000192d <bootInstallKeybrd(KeyboardToken, bool*)+0xaf>
10001924:	c6 05 00 00 00 00 7e 	mov    BYTE PTR ds:0x0,0x7e	10001926: R_386_32	installKey
1000192b:	eb 0b                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
1000192d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001930:	a2 00 00 00 00       	mov    ds:0x0,al	10001931: R_386_32	installKey
10001935:	eb 01                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
10001937:	90                   	nop
10001938:	5d                   	pop    ebp
10001939:	c3                   	ret    

1000193a <bootInstallTasks(int)>:
1000193a:	55                   	push   ebp
1000193b:	89 e5                	mov    ebp,esp
1000193d:	83 ec 08             	sub    esp,0x8
10001940:	a1 00 00 00 00       	mov    eax,ds:0x0	10001941: R_386_32	term
10001945:	83 ec 04             	sub    esp,0x4
10001948:	6a 08                	push   0x8
1000194a:	6a 18                	push   0x18
1000194c:	50                   	push   eax
1000194d:	e8 fc ff ff ff       	call   1000194e <bootInstallTasks(int)+0x14>	1000194e: R_386_PC32	VgaText::setCursor(int, int)
10001952:	83 c4 10             	add    esp,0x10
10001955:	a1 00 00 00 00       	mov    eax,ds:0x0	10001956: R_386_32	term
1000195a:	83 ec 08             	sub    esp,0x8
1000195d:	68 90 ba 00 10       	push   0x1000ba90	1000195e: R_386_32	.text
10001962:	50                   	push   eax
10001963:	e8 fc ff ff ff       	call   10001964 <bootInstallTasks(int)+0x2a>	10001964: R_386_PC32	VgaText::puts(char const*)
10001968:	83 c4 10             	add    esp,0x10
1000196b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000196c: R_386_32	term
10001970:	83 ec 04             	sub    esp,0x4
10001973:	6a 0a                	push   0xa
10001975:	6a 1a                	push   0x1a
10001977:	50                   	push   eax
10001978:	e8 fc ff ff ff       	call   10001979 <bootInstallTasks(int)+0x3f>	10001979: R_386_PC32	VgaText::setCursor(int, int)
1000197d:	83 c4 10             	add    esp,0x10
10001980:	a1 00 00 00 00       	mov    eax,ds:0x0	10001981: R_386_32	term
10001985:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
10001989:	75 07                	jne    10001992 <bootInstallTasks(int)+0x58>
1000198b:	ba b8 ba 00 10       	mov    edx,0x1000bab8	1000198c: R_386_32	.text
10001990:	eb 05                	jmp    10001997 <bootInstallTasks(int)+0x5d>
10001992:	ba bb ba 00 10       	mov    edx,0x1000babb	10001993: R_386_32	.text
10001997:	83 ec 08             	sub    esp,0x8
1000199a:	52                   	push   edx
1000199b:	50                   	push   eax
1000199c:	e8 fc ff ff ff       	call   1000199d <bootInstallTasks(int)+0x63>	1000199d: R_386_PC32	VgaText::puts(char const*)
100019a1:	83 c4 10             	add    esp,0x10
100019a4:	a1 00 00 00 00       	mov    eax,ds:0x0	100019a5: R_386_32	term
100019a9:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
100019ad:	78 07                	js     100019b6 <bootInstallTasks(int)+0x7c>
100019af:	ba 00 00 00 00       	mov    edx,0x0
100019b4:	eb 05                	jmp    100019bb <bootInstallTasks(int)+0x81>
100019b6:	ba 07 00 00 00       	mov    edx,0x7
100019bb:	6a 0f                	push   0xf
100019bd:	52                   	push   edx
100019be:	68 be ba 00 10       	push   0x1000babe	100019bf: R_386_32	.text
100019c3:	50                   	push   eax
100019c4:	e8 fc ff ff ff       	call   100019c5 <bootInstallTasks(int)+0x8b>	100019c5: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
100019c9:	83 c4 10             	add    esp,0x10
100019cc:	a1 00 00 00 00       	mov    eax,ds:0x0	100019cd: R_386_32	term
100019d1:	83 ec 04             	sub    esp,0x4
100019d4:	6a 0b                	push   0xb
100019d6:	6a 1a                	push   0x1a
100019d8:	50                   	push   eax
100019d9:	e8 fc ff ff ff       	call   100019da <bootInstallTasks(int)+0xa0>	100019da: R_386_PC32	VgaText::setCursor(int, int)
100019de:	83 c4 10             	add    esp,0x10
100019e1:	a1 00 00 00 00       	mov    eax,ds:0x0	100019e2: R_386_32	term
100019e6:	83 7d 08 01          	cmp    DWORD PTR [ebp+0x8],0x1
100019ea:	75 07                	jne    100019f3 <bootInstallTasks(int)+0xb9>
100019ec:	ba b8 ba 00 10       	mov    edx,0x1000bab8	100019ed: R_386_32	.text
100019f1:	eb 05                	jmp    100019f8 <bootInstallTasks(int)+0xbe>
100019f3:	ba bb ba 00 10       	mov    edx,0x1000babb	100019f4: R_386_32	.text
100019f8:	83 ec 08             	sub    esp,0x8
100019fb:	52                   	push   edx
100019fc:	50                   	push   eax
100019fd:	e8 fc ff ff ff       	call   100019fe <bootInstallTasks(int)+0xc4>	100019fe: R_386_PC32	VgaText::puts(char const*)
10001a02:	83 c4 10             	add    esp,0x10
10001a05:	a1 00 00 00 00       	mov    eax,ds:0x0	10001a06: R_386_32	term
10001a0a:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
10001a0e:	7e 07                	jle    10001a17 <bootInstallTasks(int)+0xdd>
10001a10:	ba 00 00 00 00       	mov    edx,0x0
10001a15:	eb 05                	jmp    10001a1c <bootInstallTasks(int)+0xe2>
10001a17:	ba 07 00 00 00       	mov    edx,0x7
10001a1c:	6a 0f                	push   0xf
10001a1e:	52                   	push   edx
10001a1f:	68 d6 ba 00 10       	push   0x1000bad6	10001a20: R_386_32	.text
10001a24:	50                   	push   eax
10001a25:	e8 fc ff ff ff       	call   10001a26 <bootInstallTasks(int)+0xec>	10001a26: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10001a2a:	83 c4 10             	add    esp,0x10
10001a2d:	a1 00 00 00 00       	mov    eax,ds:0x0	10001a2e: R_386_32	term
10001a32:	83 ec 04             	sub    esp,0x4
10001a35:	6a 0c                	push   0xc
10001a37:	6a 1a                	push   0x1a
10001a39:	50                   	push   eax
10001a3a:	e8 fc ff ff ff       	call   10001a3b <bootInstallTasks(int)+0x101>	10001a3b: R_386_PC32	VgaText::setCursor(int, int)
10001a3f:	83 c4 10             	add    esp,0x10
10001a42:	a1 00 00 00 00       	mov    eax,ds:0x0	10001a43: R_386_32	term
10001a47:	83 7d 08 02          	cmp    DWORD PTR [ebp+0x8],0x2
10001a4b:	75 07                	jne    10001a54 <bootInstallTasks(int)+0x11a>
10001a4d:	ba b8 ba 00 10       	mov    edx,0x1000bab8	10001a4e: R_386_32	.text
10001a52:	eb 05                	jmp    10001a59 <bootInstallTasks(int)+0x11f>
10001a54:	ba bb ba 00 10       	mov    edx,0x1000babb	10001a55: R_386_32	.text
10001a59:	83 ec 08             	sub    esp,0x8
10001a5c:	52                   	push   edx
10001a5d:	50                   	push   eax
10001a5e:	e8 fc ff ff ff       	call   10001a5f <bootInstallTasks(int)+0x125>	10001a5f: R_386_PC32	VgaText::puts(char const*)
10001a63:	83 c4 10             	add    esp,0x10
10001a66:	a1 00 00 00 00       	mov    eax,ds:0x0	10001a67: R_386_32	term
10001a6b:	83 7d 08 01          	cmp    DWORD PTR [ebp+0x8],0x1
10001a6f:	7e 07                	jle    10001a78 <bootInstallTasks(int)+0x13e>
10001a71:	ba 00 00 00 00       	mov    edx,0x0
10001a76:	eb 05                	jmp    10001a7d <bootInstallTasks(int)+0x143>
10001a78:	ba 07 00 00 00       	mov    edx,0x7
10001a7d:	6a 0f                	push   0xf
10001a7f:	52                   	push   edx
10001a80:	68 ec ba 00 10       	push   0x1000baec	10001a81: R_386_32	.text
10001a85:	50                   	push   eax
10001a86:	e8 fc ff ff ff       	call   10001a87 <bootInstallTasks(int)+0x14d>	10001a87: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10001a8b:	83 c4 10             	add    esp,0x10
10001a8e:	a1 00 00 00 00       	mov    eax,ds:0x0	10001a8f: R_386_32	term
10001a93:	83 ec 04             	sub    esp,0x4
10001a96:	6a 0d                	push   0xd
10001a98:	6a 1a                	push   0x1a
10001a9a:	50                   	push   eax
10001a9b:	e8 fc ff ff ff       	call   10001a9c <bootInstallTasks(int)+0x162>	10001a9c: R_386_PC32	VgaText::setCursor(int, int)
10001aa0:	83 c4 10             	add    esp,0x10
10001aa3:	a1 00 00 00 00       	mov    eax,ds:0x0	10001aa4: R_386_32	term
10001aa8:	83 7d 08 03          	cmp    DWORD PTR [ebp+0x8],0x3
10001aac:	75 07                	jne    10001ab5 <bootInstallTasks(int)+0x17b>
10001aae:	ba b8 ba 00 10       	mov    edx,0x1000bab8	10001aaf: R_386_32	.text
10001ab3:	eb 05                	jmp    10001aba <bootInstallTasks(int)+0x180>
10001ab5:	ba bb ba 00 10       	mov    edx,0x1000babb	10001ab6: R_386_32	.text
10001aba:	83 ec 08             	sub    esp,0x8
10001abd:	52                   	push   edx
10001abe:	50                   	push   eax
10001abf:	e8 fc ff ff ff       	call   10001ac0 <bootInstallTasks(int)+0x186>	10001ac0: R_386_PC32	VgaText::puts(char const*)
10001ac4:	83 c4 10             	add    esp,0x10
10001ac7:	a1 00 00 00 00       	mov    eax,ds:0x0	10001ac8: R_386_32	term
10001acc:	83 7d 08 02          	cmp    DWORD PTR [ebp+0x8],0x2
10001ad0:	7e 07                	jle    10001ad9 <bootInstallTasks(int)+0x19f>
10001ad2:	ba 00 00 00 00       	mov    edx,0x0
10001ad7:	eb 05                	jmp    10001ade <bootInstallTasks(int)+0x1a4>
10001ad9:	ba 07 00 00 00       	mov    edx,0x7
10001ade:	6a 0f                	push   0xf
10001ae0:	52                   	push   edx
10001ae1:	68 02 bb 00 10       	push   0x1000bb02	10001ae2: R_386_32	.text
10001ae6:	50                   	push   eax
10001ae7:	e8 fc ff ff ff       	call   10001ae8 <bootInstallTasks(int)+0x1ae>	10001ae8: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10001aec:	83 c4 10             	add    esp,0x10
10001aef:	a1 00 00 00 00       	mov    eax,ds:0x0	10001af0: R_386_32	term
10001af4:	83 ec 04             	sub    esp,0x4
10001af7:	6a 0e                	push   0xe
10001af9:	6a 1a                	push   0x1a
10001afb:	50                   	push   eax
10001afc:	e8 fc ff ff ff       	call   10001afd <bootInstallTasks(int)+0x1c3>	10001afd: R_386_PC32	VgaText::setCursor(int, int)
10001b01:	83 c4 10             	add    esp,0x10
10001b04:	a1 00 00 00 00       	mov    eax,ds:0x0	10001b05: R_386_32	term
10001b09:	83 7d 08 04          	cmp    DWORD PTR [ebp+0x8],0x4
10001b0d:	75 07                	jne    10001b16 <bootInstallTasks(int)+0x1dc>
10001b0f:	ba b8 ba 00 10       	mov    edx,0x1000bab8	10001b10: R_386_32	.text
10001b14:	eb 05                	jmp    10001b1b <bootInstallTasks(int)+0x1e1>
10001b16:	ba bb ba 00 10       	mov    edx,0x1000babb	10001b17: R_386_32	.text
10001b1b:	83 ec 08             	sub    esp,0x8
10001b1e:	52                   	push   edx
10001b1f:	50                   	push   eax
10001b20:	e8 fc ff ff ff       	call   10001b21 <bootInstallTasks(int)+0x1e7>	10001b21: R_386_PC32	VgaText::puts(char const*)
10001b25:	83 c4 10             	add    esp,0x10
10001b28:	a1 00 00 00 00       	mov    eax,ds:0x0	10001b29: R_386_32	term
10001b2d:	83 7d 08 03          	cmp    DWORD PTR [ebp+0x8],0x3
10001b31:	7e 07                	jle    10001b3a <bootInstallTasks(int)+0x200>
10001b33:	ba 00 00 00 00       	mov    edx,0x0
10001b38:	eb 05                	jmp    10001b3f <bootInstallTasks(int)+0x205>
10001b3a:	ba 07 00 00 00       	mov    edx,0x7
10001b3f:	6a 0f                	push   0xf
10001b41:	52                   	push   edx
10001b42:	68 16 bb 00 10       	push   0x1000bb16	10001b43: R_386_32	.text
10001b47:	50                   	push   eax
10001b48:	e8 fc ff ff ff       	call   10001b49 <bootInstallTasks(int)+0x20f>	10001b49: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10001b4d:	83 c4 10             	add    esp,0x10
10001b50:	a1 00 00 00 00       	mov    eax,ds:0x0	10001b51: R_386_32	term
10001b55:	83 ec 04             	sub    esp,0x4
10001b58:	6a 0f                	push   0xf
10001b5a:	6a 1a                	push   0x1a
10001b5c:	50                   	push   eax
10001b5d:	e8 fc ff ff ff       	call   10001b5e <bootInstallTasks(int)+0x224>	10001b5e: R_386_PC32	VgaText::setCursor(int, int)
10001b62:	83 c4 10             	add    esp,0x10
10001b65:	a1 00 00 00 00       	mov    eax,ds:0x0	10001b66: R_386_32	term
10001b6a:	83 7d 08 05          	cmp    DWORD PTR [ebp+0x8],0x5
10001b6e:	75 07                	jne    10001b77 <bootInstallTasks(int)+0x23d>
10001b70:	ba b8 ba 00 10       	mov    edx,0x1000bab8	10001b71: R_386_32	.text
10001b75:	eb 05                	jmp    10001b7c <bootInstallTasks(int)+0x242>
10001b77:	ba bb ba 00 10       	mov    edx,0x1000babb	10001b78: R_386_32	.text
10001b7c:	83 ec 08             	sub    esp,0x8
10001b7f:	52                   	push   edx
10001b80:	50                   	push   eax
10001b81:	e8 fc ff ff ff       	call   10001b82 <bootInstallTasks(int)+0x248>	10001b82: R_386_PC32	VgaText::puts(char const*)
10001b86:	83 c4 10             	add    esp,0x10
10001b89:	a1 00 00 00 00       	mov    eax,ds:0x0	10001b8a: R_386_32	term
10001b8e:	83 7d 08 04          	cmp    DWORD PTR [ebp+0x8],0x4
10001b92:	7e 07                	jle    10001b9b <bootInstallTasks(int)+0x261>
10001b94:	ba 00 00 00 00       	mov    edx,0x0
10001b99:	eb 05                	jmp    10001ba0 <bootInstallTasks(int)+0x266>
10001b9b:	ba 07 00 00 00       	mov    edx,0x7
10001ba0:	6a 0f                	push   0xf
10001ba2:	52                   	push   edx
10001ba3:	68 2e bb 00 10       	push   0x1000bb2e	10001ba4: R_386_32	.text
10001ba8:	50                   	push   eax
10001ba9:	e8 fc ff ff ff       	call   10001baa <bootInstallTasks(int)+0x270>	10001baa: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10001bae:	83 c4 10             	add    esp,0x10
10001bb1:	90                   	nop
10001bb2:	c9                   	leave  
10001bb3:	c3                   	ret    

10001bb4 <ror(unsigned long long, int, int)>:
10001bb4:	55                   	push   ebp
10001bb5:	89 e5                	mov    ebp,esp
10001bb7:	56                   	push   esi
10001bb8:	53                   	push   ebx
10001bb9:	83 ec 20             	sub    esp,0x20
10001bbc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001bbf:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10001bc2:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10001bc5:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10001bc8:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10001bcb:	ba 01 00 00 00       	mov    edx,0x1
10001bd0:	88 c1                	mov    cl,al
10001bd2:	d3 e2                	shl    edx,cl
10001bd4:	89 d0                	mov    eax,edx
10001bd6:	48                   	dec    eax
10001bd7:	99                   	cdq    
10001bd8:	89 c1                	mov    ecx,eax
10001bda:	23 4d e0             	and    ecx,DWORD PTR [ebp-0x20]
10001bdd:	89 4d f0             	mov    DWORD PTR [ebp-0x10],ecx
10001be0:	89 d0                	mov    eax,edx
10001be2:	23 45 e4             	and    eax,DWORD PTR [ebp-0x1c]
10001be5:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10001be8:	8b 4d 10             	mov    ecx,DWORD PTR [ebp+0x10]
10001beb:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10001bee:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10001bf1:	0f ad d0             	shrd   eax,edx,cl
10001bf4:	d3 ea                	shr    edx,cl
10001bf6:	f6 c1 20             	test   cl,0x20
10001bf9:	74 04                	je     10001bff <ror(unsigned long long, int, int)+0x4b>
10001bfb:	89 d0                	mov    eax,edx
10001bfd:	31 d2                	xor    edx,edx
10001bff:	89 c3                	mov    ebx,eax
10001c01:	89 d6                	mov    esi,edx
10001c03:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10001c06:	2b 45 10             	sub    eax,DWORD PTR [ebp+0x10]
10001c09:	89 c1                	mov    ecx,eax
10001c0b:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001c0e:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001c11:	0f a5 c2             	shld   edx,eax,cl
10001c14:	d3 e0                	shl    eax,cl
10001c16:	f6 c1 20             	test   cl,0x20
10001c19:	74 04                	je     10001c1f <ror(unsigned long long, int, int)+0x6b>
10001c1b:	89 c2                	mov    edx,eax
10001c1d:	31 c0                	xor    eax,eax
10001c1f:	89 d1                	mov    ecx,edx
10001c21:	89 c2                	mov    edx,eax
10001c23:	89 d8                	mov    eax,ebx
10001c25:	09 d0                	or     eax,edx
10001c27:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10001c2a:	89 f0                	mov    eax,esi
10001c2c:	09 c8                	or     eax,ecx
10001c2e:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10001c31:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10001c34:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10001c37:	83 c4 20             	add    esp,0x20
10001c3a:	5b                   	pop    ebx
10001c3b:	5e                   	pop    esi
10001c3c:	5d                   	pop    ebp
10001c3d:	c3                   	ret    

10001c3e <swapBits(unsigned long long, unsigned long long, unsigned long long)>:
10001c3e:	55                   	push   ebp
10001c3f:	89 e5                	mov    ebp,esp
10001c41:	56                   	push   esi
10001c42:	53                   	push   ebx
10001c43:	83 ec 40             	sub    esp,0x40
10001c46:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001c49:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10001c4c:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10001c4f:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10001c52:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10001c55:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
10001c58:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10001c5b:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10001c5e:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001c61:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10001c64:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10001c67:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10001c6a:	8b 4d e8             	mov    ecx,DWORD PTR [ebp-0x18]
10001c6d:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001c70:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001c73:	0f ad d0             	shrd   eax,edx,cl
10001c76:	d3 ea                	shr    edx,cl
10001c78:	f6 c1 20             	test   cl,0x20
10001c7b:	74 04                	je     10001c81 <swapBits(unsigned long long, unsigned long long, unsigned long long)+0x43>
10001c7d:	89 d0                	mov    eax,edx
10001c7f:	31 d2                	xor    edx,edx
10001c81:	89 c3                	mov    ebx,eax
10001c83:	89 d6                	mov    esi,edx
10001c85:	8b 4d e0             	mov    ecx,DWORD PTR [ebp-0x20]
10001c88:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001c8b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001c8e:	0f ad d0             	shrd   eax,edx,cl
10001c91:	d3 ea                	shr    edx,cl
10001c93:	f6 c1 20             	test   cl,0x20
10001c96:	74 04                	je     10001c9c <swapBits(unsigned long long, unsigned long long, unsigned long long)+0x5e>
10001c98:	89 d0                	mov    eax,edx
10001c9a:	31 d2                	xor    edx,edx
10001c9c:	89 d1                	mov    ecx,edx
10001c9e:	89 c2                	mov    edx,eax
10001ca0:	89 d8                	mov    eax,ebx
10001ca2:	31 d0                	xor    eax,edx
10001ca4:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10001ca7:	89 f0                	mov    eax,esi
10001ca9:	31 c8                	xor    eax,ecx
10001cab:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
10001cae:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10001cb1:	8b 55 d4             	mov    edx,DWORD PTR [ebp-0x2c]
10001cb4:	89 c6                	mov    esi,eax
10001cb6:	83 e6 01             	and    esi,0x1
10001cb9:	89 75 c8             	mov    DWORD PTR [ebp-0x38],esi
10001cbc:	89 d0                	mov    eax,edx
10001cbe:	83 e0 00             	and    eax,0x0
10001cc1:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10001cc4:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10001cc7:	8b 55 cc             	mov    edx,DWORD PTR [ebp-0x34]
10001cca:	89 c3                	mov    ebx,eax
10001ccc:	80 f7 00             	xor    bh,0x0
10001ccf:	89 5d b8             	mov    DWORD PTR [ebp-0x48],ebx
10001cd2:	89 d0                	mov    eax,edx
10001cd4:	80 f4 00             	xor    ah,0x0
10001cd7:	89 45 bc             	mov    DWORD PTR [ebp-0x44],eax
10001cda:	8b 55 b8             	mov    edx,DWORD PTR [ebp-0x48]
10001cdd:	8b 4d bc             	mov    ecx,DWORD PTR [ebp-0x44]
10001ce0:	89 c8                	mov    eax,ecx
10001ce2:	09 d0                	or     eax,edx
10001ce4:	85 c0                	test   eax,eax
10001ce6:	74 62                	je     10001d4a <swapBits(unsigned long long, unsigned long long, unsigned long long)+0x10c>
10001ce8:	8b 4d e0             	mov    ecx,DWORD PTR [ebp-0x20]
10001ceb:	b8 01 00 00 00       	mov    eax,0x1
10001cf0:	ba 00 00 00 00       	mov    edx,0x0
10001cf5:	0f a5 c2             	shld   edx,eax,cl
10001cf8:	d3 e0                	shl    eax,cl
10001cfa:	f6 c1 20             	test   cl,0x20
10001cfd:	74 04                	je     10001d03 <swapBits(unsigned long long, unsigned long long, unsigned long long)+0xc5>
10001cff:	89 c2                	mov    edx,eax
10001d01:	31 c0                	xor    eax,eax
10001d03:	89 c3                	mov    ebx,eax
10001d05:	89 d6                	mov    esi,edx
10001d07:	89 d8                	mov    eax,ebx
10001d09:	33 45 f0             	xor    eax,DWORD PTR [ebp-0x10]
10001d0c:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
10001d0f:	89 f0                	mov    eax,esi
10001d11:	33 45 f4             	xor    eax,DWORD PTR [ebp-0xc]
10001d14:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10001d17:	8b 4d e8             	mov    ecx,DWORD PTR [ebp-0x18]
10001d1a:	b8 01 00 00 00       	mov    eax,0x1
10001d1f:	ba 00 00 00 00       	mov    edx,0x0
10001d24:	0f a5 c2             	shld   edx,eax,cl
10001d27:	d3 e0                	shl    eax,cl
10001d29:	f6 c1 20             	test   cl,0x20
10001d2c:	74 04                	je     10001d32 <swapBits(unsigned long long, unsigned long long, unsigned long long)+0xf4>
10001d2e:	89 c2                	mov    edx,eax
10001d30:	31 c0                	xor    eax,eax
10001d32:	89 c1                	mov    ecx,eax
10001d34:	89 d3                	mov    ebx,edx
10001d36:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
10001d39:	8b 55 c4             	mov    edx,DWORD PTR [ebp-0x3c]
10001d3c:	89 c6                	mov    esi,eax
10001d3e:	31 ce                	xor    esi,ecx
10001d40:	89 75 d8             	mov    DWORD PTR [ebp-0x28],esi
10001d43:	31 d3                	xor    ebx,edx
10001d45:	89 5d dc             	mov    DWORD PTR [ebp-0x24],ebx
10001d48:	eb 0c                	jmp    10001d56 <swapBits(unsigned long long, unsigned long long, unsigned long long)+0x118>
10001d4a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001d4d:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001d50:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10001d53:	89 55 dc             	mov    DWORD PTR [ebp-0x24],edx
10001d56:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10001d59:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10001d5c:	83 c4 40             	add    esp,0x40
10001d5f:	5b                   	pop    ebx
10001d60:	5e                   	pop    esi
10001d61:	5d                   	pop    ebp
10001d62:	c3                   	ret    

10001d63 <getChecksum(unsigned int)>:
10001d63:	55                   	push   ebp
10001d64:	89 e5                	mov    ebp,esp
10001d66:	56                   	push   esi
10001d67:	53                   	push   ebx
10001d68:	83 ec 20             	sub    esp,0x20
10001d6b:	66 c7 45 f6 49 4e    	mov    WORD PTR [ebp-0xa],0x4e49
10001d71:	66 c7 45 f4 79 6e    	mov    WORD PTR [ebp-0xc],0x6e79
10001d77:	66 c7 45 f2 67 61    	mov    WORD PTR [ebp-0xe],0x6167
10001d7d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001d80:	c1 e8 10             	shr    eax,0x10
10001d83:	89 c1                	mov    ecx,eax
10001d85:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001d88:	89 c2                	mov    edx,eax
10001d8a:	89 d0                	mov    eax,edx
10001d8c:	c1 e0 06             	shl    eax,0x6
10001d8f:	29 d0                	sub    eax,edx
10001d91:	c1 e0 04             	shl    eax,0x4
10001d94:	01 d0                	add    eax,edx
10001d96:	31 c8                	xor    eax,ecx
10001d98:	66 89 45 f0          	mov    WORD PTR [ebp-0x10],ax
10001d9c:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
10001da0:	0f 84 b1 00 00 00    	je     10001e57 <getChecksum(unsigned int)+0xf4>
10001da6:	b8 f4 02 00 00       	mov    eax,0x2f4
10001dab:	ba 00 00 00 00       	mov    edx,0x0
10001db0:	f7 75 08             	div    DWORD PTR [ebp+0x8]
10001db3:	89 c3                	mov    ebx,eax
10001db5:	be 00 00 00 00       	mov    esi,0x0
10001dba:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001dbd:	ba 00 00 00 00       	mov    edx,0x0
10001dc2:	6a 1d                	push   0x1d
10001dc4:	6a 05                	push   0x5
10001dc6:	52                   	push   edx
10001dc7:	50                   	push   eax
10001dc8:	e8 fc ff ff ff       	call   10001dc9 <getChecksum(unsigned int)+0x66>	10001dc9: R_386_PC32	ror(unsigned long long, int, int)
10001dcd:	83 c4 10             	add    esp,0x10
10001dd0:	05 52 3f 04 00       	add    eax,0x43f52
10001dd5:	83 d2 00             	adc    edx,0x0
10001dd8:	89 d9                	mov    ecx,ebx
10001dda:	31 c1                	xor    ecx,eax
10001ddc:	89 4d e0             	mov    DWORD PTR [ebp-0x20],ecx
10001ddf:	31 d6                	xor    esi,edx
10001de1:	89 75 e4             	mov    DWORD PTR [ebp-0x1c],esi
10001de4:	8b 55 e0             	mov    edx,DWORD PTR [ebp-0x20]
10001de7:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
10001deb:	66 0f af c2          	imul   ax,dx
10001def:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10001df3:	b8 ea 00 00 00       	mov    eax,0xea
10001df8:	ba 00 00 00 00       	mov    edx,0x0
10001dfd:	f7 75 08             	div    DWORD PTR [ebp+0x8]
10001e00:	89 c3                	mov    ebx,eax
10001e02:	be 00 00 00 00       	mov    esi,0x0
10001e07:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001e0a:	ba 00 00 00 00       	mov    edx,0x0
10001e0f:	6a 1f                	push   0x1f
10001e11:	6a 03                	push   0x3
10001e13:	52                   	push   edx
10001e14:	50                   	push   eax
10001e15:	e8 fc ff ff ff       	call   10001e16 <getChecksum(unsigned int)+0xb3>	10001e16: R_386_PC32	ror(unsigned long long, int, int)
10001e1a:	83 c4 10             	add    esp,0x10
10001e1d:	05 05 db 09 00       	add    eax,0x9db05
10001e22:	83 d2 00             	adc    edx,0x0
10001e25:	89 d9                	mov    ecx,ebx
10001e27:	31 c1                	xor    ecx,eax
10001e29:	89 4d d8             	mov    DWORD PTR [ebp-0x28],ecx
10001e2c:	31 d6                	xor    esi,edx
10001e2e:	89 75 dc             	mov    DWORD PTR [ebp-0x24],esi
10001e31:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10001e34:	66 29 45 f4          	sub    WORD PTR [ebp-0xc],ax
10001e38:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
10001e3c:	33 45 f4             	xor    eax,DWORD PTR [ebp-0xc]
10001e3f:	25 d2 04 00 00       	and    eax,0x4d2
10001e44:	66 01 45 f2          	add    WORD PTR [ebp-0xe],ax
10001e48:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001e4b:	66 01 45 f2          	add    WORD PTR [ebp-0xe],ax
10001e4f:	d1 6d 08             	shr    DWORD PTR [ebp+0x8],1
10001e52:	e9 45 ff ff ff       	jmp    10001d9c <getChecksum(unsigned int)+0x39>
10001e57:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
10001e5b:	33 45 f4             	xor    eax,DWORD PTR [ebp-0xc]
10001e5e:	66 33 45 f2          	xor    ax,WORD PTR [ebp-0xe]
10001e62:	33 45 f0             	xor    eax,DWORD PTR [ebp-0x10]
10001e65:	0f b7 c0             	movzx  eax,ax
10001e68:	25 ff 7f 00 00       	and    eax,0x7fff
10001e6d:	8d 65 f8             	lea    esp,[ebp-0x8]
10001e70:	5b                   	pop    ebx
10001e71:	5e                   	pop    esi
10001e72:	5d                   	pop    ebp
10001e73:	c3                   	ret    

10001e74 <createKey(char*, unsigned int)>:
10001e74:	55                   	push   ebp
10001e75:	89 e5                	mov    ebp,esp
10001e77:	53                   	push   ebx
10001e78:	83 ec 34             	sub    esp,0x34
10001e7b:	68 40 bb 00 10       	push   0x1000bb40	10001e7c: R_386_32	.text
10001e80:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001e83:	e8 fc ff ff ff       	call   10001e84 <createKey(char*, unsigned int)+0x10>	10001e84: R_386_PC32	strcpy
10001e88:	83 c4 08             	add    esp,0x8
10001e8b:	8b 4d 0c             	mov    ecx,DWORD PTR [ebp+0xc]
10001e8e:	bb 00 00 00 00       	mov    ebx,0x0
10001e93:	89 c8                	mov    eax,ecx
10001e95:	89 da                	mov    edx,ebx
10001e97:	0f a4 c2 0f          	shld   edx,eax,0xf
10001e9b:	c1 e0 0f             	shl    eax,0xf
10001e9e:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10001ea1:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10001ea4:	83 ec 04             	sub    esp,0x4
10001ea7:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10001eaa:	e8 fc ff ff ff       	call   10001eab <createKey(char*, unsigned int)+0x37>	10001eab: R_386_PC32	getChecksum(unsigned int)
10001eaf:	83 c4 08             	add    esp,0x8
10001eb2:	ba 00 00 00 00       	mov    edx,0x0
10001eb7:	09 45 f0             	or     DWORD PTR [ebp-0x10],eax
10001eba:	09 55 f4             	or     DWORD PTR [ebp-0xc],edx
10001ebd:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [ebp-0x14],0x0
10001ec4:	81 7d ec db 24 00 00 	cmp    DWORD PTR [ebp-0x14],0x24db
10001ecb:	7f 7f                	jg     10001f4c <createKey(char*, unsigned int)+0xd8>
10001ecd:	81 75 f0 95 38 e4 b5 	xor    DWORD PTR [ebp-0x10],0xb5e43895
10001ed4:	83 75 f4 37          	xor    DWORD PTR [ebp-0xc],0x37
10001ed8:	6a 00                	push   0x0
10001eda:	6a 08                	push   0x8
10001edc:	6a 00                	push   0x0
10001ede:	6a 03                	push   0x3
10001ee0:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10001ee3:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10001ee6:	e8 fc ff ff ff       	call   10001ee7 <createKey(char*, unsigned int)+0x73>	10001ee7: R_386_PC32	swapBits(unsigned long long, unsigned long long, unsigned long long)
10001eeb:	83 c4 18             	add    esp,0x18
10001eee:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10001ef1:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10001ef4:	6a 00                	push   0x0
10001ef6:	6a 0c                	push   0xc
10001ef8:	6a 00                	push   0x0
10001efa:	6a 0d                	push   0xd
10001efc:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10001eff:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10001f02:	e8 fc ff ff ff       	call   10001f03 <createKey(char*, unsigned int)+0x8f>	10001f03: R_386_PC32	swapBits(unsigned long long, unsigned long long, unsigned long long)
10001f07:	83 c4 18             	add    esp,0x18
10001f0a:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10001f0d:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10001f10:	6a 00                	push   0x0
10001f12:	6a 16                	push   0x16
10001f14:	6a 00                	push   0x0
10001f16:	6a 25                	push   0x25
10001f18:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10001f1b:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10001f1e:	e8 fc ff ff ff       	call   10001f1f <createKey(char*, unsigned int)+0xab>	10001f1f: R_386_PC32	swapBits(unsigned long long, unsigned long long, unsigned long long)
10001f23:	83 c4 18             	add    esp,0x18
10001f26:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10001f29:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10001f2c:	6a 2a                	push   0x2a
10001f2e:	6a 13                	push   0x13
10001f30:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10001f33:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10001f36:	e8 fc ff ff ff       	call   10001f37 <createKey(char*, unsigned int)+0xc3>	10001f37: R_386_PC32	ror(unsigned long long, int, int)
10001f3b:	83 c4 10             	add    esp,0x10
10001f3e:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10001f41:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10001f44:	ff 45 ec             	inc    DWORD PTR [ebp-0x14]
10001f47:	e9 78 ff ff ff       	jmp    10001ec4 <createKey(char*, unsigned int)+0x50>
10001f4c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001f4f:	83 e0 0f             	and    eax,0xf
10001f52:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
10001f55:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001f58:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001f5b:	0f ac d0 04          	shrd   eax,edx,0x4
10001f5f:	c1 ea 04             	shr    edx,0x4
10001f62:	89 c1                	mov    ecx,eax
10001f64:	89 d3                	mov    ebx,edx
10001f66:	89 4d f0             	mov    DWORD PTR [ebp-0x10],ecx
10001f69:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
10001f6c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001f6f:	83 e0 0f             	and    eax,0xf
10001f72:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10001f75:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001f78:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001f7b:	0f ac d0 04          	shrd   eax,edx,0x4
10001f7f:	c1 ea 04             	shr    edx,0x4
10001f82:	89 c1                	mov    ecx,eax
10001f84:	89 d3                	mov    ebx,edx
10001f86:	89 4d f0             	mov    DWORD PTR [ebp-0x10],ecx
10001f89:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
10001f8c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001f8f:	83 e0 0f             	and    eax,0xf
10001f92:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10001f95:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001f98:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001f9b:	0f ac d0 04          	shrd   eax,edx,0x4
10001f9f:	c1 ea 04             	shr    edx,0x4
10001fa2:	89 c1                	mov    ecx,eax
10001fa4:	89 d3                	mov    ebx,edx
10001fa6:	89 4d f0             	mov    DWORD PTR [ebp-0x10],ecx
10001fa9:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
10001fac:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001faf:	25 ff 03 00 00       	and    eax,0x3ff
10001fb4:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10001fb7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001fba:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001fbd:	0f ac d0 0a          	shrd   eax,edx,0xa
10001fc1:	c1 ea 0a             	shr    edx,0xa
10001fc4:	89 c1                	mov    ecx,eax
10001fc6:	89 d3                	mov    ebx,edx
10001fc8:	89 4d f0             	mov    DWORD PTR [ebp-0x10],ecx
10001fcb:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
10001fce:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001fd1:	25 ff 03 00 00       	and    eax,0x3ff
10001fd6:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10001fd9:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001fdc:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001fdf:	0f ac d0 0a          	shrd   eax,edx,0xa
10001fe3:	c1 ea 0a             	shr    edx,0xa
10001fe6:	89 c1                	mov    ecx,eax
10001fe8:	89 d3                	mov    ebx,edx
10001fea:	89 4d f0             	mov    DWORD PTR [ebp-0x10],ecx
10001fed:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
10001ff0:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001ff3:	25 ff 03 00 00       	and    eax,0x3ff
10001ff8:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
10001ffb:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001ffe:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10002001:	0f ac d0 0a          	shrd   eax,edx,0xa
10002005:	c1 ea 0a             	shr    edx,0xa
10002008:	89 c1                	mov    ecx,eax
1000200a:	89 d3                	mov    ebx,edx
1000200c:	89 4d f0             	mov    DWORD PTR [ebp-0x10],ecx
1000200f:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
10002012:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
10002015:	05 00 00 00 00       	add    eax,0x0	10002016: R_386_32	lookupA
1000201a:	8a 10                	mov    dl,BYTE PTR [eax]
1000201c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000201f:	88 10                	mov    BYTE PTR [eax],dl
10002021:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002024:	8d 50 01             	lea    edx,[eax+0x1]
10002027:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000202a:	05 00 00 00 00       	add    eax,0x0	1000202b: R_386_32	lookupA
1000202f:	8a 00                	mov    al,BYTE PTR [eax]
10002031:	88 02                	mov    BYTE PTR [edx],al
10002033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002036:	8d 50 0f             	lea    edx,[eax+0xf]
10002039:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000203c:	05 00 00 00 00       	add    eax,0x0	1000203d: R_386_32	lookupA
10002041:	8a 00                	mov    al,BYTE PTR [eax]
10002043:	88 02                	mov    BYTE PTR [edx],al
10002045:	8b 4d dc             	mov    ecx,DWORD PTR [ebp-0x24]
10002048:	b8 1f 85 eb 51       	mov    eax,0x51eb851f
1000204d:	f7 e9                	imul   ecx
1000204f:	c1 fa 05             	sar    edx,0x5
10002052:	89 c8                	mov    eax,ecx
10002054:	c1 f8 1f             	sar    eax,0x1f
10002057:	29 c2                	sub    edx,eax
10002059:	89 d0                	mov    eax,edx
1000205b:	b9 0a 00 00 00       	mov    ecx,0xa
10002060:	99                   	cdq    
10002061:	f7 f9                	idiv   ecx
10002063:	89 d0                	mov    eax,edx
10002065:	8d 50 30             	lea    edx,[eax+0x30]
10002068:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000206b:	83 c0 03             	add    eax,0x3
1000206e:	88 10                	mov    BYTE PTR [eax],dl
10002070:	8b 4d dc             	mov    ecx,DWORD PTR [ebp-0x24]
10002073:	b8 67 66 66 66       	mov    eax,0x66666667
10002078:	f7 e9                	imul   ecx
1000207a:	c1 fa 02             	sar    edx,0x2
1000207d:	89 c8                	mov    eax,ecx
1000207f:	c1 f8 1f             	sar    eax,0x1f
10002082:	89 d1                	mov    ecx,edx
10002084:	29 c1                	sub    ecx,eax
10002086:	b8 67 66 66 66       	mov    eax,0x66666667
1000208b:	f7 e9                	imul   ecx
1000208d:	c1 fa 02             	sar    edx,0x2
10002090:	89 c8                	mov    eax,ecx
10002092:	c1 f8 1f             	sar    eax,0x1f
10002095:	29 c2                	sub    edx,eax
10002097:	89 d0                	mov    eax,edx
10002099:	c1 e0 02             	shl    eax,0x2
1000209c:	01 d0                	add    eax,edx
1000209e:	01 c0                	add    eax,eax
100020a0:	29 c1                	sub    ecx,eax
100020a2:	89 ca                	mov    edx,ecx
100020a4:	88 d0                	mov    al,dl
100020a6:	8d 50 30             	lea    edx,[eax+0x30]
100020a9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100020ac:	83 c0 04             	add    eax,0x4
100020af:	88 10                	mov    BYTE PTR [eax],dl
100020b1:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
100020b4:	b9 0a 00 00 00       	mov    ecx,0xa
100020b9:	99                   	cdq    
100020ba:	f7 f9                	idiv   ecx
100020bc:	89 d0                	mov    eax,edx
100020be:	8d 50 30             	lea    edx,[eax+0x30]
100020c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100020c4:	83 c0 05             	add    eax,0x5
100020c7:	88 10                	mov    BYTE PTR [eax],dl
100020c9:	8b 4d d8             	mov    ecx,DWORD PTR [ebp-0x28]
100020cc:	b8 1f 85 eb 51       	mov    eax,0x51eb851f
100020d1:	f7 e9                	imul   ecx
100020d3:	c1 fa 05             	sar    edx,0x5
100020d6:	89 c8                	mov    eax,ecx
100020d8:	c1 f8 1f             	sar    eax,0x1f
100020db:	29 c2                	sub    edx,eax
100020dd:	89 d0                	mov    eax,edx
100020df:	b9 0a 00 00 00       	mov    ecx,0xa
100020e4:	99                   	cdq    
100020e5:	f7 f9                	idiv   ecx
100020e7:	89 d0                	mov    eax,edx
100020e9:	8d 50 30             	lea    edx,[eax+0x30]
100020ec:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100020ef:	83 c0 07             	add    eax,0x7
100020f2:	88 10                	mov    BYTE PTR [eax],dl
100020f4:	8b 4d d8             	mov    ecx,DWORD PTR [ebp-0x28]
100020f7:	b8 67 66 66 66       	mov    eax,0x66666667
100020fc:	f7 e9                	imul   ecx
100020fe:	c1 fa 02             	sar    edx,0x2
10002101:	89 c8                	mov    eax,ecx
10002103:	c1 f8 1f             	sar    eax,0x1f
10002106:	89 d1                	mov    ecx,edx
10002108:	29 c1                	sub    ecx,eax
1000210a:	b8 67 66 66 66       	mov    eax,0x66666667
1000210f:	f7 e9                	imul   ecx
10002111:	c1 fa 02             	sar    edx,0x2
10002114:	89 c8                	mov    eax,ecx
10002116:	c1 f8 1f             	sar    eax,0x1f
10002119:	29 c2                	sub    edx,eax
1000211b:	89 d0                	mov    eax,edx
1000211d:	c1 e0 02             	shl    eax,0x2
10002120:	01 d0                	add    eax,edx
10002122:	01 c0                	add    eax,eax
10002124:	29 c1                	sub    ecx,eax
10002126:	89 ca                	mov    edx,ecx
10002128:	88 d0                	mov    al,dl
1000212a:	8d 50 30             	lea    edx,[eax+0x30]
1000212d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002130:	83 c0 08             	add    eax,0x8
10002133:	88 10                	mov    BYTE PTR [eax],dl
10002135:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10002138:	b9 0a 00 00 00       	mov    ecx,0xa
1000213d:	99                   	cdq    
1000213e:	f7 f9                	idiv   ecx
10002140:	89 d0                	mov    eax,edx
10002142:	8d 50 30             	lea    edx,[eax+0x30]
10002145:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002148:	83 c0 09             	add    eax,0x9
1000214b:	88 10                	mov    BYTE PTR [eax],dl
1000214d:	8b 4d d4             	mov    ecx,DWORD PTR [ebp-0x2c]
10002150:	b8 1f 85 eb 51       	mov    eax,0x51eb851f
10002155:	f7 e9                	imul   ecx
10002157:	c1 fa 05             	sar    edx,0x5
1000215a:	89 c8                	mov    eax,ecx
1000215c:	c1 f8 1f             	sar    eax,0x1f
1000215f:	29 c2                	sub    edx,eax
10002161:	89 d0                	mov    eax,edx
10002163:	b9 0a 00 00 00       	mov    ecx,0xa
10002168:	99                   	cdq    
10002169:	f7 f9                	idiv   ecx
1000216b:	89 d0                	mov    eax,edx
1000216d:	8d 50 30             	lea    edx,[eax+0x30]
10002170:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002173:	83 c0 0b             	add    eax,0xb
10002176:	88 10                	mov    BYTE PTR [eax],dl
10002178:	8b 4d d4             	mov    ecx,DWORD PTR [ebp-0x2c]
1000217b:	b8 67 66 66 66       	mov    eax,0x66666667
10002180:	f7 e9                	imul   ecx
10002182:	c1 fa 02             	sar    edx,0x2
10002185:	89 c8                	mov    eax,ecx
10002187:	c1 f8 1f             	sar    eax,0x1f
1000218a:	89 d1                	mov    ecx,edx
1000218c:	29 c1                	sub    ecx,eax
1000218e:	b8 67 66 66 66       	mov    eax,0x66666667
10002193:	f7 e9                	imul   ecx
10002195:	c1 fa 02             	sar    edx,0x2
10002198:	89 c8                	mov    eax,ecx
1000219a:	c1 f8 1f             	sar    eax,0x1f
1000219d:	29 c2                	sub    edx,eax
1000219f:	89 d0                	mov    eax,edx
100021a1:	c1 e0 02             	shl    eax,0x2
100021a4:	01 d0                	add    eax,edx
100021a6:	01 c0                	add    eax,eax
100021a8:	29 c1                	sub    ecx,eax
100021aa:	89 ca                	mov    edx,ecx
100021ac:	88 d0                	mov    al,dl
100021ae:	8d 50 30             	lea    edx,[eax+0x30]
100021b1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100021b4:	83 c0 0c             	add    eax,0xc
100021b7:	88 10                	mov    BYTE PTR [eax],dl
100021b9:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
100021bc:	b9 0a 00 00 00       	mov    ecx,0xa
100021c1:	99                   	cdq    
100021c2:	f7 f9                	idiv   ecx
100021c4:	89 d0                	mov    eax,edx
100021c6:	8d 50 30             	lea    edx,[eax+0x30]
100021c9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100021cc:	83 c0 0d             	add    eax,0xd
100021cf:	88 10                	mov    BYTE PTR [eax],dl
100021d1:	90                   	nop
100021d2:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100021d5:	c9                   	leave  
100021d6:	c3                   	ret    

100021d7 <retrieveBits(char*)>:
100021d7:	55                   	push   ebp
100021d8:	89 e5                	mov    ebp,esp
100021da:	57                   	push   edi
100021db:	56                   	push   esi
100021dc:	53                   	push   ebx
100021dd:	83 ec 4c             	sub    esp,0x4c
100021e0:	c7 45 ec ff ff ff ff 	mov    DWORD PTR [ebp-0x14],0xffffffff
100021e7:	c7 45 e8 ff ff ff ff 	mov    DWORD PTR [ebp-0x18],0xffffffff
100021ee:	c7 45 e4 ff ff ff ff 	mov    DWORD PTR [ebp-0x1c],0xffffffff
100021f5:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
100021fc:	83 7d e0 0f          	cmp    DWORD PTR [ebp-0x20],0xf
10002200:	7f 54                	jg     10002256 <retrieveBits(char*)+0x7f>
10002202:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10002205:	05 00 00 00 00       	add    eax,0x0	10002206: R_386_32	lookupA
1000220a:	8a 10                	mov    dl,BYTE PTR [eax]
1000220c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000220f:	8a 00                	mov    al,BYTE PTR [eax]
10002211:	38 c2                	cmp    dl,al
10002213:	75 06                	jne    1000221b <retrieveBits(char*)+0x44>
10002215:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10002218:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000221b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000221e:	05 00 00 00 00       	add    eax,0x0	1000221f: R_386_32	lookupB
10002223:	8a 10                	mov    dl,BYTE PTR [eax]
10002225:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002228:	40                   	inc    eax
10002229:	8a 00                	mov    al,BYTE PTR [eax]
1000222b:	38 c2                	cmp    dl,al
1000222d:	75 06                	jne    10002235 <retrieveBits(char*)+0x5e>
1000222f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10002232:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
10002235:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10002238:	05 00 00 00 00       	add    eax,0x0	10002239: R_386_32	lookupC
1000223d:	8a 10                	mov    dl,BYTE PTR [eax]
1000223f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002242:	83 c0 0f             	add    eax,0xf
10002245:	8a 00                	mov    al,BYTE PTR [eax]
10002247:	38 c2                	cmp    dl,al
10002249:	75 06                	jne    10002251 <retrieveBits(char*)+0x7a>
1000224b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000224e:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10002251:	ff 45 e0             	inc    DWORD PTR [ebp-0x20]
10002254:	eb a6                	jmp    100021fc <retrieveBits(char*)+0x25>
10002256:	83 7d ec ff          	cmp    DWORD PTR [ebp-0x14],0xffffffff
1000225a:	74 0c                	je     10002268 <retrieveBits(char*)+0x91>
1000225c:	83 7d e8 ff          	cmp    DWORD PTR [ebp-0x18],0xffffffff
10002260:	74 06                	je     10002268 <retrieveBits(char*)+0x91>
10002262:	83 7d e4 ff          	cmp    DWORD PTR [ebp-0x1c],0xffffffff
10002266:	75 0f                	jne    10002277 <retrieveBits(char*)+0xa0>
10002268:	b8 00 00 00 00       	mov    eax,0x0
1000226d:	ba 00 00 00 00       	mov    edx,0x0
10002272:	e9 02 02 00 00       	jmp    10002479 <retrieveBits(char*)+0x2a2>
10002277:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000227a:	83 c0 03             	add    eax,0x3
1000227d:	8a 00                	mov    al,BYTE PTR [eax]
1000227f:	0f be c0             	movsx  eax,al
10002282:	8d 50 d0             	lea    edx,[eax-0x30]
10002285:	89 d0                	mov    eax,edx
10002287:	c1 e0 02             	shl    eax,0x2
1000228a:	01 d0                	add    eax,edx
1000228c:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10002293:	01 d0                	add    eax,edx
10002295:	c1 e0 02             	shl    eax,0x2
10002298:	89 c6                	mov    esi,eax
1000229a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000229d:	83 c0 04             	add    eax,0x4
100022a0:	8a 00                	mov    al,BYTE PTR [eax]
100022a2:	0f be c0             	movsx  eax,al
100022a5:	8d 50 d0             	lea    edx,[eax-0x30]
100022a8:	89 d0                	mov    eax,edx
100022aa:	c1 e0 02             	shl    eax,0x2
100022ad:	01 d0                	add    eax,edx
100022af:	01 c0                	add    eax,eax
100022b1:	8d 14 06             	lea    edx,[esi+eax*1]
100022b4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100022b7:	83 c0 05             	add    eax,0x5
100022ba:	8a 00                	mov    al,BYTE PTR [eax]
100022bc:	0f be c0             	movsx  eax,al
100022bf:	83 e8 30             	sub    eax,0x30
100022c2:	01 d0                	add    eax,edx
100022c4:	99                   	cdq    
100022c5:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100022c8:	89 55 cc             	mov    DWORD PTR [ebp-0x34],edx
100022cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100022ce:	83 c0 07             	add    eax,0x7
100022d1:	8a 00                	mov    al,BYTE PTR [eax]
100022d3:	0f be c0             	movsx  eax,al
100022d6:	8d 50 d0             	lea    edx,[eax-0x30]
100022d9:	89 d0                	mov    eax,edx
100022db:	c1 e0 02             	shl    eax,0x2
100022de:	01 d0                	add    eax,edx
100022e0:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
100022e7:	01 d0                	add    eax,edx
100022e9:	c1 e0 02             	shl    eax,0x2
100022ec:	89 c6                	mov    esi,eax
100022ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100022f1:	83 c0 08             	add    eax,0x8
100022f4:	8a 00                	mov    al,BYTE PTR [eax]
100022f6:	0f be c0             	movsx  eax,al
100022f9:	8d 50 d0             	lea    edx,[eax-0x30]
100022fc:	89 d0                	mov    eax,edx
100022fe:	c1 e0 02             	shl    eax,0x2
10002301:	01 d0                	add    eax,edx
10002303:	01 c0                	add    eax,eax
10002305:	8d 14 06             	lea    edx,[esi+eax*1]
10002308:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000230b:	83 c0 09             	add    eax,0x9
1000230e:	8a 00                	mov    al,BYTE PTR [eax]
10002310:	0f be c0             	movsx  eax,al
10002313:	83 e8 30             	sub    eax,0x30
10002316:	01 d0                	add    eax,edx
10002318:	99                   	cdq    
10002319:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
1000231c:	89 55 c4             	mov    DWORD PTR [ebp-0x3c],edx
1000231f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002322:	83 c0 0b             	add    eax,0xb
10002325:	8a 00                	mov    al,BYTE PTR [eax]
10002327:	0f be c0             	movsx  eax,al
1000232a:	8d 50 d0             	lea    edx,[eax-0x30]
1000232d:	89 d0                	mov    eax,edx
1000232f:	c1 e0 02             	shl    eax,0x2
10002332:	01 d0                	add    eax,edx
10002334:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
1000233b:	01 d0                	add    eax,edx
1000233d:	c1 e0 02             	shl    eax,0x2
10002340:	89 c6                	mov    esi,eax
10002342:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002345:	83 c0 0c             	add    eax,0xc
10002348:	8a 00                	mov    al,BYTE PTR [eax]
1000234a:	0f be c0             	movsx  eax,al
1000234d:	8d 50 d0             	lea    edx,[eax-0x30]
10002350:	89 d0                	mov    eax,edx
10002352:	c1 e0 02             	shl    eax,0x2
10002355:	01 d0                	add    eax,edx
10002357:	01 c0                	add    eax,eax
10002359:	8d 14 06             	lea    edx,[esi+eax*1]
1000235c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000235f:	83 c0 0d             	add    eax,0xd
10002362:	8a 00                	mov    al,BYTE PTR [eax]
10002364:	0f be c0             	movsx  eax,al
10002367:	83 e8 30             	sub    eax,0x30
1000236a:	01 d0                	add    eax,edx
1000236c:	99                   	cdq    
1000236d:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
10002370:	89 55 bc             	mov    DWORD PTR [ebp-0x44],edx
10002373:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
10002376:	8b 55 c4             	mov    edx,DWORD PTR [ebp-0x3c]
10002379:	0f a4 c2 0a          	shld   edx,eax,0xa
1000237d:	c1 e0 0a             	shl    eax,0xa
10002380:	89 c6                	mov    esi,eax
10002382:	89 d7                	mov    edi,edx
10002384:	89 f0                	mov    eax,esi
10002386:	0b 45 c8             	or     eax,DWORD PTR [ebp-0x38]
10002389:	89 c1                	mov    ecx,eax
1000238b:	89 f8                	mov    eax,edi
1000238d:	0b 45 cc             	or     eax,DWORD PTR [ebp-0x34]
10002390:	89 c3                	mov    ebx,eax
10002392:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
10002395:	8b 55 bc             	mov    edx,DWORD PTR [ebp-0x44]
10002398:	0f a4 c2 14          	shld   edx,eax,0x14
1000239c:	c1 e0 14             	shl    eax,0x14
1000239f:	89 ce                	mov    esi,ecx
100023a1:	89 45 a8             	mov    DWORD PTR [ebp-0x58],eax
100023a4:	89 55 ac             	mov    DWORD PTR [ebp-0x54],edx
100023a7:	0b 75 a8             	or     esi,DWORD PTR [ebp-0x58]
100023aa:	89 75 d8             	mov    DWORD PTR [ebp-0x28],esi
100023ad:	89 d8                	mov    eax,ebx
100023af:	0b 45 ac             	or     eax,DWORD PTR [ebp-0x54]
100023b2:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
100023b5:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
100023b8:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
100023bb:	0f a4 c2 0c          	shld   edx,eax,0xc
100023bf:	c1 e0 0c             	shl    eax,0xc
100023c2:	89 c3                	mov    ebx,eax
100023c4:	89 d6                	mov    esi,edx
100023c6:	89 5d d8             	mov    DWORD PTR [ebp-0x28],ebx
100023c9:	89 75 dc             	mov    DWORD PTR [ebp-0x24],esi
100023cc:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
100023cf:	c1 e0 04             	shl    eax,0x4
100023d2:	0b 45 ec             	or     eax,DWORD PTR [ebp-0x14]
100023d5:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
100023d8:	c1 e2 08             	shl    edx,0x8
100023db:	09 d0                	or     eax,edx
100023dd:	99                   	cdq    
100023de:	09 45 d8             	or     DWORD PTR [ebp-0x28],eax
100023e1:	09 55 dc             	or     DWORD PTR [ebp-0x24],edx
100023e4:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [ebp-0x2c],0x0
100023eb:	81 7d d4 db 24 00 00 	cmp    DWORD PTR [ebp-0x2c],0x24db
100023f2:	7f 7f                	jg     10002473 <retrieveBits(char*)+0x29c>
100023f4:	6a 2a                	push   0x2a
100023f6:	6a 13                	push   0x13
100023f8:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
100023fb:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
100023fe:	e8 fc ff ff ff       	call   100023ff <retrieveBits(char*)+0x228>	100023ff: R_386_PC32	ror(unsigned long long, int, int)
10002403:	83 c4 10             	add    esp,0x10
10002406:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10002409:	89 55 dc             	mov    DWORD PTR [ebp-0x24],edx
1000240c:	6a 00                	push   0x0
1000240e:	6a 08                	push   0x8
10002410:	6a 00                	push   0x0
10002412:	6a 03                	push   0x3
10002414:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
10002417:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
1000241a:	e8 fc ff ff ff       	call   1000241b <retrieveBits(char*)+0x244>	1000241b: R_386_PC32	swapBits(unsigned long long, unsigned long long, unsigned long long)
1000241f:	83 c4 18             	add    esp,0x18
10002422:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10002425:	89 55 dc             	mov    DWORD PTR [ebp-0x24],edx
10002428:	6a 00                	push   0x0
1000242a:	6a 0c                	push   0xc
1000242c:	6a 00                	push   0x0
1000242e:	6a 0d                	push   0xd
10002430:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
10002433:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10002436:	e8 fc ff ff ff       	call   10002437 <retrieveBits(char*)+0x260>	10002437: R_386_PC32	swapBits(unsigned long long, unsigned long long, unsigned long long)
1000243b:	83 c4 18             	add    esp,0x18
1000243e:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10002441:	89 55 dc             	mov    DWORD PTR [ebp-0x24],edx
10002444:	6a 00                	push   0x0
10002446:	6a 16                	push   0x16
10002448:	6a 00                	push   0x0
1000244a:	6a 25                	push   0x25
1000244c:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
1000244f:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10002452:	e8 fc ff ff ff       	call   10002453 <retrieveBits(char*)+0x27c>	10002453: R_386_PC32	swapBits(unsigned long long, unsigned long long, unsigned long long)
10002457:	83 c4 18             	add    esp,0x18
1000245a:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
1000245d:	89 55 dc             	mov    DWORD PTR [ebp-0x24],edx
10002460:	81 75 d8 95 38 e4 b5 	xor    DWORD PTR [ebp-0x28],0xb5e43895
10002467:	83 75 dc 37          	xor    DWORD PTR [ebp-0x24],0x37
1000246b:	ff 45 d4             	inc    DWORD PTR [ebp-0x2c]
1000246e:	e9 78 ff ff ff       	jmp    100023eb <retrieveBits(char*)+0x214>
10002473:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10002476:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10002479:	8d 65 f4             	lea    esp,[ebp-0xc]
1000247c:	5b                   	pop    ebx
1000247d:	5e                   	pop    esi
1000247e:	5f                   	pop    edi
1000247f:	5d                   	pop    ebp
10002480:	c3                   	ret    

10002481 <checkKey(char*)>:
10002481:	55                   	push   ebp
10002482:	89 e5                	mov    ebp,esp
10002484:	53                   	push   ebx
10002485:	83 ec 14             	sub    esp,0x14
10002488:	83 ec 04             	sub    esp,0x4
1000248b:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000248e:	e8 fc ff ff ff       	call   1000248f <checkKey(char*)+0xe>	1000248f: R_386_PC32	retrieveBits(char*)
10002493:	83 c4 08             	add    esp,0x8
10002496:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10002499:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
1000249c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000249f:	25 ff 7f 00 00       	and    eax,0x7fff
100024a4:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
100024a7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100024aa:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100024ad:	0f ac d0 0f          	shrd   eax,edx,0xf
100024b1:	c1 ea 0f             	shr    edx,0xf
100024b4:	89 c1                	mov    ecx,eax
100024b6:	89 d3                	mov    ebx,edx
100024b8:	89 4d e8             	mov    DWORD PTR [ebp-0x18],ecx
100024bb:	83 ec 04             	sub    esp,0x4
100024be:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
100024c1:	e8 fc ff ff ff       	call   100024c2 <checkKey(char*)+0x41>	100024c2: R_386_PC32	getChecksum(unsigned int)
100024c6:	83 c4 08             	add    esp,0x8
100024c9:	39 45 ec             	cmp    DWORD PTR [ebp-0x14],eax
100024cc:	0f 95 c0             	setne  al
100024cf:	84 c0                	test   al,al
100024d1:	74 07                	je     100024da <checkKey(char*)+0x59>
100024d3:	b8 00 00 00 00       	mov    eax,0x0
100024d8:	eb 06                	jmp    100024e0 <checkKey(char*)+0x5f>
100024da:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100024dd:	83 e0 07             	and    eax,0x7
100024e0:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100024e3:	c9                   	leave  
100024e4:	c3                   	ret    

100024e5 <changeKeyType(char*, int)>:
100024e5:	55                   	push   ebp
100024e6:	89 e5                	mov    ebp,esp
100024e8:	83 ec 10             	sub    esp,0x10
100024eb:	83 ec 04             	sub    esp,0x4
100024ee:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100024f1:	e8 fc ff ff ff       	call   100024f2 <changeKeyType(char*, int)+0xd>	100024f2: R_386_PC32	retrieveBits(char*)
100024f6:	83 c4 08             	add    esp,0x8
100024f9:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
100024fc:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
100024ff:	83 65 f8 f8          	and    DWORD PTR [ebp-0x8],0xfffffff8
10002503:	83 65 fc ff          	and    DWORD PTR [ebp-0x4],0xffffffff
10002507:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000250a:	99                   	cdq    
1000250b:	09 45 f8             	or     DWORD PTR [ebp-0x8],eax
1000250e:	09 55 fc             	or     DWORD PTR [ebp-0x4],edx
10002511:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10002514:	50                   	push   eax
10002515:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002518:	e8 fc ff ff ff       	call   10002519 <changeKeyType(char*, int)+0x34>	10002519: R_386_PC32	createKey(char*, unsigned int)
1000251d:	83 c4 08             	add    esp,0x8
10002520:	83 ec 04             	sub    esp,0x4
10002523:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002526:	e8 fc ff ff ff       	call   10002527 <changeKeyType(char*, int)+0x42>	10002527: R_386_PC32	checkKey(char*)
1000252b:	83 c4 08             	add    esp,0x8
1000252e:	85 c0                	test   eax,eax
10002530:	0f 95 c0             	setne  al
10002533:	c9                   	leave  
10002534:	c3                   	ret    

10002535 <checkExtendedKey(char*)>:
10002535:	55                   	push   ebp
10002536:	89 e5                	mov    ebp,esp
10002538:	83 ec 20             	sub    esp,0x20
1000253b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000253e:	8a 00                	mov    al,BYTE PTR [eax]
10002540:	88 45 ec             	mov    BYTE PTR [ebp-0x14],al
10002543:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002546:	8a 40 01             	mov    al,BYTE PTR [eax+0x1]
10002549:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
1000254c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000254f:	8a 40 02             	mov    al,BYTE PTR [eax+0x2]
10002552:	88 45 ee             	mov    BYTE PTR [ebp-0x12],al
10002555:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002558:	8a 40 03             	mov    al,BYTE PTR [eax+0x3]
1000255b:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
1000255e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002561:	8a 40 04             	mov    al,BYTE PTR [eax+0x4]
10002564:	88 45 f0             	mov    BYTE PTR [ebp-0x10],al
10002567:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000256a:	8a 40 05             	mov    al,BYTE PTR [eax+0x5]
1000256d:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10002570:	c6 45 f2 2d          	mov    BYTE PTR [ebp-0xe],0x2d
10002574:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002577:	8a 40 06             	mov    al,BYTE PTR [eax+0x6]
1000257a:	88 45 f3             	mov    BYTE PTR [ebp-0xd],al
1000257d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002580:	8a 40 07             	mov    al,BYTE PTR [eax+0x7]
10002583:	88 45 f4             	mov    BYTE PTR [ebp-0xc],al
10002586:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002589:	8a 40 09             	mov    al,BYTE PTR [eax+0x9]
1000258c:	88 45 f5             	mov    BYTE PTR [ebp-0xb],al
1000258f:	c6 45 f6 2d          	mov    BYTE PTR [ebp-0xa],0x2d
10002593:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002596:	8a 40 0a             	mov    al,BYTE PTR [eax+0xa]
10002599:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000259c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000259f:	8a 40 0b             	mov    al,BYTE PTR [eax+0xb]
100025a2:	88 45 f8             	mov    BYTE PTR [ebp-0x8],al
100025a5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100025a8:	8a 40 0c             	mov    al,BYTE PTR [eax+0xc]
100025ab:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
100025ae:	c6 45 fa 2d          	mov    BYTE PTR [ebp-0x6],0x2d
100025b2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100025b5:	8a 40 0f             	mov    al,BYTE PTR [eax+0xf]
100025b8:	88 45 fb             	mov    BYTE PTR [ebp-0x5],al
100025bb:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100025be:	48                   	dec    eax
100025bf:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100025c2:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100025c5:	3c 2f                	cmp    al,0x2f
100025c7:	75 04                	jne    100025cd <checkExtendedKey(char*)+0x98>
100025c9:	c6 45 ef 39          	mov    BYTE PTR [ebp-0x11],0x39
100025cd:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
100025d0:	48                   	dec    eax
100025d1:	88 45 f5             	mov    BYTE PTR [ebp-0xb],al
100025d4:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
100025d7:	3c 2f                	cmp    al,0x2f
100025d9:	75 04                	jne    100025df <checkExtendedKey(char*)+0xaa>
100025db:	c6 45 f5 39          	mov    BYTE PTR [ebp-0xb],0x39
100025df:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100025e2:	83 c0 0d             	add    eax,0xd
100025e5:	8a 10                	mov    dl,BYTE PTR [eax]
100025e7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100025ea:	83 c0 0c             	add    eax,0xc
100025ed:	8a 00                	mov    al,BYTE PTR [eax]
100025ef:	38 c2                	cmp    dl,al
100025f1:	74 0a                	je     100025fd <checkExtendedKey(char*)+0xc8>
100025f3:	b8 00 00 00 00       	mov    eax,0x0
100025f8:	e9 d6 00 00 00       	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
100025fd:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
10002600:	3c 2f                	cmp    al,0x2f
10002602:	7e 07                	jle    1000260b <checkExtendedKey(char*)+0xd6>
10002604:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
10002607:	3c 39                	cmp    al,0x39
10002609:	7e 0a                	jle    10002615 <checkExtendedKey(char*)+0xe0>
1000260b:	b8 00 00 00 00       	mov    eax,0x0
10002610:	e9 be 00 00 00       	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
10002615:	8a 45 f0             	mov    al,BYTE PTR [ebp-0x10]
10002618:	3c 2f                	cmp    al,0x2f
1000261a:	7e 07                	jle    10002623 <checkExtendedKey(char*)+0xee>
1000261c:	8a 45 f0             	mov    al,BYTE PTR [ebp-0x10]
1000261f:	3c 39                	cmp    al,0x39
10002621:	7e 0a                	jle    1000262d <checkExtendedKey(char*)+0xf8>
10002623:	b8 00 00 00 00       	mov    eax,0x0
10002628:	e9 a6 00 00 00       	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
1000262d:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10002630:	3c 2f                	cmp    al,0x2f
10002632:	7e 07                	jle    1000263b <checkExtendedKey(char*)+0x106>
10002634:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10002637:	3c 39                	cmp    al,0x39
10002639:	7e 0a                	jle    10002645 <checkExtendedKey(char*)+0x110>
1000263b:	b8 00 00 00 00       	mov    eax,0x0
10002640:	e9 8e 00 00 00       	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
10002645:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10002648:	3c 2f                	cmp    al,0x2f
1000264a:	7e 07                	jle    10002653 <checkExtendedKey(char*)+0x11e>
1000264c:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
1000264f:	3c 39                	cmp    al,0x39
10002651:	7e 07                	jle    1000265a <checkExtendedKey(char*)+0x125>
10002653:	b8 00 00 00 00       	mov    eax,0x0
10002658:	eb 79                	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
1000265a:	8a 45 f4             	mov    al,BYTE PTR [ebp-0xc]
1000265d:	3c 2f                	cmp    al,0x2f
1000265f:	7e 07                	jle    10002668 <checkExtendedKey(char*)+0x133>
10002661:	8a 45 f4             	mov    al,BYTE PTR [ebp-0xc]
10002664:	3c 39                	cmp    al,0x39
10002666:	7e 07                	jle    1000266f <checkExtendedKey(char*)+0x13a>
10002668:	b8 00 00 00 00       	mov    eax,0x0
1000266d:	eb 64                	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
1000266f:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10002672:	3c 2f                	cmp    al,0x2f
10002674:	7e 07                	jle    1000267d <checkExtendedKey(char*)+0x148>
10002676:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10002679:	3c 39                	cmp    al,0x39
1000267b:	7e 07                	jle    10002684 <checkExtendedKey(char*)+0x14f>
1000267d:	b8 00 00 00 00       	mov    eax,0x0
10002682:	eb 4f                	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
10002684:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
10002687:	3c 2f                	cmp    al,0x2f
10002689:	7e 07                	jle    10002692 <checkExtendedKey(char*)+0x15d>
1000268b:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000268e:	3c 39                	cmp    al,0x39
10002690:	7e 07                	jle    10002699 <checkExtendedKey(char*)+0x164>
10002692:	b8 00 00 00 00       	mov    eax,0x0
10002697:	eb 3a                	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
10002699:	8a 45 f8             	mov    al,BYTE PTR [ebp-0x8]
1000269c:	3c 2f                	cmp    al,0x2f
1000269e:	7e 07                	jle    100026a7 <checkExtendedKey(char*)+0x172>
100026a0:	8a 45 f8             	mov    al,BYTE PTR [ebp-0x8]
100026a3:	3c 39                	cmp    al,0x39
100026a5:	7e 07                	jle    100026ae <checkExtendedKey(char*)+0x179>
100026a7:	b8 00 00 00 00       	mov    eax,0x0
100026ac:	eb 25                	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
100026ae:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
100026b1:	3c 2f                	cmp    al,0x2f
100026b3:	7e 07                	jle    100026bc <checkExtendedKey(char*)+0x187>
100026b5:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
100026b8:	3c 39                	cmp    al,0x39
100026ba:	7e 07                	jle    100026c3 <checkExtendedKey(char*)+0x18e>
100026bc:	b8 00 00 00 00       	mov    eax,0x0
100026c1:	eb 10                	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
100026c3:	83 ec 04             	sub    esp,0x4
100026c6:	8d 45 ec             	lea    eax,[ebp-0x14]
100026c9:	50                   	push   eax
100026ca:	e8 fc ff ff ff       	call   100026cb <checkExtendedKey(char*)+0x196>	100026cb: R_386_PC32	checkKey(char*)
100026cf:	83 c4 08             	add    esp,0x8
100026d2:	90                   	nop
100026d3:	c9                   	leave  
100026d4:	c3                   	ret    

100026d5 <loadTimezoneStrings()>:
100026d5:	55                   	push   ebp
100026d6:	89 e5                	mov    ebp,esp
100026d8:	53                   	push   ebx
100026d9:	83 ec 34             	sub    esp,0x34
100026dc:	83 ec 0c             	sub    esp,0xc
100026df:	68 14 01 00 00       	push   0x114
100026e4:	e8 fc ff ff ff       	call   100026e5 <loadTimezoneStrings()+0x10>	100026e5: R_386_PC32	operator new(unsigned long)
100026e9:	83 c4 10             	add    esp,0x10
100026ec:	89 c3                	mov    ebx,eax
100026ee:	a1 00 00 00 00       	mov    eax,ds:0x0	100026ef: R_386_32	kernelProcess
100026f3:	83 ec 04             	sub    esp,0x4
100026f6:	50                   	push   eax
100026f7:	68 54 bb 00 10       	push   0x1000bb54	100026f8: R_386_32	.text
100026fc:	53                   	push   ebx
100026fd:	e8 fc ff ff ff       	call   100026fe <loadTimezoneStrings()+0x29>	100026fe: R_386_PC32	File::File(char const*, Process*)
10002702:	83 c4 10             	add    esp,0x10
10002705:	89 5d e4             	mov    DWORD PTR [ebp-0x1c],ebx
10002708:	83 ec 08             	sub    esp,0x8
1000270b:	6a 01                	push   0x1
1000270d:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10002710:	e8 fc ff ff ff       	call   10002711 <loadTimezoneStrings()+0x3c>	10002711: R_386_PC32	File::open(FileOpenMode)
10002715:	83 c4 10             	add    esp,0x10
10002718:	83 ec 04             	sub    esp,0x4
1000271b:	8d 45 d7             	lea    eax,[ebp-0x29]
1000271e:	50                   	push   eax
1000271f:	8d 45 d8             	lea    eax,[ebp-0x28]
10002722:	50                   	push   eax
10002723:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10002726:	e8 fc ff ff ff       	call   10002727 <loadTimezoneStrings()+0x52>	10002727: R_386_PC32	File::stat(unsigned long long*, bool*)
1000272b:	83 c4 10             	add    esp,0x10
1000272e:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10002731:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10002734:	83 ec 0c             	sub    esp,0xc
10002737:	50                   	push   eax
10002738:	e8 fc ff ff ff       	call   10002739 <loadTimezoneStrings()+0x64>	10002739: R_386_PC32	malloc
1000273d:	83 c4 10             	add    esp,0x10
10002740:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10002743:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10002746:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10002749:	83 ec 04             	sub    esp,0x4
1000274c:	50                   	push   eax
1000274d:	6a 00                	push   0x0
1000274f:	ff 75 e0             	push   DWORD PTR [ebp-0x20]
10002752:	e8 fc ff ff ff       	call   10002753 <loadTimezoneStrings()+0x7e>	10002753: R_386_PC32	memset
10002757:	83 c4 10             	add    esp,0x10
1000275a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000275d:	8b 00                	mov    eax,DWORD PTR [eax]
1000275f:	83 c0 0c             	add    eax,0xc
10002762:	8b 08                	mov    ecx,DWORD PTR [eax]
10002764:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10002767:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
1000276a:	83 ec 0c             	sub    esp,0xc
1000276d:	8d 5d d0             	lea    ebx,[ebp-0x30]
10002770:	53                   	push   ebx
10002771:	ff 75 e0             	push   DWORD PTR [ebp-0x20]
10002774:	52                   	push   edx
10002775:	50                   	push   eax
10002776:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10002779:	ff d1                	call   ecx
1000277b:	83 c4 20             	add    esp,0x20
1000277e:	83 ec 0c             	sub    esp,0xc
10002781:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10002784:	e8 fc ff ff ff       	call   10002785 <loadTimezoneStrings()+0xb0>	10002785: R_386_PC32	File::close()
10002789:	83 c4 10             	add    esp,0x10
1000278c:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
1000278f:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10002792:	83 ec 08             	sub    esp,0x8
10002795:	50                   	push   eax
10002796:	68 73 bb 00 10       	push   0x1000bb73	10002797: R_386_32	.text
1000279b:	e8 fc ff ff ff       	call   1000279c <loadTimezoneStrings()+0xc7>	1000279c: R_386_PC32	Dbg::kprintf(char const*, ...)
100027a0:	83 c4 10             	add    esp,0x10
100027a3:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
100027aa:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
100027b1:	81 7d f0 c7 00 00 00 	cmp    DWORD PTR [ebp-0x10],0xc7
100027b8:	7f 39                	jg     100027f3 <loadTimezoneStrings()+0x11e>
100027ba:	83 ec 0c             	sub    esp,0xc
100027bd:	6a 78                	push   0x78
100027bf:	e8 fc ff ff ff       	call   100027c0 <loadTimezoneStrings()+0xeb>	100027c0: R_386_PC32	malloc
100027c4:	83 c4 10             	add    esp,0x10
100027c7:	89 c2                	mov    edx,eax
100027c9:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100027cc:	89 14 85 00 00 00 00 	mov    DWORD PTR [eax*4+0x0],edx	100027cf: R_386_32	timezoneStrings
100027d3:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100027d6:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	100027d9: R_386_32	timezoneStrings
100027dd:	83 ec 08             	sub    esp,0x8
100027e0:	68 7d bb 00 10       	push   0x1000bb7d	100027e1: R_386_32	.text
100027e5:	50                   	push   eax
100027e6:	e8 fc ff ff ff       	call   100027e7 <loadTimezoneStrings()+0x112>	100027e7: R_386_PC32	strcpy
100027eb:	83 c4 10             	add    esp,0x10
100027ee:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100027f1:	eb be                	jmp    100027b1 <loadTimezoneStrings()+0xdc>
100027f3:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [ebp-0x14],0x0
100027fa:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100027fd:	8d 50 01             	lea    edx,[eax+0x1]
10002800:	89 55 ec             	mov    DWORD PTR [ebp-0x14],edx
10002803:	89 c2                	mov    edx,eax
10002805:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10002808:	01 d0                	add    eax,edx
1000280a:	8a 00                	mov    al,BYTE PTR [eax]
1000280c:	88 45 ce             	mov    BYTE PTR [ebp-0x32],al
1000280f:	c6 45 cf 00          	mov    BYTE PTR [ebp-0x31],0x0
10002813:	8a 45 ce             	mov    al,BYTE PTR [ebp-0x32]
10002816:	3c 0d                	cmp    al,0xd
10002818:	0f 84 2e 01 00 00    	je     1000294c <loadTimezoneStrings()+0x277>
1000281e:	8a 45 ce             	mov    al,BYTE PTR [ebp-0x32]
10002821:	3c 09                	cmp    al,0x9
10002823:	75 3c                	jne    10002861 <loadTimezoneStrings()+0x18c>
10002825:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10002828:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	1000282b: R_386_32	timezoneStrings
1000282f:	83 ec 0c             	sub    esp,0xc
10002832:	50                   	push   eax
10002833:	e8 fc ff ff ff       	call   10002834 <loadTimezoneStrings()+0x15f>	10002834: R_386_PC32	strlen
10002838:	83 c4 10             	add    esp,0x10
1000283b:	83 f8 08             	cmp    eax,0x8
1000283e:	0f 87 0e 01 00 00    	ja     10002952 <loadTimezoneStrings()+0x27d>
10002844:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10002847:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	1000284a: R_386_32	timezoneStrings
1000284e:	83 ec 08             	sub    esp,0x8
10002851:	68 7d bb 00 10       	push   0x1000bb7d	10002852: R_386_32	.text
10002856:	50                   	push   eax
10002857:	e8 fc ff ff ff       	call   10002858 <loadTimezoneStrings()+0x183>	10002858: R_386_PC32	strcat
1000285c:	83 c4 10             	add    esp,0x10
1000285f:	eb c4                	jmp    10002825 <loadTimezoneStrings()+0x150>
10002861:	8a 45 ce             	mov    al,BYTE PTR [ebp-0x32]
10002864:	3c 0a                	cmp    al,0xa
10002866:	75 6b                	jne    100028d3 <loadTimezoneStrings()+0x1fe>
10002868:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000286b:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	1000286e: R_386_32	timezoneStrings
10002872:	83 ec 0c             	sub    esp,0xc
10002875:	50                   	push   eax
10002876:	e8 fc ff ff ff       	call   10002877 <loadTimezoneStrings()+0x1a2>	10002877: R_386_PC32	strlen
1000287b:	83 c4 10             	add    esp,0x10
1000287e:	83 f8 35             	cmp    eax,0x35
10002881:	77 1d                	ja     100028a0 <loadTimezoneStrings()+0x1cb>
10002883:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10002886:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	10002889: R_386_32	timezoneStrings
1000288d:	83 ec 08             	sub    esp,0x8
10002890:	68 7d bb 00 10       	push   0x1000bb7d	10002891: R_386_32	.text
10002895:	50                   	push   eax
10002896:	e8 fc ff ff ff       	call   10002897 <loadTimezoneStrings()+0x1c2>	10002897: R_386_PC32	strcat
1000289b:	83 c4 10             	add    esp,0x10
1000289e:	eb c8                	jmp    10002868 <loadTimezoneStrings()+0x193>
100028a0:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100028a3:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100028a6:	99                   	cdq    
100028a7:	8b 4d d8             	mov    ecx,DWORD PTR [ebp-0x28]
100028aa:	8b 5d dc             	mov    ebx,DWORD PTR [ebp-0x24]
100028ad:	39 c8                	cmp    eax,ecx
100028af:	89 d0                	mov    eax,edx
100028b1:	19 d8                	sbb    eax,ebx
100028b3:	0f 82 9f 00 00 00    	jb     10002958 <loadTimezoneStrings()+0x283>
100028b9:	83 ec 0c             	sub    esp,0xc
100028bc:	ff 75 e0             	push   DWORD PTR [ebp-0x20]
100028bf:	e8 fc ff ff ff       	call   100028c0 <loadTimezoneStrings()+0x1eb>	100028c0: R_386_PC32	free
100028c4:	83 c4 10             	add    esp,0x10
100028c7:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [ebp-0x18],0x0
100028ce:	e9 8b 00 00 00       	jmp    1000295e <loadTimezoneStrings()+0x289>
100028d3:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
100028d6:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	100028d9: R_386_32	timezoneStrings
100028dd:	83 ec 0c             	sub    esp,0xc
100028e0:	50                   	push   eax
100028e1:	e8 fc ff ff ff       	call   100028e2 <loadTimezoneStrings()+0x20d>	100028e2: R_386_PC32	strlen
100028e6:	83 c4 10             	add    esp,0x10
100028e9:	83 f8 31             	cmp    eax,0x31
100028ec:	77 1f                	ja     1000290d <loadTimezoneStrings()+0x238>
100028ee:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
100028f1:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	100028f4: R_386_32	timezoneStrings
100028f8:	83 ec 08             	sub    esp,0x8
100028fb:	8d 55 ce             	lea    edx,[ebp-0x32]
100028fe:	52                   	push   edx
100028ff:	50                   	push   eax
10002900:	e8 fc ff ff ff       	call   10002901 <loadTimezoneStrings()+0x22c>	10002901: R_386_PC32	strcat
10002905:	83 c4 10             	add    esp,0x10
10002908:	e9 ed fe ff ff       	jmp    100027fa <loadTimezoneStrings()+0x125>
1000290d:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10002910:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	10002913: R_386_32	timezoneStrings
10002917:	83 ec 0c             	sub    esp,0xc
1000291a:	50                   	push   eax
1000291b:	e8 fc ff ff ff       	call   1000291c <loadTimezoneStrings()+0x247>	1000291c: R_386_PC32	strlen
10002920:	83 c4 10             	add    esp,0x10
10002923:	83 f8 32             	cmp    eax,0x32
10002926:	0f 85 ce fe ff ff    	jne    100027fa <loadTimezoneStrings()+0x125>
1000292c:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000292f:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	10002932: R_386_32	timezoneStrings
10002936:	83 ec 08             	sub    esp,0x8
10002939:	68 7f bb 00 10       	push   0x1000bb7f	1000293a: R_386_32	.text
1000293e:	50                   	push   eax
1000293f:	e8 fc ff ff ff       	call   10002940 <loadTimezoneStrings()+0x26b>	10002940: R_386_PC32	strcat
10002944:	83 c4 10             	add    esp,0x10
10002947:	e9 ae fe ff ff       	jmp    100027fa <loadTimezoneStrings()+0x125>
1000294c:	90                   	nop
1000294d:	e9 a8 fe ff ff       	jmp    100027fa <loadTimezoneStrings()+0x125>
10002952:	90                   	nop
10002953:	e9 a2 fe ff ff       	jmp    100027fa <loadTimezoneStrings()+0x125>
10002958:	90                   	nop
10002959:	e9 9c fe ff ff       	jmp    100027fa <loadTimezoneStrings()+0x125>
1000295e:	81 7d e8 c7 00 00 00 	cmp    DWORD PTR [ebp-0x18],0xc7
10002965:	7f 23                	jg     1000298a <loadTimezoneStrings()+0x2b5>
10002967:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000296a:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	1000296d: R_386_32	timezoneStrings
10002971:	83 ec 04             	sub    esp,0x4
10002974:	50                   	push   eax
10002975:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
10002978:	68 84 bb 00 10       	push   0x1000bb84	10002979: R_386_32	.text
1000297d:	e8 fc ff ff ff       	call   1000297e <loadTimezoneStrings()+0x2a9>	1000297e: R_386_PC32	Dbg::kprintf(char const*, ...)
10002982:	83 c4 10             	add    esp,0x10
10002985:	ff 45 e8             	inc    DWORD PTR [ebp-0x18]
10002988:	eb d4                	jmp    1000295e <loadTimezoneStrings()+0x289>
1000298a:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000298d:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10002990:	c9                   	leave  
10002991:	c3                   	ret    

10002992 <_bcrypt_rand>:
10002992:	55                   	push   ebp
10002993:	89 e5                	mov    ebp,esp
10002995:	83 ec 08             	sub    esp,0x8
10002998:	e8 fc ff ff ff       	call   10002999 <_bcrypt_rand+0x7>	10002999: R_386_PC32	KeRand()
1000299d:	c9                   	leave  
1000299e:	c3                   	ret    

1000299f <firstRun(bool)>:
1000299f:	55                   	push   ebp
100029a0:	89 e5                	mov    ebp,esp
100029a2:	57                   	push   edi
100029a3:	56                   	push   esi
100029a4:	53                   	push   ebx
100029a5:	81 ec ec 00 00 00    	sub    esp,0xec
100029ab:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100029ae:	88 85 14 ff ff ff    	mov    BYTE PTR [ebp-0xec],al
100029b4:	8a 85 14 ff ff ff    	mov    al,BYTE PTR [ebp-0xec]
100029ba:	83 f0 01             	xor    eax,0x1
100029bd:	a2 00 00 00 00       	mov    ds:0x0,al	100029be: R_386_32	showSidebar
100029c2:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100029c4: R_386_32	guiKeyboardHandler
	100029c8: R_386_32	bootInstallKeybrd(KeyboardToken, bool*)
100029cc:	83 ec 0c             	sub    esp,0xc
100029cf:	68 8c bb 00 10       	push   0x1000bb8c	100029d0: R_386_32	.text
100029d4:	e8 fc ff ff ff       	call   100029d5 <firstRun(bool)+0x36>	100029d5: R_386_PC32	KeSetBootMessage(char const*)
100029d9:	83 c4 10             	add    esp,0x10
100029dc:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100029de: R_386_32	VgaText::hiddenOut
100029e3:	a1 00 00 00 00       	mov    eax,ds:0x0	100029e4: R_386_32	activeTerminal
100029e8:	83 ec 08             	sub    esp,0x8
100029eb:	68 b5 bb 00 10       	push   0x1000bbb5	100029ec: R_386_32	.text
100029f0:	50                   	push   eax
100029f1:	e8 fc ff ff ff       	call   100029f2 <firstRun(bool)+0x53>	100029f2: R_386_PC32	VgaText::puts(char const*)
100029f6:	83 c4 10             	add    esp,0x10
100029f9:	a1 00 00 00 00       	mov    eax,ds:0x0	100029fa: R_386_32	kernelProcess
100029fe:	8b 80 06 05 00 00    	mov    eax,DWORD PTR [eax+0x506]
10002a04:	83 ec 08             	sub    esp,0x8
10002a07:	68 b5 bb 00 10       	push   0x1000bbb5	10002a08: R_386_32	.text
10002a0c:	50                   	push   eax
10002a0d:	e8 fc ff ff ff       	call   10002a0e <firstRun(bool)+0x6f>	10002a0e: R_386_PC32	VgaText::puts(char const*)
10002a12:	83 c4 10             	add    esp,0x10
10002a15:	83 ec 0c             	sub    esp,0xc
10002a18:	68 84 01 00 00       	push   0x184
10002a1d:	e8 fc ff ff ff       	call   10002a1e <firstRun(bool)+0x7f>	10002a1e: R_386_PC32	operator new(unsigned long)
10002a22:	83 c4 10             	add    esp,0x10
10002a25:	89 c3                	mov    ebx,eax
10002a27:	83 ec 08             	sub    esp,0x8
10002a2a:	68 bc bb 00 10       	push   0x1000bbbc	10002a2b: R_386_32	.text
10002a2f:	53                   	push   ebx
10002a30:	e8 fc ff ff ff       	call   10002a31 <firstRun(bool)+0x92>	10002a31: R_386_PC32	VgaText::VgaText(char const*)
10002a35:	83 c4 10             	add    esp,0x10
10002a38:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	10002a3a: R_386_32	term
10002a3e:	a1 00 00 00 00       	mov    eax,ds:0x0	10002a3f: R_386_32	term
10002a43:	83 ec 0c             	sub    esp,0xc
10002a46:	50                   	push   eax
10002a47:	e8 fc ff ff ff       	call   10002a48 <firstRun(bool)+0xa9>	10002a48: R_386_PC32	setActiveTerminal(VgaText*)
10002a4c:	83 c4 10             	add    esp,0x10
10002a4f:	e8 fc ff ff ff       	call   10002a50 <firstRun(bool)+0xb1>	10002a50: R_386_PC32	drawBootScreen()
10002a54:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10002a5b:	80 bd 14 ff ff ff 00 	cmp    BYTE PTR [ebp-0xec],0x0
10002a62:	74 17                	je     10002a7b <firstRun(bool)+0xdc>
10002a64:	83 ec 08             	sub    esp,0x8
10002a67:	68 c1 bb 00 10       	push   0x1000bbc1	10002a68: R_386_32	.text
10002a6c:	68 00 00 00 00       	push   0x0	10002a6d: R_386_32	pkeybuf
10002a71:	e8 fc ff ff ff       	call   10002a72 <firstRun(bool)+0xd3>	10002a72: R_386_PC32	strcpy
10002a76:	83 c4 10             	add    esp,0x10
10002a79:	eb 15                	jmp    10002a90 <firstRun(bool)+0xf1>
10002a7b:	83 ec 08             	sub    esp,0x8
10002a7e:	68 d2 bb 00 10       	push   0x1000bbd2	10002a7f: R_386_32	.text
10002a83:	68 00 00 00 00       	push   0x0	10002a84: R_386_32	pkeybuf
10002a88:	e8 fc ff ff ff       	call   10002a89 <firstRun(bool)+0xea>	10002a89: R_386_PC32	strcpy
10002a8d:	83 c4 10             	add    esp,0x10
10002a90:	8a 85 14 ff ff ff    	mov    al,BYTE PTR [ebp-0xec]
10002a96:	83 f0 01             	xor    eax,0x1
10002a99:	84 c0                	test   al,al
10002a9b:	0f 84 7f 19 00 00    	je     10004420 <firstRun(bool)+0x1a81>
10002aa1:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [ebp-0x24],0x0
10002aa8:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10002aaa: R_386_32	tzsel
10002ab2:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10002ab4: R_386_32	modesel
10002abc:	eb 01                	jmp    10002abf <firstRun(bool)+0x120>
10002abe:	90                   	nop
10002abf:	e8 fc ff ff ff       	call   10002ac0 <firstRun(bool)+0x121>	10002ac0: R_386_PC32	drawBootScreen()
10002ac4:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10002acb:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10002acd: R_386_32	installKey
10002ad2:	83 ec 0c             	sub    esp,0xc
10002ad5:	68 e3 bb 00 10       	push   0x1000bbe3	10002ad6: R_386_32	.text
10002ada:	6a 12                	push   0x12
10002adc:	6a 32                	push   0x32
10002ade:	6a 03                	push   0x3
10002ae0:	6a 16                	push   0x16
10002ae2:	e8 fc ff ff ff       	call   10002ae3 <firstRun(bool)+0x144>	10002ae3: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10002ae7:	83 c4 20             	add    esp,0x20
10002aea:	a1 00 00 00 00       	mov    eax,ds:0x0	10002aeb: R_386_32	term
10002aef:	83 ec 04             	sub    esp,0x4
10002af2:	6a 06                	push   0x6
10002af4:	6a 18                	push   0x18
10002af6:	50                   	push   eax
10002af7:	e8 fc ff ff ff       	call   10002af8 <firstRun(bool)+0x159>	10002af8: R_386_PC32	VgaText::setCursor(int, int)
10002afc:	83 c4 10             	add    esp,0x10
10002aff:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b00: R_386_32	term
10002b04:	83 ec 08             	sub    esp,0x8
10002b07:	68 f0 bb 00 10       	push   0x1000bbf0	10002b08: R_386_32	.text
10002b0c:	50                   	push   eax
10002b0d:	e8 fc ff ff ff       	call   10002b0e <firstRun(bool)+0x16f>	10002b0e: R_386_PC32	VgaText::puts(char const*)
10002b12:	83 c4 10             	add    esp,0x10
10002b15:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b16: R_386_32	term
10002b1a:	83 ec 04             	sub    esp,0x4
10002b1d:	6a 07                	push   0x7
10002b1f:	6a 18                	push   0x18
10002b21:	50                   	push   eax
10002b22:	e8 fc ff ff ff       	call   10002b23 <firstRun(bool)+0x184>	10002b23: R_386_PC32	VgaText::setCursor(int, int)
10002b27:	83 c4 10             	add    esp,0x10
10002b2a:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b2b: R_386_32	term
10002b2f:	83 ec 08             	sub    esp,0x8
10002b32:	68 1f bc 00 10       	push   0x1000bc1f	10002b33: R_386_32	.text
10002b37:	50                   	push   eax
10002b38:	e8 fc ff ff ff       	call   10002b39 <firstRun(bool)+0x19a>	10002b39: R_386_PC32	VgaText::puts(char const*)
10002b3d:	83 c4 10             	add    esp,0x10
10002b40:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b41: R_386_32	term
10002b45:	83 ec 04             	sub    esp,0x4
10002b48:	6a 09                	push   0x9
10002b4a:	6a 18                	push   0x18
10002b4c:	50                   	push   eax
10002b4d:	e8 fc ff ff ff       	call   10002b4e <firstRun(bool)+0x1af>	10002b4e: R_386_PC32	VgaText::setCursor(int, int)
10002b52:	83 c4 10             	add    esp,0x10
10002b55:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b56: R_386_32	term
10002b5a:	83 ec 08             	sub    esp,0x8
10002b5d:	68 2f bc 00 10       	push   0x1000bc2f	10002b5e: R_386_32	.text
10002b62:	50                   	push   eax
10002b63:	e8 fc ff ff ff       	call   10002b64 <firstRun(bool)+0x1c5>	10002b64: R_386_PC32	VgaText::puts(char const*)
10002b68:	83 c4 10             	add    esp,0x10
10002b6b:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b6c: R_386_32	term
10002b70:	83 ec 04             	sub    esp,0x4
10002b73:	6a 0b                	push   0xb
10002b75:	6a 18                	push   0x18
10002b77:	50                   	push   eax
10002b78:	e8 fc ff ff ff       	call   10002b79 <firstRun(bool)+0x1da>	10002b79: R_386_PC32	VgaText::setCursor(int, int)
10002b7d:	83 c4 10             	add    esp,0x10
10002b80:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b81: R_386_32	term
10002b85:	83 ec 08             	sub    esp,0x8
10002b88:	68 34 bc 00 10       	push   0x1000bc34	10002b89: R_386_32	.text
10002b8d:	50                   	push   eax
10002b8e:	e8 fc ff ff ff       	call   10002b8f <firstRun(bool)+0x1f0>	10002b8f: R_386_PC32	VgaText::puts(char const*)
10002b93:	83 c4 10             	add    esp,0x10
10002b96:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b97: R_386_32	term
10002b9b:	83 ec 04             	sub    esp,0x4
10002b9e:	6a 0d                	push   0xd
10002ba0:	6a 18                	push   0x18
10002ba2:	50                   	push   eax
10002ba3:	e8 fc ff ff ff       	call   10002ba4 <firstRun(bool)+0x205>	10002ba4: R_386_PC32	VgaText::setCursor(int, int)
10002ba8:	83 c4 10             	add    esp,0x10
10002bab:	a1 00 00 00 00       	mov    eax,ds:0x0	10002bac: R_386_32	term
10002bb0:	83 ec 08             	sub    esp,0x8
10002bb3:	68 3c bc 00 10       	push   0x1000bc3c	10002bb4: R_386_32	.text
10002bb8:	50                   	push   eax
10002bb9:	e8 fc ff ff ff       	call   10002bba <firstRun(bool)+0x21b>	10002bba: R_386_PC32	VgaText::puts(char const*)
10002bbe:	83 c4 10             	add    esp,0x10
10002bc1:	a1 00 00 00 00       	mov    eax,ds:0x0	10002bc2: R_386_32	term
10002bc6:	83 ec 04             	sub    esp,0x4
10002bc9:	6a 0f                	push   0xf
10002bcb:	6a 18                	push   0x18
10002bcd:	50                   	push   eax
10002bce:	e8 fc ff ff ff       	call   10002bcf <firstRun(bool)+0x230>	10002bcf: R_386_PC32	VgaText::setCursor(int, int)
10002bd3:	83 c4 10             	add    esp,0x10
10002bd6:	a1 00 00 00 00       	mov    eax,ds:0x0	10002bd7: R_386_32	term
10002bdb:	83 ec 08             	sub    esp,0x8
10002bde:	68 45 bc 00 10       	push   0x1000bc45	10002bdf: R_386_32	.text
10002be3:	50                   	push   eax
10002be4:	e8 fc ff ff ff       	call   10002be5 <firstRun(bool)+0x246>	10002be5: R_386_PC32	VgaText::puts(char const*)
10002be9:	83 c4 10             	add    esp,0x10
10002bec:	a1 00 00 00 00       	mov    eax,ds:0x0	10002bed: R_386_32	term
10002bf1:	83 ec 04             	sub    esp,0x4
10002bf4:	6a 10                	push   0x10
10002bf6:	6a 18                	push   0x18
10002bf8:	50                   	push   eax
10002bf9:	e8 fc ff ff ff       	call   10002bfa <firstRun(bool)+0x25b>	10002bfa: R_386_PC32	VgaText::setCursor(int, int)
10002bfe:	83 c4 10             	add    esp,0x10
10002c01:	a1 00 00 00 00       	mov    eax,ds:0x0	10002c02: R_386_32	term
10002c06:	83 ec 08             	sub    esp,0x8
10002c09:	68 4d bc 00 10       	push   0x1000bc4d	10002c0a: R_386_32	.text
10002c0e:	50                   	push   eax
10002c0f:	e8 fc ff ff ff       	call   10002c10 <firstRun(bool)+0x271>	10002c10: R_386_PC32	VgaText::puts(char const*)
10002c14:	83 c4 10             	add    esp,0x10
10002c17:	a1 00 00 00 00       	mov    eax,ds:0x0	10002c18: R_386_32	term
10002c1c:	83 ec 04             	sub    esp,0x4
10002c1f:	6a 09                	push   0x9
10002c21:	6a 21                	push   0x21
10002c23:	50                   	push   eax
10002c24:	e8 fc ff ff ff       	call   10002c25 <firstRun(bool)+0x286>	10002c25: R_386_PC32	VgaText::setCursor(int, int)
10002c29:	83 c4 10             	add    esp,0x10
10002c2c:	a1 00 00 00 00       	mov    eax,ds:0x0	10002c2d: R_386_32	term
10002c31:	6a 07                	push   0x7
10002c33:	6a 00                	push   0x0
10002c35:	68 56 bc 00 10       	push   0x1000bc56	10002c36: R_386_32	.text
10002c3a:	50                   	push   eax
10002c3b:	e8 fc ff ff ff       	call   10002c3c <firstRun(bool)+0x29d>	10002c3c: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002c40:	83 c4 10             	add    esp,0x10
10002c43:	a1 00 00 00 00       	mov    eax,ds:0x0	10002c44: R_386_32	term
10002c48:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
10002c4c:	75 07                	jne    10002c55 <firstRun(bool)+0x2b6>
10002c4e:	ba 70 bc 00 10       	mov    edx,0x1000bc70	10002c4f: R_386_32	.text
10002c53:	eb 05                	jmp    10002c5a <firstRun(bool)+0x2bb>
10002c55:	ba 74 bc 00 10       	mov    edx,0x1000bc74	10002c56: R_386_32	.text
10002c5a:	6a 0f                	push   0xf
10002c5c:	6a 00                	push   0x0
10002c5e:	52                   	push   edx
10002c5f:	50                   	push   eax
10002c60:	e8 fc ff ff ff       	call   10002c61 <firstRun(bool)+0x2c2>	10002c61: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002c65:	83 c4 10             	add    esp,0x10
10002c68:	a1 00 00 00 00       	mov    eax,ds:0x0	10002c69: R_386_32	term
10002c6d:	83 ec 08             	sub    esp,0x8
10002c70:	6a 21                	push   0x21
10002c72:	50                   	push   eax
10002c73:	e8 fc ff ff ff       	call   10002c74 <firstRun(bool)+0x2d5>	10002c74: R_386_PC32	VgaText::setCursorX(int)
10002c78:	83 c4 10             	add    esp,0x10
10002c7b:	a1 00 00 00 00       	mov    eax,ds:0x0	10002c7c: R_386_32	term
10002c80:	6a 07                	push   0x7
10002c82:	6a 00                	push   0x0
10002c84:	68 00 00 00 00       	push   0x0	10002c85: R_386_32	currName
10002c89:	50                   	push   eax
10002c8a:	e8 fc ff ff ff       	call   10002c8b <firstRun(bool)+0x2ec>	10002c8b: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002c8f:	83 c4 10             	add    esp,0x10
10002c92:	a1 00 00 00 00       	mov    eax,ds:0x0	10002c93: R_386_32	term
10002c97:	83 ec 04             	sub    esp,0x4
10002c9a:	6a 0b                	push   0xb
10002c9c:	6a 21                	push   0x21
10002c9e:	50                   	push   eax
10002c9f:	e8 fc ff ff ff       	call   10002ca0 <firstRun(bool)+0x301>	10002ca0: R_386_PC32	VgaText::setCursor(int, int)
10002ca4:	83 c4 10             	add    esp,0x10
10002ca7:	a1 00 00 00 00       	mov    eax,ds:0x0	10002ca8: R_386_32	term
10002cac:	6a 07                	push   0x7
10002cae:	6a 00                	push   0x0
10002cb0:	68 56 bc 00 10       	push   0x1000bc56	10002cb1: R_386_32	.text
10002cb5:	50                   	push   eax
10002cb6:	e8 fc ff ff ff       	call   10002cb7 <firstRun(bool)+0x318>	10002cb7: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002cbb:	83 c4 10             	add    esp,0x10
10002cbe:	a1 00 00 00 00       	mov    eax,ds:0x0	10002cbf: R_386_32	term
10002cc3:	83 7d e0 01          	cmp    DWORD PTR [ebp-0x20],0x1
10002cc7:	75 07                	jne    10002cd0 <firstRun(bool)+0x331>
10002cc9:	ba 70 bc 00 10       	mov    edx,0x1000bc70	10002cca: R_386_32	.text
10002cce:	eb 05                	jmp    10002cd5 <firstRun(bool)+0x336>
10002cd0:	ba 74 bc 00 10       	mov    edx,0x1000bc74	10002cd1: R_386_32	.text
10002cd5:	6a 0f                	push   0xf
10002cd7:	6a 00                	push   0x0
10002cd9:	52                   	push   edx
10002cda:	50                   	push   eax
10002cdb:	e8 fc ff ff ff       	call   10002cdc <firstRun(bool)+0x33d>	10002cdc: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002ce0:	83 c4 10             	add    esp,0x10
10002ce3:	a1 00 00 00 00       	mov    eax,ds:0x0	10002ce4: R_386_32	term
10002ce8:	83 ec 08             	sub    esp,0x8
10002ceb:	6a 21                	push   0x21
10002ced:	50                   	push   eax
10002cee:	e8 fc ff ff ff       	call   10002cef <firstRun(bool)+0x350>	10002cef: R_386_PC32	VgaText::setCursorX(int)
10002cf3:	83 c4 10             	add    esp,0x10
10002cf6:	a1 00 00 00 00       	mov    eax,ds:0x0	10002cf7: R_386_32	term
10002cfb:	6a 07                	push   0x7
10002cfd:	6a 00                	push   0x0
10002cff:	68 00 00 00 00       	push   0x0	10002d00: R_386_32	currComp
10002d04:	50                   	push   eax
10002d05:	e8 fc ff ff ff       	call   10002d06 <firstRun(bool)+0x367>	10002d06: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002d0a:	83 c4 10             	add    esp,0x10
10002d0d:	a1 00 00 00 00       	mov    eax,ds:0x0	10002d0e: R_386_32	term
10002d12:	83 ec 04             	sub    esp,0x4
10002d15:	6a 0d                	push   0xd
10002d17:	6a 21                	push   0x21
10002d19:	50                   	push   eax
10002d1a:	e8 fc ff ff ff       	call   10002d1b <firstRun(bool)+0x37c>	10002d1b: R_386_PC32	VgaText::setCursor(int, int)
10002d1f:	83 c4 10             	add    esp,0x10
10002d22:	a1 00 00 00 00       	mov    eax,ds:0x0	10002d23: R_386_32	term
10002d27:	6a 07                	push   0x7
10002d29:	6a 00                	push   0x0
10002d2b:	68 56 bc 00 10       	push   0x1000bc56	10002d2c: R_386_32	.text
10002d30:	50                   	push   eax
10002d31:	e8 fc ff ff ff       	call   10002d32 <firstRun(bool)+0x393>	10002d32: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002d36:	83 c4 10             	add    esp,0x10
10002d39:	a1 00 00 00 00       	mov    eax,ds:0x0	10002d3a: R_386_32	term
10002d3e:	83 7d e0 02          	cmp    DWORD PTR [ebp-0x20],0x2
10002d42:	75 07                	jne    10002d4b <firstRun(bool)+0x3ac>
10002d44:	ba 70 bc 00 10       	mov    edx,0x1000bc70	10002d45: R_386_32	.text
10002d49:	eb 05                	jmp    10002d50 <firstRun(bool)+0x3b1>
10002d4b:	ba 74 bc 00 10       	mov    edx,0x1000bc74	10002d4c: R_386_32	.text
10002d50:	6a 0f                	push   0xf
10002d52:	6a 00                	push   0x0
10002d54:	52                   	push   edx
10002d55:	50                   	push   eax
10002d56:	e8 fc ff ff ff       	call   10002d57 <firstRun(bool)+0x3b8>	10002d57: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002d5b:	83 c4 10             	add    esp,0x10
10002d5e:	a1 00 00 00 00       	mov    eax,ds:0x0	10002d5f: R_386_32	term
10002d63:	83 ec 08             	sub    esp,0x8
10002d66:	6a 21                	push   0x21
10002d68:	50                   	push   eax
10002d69:	e8 fc ff ff ff       	call   10002d6a <firstRun(bool)+0x3cb>	10002d6a: R_386_PC32	VgaText::setCursorX(int)
10002d6e:	83 c4 10             	add    esp,0x10
10002d71:	c7 45 d8 00 00 00 00 	mov    DWORD PTR [ebp-0x28],0x0
10002d78:	83 ec 0c             	sub    esp,0xc
10002d7b:	68 00 00 00 00       	push   0x0	10002d7c: R_386_32	passwbufA
10002d80:	e8 fc ff ff ff       	call   10002d81 <firstRun(bool)+0x3e2>	10002d81: R_386_PC32	strlen
10002d85:	83 c4 10             	add    esp,0x10
10002d88:	89 c2                	mov    edx,eax
10002d8a:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10002d8d:	39 c2                	cmp    edx,eax
10002d8f:	76 1c                	jbe    10002dad <firstRun(bool)+0x40e>
10002d91:	a1 00 00 00 00       	mov    eax,ds:0x0	10002d92: R_386_32	term
10002d96:	6a 07                	push   0x7
10002d98:	6a 00                	push   0x0
10002d9a:	68 78 bc 00 10       	push   0x1000bc78	10002d9b: R_386_32	.text
10002d9f:	50                   	push   eax
10002da0:	e8 fc ff ff ff       	call   10002da1 <firstRun(bool)+0x402>	10002da1: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002da5:	83 c4 10             	add    esp,0x10
10002da8:	ff 45 d8             	inc    DWORD PTR [ebp-0x28]
10002dab:	eb cb                	jmp    10002d78 <firstRun(bool)+0x3d9>
10002dad:	a1 00 00 00 00       	mov    eax,ds:0x0	10002dae: R_386_32	term
10002db2:	83 ec 04             	sub    esp,0x4
10002db5:	6a 0f                	push   0xf
10002db7:	6a 21                	push   0x21
10002db9:	50                   	push   eax
10002dba:	e8 fc ff ff ff       	call   10002dbb <firstRun(bool)+0x41c>	10002dbb: R_386_PC32	VgaText::setCursor(int, int)
10002dbf:	83 c4 10             	add    esp,0x10
10002dc2:	a1 00 00 00 00       	mov    eax,ds:0x0	10002dc3: R_386_32	term
10002dc7:	6a 07                	push   0x7
10002dc9:	6a 00                	push   0x0
10002dcb:	68 56 bc 00 10       	push   0x1000bc56	10002dcc: R_386_32	.text
10002dd0:	50                   	push   eax
10002dd1:	e8 fc ff ff ff       	call   10002dd2 <firstRun(bool)+0x433>	10002dd2: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002dd6:	83 c4 10             	add    esp,0x10
10002dd9:	a1 00 00 00 00       	mov    eax,ds:0x0	10002dda: R_386_32	term
10002dde:	83 7d e0 03          	cmp    DWORD PTR [ebp-0x20],0x3
10002de2:	75 07                	jne    10002deb <firstRun(bool)+0x44c>
10002de4:	ba 70 bc 00 10       	mov    edx,0x1000bc70	10002de5: R_386_32	.text
10002de9:	eb 05                	jmp    10002df0 <firstRun(bool)+0x451>
10002deb:	ba 74 bc 00 10       	mov    edx,0x1000bc74	10002dec: R_386_32	.text
10002df0:	6a 0f                	push   0xf
10002df2:	6a 00                	push   0x0
10002df4:	52                   	push   edx
10002df5:	50                   	push   eax
10002df6:	e8 fc ff ff ff       	call   10002df7 <firstRun(bool)+0x458>	10002df7: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002dfb:	83 c4 10             	add    esp,0x10
10002dfe:	a1 00 00 00 00       	mov    eax,ds:0x0	10002dff: R_386_32	term
10002e03:	83 ec 08             	sub    esp,0x8
10002e06:	6a 21                	push   0x21
10002e08:	50                   	push   eax
10002e09:	e8 fc ff ff ff       	call   10002e0a <firstRun(bool)+0x46b>	10002e0a: R_386_PC32	VgaText::setCursorX(int)
10002e0e:	83 c4 10             	add    esp,0x10
10002e11:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [ebp-0x2c],0x0
10002e18:	83 ec 0c             	sub    esp,0xc
10002e1b:	68 00 00 00 00       	push   0x0	10002e1c: R_386_32	passwbufB
10002e20:	e8 fc ff ff ff       	call   10002e21 <firstRun(bool)+0x482>	10002e21: R_386_PC32	strlen
10002e25:	83 c4 10             	add    esp,0x10
10002e28:	89 c2                	mov    edx,eax
10002e2a:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10002e2d:	39 c2                	cmp    edx,eax
10002e2f:	76 1c                	jbe    10002e4d <firstRun(bool)+0x4ae>
10002e31:	a1 00 00 00 00       	mov    eax,ds:0x0	10002e32: R_386_32	term
10002e36:	6a 07                	push   0x7
10002e38:	6a 00                	push   0x0
10002e3a:	68 78 bc 00 10       	push   0x1000bc78	10002e3b: R_386_32	.text
10002e3f:	50                   	push   eax
10002e40:	e8 fc ff ff ff       	call   10002e41 <firstRun(bool)+0x4a2>	10002e41: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002e45:	83 c4 10             	add    esp,0x10
10002e48:	ff 45 d4             	inc    DWORD PTR [ebp-0x2c]
10002e4b:	eb cb                	jmp    10002e18 <firstRun(bool)+0x479>
10002e4d:	a1 00 00 00 00       	mov    eax,ds:0x0	10002e4e: R_386_32	term
10002e52:	83 ec 04             	sub    esp,0x4
10002e55:	6a 12                	push   0x12
10002e57:	6a 18                	push   0x18
10002e59:	50                   	push   eax
10002e5a:	e8 fc ff ff ff       	call   10002e5b <firstRun(bool)+0x4bc>	10002e5b: R_386_PC32	VgaText::setCursor(int, int)
10002e5f:	83 c4 10             	add    esp,0x10
10002e62:	a1 00 00 00 00       	mov    eax,ds:0x0	10002e63: R_386_32	term
10002e67:	83 7d e0 04          	cmp    DWORD PTR [ebp-0x20],0x4
10002e6b:	75 07                	jne    10002e74 <firstRun(bool)+0x4d5>
10002e6d:	ba 7a bc 00 10       	mov    edx,0x1000bc7a	10002e6e: R_386_32	.text
10002e72:	eb 05                	jmp    10002e79 <firstRun(bool)+0x4da>
10002e74:	ba 86 bc 00 10       	mov    edx,0x1000bc86	10002e75: R_386_32	.text
10002e79:	6a 0f                	push   0xf
10002e7b:	6a 08                	push   0x8
10002e7d:	52                   	push   edx
10002e7e:	50                   	push   eax
10002e7f:	e8 fc ff ff ff       	call   10002e80 <firstRun(bool)+0x4e1>	10002e80: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002e84:	83 c4 10             	add    esp,0x10
10002e87:	a1 00 00 00 00       	mov    eax,ds:0x0	10002e88: R_386_32	term
10002e8c:	83 ec 04             	sub    esp,0x4
10002e8f:	6a 13                	push   0x13
10002e91:	6a 18                	push   0x18
10002e93:	50                   	push   eax
10002e94:	e8 fc ff ff ff       	call   10002e95 <firstRun(bool)+0x4f6>	10002e95: R_386_PC32	VgaText::setCursor(int, int)
10002e99:	83 c4 10             	add    esp,0x10
10002e9c:	a1 00 00 00 00       	mov    eax,ds:0x0	10002e9d: R_386_32	term
10002ea1:	83 7d e0 04          	cmp    DWORD PTR [ebp-0x20],0x4
10002ea5:	75 07                	jne    10002eae <firstRun(bool)+0x50f>
10002ea7:	ba 92 bc 00 10       	mov    edx,0x1000bc92	10002ea8: R_386_32	.text
10002eac:	eb 05                	jmp    10002eb3 <firstRun(bool)+0x514>
10002eae:	ba 86 bc 00 10       	mov    edx,0x1000bc86	10002eaf: R_386_32	.text
10002eb3:	6a 0f                	push   0xf
10002eb5:	6a 08                	push   0x8
10002eb7:	52                   	push   edx
10002eb8:	50                   	push   eax
10002eb9:	e8 fc ff ff ff       	call   10002eba <firstRun(bool)+0x51b>	10002eba: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002ebe:	83 c4 10             	add    esp,0x10
10002ec1:	a1 00 00 00 00       	mov    eax,ds:0x0	10002ec2: R_386_32	term
10002ec6:	83 ec 04             	sub    esp,0x4
10002ec9:	6a 12                	push   0x12
10002ecb:	6a 37                	push   0x37
10002ecd:	50                   	push   eax
10002ece:	e8 fc ff ff ff       	call   10002ecf <firstRun(bool)+0x530>	10002ecf: R_386_PC32	VgaText::setCursor(int, int)
10002ed3:	83 c4 10             	add    esp,0x10
10002ed6:	83 7d e0 04          	cmp    DWORD PTR [ebp-0x20],0x4
10002eda:	74 19                	je     10002ef5 <firstRun(bool)+0x556>
10002edc:	a1 00 00 00 00       	mov    eax,ds:0x0	10002edd: R_386_32	term
10002ee1:	6a 08                	push   0x8
10002ee3:	6a 0f                	push   0xf
10002ee5:	68 9c bc 00 10       	push   0x1000bc9c	10002ee6: R_386_32	.text
10002eea:	50                   	push   eax
10002eeb:	e8 fc ff ff ff       	call   10002eec <firstRun(bool)+0x54d>	10002eec: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002ef0:	83 c4 10             	add    esp,0x10
10002ef3:	eb 17                	jmp    10002f0c <firstRun(bool)+0x56d>
10002ef5:	a1 00 00 00 00       	mov    eax,ds:0x0	10002ef6: R_386_32	term
10002efa:	6a 01                	push   0x1
10002efc:	6a 0f                	push   0xf
10002efe:	68 9c bc 00 10       	push   0x1000bc9c	10002eff: R_386_32	.text
10002f03:	50                   	push   eax
10002f04:	e8 fc ff ff ff       	call   10002f05 <firstRun(bool)+0x566>	10002f05: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002f09:	83 c4 10             	add    esp,0x10
10002f0c:	a1 00 00 00 00       	mov    eax,ds:0x0	10002f0d: R_386_32	term
10002f11:	83 7d e0 04          	cmp    DWORD PTR [ebp-0x20],0x4
10002f15:	75 07                	jne    10002f1e <firstRun(bool)+0x57f>
10002f17:	ba 70 bc 00 10       	mov    edx,0x1000bc70	10002f18: R_386_32	.text
10002f1c:	eb 05                	jmp    10002f23 <firstRun(bool)+0x584>
10002f1e:	ba 74 bc 00 10       	mov    edx,0x1000bc74	10002f1f: R_386_32	.text
10002f23:	6a 0f                	push   0xf
10002f25:	6a 00                	push   0x0
10002f27:	52                   	push   edx
10002f28:	50                   	push   eax
10002f29:	e8 fc ff ff ff       	call   10002f2a <firstRun(bool)+0x58b>	10002f2a: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002f2e:	83 c4 10             	add    esp,0x10
10002f31:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
10002f35:	75 28                	jne    10002f5f <firstRun(bool)+0x5c0>
10002f37:	8b 1d 00 00 00 00    	mov    ebx,DWORD PTR ds:0x0	10002f39: R_386_32	term
10002f3d:	83 ec 0c             	sub    esp,0xc
10002f40:	68 00 00 00 00       	push   0x0	10002f41: R_386_32	currName
10002f45:	e8 fc ff ff ff       	call   10002f46 <firstRun(bool)+0x5a7>	10002f46: R_386_PC32	strlen
10002f4a:	83 c4 10             	add    esp,0x10
10002f4d:	83 c0 21             	add    eax,0x21
10002f50:	83 ec 04             	sub    esp,0x4
10002f53:	6a 09                	push   0x9
10002f55:	50                   	push   eax
10002f56:	53                   	push   ebx
10002f57:	e8 fc ff ff ff       	call   10002f58 <firstRun(bool)+0x5b9>	10002f58: R_386_PC32	VgaText::setCursor(int, int)
10002f5c:	83 c4 10             	add    esp,0x10
10002f5f:	83 7d e0 01          	cmp    DWORD PTR [ebp-0x20],0x1
10002f63:	75 28                	jne    10002f8d <firstRun(bool)+0x5ee>
10002f65:	8b 1d 00 00 00 00    	mov    ebx,DWORD PTR ds:0x0	10002f67: R_386_32	term
10002f6b:	83 ec 0c             	sub    esp,0xc
10002f6e:	68 00 00 00 00       	push   0x0	10002f6f: R_386_32	currComp
10002f73:	e8 fc ff ff ff       	call   10002f74 <firstRun(bool)+0x5d5>	10002f74: R_386_PC32	strlen
10002f78:	83 c4 10             	add    esp,0x10
10002f7b:	83 c0 21             	add    eax,0x21
10002f7e:	83 ec 04             	sub    esp,0x4
10002f81:	6a 0b                	push   0xb
10002f83:	50                   	push   eax
10002f84:	53                   	push   ebx
10002f85:	e8 fc ff ff ff       	call   10002f86 <firstRun(bool)+0x5e7>	10002f86: R_386_PC32	VgaText::setCursor(int, int)
10002f8a:	83 c4 10             	add    esp,0x10
10002f8d:	83 7d e0 02          	cmp    DWORD PTR [ebp-0x20],0x2
10002f91:	75 28                	jne    10002fbb <firstRun(bool)+0x61c>
10002f93:	8b 1d 00 00 00 00    	mov    ebx,DWORD PTR ds:0x0	10002f95: R_386_32	term
10002f99:	83 ec 0c             	sub    esp,0xc
10002f9c:	68 00 00 00 00       	push   0x0	10002f9d: R_386_32	passwbufA
10002fa1:	e8 fc ff ff ff       	call   10002fa2 <firstRun(bool)+0x603>	10002fa2: R_386_PC32	strlen
10002fa6:	83 c4 10             	add    esp,0x10
10002fa9:	83 c0 21             	add    eax,0x21
10002fac:	83 ec 04             	sub    esp,0x4
10002faf:	6a 0d                	push   0xd
10002fb1:	50                   	push   eax
10002fb2:	53                   	push   ebx
10002fb3:	e8 fc ff ff ff       	call   10002fb4 <firstRun(bool)+0x615>	10002fb4: R_386_PC32	VgaText::setCursor(int, int)
10002fb8:	83 c4 10             	add    esp,0x10
10002fbb:	83 7d e0 03          	cmp    DWORD PTR [ebp-0x20],0x3
10002fbf:	75 28                	jne    10002fe9 <firstRun(bool)+0x64a>
10002fc1:	8b 1d 00 00 00 00    	mov    ebx,DWORD PTR ds:0x0	10002fc3: R_386_32	term
10002fc7:	83 ec 0c             	sub    esp,0xc
10002fca:	68 00 00 00 00       	push   0x0	10002fcb: R_386_32	passwbufB
10002fcf:	e8 fc ff ff ff       	call   10002fd0 <firstRun(bool)+0x631>	10002fd0: R_386_PC32	strlen
10002fd4:	83 c4 10             	add    esp,0x10
10002fd7:	83 c0 21             	add    eax,0x21
10002fda:	83 ec 04             	sub    esp,0x4
10002fdd:	6a 0f                	push   0xf
10002fdf:	50                   	push   eax
10002fe0:	53                   	push   ebx
10002fe1:	e8 fc ff ff ff       	call   10002fe2 <firstRun(bool)+0x643>	10002fe2: R_386_PC32	VgaText::setCursor(int, int)
10002fe6:	83 c4 10             	add    esp,0x10
10002fe9:	83 7d e0 04          	cmp    DWORD PTR [ebp-0x20],0x4
10002fed:	75 15                	jne    10003004 <firstRun(bool)+0x665>
10002fef:	a1 00 00 00 00       	mov    eax,ds:0x0	10002ff0: R_386_32	term
10002ff4:	83 ec 04             	sub    esp,0x4
10002ff7:	6a 02                	push   0x2
10002ff9:	6a 00                	push   0x0
10002ffb:	50                   	push   eax
10002ffc:	e8 fc ff ff ff       	call   10002ffd <firstRun(bool)+0x65e>	10002ffd: R_386_PC32	VgaText::setCursor(int, int)
10003001:	83 c4 10             	add    esp,0x10
10003004:	a0 00 00 00 00       	mov    al,ds:0x0	10003005: R_386_32	installKey
10003009:	84 c0                	test   al,al
1000300b:	0f 94 c0             	sete   al
1000300e:	84 c0                	test   al,al
10003010:	74 02                	je     10003014 <firstRun(bool)+0x675>
10003012:	eb f0                	jmp    10003004 <firstRun(bool)+0x665>
10003014:	a1 00 00 00 00       	mov    eax,ds:0x0	10003015: R_386_32	term
10003019:	05 82 00 00 00       	add    eax,0x82
1000301e:	83 ec 04             	sub    esp,0x4
10003021:	6a 10                	push   0x10
10003023:	6a 00                	push   0x0
10003025:	50                   	push   eax
10003026:	e8 fc ff ff ff       	call   10003027 <firstRun(bool)+0x688>	10003027: R_386_PC32	memset
1000302b:	83 c4 10             	add    esp,0x10
1000302e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000302f: R_386_32	term
10003033:	05 02 01 00 00       	add    eax,0x102
10003038:	83 ec 04             	sub    esp,0x4
1000303b:	6a 10                	push   0x10
1000303d:	6a 00                	push   0x0
1000303f:	50                   	push   eax
10003040:	e8 fc ff ff ff       	call   10003041 <firstRun(bool)+0x6a2>	10003041: R_386_PC32	memset
10003045:	83 c4 10             	add    esp,0x10
10003048:	a0 00 00 00 00       	mov    al,ds:0x0	10003049: R_386_32	installKey
1000304d:	3c 09                	cmp    al,0x9
1000304f:	74 09                	je     1000305a <firstRun(bool)+0x6bb>
10003051:	a0 00 00 00 00       	mov    al,ds:0x0	10003052: R_386_32	installKey
10003056:	3c 0a                	cmp    al,0xa
10003058:	75 04                	jne    1000305e <firstRun(bool)+0x6bf>
1000305a:	b0 01                	mov    al,0x1
1000305c:	eb 02                	jmp    10003060 <firstRun(bool)+0x6c1>
1000305e:	b0 00                	mov    al,0x0
10003060:	84 c0                	test   al,al
10003062:	74 62                	je     100030c6 <firstRun(bool)+0x727>
10003064:	83 7d e0 04          	cmp    DWORD PTR [ebp-0x20],0x4
10003068:	75 0d                	jne    10003077 <firstRun(bool)+0x6d8>
1000306a:	a0 00 00 00 00       	mov    al,ds:0x0	1000306b: R_386_32	installKey
1000306f:	3c 0a                	cmp    al,0xa
10003071:	75 04                	jne    10003077 <firstRun(bool)+0x6d8>
10003073:	b0 01                	mov    al,0x1
10003075:	eb 02                	jmp    10003079 <firstRun(bool)+0x6da>
10003077:	b0 00                	mov    al,0x0
10003079:	84 c0                	test   al,al
1000307b:	74 24                	je     100030a1 <firstRun(bool)+0x702>
1000307d:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	1000307f: R_386_32	installKey
10003084:	90                   	nop
10003085:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10003087: R_386_32	installKey
1000308c:	83 ec 0c             	sub    esp,0xc
1000308f:	68 a0 0f 00 00       	push   0xfa0
10003094:	e8 fc ff ff ff       	call   10003095 <firstRun(bool)+0x6f6>	10003095: R_386_PC32	milliTenthSleep(unsigned int)
10003099:	83 c4 10             	add    esp,0x10
1000309c:	e9 43 02 00 00       	jmp    100032e4 <firstRun(bool)+0x945>
100030a1:	ff 45 e0             	inc    DWORD PTR [ebp-0x20]
100030a4:	83 7d e0 05          	cmp    DWORD PTR [ebp-0x20],0x5
100030a8:	75 07                	jne    100030b1 <firstRun(bool)+0x712>
100030aa:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
100030b1:	83 ec 0c             	sub    esp,0xc
100030b4:	68 2c 01 00 00       	push   0x12c
100030b9:	e8 fc ff ff ff       	call   100030ba <firstRun(bool)+0x71b>	100030ba: R_386_PC32	milliTenthSleep(unsigned int)
100030be:	83 c4 10             	add    esp,0x10
100030c1:	e9 11 02 00 00       	jmp    100032d7 <firstRun(bool)+0x938>
100030c6:	a0 00 00 00 00       	mov    al,ds:0x0	100030c7: R_386_32	installKey
100030cb:	3c 1f                	cmp    al,0x1f
100030cd:	7e 0d                	jle    100030dc <firstRun(bool)+0x73d>
100030cf:	a0 00 00 00 00       	mov    al,ds:0x0	100030d0: R_386_32	installKey
100030d4:	3c 7f                	cmp    al,0x7f
100030d6:	74 04                	je     100030dc <firstRun(bool)+0x73d>
100030d8:	b0 01                	mov    al,0x1
100030da:	eb 02                	jmp    100030de <firstRun(bool)+0x73f>
100030dc:	b0 00                	mov    al,0x0
100030de:	84 c0                	test   al,al
100030e0:	0f 84 e7 00 00 00    	je     100031cd <firstRun(bool)+0x82e>
100030e6:	a0 00 00 00 00       	mov    al,ds:0x0	100030e7: R_386_32	installKey
100030eb:	88 85 32 ff ff ff    	mov    BYTE PTR [ebp-0xce],al
100030f1:	c6 85 33 ff ff ff 04 	mov    BYTE PTR [ebp-0xcd],0x4
100030f8:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
100030fc:	75 2c                	jne    1000312a <firstRun(bool)+0x78b>
100030fe:	83 ec 0c             	sub    esp,0xc
10003101:	68 00 00 00 00       	push   0x0	10003102: R_386_32	currName
10003106:	e8 fc ff ff ff       	call   10003107 <firstRun(bool)+0x768>	10003107: R_386_PC32	strlen
1000310b:	83 c4 10             	add    esp,0x10
1000310e:	83 f8 1d             	cmp    eax,0x1d
10003111:	77 17                	ja     1000312a <firstRun(bool)+0x78b>
10003113:	83 ec 08             	sub    esp,0x8
10003116:	8d 85 32 ff ff ff    	lea    eax,[ebp-0xce]
1000311c:	50                   	push   eax
1000311d:	68 00 00 00 00       	push   0x0	1000311e: R_386_32	currName
10003122:	e8 fc ff ff ff       	call   10003123 <firstRun(bool)+0x784>	10003123: R_386_PC32	strcat
10003127:	83 c4 10             	add    esp,0x10
1000312a:	83 7d e0 01          	cmp    DWORD PTR [ebp-0x20],0x1
1000312e:	75 2c                	jne    1000315c <firstRun(bool)+0x7bd>
10003130:	83 ec 0c             	sub    esp,0xc
10003133:	68 00 00 00 00       	push   0x0	10003134: R_386_32	currComp
10003138:	e8 fc ff ff ff       	call   10003139 <firstRun(bool)+0x79a>	10003139: R_386_PC32	strlen
1000313d:	83 c4 10             	add    esp,0x10
10003140:	83 f8 1d             	cmp    eax,0x1d
10003143:	77 17                	ja     1000315c <firstRun(bool)+0x7bd>
10003145:	83 ec 08             	sub    esp,0x8
10003148:	8d 85 32 ff ff ff    	lea    eax,[ebp-0xce]
1000314e:	50                   	push   eax
1000314f:	68 00 00 00 00       	push   0x0	10003150: R_386_32	currComp
10003154:	e8 fc ff ff ff       	call   10003155 <firstRun(bool)+0x7b6>	10003155: R_386_PC32	strcat
10003159:	83 c4 10             	add    esp,0x10
1000315c:	83 7d e0 02          	cmp    DWORD PTR [ebp-0x20],0x2
10003160:	75 2c                	jne    1000318e <firstRun(bool)+0x7ef>
10003162:	83 ec 0c             	sub    esp,0xc
10003165:	68 00 00 00 00       	push   0x0	10003166: R_386_32	passwbufA
1000316a:	e8 fc ff ff ff       	call   1000316b <firstRun(bool)+0x7cc>	1000316b: R_386_PC32	strlen
1000316f:	83 c4 10             	add    esp,0x10
10003172:	83 f8 1d             	cmp    eax,0x1d
10003175:	77 17                	ja     1000318e <firstRun(bool)+0x7ef>
10003177:	83 ec 08             	sub    esp,0x8
1000317a:	8d 85 32 ff ff ff    	lea    eax,[ebp-0xce]
10003180:	50                   	push   eax
10003181:	68 00 00 00 00       	push   0x0	10003182: R_386_32	passwbufA
10003186:	e8 fc ff ff ff       	call   10003187 <firstRun(bool)+0x7e8>	10003187: R_386_PC32	strcat
1000318b:	83 c4 10             	add    esp,0x10
1000318e:	83 7d e0 03          	cmp    DWORD PTR [ebp-0x20],0x3
10003192:	0f 85 3f 01 00 00    	jne    100032d7 <firstRun(bool)+0x938>
10003198:	83 ec 0c             	sub    esp,0xc
1000319b:	68 00 00 00 00       	push   0x0	1000319c: R_386_32	passwbufB
100031a0:	e8 fc ff ff ff       	call   100031a1 <firstRun(bool)+0x802>	100031a1: R_386_PC32	strlen
100031a5:	83 c4 10             	add    esp,0x10
100031a8:	83 f8 1d             	cmp    eax,0x1d
100031ab:	0f 87 26 01 00 00    	ja     100032d7 <firstRun(bool)+0x938>
100031b1:	83 ec 08             	sub    esp,0x8
100031b4:	8d 85 32 ff ff ff    	lea    eax,[ebp-0xce]
100031ba:	50                   	push   eax
100031bb:	68 00 00 00 00       	push   0x0	100031bc: R_386_32	passwbufB
100031c0:	e8 fc ff ff ff       	call   100031c1 <firstRun(bool)+0x822>	100031c1: R_386_PC32	strcat
100031c5:	83 c4 10             	add    esp,0x10
100031c8:	e9 0a 01 00 00       	jmp    100032d7 <firstRun(bool)+0x938>
100031cd:	a0 00 00 00 00       	mov    al,ds:0x0	100031ce: R_386_32	installKey
100031d2:	3c 08                	cmp    al,0x8
100031d4:	0f 94 c0             	sete   al
100031d7:	84 c0                	test   al,al
100031d9:	0f 84 ca 00 00 00    	je     100032a9 <firstRun(bool)+0x90a>
100031df:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
100031e3:	75 2c                	jne    10003211 <firstRun(bool)+0x872>
100031e5:	83 ec 0c             	sub    esp,0xc
100031e8:	68 00 00 00 00       	push   0x0	100031e9: R_386_32	currName
100031ed:	e8 fc ff ff ff       	call   100031ee <firstRun(bool)+0x84f>	100031ee: R_386_PC32	strlen
100031f2:	83 c4 10             	add    esp,0x10
100031f5:	85 c0                	test   eax,eax
100031f7:	74 18                	je     10003211 <firstRun(bool)+0x872>
100031f9:	83 ec 0c             	sub    esp,0xc
100031fc:	68 00 00 00 00       	push   0x0	100031fd: R_386_32	currName
10003201:	e8 fc ff ff ff       	call   10003202 <firstRun(bool)+0x863>	10003202: R_386_PC32	strlen
10003206:	83 c4 10             	add    esp,0x10
10003209:	48                   	dec    eax
1000320a:	c6 80 00 00 00 00 00 	mov    BYTE PTR [eax+0x0],0x0	1000320c: R_386_32	currName
10003211:	83 7d e0 01          	cmp    DWORD PTR [ebp-0x20],0x1
10003215:	75 2c                	jne    10003243 <firstRun(bool)+0x8a4>
10003217:	83 ec 0c             	sub    esp,0xc
1000321a:	68 00 00 00 00       	push   0x0	1000321b: R_386_32	currComp
1000321f:	e8 fc ff ff ff       	call   10003220 <firstRun(bool)+0x881>	10003220: R_386_PC32	strlen
10003224:	83 c4 10             	add    esp,0x10
10003227:	85 c0                	test   eax,eax
10003229:	74 18                	je     10003243 <firstRun(bool)+0x8a4>
1000322b:	83 ec 0c             	sub    esp,0xc
1000322e:	68 00 00 00 00       	push   0x0	1000322f: R_386_32	currComp
10003233:	e8 fc ff ff ff       	call   10003234 <firstRun(bool)+0x895>	10003234: R_386_PC32	strlen
10003238:	83 c4 10             	add    esp,0x10
1000323b:	48                   	dec    eax
1000323c:	c6 80 00 00 00 00 00 	mov    BYTE PTR [eax+0x0],0x0	1000323e: R_386_32	currComp
10003243:	83 7d e0 02          	cmp    DWORD PTR [ebp-0x20],0x2
10003247:	75 2c                	jne    10003275 <firstRun(bool)+0x8d6>
10003249:	83 ec 0c             	sub    esp,0xc
1000324c:	68 00 00 00 00       	push   0x0	1000324d: R_386_32	passwbufA
10003251:	e8 fc ff ff ff       	call   10003252 <firstRun(bool)+0x8b3>	10003252: R_386_PC32	strlen
10003256:	83 c4 10             	add    esp,0x10
10003259:	85 c0                	test   eax,eax
1000325b:	74 18                	je     10003275 <firstRun(bool)+0x8d6>
1000325d:	83 ec 0c             	sub    esp,0xc
10003260:	68 00 00 00 00       	push   0x0	10003261: R_386_32	passwbufA
10003265:	e8 fc ff ff ff       	call   10003266 <firstRun(bool)+0x8c7>	10003266: R_386_PC32	strlen
1000326a:	83 c4 10             	add    esp,0x10
1000326d:	48                   	dec    eax
1000326e:	c6 80 00 00 00 00 00 	mov    BYTE PTR [eax+0x0],0x0	10003270: R_386_32	passwbufA
10003275:	83 7d e0 03          	cmp    DWORD PTR [ebp-0x20],0x3
10003279:	75 5c                	jne    100032d7 <firstRun(bool)+0x938>
1000327b:	83 ec 0c             	sub    esp,0xc
1000327e:	68 00 00 00 00       	push   0x0	1000327f: R_386_32	passwbufB
10003283:	e8 fc ff ff ff       	call   10003284 <firstRun(bool)+0x8e5>	10003284: R_386_PC32	strlen
10003288:	83 c4 10             	add    esp,0x10
1000328b:	85 c0                	test   eax,eax
1000328d:	74 48                	je     100032d7 <firstRun(bool)+0x938>
1000328f:	83 ec 0c             	sub    esp,0xc
10003292:	68 00 00 00 00       	push   0x0	10003293: R_386_32	passwbufB
10003297:	e8 fc ff ff ff       	call   10003298 <firstRun(bool)+0x8f9>	10003298: R_386_PC32	strlen
1000329c:	83 c4 10             	add    esp,0x10
1000329f:	48                   	dec    eax
100032a0:	c6 80 00 00 00 00 00 	mov    BYTE PTR [eax+0x0],0x0	100032a2: R_386_32	passwbufB
100032a7:	eb 2e                	jmp    100032d7 <firstRun(bool)+0x938>
100032a9:	a0 00 00 00 00       	mov    al,ds:0x0	100032aa: R_386_32	installKey
100032ae:	3c 7f                	cmp    al,0x7f
100032b0:	0f 94 c0             	sete   al
100032b3:	84 c0                	test   al,al
100032b5:	74 20                	je     100032d7 <firstRun(bool)+0x938>
100032b7:	ff 4d e0             	dec    DWORD PTR [ebp-0x20]
100032ba:	83 7d e0 ff          	cmp    DWORD PTR [ebp-0x20],0xffffffff
100032be:	75 07                	jne    100032c7 <firstRun(bool)+0x928>
100032c0:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
100032c7:	83 ec 0c             	sub    esp,0xc
100032ca:	68 2c 01 00 00       	push   0x12c
100032cf:	e8 fc ff ff ff       	call   100032d0 <firstRun(bool)+0x931>	100032d0: R_386_PC32	milliTenthSleep(unsigned int)
100032d4:	83 c4 10             	add    esp,0x10
100032d7:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100032d9: R_386_32	installKey
100032de:	e9 34 f9 ff ff       	jmp    10002c17 <firstRun(bool)+0x278>
100032e3:	90                   	nop
100032e4:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100032e6: R_386_32	installKey
100032eb:	e8 fc ff ff ff       	call   100032ec <firstRun(bool)+0x94d>	100032ec: R_386_PC32	drawBootScreen()
100032f0:	83 ec 0c             	sub    esp,0xc
100032f3:	68 a5 bc 00 10       	push   0x1000bca5	100032f4: R_386_32	.text
100032f8:	6a 0d                	push   0xd
100032fa:	6a 32                	push   0x32
100032fc:	6a 02                	push   0x2
100032fe:	6a 16                	push   0x16
10003300:	e8 fc ff ff ff       	call   10003301 <firstRun(bool)+0x962>	10003301: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10003305:	83 c4 20             	add    esp,0x20
10003308:	a1 00 00 00 00       	mov    eax,ds:0x0	10003309: R_386_32	Krnl::computer
1000330d:	8b 88 5c 01 00 00    	mov    ecx,DWORD PTR [eax+0x15c]
10003313:	a1 00 00 00 00       	mov    eax,ds:0x0	10003314: R_386_32	Krnl::computer
10003318:	8b 80 5c 01 00 00    	mov    eax,DWORD PTR [eax+0x15c]
1000331e:	8b 00                	mov    eax,DWORD PTR [eax]
10003320:	83 c0 28             	add    eax,0x28
10003323:	8b 00                	mov    eax,DWORD PTR [eax]
10003325:	8d 95 08 ff ff ff    	lea    edx,[ebp-0xf8]
1000332b:	83 ec 08             	sub    esp,0x8
1000332e:	51                   	push   ecx
1000332f:	52                   	push   edx
10003330:	ff d0                	call   eax
10003332:	83 c4 0c             	add    esp,0xc
10003335:	8b 85 08 ff ff ff    	mov    eax,DWORD PTR [ebp-0xf8]
1000333b:	8b 95 0c ff ff ff    	mov    edx,DWORD PTR [ebp-0xf4]
10003341:	89 85 40 ff ff ff    	mov    DWORD PTR [ebp-0xc0],eax
10003347:	89 95 44 ff ff ff    	mov    DWORD PTR [ebp-0xbc],edx
1000334d:	83 ec 08             	sub    esp,0x8
10003350:	68 b3 bc 00 10       	push   0x1000bcb3	10003351: R_386_32	.text
10003355:	8d 85 48 ff ff ff    	lea    eax,[ebp-0xb8]
1000335b:	50                   	push   eax
1000335c:	e8 fc ff ff ff       	call   1000335d <firstRun(bool)+0x9be>	1000335d: R_386_PC32	strcpy
10003361:	83 c4 10             	add    esp,0x10
10003364:	8a 85 40 ff ff ff    	mov    al,BYTE PTR [ebp-0xc0]
1000336a:	0f b6 d0             	movzx  edx,al
1000336d:	89 d0                	mov    eax,edx
1000336f:	c1 e0 02             	shl    eax,0x2
10003372:	01 d0                	add    eax,edx
10003374:	c1 e0 03             	shl    eax,0x3
10003377:	01 d0                	add    eax,edx
10003379:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003380:	01 d0                	add    eax,edx
10003382:	66 c1 e8 08          	shr    ax,0x8
10003386:	c0 e8 03             	shr    al,0x3
10003389:	83 c0 30             	add    eax,0x30
1000338c:	88 85 48 ff ff ff    	mov    BYTE PTR [ebp-0xb8],al
10003392:	8a 8d 40 ff ff ff    	mov    cl,BYTE PTR [ebp-0xc0]
10003398:	0f b6 d1             	movzx  edx,cl
1000339b:	89 d0                	mov    eax,edx
1000339d:	c1 e0 02             	shl    eax,0x2
100033a0:	01 d0                	add    eax,edx
100033a2:	c1 e0 03             	shl    eax,0x3
100033a5:	01 d0                	add    eax,edx
100033a7:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
100033ae:	01 d0                	add    eax,edx
100033b0:	66 c1 e8 08          	shr    ax,0x8
100033b4:	88 c2                	mov    dl,al
100033b6:	c0 ea 03             	shr    dl,0x3
100033b9:	88 d0                	mov    al,dl
100033bb:	c1 e0 02             	shl    eax,0x2
100033be:	01 d0                	add    eax,edx
100033c0:	d1 e0                	shl    eax,1
100033c2:	29 c1                	sub    ecx,eax
100033c4:	88 ca                	mov    dl,cl
100033c6:	8d 42 30             	lea    eax,[edx+0x30]
100033c9:	88 85 49 ff ff ff    	mov    BYTE PTR [ebp-0xb7],al
100033cf:	8a 85 41 ff ff ff    	mov    al,BYTE PTR [ebp-0xbf]
100033d5:	0f b6 c8             	movzx  ecx,al
100033d8:	b8 67 66 66 66       	mov    eax,0x66666667
100033dd:	f7 e9                	imul   ecx
100033df:	c1 fa 02             	sar    edx,0x2
100033e2:	89 c8                	mov    eax,ecx
100033e4:	c1 f8 1f             	sar    eax,0x1f
100033e7:	29 c2                	sub    edx,eax
100033e9:	89 d0                	mov    eax,edx
100033eb:	83 c0 30             	add    eax,0x30
100033ee:	88 85 4b ff ff ff    	mov    BYTE PTR [ebp-0xb5],al
100033f4:	8a 85 41 ff ff ff    	mov    al,BYTE PTR [ebp-0xbf]
100033fa:	0f b6 c8             	movzx  ecx,al
100033fd:	b8 67 66 66 66       	mov    eax,0x66666667
10003402:	f7 e9                	imul   ecx
10003404:	c1 fa 02             	sar    edx,0x2
10003407:	89 c8                	mov    eax,ecx
10003409:	c1 f8 1f             	sar    eax,0x1f
1000340c:	29 c2                	sub    edx,eax
1000340e:	89 d0                	mov    eax,edx
10003410:	c1 e0 02             	shl    eax,0x2
10003413:	01 d0                	add    eax,edx
10003415:	01 c0                	add    eax,eax
10003417:	29 c1                	sub    ecx,eax
10003419:	89 ca                	mov    edx,ecx
1000341b:	88 d0                	mov    al,dl
1000341d:	83 c0 30             	add    eax,0x30
10003420:	88 85 4c ff ff ff    	mov    BYTE PTR [ebp-0xb4],al
10003426:	66 8b 85 42 ff ff ff 	mov    ax,WORD PTR [ebp-0xbe]
1000342d:	0f b7 c8             	movzx  ecx,ax
10003430:	b8 d3 4d 62 10       	mov    eax,0x10624dd3
10003435:	f7 e9                	imul   ecx
10003437:	c1 fa 06             	sar    edx,0x6
1000343a:	89 c8                	mov    eax,ecx
1000343c:	c1 f8 1f             	sar    eax,0x1f
1000343f:	29 c2                	sub    edx,eax
10003441:	89 d0                	mov    eax,edx
10003443:	b9 0a 00 00 00       	mov    ecx,0xa
10003448:	99                   	cdq    
10003449:	f7 f9                	idiv   ecx
1000344b:	89 d0                	mov    eax,edx
1000344d:	83 c0 30             	add    eax,0x30
10003450:	88 85 4e ff ff ff    	mov    BYTE PTR [ebp-0xb2],al
10003456:	66 8b 85 42 ff ff ff 	mov    ax,WORD PTR [ebp-0xbe]
1000345d:	0f b7 c8             	movzx  ecx,ax
10003460:	b8 1f 85 eb 51       	mov    eax,0x51eb851f
10003465:	f7 e9                	imul   ecx
10003467:	c1 fa 05             	sar    edx,0x5
1000346a:	89 c8                	mov    eax,ecx
1000346c:	c1 f8 1f             	sar    eax,0x1f
1000346f:	29 c2                	sub    edx,eax
10003471:	89 d0                	mov    eax,edx
10003473:	b9 0a 00 00 00       	mov    ecx,0xa
10003478:	99                   	cdq    
10003479:	f7 f9                	idiv   ecx
1000347b:	89 d0                	mov    eax,edx
1000347d:	83 c0 30             	add    eax,0x30
10003480:	88 85 4f ff ff ff    	mov    BYTE PTR [ebp-0xb1],al
10003486:	66 8b 85 42 ff ff ff 	mov    ax,WORD PTR [ebp-0xbe]
1000348d:	0f b7 c8             	movzx  ecx,ax
10003490:	b8 67 66 66 66       	mov    eax,0x66666667
10003495:	f7 e9                	imul   ecx
10003497:	c1 fa 02             	sar    edx,0x2
1000349a:	89 c8                	mov    eax,ecx
1000349c:	c1 f8 1f             	sar    eax,0x1f
1000349f:	89 d1                	mov    ecx,edx
100034a1:	29 c1                	sub    ecx,eax
100034a3:	b8 67 66 66 66       	mov    eax,0x66666667
100034a8:	f7 e9                	imul   ecx
100034aa:	c1 fa 02             	sar    edx,0x2
100034ad:	89 c8                	mov    eax,ecx
100034af:	c1 f8 1f             	sar    eax,0x1f
100034b2:	29 c2                	sub    edx,eax
100034b4:	89 d0                	mov    eax,edx
100034b6:	c1 e0 02             	shl    eax,0x2
100034b9:	01 d0                	add    eax,edx
100034bb:	01 c0                	add    eax,eax
100034bd:	29 c1                	sub    ecx,eax
100034bf:	89 ca                	mov    edx,ecx
100034c1:	88 d0                	mov    al,dl
100034c3:	83 c0 30             	add    eax,0x30
100034c6:	88 85 50 ff ff ff    	mov    BYTE PTR [ebp-0xb0],al
100034cc:	66 8b 85 42 ff ff ff 	mov    ax,WORD PTR [ebp-0xbe]
100034d3:	0f b7 c0             	movzx  eax,ax
100034d6:	b9 0a 00 00 00       	mov    ecx,0xa
100034db:	99                   	cdq    
100034dc:	f7 f9                	idiv   ecx
100034de:	89 d0                	mov    eax,edx
100034e0:	83 c0 30             	add    eax,0x30
100034e3:	88 85 51 ff ff ff    	mov    BYTE PTR [ebp-0xaf],al
100034e9:	8a 85 44 ff ff ff    	mov    al,BYTE PTR [ebp-0xbc]
100034ef:	0f b6 d0             	movzx  edx,al
100034f2:	89 d0                	mov    eax,edx
100034f4:	c1 e0 02             	shl    eax,0x2
100034f7:	01 d0                	add    eax,edx
100034f9:	c1 e0 03             	shl    eax,0x3
100034fc:	01 d0                	add    eax,edx
100034fe:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003505:	01 d0                	add    eax,edx
10003507:	66 c1 e8 08          	shr    ax,0x8
1000350b:	c0 e8 03             	shr    al,0x3
1000350e:	83 c0 30             	add    eax,0x30
10003511:	88 85 53 ff ff ff    	mov    BYTE PTR [ebp-0xad],al
10003517:	8a 8d 44 ff ff ff    	mov    cl,BYTE PTR [ebp-0xbc]
1000351d:	0f b6 d1             	movzx  edx,cl
10003520:	89 d0                	mov    eax,edx
10003522:	c1 e0 02             	shl    eax,0x2
10003525:	01 d0                	add    eax,edx
10003527:	c1 e0 03             	shl    eax,0x3
1000352a:	01 d0                	add    eax,edx
1000352c:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003533:	01 d0                	add    eax,edx
10003535:	66 c1 e8 08          	shr    ax,0x8
10003539:	88 c2                	mov    dl,al
1000353b:	c0 ea 03             	shr    dl,0x3
1000353e:	88 d0                	mov    al,dl
10003540:	c1 e0 02             	shl    eax,0x2
10003543:	01 d0                	add    eax,edx
10003545:	d1 e0                	shl    eax,1
10003547:	29 c1                	sub    ecx,eax
10003549:	88 ca                	mov    dl,cl
1000354b:	8d 42 30             	lea    eax,[edx+0x30]
1000354e:	88 85 54 ff ff ff    	mov    BYTE PTR [ebp-0xac],al
10003554:	8a 85 45 ff ff ff    	mov    al,BYTE PTR [ebp-0xbb]
1000355a:	0f b6 d0             	movzx  edx,al
1000355d:	89 d0                	mov    eax,edx
1000355f:	c1 e0 02             	shl    eax,0x2
10003562:	01 d0                	add    eax,edx
10003564:	c1 e0 03             	shl    eax,0x3
10003567:	01 d0                	add    eax,edx
10003569:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003570:	01 d0                	add    eax,edx
10003572:	66 c1 e8 08          	shr    ax,0x8
10003576:	c0 e8 03             	shr    al,0x3
10003579:	83 c0 30             	add    eax,0x30
1000357c:	88 85 56 ff ff ff    	mov    BYTE PTR [ebp-0xaa],al
10003582:	8a 8d 45 ff ff ff    	mov    cl,BYTE PTR [ebp-0xbb]
10003588:	0f b6 d1             	movzx  edx,cl
1000358b:	89 d0                	mov    eax,edx
1000358d:	c1 e0 02             	shl    eax,0x2
10003590:	01 d0                	add    eax,edx
10003592:	c1 e0 03             	shl    eax,0x3
10003595:	01 d0                	add    eax,edx
10003597:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
1000359e:	01 d0                	add    eax,edx
100035a0:	66 c1 e8 08          	shr    ax,0x8
100035a4:	88 c2                	mov    dl,al
100035a6:	c0 ea 03             	shr    dl,0x3
100035a9:	88 d0                	mov    al,dl
100035ab:	c1 e0 02             	shl    eax,0x2
100035ae:	01 d0                	add    eax,edx
100035b0:	d1 e0                	shl    eax,1
100035b2:	29 c1                	sub    ecx,eax
100035b4:	88 ca                	mov    dl,cl
100035b6:	8d 42 30             	lea    eax,[edx+0x30]
100035b9:	88 85 57 ff ff ff    	mov    BYTE PTR [ebp-0xa9],al
100035bf:	8a 85 46 ff ff ff    	mov    al,BYTE PTR [ebp-0xba]
100035c5:	0f b6 d0             	movzx  edx,al
100035c8:	89 d0                	mov    eax,edx
100035ca:	c1 e0 02             	shl    eax,0x2
100035cd:	01 d0                	add    eax,edx
100035cf:	c1 e0 03             	shl    eax,0x3
100035d2:	01 d0                	add    eax,edx
100035d4:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
100035db:	01 d0                	add    eax,edx
100035dd:	66 c1 e8 08          	shr    ax,0x8
100035e1:	c0 e8 03             	shr    al,0x3
100035e4:	83 c0 30             	add    eax,0x30
100035e7:	88 85 59 ff ff ff    	mov    BYTE PTR [ebp-0xa7],al
100035ed:	8a 8d 46 ff ff ff    	mov    cl,BYTE PTR [ebp-0xba]
100035f3:	0f b6 d1             	movzx  edx,cl
100035f6:	89 d0                	mov    eax,edx
100035f8:	c1 e0 02             	shl    eax,0x2
100035fb:	01 d0                	add    eax,edx
100035fd:	c1 e0 03             	shl    eax,0x3
10003600:	01 d0                	add    eax,edx
10003602:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003609:	01 d0                	add    eax,edx
1000360b:	66 c1 e8 08          	shr    ax,0x8
1000360f:	88 c2                	mov    dl,al
10003611:	c0 ea 03             	shr    dl,0x3
10003614:	88 d0                	mov    al,dl
10003616:	c1 e0 02             	shl    eax,0x2
10003619:	01 d0                	add    eax,edx
1000361b:	d1 e0                	shl    eax,1
1000361d:	29 c1                	sub    ecx,eax
1000361f:	88 ca                	mov    dl,cl
10003621:	8d 42 30             	lea    eax,[edx+0x30]
10003624:	88 85 5a ff ff ff    	mov    BYTE PTR [ebp-0xa6],al
1000362a:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10003631:	a1 00 00 00 00       	mov    eax,ds:0x0	10003632: R_386_32	term
10003636:	83 ec 04             	sub    esp,0x4
10003639:	6a 05                	push   0x5
1000363b:	6a 18                	push   0x18
1000363d:	50                   	push   eax
1000363e:	e8 fc ff ff ff       	call   1000363f <firstRun(bool)+0xca0>	1000363f: R_386_PC32	VgaText::setCursor(int, int)
10003643:	83 c4 10             	add    esp,0x10
10003646:	a1 00 00 00 00       	mov    eax,ds:0x0	10003647: R_386_32	term
1000364b:	83 ec 08             	sub    esp,0x8
1000364e:	68 c8 bc 00 10       	push   0x1000bcc8	1000364f: R_386_32	.text
10003653:	50                   	push   eax
10003654:	e8 fc ff ff ff       	call   10003655 <firstRun(bool)+0xcb6>	10003655: R_386_PC32	VgaText::puts(char const*)
10003659:	83 c4 10             	add    esp,0x10
1000365c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000365d: R_386_32	term
10003661:	83 ec 04             	sub    esp,0x4
10003664:	6a 06                	push   0x6
10003666:	6a 18                	push   0x18
10003668:	50                   	push   eax
10003669:	e8 fc ff ff ff       	call   1000366a <firstRun(bool)+0xccb>	1000366a: R_386_PC32	VgaText::setCursor(int, int)
1000366e:	83 c4 10             	add    esp,0x10
10003671:	a1 00 00 00 00       	mov    eax,ds:0x0	10003672: R_386_32	term
10003676:	83 ec 08             	sub    esp,0x8
10003679:	68 f0 bc 00 10       	push   0x1000bcf0	1000367a: R_386_32	.text
1000367e:	50                   	push   eax
1000367f:	e8 fc ff ff ff       	call   10003680 <firstRun(bool)+0xce1>	10003680: R_386_PC32	VgaText::puts(char const*)
10003684:	83 c4 10             	add    esp,0x10
10003687:	a1 00 00 00 00       	mov    eax,ds:0x0	10003688: R_386_32	term
1000368c:	83 ec 04             	sub    esp,0x4
1000368f:	6a 09                	push   0x9
10003691:	6a 1a                	push   0x1a
10003693:	50                   	push   eax
10003694:	e8 fc ff ff ff       	call   10003695 <firstRun(bool)+0xcf6>	10003695: R_386_PC32	VgaText::setCursor(int, int)
10003699:	83 c4 10             	add    esp,0x10
1000369c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000369d: R_386_32	term
100036a1:	6a 0f                	push   0xf
100036a3:	6a 07                	push   0x7
100036a5:	68 06 bd 00 10       	push   0x1000bd06	100036a6: R_386_32	.text
100036aa:	50                   	push   eax
100036ab:	e8 fc ff ff ff       	call   100036ac <firstRun(bool)+0xd0d>	100036ac: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
100036b0:	83 c4 10             	add    esp,0x10
100036b3:	a1 00 00 00 00       	mov    eax,ds:0x0	100036b4: R_386_32	term
100036b8:	83 ec 04             	sub    esp,0x4
100036bb:	6a 18                	push   0x18
100036bd:	6a 11                	push   0x11
100036bf:	50                   	push   eax
100036c0:	e8 fc ff ff ff       	call   100036c1 <firstRun(bool)+0xd22>	100036c1: R_386_PC32	VgaText::setCursor(int, int)
100036c5:	83 c4 10             	add    esp,0x10
100036c8:	a1 00 00 00 00       	mov    eax,ds:0x0	100036c9: R_386_32	term
100036cd:	6a 0b                	push   0xb
100036cf:	6a 03                	push   0x3
100036d1:	68 1a bd 00 10       	push   0x1000bd1a	100036d2: R_386_32	.text
100036d6:	50                   	push   eax
100036d7:	e8 fc ff ff ff       	call   100036d8 <firstRun(bool)+0xd39>	100036d8: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
100036dc:	83 c4 10             	add    esp,0x10
100036df:	a1 00 00 00 00       	mov    eax,ds:0x0	100036e0: R_386_32	term
100036e4:	83 ec 04             	sub    esp,0x4
100036e7:	6a 08                	push   0x8
100036e9:	6a 1a                	push   0x1a
100036eb:	50                   	push   eax
100036ec:	e8 fc ff ff ff       	call   100036ed <firstRun(bool)+0xd4e>	100036ed: R_386_PC32	VgaText::setCursor(int, int)
100036f1:	83 c4 10             	add    esp,0x10
100036f4:	a1 00 00 00 00       	mov    eax,ds:0x0	100036f5: R_386_32	term
100036f9:	83 ec 08             	sub    esp,0x8
100036fc:	8d 95 48 ff ff ff    	lea    edx,[ebp-0xb8]
10003702:	52                   	push   edx
10003703:	50                   	push   eax
10003704:	e8 fc ff ff ff       	call   10003705 <firstRun(bool)+0xd66>	10003705: R_386_PC32	VgaText::puts(char const*)
10003709:	83 c4 10             	add    esp,0x10
1000370c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000370d: R_386_32	term
10003711:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10003714:	83 c2 1a             	add    edx,0x1a
10003717:	83 ec 04             	sub    esp,0x4
1000371a:	6a 08                	push   0x8
1000371c:	52                   	push   edx
1000371d:	50                   	push   eax
1000371e:	e8 fc ff ff ff       	call   1000371f <firstRun(bool)+0xd80>	1000371f: R_386_PC32	VgaText::setCursor(int, int)
10003723:	83 c4 10             	add    esp,0x10
10003726:	a1 00 00 00 00       	mov    eax,ds:0x0	10003727: R_386_32	term
1000372b:	8d 8d 48 ff ff ff    	lea    ecx,[ebp-0xb8]
10003731:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10003734:	01 ca                	add    edx,ecx
10003736:	8a 12                	mov    dl,BYTE PTR [edx]
10003738:	0f be d2             	movsx  edx,dl
1000373b:	6a 00                	push   0x0
1000373d:	6a 0f                	push   0xf
1000373f:	52                   	push   edx
10003740:	50                   	push   eax
10003741:	e8 fc ff ff ff       	call   10003742 <firstRun(bool)+0xda3>	10003742: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
10003746:	83 c4 10             	add    esp,0x10
10003749:	8a 85 53 ff ff ff    	mov    al,BYTE PTR [ebp-0xad]
1000374f:	0f be c0             	movsx  eax,al
10003752:	8d 50 d0             	lea    edx,[eax-0x30]
10003755:	89 d0                	mov    eax,edx
10003757:	c1 e0 02             	shl    eax,0x2
1000375a:	01 d0                	add    eax,edx
1000375c:	01 c0                	add    eax,eax
1000375e:	89 c2                	mov    edx,eax
10003760:	8a 85 54 ff ff ff    	mov    al,BYTE PTR [ebp-0xac]
10003766:	0f be c0             	movsx  eax,al
10003769:	83 e8 30             	sub    eax,0x30
1000376c:	01 d0                	add    eax,edx
1000376e:	89 45 bc             	mov    DWORD PTR [ebp-0x44],eax
10003771:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
10003774:	b9 0c 00 00 00       	mov    ecx,0xc
10003779:	99                   	cdq    
1000377a:	f7 f9                	idiv   ecx
1000377c:	89 55 d0             	mov    DWORD PTR [ebp-0x30],edx
1000377f:	83 7d d0 00          	cmp    DWORD PTR [ebp-0x30],0x0
10003783:	75 07                	jne    1000378c <firstRun(bool)+0xded>
10003785:	c7 45 d0 0c 00 00 00 	mov    DWORD PTR [ebp-0x30],0xc
1000378c:	8a 85 56 ff ff ff    	mov    al,BYTE PTR [ebp-0xaa]
10003792:	0f be c0             	movsx  eax,al
10003795:	8d 50 d0             	lea    edx,[eax-0x30]
10003798:	89 d0                	mov    eax,edx
1000379a:	c1 e0 02             	shl    eax,0x2
1000379d:	01 d0                	add    eax,edx
1000379f:	01 c0                	add    eax,eax
100037a1:	89 c2                	mov    edx,eax
100037a3:	8a 85 57 ff ff ff    	mov    al,BYTE PTR [ebp-0xa9]
100037a9:	0f be c0             	movsx  eax,al
100037ac:	83 e8 30             	sub    eax,0x30
100037af:	01 d0                	add    eax,edx
100037b1:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
100037b4:	83 ec 04             	sub    esp,0x4
100037b7:	6a 10                	push   0x10
100037b9:	6a 00                	push   0x0
100037bb:	8d 85 22 ff ff ff    	lea    eax,[ebp-0xde]
100037c1:	50                   	push   eax
100037c2:	e8 fc ff ff ff       	call   100037c3 <firstRun(bool)+0xe24>	100037c3: R_386_PC32	memset
100037c7:	83 c4 10             	add    esp,0x10
100037ca:	c7 45 b4 00 00 00 00 	mov    DWORD PTR [ebp-0x4c],0x0
100037d1:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
100037d4:	8d 50 01             	lea    edx,[eax+0x1]
100037d7:	89 55 b4             	mov    DWORD PTR [ebp-0x4c],edx
100037da:	c6 84 05 22 ff ff ff 28 	mov    BYTE PTR [ebp+eax*1-0xde],0x28
100037e2:	8b 4d d0             	mov    ecx,DWORD PTR [ebp-0x30]
100037e5:	b8 67 66 66 66       	mov    eax,0x66666667
100037ea:	f7 e9                	imul   ecx
100037ec:	c1 fa 02             	sar    edx,0x2
100037ef:	89 c8                	mov    eax,ecx
100037f1:	c1 f8 1f             	sar    eax,0x1f
100037f4:	29 c2                	sub    edx,eax
100037f6:	89 d0                	mov    eax,edx
100037f8:	8d 48 30             	lea    ecx,[eax+0x30]
100037fb:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
100037fe:	8d 50 01             	lea    edx,[eax+0x1]
10003801:	89 55 b4             	mov    DWORD PTR [ebp-0x4c],edx
10003804:	88 ca                	mov    dl,cl
10003806:	88 94 05 22 ff ff ff 	mov    BYTE PTR [ebp+eax*1-0xde],dl
1000380d:	8b 4d d0             	mov    ecx,DWORD PTR [ebp-0x30]
10003810:	b8 67 66 66 66       	mov    eax,0x66666667
10003815:	f7 e9                	imul   ecx
10003817:	c1 fa 02             	sar    edx,0x2
1000381a:	89 c8                	mov    eax,ecx
1000381c:	c1 f8 1f             	sar    eax,0x1f
1000381f:	29 c2                	sub    edx,eax
10003821:	89 d0                	mov    eax,edx
10003823:	c1 e0 02             	shl    eax,0x2
10003826:	01 d0                	add    eax,edx
10003828:	01 c0                	add    eax,eax
1000382a:	29 c1                	sub    ecx,eax
1000382c:	89 ca                	mov    edx,ecx
1000382e:	88 d0                	mov    al,dl
10003830:	8d 48 30             	lea    ecx,[eax+0x30]
10003833:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
10003836:	8d 50 01             	lea    edx,[eax+0x1]
10003839:	89 55 b4             	mov    DWORD PTR [ebp-0x4c],edx
1000383c:	88 ca                	mov    dl,cl
1000383e:	88 94 05 22 ff ff ff 	mov    BYTE PTR [ebp+eax*1-0xde],dl
10003845:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
10003848:	8d 50 01             	lea    edx,[eax+0x1]
1000384b:	89 55 b4             	mov    DWORD PTR [ebp-0x4c],edx
1000384e:	c6 84 05 22 ff ff ff 3a 	mov    BYTE PTR [ebp+eax*1-0xde],0x3a
10003856:	8b 4d b8             	mov    ecx,DWORD PTR [ebp-0x48]
10003859:	b8 67 66 66 66       	mov    eax,0x66666667
1000385e:	f7 e9                	imul   ecx
10003860:	c1 fa 02             	sar    edx,0x2
10003863:	89 c8                	mov    eax,ecx
10003865:	c1 f8 1f             	sar    eax,0x1f
10003868:	29 c2                	sub    edx,eax
1000386a:	89 d0                	mov    eax,edx
1000386c:	8d 48 30             	lea    ecx,[eax+0x30]
1000386f:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
10003872:	8d 50 01             	lea    edx,[eax+0x1]
10003875:	89 55 b4             	mov    DWORD PTR [ebp-0x4c],edx
10003878:	88 ca                	mov    dl,cl
1000387a:	88 94 05 22 ff ff ff 	mov    BYTE PTR [ebp+eax*1-0xde],dl
10003881:	8b 4d b8             	mov    ecx,DWORD PTR [ebp-0x48]
10003884:	b8 67 66 66 66       	mov    eax,0x66666667
10003889:	f7 e9                	imul   ecx
1000388b:	c1 fa 02             	sar    edx,0x2
1000388e:	89 c8                	mov    eax,ecx
10003890:	c1 f8 1f             	sar    eax,0x1f
10003893:	29 c2                	sub    edx,eax
10003895:	89 d0                	mov    eax,edx
10003897:	c1 e0 02             	shl    eax,0x2
1000389a:	01 d0                	add    eax,edx
1000389c:	01 c0                	add    eax,eax
1000389e:	29 c1                	sub    ecx,eax
100038a0:	89 ca                	mov    edx,ecx
100038a2:	88 d0                	mov    al,dl
100038a4:	8d 48 30             	lea    ecx,[eax+0x30]
100038a7:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
100038aa:	8d 50 01             	lea    edx,[eax+0x1]
100038ad:	89 55 b4             	mov    DWORD PTR [ebp-0x4c],edx
100038b0:	88 ca                	mov    dl,cl
100038b2:	88 94 05 22 ff ff ff 	mov    BYTE PTR [ebp+eax*1-0xde],dl
100038b9:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
100038bc:	8d 50 01             	lea    edx,[eax+0x1]
100038bf:	89 55 b4             	mov    DWORD PTR [ebp-0x4c],edx
100038c2:	c6 84 05 22 ff ff ff 20 	mov    BYTE PTR [ebp+eax*1-0xde],0x20
100038ca:	83 7d bc 0b          	cmp    DWORD PTR [ebp-0x44],0xb
100038ce:	7e 04                	jle    100038d4 <firstRun(bool)+0xf35>
100038d0:	b2 50                	mov    dl,0x50
100038d2:	eb 02                	jmp    100038d6 <firstRun(bool)+0xf37>
100038d4:	b2 41                	mov    dl,0x41
100038d6:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
100038d9:	8d 48 01             	lea    ecx,[eax+0x1]
100038dc:	89 4d b4             	mov    DWORD PTR [ebp-0x4c],ecx
100038df:	88 94 05 22 ff ff ff 	mov    BYTE PTR [ebp+eax*1-0xde],dl
100038e6:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
100038e9:	8d 50 01             	lea    edx,[eax+0x1]
100038ec:	89 55 b4             	mov    DWORD PTR [ebp-0x4c],edx
100038ef:	c6 84 05 22 ff ff ff 4d 	mov    BYTE PTR [ebp+eax*1-0xde],0x4d
100038f7:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
100038fa:	8d 50 01             	lea    edx,[eax+0x1]
100038fd:	89 55 b4             	mov    DWORD PTR [ebp-0x4c],edx
10003900:	c6 84 05 22 ff ff ff 29 	mov    BYTE PTR [ebp+eax*1-0xde],0x29
10003908:	8b 1d 00 00 00 00    	mov    ebx,DWORD PTR ds:0x0	1000390a: R_386_32	term
1000390e:	83 ec 0c             	sub    esp,0xc
10003911:	8d 85 48 ff ff ff    	lea    eax,[ebp-0xb8]
10003917:	50                   	push   eax
10003918:	e8 fc ff ff ff       	call   10003919 <firstRun(bool)+0xf7a>	10003919: R_386_PC32	strlen
1000391d:	83 c4 10             	add    esp,0x10
10003920:	83 c0 1e             	add    eax,0x1e
10003923:	83 ec 04             	sub    esp,0x4
10003926:	6a 08                	push   0x8
10003928:	50                   	push   eax
10003929:	53                   	push   ebx
1000392a:	e8 fc ff ff ff       	call   1000392b <firstRun(bool)+0xf8c>	1000392b: R_386_PC32	VgaText::setCursor(int, int)
1000392f:	83 c4 10             	add    esp,0x10
10003932:	a1 00 00 00 00       	mov    eax,ds:0x0	10003933: R_386_32	term
10003937:	83 ec 08             	sub    esp,0x8
1000393a:	8d 95 22 ff ff ff    	lea    edx,[ebp-0xde]
10003940:	52                   	push   edx
10003941:	50                   	push   eax
10003942:	e8 fc ff ff ff       	call   10003943 <firstRun(bool)+0xfa4>	10003943: R_386_PC32	VgaText::puts(char const*)
10003947:	83 c4 10             	add    esp,0x10
1000394a:	a1 00 00 00 00       	mov    eax,ds:0x0	1000394b: R_386_32	term
1000394f:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10003952:	83 c2 1a             	add    edx,0x1a
10003955:	83 ec 04             	sub    esp,0x4
10003958:	6a 08                	push   0x8
1000395a:	52                   	push   edx
1000395b:	50                   	push   eax
1000395c:	e8 fc ff ff ff       	call   1000395d <firstRun(bool)+0xfbe>	1000395d: R_386_PC32	VgaText::setCursor(int, int)
10003961:	83 c4 10             	add    esp,0x10
10003964:	a0 00 00 00 00       	mov    al,ds:0x0	10003965: R_386_32	installKey
10003969:	84 c0                	test   al,al
1000396b:	0f 94 c0             	sete   al
1000396e:	84 c0                	test   al,al
10003970:	74 02                	je     10003974 <firstRun(bool)+0xfd5>
10003972:	eb f0                	jmp    10003964 <firstRun(bool)+0xfc5>
10003974:	a1 00 00 00 00       	mov    eax,ds:0x0	10003975: R_386_32	term
10003979:	05 82 00 00 00       	add    eax,0x82
1000397e:	83 ec 04             	sub    esp,0x4
10003981:	6a 10                	push   0x10
10003983:	6a 00                	push   0x0
10003985:	50                   	push   eax
10003986:	e8 fc ff ff ff       	call   10003987 <firstRun(bool)+0xfe8>	10003987: R_386_PC32	memset
1000398b:	83 c4 10             	add    esp,0x10
1000398e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000398f: R_386_32	term
10003993:	05 02 01 00 00       	add    eax,0x102
10003998:	83 ec 04             	sub    esp,0x4
1000399b:	6a 10                	push   0x10
1000399d:	6a 00                	push   0x0
1000399f:	50                   	push   eax
100039a0:	e8 fc ff ff ff       	call   100039a1 <firstRun(bool)+0x1002>	100039a1: R_386_PC32	memset
100039a5:	83 c4 10             	add    esp,0x10
100039a8:	a0 00 00 00 00       	mov    al,ds:0x0	100039a9: R_386_32	installKey
100039ad:	3c 03                	cmp    al,0x3
100039af:	74 09                	je     100039ba <firstRun(bool)+0x101b>
100039b1:	a0 00 00 00 00       	mov    al,ds:0x0	100039b2: R_386_32	installKey
100039b6:	3c 08                	cmp    al,0x8
100039b8:	75 04                	jne    100039be <firstRun(bool)+0x101f>
100039ba:	b0 01                	mov    al,0x1
100039bc:	eb 02                	jmp    100039c0 <firstRun(bool)+0x1021>
100039be:	b0 00                	mov    al,0x0
100039c0:	84 c0                	test   al,al
100039c2:	74 58                	je     10003a1c <firstRun(bool)+0x107d>
100039c4:	ff 4d e4             	dec    DWORD PTR [ebp-0x1c]
100039c7:	83 7d e4 ff          	cmp    DWORD PTR [ebp-0x1c],0xffffffff
100039cb:	75 16                	jne    100039e3 <firstRun(bool)+0x1044>
100039cd:	83 ec 0c             	sub    esp,0xc
100039d0:	8d 85 48 ff ff ff    	lea    eax,[ebp-0xb8]
100039d6:	50                   	push   eax
100039d7:	e8 fc ff ff ff       	call   100039d8 <firstRun(bool)+0x1039>	100039d8: R_386_PC32	strlen
100039dc:	83 c4 10             	add    esp,0x10
100039df:	48                   	dec    eax
100039e0:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
100039e3:	8d 95 48 ff ff ff    	lea    edx,[ebp-0xb8]
100039e9:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100039ec:	01 d0                	add    eax,edx
100039ee:	8a 00                	mov    al,BYTE PTR [eax]
100039f0:	3c 20                	cmp    al,0x20
100039f2:	74 d0                	je     100039c4 <firstRun(bool)+0x1025>
100039f4:	8d 95 48 ff ff ff    	lea    edx,[ebp-0xb8]
100039fa:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100039fd:	01 d0                	add    eax,edx
100039ff:	8a 00                	mov    al,BYTE PTR [eax]
10003a01:	3c 2f                	cmp    al,0x2f
10003a03:	74 bf                	je     100039c4 <firstRun(bool)+0x1025>
10003a05:	8d 95 48 ff ff ff    	lea    edx,[ebp-0xb8]
10003a0b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003a0e:	01 d0                	add    eax,edx
10003a10:	8a 00                	mov    al,BYTE PTR [eax]
10003a12:	3c 3a                	cmp    al,0x3a
10003a14:	0f 85 5e 04 00 00    	jne    10003e78 <firstRun(bool)+0x14d9>
10003a1a:	eb a8                	jmp    100039c4 <firstRun(bool)+0x1025>
10003a1c:	a0 00 00 00 00       	mov    al,ds:0x0	10003a1d: R_386_32	installKey
10003a21:	3c 2f                	cmp    al,0x2f
10003a23:	7e 09                	jle    10003a2e <firstRun(bool)+0x108f>
10003a25:	a0 00 00 00 00       	mov    al,ds:0x0	10003a26: R_386_32	installKey
10003a2a:	3c 39                	cmp    al,0x39
10003a2c:	7e 12                	jle    10003a40 <firstRun(bool)+0x10a1>
10003a2e:	a0 00 00 00 00       	mov    al,ds:0x0	10003a2f: R_386_32	installKey
10003a33:	3c 20                	cmp    al,0x20
10003a35:	74 09                	je     10003a40 <firstRun(bool)+0x10a1>
10003a37:	a0 00 00 00 00       	mov    al,ds:0x0	10003a38: R_386_32	installKey
10003a3c:	3c 04                	cmp    al,0x4
10003a3e:	75 04                	jne    10003a44 <firstRun(bool)+0x10a5>
10003a40:	b0 01                	mov    al,0x1
10003a42:	eb 02                	jmp    10003a46 <firstRun(bool)+0x10a7>
10003a44:	b0 00                	mov    al,0x0
10003a46:	84 c0                	test   al,al
10003a48:	0f 84 cf 01 00 00    	je     10003c1d <firstRun(bool)+0x127e>
10003a4e:	a0 00 00 00 00       	mov    al,ds:0x0	10003a4f: R_386_32	installKey
10003a53:	3c 2f                	cmp    al,0x2f
10003a55:	7e 0d                	jle    10003a64 <firstRun(bool)+0x10c5>
10003a57:	a0 00 00 00 00       	mov    al,ds:0x0	10003a58: R_386_32	installKey
10003a5c:	3c 39                	cmp    al,0x39
10003a5e:	7f 04                	jg     10003a64 <firstRun(bool)+0x10c5>
10003a60:	b0 01                	mov    al,0x1
10003a62:	eb 02                	jmp    10003a66 <firstRun(bool)+0x10c7>
10003a64:	b0 00                	mov    al,0x0
10003a66:	84 c0                	test   al,al
10003a68:	0f 84 51 01 00 00    	je     10003bbf <firstRun(bool)+0x1220>
10003a6e:	83 7d e4 00          	cmp    DWORD PTR [ebp-0x1c],0x0
10003a72:	75 0d                	jne    10003a81 <firstRun(bool)+0x10e2>
10003a74:	a0 00 00 00 00       	mov    al,ds:0x0	10003a75: R_386_32	installKey
10003a79:	3c 33                	cmp    al,0x33
10003a7b:	7e 04                	jle    10003a81 <firstRun(bool)+0x10e2>
10003a7d:	b0 01                	mov    al,0x1
10003a7f:	eb 02                	jmp    10003a83 <firstRun(bool)+0x10e4>
10003a81:	b0 00                	mov    al,0x0
10003a83:	84 c0                	test   al,al
10003a85:	74 28                	je     10003aaf <firstRun(bool)+0x1110>
10003a87:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003a8a:	8d 50 01             	lea    edx,[eax+0x1]
10003a8d:	89 55 e4             	mov    DWORD PTR [ebp-0x1c],edx
10003a90:	c6 84 05 48 ff ff ff 30 	mov    BYTE PTR [ebp+eax*1-0xb8],0x30
10003a98:	a0 00 00 00 00       	mov    al,ds:0x0	10003a99: R_386_32	installKey
10003a9d:	8d 8d 48 ff ff ff    	lea    ecx,[ebp-0xb8]
10003aa3:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10003aa6:	01 ca                	add    edx,ecx
10003aa8:	88 02                	mov    BYTE PTR [edx],al
10003aaa:	e9 10 01 00 00       	jmp    10003bbf <firstRun(bool)+0x1220>
10003aaf:	83 7d e4 03          	cmp    DWORD PTR [ebp-0x1c],0x3
10003ab3:	75 0d                	jne    10003ac2 <firstRun(bool)+0x1123>
10003ab5:	a0 00 00 00 00       	mov    al,ds:0x0	10003ab6: R_386_32	installKey
10003aba:	3c 31                	cmp    al,0x31
10003abc:	7e 04                	jle    10003ac2 <firstRun(bool)+0x1123>
10003abe:	b0 01                	mov    al,0x1
10003ac0:	eb 02                	jmp    10003ac4 <firstRun(bool)+0x1125>
10003ac2:	b0 00                	mov    al,0x0
10003ac4:	84 c0                	test   al,al
10003ac6:	74 28                	je     10003af0 <firstRun(bool)+0x1151>
10003ac8:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003acb:	8d 50 01             	lea    edx,[eax+0x1]
10003ace:	89 55 e4             	mov    DWORD PTR [ebp-0x1c],edx
10003ad1:	c6 84 05 48 ff ff ff 30 	mov    BYTE PTR [ebp+eax*1-0xb8],0x30
10003ad9:	a0 00 00 00 00       	mov    al,ds:0x0	10003ada: R_386_32	installKey
10003ade:	8d 8d 48 ff ff ff    	lea    ecx,[ebp-0xb8]
10003ae4:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10003ae7:	01 ca                	add    edx,ecx
10003ae9:	88 02                	mov    BYTE PTR [edx],al
10003aeb:	e9 cf 00 00 00       	jmp    10003bbf <firstRun(bool)+0x1220>
10003af0:	83 7d e4 0b          	cmp    DWORD PTR [ebp-0x1c],0xb
10003af4:	75 0d                	jne    10003b03 <firstRun(bool)+0x1164>
10003af6:	a0 00 00 00 00       	mov    al,ds:0x0	10003af7: R_386_32	installKey
10003afb:	3c 32                	cmp    al,0x32
10003afd:	7e 04                	jle    10003b03 <firstRun(bool)+0x1164>
10003aff:	b0 01                	mov    al,0x1
10003b01:	eb 02                	jmp    10003b05 <firstRun(bool)+0x1166>
10003b03:	b0 00                	mov    al,0x0
10003b05:	84 c0                	test   al,al
10003b07:	74 28                	je     10003b31 <firstRun(bool)+0x1192>
10003b09:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003b0c:	8d 50 01             	lea    edx,[eax+0x1]
10003b0f:	89 55 e4             	mov    DWORD PTR [ebp-0x1c],edx
10003b12:	c6 84 05 48 ff ff ff 30 	mov    BYTE PTR [ebp+eax*1-0xb8],0x30
10003b1a:	a0 00 00 00 00       	mov    al,ds:0x0	10003b1b: R_386_32	installKey
10003b1f:	8d 8d 48 ff ff ff    	lea    ecx,[ebp-0xb8]
10003b25:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10003b28:	01 ca                	add    edx,ecx
10003b2a:	88 02                	mov    BYTE PTR [edx],al
10003b2c:	e9 8e 00 00 00       	jmp    10003bbf <firstRun(bool)+0x1220>
10003b31:	83 7d e4 0e          	cmp    DWORD PTR [ebp-0x1c],0xe
10003b35:	75 0d                	jne    10003b44 <firstRun(bool)+0x11a5>
10003b37:	a0 00 00 00 00       	mov    al,ds:0x0	10003b38: R_386_32	installKey
10003b3c:	3c 35                	cmp    al,0x35
10003b3e:	7e 04                	jle    10003b44 <firstRun(bool)+0x11a5>
10003b40:	b0 01                	mov    al,0x1
10003b42:	eb 02                	jmp    10003b46 <firstRun(bool)+0x11a7>
10003b44:	b0 00                	mov    al,0x0
10003b46:	84 c0                	test   al,al
10003b48:	74 25                	je     10003b6f <firstRun(bool)+0x11d0>
10003b4a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003b4d:	8d 50 01             	lea    edx,[eax+0x1]
10003b50:	89 55 e4             	mov    DWORD PTR [ebp-0x1c],edx
10003b53:	c6 84 05 48 ff ff ff 30 	mov    BYTE PTR [ebp+eax*1-0xb8],0x30
10003b5b:	a0 00 00 00 00       	mov    al,ds:0x0	10003b5c: R_386_32	installKey
10003b60:	8d 8d 48 ff ff ff    	lea    ecx,[ebp-0xb8]
10003b66:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10003b69:	01 ca                	add    edx,ecx
10003b6b:	88 02                	mov    BYTE PTR [edx],al
10003b6d:	eb 50                	jmp    10003bbf <firstRun(bool)+0x1220>
10003b6f:	83 7d e4 11          	cmp    DWORD PTR [ebp-0x1c],0x11
10003b73:	75 0d                	jne    10003b82 <firstRun(bool)+0x11e3>
10003b75:	a0 00 00 00 00       	mov    al,ds:0x0	10003b76: R_386_32	installKey
10003b7a:	3c 35                	cmp    al,0x35
10003b7c:	7e 04                	jle    10003b82 <firstRun(bool)+0x11e3>
10003b7e:	b0 01                	mov    al,0x1
10003b80:	eb 02                	jmp    10003b84 <firstRun(bool)+0x11e5>
10003b82:	b0 00                	mov    al,0x0
10003b84:	84 c0                	test   al,al
10003b86:	74 25                	je     10003bad <firstRun(bool)+0x120e>
10003b88:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003b8b:	8d 50 01             	lea    edx,[eax+0x1]
10003b8e:	89 55 e4             	mov    DWORD PTR [ebp-0x1c],edx
10003b91:	c6 84 05 48 ff ff ff 30 	mov    BYTE PTR [ebp+eax*1-0xb8],0x30
10003b99:	a0 00 00 00 00       	mov    al,ds:0x0	10003b9a: R_386_32	installKey
10003b9e:	8d 8d 48 ff ff ff    	lea    ecx,[ebp-0xb8]
10003ba4:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10003ba7:	01 ca                	add    edx,ecx
10003ba9:	88 02                	mov    BYTE PTR [edx],al
10003bab:	eb 12                	jmp    10003bbf <firstRun(bool)+0x1220>
10003bad:	a0 00 00 00 00       	mov    al,ds:0x0	10003bae: R_386_32	installKey
10003bb2:	8d 8d 48 ff ff ff    	lea    ecx,[ebp-0xb8]
10003bb8:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10003bbb:	01 ca                	add    edx,ecx
10003bbd:	88 02                	mov    BYTE PTR [edx],al
10003bbf:	ff 45 e4             	inc    DWORD PTR [ebp-0x1c]
10003bc2:	83 ec 0c             	sub    esp,0xc
10003bc5:	8d 85 48 ff ff ff    	lea    eax,[ebp-0xb8]
10003bcb:	50                   	push   eax
10003bcc:	e8 fc ff ff ff       	call   10003bcd <firstRun(bool)+0x122e>	10003bcd: R_386_PC32	strlen
10003bd1:	83 c4 10             	add    esp,0x10
10003bd4:	89 c2                	mov    edx,eax
10003bd6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003bd9:	39 c2                	cmp    edx,eax
10003bdb:	77 07                	ja     10003be4 <firstRun(bool)+0x1245>
10003bdd:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10003be4:	8d 95 48 ff ff ff    	lea    edx,[ebp-0xb8]
10003bea:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003bed:	01 d0                	add    eax,edx
10003bef:	8a 00                	mov    al,BYTE PTR [eax]
10003bf1:	3c 20                	cmp    al,0x20
10003bf3:	74 ca                	je     10003bbf <firstRun(bool)+0x1220>
10003bf5:	8d 95 48 ff ff ff    	lea    edx,[ebp-0xb8]
10003bfb:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003bfe:	01 d0                	add    eax,edx
10003c00:	8a 00                	mov    al,BYTE PTR [eax]
10003c02:	3c 2f                	cmp    al,0x2f
10003c04:	74 b9                	je     10003bbf <firstRun(bool)+0x1220>
10003c06:	8d 95 48 ff ff ff    	lea    edx,[ebp-0xb8]
10003c0c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003c0f:	01 d0                	add    eax,edx
10003c11:	8a 00                	mov    al,BYTE PTR [eax]
10003c13:	3c 3a                	cmp    al,0x3a
10003c15:	0f 85 5d 02 00 00    	jne    10003e78 <firstRun(bool)+0x14d9>
10003c1b:	eb a2                	jmp    10003bbf <firstRun(bool)+0x1220>
10003c1d:	a0 00 00 00 00       	mov    al,ds:0x0	10003c1e: R_386_32	installKey
10003c22:	3c 0a                	cmp    al,0xa
10003c24:	0f 94 c0             	sete   al
10003c27:	84 c0                	test   al,al
10003c29:	0f 84 37 02 00 00    	je     10003e66 <firstRun(bool)+0x14c7>
10003c2f:	8a 85 48 ff ff ff    	mov    al,BYTE PTR [ebp-0xb8]
10003c35:	0f be c0             	movsx  eax,al
10003c38:	8d 50 d0             	lea    edx,[eax-0x30]
10003c3b:	89 d0                	mov    eax,edx
10003c3d:	c1 e0 02             	shl    eax,0x2
10003c40:	01 d0                	add    eax,edx
10003c42:	01 c0                	add    eax,eax
10003c44:	89 c2                	mov    edx,eax
10003c46:	8a 85 49 ff ff ff    	mov    al,BYTE PTR [ebp-0xb7]
10003c4c:	0f be c0             	movsx  eax,al
10003c4f:	83 e8 30             	sub    eax,0x30
10003c52:	01 d0                	add    eax,edx
10003c54:	89 45 b0             	mov    DWORD PTR [ebp-0x50],eax
10003c57:	8a 85 4b ff ff ff    	mov    al,BYTE PTR [ebp-0xb5]
10003c5d:	0f be c0             	movsx  eax,al
10003c60:	8d 50 d0             	lea    edx,[eax-0x30]
10003c63:	89 d0                	mov    eax,edx
10003c65:	c1 e0 02             	shl    eax,0x2
10003c68:	01 d0                	add    eax,edx
10003c6a:	01 c0                	add    eax,eax
10003c6c:	89 c2                	mov    edx,eax
10003c6e:	8a 85 4c ff ff ff    	mov    al,BYTE PTR [ebp-0xb4]
10003c74:	0f be c0             	movsx  eax,al
10003c77:	83 e8 30             	sub    eax,0x30
10003c7a:	01 d0                	add    eax,edx
10003c7c:	89 45 ac             	mov    DWORD PTR [ebp-0x54],eax
10003c7f:	8a 85 4e ff ff ff    	mov    al,BYTE PTR [ebp-0xb2]
10003c85:	0f be c0             	movsx  eax,al
10003c88:	8d 50 d0             	lea    edx,[eax-0x30]
10003c8b:	89 d0                	mov    eax,edx
10003c8d:	c1 e0 02             	shl    eax,0x2
10003c90:	01 d0                	add    eax,edx
10003c92:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003c99:	01 d0                	add    eax,edx
10003c9b:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003ca2:	01 d0                	add    eax,edx
10003ca4:	c1 e0 03             	shl    eax,0x3
10003ca7:	89 c1                	mov    ecx,eax
10003ca9:	8a 85 4f ff ff ff    	mov    al,BYTE PTR [ebp-0xb1]
10003caf:	0f be c0             	movsx  eax,al
10003cb2:	8d 50 d0             	lea    edx,[eax-0x30]
10003cb5:	89 d0                	mov    eax,edx
10003cb7:	c1 e0 02             	shl    eax,0x2
10003cba:	01 d0                	add    eax,edx
10003cbc:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003cc3:	01 d0                	add    eax,edx
10003cc5:	c1 e0 02             	shl    eax,0x2
10003cc8:	01 c1                	add    ecx,eax
10003cca:	8a 85 50 ff ff ff    	mov    al,BYTE PTR [ebp-0xb0]
10003cd0:	0f be c0             	movsx  eax,al
10003cd3:	8d 50 d0             	lea    edx,[eax-0x30]
10003cd6:	89 d0                	mov    eax,edx
10003cd8:	c1 e0 02             	shl    eax,0x2
10003cdb:	01 d0                	add    eax,edx
10003cdd:	01 c0                	add    eax,eax
10003cdf:	8d 14 01             	lea    edx,[ecx+eax*1]
10003ce2:	8a 85 51 ff ff ff    	mov    al,BYTE PTR [ebp-0xaf]
10003ce8:	0f be c0             	movsx  eax,al
10003ceb:	83 e8 30             	sub    eax,0x30
10003cee:	01 d0                	add    eax,edx
10003cf0:	89 45 a8             	mov    DWORD PTR [ebp-0x58],eax
10003cf3:	8a 85 53 ff ff ff    	mov    al,BYTE PTR [ebp-0xad]
10003cf9:	0f be c0             	movsx  eax,al
10003cfc:	8d 50 d0             	lea    edx,[eax-0x30]
10003cff:	89 d0                	mov    eax,edx
10003d01:	c1 e0 02             	shl    eax,0x2
10003d04:	01 d0                	add    eax,edx
10003d06:	01 c0                	add    eax,eax
10003d08:	89 c2                	mov    edx,eax
10003d0a:	8a 85 54 ff ff ff    	mov    al,BYTE PTR [ebp-0xac]
10003d10:	0f be c0             	movsx  eax,al
10003d13:	83 e8 30             	sub    eax,0x30
10003d16:	01 d0                	add    eax,edx
10003d18:	89 45 a4             	mov    DWORD PTR [ebp-0x5c],eax
10003d1b:	8a 85 56 ff ff ff    	mov    al,BYTE PTR [ebp-0xaa]
10003d21:	0f be c0             	movsx  eax,al
10003d24:	8d 50 d0             	lea    edx,[eax-0x30]
10003d27:	89 d0                	mov    eax,edx
10003d29:	c1 e0 02             	shl    eax,0x2
10003d2c:	01 d0                	add    eax,edx
10003d2e:	01 c0                	add    eax,eax
10003d30:	89 c2                	mov    edx,eax
10003d32:	8a 85 57 ff ff ff    	mov    al,BYTE PTR [ebp-0xa9]
10003d38:	0f be c0             	movsx  eax,al
10003d3b:	83 e8 30             	sub    eax,0x30
10003d3e:	01 d0                	add    eax,edx
10003d40:	89 45 a0             	mov    DWORD PTR [ebp-0x60],eax
10003d43:	8a 85 59 ff ff ff    	mov    al,BYTE PTR [ebp-0xa7]
10003d49:	0f be c0             	movsx  eax,al
10003d4c:	8d 50 d0             	lea    edx,[eax-0x30]
10003d4f:	89 d0                	mov    eax,edx
10003d51:	c1 e0 02             	shl    eax,0x2
10003d54:	01 d0                	add    eax,edx
10003d56:	01 c0                	add    eax,eax
10003d58:	89 c2                	mov    edx,eax
10003d5a:	8a 85 5a ff ff ff    	mov    al,BYTE PTR [ebp-0xa6]
10003d60:	0f be c0             	movsx  eax,al
10003d63:	83 e8 30             	sub    eax,0x30
10003d66:	01 d0                	add    eax,edx
10003d68:	89 45 9c             	mov    DWORD PTR [ebp-0x64],eax
10003d6b:	8b 45 a8             	mov    eax,DWORD PTR [ebp-0x58]
10003d6e:	83 e0 03             	and    eax,0x3
10003d71:	85 c0                	test   eax,eax
10003d73:	75 1f                	jne    10003d94 <firstRun(bool)+0x13f5>
10003d75:	8b 45 a8             	mov    eax,DWORD PTR [ebp-0x58]
10003d78:	b9 19 00 00 00       	mov    ecx,0x19
10003d7d:	99                   	cdq    
10003d7e:	f7 f9                	idiv   ecx
10003d80:	89 d0                	mov    eax,edx
10003d82:	85 c0                	test   eax,eax
10003d84:	75 0a                	jne    10003d90 <firstRun(bool)+0x13f1>
10003d86:	8b 45 a8             	mov    eax,DWORD PTR [ebp-0x58]
10003d89:	83 e0 0f             	and    eax,0xf
10003d8c:	85 c0                	test   eax,eax
10003d8e:	75 04                	jne    10003d94 <firstRun(bool)+0x13f5>
10003d90:	b0 01                	mov    al,0x1
10003d92:	eb 02                	jmp    10003d96 <firstRun(bool)+0x13f7>
10003d94:	b0 00                	mov    al,0x0
10003d96:	88 45 9b             	mov    BYTE PTR [ebp-0x65],al
10003d99:	83 7d b0 1f          	cmp    DWORD PTR [ebp-0x50],0x1f
10003d9d:	7e 0c                	jle    10003dab <firstRun(bool)+0x140c>
10003d9f:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10003da6:	e9 cd 00 00 00       	jmp    10003e78 <firstRun(bool)+0x14d9>
10003dab:	83 7d b0 1e          	cmp    DWORD PTR [ebp-0x50],0x1e
10003daf:	7e 2a                	jle    10003ddb <firstRun(bool)+0x143c>
10003db1:	83 7d ac 02          	cmp    DWORD PTR [ebp-0x54],0x2
10003db5:	74 18                	je     10003dcf <firstRun(bool)+0x1430>
10003db7:	83 7d ac 04          	cmp    DWORD PTR [ebp-0x54],0x4
10003dbb:	74 12                	je     10003dcf <firstRun(bool)+0x1430>
10003dbd:	83 7d ac 06          	cmp    DWORD PTR [ebp-0x54],0x6
10003dc1:	74 0c                	je     10003dcf <firstRun(bool)+0x1430>
10003dc3:	83 7d ac 09          	cmp    DWORD PTR [ebp-0x54],0x9
10003dc7:	74 06                	je     10003dcf <firstRun(bool)+0x1430>
10003dc9:	83 7d ac 0b          	cmp    DWORD PTR [ebp-0x54],0xb
10003dcd:	75 0c                	jne    10003ddb <firstRun(bool)+0x143c>
10003dcf:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10003dd6:	e9 9d 00 00 00       	jmp    10003e78 <firstRun(bool)+0x14d9>
10003ddb:	83 7d b0 1d          	cmp    DWORD PTR [ebp-0x50],0x1d
10003ddf:	75 19                	jne    10003dfa <firstRun(bool)+0x145b>
10003de1:	83 7d ac 02          	cmp    DWORD PTR [ebp-0x54],0x2
10003de5:	75 13                	jne    10003dfa <firstRun(bool)+0x145b>
10003de7:	8a 45 9b             	mov    al,BYTE PTR [ebp-0x65]
10003dea:	83 f0 01             	xor    eax,0x1
10003ded:	84 c0                	test   al,al
10003def:	74 09                	je     10003dfa <firstRun(bool)+0x145b>
10003df1:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10003df8:	eb 7e                	jmp    10003e78 <firstRun(bool)+0x14d9>
10003dfa:	83 7d b0 00          	cmp    DWORD PTR [ebp-0x50],0x0
10003dfe:	75 09                	jne    10003e09 <firstRun(bool)+0x146a>
10003e00:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10003e07:	eb 6f                	jmp    10003e78 <firstRun(bool)+0x14d9>
10003e09:	83 7d ac 0c          	cmp    DWORD PTR [ebp-0x54],0xc
10003e0d:	7f 06                	jg     10003e15 <firstRun(bool)+0x1476>
10003e0f:	83 7d ac 00          	cmp    DWORD PTR [ebp-0x54],0x0
10003e13:	75 09                	jne    10003e1e <firstRun(bool)+0x147f>
10003e15:	c7 45 e4 03 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x3
10003e1c:	eb 5a                	jmp    10003e78 <firstRun(bool)+0x14d9>
10003e1e:	81 7d a8 b7 0b 00 00 	cmp    DWORD PTR [ebp-0x58],0xbb7
10003e25:	7f 09                	jg     10003e30 <firstRun(bool)+0x1491>
10003e27:	81 7d a8 b1 07 00 00 	cmp    DWORD PTR [ebp-0x58],0x7b1
10003e2e:	7f 09                	jg     10003e39 <firstRun(bool)+0x149a>
10003e30:	c7 45 e4 06 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x6
10003e37:	eb 3f                	jmp    10003e78 <firstRun(bool)+0x14d9>
10003e39:	83 7d a4 17          	cmp    DWORD PTR [ebp-0x5c],0x17
10003e3d:	7e 09                	jle    10003e48 <firstRun(bool)+0x14a9>
10003e3f:	c7 45 e4 0b 00 00 00 	mov    DWORD PTR [ebp-0x1c],0xb
10003e46:	eb 30                	jmp    10003e78 <firstRun(bool)+0x14d9>
10003e48:	83 7d a0 3b          	cmp    DWORD PTR [ebp-0x60],0x3b
10003e4c:	7e 09                	jle    10003e57 <firstRun(bool)+0x14b8>
10003e4e:	c7 45 e4 0e 00 00 00 	mov    DWORD PTR [ebp-0x1c],0xe
10003e55:	eb 21                	jmp    10003e78 <firstRun(bool)+0x14d9>
10003e57:	83 7d 9c 3b          	cmp    DWORD PTR [ebp-0x64],0x3b
10003e5b:	7e 37                	jle    10003e94 <firstRun(bool)+0x14f5>
10003e5d:	c7 45 e4 11 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x11
10003e64:	eb 12                	jmp    10003e78 <firstRun(bool)+0x14d9>
10003e66:	a0 00 00 00 00       	mov    al,ds:0x0	10003e67: R_386_32	installKey
10003e6b:	3c 1b                	cmp    al,0x1b
10003e6d:	0f 94 c0             	sete   al
10003e70:	84 c0                	test   al,al
10003e72:	0f 85 46 ec ff ff    	jne    10002abe <firstRun(bool)+0x11f>
10003e78:	83 ec 0c             	sub    esp,0xc
10003e7b:	68 4c 04 00 00       	push   0x44c
10003e80:	e8 fc ff ff ff       	call   10003e81 <firstRun(bool)+0x14e2>	10003e81: R_386_PC32	milliTenthSleep(unsigned int)
10003e85:	83 c4 10             	add    esp,0x10
10003e88:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10003e8a: R_386_32	installKey
10003e8f:	e9 4b f8 ff ff       	jmp    100036df <firstRun(bool)+0xd40>
10003e94:	90                   	nop
10003e95:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10003e97: R_386_32	installKey
10003e9c:	83 ec 0c             	sub    esp,0xc
10003e9f:	68 a0 0f 00 00       	push   0xfa0
10003ea4:	e8 fc ff ff ff       	call   10003ea5 <firstRun(bool)+0x1506>	10003ea5: R_386_PC32	milliTenthSleep(unsigned int)
10003ea9:	83 c4 10             	add    esp,0x10
10003eac:	eb 01                	jmp    10003eaf <firstRun(bool)+0x1510>
10003eae:	90                   	nop
10003eaf:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10003eb1: R_386_32	installKey
10003eb6:	e8 fc ff ff ff       	call   10003eb7 <firstRun(bool)+0x1518>	10003eb7: R_386_PC32	drawBootScreen()
10003ebb:	83 ec 0c             	sub    esp,0xc
10003ebe:	68 a5 bc 00 10       	push   0x1000bca5	10003ebf: R_386_32	.text
10003ec3:	6a 14                	push   0x14
10003ec5:	6a 3c                	push   0x3c
10003ec7:	6a 01                	push   0x1
10003ec9:	6a 12                	push   0x12
10003ecb:	e8 fc ff ff ff       	call   10003ecc <firstRun(bool)+0x152d>	10003ecc: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10003ed0:	83 c4 20             	add    esp,0x20
10003ed3:	a1 00 00 00 00       	mov    eax,ds:0x0	10003ed4: R_386_32	term
10003ed8:	83 ec 04             	sub    esp,0x4
10003edb:	6a 04                	push   0x4
10003edd:	6a 14                	push   0x14
10003edf:	50                   	push   eax
10003ee0:	e8 fc ff ff ff       	call   10003ee1 <firstRun(bool)+0x1542>	10003ee1: R_386_PC32	VgaText::setCursor(int, int)
10003ee5:	83 c4 10             	add    esp,0x10
10003ee8:	a1 00 00 00 00       	mov    eax,ds:0x0	10003ee9: R_386_32	term
10003eed:	83 ec 08             	sub    esp,0x8
10003ef0:	68 30 bd 00 10       	push   0x1000bd30	10003ef1: R_386_32	.text
10003ef5:	50                   	push   eax
10003ef6:	e8 fc ff ff ff       	call   10003ef7 <firstRun(bool)+0x1558>	10003ef7: R_386_PC32	VgaText::puts(char const*)
10003efb:	83 c4 10             	add    esp,0x10
10003efe:	a1 00 00 00 00       	mov    eax,ds:0x0	10003eff: R_386_32	term
10003f03:	83 ec 04             	sub    esp,0x4
10003f06:	6a 18                	push   0x18
10003f08:	6a 11                	push   0x11
10003f0a:	50                   	push   eax
10003f0b:	e8 fc ff ff ff       	call   10003f0c <firstRun(bool)+0x156d>	10003f0c: R_386_PC32	VgaText::setCursor(int, int)
10003f10:	83 c4 10             	add    esp,0x10
10003f13:	a1 00 00 00 00       	mov    eax,ds:0x0	10003f14: R_386_32	term
10003f18:	6a 0b                	push   0xb
10003f1a:	6a 03                	push   0x3
10003f1c:	68 1a bd 00 10       	push   0x1000bd1a	10003f1d: R_386_32	.text
10003f21:	50                   	push   eax
10003f22:	e8 fc ff ff ff       	call   10003f23 <firstRun(bool)+0x1584>	10003f23: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10003f27:	83 c4 10             	add    esp,0x10
10003f2a:	e8 fc ff ff ff       	call   10003f2b <firstRun(bool)+0x158c>	10003f2b: R_386_PC32	loadTimezoneStrings()
10003f2f:	89 45 94             	mov    DWORD PTR [ebp-0x6c],eax
10003f32:	b8 d2 00 00 00       	mov    eax,0xd2
10003f37:	99                   	cdq    
10003f38:	f7 7d 94             	idiv   DWORD PTR [ebp-0x6c]
10003f3b:	89 45 90             	mov    DWORD PTR [ebp-0x70],eax
10003f3e:	c7 45 cc 00 00 00 00 	mov    DWORD PTR [ebp-0x34],0x0
10003f45:	83 7d cc 0d          	cmp    DWORD PTR [ebp-0x34],0xd
10003f49:	7f 32                	jg     10003f7d <firstRun(bool)+0x15de>
10003f4b:	a1 00 00 00 00       	mov    eax,ds:0x0	10003f4c: R_386_32	term
10003f50:	8b 55 cc             	mov    edx,DWORD PTR [ebp-0x34]
10003f53:	83 c2 07             	add    edx,0x7
10003f56:	83 ec 04             	sub    esp,0x4
10003f59:	52                   	push   edx
10003f5a:	6a 4b                	push   0x4b
10003f5c:	50                   	push   eax
10003f5d:	e8 fc ff ff ff       	call   10003f5e <firstRun(bool)+0x15bf>	10003f5e: R_386_PC32	VgaText::setCursor(int, int)
10003f62:	83 c4 10             	add    esp,0x10
10003f65:	a1 00 00 00 00       	mov    eax,ds:0x0	10003f66: R_386_32	term
10003f6a:	83 ec 08             	sub    esp,0x8
10003f6d:	6a 20                	push   0x20
10003f6f:	50                   	push   eax
10003f70:	e8 fc ff ff ff       	call   10003f71 <firstRun(bool)+0x15d2>	10003f71: R_386_PC32	VgaText::putchar(char)
10003f75:	83 c4 10             	add    esp,0x10
10003f78:	ff 45 cc             	inc    DWORD PTR [ebp-0x34]
10003f7b:	eb c8                	jmp    10003f45 <firstRun(bool)+0x15a6>
10003f7d:	c7 45 c8 00 00 00 00 	mov    DWORD PTR [ebp-0x38],0x0
10003f84:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10003f87:	3b 45 90             	cmp    eax,DWORD PTR [ebp-0x70]
10003f8a:	7d 48                	jge    10003fd4 <firstRun(bool)+0x1635>
10003f8c:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	10003f8e: R_386_32	term
10003f92:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10003f95:	8d 58 07             	lea    ebx,[eax+0x7]
10003f98:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10003f9b:	89 d0                	mov    eax,edx
10003f9d:	01 c0                	add    eax,eax
10003f9f:	01 d0                	add    eax,edx
10003fa1:	01 c0                	add    eax,eax
10003fa3:	01 d0                	add    eax,edx
10003fa5:	01 c0                	add    eax,eax
10003fa7:	99                   	cdq    
10003fa8:	f7 7d 94             	idiv   DWORD PTR [ebp-0x6c]
10003fab:	01 d8                	add    eax,ebx
10003fad:	83 ec 04             	sub    esp,0x4
10003fb0:	50                   	push   eax
10003fb1:	6a 4b                	push   0x4b
10003fb3:	51                   	push   ecx
10003fb4:	e8 fc ff ff ff       	call   10003fb5 <firstRun(bool)+0x1616>	10003fb5: R_386_PC32	VgaText::setCursor(int, int)
10003fb9:	83 c4 10             	add    esp,0x10
10003fbc:	a1 00 00 00 00       	mov    eax,ds:0x0	10003fbd: R_386_32	term
10003fc1:	83 ec 08             	sub    esp,0x8
10003fc4:	6a db                	push   0xffffffdb
10003fc6:	50                   	push   eax
10003fc7:	e8 fc ff ff ff       	call   10003fc8 <firstRun(bool)+0x1629>	10003fc8: R_386_PC32	VgaText::putchar(char)
10003fcc:	83 c4 10             	add    esp,0x10
10003fcf:	ff 45 c8             	inc    DWORD PTR [ebp-0x38]
10003fd2:	eb b0                	jmp    10003f84 <firstRun(bool)+0x15e5>
10003fd4:	a1 00 00 00 00       	mov    eax,ds:0x0	10003fd5: R_386_32	term
10003fd9:	83 ec 04             	sub    esp,0x4
10003fdc:	6a 06                	push   0x6
10003fde:	6a 4b                	push   0x4b
10003fe0:	50                   	push   eax
10003fe1:	e8 fc ff ff ff       	call   10003fe2 <firstRun(bool)+0x1643>	10003fe2: R_386_PC32	VgaText::setCursor(int, int)
10003fe6:	83 c4 10             	add    esp,0x10
10003fe9:	a1 00 00 00 00       	mov    eax,ds:0x0	10003fea: R_386_32	term
10003fee:	83 ec 08             	sub    esp,0x8
10003ff1:	6a 1e                	push   0x1e
10003ff3:	50                   	push   eax
10003ff4:	e8 fc ff ff ff       	call   10003ff5 <firstRun(bool)+0x1656>	10003ff5: R_386_PC32	VgaText::putchar(char)
10003ff9:	83 c4 10             	add    esp,0x10
10003ffc:	a1 00 00 00 00       	mov    eax,ds:0x0	10003ffd: R_386_32	term
10004001:	83 ec 04             	sub    esp,0x4
10004004:	6a 14                	push   0x14
10004006:	6a 4b                	push   0x4b
10004008:	50                   	push   eax
10004009:	e8 fc ff ff ff       	call   1000400a <firstRun(bool)+0x166b>	1000400a: R_386_PC32	VgaText::setCursor(int, int)
1000400e:	83 c4 10             	add    esp,0x10
10004011:	a1 00 00 00 00       	mov    eax,ds:0x0	10004012: R_386_32	term
10004016:	83 ec 08             	sub    esp,0x8
10004019:	6a 1f                	push   0x1f
1000401b:	50                   	push   eax
1000401c:	e8 fc ff ff ff       	call   1000401d <firstRun(bool)+0x167e>	1000401d: R_386_PC32	VgaText::putchar(char)
10004021:	83 c4 10             	add    esp,0x10
10004024:	c7 45 c4 00 00 00 00 	mov    DWORD PTR [ebp-0x3c],0x0
1000402b:	83 7d c4 0e          	cmp    DWORD PTR [ebp-0x3c],0xe
1000402f:	7f 7e                	jg     100040af <firstRun(bool)+0x1710>
10004031:	a1 00 00 00 00       	mov    eax,ds:0x0	10004032: R_386_32	term
10004036:	8b 55 c4             	mov    edx,DWORD PTR [ebp-0x3c]
10004039:	83 c2 06             	add    edx,0x6
1000403c:	83 ec 04             	sub    esp,0x4
1000403f:	52                   	push   edx
10004040:	6a 14                	push   0x14
10004042:	50                   	push   eax
10004043:	e8 fc ff ff ff       	call   10004044 <firstRun(bool)+0x16a5>	10004044: R_386_PC32	VgaText::setCursor(int, int)
10004048:	83 c4 10             	add    esp,0x10
1000404b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000404c: R_386_32	term
10004050:	8b 4d dc             	mov    ecx,DWORD PTR [ebp-0x24]
10004053:	8b 55 c4             	mov    edx,DWORD PTR [ebp-0x3c]
10004056:	01 d1                	add    ecx,edx
10004058:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	1000405a: R_386_32	tzsel
1000405e:	39 d1                	cmp    ecx,edx
10004060:	75 07                	jne    10004069 <firstRun(bool)+0x16ca>
10004062:	bb 00 00 00 00       	mov    ebx,0x0
10004067:	eb 05                	jmp    1000406e <firstRun(bool)+0x16cf>
10004069:	bb 0f 00 00 00       	mov    ebx,0xf
1000406e:	8b 4d dc             	mov    ecx,DWORD PTR [ebp-0x24]
10004071:	8b 55 c4             	mov    edx,DWORD PTR [ebp-0x3c]
10004074:	01 d1                	add    ecx,edx
10004076:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10004078: R_386_32	tzsel
1000407c:	39 d1                	cmp    ecx,edx
1000407e:	75 07                	jne    10004087 <firstRun(bool)+0x16e8>
10004080:	b9 0f 00 00 00       	mov    ecx,0xf
10004085:	eb 05                	jmp    1000408c <firstRun(bool)+0x16ed>
10004087:	b9 00 00 00 00       	mov    ecx,0x0
1000408c:	8b 75 dc             	mov    esi,DWORD PTR [ebp-0x24]
1000408f:	8b 55 c4             	mov    edx,DWORD PTR [ebp-0x3c]
10004092:	01 f2                	add    edx,esi
10004094:	8b 14 95 00 00 00 00 	mov    edx,DWORD PTR [edx*4+0x0]	10004097: R_386_32	timezoneStrings
1000409b:	53                   	push   ebx
1000409c:	51                   	push   ecx
1000409d:	52                   	push   edx
1000409e:	50                   	push   eax
1000409f:	e8 fc ff ff ff       	call   100040a0 <firstRun(bool)+0x1701>	100040a0: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
100040a4:	83 c4 10             	add    esp,0x10
100040a7:	ff 45 c4             	inc    DWORD PTR [ebp-0x3c]
100040aa:	e9 7c ff ff ff       	jmp    1000402b <firstRun(bool)+0x168c>
100040af:	a0 00 00 00 00       	mov    al,ds:0x0	100040b0: R_386_32	installKey
100040b4:	84 c0                	test   al,al
100040b6:	0f 94 c0             	sete   al
100040b9:	84 c0                	test   al,al
100040bb:	74 02                	je     100040bf <firstRun(bool)+0x1720>
100040bd:	eb f0                	jmp    100040af <firstRun(bool)+0x1710>
100040bf:	a1 00 00 00 00       	mov    eax,ds:0x0	100040c0: R_386_32	term
100040c4:	05 82 00 00 00       	add    eax,0x82
100040c9:	83 ec 04             	sub    esp,0x4
100040cc:	6a 04                	push   0x4
100040ce:	6a 00                	push   0x0
100040d0:	50                   	push   eax
100040d1:	e8 fc ff ff ff       	call   100040d2 <firstRun(bool)+0x1733>	100040d2: R_386_PC32	memset
100040d6:	83 c4 10             	add    esp,0x10
100040d9:	a1 00 00 00 00       	mov    eax,ds:0x0	100040da: R_386_32	term
100040de:	05 02 01 00 00       	add    eax,0x102
100040e3:	83 ec 04             	sub    esp,0x4
100040e6:	6a 04                	push   0x4
100040e8:	6a 00                	push   0x0
100040ea:	50                   	push   eax
100040eb:	e8 fc ff ff ff       	call   100040ec <firstRun(bool)+0x174d>	100040ec: R_386_PC32	memset
100040f0:	83 c4 10             	add    esp,0x10
100040f3:	a0 00 00 00 00       	mov    al,ds:0x0	100040f4: R_386_32	installKey
100040f8:	3c 01                	cmp    al,0x1
100040fa:	0f 94 c0             	sete   al
100040fd:	84 c0                	test   al,al
100040ff:	74 41                	je     10004142 <firstRun(bool)+0x17a3>
10004101:	a1 00 00 00 00       	mov    eax,ds:0x0	10004102: R_386_32	tzsel
10004106:	48                   	dec    eax
10004107:	a3 00 00 00 00       	mov    ds:0x0,eax	10004108: R_386_32	tzsel
1000410c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000410d: R_386_32	tzsel
10004111:	2b 45 dc             	sub    eax,DWORD PTR [ebp-0x24]
10004114:	83 f8 04             	cmp    eax,0x4
10004117:	7f 03                	jg     1000411c <firstRun(bool)+0x177d>
10004119:	ff 4d dc             	dec    DWORD PTR [ebp-0x24]
1000411c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000411d: R_386_32	tzsel
10004121:	85 c0                	test   eax,eax
10004123:	79 0a                	jns    1000412f <firstRun(bool)+0x1790>
10004125:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10004127: R_386_32	tzsel
1000412f:	83 7d dc 00          	cmp    DWORD PTR [ebp-0x24],0x0
10004133:	0f 89 82 00 00 00    	jns    100041bb <firstRun(bool)+0x181c>
10004139:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [ebp-0x24],0x0
10004140:	eb 79                	jmp    100041bb <firstRun(bool)+0x181c>
10004142:	a0 00 00 00 00       	mov    al,ds:0x0	10004143: R_386_32	installKey
10004147:	3c 02                	cmp    al,0x2
10004149:	0f 94 c0             	sete   al
1000414c:	84 c0                	test   al,al
1000414e:	74 4b                	je     1000419b <firstRun(bool)+0x17fc>
10004150:	a1 00 00 00 00       	mov    eax,ds:0x0	10004151: R_386_32	tzsel
10004155:	40                   	inc    eax
10004156:	a3 00 00 00 00       	mov    ds:0x0,eax	10004157: R_386_32	tzsel
1000415b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000415c: R_386_32	tzsel
10004160:	2b 45 dc             	sub    eax,DWORD PTR [ebp-0x24]
10004163:	83 f8 0a             	cmp    eax,0xa
10004166:	7e 03                	jle    1000416b <firstRun(bool)+0x17cc>
10004168:	ff 45 dc             	inc    DWORD PTR [ebp-0x24]
1000416b:	8b 45 94             	mov    eax,DWORD PTR [ebp-0x6c]
1000416e:	8d 50 ff             	lea    edx,[eax-0x1]
10004171:	a1 00 00 00 00       	mov    eax,ds:0x0	10004172: R_386_32	tzsel
10004176:	39 c2                	cmp    edx,eax
10004178:	7f 0b                	jg     10004185 <firstRun(bool)+0x17e6>
1000417a:	8b 45 94             	mov    eax,DWORD PTR [ebp-0x6c]
1000417d:	83 e8 02             	sub    eax,0x2
10004180:	a3 00 00 00 00       	mov    ds:0x0,eax	10004181: R_386_32	tzsel
10004185:	8b 45 94             	mov    eax,DWORD PTR [ebp-0x6c]
10004188:	83 e8 0f             	sub    eax,0xf
1000418b:	39 45 dc             	cmp    DWORD PTR [ebp-0x24],eax
1000418e:	7c 2b                	jl     100041bb <firstRun(bool)+0x181c>
10004190:	8b 45 94             	mov    eax,DWORD PTR [ebp-0x6c]
10004193:	83 e8 10             	sub    eax,0x10
10004196:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10004199:	eb 20                	jmp    100041bb <firstRun(bool)+0x181c>
1000419b:	a0 00 00 00 00       	mov    al,ds:0x0	1000419c: R_386_32	installKey
100041a0:	3c 0a                	cmp    al,0xa
100041a2:	0f 94 c0             	sete   al
100041a5:	84 c0                	test   al,al
100041a7:	75 2e                	jne    100041d7 <firstRun(bool)+0x1838>
100041a9:	a0 00 00 00 00       	mov    al,ds:0x0	100041aa: R_386_32	installKey
100041ae:	3c 1b                	cmp    al,0x1b
100041b0:	0f 94 c0             	sete   al
100041b3:	84 c0                	test   al,al
100041b5:	0f 85 28 f1 ff ff    	jne    100032e3 <firstRun(bool)+0x944>
100041bb:	83 ec 0c             	sub    esp,0xc
100041be:	68 f4 01 00 00       	push   0x1f4
100041c3:	e8 fc ff ff ff       	call   100041c4 <firstRun(bool)+0x1825>	100041c4: R_386_PC32	milliTenthSleep(unsigned int)
100041c8:	83 c4 10             	add    esp,0x10
100041cb:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100041cd: R_386_32	installKey
100041d2:	e9 67 fd ff ff       	jmp    10003f3e <firstRun(bool)+0x159f>
100041d7:	90                   	nop
100041d8:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100041da: R_386_32	installKey
100041df:	83 ec 0c             	sub    esp,0xc
100041e2:	68 a0 0f 00 00       	push   0xfa0
100041e7:	e8 fc ff ff ff       	call   100041e8 <firstRun(bool)+0x1849>	100041e8: R_386_PC32	milliTenthSleep(unsigned int)
100041ec:	83 c4 10             	add    esp,0x10
100041ef:	eb 01                	jmp    100041f2 <firstRun(bool)+0x1853>
100041f1:	90                   	nop
100041f2:	e8 fc ff ff ff       	call   100041f3 <firstRun(bool)+0x1854>	100041f3: R_386_PC32	drawBootScreen()
100041f7:	83 ec 0c             	sub    esp,0xc
100041fa:	68 58 1b 00 00       	push   0x1b58
100041ff:	e8 fc ff ff ff       	call   10004200 <firstRun(bool)+0x1861>	10004200: R_386_PC32	milliTenthSleep(unsigned int)
10004204:	83 c4 10             	add    esp,0x10
10004207:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004209: R_386_32	installKey
1000420e:	e8 fc ff ff ff       	call   1000420f <firstRun(bool)+0x1870>	1000420f: R_386_PC32	drawBootScreen()
10004213:	83 ec 0c             	sub    esp,0xc
10004216:	68 62 bd 00 10       	push   0x1000bd62	10004217: R_386_32	.text
1000421b:	6a 10                	push   0x10
1000421d:	6a 37                	push   0x37
1000421f:	6a 03                	push   0x3
10004221:	6a 14                	push   0x14
10004223:	e8 fc ff ff ff       	call   10004224 <firstRun(bool)+0x1885>	10004224: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10004228:	83 c4 20             	add    esp,0x20
1000422b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000422c: R_386_32	term
10004230:	83 ec 04             	sub    esp,0x4
10004233:	6a 06                	push   0x6
10004235:	6a 16                	push   0x16
10004237:	50                   	push   eax
10004238:	e8 fc ff ff ff       	call   10004239 <firstRun(bool)+0x189a>	10004239: R_386_PC32	VgaText::setCursor(int, int)
1000423d:	83 c4 10             	add    esp,0x10
10004240:	a1 00 00 00 00       	mov    eax,ds:0x0	10004241: R_386_32	term
10004245:	83 ec 08             	sub    esp,0x8
10004248:	68 74 bd 00 10       	push   0x1000bd74	10004249: R_386_32	.text
1000424d:	50                   	push   eax
1000424e:	e8 fc ff ff ff       	call   1000424f <firstRun(bool)+0x18b0>	1000424f: R_386_PC32	VgaText::puts(char const*)
10004253:	83 c4 10             	add    esp,0x10
10004256:	a1 00 00 00 00       	mov    eax,ds:0x0	10004257: R_386_32	term
1000425b:	83 ec 04             	sub    esp,0x4
1000425e:	6a 07                	push   0x7
10004260:	6a 16                	push   0x16
10004262:	50                   	push   eax
10004263:	e8 fc ff ff ff       	call   10004264 <firstRun(bool)+0x18c5>	10004264: R_386_PC32	VgaText::setCursor(int, int)
10004268:	83 c4 10             	add    esp,0x10
1000426b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000426c: R_386_32	term
10004270:	83 ec 08             	sub    esp,0x8
10004273:	68 a8 bd 00 10       	push   0x1000bda8	10004274: R_386_32	.text
10004278:	50                   	push   eax
10004279:	e8 fc ff ff ff       	call   1000427a <firstRun(bool)+0x18db>	1000427a: R_386_PC32	VgaText::puts(char const*)
1000427e:	83 c4 10             	add    esp,0x10
10004281:	a1 00 00 00 00       	mov    eax,ds:0x0	10004282: R_386_32	term
10004286:	83 ec 04             	sub    esp,0x4
10004289:	6a 18                	push   0x18
1000428b:	6a 11                	push   0x11
1000428d:	50                   	push   eax
1000428e:	e8 fc ff ff ff       	call   1000428f <firstRun(bool)+0x18f0>	1000428f: R_386_PC32	VgaText::setCursor(int, int)
10004293:	83 c4 10             	add    esp,0x10
10004296:	a1 00 00 00 00       	mov    eax,ds:0x0	10004297: R_386_32	term
1000429b:	6a 0b                	push   0xb
1000429d:	6a 03                	push   0x3
1000429f:	68 1a bd 00 10       	push   0x1000bd1a	100042a0: R_386_32	.text
100042a4:	50                   	push   eax
100042a5:	e8 fc ff ff ff       	call   100042a6 <firstRun(bool)+0x1907>	100042a6: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
100042aa:	83 c4 10             	add    esp,0x10
100042ad:	c7 45 94 03 00 00 00 	mov    DWORD PTR [ebp-0x6c],0x3
100042b4:	8d 85 34 ff ff ff    	lea    eax,[ebp-0xcc]
100042ba:	bb 20 c0 00 10       	mov    ebx,0x1000c020	100042bb: R_386_32	.text
100042bf:	ba 03 00 00 00       	mov    edx,0x3
100042c4:	89 c7                	mov    edi,eax
100042c6:	89 de                	mov    esi,ebx
100042c8:	89 d1                	mov    ecx,edx
100042ca:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100042cc:	c7 45 c0 00 00 00 00 	mov    DWORD PTR [ebp-0x40],0x0
100042d3:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
100042d6:	3b 45 94             	cmp    eax,DWORD PTR [ebp-0x6c]
100042d9:	7d 68                	jge    10004343 <firstRun(bool)+0x19a4>
100042db:	a1 00 00 00 00       	mov    eax,ds:0x0	100042dc: R_386_32	term
100042e0:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
100042e3:	83 c2 09             	add    edx,0x9
100042e6:	83 ec 04             	sub    esp,0x4
100042e9:	52                   	push   edx
100042ea:	6a 16                	push   0x16
100042ec:	50                   	push   eax
100042ed:	e8 fc ff ff ff       	call   100042ee <firstRun(bool)+0x194f>	100042ee: R_386_PC32	VgaText::setCursor(int, int)
100042f2:	83 c4 10             	add    esp,0x10
100042f5:	a1 00 00 00 00       	mov    eax,ds:0x0	100042f6: R_386_32	term
100042fa:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100042fc: R_386_32	modesel
10004300:	39 55 c0             	cmp    DWORD PTR [ebp-0x40],edx
10004303:	75 07                	jne    1000430c <firstRun(bool)+0x196d>
10004305:	bb 00 00 00 00       	mov    ebx,0x0
1000430a:	eb 05                	jmp    10004311 <firstRun(bool)+0x1972>
1000430c:	bb 0f 00 00 00       	mov    ebx,0xf
10004311:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10004313: R_386_32	modesel
10004317:	39 55 c0             	cmp    DWORD PTR [ebp-0x40],edx
1000431a:	75 07                	jne    10004323 <firstRun(bool)+0x1984>
1000431c:	b9 0f 00 00 00       	mov    ecx,0xf
10004321:	eb 05                	jmp    10004328 <firstRun(bool)+0x1989>
10004323:	b9 00 00 00 00       	mov    ecx,0x0
10004328:	8b 55 c0             	mov    edx,DWORD PTR [ebp-0x40]
1000432b:	8b 94 95 34 ff ff ff 	mov    edx,DWORD PTR [ebp+edx*4-0xcc]
10004332:	53                   	push   ebx
10004333:	51                   	push   ecx
10004334:	52                   	push   edx
10004335:	50                   	push   eax
10004336:	e8 fc ff ff ff       	call   10004337 <firstRun(bool)+0x1998>	10004337: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
1000433b:	83 c4 10             	add    esp,0x10
1000433e:	ff 45 c0             	inc    DWORD PTR [ebp-0x40]
10004341:	eb 90                	jmp    100042d3 <firstRun(bool)+0x1934>
10004343:	a0 00 00 00 00       	mov    al,ds:0x0	10004344: R_386_32	installKey
10004348:	84 c0                	test   al,al
1000434a:	0f 94 c0             	sete   al
1000434d:	84 c0                	test   al,al
1000434f:	74 02                	je     10004353 <firstRun(bool)+0x19b4>
10004351:	eb f0                	jmp    10004343 <firstRun(bool)+0x19a4>
10004353:	a1 00 00 00 00       	mov    eax,ds:0x0	10004354: R_386_32	term
10004358:	05 82 00 00 00       	add    eax,0x82
1000435d:	83 ec 04             	sub    esp,0x4
10004360:	6a 04                	push   0x4
10004362:	6a 00                	push   0x0
10004364:	50                   	push   eax
10004365:	e8 fc ff ff ff       	call   10004366 <firstRun(bool)+0x19c7>	10004366: R_386_PC32	memset
1000436a:	83 c4 10             	add    esp,0x10
1000436d:	a1 00 00 00 00       	mov    eax,ds:0x0	1000436e: R_386_32	term
10004372:	05 02 01 00 00       	add    eax,0x102
10004377:	83 ec 04             	sub    esp,0x4
1000437a:	6a 04                	push   0x4
1000437c:	6a 00                	push   0x0
1000437e:	50                   	push   eax
1000437f:	e8 fc ff ff ff       	call   10004380 <firstRun(bool)+0x19e1>	10004380: R_386_PC32	memset
10004384:	83 c4 10             	add    esp,0x10
10004387:	a0 00 00 00 00       	mov    al,ds:0x0	10004388: R_386_32	installKey
1000438c:	3c 01                	cmp    al,0x1
1000438e:	0f 94 c0             	sete   al
10004391:	84 c0                	test   al,al
10004393:	74 20                	je     100043b5 <firstRun(bool)+0x1a16>
10004395:	a1 00 00 00 00       	mov    eax,ds:0x0	10004396: R_386_32	modesel
1000439a:	48                   	dec    eax
1000439b:	a3 00 00 00 00       	mov    ds:0x0,eax	1000439c: R_386_32	modesel
100043a0:	a1 00 00 00 00       	mov    eax,ds:0x0	100043a1: R_386_32	modesel
100043a5:	85 c0                	test   eax,eax
100043a7:	79 5a                	jns    10004403 <firstRun(bool)+0x1a64>
100043a9:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100043ab: R_386_32	modesel
100043b3:	eb 4e                	jmp    10004403 <firstRun(bool)+0x1a64>
100043b5:	a0 00 00 00 00       	mov    al,ds:0x0	100043b6: R_386_32	installKey
100043ba:	3c 02                	cmp    al,0x2
100043bc:	0f 94 c0             	sete   al
100043bf:	84 c0                	test   al,al
100043c1:	74 20                	je     100043e3 <firstRun(bool)+0x1a44>
100043c3:	a1 00 00 00 00       	mov    eax,ds:0x0	100043c4: R_386_32	modesel
100043c8:	40                   	inc    eax
100043c9:	a3 00 00 00 00       	mov    ds:0x0,eax	100043ca: R_386_32	modesel
100043ce:	a1 00 00 00 00       	mov    eax,ds:0x0	100043cf: R_386_32	modesel
100043d3:	39 45 94             	cmp    DWORD PTR [ebp-0x6c],eax
100043d6:	7f 2b                	jg     10004403 <firstRun(bool)+0x1a64>
100043d8:	8b 45 94             	mov    eax,DWORD PTR [ebp-0x6c]
100043db:	48                   	dec    eax
100043dc:	a3 00 00 00 00       	mov    ds:0x0,eax	100043dd: R_386_32	modesel
100043e1:	eb 20                	jmp    10004403 <firstRun(bool)+0x1a64>
100043e3:	a0 00 00 00 00       	mov    al,ds:0x0	100043e4: R_386_32	installKey
100043e8:	3c 0a                	cmp    al,0xa
100043ea:	0f 94 c0             	sete   al
100043ed:	84 c0                	test   al,al
100043ef:	75 2e                	jne    1000441f <firstRun(bool)+0x1a80>
100043f1:	a0 00 00 00 00       	mov    al,ds:0x0	100043f2: R_386_32	installKey
100043f6:	3c 1b                	cmp    al,0x1b
100043f8:	0f 94 c0             	sete   al
100043fb:	84 c0                	test   al,al
100043fd:	0f 85 ab fa ff ff    	jne    10003eae <firstRun(bool)+0x150f>
10004403:	83 ec 0c             	sub    esp,0xc
10004406:	68 f4 01 00 00       	push   0x1f4
1000440b:	e8 fc ff ff ff       	call   1000440c <firstRun(bool)+0x1a6d>	1000440c: R_386_PC32	milliTenthSleep(unsigned int)
10004410:	83 c4 10             	add    esp,0x10
10004413:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004415: R_386_32	installKey
1000441a:	e9 ad fe ff ff       	jmp    100042cc <firstRun(bool)+0x192d>
1000441f:	90                   	nop
10004420:	80 bd 14 ff ff ff 00 	cmp    BYTE PTR [ebp-0xec],0x0
10004427:	0f 84 ff 00 00 00    	je     1000452c <firstRun(bool)+0x1b8d>
1000442d:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	1000442f: R_386_32	showSidebar
10004434:	a1 00 00 00 00       	mov    eax,ds:0x0	10004435: R_386_32	term
10004439:	83 ec 0c             	sub    esp,0xc
1000443c:	50                   	push   eax
1000443d:	e8 fc ff ff ff       	call   1000443e <firstRun(bool)+0x1a9f>	1000443e: R_386_PC32	setActiveTerminal(VgaText*)
10004442:	83 c4 10             	add    esp,0x10
10004445:	e8 fc ff ff ff       	call   10004446 <firstRun(bool)+0x1aa7>	10004446: R_386_PC32	drawBootScreen()
1000444a:	83 ec 0c             	sub    esp,0xc
1000444d:	68 dd bd 00 10       	push   0x1000bddd	1000444e: R_386_32	.text
10004452:	6a 0d                	push   0xd
10004454:	6a 32                	push   0x32
10004456:	6a 05                	push   0x5
10004458:	6a 16                	push   0x16
1000445a:	e8 fc ff ff ff       	call   1000445b <firstRun(bool)+0x1abc>	1000445b: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
1000445f:	83 c4 20             	add    esp,0x20
10004462:	a1 00 00 00 00       	mov    eax,ds:0x0	10004463: R_386_32	term
10004467:	83 ec 04             	sub    esp,0x4
1000446a:	6a 08                	push   0x8
1000446c:	6a 18                	push   0x18
1000446e:	50                   	push   eax
1000446f:	e8 fc ff ff ff       	call   10004470 <firstRun(bool)+0x1ad1>	10004470: R_386_PC32	VgaText::setCursor(int, int)
10004474:	83 c4 10             	add    esp,0x10
10004477:	a1 00 00 00 00       	mov    eax,ds:0x0	10004478: R_386_32	term
1000447c:	83 ec 08             	sub    esp,0x8
1000447f:	68 f4 bd 00 10       	push   0x1000bdf4	10004480: R_386_32	.text
10004484:	50                   	push   eax
10004485:	e8 fc ff ff ff       	call   10004486 <firstRun(bool)+0x1ae7>	10004486: R_386_PC32	VgaText::puts(char const*)
1000448a:	83 c4 10             	add    esp,0x10
1000448d:	a1 00 00 00 00       	mov    eax,ds:0x0	1000448e: R_386_32	term
10004492:	83 ec 04             	sub    esp,0x4
10004495:	6a 0a                	push   0xa
10004497:	6a 18                	push   0x18
10004499:	50                   	push   eax
1000449a:	e8 fc ff ff ff       	call   1000449b <firstRun(bool)+0x1afc>	1000449b: R_386_PC32	VgaText::setCursor(int, int)
1000449f:	83 c4 10             	add    esp,0x10
100044a2:	a1 00 00 00 00       	mov    eax,ds:0x0	100044a3: R_386_32	term
100044a7:	83 ec 08             	sub    esp,0x8
100044aa:	68 1c be 00 10       	push   0x1000be1c	100044ab: R_386_32	.text
100044af:	50                   	push   eax
100044b0:	e8 fc ff ff ff       	call   100044b1 <firstRun(bool)+0x1b12>	100044b1: R_386_PC32	VgaText::puts(char const*)
100044b5:	83 c4 10             	add    esp,0x10
100044b8:	a1 00 00 00 00       	mov    eax,ds:0x0	100044b9: R_386_32	term
100044bd:	83 ec 04             	sub    esp,0x4
100044c0:	6a 0b                	push   0xb
100044c2:	6a 18                	push   0x18
100044c4:	50                   	push   eax
100044c5:	e8 fc ff ff ff       	call   100044c6 <firstRun(bool)+0x1b27>	100044c6: R_386_PC32	VgaText::setCursor(int, int)
100044ca:	83 c4 10             	add    esp,0x10
100044cd:	a1 00 00 00 00       	mov    eax,ds:0x0	100044ce: R_386_32	term
100044d2:	83 ec 08             	sub    esp,0x8
100044d5:	68 45 be 00 10       	push   0x1000be45	100044d6: R_386_32	.text
100044da:	50                   	push   eax
100044db:	e8 fc ff ff ff       	call   100044dc <firstRun(bool)+0x1b3d>	100044dc: R_386_PC32	VgaText::puts(char const*)
100044e0:	83 c4 10             	add    esp,0x10
100044e3:	a1 00 00 00 00       	mov    eax,ds:0x0	100044e4: R_386_32	term
100044e8:	83 ec 04             	sub    esp,0x4
100044eb:	6a 0e                	push   0xe
100044ed:	6a 18                	push   0x18
100044ef:	50                   	push   eax
100044f0:	e8 fc ff ff ff       	call   100044f1 <firstRun(bool)+0x1b52>	100044f1: R_386_PC32	VgaText::setCursor(int, int)
100044f5:	83 c4 10             	add    esp,0x10
100044f8:	a1 00 00 00 00       	mov    eax,ds:0x0	100044f9: R_386_32	term
100044fd:	83 ec 08             	sub    esp,0x8
10004500:	68 54 be 00 10       	push   0x1000be54	10004501: R_386_32	.text
10004505:	50                   	push   eax
10004506:	e8 fc ff ff ff       	call   10004507 <firstRun(bool)+0x1b68>	10004507: R_386_PC32	VgaText::puts(char const*)
1000450b:	83 c4 10             	add    esp,0x10
1000450e:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004510: R_386_32	installKey
10004515:	a0 00 00 00 00       	mov    al,ds:0x0	10004516: R_386_32	installKey
1000451a:	84 c0                	test   al,al
1000451c:	0f 94 c0             	sete   al
1000451f:	84 c0                	test   al,al
10004521:	74 02                	je     10004525 <firstRun(bool)+0x1b86>
10004523:	eb f0                	jmp    10004515 <firstRun(bool)+0x1b76>
10004525:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004527: R_386_32	installKey
1000452c:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	1000452e: R_386_32	installKey
10004533:	83 ec 0c             	sub    esp,0xc
10004536:	68 84 03 00 00       	push   0x384
1000453b:	e8 fc ff ff ff       	call   1000453c <firstRun(bool)+0x1b9d>	1000453c: R_386_PC32	milliTenthSleep(unsigned int)
10004540:	83 c4 10             	add    esp,0x10
10004543:	e8 fc ff ff ff       	call   10004544 <firstRun(bool)+0x1ba5>	10004544: R_386_PC32	drawBootScreen()
10004548:	83 ec 0c             	sub    esp,0xc
1000454b:	68 18 2e 00 00       	push   0x2e18
10004550:	e8 fc ff ff ff       	call   10004551 <firstRun(bool)+0x1bb2>	10004551: R_386_PC32	milliTenthSleep(unsigned int)
10004555:	83 c4 10             	add    esp,0x10
10004558:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
1000455f:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004561: R_386_32	installKey
10004566:	e8 fc ff ff ff       	call   10004567 <firstRun(bool)+0x1bc8>	10004567: R_386_PC32	drawBootScreen()
1000456b:	83 ec 0c             	sub    esp,0xc
1000456e:	68 7e be 00 10       	push   0x1000be7e	1000456f: R_386_32	.text
10004573:	6a 0e                	push   0xe
10004575:	6a 32                	push   0x32
10004577:	6a 02                	push   0x2
10004579:	6a 16                	push   0x16
1000457b:	e8 fc ff ff ff       	call   1000457c <firstRun(bool)+0x1bdd>	1000457c: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10004580:	83 c4 20             	add    esp,0x20
10004583:	a1 00 00 00 00       	mov    eax,ds:0x0	10004584: R_386_32	term
10004588:	83 ec 04             	sub    esp,0x4
1000458b:	6a 18                	push   0x18
1000458d:	6a 11                	push   0x11
1000458f:	50                   	push   eax
10004590:	e8 fc ff ff ff       	call   10004591 <firstRun(bool)+0x1bf2>	10004591: R_386_PC32	VgaText::setCursor(int, int)
10004595:	83 c4 10             	add    esp,0x10
10004598:	a1 00 00 00 00       	mov    eax,ds:0x0	10004599: R_386_32	term
1000459d:	6a 0b                	push   0xb
1000459f:	6a 03                	push   0x3
100045a1:	68 1a bd 00 10       	push   0x1000bd1a	100045a2: R_386_32	.text
100045a6:	50                   	push   eax
100045a7:	e8 fc ff ff ff       	call   100045a8 <firstRun(bool)+0x1c09>	100045a8: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
100045ac:	83 c4 10             	add    esp,0x10
100045af:	a1 00 00 00 00       	mov    eax,ds:0x0	100045b0: R_386_32	term
100045b4:	83 ec 04             	sub    esp,0x4
100045b7:	6a 05                	push   0x5
100045b9:	6a 18                	push   0x18
100045bb:	50                   	push   eax
100045bc:	e8 fc ff ff ff       	call   100045bd <firstRun(bool)+0x1c1e>	100045bd: R_386_PC32	VgaText::setCursor(int, int)
100045c1:	83 c4 10             	add    esp,0x10
100045c4:	a1 00 00 00 00       	mov    eax,ds:0x0	100045c5: R_386_32	term
100045c9:	83 ec 08             	sub    esp,0x8
100045cc:	68 8c be 00 10       	push   0x1000be8c	100045cd: R_386_32	.text
100045d1:	50                   	push   eax
100045d2:	e8 fc ff ff ff       	call   100045d3 <firstRun(bool)+0x1c34>	100045d3: R_386_PC32	VgaText::puts(char const*)
100045d7:	83 c4 10             	add    esp,0x10
100045da:	a1 00 00 00 00       	mov    eax,ds:0x0	100045db: R_386_32	term
100045df:	83 ec 04             	sub    esp,0x4
100045e2:	6a 06                	push   0x6
100045e4:	6a 18                	push   0x18
100045e6:	50                   	push   eax
100045e7:	e8 fc ff ff ff       	call   100045e8 <firstRun(bool)+0x1c49>	100045e8: R_386_PC32	VgaText::setCursor(int, int)
100045ec:	83 c4 10             	add    esp,0x10
100045ef:	a1 00 00 00 00       	mov    eax,ds:0x0	100045f0: R_386_32	term
100045f4:	83 ec 08             	sub    esp,0x8
100045f7:	68 f0 bc 00 10       	push   0x1000bcf0	100045f8: R_386_32	.text
100045fc:	50                   	push   eax
100045fd:	e8 fc ff ff ff       	call   100045fe <firstRun(bool)+0x1c5f>	100045fe: R_386_PC32	VgaText::puts(char const*)
10004602:	83 c4 10             	add    esp,0x10
10004605:	c6 05 10 00 00 00 00 	mov    BYTE PTR ds:0x10,0x0	10004607: R_386_32	pkeybuf
1000460c:	c6 05 11 00 00 00 00 	mov    BYTE PTR ds:0x11,0x0	1000460e: R_386_32	pkeybuf
10004613:	a1 00 00 00 00       	mov    eax,ds:0x0	10004614: R_386_32	term
10004618:	83 ec 04             	sub    esp,0x4
1000461b:	6a 08                	push   0x8
1000461d:	6a 1c                	push   0x1c
1000461f:	50                   	push   eax
10004620:	e8 fc ff ff ff       	call   10004621 <firstRun(bool)+0x1c82>	10004621: R_386_PC32	VgaText::setCursor(int, int)
10004625:	83 c4 10             	add    esp,0x10
10004628:	a1 00 00 00 00       	mov    eax,ds:0x0	10004629: R_386_32	term
1000462d:	83 ec 08             	sub    esp,0x8
10004630:	68 00 00 00 00       	push   0x0	10004631: R_386_32	pkeybuf
10004635:	50                   	push   eax
10004636:	e8 fc ff ff ff       	call   10004637 <firstRun(bool)+0x1c98>	10004637: R_386_PC32	VgaText::puts(char const*)
1000463b:	83 c4 10             	add    esp,0x10
1000463e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000463f: R_386_32	term
10004643:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10004646:	83 c2 1c             	add    edx,0x1c
10004649:	83 ec 04             	sub    esp,0x4
1000464c:	6a 08                	push   0x8
1000464e:	52                   	push   edx
1000464f:	50                   	push   eax
10004650:	e8 fc ff ff ff       	call   10004651 <firstRun(bool)+0x1cb2>	10004651: R_386_PC32	VgaText::setCursor(int, int)
10004655:	83 c4 10             	add    esp,0x10
10004658:	a1 00 00 00 00       	mov    eax,ds:0x0	10004659: R_386_32	term
1000465d:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10004660:	81 c2 00 00 00 00    	add    edx,0x0	10004662: R_386_32	pkeybuf
10004666:	8a 12                	mov    dl,BYTE PTR [edx]
10004668:	0f be d2             	movsx  edx,dl
1000466b:	6a 00                	push   0x0
1000466d:	6a 0f                	push   0xf
1000466f:	52                   	push   edx
10004670:	50                   	push   eax
10004671:	e8 fc ff ff ff       	call   10004672 <firstRun(bool)+0x1cd3>	10004672: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
10004676:	83 c4 10             	add    esp,0x10
10004679:	a1 00 00 00 00       	mov    eax,ds:0x0	1000467a: R_386_32	term
1000467e:	83 ec 04             	sub    esp,0x4
10004681:	6a 08                	push   0x8
10004683:	6a 2c                	push   0x2c
10004685:	50                   	push   eax
10004686:	e8 fc ff ff ff       	call   10004687 <firstRun(bool)+0x1ce8>	10004687: R_386_PC32	VgaText::setCursor(int, int)
1000468b:	83 c4 10             	add    esp,0x10
1000468e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000468f: R_386_32	term
10004693:	6a 0f                	push   0xf
10004695:	6a 0f                	push   0xf
10004697:	6a 20                	push   0x20
10004699:	50                   	push   eax
1000469a:	e8 fc ff ff ff       	call   1000469b <firstRun(bool)+0x1cfc>	1000469b: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
1000469f:	83 c4 10             	add    esp,0x10
100046a2:	a1 00 00 00 00       	mov    eax,ds:0x0	100046a3: R_386_32	term
100046a7:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
100046aa:	83 c2 1c             	add    edx,0x1c
100046ad:	83 ec 04             	sub    esp,0x4
100046b0:	6a 08                	push   0x8
100046b2:	52                   	push   edx
100046b3:	50                   	push   eax
100046b4:	e8 fc ff ff ff       	call   100046b5 <firstRun(bool)+0x1d16>	100046b5: R_386_PC32	VgaText::setCursor(int, int)
100046b9:	83 c4 10             	add    esp,0x10
100046bc:	a0 00 00 00 00       	mov    al,ds:0x0	100046bd: R_386_32	installKey
100046c1:	84 c0                	test   al,al
100046c3:	0f 94 c0             	sete   al
100046c6:	84 c0                	test   al,al
100046c8:	74 02                	je     100046cc <firstRun(bool)+0x1d2d>
100046ca:	eb f0                	jmp    100046bc <firstRun(bool)+0x1d1d>
100046cc:	a1 00 00 00 00       	mov    eax,ds:0x0	100046cd: R_386_32	term
100046d1:	05 82 00 00 00       	add    eax,0x82
100046d6:	83 ec 04             	sub    esp,0x4
100046d9:	6a 10                	push   0x10
100046db:	6a 00                	push   0x0
100046dd:	50                   	push   eax
100046de:	e8 fc ff ff ff       	call   100046df <firstRun(bool)+0x1d40>	100046df: R_386_PC32	memset
100046e3:	83 c4 10             	add    esp,0x10
100046e6:	a1 00 00 00 00       	mov    eax,ds:0x0	100046e7: R_386_32	term
100046eb:	05 02 01 00 00       	add    eax,0x102
100046f0:	83 ec 04             	sub    esp,0x4
100046f3:	6a 10                	push   0x10
100046f5:	6a 00                	push   0x0
100046f7:	50                   	push   eax
100046f8:	e8 fc ff ff ff       	call   100046f9 <firstRun(bool)+0x1d5a>	100046f9: R_386_PC32	memset
100046fd:	83 c4 10             	add    esp,0x10
10004700:	a0 00 00 00 00       	mov    al,ds:0x0	10004701: R_386_32	installKey
10004705:	3c 03                	cmp    al,0x3
10004707:	74 09                	je     10004712 <firstRun(bool)+0x1d73>
10004709:	a0 00 00 00 00       	mov    al,ds:0x0	1000470a: R_386_32	installKey
1000470e:	3c 08                	cmp    al,0x8
10004710:	75 04                	jne    10004716 <firstRun(bool)+0x1d77>
10004712:	b0 01                	mov    al,0x1
10004714:	eb 02                	jmp    10004718 <firstRun(bool)+0x1d79>
10004716:	b0 00                	mov    al,0x0
10004718:	84 c0                	test   al,al
1000471a:	74 31                	je     1000474d <firstRun(bool)+0x1dae>
1000471c:	ff 4d e4             	dec    DWORD PTR [ebp-0x1c]
1000471f:	83 7d e4 ff          	cmp    DWORD PTR [ebp-0x1c],0xffffffff
10004723:	75 14                	jne    10004739 <firstRun(bool)+0x1d9a>
10004725:	83 ec 0c             	sub    esp,0xc
10004728:	68 00 00 00 00       	push   0x0	10004729: R_386_32	pkeybuf
1000472d:	e8 fc ff ff ff       	call   1000472e <firstRun(bool)+0x1d8f>	1000472e: R_386_PC32	strlen
10004732:	83 c4 10             	add    esp,0x10
10004735:	48                   	dec    eax
10004736:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10004739:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000473c:	05 00 00 00 00       	add    eax,0x0	1000473d: R_386_32	pkeybuf
10004741:	8a 00                	mov    al,BYTE PTR [eax]
10004743:	3c 2d                	cmp    al,0x2d
10004745:	0f 85 6f 03 00 00    	jne    10004aba <firstRun(bool)+0x211b>
1000474b:	eb cf                	jmp    1000471c <firstRun(bool)+0x1d7d>
1000474d:	a0 00 00 00 00       	mov    al,ds:0x0	1000474e: R_386_32	installKey
10004752:	3c 2f                	cmp    al,0x2f
10004754:	7e 09                	jle    1000475f <firstRun(bool)+0x1dc0>
10004756:	a0 00 00 00 00       	mov    al,ds:0x0	10004757: R_386_32	installKey
1000475b:	3c 39                	cmp    al,0x39
1000475d:	7e 36                	jle    10004795 <firstRun(bool)+0x1df6>
1000475f:	a0 00 00 00 00       	mov    al,ds:0x0	10004760: R_386_32	installKey
10004764:	3c 40                	cmp    al,0x40
10004766:	7e 09                	jle    10004771 <firstRun(bool)+0x1dd2>
10004768:	a0 00 00 00 00       	mov    al,ds:0x0	10004769: R_386_32	installKey
1000476d:	3c 5a                	cmp    al,0x5a
1000476f:	7e 24                	jle    10004795 <firstRun(bool)+0x1df6>
10004771:	a0 00 00 00 00       	mov    al,ds:0x0	10004772: R_386_32	installKey
10004776:	3c 60                	cmp    al,0x60
10004778:	7e 09                	jle    10004783 <firstRun(bool)+0x1de4>
1000477a:	a0 00 00 00 00       	mov    al,ds:0x0	1000477b: R_386_32	installKey
1000477f:	3c 7a                	cmp    al,0x7a
10004781:	7e 12                	jle    10004795 <firstRun(bool)+0x1df6>
10004783:	a0 00 00 00 00       	mov    al,ds:0x0	10004784: R_386_32	installKey
10004788:	3c 20                	cmp    al,0x20
1000478a:	74 09                	je     10004795 <firstRun(bool)+0x1df6>
1000478c:	a0 00 00 00 00       	mov    al,ds:0x0	1000478d: R_386_32	installKey
10004791:	3c 04                	cmp    al,0x4
10004793:	75 04                	jne    10004799 <firstRun(bool)+0x1dfa>
10004795:	b0 01                	mov    al,0x1
10004797:	eb 02                	jmp    1000479b <firstRun(bool)+0x1dfc>
10004799:	b0 00                	mov    al,0x0
1000479b:	84 c0                	test   al,al
1000479d:	0f 84 a3 00 00 00    	je     10004846 <firstRun(bool)+0x1ea7>
100047a3:	a0 00 00 00 00       	mov    al,ds:0x0	100047a4: R_386_32	installKey
100047a8:	3c 2f                	cmp    al,0x2f
100047aa:	7e 09                	jle    100047b5 <firstRun(bool)+0x1e16>
100047ac:	a0 00 00 00 00       	mov    al,ds:0x0	100047ad: R_386_32	installKey
100047b1:	3c 39                	cmp    al,0x39
100047b3:	7e 24                	jle    100047d9 <firstRun(bool)+0x1e3a>
100047b5:	a0 00 00 00 00       	mov    al,ds:0x0	100047b6: R_386_32	installKey
100047ba:	3c 40                	cmp    al,0x40
100047bc:	7e 09                	jle    100047c7 <firstRun(bool)+0x1e28>
100047be:	a0 00 00 00 00       	mov    al,ds:0x0	100047bf: R_386_32	installKey
100047c3:	3c 5a                	cmp    al,0x5a
100047c5:	7e 12                	jle    100047d9 <firstRun(bool)+0x1e3a>
100047c7:	a0 00 00 00 00       	mov    al,ds:0x0	100047c8: R_386_32	installKey
100047cc:	3c 60                	cmp    al,0x60
100047ce:	7e 0d                	jle    100047dd <firstRun(bool)+0x1e3e>
100047d0:	a0 00 00 00 00       	mov    al,ds:0x0	100047d1: R_386_32	installKey
100047d5:	3c 7a                	cmp    al,0x7a
100047d7:	7f 04                	jg     100047dd <firstRun(bool)+0x1e3e>
100047d9:	b0 01                	mov    al,0x1
100047db:	eb 02                	jmp    100047df <firstRun(bool)+0x1e40>
100047dd:	b0 00                	mov    al,0x0
100047df:	84 c0                	test   al,al
100047e1:	74 2c                	je     1000480f <firstRun(bool)+0x1e70>
100047e3:	a0 00 00 00 00       	mov    al,ds:0x0	100047e4: R_386_32	installKey
100047e8:	3c 60                	cmp    al,0x60
100047ea:	7e 13                	jle    100047ff <firstRun(bool)+0x1e60>
100047ec:	a0 00 00 00 00       	mov    al,ds:0x0	100047ed: R_386_32	installKey
100047f1:	3c 7a                	cmp    al,0x7a
100047f3:	7f 0a                	jg     100047ff <firstRun(bool)+0x1e60>
100047f5:	a0 00 00 00 00       	mov    al,ds:0x0	100047f6: R_386_32	installKey
100047fa:	83 e8 20             	sub    eax,0x20
100047fd:	eb 05                	jmp    10004804 <firstRun(bool)+0x1e65>
100047ff:	a0 00 00 00 00       	mov    al,ds:0x0	10004800: R_386_32	installKey
10004804:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10004807:	81 c2 00 00 00 00    	add    edx,0x0	10004809: R_386_32	pkeybuf
1000480d:	88 02                	mov    BYTE PTR [edx],al
1000480f:	ff 45 e4             	inc    DWORD PTR [ebp-0x1c]
10004812:	83 ec 0c             	sub    esp,0xc
10004815:	68 00 00 00 00       	push   0x0	10004816: R_386_32	pkeybuf
1000481a:	e8 fc ff ff ff       	call   1000481b <firstRun(bool)+0x1e7c>	1000481b: R_386_PC32	strlen
1000481f:	83 c4 10             	add    esp,0x10
10004822:	89 c2                	mov    edx,eax
10004824:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10004827:	39 c2                	cmp    edx,eax
10004829:	77 07                	ja     10004832 <firstRun(bool)+0x1e93>
1000482b:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10004832:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10004835:	05 00 00 00 00       	add    eax,0x0	10004836: R_386_32	pkeybuf
1000483a:	8a 00                	mov    al,BYTE PTR [eax]
1000483c:	3c 2d                	cmp    al,0x2d
1000483e:	0f 85 76 02 00 00    	jne    10004aba <firstRun(bool)+0x211b>
10004844:	eb c9                	jmp    1000480f <firstRun(bool)+0x1e70>
10004846:	a0 00 00 00 00       	mov    al,ds:0x0	10004847: R_386_32	installKey
1000484b:	3c 1b                	cmp    al,0x1b
1000484d:	0f 94 c0             	sete   al
10004850:	84 c0                	test   al,al
10004852:	0f 85 99 f9 ff ff    	jne    100041f1 <firstRun(bool)+0x1852>
10004858:	a0 00 00 00 00       	mov    al,ds:0x0	10004859: R_386_32	installKey
1000485d:	3c 0a                	cmp    al,0xa
1000485f:	0f 94 c0             	sete   al
10004862:	84 c0                	test   al,al
10004864:	0f 84 50 02 00 00    	je     10004aba <firstRun(bool)+0x211b>
1000486a:	83 ec 0c             	sub    esp,0xc
1000486d:	68 00 00 00 00       	push   0x0	1000486e: R_386_32	pkeybuf
10004872:	e8 fc ff ff ff       	call   10004873 <firstRun(bool)+0x1ed4>	10004873: R_386_PC32	checkExtendedKey(char*)
10004877:	83 c4 10             	add    esp,0x10
1000487a:	85 c0                	test   eax,eax
1000487c:	0f 95 c0             	setne  al
1000487f:	88 45 8f             	mov    BYTE PTR [ebp-0x71],al
10004882:	80 7d 8f 00          	cmp    BYTE PTR [ebp-0x71],0x0
10004886:	74 5b                	je     100048e3 <firstRun(bool)+0x1f44>
10004888:	83 ec 0c             	sub    esp,0xc
1000488b:	68 f0 0a 00 00       	push   0xaf0
10004890:	e8 fc ff ff ff       	call   10004891 <firstRun(bool)+0x1ef2>	10004891: R_386_PC32	milliTenthSleep(unsigned int)
10004895:	83 c4 10             	add    esp,0x10
10004898:	e8 fc ff ff ff       	call   10004899 <firstRun(bool)+0x1efa>	10004899: R_386_PC32	drawBootScreen()
1000489d:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	1000489f: R_386_32	installKey
100048a4:	83 ec 0c             	sub    esp,0xc
100048a7:	68 84 03 00 00       	push   0x384
100048ac:	e8 fc ff ff ff       	call   100048ad <firstRun(bool)+0x1f0e>	100048ad: R_386_PC32	milliTenthSleep(unsigned int)
100048b1:	83 c4 10             	add    esp,0x10
100048b4:	e8 fc ff ff ff       	call   100048b5 <firstRun(bool)+0x1f16>	100048b5: R_386_PC32	drawBootScreen()
100048b9:	83 ec 0c             	sub    esp,0xc
100048bc:	68 c0 12 00 00       	push   0x12c0
100048c1:	e8 fc ff ff ff       	call   100048c2 <firstRun(bool)+0x1f23>	100048c2: R_386_PC32	milliTenthSleep(unsigned int)
100048c6:	83 c4 10             	add    esp,0x10
100048c9:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100048cb: R_386_32	installKey
100048d0:	90                   	nop
100048d1:	80 bd 14 ff ff ff 00 	cmp    BYTE PTR [ebp-0xec],0x0
100048d8:	0f 84 e8 01 00 00    	je     10004ac6 <firstRun(bool)+0x2127>
100048de:	e9 d2 02 00 00       	jmp    10004bb5 <firstRun(bool)+0x2216>
100048e3:	83 ec 0c             	sub    esp,0xc
100048e6:	68 f0 0a 00 00       	push   0xaf0
100048eb:	e8 fc ff ff ff       	call   100048ec <firstRun(bool)+0x1f4d>	100048ec: R_386_PC32	milliTenthSleep(unsigned int)
100048f0:	83 c4 10             	add    esp,0x10
100048f3:	e8 fc ff ff ff       	call   100048f4 <firstRun(bool)+0x1f55>	100048f4: R_386_PC32	drawBootScreen()
100048f8:	83 ec 08             	sub    esp,0x8
100048fb:	6a 01                	push   0x1
100048fd:	68 7e be 00 10       	push   0x1000be7e	100048fe: R_386_32	.text
10004902:	6a 0e                	push   0xe
10004904:	6a 32                	push   0x32
10004906:	6a 02                	push   0x2
10004908:	6a 16                	push   0x16
1000490a:	e8 fc ff ff ff       	call   1000490b <firstRun(bool)+0x1f6c>	1000490b: R_386_PC32	drawBasicWindowX(int, int, int, int, char const*, bool)
1000490f:	83 c4 20             	add    esp,0x20
10004912:	a1 00 00 00 00       	mov    eax,ds:0x0	10004913: R_386_32	term
10004917:	83 ec 04             	sub    esp,0x4
1000491a:	6a 05                	push   0x5
1000491c:	6a 18                	push   0x18
1000491e:	50                   	push   eax
1000491f:	e8 fc ff ff ff       	call   10004920 <firstRun(bool)+0x1f81>	10004920: R_386_PC32	VgaText::setCursor(int, int)
10004924:	83 c4 10             	add    esp,0x10
10004927:	a1 00 00 00 00       	mov    eax,ds:0x0	10004928: R_386_32	term
1000492c:	6a 07                	push   0x7
1000492e:	6a 00                	push   0x0
10004930:	68 8c be 00 10       	push   0x1000be8c	10004931: R_386_32	.text
10004935:	50                   	push   eax
10004936:	e8 fc ff ff ff       	call   10004937 <firstRun(bool)+0x1f98>	10004937: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
1000493b:	83 c4 10             	add    esp,0x10
1000493e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000493f: R_386_32	term
10004943:	83 ec 04             	sub    esp,0x4
10004946:	6a 06                	push   0x6
10004948:	6a 18                	push   0x18
1000494a:	50                   	push   eax
1000494b:	e8 fc ff ff ff       	call   1000494c <firstRun(bool)+0x1fad>	1000494c: R_386_PC32	VgaText::setCursor(int, int)
10004950:	83 c4 10             	add    esp,0x10
10004953:	a1 00 00 00 00       	mov    eax,ds:0x0	10004954: R_386_32	term
10004958:	6a 07                	push   0x7
1000495a:	6a 00                	push   0x0
1000495c:	68 f0 bc 00 10       	push   0x1000bcf0	1000495d: R_386_32	.text
10004961:	50                   	push   eax
10004962:	e8 fc ff ff ff       	call   10004963 <firstRun(bool)+0x1fc4>	10004963: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10004967:	83 c4 10             	add    esp,0x10
1000496a:	a1 00 00 00 00       	mov    eax,ds:0x0	1000496b: R_386_32	term
1000496f:	83 ec 04             	sub    esp,0x4
10004972:	6a 08                	push   0x8
10004974:	6a 1c                	push   0x1c
10004976:	50                   	push   eax
10004977:	e8 fc ff ff ff       	call   10004978 <firstRun(bool)+0x1fd9>	10004978: R_386_PC32	VgaText::setCursor(int, int)
1000497c:	83 c4 10             	add    esp,0x10
1000497f:	a1 00 00 00 00       	mov    eax,ds:0x0	10004980: R_386_32	term
10004984:	6a 07                	push   0x7
10004986:	6a 00                	push   0x0
10004988:	68 00 00 00 00       	push   0x0	10004989: R_386_32	pkeybuf
1000498d:	50                   	push   eax
1000498e:	e8 fc ff ff ff       	call   1000498f <firstRun(bool)+0x1ff0>	1000498f: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10004993:	83 c4 10             	add    esp,0x10
10004996:	a1 00 00 00 00       	mov    eax,ds:0x0	10004997: R_386_32	term
1000499b:	83 ec 04             	sub    esp,0x4
1000499e:	6a 08                	push   0x8
100049a0:	6a 2c                	push   0x2c
100049a2:	50                   	push   eax
100049a3:	e8 fc ff ff ff       	call   100049a4 <firstRun(bool)+0x2005>	100049a4: R_386_PC32	VgaText::setCursor(int, int)
100049a8:	83 c4 10             	add    esp,0x10
100049ab:	a1 00 00 00 00       	mov    eax,ds:0x0	100049ac: R_386_32	term
100049b0:	6a 07                	push   0x7
100049b2:	6a 07                	push   0x7
100049b4:	6a 20                	push   0x20
100049b6:	50                   	push   eax
100049b7:	e8 fc ff ff ff       	call   100049b8 <firstRun(bool)+0x2019>	100049b8: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
100049bc:	83 c4 10             	add    esp,0x10
100049bf:	a1 00 00 00 00       	mov    eax,ds:0x0	100049c0: R_386_32	term
100049c4:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
100049c7:	83 c2 1c             	add    edx,0x1c
100049ca:	83 ec 04             	sub    esp,0x4
100049cd:	6a 08                	push   0x8
100049cf:	52                   	push   edx
100049d0:	50                   	push   eax
100049d1:	e8 fc ff ff ff       	call   100049d2 <firstRun(bool)+0x2033>	100049d2: R_386_PC32	VgaText::setCursor(int, int)
100049d6:	83 c4 10             	add    esp,0x10
100049d9:	83 ec 0c             	sub    esp,0xc
100049dc:	68 dd bd 00 10       	push   0x1000bddd	100049dd: R_386_32	.text
100049e1:	6a 0b                	push   0xb
100049e3:	6a 2b                	push   0x2b
100049e5:	6a 0a                	push   0xa
100049e7:	6a 22                	push   0x22
100049e9:	e8 fc ff ff ff       	call   100049ea <firstRun(bool)+0x204b>	100049ea: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
100049ee:	83 c4 20             	add    esp,0x20
100049f1:	a1 00 00 00 00       	mov    eax,ds:0x0	100049f2: R_386_32	term
100049f6:	83 ec 04             	sub    esp,0x4
100049f9:	6a 0d                	push   0xd
100049fb:	6a 24                	push   0x24
100049fd:	50                   	push   eax
100049fe:	e8 fc ff ff ff       	call   100049ff <firstRun(bool)+0x2060>	100049ff: R_386_PC32	VgaText::setCursor(int, int)
10004a03:	83 c4 10             	add    esp,0x10
10004a06:	a1 00 00 00 00       	mov    eax,ds:0x0	10004a07: R_386_32	term
10004a0b:	83 ec 08             	sub    esp,0x8
10004a0e:	68 b4 be 00 10       	push   0x1000beb4	10004a0f: R_386_32	.text
10004a13:	50                   	push   eax
10004a14:	e8 fc ff ff ff       	call   10004a15 <firstRun(bool)+0x2076>	10004a15: R_386_PC32	VgaText::puts(char const*)
10004a19:	83 c4 10             	add    esp,0x10
10004a1c:	a1 00 00 00 00       	mov    eax,ds:0x0	10004a1d: R_386_32	term
10004a21:	83 ec 04             	sub    esp,0x4
10004a24:	6a 0f                	push   0xf
10004a26:	6a 24                	push   0x24
10004a28:	50                   	push   eax
10004a29:	e8 fc ff ff ff       	call   10004a2a <firstRun(bool)+0x208b>	10004a2a: R_386_PC32	VgaText::setCursor(int, int)
10004a2e:	83 c4 10             	add    esp,0x10
10004a31:	a1 00 00 00 00       	mov    eax,ds:0x0	10004a32: R_386_32	term
10004a36:	83 ec 08             	sub    esp,0x8
10004a39:	68 dc be 00 10       	push   0x1000bedc	10004a3a: R_386_32	.text
10004a3e:	50                   	push   eax
10004a3f:	e8 fc ff ff ff       	call   10004a40 <firstRun(bool)+0x20a1>	10004a40: R_386_PC32	VgaText::puts(char const*)
10004a44:	83 c4 10             	add    esp,0x10
10004a47:	a1 00 00 00 00       	mov    eax,ds:0x0	10004a48: R_386_32	term
10004a4c:	83 ec 04             	sub    esp,0x4
10004a4f:	6a 10                	push   0x10
10004a51:	6a 24                	push   0x24
10004a53:	50                   	push   eax
10004a54:	e8 fc ff ff ff       	call   10004a55 <firstRun(bool)+0x20b6>	10004a55: R_386_PC32	VgaText::setCursor(int, int)
10004a59:	83 c4 10             	add    esp,0x10
10004a5c:	a1 00 00 00 00       	mov    eax,ds:0x0	10004a5d: R_386_32	term
10004a61:	83 ec 08             	sub    esp,0x8
10004a64:	68 00 bf 00 10       	push   0x1000bf00	10004a65: R_386_32	.text
10004a69:	50                   	push   eax
10004a6a:	e8 fc ff ff ff       	call   10004a6b <firstRun(bool)+0x20cc>	10004a6b: R_386_PC32	VgaText::puts(char const*)
10004a6f:	83 c4 10             	add    esp,0x10
10004a72:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004a74: R_386_32	installKey
10004a79:	83 ec 0c             	sub    esp,0xc
10004a7c:	68 94 11 00 00       	push   0x1194
10004a81:	e8 fc ff ff ff       	call   10004a82 <firstRun(bool)+0x20e3>	10004a82: R_386_PC32	milliTenthSleep(unsigned int)
10004a86:	83 c4 10             	add    esp,0x10
10004a89:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004a8b: R_386_32	installKey
10004a90:	a0 00 00 00 00       	mov    al,ds:0x0	10004a91: R_386_32	installKey
10004a95:	84 c0                	test   al,al
10004a97:	0f 94 c0             	sete   al
10004a9a:	84 c0                	test   al,al
10004a9c:	74 02                	je     10004aa0 <firstRun(bool)+0x2101>
10004a9e:	eb f0                	jmp    10004a90 <firstRun(bool)+0x20f1>
10004aa0:	e8 fc ff ff ff       	call   10004aa1 <firstRun(bool)+0x2102>	10004aa1: R_386_PC32	drawBootScreen()
10004aa5:	83 ec 0c             	sub    esp,0xc
10004aa8:	68 9c 18 00 00       	push   0x189c
10004aad:	e8 fc ff ff ff       	call   10004aae <firstRun(bool)+0x210f>	10004aae: R_386_PC32	milliTenthSleep(unsigned int)
10004ab2:	83 c4 10             	add    esp,0x10
10004ab5:	e9 a5 fa ff ff       	jmp    1000455f <firstRun(bool)+0x1bc0>
10004aba:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004abc: R_386_32	installKey
10004ac1:	e9 3f fb ff ff       	jmp    10004605 <firstRun(bool)+0x1c66>
10004ac6:	e8 fc ff ff ff       	call   10004ac7 <firstRun(bool)+0x2128>	10004ac7: R_386_PC32	drawBootScreen()
10004acb:	83 ec 0c             	sub    esp,0xc
10004ace:	68 21 bf 00 10       	push   0x1000bf21	10004acf: R_386_32	.text
10004ad3:	6a 0d                	push   0xd
10004ad5:	6a 32                	push   0x32
10004ad7:	6a 05                	push   0x5
10004ad9:	6a 16                	push   0x16
10004adb:	e8 fc ff ff ff       	call   10004adc <firstRun(bool)+0x213d>	10004adc: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10004ae0:	83 c4 20             	add    esp,0x20
10004ae3:	83 ec 0c             	sub    esp,0xc
10004ae6:	6a 00                	push   0x0
10004ae8:	e8 fc ff ff ff       	call   10004ae9 <firstRun(bool)+0x214a>	10004ae9: R_386_PC32	bootInstallTasks(int)
10004aed:	83 c4 10             	add    esp,0x10
10004af0:	83 ec 04             	sub    esp,0x4
10004af3:	6a 0c                	push   0xc
10004af5:	68 39 bf 00 10       	push   0x1000bf39	10004af6: R_386_32	.text
10004afa:	68 4a bf 00 10       	push   0x1000bf4a	10004afb: R_386_32	.text
10004aff:	e8 fc ff ff ff       	call   10004b00 <firstRun(bool)+0x2161>	10004b00: R_386_PC32	Reg::readIntWithDefault(char*, char*, int)
10004b04:	83 c4 10             	add    esp,0x10
10004b07:	89 45 88             	mov    DWORD PTR [ebp-0x78],eax
10004b0a:	83 ec 0c             	sub    esp,0xc
10004b0d:	ff 75 88             	push   DWORD PTR [ebp-0x78]
10004b10:	e8 fc ff ff ff       	call   10004b11 <firstRun(bool)+0x2172>	10004b11: R_386_PC32	Virt::setupPageSwapping(int)
10004b15:	83 c4 10             	add    esp,0x10
10004b18:	83 ec 0c             	sub    esp,0xc
10004b1b:	6a 01                	push   0x1
10004b1d:	e8 fc ff ff ff       	call   10004b1e <firstRun(bool)+0x217f>	10004b1e: R_386_PC32	bootInstallTasks(int)
10004b22:	83 c4 10             	add    esp,0x10
10004b25:	83 ec 0c             	sub    esp,0xc
10004b28:	68 51 bf 00 10       	push   0x1000bf51	10004b29: R_386_32	.text
10004b2d:	e8 fc ff ff ff       	call   10004b2e <firstRun(bool)+0x218f>	10004b2e: R_386_PC32	rmtree(char*)
10004b32:	83 c4 10             	add    esp,0x10
10004b35:	83 ec 0c             	sub    esp,0xc
10004b38:	68 6b bf 00 10       	push   0x1000bf6b	10004b39: R_386_32	.text
10004b3d:	e8 fc ff ff ff       	call   10004b3e <firstRun(bool)+0x219f>	10004b3e: R_386_PC32	rmtree(char*)
10004b42:	83 c4 10             	add    esp,0x10
10004b45:	83 ec 08             	sub    esp,0x8
10004b48:	68 c0 01 00 00       	push   0x1c0
10004b4d:	68 51 bf 00 10       	push   0x1000bf51	10004b4e: R_386_32	.text
10004b52:	e8 fc ff ff ff       	call   10004b53 <firstRun(bool)+0x21b4>	10004b53: R_386_PC32	mkdir(char const*, int)
10004b57:	83 c4 10             	add    esp,0x10
10004b5a:	83 ec 08             	sub    esp,0x8
10004b5d:	68 c0 01 00 00       	push   0x1c0
10004b62:	68 6b bf 00 10       	push   0x1000bf6b	10004b63: R_386_32	.text
10004b67:	e8 fc ff ff ff       	call   10004b68 <firstRun(bool)+0x21c9>	10004b68: R_386_PC32	mkdir(char const*, int)
10004b6c:	83 c4 10             	add    esp,0x10
10004b6f:	83 ec 08             	sub    esp,0x8
10004b72:	68 51 bf 00 10       	push   0x1000bf51	10004b73: R_386_32	.text
10004b77:	68 84 bf 00 10       	push   0x1000bf84	10004b78: R_386_32	.text
10004b7c:	e8 fc ff ff ff       	call   10004b7d <firstRun(bool)+0x21de>	10004b7d: R_386_PC32	copytree(char*, char*)
10004b81:	83 c4 10             	add    esp,0x10
10004b84:	83 ec 0c             	sub    esp,0xc
10004b87:	6a 02                	push   0x2
10004b89:	e8 fc ff ff ff       	call   10004b8a <firstRun(bool)+0x21eb>	10004b8a: R_386_PC32	bootInstallTasks(int)
10004b8e:	83 c4 10             	add    esp,0x10
10004b91:	83 ec 0c             	sub    esp,0xc
10004b94:	68 00 00 00 00       	push   0x0	10004b95: R_386_32	currName
10004b99:	e8 fc ff ff ff       	call   10004b9a <firstRun(bool)+0x21fb>	10004b9a: R_386_PC32	createUser(char const*)
10004b9e:	83 c4 10             	add    esp,0x10
10004ba1:	83 ec 0c             	sub    esp,0xc
10004ba4:	6a 03                	push   0x3
10004ba6:	e8 fc ff ff ff       	call   10004ba7 <firstRun(bool)+0x2208>	10004ba7: R_386_PC32	bootInstallTasks(int)
10004bab:	83 c4 10             	add    esp,0x10
10004bae:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10004bb0: R_386_32	VgaText::hiddenOut
10004bb5:	8d 65 f4             	lea    esp,[ebp-0xc]
10004bb8:	5b                   	pop    ebx
10004bb9:	5e                   	pop    esi
10004bba:	5f                   	pop    edi
10004bbb:	5d                   	pop    ebp
10004bbc:	c3                   	ret    

10004bbd <loadExtensions()>:
10004bbd:	55                   	push   ebp
10004bbe:	89 e5                	mov    ebp,esp
10004bc0:	83 ec 08             	sub    esp,0x8
10004bc3:	83 ec 0c             	sub    esp,0xc
10004bc6:	68 2c c0 00 10       	push   0x1000c02c	10004bc7: R_386_32	.text
10004bcb:	e8 fc ff ff ff       	call   10004bcc <loadExtensions()+0xf>	10004bcc: R_386_PC32	KeSetBootMessage(char const*)
10004bd0:	83 c4 10             	add    esp,0x10
10004bd3:	90                   	nop
10004bd4:	c9                   	leave  
10004bd5:	c3                   	ret    

10004bd6 <rgtree(Reghive_Tag*, int, int)>:
10004bd6:	55                   	push   ebp
10004bd7:	89 e5                	mov    ebp,esp
10004bd9:	53                   	push   ebx
10004bda:	83 ec 44             	sub    esp,0x44
10004bdd:	83 7d 0c 01          	cmp    DWORD PTR [ebp+0xc],0x1
10004be1:	75 16                	jne    10004bf9 <rgtree(Reghive_Tag*, int, int)+0x23>
10004be3:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
10004be7:	75 10                	jne    10004bf9 <rgtree(Reghive_Tag*, int, int)+0x23>
10004be9:	83 ec 0c             	sub    esp,0xc
10004bec:	68 42 c0 00 10       	push   0x1000c042	10004bed: R_386_32	.text
10004bf1:	e8 fc ff ff ff       	call   10004bf2 <rgtree(Reghive_Tag*, int, int)+0x1c>	10004bf2: R_386_PC32	Dbg::kprintf(char const*, ...)
10004bf6:	83 c4 10             	add    esp,0x10
10004bf9:	83 7d 0c 00          	cmp    DWORD PTR [ebp+0xc],0x0
10004bfd:	0f 8e a9 00 00 00    	jle    10004cac <rgtree(Reghive_Tag*, int, int)+0xd6>
10004c03:	83 ec 04             	sub    esp,0x4
10004c06:	6a 32                	push   0x32
10004c08:	6a 00                	push   0x0
10004c0a:	8d 45 be             	lea    eax,[ebp-0x42]
10004c0d:	50                   	push   eax
10004c0e:	e8 fc ff ff ff       	call   10004c0f <rgtree(Reghive_Tag*, int, int)+0x39>	10004c0f: R_386_PC32	memset
10004c13:	83 c4 10             	add    esp,0x10
10004c16:	83 ec 04             	sub    esp,0x4
10004c19:	8d 45 be             	lea    eax,[ebp-0x42]
10004c1c:	50                   	push   eax
10004c1d:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10004c20:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004c23:	e8 fc ff ff ff       	call   10004c24 <rgtree(Reghive_Tag*, int, int)+0x4e>	10004c24: R_386_PC32	CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
10004c28:	83 c4 10             	add    esp,0x10
10004c2b:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10004c2e:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10004c35:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10004c38:	3b 45 10             	cmp    eax,DWORD PTR [ebp+0x10]
10004c3b:	7d 15                	jge    10004c52 <rgtree(Reghive_Tag*, int, int)+0x7c>
10004c3d:	83 ec 0c             	sub    esp,0xc
10004c40:	68 7d bb 00 10       	push   0x1000bb7d	10004c41: R_386_32	.text
10004c45:	e8 fc ff ff ff       	call   10004c46 <rgtree(Reghive_Tag*, int, int)+0x70>	10004c46: R_386_PC32	Dbg::kprintf(char const*, ...)
10004c4a:	83 c4 10             	add    esp,0x10
10004c4d:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10004c50:	eb e3                	jmp    10004c35 <rgtree(Reghive_Tag*, int, int)+0x5f>
10004c52:	83 ec 08             	sub    esp,0x8
10004c55:	8d 45 be             	lea    eax,[ebp-0x42]
10004c58:	50                   	push   eax
10004c59:	68 47 c0 00 10       	push   0x1000c047	10004c5a: R_386_32	.text
10004c5e:	e8 fc ff ff ff       	call   10004c5f <rgtree(Reghive_Tag*, int, int)+0x89>	10004c5f: R_386_PC32	Dbg::kprintf(char const*, ...)
10004c63:	83 c4 10             	add    esp,0x10
10004c66:	83 7d f0 4e          	cmp    DWORD PTR [ebp-0x10],0x4e
10004c6a:	75 27                	jne    10004c93 <rgtree(Reghive_Tag*, int, int)+0xbd>
10004c6c:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10004c6f:	8d 58 04             	lea    ebx,[eax+0x4]
10004c72:	83 ec 08             	sub    esp,0x8
10004c75:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10004c78:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004c7b:	e8 fc ff ff ff       	call   10004c7c <rgtree(Reghive_Tag*, int, int)+0xa6>	10004c7c: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
10004c80:	83 c4 10             	add    esp,0x10
10004c83:	83 ec 04             	sub    esp,0x4
10004c86:	53                   	push   ebx
10004c87:	50                   	push   eax
10004c88:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004c8b:	e8 fc ff ff ff       	call   10004c8c <rgtree(Reghive_Tag*, int, int)+0xb6>	10004c8c: R_386_PC32	rgtree(Reghive_Tag*, int, int)
10004c90:	83 c4 10             	add    esp,0x10
10004c93:	83 ec 08             	sub    esp,0x8
10004c96:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10004c99:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004c9c:	e8 fc ff ff ff       	call   10004c9d <rgtree(Reghive_Tag*, int, int)+0xc7>	10004c9d: R_386_PC32	CmGetNext(Reghive_Tag*, int)
10004ca1:	83 c4 10             	add    esp,0x10
10004ca4:	89 45 0c             	mov    DWORD PTR [ebp+0xc],eax
10004ca7:	e9 4d ff ff ff       	jmp    10004bf9 <rgtree(Reghive_Tag*, int, int)+0x23>
10004cac:	90                   	nop
10004cad:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10004cb0:	c9                   	leave  
10004cb1:	c3                   	ret    

10004cb2 <begin(void*)>:
10004cb2:	55                   	push   ebp
10004cb3:	89 e5                	mov    ebp,esp
10004cb5:	57                   	push   edi
10004cb6:	56                   	push   esi
10004cb7:	53                   	push   ebx
10004cb8:	81 ec 5c 02 00 00    	sub    esp,0x25c
10004cbe:	c6 45 e7 00          	mov    BYTE PTR [ebp-0x19],0x0
10004cc2:	83 ec 0c             	sub    esp,0xc
10004cc5:	68 14 01 00 00       	push   0x114
10004cca:	e8 fc ff ff ff       	call   10004ccb <begin(void*)+0x19>	10004ccb: R_386_PC32	operator new(unsigned long)
10004ccf:	83 c4 10             	add    esp,0x10
10004cd2:	89 c3                	mov    ebx,eax
10004cd4:	a1 00 00 00 00       	mov    eax,ds:0x0	10004cd5: R_386_32	kernelProcess
10004cd9:	83 ec 04             	sub    esp,0x4
10004cdc:	50                   	push   eax
10004cdd:	68 4c c0 00 10       	push   0x1000c04c	10004cde: R_386_32	.text
10004ce2:	53                   	push   ebx
10004ce3:	e8 fc ff ff ff       	call   10004ce4 <begin(void*)+0x32>	10004ce4: R_386_PC32	File::File(char const*, Process*)
10004ce8:	83 c4 10             	add    esp,0x10
10004ceb:	89 5d d8             	mov    DWORD PTR [ebp-0x28],ebx
10004cee:	83 7d d8 00          	cmp    DWORD PTR [ebp-0x28],0x0
10004cf2:	75 10                	jne    10004d04 <begin(void*)+0x52>
10004cf4:	83 ec 0c             	sub    esp,0xc
10004cf7:	68 6a c0 00 10       	push   0x1000c06a	10004cf8: R_386_32	.text
10004cfc:	e8 fc ff ff ff       	call   10004cfd <begin(void*)+0x4b>	10004cfd: R_386_PC32	KePanic(char const*)
10004d01:	83 c4 10             	add    esp,0x10
10004d04:	83 ec 08             	sub    esp,0x8
10004d07:	6a 01                	push   0x1
10004d09:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10004d0c:	e8 fc ff ff ff       	call   10004d0d <begin(void*)+0x5b>	10004d0d: R_386_PC32	File::open(FileOpenMode)
10004d11:	83 c4 10             	add    esp,0x10
10004d14:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
10004d17:	83 7d d4 00          	cmp    DWORD PTR [ebp-0x2c],0x0
10004d1b:	75 10                	jne    10004d2d <begin(void*)+0x7b>
10004d1d:	83 ec 0c             	sub    esp,0xc
10004d20:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10004d23:	e8 fc ff ff ff       	call   10004d24 <begin(void*)+0x72>	10004d24: R_386_PC32	File::close()
10004d28:	83 c4 10             	add    esp,0x10
10004d2b:	eb 04                	jmp    10004d31 <begin(void*)+0x7f>
10004d2d:	c6 45 e7 01          	mov    BYTE PTR [ebp-0x19],0x1
10004d31:	83 7d d8 00          	cmp    DWORD PTR [ebp-0x28],0x0
10004d35:	74 15                	je     10004d4c <begin(void*)+0x9a>
10004d37:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10004d3a:	8b 00                	mov    eax,DWORD PTR [eax]
10004d3c:	83 c0 08             	add    eax,0x8
10004d3f:	8b 00                	mov    eax,DWORD PTR [eax]
10004d41:	83 ec 0c             	sub    esp,0xc
10004d44:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10004d47:	ff d0                	call   eax
10004d49:	83 c4 10             	add    esp,0x10
10004d4c:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10004d4e: R_386_32	KeIsPreemptionOn
10004d53:	80 7d e7 00          	cmp    BYTE PTR [ebp-0x19],0x0
10004d57:	74 0f                	je     10004d68 <begin(void*)+0xb6>
10004d59:	83 ec 0c             	sub    esp,0xc
10004d5c:	6a 00                	push   0x0
10004d5e:	e8 fc ff ff ff       	call   10004d5f <begin(void*)+0xad>	10004d5f: R_386_PC32	firstRun(bool)
10004d63:	83 c4 10             	add    esp,0x10
10004d66:	eb 05                	jmp    10004d6d <begin(void*)+0xbb>
10004d68:	e8 fc ff ff ff       	call   10004d69 <begin(void*)+0xb7>	10004d69: R_386_PC32	loadExtensions()
10004d6d:	8d 45 b0             	lea    eax,[ebp-0x50]
10004d70:	bb a8 c2 00 10       	mov    ebx,0x1000c2a8	10004d71: R_386_32	.text
10004d75:	ba 04 00 00 00       	mov    edx,0x4
10004d7a:	89 c7                	mov    edi,eax
10004d7c:	89 de                	mov    esi,ebx
10004d7e:	89 d1                	mov    ecx,edx
10004d80:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10004d82:	80 7d e7 00          	cmp    BYTE PTR [ebp-0x19],0x0
10004d86:	0f 84 e2 04 00 00    	je     1000526e <begin(void*)+0x5bc>
10004d8c:	83 ec 0c             	sub    esp,0xc
10004d8f:	68 24 07 00 00       	push   0x724
10004d94:	e8 fc ff ff ff       	call   10004d95 <begin(void*)+0xe3>	10004d95: R_386_PC32	operator new(unsigned long)
10004d99:	83 c4 10             	add    esp,0x10
10004d9c:	89 c3                	mov    ebx,eax
10004d9e:	8d 45 b0             	lea    eax,[ebp-0x50]
10004da1:	50                   	push   eax
10004da2:	6a 00                	push   0x0
10004da4:	68 7a c0 00 10       	push   0x1000c07a	10004da5: R_386_32	.text
10004da9:	53                   	push   ebx
10004daa:	e8 fc ff ff ff       	call   10004dab <begin(void*)+0xf9>	10004dab: R_386_PC32	Process::Process(char const*, Process*, char**)
10004daf:	83 c4 10             	add    esp,0x10
10004db2:	89 5d d0             	mov    DWORD PTR [ebp-0x30],ebx
10004db5:	83 ec 0c             	sub    esp,0xc
10004db8:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10004dbb:	e8 fc ff ff ff       	call   10004dbc <begin(void*)+0x10a>	10004dbc: R_386_PC32	Process::createUserThread()
10004dc0:	83 c4 10             	add    esp,0x10
10004dc3:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004dc5: R_386_32	VgaText::hiddenOut
10004dca:	a1 00 00 00 00       	mov    eax,ds:0x0	10004dcb: R_386_32	term
10004dcf:	83 ec 0c             	sub    esp,0xc
10004dd2:	50                   	push   eax
10004dd3:	e8 fc ff ff ff       	call   10004dd4 <begin(void*)+0x122>	10004dd4: R_386_PC32	setActiveTerminal(VgaText*)
10004dd8:	83 c4 10             	add    esp,0x10
10004ddb:	e8 fc ff ff ff       	call   10004ddc <begin(void*)+0x12a>	10004ddc: R_386_PC32	drawBootScreen()
10004de0:	83 ec 0c             	sub    esp,0xc
10004de3:	68 21 bf 00 10       	push   0x1000bf21	10004de4: R_386_32	.text
10004de8:	6a 0d                	push   0xd
10004dea:	6a 32                	push   0x32
10004dec:	6a 05                	push   0x5
10004dee:	6a 16                	push   0x16
10004df0:	e8 fc ff ff ff       	call   10004df1 <begin(void*)+0x13f>	10004df1: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10004df5:	83 c4 20             	add    esp,0x20
10004df8:	83 ec 0c             	sub    esp,0xc
10004dfb:	6a 03                	push   0x3
10004dfd:	e8 fc ff ff ff       	call   10004dfe <begin(void*)+0x14c>	10004dfe: R_386_PC32	bootInstallTasks(int)
10004e02:	83 c4 10             	add    esp,0x10
10004e05:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10004e07: R_386_32	VgaText::hiddenOut
10004e0c:	83 ec 0c             	sub    esp,0xc
10004e0f:	68 14 01 00 00       	push   0x114
10004e14:	e8 fc ff ff ff       	call   10004e15 <begin(void*)+0x163>	10004e15: R_386_PC32	operator new(unsigned long)
10004e19:	83 c4 10             	add    esp,0x10
10004e1c:	89 c3                	mov    ebx,eax
10004e1e:	a1 00 00 00 00       	mov    eax,ds:0x0	10004e1f: R_386_32	kernelProcess
10004e23:	83 ec 04             	sub    esp,0x4
10004e26:	50                   	push   eax
10004e27:	68 97 c0 00 10       	push   0x1000c097	10004e28: R_386_32	.text
10004e2c:	53                   	push   ebx
10004e2d:	e8 fc ff ff ff       	call   10004e2e <begin(void*)+0x17c>	10004e2e: R_386_PC32	File::File(char const*, Process*)
10004e32:	83 c4 10             	add    esp,0x10
10004e35:	89 5d cc             	mov    DWORD PTR [ebp-0x34],ebx
10004e38:	83 ec 08             	sub    esp,0x8
10004e3b:	6a 01                	push   0x1
10004e3d:	ff 75 cc             	push   DWORD PTR [ebp-0x34]
10004e40:	e8 fc ff ff ff       	call   10004e41 <begin(void*)+0x18f>	10004e41: R_386_PC32	File::open(FileOpenMode)
10004e45:	83 c4 10             	add    esp,0x10
10004e48:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10004e4b:	83 7d c8 00          	cmp    DWORD PTR [ebp-0x38],0x0
10004e4f:	75 39                	jne    10004e8a <begin(void*)+0x1d8>
10004e51:	83 ec 0c             	sub    esp,0xc
10004e54:	ff 75 cc             	push   DWORD PTR [ebp-0x34]
10004e57:	e8 fc ff ff ff       	call   10004e58 <begin(void*)+0x1a6>	10004e58: R_386_PC32	File::close()
10004e5c:	83 c4 10             	add    esp,0x10
10004e5f:	83 ec 0c             	sub    esp,0xc
10004e62:	ff 75 cc             	push   DWORD PTR [ebp-0x34]
10004e65:	e8 fc ff ff ff       	call   10004e66 <begin(void*)+0x1b4>	10004e66: R_386_PC32	File::unlink()
10004e6a:	83 c4 10             	add    esp,0x10
10004e6d:	83 7d cc 00          	cmp    DWORD PTR [ebp-0x34],0x0
10004e71:	74 44                	je     10004eb7 <begin(void*)+0x205>
10004e73:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10004e76:	8b 00                	mov    eax,DWORD PTR [eax]
10004e78:	83 c0 08             	add    eax,0x8
10004e7b:	8b 00                	mov    eax,DWORD PTR [eax]
10004e7d:	83 ec 0c             	sub    esp,0xc
10004e80:	ff 75 cc             	push   DWORD PTR [ebp-0x34]
10004e83:	ff d0                	call   eax
10004e85:	83 c4 10             	add    esp,0x10
10004e88:	eb 2d                	jmp    10004eb7 <begin(void*)+0x205>
10004e8a:	83 7d cc 00          	cmp    DWORD PTR [ebp-0x34],0x0
10004e8e:	74 15                	je     10004ea5 <begin(void*)+0x1f3>
10004e90:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10004e93:	8b 00                	mov    eax,DWORD PTR [eax]
10004e95:	83 c0 08             	add    eax,0x8
10004e98:	8b 00                	mov    eax,DWORD PTR [eax]
10004e9a:	83 ec 0c             	sub    esp,0xc
10004e9d:	ff 75 cc             	push   DWORD PTR [ebp-0x34]
10004ea0:	ff d0                	call   eax
10004ea2:	83 c4 10             	add    esp,0x10
10004ea5:	83 ec 0c             	sub    esp,0xc
10004ea8:	6a 01                	push   0x1
10004eaa:	e8 fc ff ff ff       	call   10004eab <begin(void*)+0x1f9>	10004eab: R_386_PC32	sleep(unsigned int)
10004eaf:	83 c4 10             	add    esp,0x10
10004eb2:	e9 55 ff ff ff       	jmp    10004e0c <begin(void*)+0x15a>
10004eb7:	90                   	nop
10004eb8:	83 ec 0c             	sub    esp,0xc
10004ebb:	6a 02                	push   0x2
10004ebd:	e8 fc ff ff ff       	call   10004ebe <begin(void*)+0x20c>	10004ebe: R_386_PC32	sleep(unsigned int)
10004ec2:	83 c4 10             	add    esp,0x10
10004ec5:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004ec7: R_386_32	VgaText::hiddenOut
10004ecc:	a1 00 00 00 00       	mov    eax,ds:0x0	10004ecd: R_386_32	term
10004ed1:	83 ec 0c             	sub    esp,0xc
10004ed4:	50                   	push   eax
10004ed5:	e8 fc ff ff ff       	call   10004ed6 <begin(void*)+0x224>	10004ed6: R_386_PC32	setActiveTerminal(VgaText*)
10004eda:	83 c4 10             	add    esp,0x10
10004edd:	e8 fc ff ff ff       	call   10004ede <begin(void*)+0x22c>	10004ede: R_386_PC32	drawBootScreen()
10004ee2:	83 ec 0c             	sub    esp,0xc
10004ee5:	68 21 bf 00 10       	push   0x1000bf21	10004ee6: R_386_32	.text
10004eea:	6a 0d                	push   0xd
10004eec:	6a 32                	push   0x32
10004eee:	6a 05                	push   0x5
10004ef0:	6a 16                	push   0x16
10004ef2:	e8 fc ff ff ff       	call   10004ef3 <begin(void*)+0x241>	10004ef3: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10004ef7:	83 c4 20             	add    esp,0x20
10004efa:	83 ec 0c             	sub    esp,0xc
10004efd:	6a 04                	push   0x4
10004eff:	e8 fc ff ff ff       	call   10004f00 <begin(void*)+0x24e>	10004f00: R_386_PC32	bootInstallTasks(int)
10004f04:	83 c4 10             	add    esp,0x10
10004f07:	83 ec 08             	sub    esp,0x8
10004f0a:	68 dd dd 00 00       	push   0xdddd
10004f0f:	68 a1 c0 00 10       	push   0x1000c0a1	10004f10: R_386_32	.text
10004f14:	e8 fc ff ff ff       	call   10004f15 <begin(void*)+0x263>	10004f15: R_386_PC32	backupTree(char*, unsigned short)
10004f19:	83 c4 10             	add    esp,0x10
10004f1c:	83 ec 08             	sub    esp,0x8
10004f1f:	68 ee ee 00 00       	push   0xeeee
10004f24:	68 b4 c0 00 10       	push   0x1000c0b4	10004f25: R_386_32	.text
10004f29:	e8 fc ff ff ff       	call   10004f2a <begin(void*)+0x278>	10004f2a: R_386_PC32	backupTree(char*, unsigned short)
10004f2e:	83 c4 10             	add    esp,0x10
10004f31:	83 ec 08             	sub    esp,0x8
10004f34:	68 ff ff 00 00       	push   0xffff
10004f39:	68 c6 c0 00 10       	push   0x1000c0c6	10004f3a: R_386_32	.text
10004f3e:	e8 fc ff ff ff       	call   10004f3f <begin(void*)+0x28d>	10004f3f: R_386_PC32	backupTree(char*, unsigned short)
10004f43:	83 c4 10             	add    esp,0x10
10004f46:	83 ec 0c             	sub    esp,0xc
10004f49:	6a 05                	push   0x5
10004f4b:	e8 fc ff ff ff       	call   10004f4c <begin(void*)+0x29a>	10004f4c: R_386_PC32	bootInstallTasks(int)
10004f50:	83 c4 10             	add    esp,0x10
10004f53:	83 ec 0c             	sub    esp,0xc
10004f56:	68 dc c0 00 10       	push   0x1000c0dc	10004f57: R_386_32	.text
10004f5b:	e8 fc ff ff ff       	call   10004f5c <begin(void*)+0x2aa>	10004f5c: R_386_PC32	CmOpen(char const*)
10004f60:	83 c4 10             	add    esp,0x10
10004f63:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10004f66:	83 ec 04             	sub    esp,0x4
10004f69:	68 01 c1 00 10       	push   0x1000c101	10004f6a: R_386_32	.text
10004f6e:	6a 00                	push   0x0
10004f70:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004f73:	e8 fc ff ff ff       	call   10004f74 <begin(void*)+0x2c2>	10004f74: R_386_PC32	CmCreateDirectory(Reghive_Tag*, int, char const*)
10004f78:	83 c4 10             	add    esp,0x10
10004f7b:	83 ec 08             	sub    esp,0x8
10004f7e:	68 01 c1 00 10       	push   0x1000c101	10004f7f: R_386_32	.text
10004f83:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004f86:	e8 fc ff ff ff       	call   10004f87 <begin(void*)+0x2d5>	10004f87: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10004f8b:	83 c4 10             	add    esp,0x10
10004f8e:	83 ec 08             	sub    esp,0x8
10004f91:	50                   	push   eax
10004f92:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004f95:	e8 fc ff ff ff       	call   10004f96 <begin(void*)+0x2e4>	10004f96: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
10004f9a:	83 c4 10             	add    esp,0x10
10004f9d:	83 ec 04             	sub    esp,0x4
10004fa0:	68 08 c1 00 10       	push   0x1000c108	10004fa1: R_386_32	.text
10004fa5:	50                   	push   eax
10004fa6:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004fa9:	e8 fc ff ff ff       	call   10004faa <begin(void*)+0x2f8>	10004faa: R_386_PC32	CmCreateDirectory(Reghive_Tag*, int, char const*)
10004fae:	83 c4 10             	add    esp,0x10
10004fb1:	83 ec 08             	sub    esp,0x8
10004fb4:	68 01 c1 00 10       	push   0x1000c101	10004fb5: R_386_32	.text
10004fb9:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004fbc:	e8 fc ff ff ff       	call   10004fbd <begin(void*)+0x30b>	10004fbd: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10004fc1:	83 c4 10             	add    esp,0x10
10004fc4:	83 ec 08             	sub    esp,0x8
10004fc7:	50                   	push   eax
10004fc8:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004fcb:	e8 fc ff ff ff       	call   10004fcc <begin(void*)+0x31a>	10004fcc: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
10004fd0:	83 c4 10             	add    esp,0x10
10004fd3:	83 ec 04             	sub    esp,0x4
10004fd6:	68 0e c1 00 10       	push   0x1000c10e	10004fd7: R_386_32	.text
10004fdb:	50                   	push   eax
10004fdc:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004fdf:	e8 fc ff ff ff       	call   10004fe0 <begin(void*)+0x32e>	10004fe0: R_386_PC32	CmCreateDirectory(Reghive_Tag*, int, char const*)
10004fe4:	83 c4 10             	add    esp,0x10
10004fe7:	83 ec 08             	sub    esp,0x8
10004fea:	68 13 c1 00 10       	push   0x1000c113	10004feb: R_386_32	.text
10004fef:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004ff2:	e8 fc ff ff ff       	call   10004ff3 <begin(void*)+0x341>	10004ff3: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10004ff7:	83 c4 10             	add    esp,0x10
10004ffa:	83 ec 08             	sub    esp,0x8
10004ffd:	50                   	push   eax
10004ffe:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10005001:	e8 fc ff ff ff       	call   10005002 <begin(void*)+0x350>	10005002: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
10005006:	83 c4 10             	add    esp,0x10
10005009:	83 ec 04             	sub    esp,0x4
1000500c:	68 20 c1 00 10       	push   0x1000c120	1000500d: R_386_32	.text
10005011:	50                   	push   eax
10005012:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10005015:	e8 fc ff ff ff       	call   10005016 <begin(void*)+0x364>	10005016: R_386_PC32	CmCreateString(Reghive_Tag*, int, char const*)
1000501a:	83 c4 10             	add    esp,0x10
1000501d:	83 ec 08             	sub    esp,0x8
10005020:	68 13 c1 00 10       	push   0x1000c113	10005021: R_386_32	.text
10005025:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10005028:	e8 fc ff ff ff       	call   10005029 <begin(void*)+0x377>	10005029: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
1000502d:	83 c4 10             	add    esp,0x10
10005030:	83 ec 08             	sub    esp,0x8
10005033:	50                   	push   eax
10005034:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10005037:	e8 fc ff ff ff       	call   10005038 <begin(void*)+0x386>	10005038: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
1000503c:	83 c4 10             	add    esp,0x10
1000503f:	83 ec 04             	sub    esp,0x4
10005042:	68 25 c1 00 10       	push   0x1000c125	10005043: R_386_32	.text
10005047:	50                   	push   eax
10005048:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
1000504b:	e8 fc ff ff ff       	call   1000504c <begin(void*)+0x39a>	1000504c: R_386_PC32	CmCreateString(Reghive_Tag*, int, char const*)
10005050:	83 c4 10             	add    esp,0x10
10005053:	83 ec 08             	sub    esp,0x8
10005056:	68 13 c1 00 10       	push   0x1000c113	10005057: R_386_32	.text
1000505b:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
1000505e:	e8 fc ff ff ff       	call   1000505f <begin(void*)+0x3ad>	1000505f: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10005063:	83 c4 10             	add    esp,0x10
10005066:	83 ec 08             	sub    esp,0x8
10005069:	50                   	push   eax
1000506a:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
1000506d:	e8 fc ff ff ff       	call   1000506e <begin(void*)+0x3bc>	1000506e: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
10005072:	83 c4 10             	add    esp,0x10
10005075:	83 ec 04             	sub    esp,0x4
10005078:	68 2d c1 00 10       	push   0x1000c12d	10005079: R_386_32	.text
1000507d:	50                   	push   eax
1000507e:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10005081:	e8 fc ff ff ff       	call   10005082 <begin(void*)+0x3d0>	10005082: R_386_PC32	CmCreateString(Reghive_Tag*, int, char const*)
10005086:	83 c4 10             	add    esp,0x10
10005089:	a1 00 00 00 00       	mov    eax,ds:0x0	1000508a: R_386_32	modesel
1000508e:	89 c3                	mov    ebx,eax
10005090:	89 c6                	mov    esi,eax
10005092:	c1 fe 1f             	sar    esi,0x1f
10005095:	83 ec 08             	sub    esp,0x8
10005098:	68 38 c1 00 10       	push   0x1000c138	10005099: R_386_32	.text
1000509d:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
100050a0:	e8 fc ff ff ff       	call   100050a1 <begin(void*)+0x3ef>	100050a1: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
100050a5:	83 c4 10             	add    esp,0x10
100050a8:	83 ec 08             	sub    esp,0x8
100050ab:	50                   	push   eax
100050ac:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
100050af:	e8 fc ff ff ff       	call   100050b0 <begin(void*)+0x3fe>	100050b0: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
100050b4:	83 c4 10             	add    esp,0x10
100050b7:	83 ec 08             	sub    esp,0x8
100050ba:	6a 6a                	push   0x6a
100050bc:	56                   	push   esi
100050bd:	53                   	push   ebx
100050be:	68 44 c1 00 10       	push   0x1000c144	100050bf: R_386_32	.text
100050c3:	50                   	push   eax
100050c4:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
100050c7:	e8 fc ff ff ff       	call   100050c8 <begin(void*)+0x416>	100050c8: R_386_PC32	CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
100050cc:	83 c4 20             	add    esp,0x20
100050cf:	83 ec 08             	sub    esp,0x8
100050d2:	68 4c c1 00 10       	push   0x1000c14c	100050d3: R_386_32	.text
100050d7:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
100050da:	e8 fc ff ff ff       	call   100050db <begin(void*)+0x429>	100050db: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
100050df:	83 c4 10             	add    esp,0x10
100050e2:	83 ec 04             	sub    esp,0x4
100050e5:	68 00 00 00 00       	push   0x0	100050e6: R_386_32	currName
100050ea:	50                   	push   eax
100050eb:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
100050ee:	e8 fc ff ff ff       	call   100050ef <begin(void*)+0x43d>	100050ef: R_386_PC32	CmSetString(Reghive_Tag*, int, char const*)
100050f3:	83 c4 10             	add    esp,0x10
100050f6:	83 ec 08             	sub    esp,0x8
100050f9:	68 5e c1 00 10       	push   0x1000c15e	100050fa: R_386_32	.text
100050fe:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10005101:	e8 fc ff ff ff       	call   10005102 <begin(void*)+0x450>	10005102: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10005106:	83 c4 10             	add    esp,0x10
10005109:	83 ec 04             	sub    esp,0x4
1000510c:	68 00 00 00 00       	push   0x0	1000510d: R_386_32	currComp
10005111:	50                   	push   eax
10005112:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10005115:	e8 fc ff ff ff       	call   10005116 <begin(void*)+0x464>	10005116: R_386_PC32	CmSetString(Reghive_Tag*, int, char const*)
1000511a:	83 c4 10             	add    esp,0x10
1000511d:	83 ec 08             	sub    esp,0x8
10005120:	68 73 c1 00 10       	push   0x1000c173	10005121: R_386_32	.text
10005125:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10005128:	e8 fc ff ff ff       	call   10005129 <begin(void*)+0x477>	10005129: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
1000512d:	83 c4 10             	add    esp,0x10
10005130:	83 ec 04             	sub    esp,0x4
10005133:	68 00 00 00 00       	push   0x0	10005134: R_386_32	pkeybuf
10005138:	50                   	push   eax
10005139:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
1000513c:	e8 fc ff ff ff       	call   1000513d <begin(void*)+0x48b>	1000513d: R_386_PC32	CmSetString(Reghive_Tag*, int, char const*)
10005141:	83 c4 10             	add    esp,0x10
10005144:	83 ec 0c             	sub    esp,0xc
10005147:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
1000514a:	e8 fc ff ff ff       	call   1000514b <begin(void*)+0x499>	1000514b: R_386_PC32	CmClose(Reghive_Tag*)
1000514f:	83 c4 10             	add    esp,0x10
10005152:	a1 00 00 00 00       	mov    eax,ds:0x0	10005153: R_386_32	term
10005157:	83 ec 0c             	sub    esp,0xc
1000515a:	50                   	push   eax
1000515b:	e8 fc ff ff ff       	call   1000515c <begin(void*)+0x4aa>	1000515c: R_386_PC32	setActiveTerminal(VgaText*)
10005160:	83 c4 10             	add    esp,0x10
10005163:	e8 fc ff ff ff       	call   10005164 <begin(void*)+0x4b2>	10005164: R_386_PC32	drawBootScreen()
10005168:	83 ec 0c             	sub    esp,0xc
1000516b:	68 21 bf 00 10       	push   0x1000bf21	1000516c: R_386_32	.text
10005170:	6a 0d                	push   0xd
10005172:	6a 32                	push   0x32
10005174:	6a 05                	push   0x5
10005176:	6a 16                	push   0x16
10005178:	e8 fc ff ff ff       	call   10005179 <begin(void*)+0x4c7>	10005179: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
1000517d:	83 c4 20             	add    esp,0x20
10005180:	a1 00 00 00 00       	mov    eax,ds:0x0	10005181: R_386_32	term
10005185:	83 ec 04             	sub    esp,0x4
10005188:	6a 08                	push   0x8
1000518a:	6a 18                	push   0x18
1000518c:	50                   	push   eax
1000518d:	e8 fc ff ff ff       	call   1000518e <begin(void*)+0x4dc>	1000518e: R_386_PC32	VgaText::setCursor(int, int)
10005192:	83 c4 10             	add    esp,0x10
10005195:	a1 00 00 00 00       	mov    eax,ds:0x0	10005196: R_386_32	term
1000519a:	83 ec 08             	sub    esp,0x8
1000519d:	68 8c c1 00 10       	push   0x1000c18c	1000519e: R_386_32	.text
100051a2:	50                   	push   eax
100051a3:	e8 fc ff ff ff       	call   100051a4 <begin(void*)+0x4f2>	100051a4: R_386_PC32	VgaText::puts(char const*)
100051a8:	83 c4 10             	add    esp,0x10
100051ab:	a1 00 00 00 00       	mov    eax,ds:0x0	100051ac: R_386_32	term
100051b0:	83 ec 04             	sub    esp,0x4
100051b3:	6a 0a                	push   0xa
100051b5:	6a 18                	push   0x18
100051b7:	50                   	push   eax
100051b8:	e8 fc ff ff ff       	call   100051b9 <begin(void*)+0x507>	100051b9: R_386_PC32	VgaText::setCursor(int, int)
100051bd:	83 c4 10             	add    esp,0x10
100051c0:	a1 00 00 00 00       	mov    eax,ds:0x0	100051c1: R_386_32	term
100051c5:	83 ec 08             	sub    esp,0x8
100051c8:	68 b4 c1 00 10       	push   0x1000c1b4	100051c9: R_386_32	.text
100051cd:	50                   	push   eax
100051ce:	e8 fc ff ff ff       	call   100051cf <begin(void*)+0x51d>	100051cf: R_386_PC32	VgaText::puts(char const*)
100051d3:	83 c4 10             	add    esp,0x10
100051d6:	a1 00 00 00 00       	mov    eax,ds:0x0	100051d7: R_386_32	term
100051db:	83 ec 04             	sub    esp,0x4
100051de:	6a 0b                	push   0xb
100051e0:	6a 18                	push   0x18
100051e2:	50                   	push   eax
100051e3:	e8 fc ff ff ff       	call   100051e4 <begin(void*)+0x532>	100051e4: R_386_PC32	VgaText::setCursor(int, int)
100051e8:	83 c4 10             	add    esp,0x10
100051eb:	a1 00 00 00 00       	mov    eax,ds:0x0	100051ec: R_386_32	term
100051f0:	83 ec 08             	sub    esp,0x8
100051f3:	68 e0 c1 00 10       	push   0x1000c1e0	100051f4: R_386_32	.text
100051f8:	50                   	push   eax
100051f9:	e8 fc ff ff ff       	call   100051fa <begin(void*)+0x548>	100051fa: R_386_PC32	VgaText::puts(char const*)
100051fe:	83 c4 10             	add    esp,0x10
10005201:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10005203: R_386_32	installKey
10005208:	a0 00 00 00 00       	mov    al,ds:0x0	10005209: R_386_32	installKey
1000520d:	84 c0                	test   al,al
1000520f:	0f 94 c0             	sete   al
10005212:	84 c0                	test   al,al
10005214:	74 02                	je     10005218 <begin(void*)+0x566>
10005216:	eb f0                	jmp    10005208 <begin(void*)+0x556>
10005218:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	1000521a: R_386_32	installKey
1000521f:	a1 00 00 00 00       	mov    eax,ds:0x0	10005220: R_386_32	term
10005224:	83 ec 04             	sub    esp,0x4
10005227:	6a 0c                	push   0xc
10005229:	6a 18                	push   0x18
1000522b:	50                   	push   eax
1000522c:	e8 fc ff ff ff       	call   1000522d <begin(void*)+0x57b>	1000522d: R_386_PC32	VgaText::setCursor(int, int)
10005231:	83 c4 10             	add    esp,0x10
10005234:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10005236: R_386_32	Krnl::computer
1000523a:	a1 00 00 00 00       	mov    eax,ds:0x0	1000523b: R_386_32	Krnl::computer
1000523f:	8b 00                	mov    eax,DWORD PTR [eax]
10005241:	83 c0 0c             	add    eax,0xc
10005244:	8b 00                	mov    eax,DWORD PTR [eax]
10005246:	6a 00                	push   0x0
10005248:	6a 00                	push   0x0
1000524a:	6a 01                	push   0x1
1000524c:	52                   	push   edx
1000524d:	ff d0                	call   eax
1000524f:	83 c4 10             	add    esp,0x10
10005252:	a1 00 00 00 00       	mov    eax,ds:0x0	10005253: R_386_32	term
10005257:	6a 0f                	push   0xf
10005259:	6a 0c                	push   0xc
1000525b:	68 f4 c1 00 10       	push   0x1000c1f4	1000525c: R_386_32	.text
10005260:	50                   	push   eax
10005261:	e8 fc ff ff ff       	call   10005262 <begin(void*)+0x5b0>	10005262: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10005266:	83 c4 10             	add    esp,0x10
10005269:	e9 ad 03 00 00       	jmp    1000561b <begin(void*)+0x969>
1000526e:	83 ec 0c             	sub    esp,0xc
10005271:	68 dc c0 00 10       	push   0x1000c0dc	10005272: R_386_32	.text
10005276:	e8 fc ff ff ff       	call   10005277 <begin(void*)+0x5c5>	10005277: R_386_PC32	CmOpen(char const*)
1000527b:	83 c4 10             	add    esp,0x10
1000527e:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
10005281:	83 ec 08             	sub    esp,0x8
10005284:	68 73 c1 00 10       	push   0x1000c173	10005285: R_386_32	.text
10005289:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
1000528c:	e8 fc ff ff ff       	call   1000528d <begin(void*)+0x5db>	1000528d: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10005291:	83 c4 10             	add    esp,0x10
10005294:	83 ec 04             	sub    esp,0x4
10005297:	8d 95 b0 fd ff ff    	lea    edx,[ebp-0x250]
1000529d:	52                   	push   edx
1000529e:	50                   	push   eax
1000529f:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
100052a2:	e8 fc ff ff ff       	call   100052a3 <begin(void*)+0x5f1>	100052a3: R_386_PC32	CmGetString(Reghive_Tag*, int, char*)
100052a7:	83 c4 10             	add    esp,0x10
100052aa:	83 ec 08             	sub    esp,0x8
100052ad:	68 1a c2 00 10       	push   0x1000c21a	100052ae: R_386_32	.text
100052b2:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
100052b5:	e8 fc ff ff ff       	call   100052b6 <begin(void*)+0x604>	100052b6: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
100052ba:	83 c4 10             	add    esp,0x10
100052bd:	83 ec 04             	sub    esp,0x4
100052c0:	8d 55 a8             	lea    edx,[ebp-0x58]
100052c3:	52                   	push   edx
100052c4:	50                   	push   eax
100052c5:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
100052c8:	e8 fc ff ff ff       	call   100052c9 <begin(void*)+0x617>	100052c9: R_386_PC32	CmGetInteger(Reghive_Tag*, int, unsigned long long*)
100052cd:	83 c4 10             	add    esp,0x10
100052d0:	83 ec 0c             	sub    esp,0xc
100052d3:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
100052d6:	e8 fc ff ff ff       	call   100052d7 <begin(void*)+0x625>	100052d7: R_386_PC32	CmClose(Reghive_Tag*)
100052db:	83 c4 10             	add    esp,0x10
100052de:	83 ec 0c             	sub    esp,0xc
100052e1:	8d 85 b0 fd ff ff    	lea    eax,[ebp-0x250]
100052e7:	50                   	push   eax
100052e8:	e8 fc ff ff ff       	call   100052e9 <begin(void*)+0x637>	100052e9: R_386_PC32	checkExtendedKey(char*)
100052ed:	83 c4 10             	add    esp,0x10
100052f0:	85 c0                	test   eax,eax
100052f2:	0f 94 c0             	sete   al
100052f5:	84 c0                	test   al,al
100052f7:	0f 84 ed 01 00 00    	je     100054ea <begin(void*)+0x838>
100052fd:	83 ec 0c             	sub    esp,0xc
10005300:	6a 01                	push   0x1
10005302:	e8 fc ff ff ff       	call   10005303 <begin(void*)+0x651>	10005303: R_386_PC32	firstRun(bool)
10005307:	83 c4 10             	add    esp,0x10
1000530a:	83 ec 0c             	sub    esp,0xc
1000530d:	68 dc c0 00 10       	push   0x1000c0dc	1000530e: R_386_32	.text
10005312:	e8 fc ff ff ff       	call   10005313 <begin(void*)+0x661>	10005313: R_386_PC32	CmOpen(char const*)
10005317:	83 c4 10             	add    esp,0x10
1000531a:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
1000531d:	83 ec 04             	sub    esp,0x4
10005320:	68 01 c1 00 10       	push   0x1000c101	10005321: R_386_32	.text
10005325:	6a 00                	push   0x0
10005327:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
1000532a:	e8 fc ff ff ff       	call   1000532b <begin(void*)+0x679>	1000532b: R_386_PC32	CmCreateDirectory(Reghive_Tag*, int, char const*)
1000532f:	83 c4 10             	add    esp,0x10
10005332:	83 ec 08             	sub    esp,0x8
10005335:	68 01 c1 00 10       	push   0x1000c101	10005336: R_386_32	.text
1000533a:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
1000533d:	e8 fc ff ff ff       	call   1000533e <begin(void*)+0x68c>	1000533e: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10005342:	83 c4 10             	add    esp,0x10
10005345:	83 ec 08             	sub    esp,0x8
10005348:	50                   	push   eax
10005349:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
1000534c:	e8 fc ff ff ff       	call   1000534d <begin(void*)+0x69b>	1000534d: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
10005351:	83 c4 10             	add    esp,0x10
10005354:	83 ec 04             	sub    esp,0x4
10005357:	68 08 c1 00 10       	push   0x1000c108	10005358: R_386_32	.text
1000535c:	50                   	push   eax
1000535d:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10005360:	e8 fc ff ff ff       	call   10005361 <begin(void*)+0x6af>	10005361: R_386_PC32	CmCreateDirectory(Reghive_Tag*, int, char const*)
10005365:	83 c4 10             	add    esp,0x10
10005368:	83 ec 08             	sub    esp,0x8
1000536b:	68 13 c1 00 10       	push   0x1000c113	1000536c: R_386_32	.text
10005370:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10005373:	e8 fc ff ff ff       	call   10005374 <begin(void*)+0x6c2>	10005374: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10005378:	83 c4 10             	add    esp,0x10
1000537b:	83 ec 08             	sub    esp,0x8
1000537e:	50                   	push   eax
1000537f:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10005382:	e8 fc ff ff ff       	call   10005383 <begin(void*)+0x6d1>	10005383: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
10005387:	83 c4 10             	add    esp,0x10
1000538a:	83 ec 04             	sub    esp,0x4
1000538d:	68 2d c1 00 10       	push   0x1000c12d	1000538e: R_386_32	.text
10005392:	50                   	push   eax
10005393:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10005396:	e8 fc ff ff ff       	call   10005397 <begin(void*)+0x6e5>	10005397: R_386_PC32	CmCreateString(Reghive_Tag*, int, char const*)
1000539b:	83 c4 10             	add    esp,0x10
1000539e:	83 ec 08             	sub    esp,0x8
100053a1:	68 73 c1 00 10       	push   0x1000c173	100053a2: R_386_32	.text
100053a6:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
100053a9:	e8 fc ff ff ff       	call   100053aa <begin(void*)+0x6f8>	100053aa: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
100053ae:	83 c4 10             	add    esp,0x10
100053b1:	83 ec 04             	sub    esp,0x4
100053b4:	68 00 00 00 00       	push   0x0	100053b5: R_386_32	pkeybuf
100053b9:	50                   	push   eax
100053ba:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
100053bd:	e8 fc ff ff ff       	call   100053be <begin(void*)+0x70c>	100053be: R_386_PC32	CmSetString(Reghive_Tag*, int, char const*)
100053c2:	83 c4 10             	add    esp,0x10
100053c5:	83 ec 0c             	sub    esp,0xc
100053c8:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
100053cb:	e8 fc ff ff ff       	call   100053cc <begin(void*)+0x71a>	100053cc: R_386_PC32	CmClose(Reghive_Tag*)
100053d0:	83 c4 10             	add    esp,0x10
100053d3:	a1 00 00 00 00       	mov    eax,ds:0x0	100053d4: R_386_32	term
100053d8:	83 ec 0c             	sub    esp,0xc
100053db:	50                   	push   eax
100053dc:	e8 fc ff ff ff       	call   100053dd <begin(void*)+0x72b>	100053dd: R_386_PC32	setActiveTerminal(VgaText*)
100053e1:	83 c4 10             	add    esp,0x10
100053e4:	e8 fc ff ff ff       	call   100053e5 <begin(void*)+0x733>	100053e5: R_386_PC32	drawBootScreen()
100053e9:	83 ec 0c             	sub    esp,0xc
100053ec:	68 2e c2 00 10       	push   0x1000c22e	100053ed: R_386_32	.text
100053f1:	6a 0d                	push   0xd
100053f3:	6a 32                	push   0x32
100053f5:	6a 05                	push   0x5
100053f7:	6a 16                	push   0x16
100053f9:	e8 fc ff ff ff       	call   100053fa <begin(void*)+0x748>	100053fa: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
100053fe:	83 c4 20             	add    esp,0x20
10005401:	a1 00 00 00 00       	mov    eax,ds:0x0	10005402: R_386_32	term
10005406:	83 ec 04             	sub    esp,0x4
10005409:	6a 08                	push   0x8
1000540b:	6a 18                	push   0x18
1000540d:	50                   	push   eax
1000540e:	e8 fc ff ff ff       	call   1000540f <begin(void*)+0x75d>	1000540f: R_386_PC32	VgaText::setCursor(int, int)
10005413:	83 c4 10             	add    esp,0x10
10005416:	a1 00 00 00 00       	mov    eax,ds:0x0	10005417: R_386_32	term
1000541b:	83 ec 08             	sub    esp,0x8
1000541e:	68 44 c2 00 10       	push   0x1000c244	1000541f: R_386_32	.text
10005423:	50                   	push   eax
10005424:	e8 fc ff ff ff       	call   10005425 <begin(void*)+0x773>	10005425: R_386_PC32	VgaText::puts(char const*)
10005429:	83 c4 10             	add    esp,0x10
1000542c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000542d: R_386_32	term
10005431:	83 ec 04             	sub    esp,0x4
10005434:	6a 0a                	push   0xa
10005436:	6a 18                	push   0x18
10005438:	50                   	push   eax
10005439:	e8 fc ff ff ff       	call   1000543a <begin(void*)+0x788>	1000543a: R_386_PC32	VgaText::setCursor(int, int)
1000543e:	83 c4 10             	add    esp,0x10
10005441:	a1 00 00 00 00       	mov    eax,ds:0x0	10005442: R_386_32	term
10005446:	83 ec 08             	sub    esp,0x8
10005449:	68 b4 c1 00 10       	push   0x1000c1b4	1000544a: R_386_32	.text
1000544e:	50                   	push   eax
1000544f:	e8 fc ff ff ff       	call   10005450 <begin(void*)+0x79e>	10005450: R_386_PC32	VgaText::puts(char const*)
10005454:	83 c4 10             	add    esp,0x10
10005457:	a1 00 00 00 00       	mov    eax,ds:0x0	10005458: R_386_32	term
1000545c:	83 ec 04             	sub    esp,0x4
1000545f:	6a 0b                	push   0xb
10005461:	6a 18                	push   0x18
10005463:	50                   	push   eax
10005464:	e8 fc ff ff ff       	call   10005465 <begin(void*)+0x7b3>	10005465: R_386_PC32	VgaText::setCursor(int, int)
10005469:	83 c4 10             	add    esp,0x10
1000546c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000546d: R_386_32	term
10005471:	83 ec 08             	sub    esp,0x8
10005474:	68 e0 c1 00 10       	push   0x1000c1e0	10005475: R_386_32	.text
10005479:	50                   	push   eax
1000547a:	e8 fc ff ff ff       	call   1000547b <begin(void*)+0x7c9>	1000547b: R_386_PC32	VgaText::puts(char const*)
1000547f:	83 c4 10             	add    esp,0x10
10005482:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10005484: R_386_32	installKey
10005489:	a0 00 00 00 00       	mov    al,ds:0x0	1000548a: R_386_32	installKey
1000548e:	84 c0                	test   al,al
10005490:	0f 94 c0             	sete   al
10005493:	84 c0                	test   al,al
10005495:	74 02                	je     10005499 <begin(void*)+0x7e7>
10005497:	eb f0                	jmp    10005489 <begin(void*)+0x7d7>
10005499:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	1000549b: R_386_32	installKey
100054a0:	a1 00 00 00 00       	mov    eax,ds:0x0	100054a1: R_386_32	term
100054a5:	83 ec 04             	sub    esp,0x4
100054a8:	6a 0c                	push   0xc
100054aa:	6a 18                	push   0x18
100054ac:	50                   	push   eax
100054ad:	e8 fc ff ff ff       	call   100054ae <begin(void*)+0x7fc>	100054ae: R_386_PC32	VgaText::setCursor(int, int)
100054b2:	83 c4 10             	add    esp,0x10
100054b5:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100054b7: R_386_32	Krnl::computer
100054bb:	a1 00 00 00 00       	mov    eax,ds:0x0	100054bc: R_386_32	Krnl::computer
100054c0:	8b 00                	mov    eax,DWORD PTR [eax]
100054c2:	83 c0 0c             	add    eax,0xc
100054c5:	8b 00                	mov    eax,DWORD PTR [eax]
100054c7:	6a 00                	push   0x0
100054c9:	6a 00                	push   0x0
100054cb:	6a 01                	push   0x1
100054cd:	52                   	push   edx
100054ce:	ff d0                	call   eax
100054d0:	83 c4 10             	add    esp,0x10
100054d3:	a1 00 00 00 00       	mov    eax,ds:0x0	100054d4: R_386_32	term
100054d8:	6a 0f                	push   0xf
100054da:	6a 0c                	push   0xc
100054dc:	68 f4 c1 00 10       	push   0x1000c1f4	100054dd: R_386_32	.text
100054e1:	50                   	push   eax
100054e2:	e8 fc ff ff ff       	call   100054e3 <begin(void*)+0x831>	100054e3: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
100054e7:	83 c4 10             	add    esp,0x10
100054ea:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100054ec: R_386_32	VgaText::hiddenOut
100054f1:	83 ec 0c             	sub    esp,0xc
100054f4:	68 24 07 00 00       	push   0x724
100054f9:	e8 fc ff ff ff       	call   100054fa <begin(void*)+0x848>	100054fa: R_386_PC32	operator new(unsigned long)
100054fe:	83 c4 10             	add    esp,0x10
10005501:	89 c3                	mov    ebx,eax
10005503:	6a 00                	push   0x0
10005505:	6a 00                	push   0x0
10005507:	68 7a c0 00 10       	push   0x1000c07a	10005508: R_386_32	.text
1000550c:	53                   	push   ebx
1000550d:	e8 fc ff ff ff       	call   1000550e <begin(void*)+0x85c>	1000550e: R_386_PC32	Process::Process(char const*, Process*, char**)
10005512:	83 c4 10             	add    esp,0x10
10005515:	89 5d d0             	mov    DWORD PTR [ebp-0x30],ebx
10005518:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000551b:	8b 80 06 05 00 00    	mov    eax,DWORD PTR [eax+0x506]
10005521:	83 ec 0c             	sub    esp,0xc
10005524:	50                   	push   eax
10005525:	e8 fc ff ff ff       	call   10005526 <begin(void*)+0x874>	10005526: R_386_PC32	setActiveTerminal(VgaText*)
1000552a:	83 c4 10             	add    esp,0x10
1000552d:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10005534:	83 7d e0 18          	cmp    DWORD PTR [ebp-0x20],0x18
10005538:	7f 2e                	jg     10005568 <begin(void*)+0x8b6>
1000553a:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [ebp-0x24],0x0
10005541:	83 7d dc 4f          	cmp    DWORD PTR [ebp-0x24],0x4f
10005545:	7f 1c                	jg     10005563 <begin(void*)+0x8b1>
10005547:	83 ec 0c             	sub    esp,0xc
1000554a:	ff 75 e0             	push   DWORD PTR [ebp-0x20]
1000554d:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
10005550:	6a 00                	push   0x0
10005552:	6a 07                	push   0x7
10005554:	6a 20                	push   0x20
10005556:	e8 fc ff ff ff       	call   10005557 <begin(void*)+0x8a5>	10005557: R_386_PC32	HalConsoleWriteCharacter(char, int, int, int, int)
1000555b:	83 c4 20             	add    esp,0x20
1000555e:	ff 45 dc             	inc    DWORD PTR [ebp-0x24]
10005561:	eb de                	jmp    10005541 <begin(void*)+0x88f>
10005563:	ff 45 e0             	inc    DWORD PTR [ebp-0x20]
10005566:	eb cc                	jmp    10005534 <begin(void*)+0x882>
10005568:	83 ec 0c             	sub    esp,0xc
1000556b:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
1000556e:	e8 fc ff ff ff       	call   1000556f <begin(void*)+0x8bd>	1000556f: R_386_PC32	Process::createUserThread()
10005573:	83 c4 10             	add    esp,0x10
10005576:	8b 45 a8             	mov    eax,DWORD PTR [ebp-0x58]
10005579:	8b 55 ac             	mov    edx,DWORD PTR [ebp-0x54]
1000557c:	89 c1                	mov    ecx,eax
1000557e:	83 f1 01             	xor    ecx,0x1
10005581:	89 8d a0 fd ff ff    	mov    DWORD PTR [ebp-0x260],ecx
10005587:	89 d0                	mov    eax,edx
10005589:	80 f4 00             	xor    ah,0x0
1000558c:	89 85 a4 fd ff ff    	mov    DWORD PTR [ebp-0x25c],eax
10005592:	8b 8d a0 fd ff ff    	mov    ecx,DWORD PTR [ebp-0x260]
10005598:	8b 9d a4 fd ff ff    	mov    ebx,DWORD PTR [ebp-0x25c]
1000559e:	89 d8                	mov    eax,ebx
100055a0:	09 c8                	or     eax,ecx
100055a2:	85 c0                	test   eax,eax
100055a4:	75 17                	jne    100055bd <begin(void*)+0x90b>
100055a6:	a1 00 00 00 00       	mov    eax,ds:0x0	100055a7: R_386_32	kernelProcess
100055ab:	6a 01                	push   0x1
100055ad:	6a 00                	push   0x0
100055af:	68 00 00 00 00       	push   0x0	100055b0: R_386_32	startGUI(void*)
100055b4:	50                   	push   eax
100055b5:	e8 fc ff ff ff       	call   100055b6 <begin(void*)+0x904>	100055b6: R_386_PC32	Process::createThread(void (*)(void*), void*, int)
100055ba:	83 c4 10             	add    esp,0x10
100055bd:	8b 45 a8             	mov    eax,DWORD PTR [ebp-0x58]
100055c0:	8b 55 ac             	mov    edx,DWORD PTR [ebp-0x54]
100055c3:	89 c6                	mov    esi,eax
100055c5:	83 f6 02             	xor    esi,0x2
100055c8:	89 b5 98 fd ff ff    	mov    DWORD PTR [ebp-0x268],esi
100055ce:	89 d0                	mov    eax,edx
100055d0:	80 f4 00             	xor    ah,0x0
100055d3:	89 85 9c fd ff ff    	mov    DWORD PTR [ebp-0x264],eax
100055d9:	8b b5 98 fd ff ff    	mov    esi,DWORD PTR [ebp-0x268]
100055df:	8b bd 9c fd ff ff    	mov    edi,DWORD PTR [ebp-0x264]
100055e5:	89 f8                	mov    eax,edi
100055e7:	09 f0                	or     eax,esi
100055e9:	85 c0                	test   eax,eax
100055eb:	75 17                	jne    10005604 <begin(void*)+0x952>
100055ed:	a1 00 00 00 00       	mov    eax,ds:0x0	100055ee: R_386_32	kernelProcess
100055f2:	6a 01                	push   0x1
100055f4:	6a 00                	push   0x0
100055f6:	68 00 00 00 00       	push   0x0	100055f7: R_386_32	startGUIVESA(void*)
100055fb:	50                   	push   eax
100055fc:	e8 fc ff ff ff       	call   100055fd <begin(void*)+0x94b>	100055fd: R_386_PC32	Process::createThread(void (*)(void*), void*, int)
10005601:	83 c4 10             	add    esp,0x10
10005604:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005607:	8b 00                	mov    eax,DWORD PTR [eax]
10005609:	83 ec 04             	sub    esp,0x4
1000560c:	6a 00                	push   0x0
1000560e:	8d 55 a4             	lea    edx,[ebp-0x5c]
10005611:	52                   	push   edx
10005612:	50                   	push   eax
10005613:	e8 fc ff ff ff       	call   10005614 <begin(void*)+0x962>	10005614: R_386_PC32	waitTask(int, int*, int)
10005618:	83 c4 10             	add    esp,0x10
1000561b:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	1000561d: R_386_32	Krnl::computer
10005621:	a1 00 00 00 00       	mov    eax,ds:0x0	10005622: R_386_32	Krnl::computer
10005626:	8b 00                	mov    eax,DWORD PTR [eax]
10005628:	83 c0 0c             	add    eax,0xc
1000562b:	8b 00                	mov    eax,DWORD PTR [eax]
1000562d:	6a 00                	push   0x0
1000562f:	6a 00                	push   0x0
10005631:	6a 00                	push   0x0
10005633:	52                   	push   edx
10005634:	ff d0                	call   eax
10005636:	83 c4 10             	add    esp,0x10
10005639:	83 ec 0c             	sub    esp,0xc
1000563c:	68 68 c2 00 10       	push   0x1000c268	1000563d: R_386_32	.text
10005641:	e8 fc ff ff ff       	call   10005642 <begin(void*)+0x990>	10005642: R_386_PC32	KePanic(char const*)
10005646:	83 c4 10             	add    esp,0x10
10005649:	eb fe                	jmp    10005649 <begin(void*)+0x997>

1000564b <clean>:
1000564b:	55                   	push   ebp
1000564c:	89 e5                	mov    ebp,esp
1000564e:	83 ec 08             	sub    esp,0x8
10005651:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005654:	83 ec 04             	sub    esp,0x4
10005657:	50                   	push   eax
10005658:	6a 00                	push   0x0
1000565a:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000565d:	e8 fc ff ff ff       	call   1000565e <clean+0x13>	1000565e: R_386_PC32	memset
10005662:	83 c4 10             	add    esp,0x10
10005665:	90                   	nop
10005666:	c9                   	leave  
10005667:	c3                   	ret    

10005668 <BF_decode>:
10005668:	55                   	push   ebp
10005669:	89 e5                	mov    ebp,esp
1000566b:	53                   	push   ebx
1000566c:	83 ec 20             	sub    esp,0x20
1000566f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10005672:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
10005675:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
10005678:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000567b:	01 d0                	add    eax,edx
1000567d:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10005680:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005683:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10005686:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10005689:	8d 50 01             	lea    edx,[eax+0x1]
1000568c:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
1000568f:	8a 00                	mov    al,BYTE PTR [eax]
10005691:	0f b6 c0             	movzx  eax,al
10005694:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10005697:	83 6d ec 20          	sub    DWORD PTR [ebp-0x14],0x20
1000569b:	83 7d ec 5f          	cmp    DWORD PTR [ebp-0x14],0x5f
1000569f:	76 0a                	jbe    100056ab <BF_decode+0x43>
100056a1:	b8 ff ff ff ff       	mov    eax,0xffffffff
100056a6:	e9 8e 01 00 00       	jmp    10005839 <BF_decode+0x1d1>
100056ab:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100056ae:	05 60 d4 00 10       	add    eax,0x1000d460	100056af: R_386_32	.data
100056b3:	8a 00                	mov    al,BYTE PTR [eax]
100056b5:	0f b6 c0             	movzx  eax,al
100056b8:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
100056bb:	83 7d ec 3f          	cmp    DWORD PTR [ebp-0x14],0x3f
100056bf:	76 0a                	jbe    100056cb <BF_decode+0x63>
100056c1:	b8 ff ff ff ff       	mov    eax,0xffffffff
100056c6:	e9 6e 01 00 00       	jmp    10005839 <BF_decode+0x1d1>
100056cb:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100056ce:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
100056d1:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
100056d4:	8d 50 01             	lea    edx,[eax+0x1]
100056d7:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
100056da:	8a 00                	mov    al,BYTE PTR [eax]
100056dc:	0f b6 c0             	movzx  eax,al
100056df:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
100056e2:	83 6d ec 20          	sub    DWORD PTR [ebp-0x14],0x20
100056e6:	83 7d ec 5f          	cmp    DWORD PTR [ebp-0x14],0x5f
100056ea:	76 0a                	jbe    100056f6 <BF_decode+0x8e>
100056ec:	b8 ff ff ff ff       	mov    eax,0xffffffff
100056f1:	e9 43 01 00 00       	jmp    10005839 <BF_decode+0x1d1>
100056f6:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100056f9:	05 60 d4 00 10       	add    eax,0x1000d460	100056fa: R_386_32	.data
100056fe:	8a 00                	mov    al,BYTE PTR [eax]
10005700:	0f b6 c0             	movzx  eax,al
10005703:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10005706:	83 7d ec 3f          	cmp    DWORD PTR [ebp-0x14],0x3f
1000570a:	76 0a                	jbe    10005716 <BF_decode+0xae>
1000570c:	b8 ff ff ff ff       	mov    eax,0xffffffff
10005711:	e9 23 01 00 00       	jmp    10005839 <BF_decode+0x1d1>
10005716:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10005719:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000571c:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
1000571f:	8d 1c 85 00 00 00 00 	lea    ebx,[eax*4+0x0]
10005726:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005729:	c1 e8 04             	shr    eax,0x4
1000572c:	83 e0 03             	and    eax,0x3
1000572f:	88 c1                	mov    cl,al
10005731:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10005734:	8d 50 01             	lea    edx,[eax+0x1]
10005737:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
1000573a:	09 cb                	or     ebx,ecx
1000573c:	88 da                	mov    dl,bl
1000573e:	88 10                	mov    BYTE PTR [eax],dl
10005740:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10005743:	3b 45 f0             	cmp    eax,DWORD PTR [ebp-0x10]
10005746:	0f 83 e4 00 00 00    	jae    10005830 <BF_decode+0x1c8>
1000574c:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000574f:	8d 50 01             	lea    edx,[eax+0x1]
10005752:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10005755:	8a 00                	mov    al,BYTE PTR [eax]
10005757:	0f b6 c0             	movzx  eax,al
1000575a:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000575d:	83 6d ec 20          	sub    DWORD PTR [ebp-0x14],0x20
10005761:	83 7d ec 5f          	cmp    DWORD PTR [ebp-0x14],0x5f
10005765:	76 0a                	jbe    10005771 <BF_decode+0x109>
10005767:	b8 ff ff ff ff       	mov    eax,0xffffffff
1000576c:	e9 c8 00 00 00       	jmp    10005839 <BF_decode+0x1d1>
10005771:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10005774:	05 60 d4 00 10       	add    eax,0x1000d460	10005775: R_386_32	.data
10005779:	8a 00                	mov    al,BYTE PTR [eax]
1000577b:	0f b6 c0             	movzx  eax,al
1000577e:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10005781:	83 7d ec 3f          	cmp    DWORD PTR [ebp-0x14],0x3f
10005785:	76 0a                	jbe    10005791 <BF_decode+0x129>
10005787:	b8 ff ff ff ff       	mov    eax,0xffffffff
1000578c:	e9 a8 00 00 00       	jmp    10005839 <BF_decode+0x1d1>
10005791:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10005794:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10005797:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000579a:	c1 e0 04             	shl    eax,0x4
1000579d:	88 c3                	mov    bl,al
1000579f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100057a2:	c1 e8 02             	shr    eax,0x2
100057a5:	83 e0 0f             	and    eax,0xf
100057a8:	88 c1                	mov    cl,al
100057aa:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100057ad:	8d 50 01             	lea    edx,[eax+0x1]
100057b0:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
100057b3:	09 cb                	or     ebx,ecx
100057b5:	88 da                	mov    dl,bl
100057b7:	88 10                	mov    BYTE PTR [eax],dl
100057b9:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100057bc:	3b 45 f0             	cmp    eax,DWORD PTR [ebp-0x10]
100057bf:	73 72                	jae    10005833 <BF_decode+0x1cb>
100057c1:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
100057c4:	8d 50 01             	lea    edx,[eax+0x1]
100057c7:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
100057ca:	8a 00                	mov    al,BYTE PTR [eax]
100057cc:	0f b6 c0             	movzx  eax,al
100057cf:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
100057d2:	83 6d ec 20          	sub    DWORD PTR [ebp-0x14],0x20
100057d6:	83 7d ec 5f          	cmp    DWORD PTR [ebp-0x14],0x5f
100057da:	76 07                	jbe    100057e3 <BF_decode+0x17b>
100057dc:	b8 ff ff ff ff       	mov    eax,0xffffffff
100057e1:	eb 56                	jmp    10005839 <BF_decode+0x1d1>
100057e3:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100057e6:	05 60 d4 00 10       	add    eax,0x1000d460	100057e7: R_386_32	.data
100057eb:	8a 00                	mov    al,BYTE PTR [eax]
100057ed:	0f b6 c0             	movzx  eax,al
100057f0:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
100057f3:	83 7d ec 3f          	cmp    DWORD PTR [ebp-0x14],0x3f
100057f7:	76 07                	jbe    10005800 <BF_decode+0x198>
100057f9:	b8 ff ff ff ff       	mov    eax,0xffffffff
100057fe:	eb 39                	jmp    10005839 <BF_decode+0x1d1>
10005800:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10005803:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10005806:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005809:	c1 e0 06             	shl    eax,0x6
1000580c:	88 c3                	mov    bl,al
1000580e:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10005811:	88 c1                	mov    cl,al
10005813:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10005816:	8d 50 01             	lea    edx,[eax+0x1]
10005819:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
1000581c:	09 cb                	or     ebx,ecx
1000581e:	88 da                	mov    dl,bl
10005820:	88 10                	mov    BYTE PTR [eax],dl
10005822:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10005825:	3b 45 f0             	cmp    eax,DWORD PTR [ebp-0x10]
10005828:	0f 82 58 fe ff ff    	jb     10005686 <BF_decode+0x1e>
1000582e:	eb 04                	jmp    10005834 <BF_decode+0x1cc>
10005830:	90                   	nop
10005831:	eb 01                	jmp    10005834 <BF_decode+0x1cc>
10005833:	90                   	nop
10005834:	b8 00 00 00 00       	mov    eax,0x0
10005839:	83 c4 20             	add    esp,0x20
1000583c:	5b                   	pop    ebx
1000583d:	5d                   	pop    ebp
1000583e:	c3                   	ret    

1000583f <BF_encode>:
1000583f:	55                   	push   ebp
10005840:	89 e5                	mov    ebp,esp
10005842:	83 ec 20             	sub    esp,0x20
10005845:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005848:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000584b:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
1000584e:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10005851:	01 d0                	add    eax,edx
10005853:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10005856:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10005859:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000585c:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000585f:	8d 50 01             	lea    edx,[eax+0x1]
10005862:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
10005865:	8a 00                	mov    al,BYTE PTR [eax]
10005867:	0f b6 c0             	movzx  eax,al
1000586a:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
1000586d:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10005870:	c1 e8 02             	shr    eax,0x2
10005873:	89 c1                	mov    ecx,eax
10005875:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10005878:	8d 50 01             	lea    edx,[eax+0x1]
1000587b:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
1000587e:	8a 91 00 d4 00 10    	mov    dl,BYTE PTR [ecx+0x1000d400]	10005880: R_386_32	.data
10005884:	88 10                	mov    BYTE PTR [eax],dl
10005886:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10005889:	c1 e0 04             	shl    eax,0x4
1000588c:	83 e0 30             	and    eax,0x30
1000588f:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10005892:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10005895:	3b 45 f4             	cmp    eax,DWORD PTR [ebp-0xc]
10005898:	72 1b                	jb     100058b5 <BF_encode+0x76>
1000589a:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000589d:	8d 50 01             	lea    edx,[eax+0x1]
100058a0:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
100058a3:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100058a6:	81 c2 00 d4 00 10    	add    edx,0x1000d400	100058a8: R_386_32	.data
100058ac:	8a 12                	mov    dl,BYTE PTR [edx]
100058ae:	88 10                	mov    BYTE PTR [eax],dl
100058b0:	e9 b1 00 00 00       	jmp    10005966 <BF_encode+0x127>
100058b5:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100058b8:	8d 50 01             	lea    edx,[eax+0x1]
100058bb:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
100058be:	8a 00                	mov    al,BYTE PTR [eax]
100058c0:	0f b6 c0             	movzx  eax,al
100058c3:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
100058c6:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100058c9:	c1 e8 04             	shr    eax,0x4
100058cc:	09 45 f0             	or     DWORD PTR [ebp-0x10],eax
100058cf:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100058d2:	8d 50 01             	lea    edx,[eax+0x1]
100058d5:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
100058d8:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100058db:	81 c2 00 d4 00 10    	add    edx,0x1000d400	100058dd: R_386_32	.data
100058e1:	8a 12                	mov    dl,BYTE PTR [edx]
100058e3:	88 10                	mov    BYTE PTR [eax],dl
100058e5:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100058e8:	c1 e0 02             	shl    eax,0x2
100058eb:	83 e0 3c             	and    eax,0x3c
100058ee:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
100058f1:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100058f4:	3b 45 f4             	cmp    eax,DWORD PTR [ebp-0xc]
100058f7:	72 18                	jb     10005911 <BF_encode+0xd2>
100058f9:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100058fc:	8d 50 01             	lea    edx,[eax+0x1]
100058ff:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10005902:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
10005905:	81 c2 00 d4 00 10    	add    edx,0x1000d400	10005907: R_386_32	.data
1000590b:	8a 12                	mov    dl,BYTE PTR [edx]
1000590d:	88 10                	mov    BYTE PTR [eax],dl
1000590f:	eb 55                	jmp    10005966 <BF_encode+0x127>
10005911:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10005914:	8d 50 01             	lea    edx,[eax+0x1]
10005917:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
1000591a:	8a 00                	mov    al,BYTE PTR [eax]
1000591c:	0f b6 c0             	movzx  eax,al
1000591f:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10005922:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10005925:	c1 e8 06             	shr    eax,0x6
10005928:	09 45 f0             	or     DWORD PTR [ebp-0x10],eax
1000592b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000592e:	8d 50 01             	lea    edx,[eax+0x1]
10005931:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10005934:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
10005937:	81 c2 00 d4 00 10    	add    edx,0x1000d400	10005939: R_386_32	.data
1000593d:	8a 12                	mov    dl,BYTE PTR [edx]
1000593f:	88 10                	mov    BYTE PTR [eax],dl
10005941:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10005944:	83 e0 3f             	and    eax,0x3f
10005947:	89 c1                	mov    ecx,eax
10005949:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000594c:	8d 50 01             	lea    edx,[eax+0x1]
1000594f:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10005952:	8a 91 00 d4 00 10    	mov    dl,BYTE PTR [ecx+0x1000d400]	10005954: R_386_32	.data
10005958:	88 10                	mov    BYTE PTR [eax],dl
1000595a:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000595d:	3b 45 f4             	cmp    eax,DWORD PTR [ebp-0xc]
10005960:	0f 82 f6 fe ff ff    	jb     1000585c <BF_encode+0x1d>
10005966:	90                   	nop
10005967:	c9                   	leave  
10005968:	c3                   	ret    

10005969 <BF_swap>:
10005969:	55                   	push   ebp
1000596a:	89 e5                	mov    ebp,esp
1000596c:	53                   	push   ebx
1000596d:	83 ec 10             	sub    esp,0x10
10005970:	a0 c0 d4 00 10       	mov    al,ds:0x1000d4c0	10005971: R_386_32	.data
10005975:	84 c0                	test   al,al
10005977:	74 3e                	je     100059b7 <BF_swap+0x4e>
10005979:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000597c:	8b 00                	mov    eax,DWORD PTR [eax]
1000597e:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
10005981:	c1 45 f8 10          	rol    DWORD PTR [ebp-0x8],0x10
10005985:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10005988:	c1 e0 08             	shl    eax,0x8
1000598b:	25 00 ff 00 ff       	and    eax,0xff00ff00
10005990:	89 c3                	mov    ebx,eax
10005992:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10005995:	c1 e8 08             	shr    eax,0x8
10005998:	25 ff 00 ff 00       	and    eax,0xff00ff
1000599d:	89 c1                	mov    ecx,eax
1000599f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100059a2:	8d 50 04             	lea    edx,[eax+0x4]
100059a5:	89 55 08             	mov    DWORD PTR [ebp+0x8],edx
100059a8:	09 cb                	or     ebx,ecx
100059aa:	89 da                	mov    edx,ebx
100059ac:	89 10                	mov    DWORD PTR [eax],edx
100059ae:	ff 4d 0c             	dec    DWORD PTR [ebp+0xc]
100059b1:	83 7d 0c 00          	cmp    DWORD PTR [ebp+0xc],0x0
100059b5:	75 c2                	jne    10005979 <BF_swap+0x10>
100059b7:	90                   	nop
100059b8:	83 c4 10             	add    esp,0x10
100059bb:	5b                   	pop    ebx
100059bc:	5d                   	pop    ebp
100059bd:	c3                   	ret    

100059be <BF_set_key>:
100059be:	55                   	push   ebp
100059bf:	89 e5                	mov    ebp,esp
100059c1:	83 ec 10             	sub    esp,0x10
100059c4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100059c7:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
100059ca:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
100059d1:	eb 76                	jmp    10005a49 <BF_set_key+0x8b>
100059d3:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
100059da:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
100059e1:	eb 26                	jmp    10005a09 <BF_set_key+0x4b>
100059e3:	c1 65 f0 08          	shl    DWORD PTR [ebp-0x10],0x8
100059e7:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100059ea:	8a 00                	mov    al,BYTE PTR [eax]
100059ec:	0f b6 c0             	movzx  eax,al
100059ef:	09 45 f0             	or     DWORD PTR [ebp-0x10],eax
100059f2:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100059f5:	8a 00                	mov    al,BYTE PTR [eax]
100059f7:	84 c0                	test   al,al
100059f9:	75 08                	jne    10005a03 <BF_set_key+0x45>
100059fb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100059fe:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10005a01:	eb 03                	jmp    10005a06 <BF_set_key+0x48>
10005a03:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
10005a06:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10005a09:	83 7d f4 03          	cmp    DWORD PTR [ebp-0xc],0x3
10005a0d:	7e d4                	jle    100059e3 <BF_set_key+0x25>
10005a0f:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10005a12:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10005a19:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a1c:	01 c2                	add    edx,eax
10005a1e:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10005a21:	89 02                	mov    DWORD PTR [edx],eax
10005a23:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10005a26:	05 00 04 00 00       	add    eax,0x400
10005a2b:	8b 04 85 a0 c3 00 10 	mov    eax,DWORD PTR [eax*4+0x1000c3a0]	10005a2e: R_386_32	.data
10005a32:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
10005a35:	8d 0c 95 00 00 00 00 	lea    ecx,[edx*4+0x0]
10005a3c:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
10005a3f:	01 ca                	add    edx,ecx
10005a41:	33 45 f0             	xor    eax,DWORD PTR [ebp-0x10]
10005a44:	89 02                	mov    DWORD PTR [edx],eax
10005a46:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
10005a49:	83 7d f8 11          	cmp    DWORD PTR [ebp-0x8],0x11
10005a4d:	7e 84                	jle    100059d3 <BF_set_key+0x15>
10005a4f:	90                   	nop
10005a50:	c9                   	leave  
10005a51:	c3                   	ret    

10005a52 <_crypt_blowfish_rn>:
10005a52:	55                   	push   ebp
10005a53:	89 e5                	mov    ebp,esp
10005a55:	57                   	push   edi
10005a56:	56                   	push   esi
10005a57:	53                   	push   ebx
10005a58:	81 ec dc 10 00 00    	sub    esp,0x10dc
10005a5e:	83 7d 14 3c          	cmp    DWORD PTR [ebp+0x14],0x3c
10005a62:	7f 14                	jg     10005a78 <_crypt_blowfish_rn+0x26>
10005a64:	c7 05 00 00 00 00 22 00 00 00 	mov    DWORD PTR ds:0x0,0x22	10005a66: R_386_32	_bcrypt_errno
10005a6e:	b8 00 00 00 00       	mov    eax,0x0
10005a73:	e9 dd 5c 00 00       	jmp    1000b755 <_crypt_blowfish_rn+0x5d03>
10005a78:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a7b:	8a 00                	mov    al,BYTE PTR [eax]
10005a7d:	3c 24                	cmp    al,0x24
10005a7f:	75 76                	jne    10005af7 <_crypt_blowfish_rn+0xa5>
10005a81:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a84:	40                   	inc    eax
10005a85:	8a 00                	mov    al,BYTE PTR [eax]
10005a87:	3c 32                	cmp    al,0x32
10005a89:	75 6c                	jne    10005af7 <_crypt_blowfish_rn+0xa5>
10005a8b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a8e:	83 c0 02             	add    eax,0x2
10005a91:	8a 00                	mov    al,BYTE PTR [eax]
10005a93:	3c 61                	cmp    al,0x61
10005a95:	75 60                	jne    10005af7 <_crypt_blowfish_rn+0xa5>
10005a97:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a9a:	83 c0 03             	add    eax,0x3
10005a9d:	8a 00                	mov    al,BYTE PTR [eax]
10005a9f:	3c 24                	cmp    al,0x24
10005aa1:	75 54                	jne    10005af7 <_crypt_blowfish_rn+0xa5>
10005aa3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005aa6:	83 c0 04             	add    eax,0x4
10005aa9:	8a 00                	mov    al,BYTE PTR [eax]
10005aab:	3c 2f                	cmp    al,0x2f
10005aad:	7e 48                	jle    10005af7 <_crypt_blowfish_rn+0xa5>
10005aaf:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005ab2:	83 c0 04             	add    eax,0x4
10005ab5:	8a 00                	mov    al,BYTE PTR [eax]
10005ab7:	3c 33                	cmp    al,0x33
10005ab9:	7f 3c                	jg     10005af7 <_crypt_blowfish_rn+0xa5>
10005abb:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005abe:	83 c0 05             	add    eax,0x5
10005ac1:	8a 00                	mov    al,BYTE PTR [eax]
10005ac3:	3c 2f                	cmp    al,0x2f
10005ac5:	7e 30                	jle    10005af7 <_crypt_blowfish_rn+0xa5>
10005ac7:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005aca:	83 c0 05             	add    eax,0x5
10005acd:	8a 00                	mov    al,BYTE PTR [eax]
10005acf:	3c 39                	cmp    al,0x39
10005ad1:	7f 24                	jg     10005af7 <_crypt_blowfish_rn+0xa5>
10005ad3:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005ad6:	83 c0 04             	add    eax,0x4
10005ad9:	8a 00                	mov    al,BYTE PTR [eax]
10005adb:	3c 33                	cmp    al,0x33
10005add:	75 0c                	jne    10005aeb <_crypt_blowfish_rn+0x99>
10005adf:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005ae2:	83 c0 05             	add    eax,0x5
10005ae5:	8a 00                	mov    al,BYTE PTR [eax]
10005ae7:	3c 31                	cmp    al,0x31
10005ae9:	7f 0c                	jg     10005af7 <_crypt_blowfish_rn+0xa5>
10005aeb:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005aee:	83 c0 06             	add    eax,0x6
10005af1:	8a 00                	mov    al,BYTE PTR [eax]
10005af3:	3c 24                	cmp    al,0x24
10005af5:	74 14                	je     10005b0b <_crypt_blowfish_rn+0xb9>
10005af7:	c7 05 00 00 00 00 16 00 00 00 	mov    DWORD PTR ds:0x0,0x16	10005af9: R_386_32	_bcrypt_errno
10005b01:	b8 00 00 00 00       	mov    eax,0x0
10005b06:	e9 4a 5c 00 00       	jmp    1000b755 <_crypt_blowfish_rn+0x5d03>
10005b0b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005b0e:	83 c0 04             	add    eax,0x4
10005b11:	8a 00                	mov    al,BYTE PTR [eax]
10005b13:	0f be c0             	movsx  eax,al
10005b16:	8d 50 d0             	lea    edx,[eax-0x30]
10005b19:	89 d0                	mov    eax,edx
10005b1b:	c1 e0 02             	shl    eax,0x2
10005b1e:	01 d0                	add    eax,edx
10005b20:	01 c0                	add    eax,eax
10005b22:	89 c2                	mov    edx,eax
10005b24:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005b27:	83 c0 05             	add    eax,0x5
10005b2a:	8a 00                	mov    al,BYTE PTR [eax]
10005b2c:	0f be c0             	movsx  eax,al
10005b2f:	83 e8 30             	sub    eax,0x30
10005b32:	01 d0                	add    eax,edx
10005b34:	ba 01 00 00 00       	mov    edx,0x1
10005b39:	88 c1                	mov    cl,al
10005b3b:	d3 e2                	shl    edx,cl
10005b3d:	89 d0                	mov    eax,edx
10005b3f:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10005b42:	83 7d d8 0f          	cmp    DWORD PTR [ebp-0x28],0xf
10005b46:	76 21                	jbe    10005b69 <_crypt_blowfish_rn+0x117>
10005b48:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005b4b:	83 c0 07             	add    eax,0x7
10005b4e:	6a 10                	push   0x10
10005b50:	50                   	push   eax
10005b51:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005b57:	05 90 10 00 00       	add    eax,0x1090
10005b5c:	50                   	push   eax
10005b5d:	e8 06 fb ff ff       	call   10005668 <BF_decode>
10005b62:	83 c4 0c             	add    esp,0xc
10005b65:	85 c0                	test   eax,eax
10005b67:	74 2d                	je     10005b96 <_crypt_blowfish_rn+0x144>
10005b69:	83 ec 08             	sub    esp,0x8
10005b6c:	6a 10                	push   0x10
10005b6e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005b74:	05 90 10 00 00       	add    eax,0x1090
10005b79:	50                   	push   eax
10005b7a:	e8 cc fa ff ff       	call   1000564b <clean>
10005b7f:	83 c4 10             	add    esp,0x10
10005b82:	c7 05 00 00 00 00 16 00 00 00 	mov    DWORD PTR ds:0x0,0x16	10005b84: R_386_32	_bcrypt_errno
10005b8c:	b8 00 00 00 00       	mov    eax,0x0
10005b91:	e9 bf 5b 00 00       	jmp    1000b755 <_crypt_blowfish_rn+0x5d03>
10005b96:	83 ec 08             	sub    esp,0x8
10005b99:	6a 04                	push   0x4
10005b9b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005ba1:	05 90 10 00 00       	add    eax,0x1090
10005ba6:	50                   	push   eax
10005ba7:	e8 bd fd ff ff       	call   10005969 <BF_swap>
10005bac:	83 c4 10             	add    esp,0x10
10005baf:	83 ec 04             	sub    esp,0x4
10005bb2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005bb8:	05 00 10 00 00       	add    eax,0x1000
10005bbd:	50                   	push   eax
10005bbe:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005bc4:	05 48 10 00 00       	add    eax,0x1048
10005bc9:	50                   	push   eax
10005bca:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10005bcd:	e8 ec fd ff ff       	call   100059be <BF_set_key>
10005bd2:	83 c4 10             	add    esp,0x10
10005bd5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005bdb:	bb a0 c3 00 10       	mov    ebx,0x1000c3a0	10005bdc: R_386_32	.data
10005be0:	ba 00 04 00 00       	mov    edx,0x400
10005be5:	89 c7                	mov    edi,eax
10005be7:	89 de                	mov    esi,ebx
10005be9:	89 d1                	mov    ecx,edx
10005beb:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10005bed:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10005bf4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005bf7:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10005bfa:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [ebp-0x2c],0x0
10005c01:	e9 17 0b 00 00       	jmp    1000671d <_crypt_blowfish_rn+0xccb>
10005c06:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10005c09:	83 e0 02             	and    eax,0x2
10005c0c:	05 24 04 00 00       	add    eax,0x424
10005c11:	8b 84 85 1c ef ff ff 	mov    eax,DWORD PTR [ebp+eax*4-0x10e4]
10005c18:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10005c1b:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10005c1e:	83 e0 02             	and    eax,0x2
10005c21:	40                   	inc    eax
10005c22:	05 24 04 00 00       	add    eax,0x424
10005c27:	8b 84 85 1c ef ff ff 	mov    eax,DWORD PTR [ebp+eax*4-0x10e4]
10005c2e:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10005c31:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
10005c37:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10005c3a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005c3d:	0f b6 c0             	movzx  eax,al
10005c40:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005c43:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10005c47:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005c4a:	c1 e8 06             	shr    eax,0x6
10005c4d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005c50:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10005c57:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005c5a:	c1 e8 0e             	shr    eax,0xe
10005c5d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005c60:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10005c67:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005c6a:	c1 e8 16             	shr    eax,0x16
10005c6d:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10005c70:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10005c77:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005c7d:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10005c83:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005c86:	01 d0                	add    eax,edx
10005c88:	8b 00                	mov    eax,DWORD PTR [eax]
10005c8a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005c8d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005c93:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10005c99:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005c9c:	01 d0                	add    eax,edx
10005c9e:	8b 00                	mov    eax,DWORD PTR [eax]
10005ca0:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005ca3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005ca9:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10005caf:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005cb2:	01 d0                	add    eax,edx
10005cb4:	8b 00                	mov    eax,DWORD PTR [eax]
10005cb6:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005cb9:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10005cbf:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10005cc2:	01 d0                	add    eax,edx
10005cc4:	8b 00                	mov    eax,DWORD PTR [eax]
10005cc6:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005cc9:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005ccc:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10005ccf:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
10005cd5:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10005cd8:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005cdb:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005cde:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005ce1:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10005ce4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005ce7:	0f b6 c0             	movzx  eax,al
10005cea:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005ced:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10005cf1:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005cf4:	c1 e8 06             	shr    eax,0x6
10005cf7:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005cfa:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10005d01:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005d04:	c1 e8 0e             	shr    eax,0xe
10005d07:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005d0a:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10005d11:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005d14:	c1 e8 16             	shr    eax,0x16
10005d17:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10005d1a:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10005d21:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005d27:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10005d2d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005d30:	01 d0                	add    eax,edx
10005d32:	8b 00                	mov    eax,DWORD PTR [eax]
10005d34:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005d37:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005d3d:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10005d43:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005d46:	01 d0                	add    eax,edx
10005d48:	8b 00                	mov    eax,DWORD PTR [eax]
10005d4a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005d4d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005d53:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10005d59:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005d5c:	01 d0                	add    eax,edx
10005d5e:	8b 00                	mov    eax,DWORD PTR [eax]
10005d60:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005d63:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10005d69:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10005d6c:	01 d0                	add    eax,edx
10005d6e:	8b 00                	mov    eax,DWORD PTR [eax]
10005d70:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005d73:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005d76:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10005d79:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
10005d7f:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10005d82:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005d85:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005d88:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005d8b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10005d8e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005d91:	0f b6 c0             	movzx  eax,al
10005d94:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005d97:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10005d9b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005d9e:	c1 e8 06             	shr    eax,0x6
10005da1:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005da4:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10005dab:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005dae:	c1 e8 0e             	shr    eax,0xe
10005db1:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005db4:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10005dbb:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005dbe:	c1 e8 16             	shr    eax,0x16
10005dc1:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10005dc4:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10005dcb:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005dd1:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10005dd7:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005dda:	01 d0                	add    eax,edx
10005ddc:	8b 00                	mov    eax,DWORD PTR [eax]
10005dde:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005de1:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005de7:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10005ded:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005df0:	01 d0                	add    eax,edx
10005df2:	8b 00                	mov    eax,DWORD PTR [eax]
10005df4:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005df7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005dfd:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10005e03:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005e06:	01 d0                	add    eax,edx
10005e08:	8b 00                	mov    eax,DWORD PTR [eax]
10005e0a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005e0d:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10005e13:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10005e16:	01 d0                	add    eax,edx
10005e18:	8b 00                	mov    eax,DWORD PTR [eax]
10005e1a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005e1d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005e20:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10005e23:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
10005e29:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10005e2c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005e2f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005e32:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005e35:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10005e38:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005e3b:	0f b6 c0             	movzx  eax,al
10005e3e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005e41:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10005e45:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005e48:	c1 e8 06             	shr    eax,0x6
10005e4b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005e4e:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10005e55:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005e58:	c1 e8 0e             	shr    eax,0xe
10005e5b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005e5e:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10005e65:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005e68:	c1 e8 16             	shr    eax,0x16
10005e6b:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10005e6e:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10005e75:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005e7b:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10005e81:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005e84:	01 d0                	add    eax,edx
10005e86:	8b 00                	mov    eax,DWORD PTR [eax]
10005e88:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005e8b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005e91:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10005e97:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005e9a:	01 d0                	add    eax,edx
10005e9c:	8b 00                	mov    eax,DWORD PTR [eax]
10005e9e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005ea1:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005ea7:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10005ead:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005eb0:	01 d0                	add    eax,edx
10005eb2:	8b 00                	mov    eax,DWORD PTR [eax]
10005eb4:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005eb7:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10005ebd:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10005ec0:	01 d0                	add    eax,edx
10005ec2:	8b 00                	mov    eax,DWORD PTR [eax]
10005ec4:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005ec7:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005eca:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10005ecd:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
10005ed3:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10005ed6:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005ed9:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005edc:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005edf:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10005ee2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005ee5:	0f b6 c0             	movzx  eax,al
10005ee8:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005eeb:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10005eef:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005ef2:	c1 e8 06             	shr    eax,0x6
10005ef5:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005ef8:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10005eff:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005f02:	c1 e8 0e             	shr    eax,0xe
10005f05:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005f08:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10005f0f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005f12:	c1 e8 16             	shr    eax,0x16
10005f15:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10005f18:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10005f1f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005f25:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10005f2b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005f2e:	01 d0                	add    eax,edx
10005f30:	8b 00                	mov    eax,DWORD PTR [eax]
10005f32:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005f35:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005f3b:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10005f41:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005f44:	01 d0                	add    eax,edx
10005f46:	8b 00                	mov    eax,DWORD PTR [eax]
10005f48:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005f4b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005f51:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10005f57:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005f5a:	01 d0                	add    eax,edx
10005f5c:	8b 00                	mov    eax,DWORD PTR [eax]
10005f5e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005f61:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10005f67:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10005f6a:	01 d0                	add    eax,edx
10005f6c:	8b 00                	mov    eax,DWORD PTR [eax]
10005f6e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005f71:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005f74:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10005f77:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
10005f7d:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10005f80:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005f83:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005f86:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005f89:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10005f8c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005f8f:	0f b6 c0             	movzx  eax,al
10005f92:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005f95:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10005f99:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005f9c:	c1 e8 06             	shr    eax,0x6
10005f9f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005fa2:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10005fa9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005fac:	c1 e8 0e             	shr    eax,0xe
10005faf:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005fb2:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10005fb9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005fbc:	c1 e8 16             	shr    eax,0x16
10005fbf:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10005fc2:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10005fc9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005fcf:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10005fd5:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005fd8:	01 d0                	add    eax,edx
10005fda:	8b 00                	mov    eax,DWORD PTR [eax]
10005fdc:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005fdf:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005fe5:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10005feb:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005fee:	01 d0                	add    eax,edx
10005ff0:	8b 00                	mov    eax,DWORD PTR [eax]
10005ff2:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005ff5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005ffb:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006001:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006004:	01 d0                	add    eax,edx
10006006:	8b 00                	mov    eax,DWORD PTR [eax]
10006008:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000600b:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006011:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006014:	01 d0                	add    eax,edx
10006016:	8b 00                	mov    eax,DWORD PTR [eax]
10006018:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000601b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000601e:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006021:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
10006027:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000602a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000602d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006030:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006033:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006036:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006039:	0f b6 c0             	movzx  eax,al
1000603c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000603f:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006043:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006046:	c1 e8 06             	shr    eax,0x6
10006049:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000604c:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006053:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006056:	c1 e8 0e             	shr    eax,0xe
10006059:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000605c:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006063:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006066:	c1 e8 16             	shr    eax,0x16
10006069:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000606c:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006073:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006079:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000607f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006082:	01 d0                	add    eax,edx
10006084:	8b 00                	mov    eax,DWORD PTR [eax]
10006086:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006089:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000608f:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006095:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006098:	01 d0                	add    eax,edx
1000609a:	8b 00                	mov    eax,DWORD PTR [eax]
1000609c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000609f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100060a5:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100060ab:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100060ae:	01 d0                	add    eax,edx
100060b0:	8b 00                	mov    eax,DWORD PTR [eax]
100060b2:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100060b5:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100060bb:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100060be:	01 d0                	add    eax,edx
100060c0:	8b 00                	mov    eax,DWORD PTR [eax]
100060c2:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100060c5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100060c8:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100060cb:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
100060d1:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100060d4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100060d7:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100060da:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100060dd:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100060e0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100060e3:	0f b6 c0             	movzx  eax,al
100060e6:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100060e9:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100060ed:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100060f0:	c1 e8 06             	shr    eax,0x6
100060f3:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100060f6:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100060fd:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006100:	c1 e8 0e             	shr    eax,0xe
10006103:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006106:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000610d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006110:	c1 e8 16             	shr    eax,0x16
10006113:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006116:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000611d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006123:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006129:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000612c:	01 d0                	add    eax,edx
1000612e:	8b 00                	mov    eax,DWORD PTR [eax]
10006130:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006133:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006139:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000613f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006142:	01 d0                	add    eax,edx
10006144:	8b 00                	mov    eax,DWORD PTR [eax]
10006146:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006149:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000614f:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006155:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006158:	01 d0                	add    eax,edx
1000615a:	8b 00                	mov    eax,DWORD PTR [eax]
1000615c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000615f:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006165:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006168:	01 d0                	add    eax,edx
1000616a:	8b 00                	mov    eax,DWORD PTR [eax]
1000616c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000616f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006172:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006175:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
1000617b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000617e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006181:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006184:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006187:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000618a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000618d:	0f b6 c0             	movzx  eax,al
10006190:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006193:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006197:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000619a:	c1 e8 06             	shr    eax,0x6
1000619d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100061a0:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100061a7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100061aa:	c1 e8 0e             	shr    eax,0xe
100061ad:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100061b0:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100061b7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100061ba:	c1 e8 16             	shr    eax,0x16
100061bd:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100061c0:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100061c7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100061cd:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100061d3:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100061d6:	01 d0                	add    eax,edx
100061d8:	8b 00                	mov    eax,DWORD PTR [eax]
100061da:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100061dd:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100061e3:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100061e9:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100061ec:	01 d0                	add    eax,edx
100061ee:	8b 00                	mov    eax,DWORD PTR [eax]
100061f0:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100061f3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100061f9:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100061ff:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006202:	01 d0                	add    eax,edx
10006204:	8b 00                	mov    eax,DWORD PTR [eax]
10006206:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006209:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000620f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006212:	01 d0                	add    eax,edx
10006214:	8b 00                	mov    eax,DWORD PTR [eax]
10006216:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006219:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000621c:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000621f:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
10006225:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006228:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000622b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000622e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006231:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006234:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006237:	0f b6 c0             	movzx  eax,al
1000623a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000623d:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006241:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006244:	c1 e8 06             	shr    eax,0x6
10006247:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000624a:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006251:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006254:	c1 e8 0e             	shr    eax,0xe
10006257:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000625a:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006261:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006264:	c1 e8 16             	shr    eax,0x16
10006267:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000626a:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006271:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006277:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000627d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006280:	01 d0                	add    eax,edx
10006282:	8b 00                	mov    eax,DWORD PTR [eax]
10006284:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006287:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000628d:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006293:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006296:	01 d0                	add    eax,edx
10006298:	8b 00                	mov    eax,DWORD PTR [eax]
1000629a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000629d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100062a3:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100062a9:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100062ac:	01 d0                	add    eax,edx
100062ae:	8b 00                	mov    eax,DWORD PTR [eax]
100062b0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100062b3:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100062b9:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100062bc:	01 d0                	add    eax,edx
100062be:	8b 00                	mov    eax,DWORD PTR [eax]
100062c0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100062c3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100062c6:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100062c9:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
100062cf:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100062d2:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100062d5:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100062d8:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100062db:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100062de:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100062e1:	0f b6 c0             	movzx  eax,al
100062e4:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100062e7:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100062eb:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100062ee:	c1 e8 06             	shr    eax,0x6
100062f1:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100062f4:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100062fb:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100062fe:	c1 e8 0e             	shr    eax,0xe
10006301:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006304:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000630b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000630e:	c1 e8 16             	shr    eax,0x16
10006311:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006314:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000631b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006321:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006327:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000632a:	01 d0                	add    eax,edx
1000632c:	8b 00                	mov    eax,DWORD PTR [eax]
1000632e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006331:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006337:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000633d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006340:	01 d0                	add    eax,edx
10006342:	8b 00                	mov    eax,DWORD PTR [eax]
10006344:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006347:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000634d:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006353:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006356:	01 d0                	add    eax,edx
10006358:	8b 00                	mov    eax,DWORD PTR [eax]
1000635a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000635d:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006363:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006366:	01 d0                	add    eax,edx
10006368:	8b 00                	mov    eax,DWORD PTR [eax]
1000636a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000636d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006370:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006373:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
10006379:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000637c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000637f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006382:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006385:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006388:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000638b:	0f b6 c0             	movzx  eax,al
1000638e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006391:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006395:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006398:	c1 e8 06             	shr    eax,0x6
1000639b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000639e:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100063a5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100063a8:	c1 e8 0e             	shr    eax,0xe
100063ab:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100063ae:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100063b5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100063b8:	c1 e8 16             	shr    eax,0x16
100063bb:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100063be:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100063c5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100063cb:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100063d1:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100063d4:	01 d0                	add    eax,edx
100063d6:	8b 00                	mov    eax,DWORD PTR [eax]
100063d8:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100063db:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100063e1:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100063e7:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100063ea:	01 d0                	add    eax,edx
100063ec:	8b 00                	mov    eax,DWORD PTR [eax]
100063ee:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100063f1:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100063f7:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100063fd:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006400:	01 d0                	add    eax,edx
10006402:	8b 00                	mov    eax,DWORD PTR [eax]
10006404:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006407:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000640d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006410:	01 d0                	add    eax,edx
10006412:	8b 00                	mov    eax,DWORD PTR [eax]
10006414:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006417:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000641a:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000641d:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
10006423:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006426:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006429:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000642c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000642f:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006432:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006435:	0f b6 c0             	movzx  eax,al
10006438:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000643b:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000643f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006442:	c1 e8 06             	shr    eax,0x6
10006445:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006448:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000644f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006452:	c1 e8 0e             	shr    eax,0xe
10006455:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006458:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000645f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006462:	c1 e8 16             	shr    eax,0x16
10006465:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006468:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000646f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006475:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000647b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000647e:	01 d0                	add    eax,edx
10006480:	8b 00                	mov    eax,DWORD PTR [eax]
10006482:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006485:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000648b:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006491:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006494:	01 d0                	add    eax,edx
10006496:	8b 00                	mov    eax,DWORD PTR [eax]
10006498:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000649b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100064a1:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100064a7:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100064aa:	01 d0                	add    eax,edx
100064ac:	8b 00                	mov    eax,DWORD PTR [eax]
100064ae:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100064b1:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100064b7:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100064ba:	01 d0                	add    eax,edx
100064bc:	8b 00                	mov    eax,DWORD PTR [eax]
100064be:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100064c1:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100064c4:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100064c7:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
100064cd:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100064d0:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100064d3:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100064d6:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100064d9:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100064dc:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100064df:	0f b6 c0             	movzx  eax,al
100064e2:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100064e5:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100064e9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100064ec:	c1 e8 06             	shr    eax,0x6
100064ef:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100064f2:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100064f9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100064fc:	c1 e8 0e             	shr    eax,0xe
100064ff:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006502:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006509:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000650c:	c1 e8 16             	shr    eax,0x16
1000650f:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006512:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006519:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000651f:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006525:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006528:	01 d0                	add    eax,edx
1000652a:	8b 00                	mov    eax,DWORD PTR [eax]
1000652c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000652f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006535:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000653b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000653e:	01 d0                	add    eax,edx
10006540:	8b 00                	mov    eax,DWORD PTR [eax]
10006542:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006545:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000654b:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006551:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006554:	01 d0                	add    eax,edx
10006556:	8b 00                	mov    eax,DWORD PTR [eax]
10006558:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000655b:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006561:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006564:	01 d0                	add    eax,edx
10006566:	8b 00                	mov    eax,DWORD PTR [eax]
10006568:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000656b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000656e:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006571:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
10006577:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000657a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000657d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006580:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006583:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006586:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006589:	0f b6 c0             	movzx  eax,al
1000658c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000658f:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006593:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006596:	c1 e8 06             	shr    eax,0x6
10006599:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000659c:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100065a3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100065a6:	c1 e8 0e             	shr    eax,0xe
100065a9:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100065ac:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100065b3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100065b6:	c1 e8 16             	shr    eax,0x16
100065b9:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100065bc:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100065c3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100065c9:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100065cf:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100065d2:	01 d0                	add    eax,edx
100065d4:	8b 00                	mov    eax,DWORD PTR [eax]
100065d6:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100065d9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100065df:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100065e5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100065e8:	01 d0                	add    eax,edx
100065ea:	8b 00                	mov    eax,DWORD PTR [eax]
100065ec:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100065ef:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100065f5:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100065fb:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100065fe:	01 d0                	add    eax,edx
10006600:	8b 00                	mov    eax,DWORD PTR [eax]
10006602:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006605:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000660b:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000660e:	01 d0                	add    eax,edx
10006610:	8b 00                	mov    eax,DWORD PTR [eax]
10006612:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006615:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006618:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000661b:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
10006621:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006624:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006627:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000662a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000662d:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006630:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006633:	0f b6 c0             	movzx  eax,al
10006636:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006639:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000663d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006640:	c1 e8 06             	shr    eax,0x6
10006643:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006646:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000664d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006650:	c1 e8 0e             	shr    eax,0xe
10006653:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006656:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000665d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006660:	c1 e8 16             	shr    eax,0x16
10006663:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006666:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000666d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006673:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006679:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000667c:	01 d0                	add    eax,edx
1000667e:	8b 00                	mov    eax,DWORD PTR [eax]
10006680:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006683:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006689:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000668f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006692:	01 d0                	add    eax,edx
10006694:	8b 00                	mov    eax,DWORD PTR [eax]
10006696:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006699:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000669f:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100066a5:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100066a8:	01 d0                	add    eax,edx
100066aa:	8b 00                	mov    eax,DWORD PTR [eax]
100066ac:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100066af:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100066b5:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100066b8:	01 d0                	add    eax,edx
100066ba:	8b 00                	mov    eax,DWORD PTR [eax]
100066bc:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100066bf:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100066c2:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100066c5:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
100066cb:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100066ce:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100066d1:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100066d4:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100066d7:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100066da:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100066dd:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100066e0:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100066e3:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
100066e6:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
100066ec:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
100066ef:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
100066f2:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
100066f5:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100066fb:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100066fe:	89 84 95 1c ef ff ff 	mov    DWORD PTR [ebp+edx*4-0x10e4],eax
10006705:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10006708:	40                   	inc    eax
10006709:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000670f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006712:	89 84 95 1c ef ff ff 	mov    DWORD PTR [ebp+edx*4-0x10e4],eax
10006719:	83 45 d4 02          	add    DWORD PTR [ebp-0x2c],0x2
1000671d:	83 7d d4 11          	cmp    DWORD PTR [ebp-0x2c],0x11
10006721:	0f 8e df f4 ff ff    	jle    10005c06 <_crypt_blowfish_rn+0x1b4>
10006727:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000672d:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10006730:	83 45 dc 10          	add    DWORD PTR [ebp-0x24],0x10
10006734:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
10006737:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000673a:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
1000673d:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006740:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
10006746:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006749:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000674c:	0f b6 c0             	movzx  eax,al
1000674f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006752:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006756:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006759:	c1 e8 06             	shr    eax,0x6
1000675c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000675f:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006766:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006769:	c1 e8 0e             	shr    eax,0xe
1000676c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000676f:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006776:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006779:	c1 e8 16             	shr    eax,0x16
1000677c:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000677f:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006786:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000678c:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006792:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006795:	01 d0                	add    eax,edx
10006797:	8b 00                	mov    eax,DWORD PTR [eax]
10006799:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000679c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100067a2:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100067a8:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100067ab:	01 d0                	add    eax,edx
100067ad:	8b 00                	mov    eax,DWORD PTR [eax]
100067af:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100067b2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100067b8:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100067be:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100067c1:	01 d0                	add    eax,edx
100067c3:	8b 00                	mov    eax,DWORD PTR [eax]
100067c5:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100067c8:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100067ce:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100067d1:	01 d0                	add    eax,edx
100067d3:	8b 00                	mov    eax,DWORD PTR [eax]
100067d5:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100067d8:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100067db:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100067de:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
100067e4:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100067e7:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100067ea:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100067ed:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100067f0:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100067f3:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100067f6:	0f b6 c0             	movzx  eax,al
100067f9:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100067fc:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006800:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006803:	c1 e8 06             	shr    eax,0x6
10006806:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006809:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006810:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006813:	c1 e8 0e             	shr    eax,0xe
10006816:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006819:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006820:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006823:	c1 e8 16             	shr    eax,0x16
10006826:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006829:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006830:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006836:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000683c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000683f:	01 d0                	add    eax,edx
10006841:	8b 00                	mov    eax,DWORD PTR [eax]
10006843:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006846:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000684c:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006852:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006855:	01 d0                	add    eax,edx
10006857:	8b 00                	mov    eax,DWORD PTR [eax]
10006859:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000685c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006862:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006868:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000686b:	01 d0                	add    eax,edx
1000686d:	8b 00                	mov    eax,DWORD PTR [eax]
1000686f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006872:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006878:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000687b:	01 d0                	add    eax,edx
1000687d:	8b 00                	mov    eax,DWORD PTR [eax]
1000687f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006882:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006885:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006888:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
1000688e:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006891:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006894:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006897:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000689a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000689d:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100068a0:	0f b6 c0             	movzx  eax,al
100068a3:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100068a6:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100068aa:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100068ad:	c1 e8 06             	shr    eax,0x6
100068b0:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100068b3:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100068ba:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100068bd:	c1 e8 0e             	shr    eax,0xe
100068c0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100068c3:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100068ca:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100068cd:	c1 e8 16             	shr    eax,0x16
100068d0:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100068d3:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100068da:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100068e0:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100068e6:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100068e9:	01 d0                	add    eax,edx
100068eb:	8b 00                	mov    eax,DWORD PTR [eax]
100068ed:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100068f0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100068f6:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100068fc:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100068ff:	01 d0                	add    eax,edx
10006901:	8b 00                	mov    eax,DWORD PTR [eax]
10006903:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006906:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000690c:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006912:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006915:	01 d0                	add    eax,edx
10006917:	8b 00                	mov    eax,DWORD PTR [eax]
10006919:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000691c:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006922:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006925:	01 d0                	add    eax,edx
10006927:	8b 00                	mov    eax,DWORD PTR [eax]
10006929:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000692c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000692f:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006932:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
10006938:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000693b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000693e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006941:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006944:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006947:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000694a:	0f b6 c0             	movzx  eax,al
1000694d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006950:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006954:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006957:	c1 e8 06             	shr    eax,0x6
1000695a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000695d:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006964:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006967:	c1 e8 0e             	shr    eax,0xe
1000696a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000696d:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006974:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006977:	c1 e8 16             	shr    eax,0x16
1000697a:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000697d:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006984:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000698a:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006990:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006993:	01 d0                	add    eax,edx
10006995:	8b 00                	mov    eax,DWORD PTR [eax]
10006997:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000699a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100069a0:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100069a6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100069a9:	01 d0                	add    eax,edx
100069ab:	8b 00                	mov    eax,DWORD PTR [eax]
100069ad:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100069b0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100069b6:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100069bc:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100069bf:	01 d0                	add    eax,edx
100069c1:	8b 00                	mov    eax,DWORD PTR [eax]
100069c3:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100069c6:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100069cc:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100069cf:	01 d0                	add    eax,edx
100069d1:	8b 00                	mov    eax,DWORD PTR [eax]
100069d3:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100069d6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100069d9:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100069dc:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
100069e2:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100069e5:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100069e8:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100069eb:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100069ee:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100069f1:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100069f4:	0f b6 c0             	movzx  eax,al
100069f7:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100069fa:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100069fe:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006a01:	c1 e8 06             	shr    eax,0x6
10006a04:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006a07:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006a0e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006a11:	c1 e8 0e             	shr    eax,0xe
10006a14:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006a17:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006a1e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006a21:	c1 e8 16             	shr    eax,0x16
10006a24:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006a27:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006a2e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006a34:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006a3a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006a3d:	01 d0                	add    eax,edx
10006a3f:	8b 00                	mov    eax,DWORD PTR [eax]
10006a41:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006a44:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006a4a:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006a50:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006a53:	01 d0                	add    eax,edx
10006a55:	8b 00                	mov    eax,DWORD PTR [eax]
10006a57:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006a5a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006a60:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006a66:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006a69:	01 d0                	add    eax,edx
10006a6b:	8b 00                	mov    eax,DWORD PTR [eax]
10006a6d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006a70:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006a76:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006a79:	01 d0                	add    eax,edx
10006a7b:	8b 00                	mov    eax,DWORD PTR [eax]
10006a7d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006a80:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006a83:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006a86:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
10006a8c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006a8f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006a92:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006a95:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006a98:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006a9b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006a9e:	0f b6 c0             	movzx  eax,al
10006aa1:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006aa4:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006aa8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006aab:	c1 e8 06             	shr    eax,0x6
10006aae:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006ab1:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006ab8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006abb:	c1 e8 0e             	shr    eax,0xe
10006abe:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006ac1:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006ac8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006acb:	c1 e8 16             	shr    eax,0x16
10006ace:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006ad1:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006ad8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006ade:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006ae4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006ae7:	01 d0                	add    eax,edx
10006ae9:	8b 00                	mov    eax,DWORD PTR [eax]
10006aeb:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006aee:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006af4:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006afa:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006afd:	01 d0                	add    eax,edx
10006aff:	8b 00                	mov    eax,DWORD PTR [eax]
10006b01:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006b04:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006b0a:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006b10:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006b13:	01 d0                	add    eax,edx
10006b15:	8b 00                	mov    eax,DWORD PTR [eax]
10006b17:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006b1a:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006b20:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006b23:	01 d0                	add    eax,edx
10006b25:	8b 00                	mov    eax,DWORD PTR [eax]
10006b27:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006b2a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006b2d:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006b30:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
10006b36:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006b39:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006b3c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006b3f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006b42:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006b45:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006b48:	0f b6 c0             	movzx  eax,al
10006b4b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006b4e:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006b52:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006b55:	c1 e8 06             	shr    eax,0x6
10006b58:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006b5b:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006b62:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006b65:	c1 e8 0e             	shr    eax,0xe
10006b68:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006b6b:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006b72:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006b75:	c1 e8 16             	shr    eax,0x16
10006b78:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006b7b:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006b82:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006b88:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006b8e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006b91:	01 d0                	add    eax,edx
10006b93:	8b 00                	mov    eax,DWORD PTR [eax]
10006b95:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006b98:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006b9e:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006ba4:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006ba7:	01 d0                	add    eax,edx
10006ba9:	8b 00                	mov    eax,DWORD PTR [eax]
10006bab:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006bae:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006bb4:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006bba:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006bbd:	01 d0                	add    eax,edx
10006bbf:	8b 00                	mov    eax,DWORD PTR [eax]
10006bc1:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006bc4:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006bca:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006bcd:	01 d0                	add    eax,edx
10006bcf:	8b 00                	mov    eax,DWORD PTR [eax]
10006bd1:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006bd4:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006bd7:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006bda:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
10006be0:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006be3:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006be6:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006be9:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006bec:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006bef:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006bf2:	0f b6 c0             	movzx  eax,al
10006bf5:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006bf8:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006bfc:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006bff:	c1 e8 06             	shr    eax,0x6
10006c02:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006c05:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006c0c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006c0f:	c1 e8 0e             	shr    eax,0xe
10006c12:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006c15:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006c1c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006c1f:	c1 e8 16             	shr    eax,0x16
10006c22:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006c25:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006c2c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006c32:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006c38:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006c3b:	01 d0                	add    eax,edx
10006c3d:	8b 00                	mov    eax,DWORD PTR [eax]
10006c3f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006c42:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006c48:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006c4e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006c51:	01 d0                	add    eax,edx
10006c53:	8b 00                	mov    eax,DWORD PTR [eax]
10006c55:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006c58:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006c5e:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006c64:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006c67:	01 d0                	add    eax,edx
10006c69:	8b 00                	mov    eax,DWORD PTR [eax]
10006c6b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006c6e:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006c74:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006c77:	01 d0                	add    eax,edx
10006c79:	8b 00                	mov    eax,DWORD PTR [eax]
10006c7b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006c7e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006c81:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006c84:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
10006c8a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006c8d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006c90:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006c93:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006c96:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006c99:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006c9c:	0f b6 c0             	movzx  eax,al
10006c9f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006ca2:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006ca6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006ca9:	c1 e8 06             	shr    eax,0x6
10006cac:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006caf:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006cb6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006cb9:	c1 e8 0e             	shr    eax,0xe
10006cbc:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006cbf:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006cc6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006cc9:	c1 e8 16             	shr    eax,0x16
10006ccc:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006ccf:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006cd6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006cdc:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006ce2:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006ce5:	01 d0                	add    eax,edx
10006ce7:	8b 00                	mov    eax,DWORD PTR [eax]
10006ce9:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006cec:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006cf2:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006cf8:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006cfb:	01 d0                	add    eax,edx
10006cfd:	8b 00                	mov    eax,DWORD PTR [eax]
10006cff:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006d02:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006d08:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006d0e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006d11:	01 d0                	add    eax,edx
10006d13:	8b 00                	mov    eax,DWORD PTR [eax]
10006d15:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006d18:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006d1e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006d21:	01 d0                	add    eax,edx
10006d23:	8b 00                	mov    eax,DWORD PTR [eax]
10006d25:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006d28:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006d2b:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006d2e:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
10006d34:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006d37:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006d3a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006d3d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006d40:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006d43:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006d46:	0f b6 c0             	movzx  eax,al
10006d49:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006d4c:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006d50:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006d53:	c1 e8 06             	shr    eax,0x6
10006d56:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006d59:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006d60:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006d63:	c1 e8 0e             	shr    eax,0xe
10006d66:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006d69:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006d70:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006d73:	c1 e8 16             	shr    eax,0x16
10006d76:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006d79:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006d80:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006d86:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006d8c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006d8f:	01 d0                	add    eax,edx
10006d91:	8b 00                	mov    eax,DWORD PTR [eax]
10006d93:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006d96:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006d9c:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006da2:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006da5:	01 d0                	add    eax,edx
10006da7:	8b 00                	mov    eax,DWORD PTR [eax]
10006da9:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006dac:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006db2:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006db8:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006dbb:	01 d0                	add    eax,edx
10006dbd:	8b 00                	mov    eax,DWORD PTR [eax]
10006dbf:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006dc2:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006dc8:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006dcb:	01 d0                	add    eax,edx
10006dcd:	8b 00                	mov    eax,DWORD PTR [eax]
10006dcf:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006dd2:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006dd5:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006dd8:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
10006dde:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006de1:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006de4:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006de7:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006dea:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006ded:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006df0:	0f b6 c0             	movzx  eax,al
10006df3:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006df6:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006dfa:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006dfd:	c1 e8 06             	shr    eax,0x6
10006e00:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006e03:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006e0a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006e0d:	c1 e8 0e             	shr    eax,0xe
10006e10:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006e13:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006e1a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006e1d:	c1 e8 16             	shr    eax,0x16
10006e20:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006e23:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006e2a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006e30:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006e36:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006e39:	01 d0                	add    eax,edx
10006e3b:	8b 00                	mov    eax,DWORD PTR [eax]
10006e3d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006e40:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006e46:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006e4c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006e4f:	01 d0                	add    eax,edx
10006e51:	8b 00                	mov    eax,DWORD PTR [eax]
10006e53:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006e56:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006e5c:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006e62:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006e65:	01 d0                	add    eax,edx
10006e67:	8b 00                	mov    eax,DWORD PTR [eax]
10006e69:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006e6c:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006e72:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006e75:	01 d0                	add    eax,edx
10006e77:	8b 00                	mov    eax,DWORD PTR [eax]
10006e79:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006e7c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006e7f:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006e82:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
10006e88:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006e8b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006e8e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006e91:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006e94:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006e97:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006e9a:	0f b6 c0             	movzx  eax,al
10006e9d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006ea0:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006ea4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006ea7:	c1 e8 06             	shr    eax,0x6
10006eaa:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006ead:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006eb4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006eb7:	c1 e8 0e             	shr    eax,0xe
10006eba:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006ebd:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006ec4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006ec7:	c1 e8 16             	shr    eax,0x16
10006eca:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006ecd:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006ed4:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006eda:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006ee0:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006ee3:	01 d0                	add    eax,edx
10006ee5:	8b 00                	mov    eax,DWORD PTR [eax]
10006ee7:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006eea:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006ef0:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006ef6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006ef9:	01 d0                	add    eax,edx
10006efb:	8b 00                	mov    eax,DWORD PTR [eax]
10006efd:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006f00:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006f06:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006f0c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006f0f:	01 d0                	add    eax,edx
10006f11:	8b 00                	mov    eax,DWORD PTR [eax]
10006f13:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006f16:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006f1c:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006f1f:	01 d0                	add    eax,edx
10006f21:	8b 00                	mov    eax,DWORD PTR [eax]
10006f23:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006f26:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006f29:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006f2c:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
10006f32:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006f35:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006f38:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006f3b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006f3e:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006f41:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006f44:	0f b6 c0             	movzx  eax,al
10006f47:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006f4a:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006f4e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006f51:	c1 e8 06             	shr    eax,0x6
10006f54:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006f57:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006f5e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006f61:	c1 e8 0e             	shr    eax,0xe
10006f64:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006f67:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006f6e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006f71:	c1 e8 16             	shr    eax,0x16
10006f74:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006f77:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006f7e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006f84:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006f8a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006f8d:	01 d0                	add    eax,edx
10006f8f:	8b 00                	mov    eax,DWORD PTR [eax]
10006f91:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006f94:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006f9a:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006fa0:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006fa3:	01 d0                	add    eax,edx
10006fa5:	8b 00                	mov    eax,DWORD PTR [eax]
10006fa7:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006faa:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006fb0:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006fb6:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006fb9:	01 d0                	add    eax,edx
10006fbb:	8b 00                	mov    eax,DWORD PTR [eax]
10006fbd:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006fc0:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006fc6:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006fc9:	01 d0                	add    eax,edx
10006fcb:	8b 00                	mov    eax,DWORD PTR [eax]
10006fcd:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006fd0:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006fd3:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006fd6:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
10006fdc:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006fdf:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006fe2:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006fe5:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006fe8:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006feb:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006fee:	0f b6 c0             	movzx  eax,al
10006ff1:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006ff4:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006ff8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006ffb:	c1 e8 06             	shr    eax,0x6
10006ffe:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007001:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007008:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000700b:	c1 e8 0e             	shr    eax,0xe
1000700e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007011:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007018:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000701b:	c1 e8 16             	shr    eax,0x16
1000701e:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007021:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007028:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000702e:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007034:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007037:	01 d0                	add    eax,edx
10007039:	8b 00                	mov    eax,DWORD PTR [eax]
1000703b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000703e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007044:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000704a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000704d:	01 d0                	add    eax,edx
1000704f:	8b 00                	mov    eax,DWORD PTR [eax]
10007051:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007054:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000705a:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007060:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007063:	01 d0                	add    eax,edx
10007065:	8b 00                	mov    eax,DWORD PTR [eax]
10007067:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000706a:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007070:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007073:	01 d0                	add    eax,edx
10007075:	8b 00                	mov    eax,DWORD PTR [eax]
10007077:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000707a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000707d:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007080:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
10007086:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007089:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000708c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000708f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007092:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007095:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007098:	0f b6 c0             	movzx  eax,al
1000709b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000709e:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100070a2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100070a5:	c1 e8 06             	shr    eax,0x6
100070a8:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100070ab:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100070b2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100070b5:	c1 e8 0e             	shr    eax,0xe
100070b8:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100070bb:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100070c2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100070c5:	c1 e8 16             	shr    eax,0x16
100070c8:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100070cb:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100070d2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100070d8:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100070de:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100070e1:	01 d0                	add    eax,edx
100070e3:	8b 00                	mov    eax,DWORD PTR [eax]
100070e5:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100070e8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100070ee:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100070f4:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100070f7:	01 d0                	add    eax,edx
100070f9:	8b 00                	mov    eax,DWORD PTR [eax]
100070fb:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100070fe:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007104:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000710a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000710d:	01 d0                	add    eax,edx
1000710f:	8b 00                	mov    eax,DWORD PTR [eax]
10007111:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007114:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000711a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000711d:	01 d0                	add    eax,edx
1000711f:	8b 00                	mov    eax,DWORD PTR [eax]
10007121:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007124:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007127:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000712a:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
10007130:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007133:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007136:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007139:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000713c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000713f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007142:	0f b6 c0             	movzx  eax,al
10007145:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007148:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000714c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000714f:	c1 e8 06             	shr    eax,0x6
10007152:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007155:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000715c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000715f:	c1 e8 0e             	shr    eax,0xe
10007162:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007165:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000716c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000716f:	c1 e8 16             	shr    eax,0x16
10007172:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007175:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000717c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007182:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007188:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000718b:	01 d0                	add    eax,edx
1000718d:	8b 00                	mov    eax,DWORD PTR [eax]
1000718f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007192:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007198:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000719e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100071a1:	01 d0                	add    eax,edx
100071a3:	8b 00                	mov    eax,DWORD PTR [eax]
100071a5:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100071a8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100071ae:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100071b4:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100071b7:	01 d0                	add    eax,edx
100071b9:	8b 00                	mov    eax,DWORD PTR [eax]
100071bb:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100071be:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100071c4:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100071c7:	01 d0                	add    eax,edx
100071c9:	8b 00                	mov    eax,DWORD PTR [eax]
100071cb:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100071ce:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100071d1:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100071d4:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
100071da:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100071dd:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100071e0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100071e3:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100071e6:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100071e9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100071ec:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100071ef:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100071f2:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
100071f5:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
100071fb:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
100071fe:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10007201:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10007204:	8d 50 f0             	lea    edx,[eax-0x10]
10007207:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000720a:	89 02                	mov    DWORD PTR [edx],eax
1000720c:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
1000720f:	8d 50 f4             	lea    edx,[eax-0xc]
10007212:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007215:	89 02                	mov    DWORD PTR [edx],eax
10007217:	8b 45 ac             	mov    eax,DWORD PTR [ebp-0x54]
1000721a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000721d:	8b 45 b0             	mov    eax,DWORD PTR [ebp-0x50]
10007220:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007223:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
10007229:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000722c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000722f:	0f b6 c0             	movzx  eax,al
10007232:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007235:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007239:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000723c:	c1 e8 06             	shr    eax,0x6
1000723f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007242:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007249:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000724c:	c1 e8 0e             	shr    eax,0xe
1000724f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007252:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007259:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000725c:	c1 e8 16             	shr    eax,0x16
1000725f:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007262:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007269:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000726f:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007275:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007278:	01 d0                	add    eax,edx
1000727a:	8b 00                	mov    eax,DWORD PTR [eax]
1000727c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000727f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007285:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000728b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000728e:	01 d0                	add    eax,edx
10007290:	8b 00                	mov    eax,DWORD PTR [eax]
10007292:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007295:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000729b:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100072a1:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100072a4:	01 d0                	add    eax,edx
100072a6:	8b 00                	mov    eax,DWORD PTR [eax]
100072a8:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100072ab:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100072b1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100072b4:	01 d0                	add    eax,edx
100072b6:	8b 00                	mov    eax,DWORD PTR [eax]
100072b8:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100072bb:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100072be:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100072c1:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
100072c7:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100072ca:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100072cd:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100072d0:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100072d3:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100072d6:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100072d9:	0f b6 c0             	movzx  eax,al
100072dc:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100072df:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100072e3:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100072e6:	c1 e8 06             	shr    eax,0x6
100072e9:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100072ec:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100072f3:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100072f6:	c1 e8 0e             	shr    eax,0xe
100072f9:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100072fc:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007303:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007306:	c1 e8 16             	shr    eax,0x16
10007309:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000730c:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007313:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007319:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000731f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007322:	01 d0                	add    eax,edx
10007324:	8b 00                	mov    eax,DWORD PTR [eax]
10007326:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007329:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000732f:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007335:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007338:	01 d0                	add    eax,edx
1000733a:	8b 00                	mov    eax,DWORD PTR [eax]
1000733c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000733f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007345:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000734b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000734e:	01 d0                	add    eax,edx
10007350:	8b 00                	mov    eax,DWORD PTR [eax]
10007352:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007355:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000735b:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000735e:	01 d0                	add    eax,edx
10007360:	8b 00                	mov    eax,DWORD PTR [eax]
10007362:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007365:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007368:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000736b:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
10007371:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007374:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007377:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000737a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000737d:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007380:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007383:	0f b6 c0             	movzx  eax,al
10007386:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007389:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000738d:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007390:	c1 e8 06             	shr    eax,0x6
10007393:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007396:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000739d:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100073a0:	c1 e8 0e             	shr    eax,0xe
100073a3:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100073a6:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100073ad:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100073b0:	c1 e8 16             	shr    eax,0x16
100073b3:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100073b6:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100073bd:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100073c3:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100073c9:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100073cc:	01 d0                	add    eax,edx
100073ce:	8b 00                	mov    eax,DWORD PTR [eax]
100073d0:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100073d3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100073d9:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100073df:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100073e2:	01 d0                	add    eax,edx
100073e4:	8b 00                	mov    eax,DWORD PTR [eax]
100073e6:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100073e9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100073ef:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100073f5:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100073f8:	01 d0                	add    eax,edx
100073fa:	8b 00                	mov    eax,DWORD PTR [eax]
100073fc:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100073ff:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007405:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007408:	01 d0                	add    eax,edx
1000740a:	8b 00                	mov    eax,DWORD PTR [eax]
1000740c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000740f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007412:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007415:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
1000741b:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000741e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007421:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007424:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007427:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000742a:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000742d:	0f b6 c0             	movzx  eax,al
10007430:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007433:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007437:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000743a:	c1 e8 06             	shr    eax,0x6
1000743d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007440:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007447:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000744a:	c1 e8 0e             	shr    eax,0xe
1000744d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007450:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007457:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000745a:	c1 e8 16             	shr    eax,0x16
1000745d:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007460:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007467:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000746d:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007473:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007476:	01 d0                	add    eax,edx
10007478:	8b 00                	mov    eax,DWORD PTR [eax]
1000747a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000747d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007483:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007489:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000748c:	01 d0                	add    eax,edx
1000748e:	8b 00                	mov    eax,DWORD PTR [eax]
10007490:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007493:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007499:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000749f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100074a2:	01 d0                	add    eax,edx
100074a4:	8b 00                	mov    eax,DWORD PTR [eax]
100074a6:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100074a9:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100074af:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100074b2:	01 d0                	add    eax,edx
100074b4:	8b 00                	mov    eax,DWORD PTR [eax]
100074b6:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100074b9:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100074bc:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100074bf:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
100074c5:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100074c8:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100074cb:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100074ce:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100074d1:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100074d4:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100074d7:	0f b6 c0             	movzx  eax,al
100074da:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100074dd:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100074e1:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100074e4:	c1 e8 06             	shr    eax,0x6
100074e7:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100074ea:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100074f1:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100074f4:	c1 e8 0e             	shr    eax,0xe
100074f7:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100074fa:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007501:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007504:	c1 e8 16             	shr    eax,0x16
10007507:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000750a:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007511:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007517:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000751d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007520:	01 d0                	add    eax,edx
10007522:	8b 00                	mov    eax,DWORD PTR [eax]
10007524:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007527:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000752d:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007533:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007536:	01 d0                	add    eax,edx
10007538:	8b 00                	mov    eax,DWORD PTR [eax]
1000753a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000753d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007543:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007549:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000754c:	01 d0                	add    eax,edx
1000754e:	8b 00                	mov    eax,DWORD PTR [eax]
10007550:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007553:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007559:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000755c:	01 d0                	add    eax,edx
1000755e:	8b 00                	mov    eax,DWORD PTR [eax]
10007560:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007563:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007566:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007569:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
1000756f:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007572:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007575:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007578:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000757b:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000757e:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007581:	0f b6 c0             	movzx  eax,al
10007584:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007587:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000758b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000758e:	c1 e8 06             	shr    eax,0x6
10007591:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007594:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000759b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000759e:	c1 e8 0e             	shr    eax,0xe
100075a1:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100075a4:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100075ab:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100075ae:	c1 e8 16             	shr    eax,0x16
100075b1:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100075b4:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100075bb:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100075c1:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100075c7:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100075ca:	01 d0                	add    eax,edx
100075cc:	8b 00                	mov    eax,DWORD PTR [eax]
100075ce:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100075d1:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100075d7:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100075dd:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100075e0:	01 d0                	add    eax,edx
100075e2:	8b 00                	mov    eax,DWORD PTR [eax]
100075e4:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100075e7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100075ed:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100075f3:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100075f6:	01 d0                	add    eax,edx
100075f8:	8b 00                	mov    eax,DWORD PTR [eax]
100075fa:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100075fd:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007603:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007606:	01 d0                	add    eax,edx
10007608:	8b 00                	mov    eax,DWORD PTR [eax]
1000760a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000760d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007610:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007613:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
10007619:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000761c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000761f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007622:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007625:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007628:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000762b:	0f b6 c0             	movzx  eax,al
1000762e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007631:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007635:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007638:	c1 e8 06             	shr    eax,0x6
1000763b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000763e:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007645:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007648:	c1 e8 0e             	shr    eax,0xe
1000764b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000764e:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007655:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007658:	c1 e8 16             	shr    eax,0x16
1000765b:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000765e:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007665:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000766b:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007671:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007674:	01 d0                	add    eax,edx
10007676:	8b 00                	mov    eax,DWORD PTR [eax]
10007678:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000767b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007681:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007687:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000768a:	01 d0                	add    eax,edx
1000768c:	8b 00                	mov    eax,DWORD PTR [eax]
1000768e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007691:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007697:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000769d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100076a0:	01 d0                	add    eax,edx
100076a2:	8b 00                	mov    eax,DWORD PTR [eax]
100076a4:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100076a7:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100076ad:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100076b0:	01 d0                	add    eax,edx
100076b2:	8b 00                	mov    eax,DWORD PTR [eax]
100076b4:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100076b7:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100076ba:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100076bd:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
100076c3:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100076c6:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100076c9:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100076cc:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100076cf:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100076d2:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100076d5:	0f b6 c0             	movzx  eax,al
100076d8:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100076db:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100076df:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100076e2:	c1 e8 06             	shr    eax,0x6
100076e5:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100076e8:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100076ef:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100076f2:	c1 e8 0e             	shr    eax,0xe
100076f5:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100076f8:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100076ff:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007702:	c1 e8 16             	shr    eax,0x16
10007705:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007708:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000770f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007715:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000771b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000771e:	01 d0                	add    eax,edx
10007720:	8b 00                	mov    eax,DWORD PTR [eax]
10007722:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007725:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000772b:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007731:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007734:	01 d0                	add    eax,edx
10007736:	8b 00                	mov    eax,DWORD PTR [eax]
10007738:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000773b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007741:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007747:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000774a:	01 d0                	add    eax,edx
1000774c:	8b 00                	mov    eax,DWORD PTR [eax]
1000774e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007751:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007757:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000775a:	01 d0                	add    eax,edx
1000775c:	8b 00                	mov    eax,DWORD PTR [eax]
1000775e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007761:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007764:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007767:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
1000776d:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007770:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007773:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007776:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007779:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000777c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000777f:	0f b6 c0             	movzx  eax,al
10007782:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007785:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007789:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000778c:	c1 e8 06             	shr    eax,0x6
1000778f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007792:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007799:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000779c:	c1 e8 0e             	shr    eax,0xe
1000779f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100077a2:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100077a9:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100077ac:	c1 e8 16             	shr    eax,0x16
100077af:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100077b2:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100077b9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100077bf:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100077c5:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100077c8:	01 d0                	add    eax,edx
100077ca:	8b 00                	mov    eax,DWORD PTR [eax]
100077cc:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100077cf:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100077d5:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100077db:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100077de:	01 d0                	add    eax,edx
100077e0:	8b 00                	mov    eax,DWORD PTR [eax]
100077e2:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100077e5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100077eb:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100077f1:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100077f4:	01 d0                	add    eax,edx
100077f6:	8b 00                	mov    eax,DWORD PTR [eax]
100077f8:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100077fb:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007801:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007804:	01 d0                	add    eax,edx
10007806:	8b 00                	mov    eax,DWORD PTR [eax]
10007808:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000780b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000780e:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007811:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
10007817:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000781a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000781d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007820:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007823:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007826:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007829:	0f b6 c0             	movzx  eax,al
1000782c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000782f:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007833:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007836:	c1 e8 06             	shr    eax,0x6
10007839:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000783c:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007843:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007846:	c1 e8 0e             	shr    eax,0xe
10007849:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000784c:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007853:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007856:	c1 e8 16             	shr    eax,0x16
10007859:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000785c:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007863:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007869:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000786f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007872:	01 d0                	add    eax,edx
10007874:	8b 00                	mov    eax,DWORD PTR [eax]
10007876:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007879:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000787f:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007885:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007888:	01 d0                	add    eax,edx
1000788a:	8b 00                	mov    eax,DWORD PTR [eax]
1000788c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000788f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007895:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000789b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000789e:	01 d0                	add    eax,edx
100078a0:	8b 00                	mov    eax,DWORD PTR [eax]
100078a2:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100078a5:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100078ab:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100078ae:	01 d0                	add    eax,edx
100078b0:	8b 00                	mov    eax,DWORD PTR [eax]
100078b2:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100078b5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100078b8:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100078bb:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
100078c1:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100078c4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100078c7:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100078ca:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100078cd:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100078d0:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100078d3:	0f b6 c0             	movzx  eax,al
100078d6:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100078d9:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100078dd:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100078e0:	c1 e8 06             	shr    eax,0x6
100078e3:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100078e6:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100078ed:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100078f0:	c1 e8 0e             	shr    eax,0xe
100078f3:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100078f6:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100078fd:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007900:	c1 e8 16             	shr    eax,0x16
10007903:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007906:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000790d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007913:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007919:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000791c:	01 d0                	add    eax,edx
1000791e:	8b 00                	mov    eax,DWORD PTR [eax]
10007920:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007923:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007929:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000792f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007932:	01 d0                	add    eax,edx
10007934:	8b 00                	mov    eax,DWORD PTR [eax]
10007936:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007939:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000793f:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007945:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007948:	01 d0                	add    eax,edx
1000794a:	8b 00                	mov    eax,DWORD PTR [eax]
1000794c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000794f:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007955:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007958:	01 d0                	add    eax,edx
1000795a:	8b 00                	mov    eax,DWORD PTR [eax]
1000795c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000795f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007962:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007965:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
1000796b:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000796e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007971:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007974:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007977:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000797a:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000797d:	0f b6 c0             	movzx  eax,al
10007980:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007983:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007987:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000798a:	c1 e8 06             	shr    eax,0x6
1000798d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007990:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007997:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000799a:	c1 e8 0e             	shr    eax,0xe
1000799d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100079a0:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100079a7:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100079aa:	c1 e8 16             	shr    eax,0x16
100079ad:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100079b0:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100079b7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100079bd:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100079c3:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100079c6:	01 d0                	add    eax,edx
100079c8:	8b 00                	mov    eax,DWORD PTR [eax]
100079ca:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100079cd:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100079d3:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100079d9:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100079dc:	01 d0                	add    eax,edx
100079de:	8b 00                	mov    eax,DWORD PTR [eax]
100079e0:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100079e3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100079e9:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100079ef:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100079f2:	01 d0                	add    eax,edx
100079f4:	8b 00                	mov    eax,DWORD PTR [eax]
100079f6:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100079f9:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100079ff:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007a02:	01 d0                	add    eax,edx
10007a04:	8b 00                	mov    eax,DWORD PTR [eax]
10007a06:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007a09:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007a0c:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007a0f:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
10007a15:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007a18:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007a1b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007a1e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007a21:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007a24:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007a27:	0f b6 c0             	movzx  eax,al
10007a2a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007a2d:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007a31:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007a34:	c1 e8 06             	shr    eax,0x6
10007a37:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007a3a:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007a41:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007a44:	c1 e8 0e             	shr    eax,0xe
10007a47:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007a4a:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007a51:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007a54:	c1 e8 16             	shr    eax,0x16
10007a57:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007a5a:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007a61:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007a67:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007a6d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007a70:	01 d0                	add    eax,edx
10007a72:	8b 00                	mov    eax,DWORD PTR [eax]
10007a74:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007a77:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007a7d:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007a83:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007a86:	01 d0                	add    eax,edx
10007a88:	8b 00                	mov    eax,DWORD PTR [eax]
10007a8a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007a8d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007a93:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007a99:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007a9c:	01 d0                	add    eax,edx
10007a9e:	8b 00                	mov    eax,DWORD PTR [eax]
10007aa0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007aa3:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007aa9:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007aac:	01 d0                	add    eax,edx
10007aae:	8b 00                	mov    eax,DWORD PTR [eax]
10007ab0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007ab3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007ab6:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007ab9:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
10007abf:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007ac2:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007ac5:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007ac8:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007acb:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007ace:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007ad1:	0f b6 c0             	movzx  eax,al
10007ad4:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007ad7:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007adb:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007ade:	c1 e8 06             	shr    eax,0x6
10007ae1:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007ae4:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007aeb:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007aee:	c1 e8 0e             	shr    eax,0xe
10007af1:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007af4:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007afb:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007afe:	c1 e8 16             	shr    eax,0x16
10007b01:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007b04:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007b0b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007b11:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007b17:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007b1a:	01 d0                	add    eax,edx
10007b1c:	8b 00                	mov    eax,DWORD PTR [eax]
10007b1e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007b21:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007b27:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007b2d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007b30:	01 d0                	add    eax,edx
10007b32:	8b 00                	mov    eax,DWORD PTR [eax]
10007b34:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007b37:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007b3d:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007b43:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007b46:	01 d0                	add    eax,edx
10007b48:	8b 00                	mov    eax,DWORD PTR [eax]
10007b4a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007b4d:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007b53:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007b56:	01 d0                	add    eax,edx
10007b58:	8b 00                	mov    eax,DWORD PTR [eax]
10007b5a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007b5d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007b60:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007b63:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
10007b69:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007b6c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007b6f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007b72:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007b75:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007b78:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007b7b:	0f b6 c0             	movzx  eax,al
10007b7e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007b81:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007b85:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007b88:	c1 e8 06             	shr    eax,0x6
10007b8b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007b8e:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007b95:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007b98:	c1 e8 0e             	shr    eax,0xe
10007b9b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007b9e:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007ba5:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007ba8:	c1 e8 16             	shr    eax,0x16
10007bab:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007bae:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007bb5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007bbb:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007bc1:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007bc4:	01 d0                	add    eax,edx
10007bc6:	8b 00                	mov    eax,DWORD PTR [eax]
10007bc8:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007bcb:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007bd1:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007bd7:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007bda:	01 d0                	add    eax,edx
10007bdc:	8b 00                	mov    eax,DWORD PTR [eax]
10007bde:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007be1:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007be7:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007bed:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007bf0:	01 d0                	add    eax,edx
10007bf2:	8b 00                	mov    eax,DWORD PTR [eax]
10007bf4:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007bf7:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007bfd:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007c00:	01 d0                	add    eax,edx
10007c02:	8b 00                	mov    eax,DWORD PTR [eax]
10007c04:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007c07:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007c0a:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007c0d:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
10007c13:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007c16:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007c19:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007c1c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007c1f:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007c22:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007c25:	0f b6 c0             	movzx  eax,al
10007c28:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007c2b:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007c2f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007c32:	c1 e8 06             	shr    eax,0x6
10007c35:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007c38:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007c3f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007c42:	c1 e8 0e             	shr    eax,0xe
10007c45:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007c48:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007c4f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007c52:	c1 e8 16             	shr    eax,0x16
10007c55:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007c58:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007c5f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007c65:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007c6b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007c6e:	01 d0                	add    eax,edx
10007c70:	8b 00                	mov    eax,DWORD PTR [eax]
10007c72:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007c75:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007c7b:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007c81:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007c84:	01 d0                	add    eax,edx
10007c86:	8b 00                	mov    eax,DWORD PTR [eax]
10007c88:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007c8b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007c91:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007c97:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007c9a:	01 d0                	add    eax,edx
10007c9c:	8b 00                	mov    eax,DWORD PTR [eax]
10007c9e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007ca1:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007ca7:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007caa:	01 d0                	add    eax,edx
10007cac:	8b 00                	mov    eax,DWORD PTR [eax]
10007cae:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007cb1:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007cb4:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007cb7:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
10007cbd:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007cc0:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007cc3:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007cc6:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007cc9:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007ccc:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007ccf:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007cd2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007cd5:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10007cd8:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
10007cde:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
10007ce1:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10007ce4:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10007ce7:	8d 50 f8             	lea    edx,[eax-0x8]
10007cea:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007ced:	89 02                	mov    DWORD PTR [edx],eax
10007cef:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10007cf2:	8d 50 fc             	lea    edx,[eax-0x4]
10007cf5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007cf8:	89 02                	mov    DWORD PTR [edx],eax
10007cfa:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007d00:	05 fc 0f 00 00       	add    eax,0xffc
10007d05:	39 45 dc             	cmp    DWORD PTR [ebp-0x24],eax
10007d08:	0f 82 22 ea ff ff    	jb     10006730 <_crypt_blowfish_rn+0xcde>
10007d0e:	8b 95 1c ff ff ff    	mov    edx,DWORD PTR [ebp-0xe4]
10007d14:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [ebp-0x9c]
10007d1a:	31 d0                	xor    eax,edx
10007d1c:	89 85 1c ff ff ff    	mov    DWORD PTR [ebp-0xe4],eax
10007d22:	8b 95 20 ff ff ff    	mov    edx,DWORD PTR [ebp-0xe0]
10007d28:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [ebp-0x98]
10007d2e:	31 d0                	xor    eax,edx
10007d30:	89 85 20 ff ff ff    	mov    DWORD PTR [ebp-0xe0],eax
10007d36:	8b 95 24 ff ff ff    	mov    edx,DWORD PTR [ebp-0xdc]
10007d3c:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [ebp-0x94]
10007d42:	31 d0                	xor    eax,edx
10007d44:	89 85 24 ff ff ff    	mov    DWORD PTR [ebp-0xdc],eax
10007d4a:	8b 95 28 ff ff ff    	mov    edx,DWORD PTR [ebp-0xd8]
10007d50:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [ebp-0x90]
10007d56:	31 d0                	xor    eax,edx
10007d58:	89 85 28 ff ff ff    	mov    DWORD PTR [ebp-0xd8],eax
10007d5e:	8b 95 2c ff ff ff    	mov    edx,DWORD PTR [ebp-0xd4]
10007d64:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [ebp-0x8c]
10007d6a:	31 d0                	xor    eax,edx
10007d6c:	89 85 2c ff ff ff    	mov    DWORD PTR [ebp-0xd4],eax
10007d72:	8b 95 30 ff ff ff    	mov    edx,DWORD PTR [ebp-0xd0]
10007d78:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [ebp-0x88]
10007d7e:	31 d0                	xor    eax,edx
10007d80:	89 85 30 ff ff ff    	mov    DWORD PTR [ebp-0xd0],eax
10007d86:	8b 95 34 ff ff ff    	mov    edx,DWORD PTR [ebp-0xcc]
10007d8c:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [ebp-0x84]
10007d92:	31 d0                	xor    eax,edx
10007d94:	89 85 34 ff ff ff    	mov    DWORD PTR [ebp-0xcc],eax
10007d9a:	8b 95 38 ff ff ff    	mov    edx,DWORD PTR [ebp-0xc8]
10007da0:	8b 45 80             	mov    eax,DWORD PTR [ebp-0x80]
10007da3:	31 d0                	xor    eax,edx
10007da5:	89 85 38 ff ff ff    	mov    DWORD PTR [ebp-0xc8],eax
10007dab:	8b 95 3c ff ff ff    	mov    edx,DWORD PTR [ebp-0xc4]
10007db1:	8b 45 84             	mov    eax,DWORD PTR [ebp-0x7c]
10007db4:	31 d0                	xor    eax,edx
10007db6:	89 85 3c ff ff ff    	mov    DWORD PTR [ebp-0xc4],eax
10007dbc:	8b 95 40 ff ff ff    	mov    edx,DWORD PTR [ebp-0xc0]
10007dc2:	8b 45 88             	mov    eax,DWORD PTR [ebp-0x78]
10007dc5:	31 d0                	xor    eax,edx
10007dc7:	89 85 40 ff ff ff    	mov    DWORD PTR [ebp-0xc0],eax
10007dcd:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [ebp-0xbc]
10007dd3:	8b 45 8c             	mov    eax,DWORD PTR [ebp-0x74]
10007dd6:	31 d0                	xor    eax,edx
10007dd8:	89 85 44 ff ff ff    	mov    DWORD PTR [ebp-0xbc],eax
10007dde:	8b 95 48 ff ff ff    	mov    edx,DWORD PTR [ebp-0xb8]
10007de4:	8b 45 90             	mov    eax,DWORD PTR [ebp-0x70]
10007de7:	31 d0                	xor    eax,edx
10007de9:	89 85 48 ff ff ff    	mov    DWORD PTR [ebp-0xb8],eax
10007def:	8b 95 4c ff ff ff    	mov    edx,DWORD PTR [ebp-0xb4]
10007df5:	8b 45 94             	mov    eax,DWORD PTR [ebp-0x6c]
10007df8:	31 d0                	xor    eax,edx
10007dfa:	89 85 4c ff ff ff    	mov    DWORD PTR [ebp-0xb4],eax
10007e00:	8b 95 50 ff ff ff    	mov    edx,DWORD PTR [ebp-0xb0]
10007e06:	8b 45 98             	mov    eax,DWORD PTR [ebp-0x68]
10007e09:	31 d0                	xor    eax,edx
10007e0b:	89 85 50 ff ff ff    	mov    DWORD PTR [ebp-0xb0],eax
10007e11:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [ebp-0xac]
10007e17:	8b 45 9c             	mov    eax,DWORD PTR [ebp-0x64]
10007e1a:	31 d0                	xor    eax,edx
10007e1c:	89 85 54 ff ff ff    	mov    DWORD PTR [ebp-0xac],eax
10007e22:	8b 95 58 ff ff ff    	mov    edx,DWORD PTR [ebp-0xa8]
10007e28:	8b 45 a0             	mov    eax,DWORD PTR [ebp-0x60]
10007e2b:	31 d0                	xor    eax,edx
10007e2d:	89 85 58 ff ff ff    	mov    DWORD PTR [ebp-0xa8],eax
10007e33:	8b 95 5c ff ff ff    	mov    edx,DWORD PTR [ebp-0xa4]
10007e39:	8b 45 a4             	mov    eax,DWORD PTR [ebp-0x5c]
10007e3c:	31 d0                	xor    eax,edx
10007e3e:	89 85 5c ff ff ff    	mov    DWORD PTR [ebp-0xa4],eax
10007e44:	8b 95 60 ff ff ff    	mov    edx,DWORD PTR [ebp-0xa0]
10007e4a:	8b 45 a8             	mov    eax,DWORD PTR [ebp-0x58]
10007e4d:	31 d0                	xor    eax,edx
10007e4f:	89 85 60 ff ff ff    	mov    DWORD PTR [ebp-0xa0],eax
10007e55:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10007e5c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007e5f:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10007e62:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007e68:	05 00 10 00 00       	add    eax,0x1000
10007e6d:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10007e70:	83 45 dc 08          	add    DWORD PTR [ebp-0x24],0x8
10007e74:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
10007e7a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007e7d:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007e80:	0f b6 c0             	movzx  eax,al
10007e83:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007e86:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007e8a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007e8d:	c1 e8 06             	shr    eax,0x6
10007e90:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007e93:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007e9a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007e9d:	c1 e8 0e             	shr    eax,0xe
10007ea0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007ea3:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007eaa:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007ead:	c1 e8 16             	shr    eax,0x16
10007eb0:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007eb3:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007eba:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007ec0:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007ec6:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007ec9:	01 d0                	add    eax,edx
10007ecb:	8b 00                	mov    eax,DWORD PTR [eax]
10007ecd:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007ed0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007ed6:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007edc:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007edf:	01 d0                	add    eax,edx
10007ee1:	8b 00                	mov    eax,DWORD PTR [eax]
10007ee3:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007ee6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007eec:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007ef2:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007ef5:	01 d0                	add    eax,edx
10007ef7:	8b 00                	mov    eax,DWORD PTR [eax]
10007ef9:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007efc:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007f02:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007f05:	01 d0                	add    eax,edx
10007f07:	8b 00                	mov    eax,DWORD PTR [eax]
10007f09:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007f0c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007f0f:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007f12:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
10007f18:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007f1b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007f1e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007f21:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007f24:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007f27:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007f2a:	0f b6 c0             	movzx  eax,al
10007f2d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007f30:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007f34:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007f37:	c1 e8 06             	shr    eax,0x6
10007f3a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007f3d:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007f44:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007f47:	c1 e8 0e             	shr    eax,0xe
10007f4a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007f4d:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007f54:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007f57:	c1 e8 16             	shr    eax,0x16
10007f5a:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007f5d:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007f64:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007f6a:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007f70:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007f73:	01 d0                	add    eax,edx
10007f75:	8b 00                	mov    eax,DWORD PTR [eax]
10007f77:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007f7a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007f80:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007f86:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007f89:	01 d0                	add    eax,edx
10007f8b:	8b 00                	mov    eax,DWORD PTR [eax]
10007f8d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007f90:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007f96:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007f9c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007f9f:	01 d0                	add    eax,edx
10007fa1:	8b 00                	mov    eax,DWORD PTR [eax]
10007fa3:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007fa6:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007fac:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007faf:	01 d0                	add    eax,edx
10007fb1:	8b 00                	mov    eax,DWORD PTR [eax]
10007fb3:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007fb6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007fb9:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007fbc:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
10007fc2:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007fc5:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007fc8:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007fcb:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007fce:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007fd1:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007fd4:	0f b6 c0             	movzx  eax,al
10007fd7:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007fda:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007fde:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007fe1:	c1 e8 06             	shr    eax,0x6
10007fe4:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007fe7:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007fee:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007ff1:	c1 e8 0e             	shr    eax,0xe
10007ff4:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007ff7:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007ffe:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008001:	c1 e8 16             	shr    eax,0x16
10008004:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008007:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000800e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008014:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000801a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000801d:	01 d0                	add    eax,edx
1000801f:	8b 00                	mov    eax,DWORD PTR [eax]
10008021:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008024:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000802a:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008030:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008033:	01 d0                	add    eax,edx
10008035:	8b 00                	mov    eax,DWORD PTR [eax]
10008037:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000803a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008040:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008046:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008049:	01 d0                	add    eax,edx
1000804b:	8b 00                	mov    eax,DWORD PTR [eax]
1000804d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008050:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008056:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008059:	01 d0                	add    eax,edx
1000805b:	8b 00                	mov    eax,DWORD PTR [eax]
1000805d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008060:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008063:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008066:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
1000806c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000806f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008072:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008075:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008078:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000807b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000807e:	0f b6 c0             	movzx  eax,al
10008081:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008084:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008088:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000808b:	c1 e8 06             	shr    eax,0x6
1000808e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008091:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008098:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000809b:	c1 e8 0e             	shr    eax,0xe
1000809e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100080a1:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100080a8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100080ab:	c1 e8 16             	shr    eax,0x16
100080ae:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100080b1:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100080b8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100080be:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100080c4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100080c7:	01 d0                	add    eax,edx
100080c9:	8b 00                	mov    eax,DWORD PTR [eax]
100080cb:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100080ce:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100080d4:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100080da:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100080dd:	01 d0                	add    eax,edx
100080df:	8b 00                	mov    eax,DWORD PTR [eax]
100080e1:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100080e4:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100080ea:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100080f0:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100080f3:	01 d0                	add    eax,edx
100080f5:	8b 00                	mov    eax,DWORD PTR [eax]
100080f7:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100080fa:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008100:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008103:	01 d0                	add    eax,edx
10008105:	8b 00                	mov    eax,DWORD PTR [eax]
10008107:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000810a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000810d:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008110:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
10008116:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008119:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000811c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000811f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008122:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008125:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008128:	0f b6 c0             	movzx  eax,al
1000812b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000812e:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008132:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008135:	c1 e8 06             	shr    eax,0x6
10008138:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000813b:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008142:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008145:	c1 e8 0e             	shr    eax,0xe
10008148:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000814b:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008152:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008155:	c1 e8 16             	shr    eax,0x16
10008158:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000815b:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008162:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008168:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000816e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008171:	01 d0                	add    eax,edx
10008173:	8b 00                	mov    eax,DWORD PTR [eax]
10008175:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008178:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000817e:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008184:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008187:	01 d0                	add    eax,edx
10008189:	8b 00                	mov    eax,DWORD PTR [eax]
1000818b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000818e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008194:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000819a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000819d:	01 d0                	add    eax,edx
1000819f:	8b 00                	mov    eax,DWORD PTR [eax]
100081a1:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100081a4:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100081aa:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100081ad:	01 d0                	add    eax,edx
100081af:	8b 00                	mov    eax,DWORD PTR [eax]
100081b1:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100081b4:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100081b7:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100081ba:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
100081c0:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100081c3:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100081c6:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100081c9:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100081cc:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100081cf:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100081d2:	0f b6 c0             	movzx  eax,al
100081d5:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100081d8:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100081dc:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100081df:	c1 e8 06             	shr    eax,0x6
100081e2:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100081e5:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100081ec:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100081ef:	c1 e8 0e             	shr    eax,0xe
100081f2:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100081f5:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100081fc:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100081ff:	c1 e8 16             	shr    eax,0x16
10008202:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008205:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000820c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008212:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008218:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000821b:	01 d0                	add    eax,edx
1000821d:	8b 00                	mov    eax,DWORD PTR [eax]
1000821f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008222:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008228:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000822e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008231:	01 d0                	add    eax,edx
10008233:	8b 00                	mov    eax,DWORD PTR [eax]
10008235:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008238:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000823e:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008244:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008247:	01 d0                	add    eax,edx
10008249:	8b 00                	mov    eax,DWORD PTR [eax]
1000824b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000824e:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008254:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008257:	01 d0                	add    eax,edx
10008259:	8b 00                	mov    eax,DWORD PTR [eax]
1000825b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000825e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008261:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008264:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
1000826a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000826d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008270:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008273:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008276:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008279:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000827c:	0f b6 c0             	movzx  eax,al
1000827f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008282:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008286:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008289:	c1 e8 06             	shr    eax,0x6
1000828c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000828f:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008296:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008299:	c1 e8 0e             	shr    eax,0xe
1000829c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000829f:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100082a6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100082a9:	c1 e8 16             	shr    eax,0x16
100082ac:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100082af:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100082b6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100082bc:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100082c2:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100082c5:	01 d0                	add    eax,edx
100082c7:	8b 00                	mov    eax,DWORD PTR [eax]
100082c9:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100082cc:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100082d2:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100082d8:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100082db:	01 d0                	add    eax,edx
100082dd:	8b 00                	mov    eax,DWORD PTR [eax]
100082df:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100082e2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100082e8:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100082ee:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100082f1:	01 d0                	add    eax,edx
100082f3:	8b 00                	mov    eax,DWORD PTR [eax]
100082f5:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100082f8:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100082fe:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008301:	01 d0                	add    eax,edx
10008303:	8b 00                	mov    eax,DWORD PTR [eax]
10008305:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008308:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000830b:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000830e:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
10008314:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008317:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000831a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000831d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008320:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008323:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008326:	0f b6 c0             	movzx  eax,al
10008329:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000832c:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008330:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008333:	c1 e8 06             	shr    eax,0x6
10008336:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008339:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008340:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008343:	c1 e8 0e             	shr    eax,0xe
10008346:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008349:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008350:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008353:	c1 e8 16             	shr    eax,0x16
10008356:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008359:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008360:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008366:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000836c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000836f:	01 d0                	add    eax,edx
10008371:	8b 00                	mov    eax,DWORD PTR [eax]
10008373:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008376:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000837c:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008382:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008385:	01 d0                	add    eax,edx
10008387:	8b 00                	mov    eax,DWORD PTR [eax]
10008389:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000838c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008392:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008398:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000839b:	01 d0                	add    eax,edx
1000839d:	8b 00                	mov    eax,DWORD PTR [eax]
1000839f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100083a2:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100083a8:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100083ab:	01 d0                	add    eax,edx
100083ad:	8b 00                	mov    eax,DWORD PTR [eax]
100083af:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100083b2:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100083b5:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100083b8:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
100083be:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100083c1:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100083c4:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100083c7:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100083ca:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100083cd:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100083d0:	0f b6 c0             	movzx  eax,al
100083d3:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100083d6:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100083da:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100083dd:	c1 e8 06             	shr    eax,0x6
100083e0:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100083e3:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100083ea:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100083ed:	c1 e8 0e             	shr    eax,0xe
100083f0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100083f3:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100083fa:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100083fd:	c1 e8 16             	shr    eax,0x16
10008400:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008403:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000840a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008410:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008416:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008419:	01 d0                	add    eax,edx
1000841b:	8b 00                	mov    eax,DWORD PTR [eax]
1000841d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008420:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008426:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000842c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000842f:	01 d0                	add    eax,edx
10008431:	8b 00                	mov    eax,DWORD PTR [eax]
10008433:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008436:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000843c:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008442:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008445:	01 d0                	add    eax,edx
10008447:	8b 00                	mov    eax,DWORD PTR [eax]
10008449:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000844c:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008452:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008455:	01 d0                	add    eax,edx
10008457:	8b 00                	mov    eax,DWORD PTR [eax]
10008459:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000845c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000845f:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008462:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
10008468:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000846b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000846e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008471:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008474:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008477:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000847a:	0f b6 c0             	movzx  eax,al
1000847d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008480:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008484:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008487:	c1 e8 06             	shr    eax,0x6
1000848a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000848d:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008494:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008497:	c1 e8 0e             	shr    eax,0xe
1000849a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000849d:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100084a4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100084a7:	c1 e8 16             	shr    eax,0x16
100084aa:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100084ad:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100084b4:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100084ba:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100084c0:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100084c3:	01 d0                	add    eax,edx
100084c5:	8b 00                	mov    eax,DWORD PTR [eax]
100084c7:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100084ca:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100084d0:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100084d6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100084d9:	01 d0                	add    eax,edx
100084db:	8b 00                	mov    eax,DWORD PTR [eax]
100084dd:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100084e0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100084e6:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100084ec:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100084ef:	01 d0                	add    eax,edx
100084f1:	8b 00                	mov    eax,DWORD PTR [eax]
100084f3:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100084f6:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100084fc:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100084ff:	01 d0                	add    eax,edx
10008501:	8b 00                	mov    eax,DWORD PTR [eax]
10008503:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008506:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008509:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000850c:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
10008512:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008515:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008518:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000851b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000851e:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008521:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008524:	0f b6 c0             	movzx  eax,al
10008527:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000852a:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000852e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008531:	c1 e8 06             	shr    eax,0x6
10008534:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008537:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000853e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008541:	c1 e8 0e             	shr    eax,0xe
10008544:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008547:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000854e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008551:	c1 e8 16             	shr    eax,0x16
10008554:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008557:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000855e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008564:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000856a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000856d:	01 d0                	add    eax,edx
1000856f:	8b 00                	mov    eax,DWORD PTR [eax]
10008571:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008574:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000857a:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008580:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008583:	01 d0                	add    eax,edx
10008585:	8b 00                	mov    eax,DWORD PTR [eax]
10008587:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000858a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008590:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008596:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008599:	01 d0                	add    eax,edx
1000859b:	8b 00                	mov    eax,DWORD PTR [eax]
1000859d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100085a0:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100085a6:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100085a9:	01 d0                	add    eax,edx
100085ab:	8b 00                	mov    eax,DWORD PTR [eax]
100085ad:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100085b0:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100085b3:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100085b6:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
100085bc:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100085bf:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100085c2:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100085c5:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100085c8:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100085cb:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100085ce:	0f b6 c0             	movzx  eax,al
100085d1:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100085d4:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100085d8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100085db:	c1 e8 06             	shr    eax,0x6
100085de:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100085e1:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100085e8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100085eb:	c1 e8 0e             	shr    eax,0xe
100085ee:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100085f1:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100085f8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100085fb:	c1 e8 16             	shr    eax,0x16
100085fe:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008601:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008608:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000860e:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008614:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008617:	01 d0                	add    eax,edx
10008619:	8b 00                	mov    eax,DWORD PTR [eax]
1000861b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000861e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008624:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000862a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000862d:	01 d0                	add    eax,edx
1000862f:	8b 00                	mov    eax,DWORD PTR [eax]
10008631:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008634:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000863a:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008640:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008643:	01 d0                	add    eax,edx
10008645:	8b 00                	mov    eax,DWORD PTR [eax]
10008647:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000864a:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008650:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008653:	01 d0                	add    eax,edx
10008655:	8b 00                	mov    eax,DWORD PTR [eax]
10008657:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000865a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000865d:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008660:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
10008666:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008669:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000866c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000866f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008672:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008675:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008678:	0f b6 c0             	movzx  eax,al
1000867b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000867e:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008682:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008685:	c1 e8 06             	shr    eax,0x6
10008688:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000868b:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008692:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008695:	c1 e8 0e             	shr    eax,0xe
10008698:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000869b:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100086a2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100086a5:	c1 e8 16             	shr    eax,0x16
100086a8:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100086ab:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100086b2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100086b8:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100086be:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100086c1:	01 d0                	add    eax,edx
100086c3:	8b 00                	mov    eax,DWORD PTR [eax]
100086c5:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100086c8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100086ce:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100086d4:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100086d7:	01 d0                	add    eax,edx
100086d9:	8b 00                	mov    eax,DWORD PTR [eax]
100086db:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100086de:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100086e4:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100086ea:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100086ed:	01 d0                	add    eax,edx
100086ef:	8b 00                	mov    eax,DWORD PTR [eax]
100086f1:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100086f4:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100086fa:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100086fd:	01 d0                	add    eax,edx
100086ff:	8b 00                	mov    eax,DWORD PTR [eax]
10008701:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008704:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008707:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000870a:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
10008710:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008713:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008716:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008719:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000871c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000871f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008722:	0f b6 c0             	movzx  eax,al
10008725:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008728:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000872c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000872f:	c1 e8 06             	shr    eax,0x6
10008732:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008735:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000873c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000873f:	c1 e8 0e             	shr    eax,0xe
10008742:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008745:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000874c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000874f:	c1 e8 16             	shr    eax,0x16
10008752:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008755:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000875c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008762:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008768:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000876b:	01 d0                	add    eax,edx
1000876d:	8b 00                	mov    eax,DWORD PTR [eax]
1000876f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008772:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008778:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000877e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008781:	01 d0                	add    eax,edx
10008783:	8b 00                	mov    eax,DWORD PTR [eax]
10008785:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008788:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000878e:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008794:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008797:	01 d0                	add    eax,edx
10008799:	8b 00                	mov    eax,DWORD PTR [eax]
1000879b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000879e:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100087a4:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100087a7:	01 d0                	add    eax,edx
100087a9:	8b 00                	mov    eax,DWORD PTR [eax]
100087ab:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100087ae:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100087b1:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100087b4:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
100087ba:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100087bd:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100087c0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100087c3:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100087c6:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100087c9:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100087cc:	0f b6 c0             	movzx  eax,al
100087cf:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100087d2:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100087d6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100087d9:	c1 e8 06             	shr    eax,0x6
100087dc:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100087df:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100087e6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100087e9:	c1 e8 0e             	shr    eax,0xe
100087ec:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100087ef:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100087f6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100087f9:	c1 e8 16             	shr    eax,0x16
100087fc:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100087ff:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008806:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000880c:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008812:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008815:	01 d0                	add    eax,edx
10008817:	8b 00                	mov    eax,DWORD PTR [eax]
10008819:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000881c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008822:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008828:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000882b:	01 d0                	add    eax,edx
1000882d:	8b 00                	mov    eax,DWORD PTR [eax]
1000882f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008832:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008838:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000883e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008841:	01 d0                	add    eax,edx
10008843:	8b 00                	mov    eax,DWORD PTR [eax]
10008845:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008848:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000884e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008851:	01 d0                	add    eax,edx
10008853:	8b 00                	mov    eax,DWORD PTR [eax]
10008855:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008858:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000885b:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000885e:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
10008864:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008867:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000886a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000886d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008870:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008873:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008876:	0f b6 c0             	movzx  eax,al
10008879:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000887c:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008880:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008883:	c1 e8 06             	shr    eax,0x6
10008886:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008889:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008890:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008893:	c1 e8 0e             	shr    eax,0xe
10008896:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008899:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100088a0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100088a3:	c1 e8 16             	shr    eax,0x16
100088a6:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100088a9:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100088b0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100088b6:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100088bc:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100088bf:	01 d0                	add    eax,edx
100088c1:	8b 00                	mov    eax,DWORD PTR [eax]
100088c3:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100088c6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100088cc:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100088d2:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100088d5:	01 d0                	add    eax,edx
100088d7:	8b 00                	mov    eax,DWORD PTR [eax]
100088d9:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100088dc:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100088e2:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100088e8:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100088eb:	01 d0                	add    eax,edx
100088ed:	8b 00                	mov    eax,DWORD PTR [eax]
100088ef:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100088f2:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100088f8:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100088fb:	01 d0                	add    eax,edx
100088fd:	8b 00                	mov    eax,DWORD PTR [eax]
100088ff:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008902:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008905:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008908:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
1000890e:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008911:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008914:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008917:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000891a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000891d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008920:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008923:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008926:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10008929:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
1000892f:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
10008932:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10008935:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10008938:	8d 50 f8             	lea    edx,[eax-0x8]
1000893b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000893e:	89 02                	mov    DWORD PTR [edx],eax
10008940:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10008943:	8d 50 fc             	lea    edx,[eax-0x4]
10008946:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008949:	89 02                	mov    DWORD PTR [edx],eax
1000894b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008951:	05 48 10 00 00       	add    eax,0x1048
10008956:	39 45 dc             	cmp    DWORD PTR [ebp-0x24],eax
10008959:	0f 82 11 f5 ff ff    	jb     10007e70 <_crypt_blowfish_rn+0x241e>
1000895f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008965:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10008968:	83 45 dc 08          	add    DWORD PTR [ebp-0x24],0x8
1000896c:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
10008972:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008975:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008978:	0f b6 c0             	movzx  eax,al
1000897b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000897e:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008982:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008985:	c1 e8 06             	shr    eax,0x6
10008988:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000898b:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008992:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008995:	c1 e8 0e             	shr    eax,0xe
10008998:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000899b:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100089a2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100089a5:	c1 e8 16             	shr    eax,0x16
100089a8:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100089ab:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100089b2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100089b8:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100089be:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100089c1:	01 d0                	add    eax,edx
100089c3:	8b 00                	mov    eax,DWORD PTR [eax]
100089c5:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100089c8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100089ce:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100089d4:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100089d7:	01 d0                	add    eax,edx
100089d9:	8b 00                	mov    eax,DWORD PTR [eax]
100089db:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100089de:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100089e4:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100089ea:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100089ed:	01 d0                	add    eax,edx
100089ef:	8b 00                	mov    eax,DWORD PTR [eax]
100089f1:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100089f4:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100089fa:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100089fd:	01 d0                	add    eax,edx
100089ff:	8b 00                	mov    eax,DWORD PTR [eax]
10008a01:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008a04:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008a07:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008a0a:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
10008a10:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008a13:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008a16:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008a19:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008a1c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008a1f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008a22:	0f b6 c0             	movzx  eax,al
10008a25:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008a28:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008a2c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008a2f:	c1 e8 06             	shr    eax,0x6
10008a32:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008a35:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008a3c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008a3f:	c1 e8 0e             	shr    eax,0xe
10008a42:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008a45:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008a4c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008a4f:	c1 e8 16             	shr    eax,0x16
10008a52:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008a55:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008a5c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008a62:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008a68:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008a6b:	01 d0                	add    eax,edx
10008a6d:	8b 00                	mov    eax,DWORD PTR [eax]
10008a6f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008a72:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008a78:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008a7e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008a81:	01 d0                	add    eax,edx
10008a83:	8b 00                	mov    eax,DWORD PTR [eax]
10008a85:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008a88:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008a8e:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008a94:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008a97:	01 d0                	add    eax,edx
10008a99:	8b 00                	mov    eax,DWORD PTR [eax]
10008a9b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008a9e:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008aa4:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008aa7:	01 d0                	add    eax,edx
10008aa9:	8b 00                	mov    eax,DWORD PTR [eax]
10008aab:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008aae:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008ab1:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008ab4:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
10008aba:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008abd:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008ac0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008ac3:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008ac6:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008ac9:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008acc:	0f b6 c0             	movzx  eax,al
10008acf:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008ad2:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008ad6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008ad9:	c1 e8 06             	shr    eax,0x6
10008adc:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008adf:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008ae6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008ae9:	c1 e8 0e             	shr    eax,0xe
10008aec:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008aef:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008af6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008af9:	c1 e8 16             	shr    eax,0x16
10008afc:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008aff:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008b06:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008b0c:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008b12:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008b15:	01 d0                	add    eax,edx
10008b17:	8b 00                	mov    eax,DWORD PTR [eax]
10008b19:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008b1c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008b22:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008b28:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008b2b:	01 d0                	add    eax,edx
10008b2d:	8b 00                	mov    eax,DWORD PTR [eax]
10008b2f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008b32:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008b38:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008b3e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008b41:	01 d0                	add    eax,edx
10008b43:	8b 00                	mov    eax,DWORD PTR [eax]
10008b45:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008b48:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008b4e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008b51:	01 d0                	add    eax,edx
10008b53:	8b 00                	mov    eax,DWORD PTR [eax]
10008b55:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008b58:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008b5b:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008b5e:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
10008b64:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008b67:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008b6a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008b6d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008b70:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008b73:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008b76:	0f b6 c0             	movzx  eax,al
10008b79:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008b7c:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008b80:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008b83:	c1 e8 06             	shr    eax,0x6
10008b86:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008b89:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008b90:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008b93:	c1 e8 0e             	shr    eax,0xe
10008b96:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008b99:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008ba0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008ba3:	c1 e8 16             	shr    eax,0x16
10008ba6:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008ba9:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008bb0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008bb6:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008bbc:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008bbf:	01 d0                	add    eax,edx
10008bc1:	8b 00                	mov    eax,DWORD PTR [eax]
10008bc3:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008bc6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008bcc:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008bd2:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008bd5:	01 d0                	add    eax,edx
10008bd7:	8b 00                	mov    eax,DWORD PTR [eax]
10008bd9:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008bdc:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008be2:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008be8:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008beb:	01 d0                	add    eax,edx
10008bed:	8b 00                	mov    eax,DWORD PTR [eax]
10008bef:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008bf2:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008bf8:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008bfb:	01 d0                	add    eax,edx
10008bfd:	8b 00                	mov    eax,DWORD PTR [eax]
10008bff:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008c02:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008c05:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008c08:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
10008c0e:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008c11:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008c14:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008c17:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008c1a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008c1d:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008c20:	0f b6 c0             	movzx  eax,al
10008c23:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008c26:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008c2a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008c2d:	c1 e8 06             	shr    eax,0x6
10008c30:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008c33:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008c3a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008c3d:	c1 e8 0e             	shr    eax,0xe
10008c40:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008c43:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008c4a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008c4d:	c1 e8 16             	shr    eax,0x16
10008c50:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008c53:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008c5a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008c60:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008c66:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008c69:	01 d0                	add    eax,edx
10008c6b:	8b 00                	mov    eax,DWORD PTR [eax]
10008c6d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008c70:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008c76:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008c7c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008c7f:	01 d0                	add    eax,edx
10008c81:	8b 00                	mov    eax,DWORD PTR [eax]
10008c83:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008c86:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008c8c:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008c92:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008c95:	01 d0                	add    eax,edx
10008c97:	8b 00                	mov    eax,DWORD PTR [eax]
10008c99:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008c9c:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008ca2:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008ca5:	01 d0                	add    eax,edx
10008ca7:	8b 00                	mov    eax,DWORD PTR [eax]
10008ca9:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008cac:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008caf:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008cb2:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
10008cb8:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008cbb:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008cbe:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008cc1:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008cc4:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008cc7:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008cca:	0f b6 c0             	movzx  eax,al
10008ccd:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008cd0:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008cd4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008cd7:	c1 e8 06             	shr    eax,0x6
10008cda:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008cdd:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008ce4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008ce7:	c1 e8 0e             	shr    eax,0xe
10008cea:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008ced:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008cf4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008cf7:	c1 e8 16             	shr    eax,0x16
10008cfa:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008cfd:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008d04:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008d0a:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008d10:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008d13:	01 d0                	add    eax,edx
10008d15:	8b 00                	mov    eax,DWORD PTR [eax]
10008d17:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008d1a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008d20:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008d26:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008d29:	01 d0                	add    eax,edx
10008d2b:	8b 00                	mov    eax,DWORD PTR [eax]
10008d2d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008d30:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008d36:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008d3c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008d3f:	01 d0                	add    eax,edx
10008d41:	8b 00                	mov    eax,DWORD PTR [eax]
10008d43:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008d46:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008d4c:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008d4f:	01 d0                	add    eax,edx
10008d51:	8b 00                	mov    eax,DWORD PTR [eax]
10008d53:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008d56:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008d59:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008d5c:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
10008d62:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008d65:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008d68:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008d6b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008d6e:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008d71:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008d74:	0f b6 c0             	movzx  eax,al
10008d77:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008d7a:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008d7e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008d81:	c1 e8 06             	shr    eax,0x6
10008d84:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008d87:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008d8e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008d91:	c1 e8 0e             	shr    eax,0xe
10008d94:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008d97:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008d9e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008da1:	c1 e8 16             	shr    eax,0x16
10008da4:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008da7:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008dae:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008db4:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008dba:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008dbd:	01 d0                	add    eax,edx
10008dbf:	8b 00                	mov    eax,DWORD PTR [eax]
10008dc1:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008dc4:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008dca:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008dd0:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008dd3:	01 d0                	add    eax,edx
10008dd5:	8b 00                	mov    eax,DWORD PTR [eax]
10008dd7:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008dda:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008de0:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008de6:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008de9:	01 d0                	add    eax,edx
10008deb:	8b 00                	mov    eax,DWORD PTR [eax]
10008ded:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008df0:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008df6:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008df9:	01 d0                	add    eax,edx
10008dfb:	8b 00                	mov    eax,DWORD PTR [eax]
10008dfd:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008e00:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008e03:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008e06:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
10008e0c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008e0f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008e12:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008e15:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008e18:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008e1b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008e1e:	0f b6 c0             	movzx  eax,al
10008e21:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008e24:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008e28:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008e2b:	c1 e8 06             	shr    eax,0x6
10008e2e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008e31:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008e38:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008e3b:	c1 e8 0e             	shr    eax,0xe
10008e3e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008e41:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008e48:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008e4b:	c1 e8 16             	shr    eax,0x16
10008e4e:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008e51:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008e58:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008e5e:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008e64:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008e67:	01 d0                	add    eax,edx
10008e69:	8b 00                	mov    eax,DWORD PTR [eax]
10008e6b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008e6e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008e74:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008e7a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008e7d:	01 d0                	add    eax,edx
10008e7f:	8b 00                	mov    eax,DWORD PTR [eax]
10008e81:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008e84:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008e8a:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008e90:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008e93:	01 d0                	add    eax,edx
10008e95:	8b 00                	mov    eax,DWORD PTR [eax]
10008e97:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008e9a:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008ea0:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008ea3:	01 d0                	add    eax,edx
10008ea5:	8b 00                	mov    eax,DWORD PTR [eax]
10008ea7:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008eaa:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008ead:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008eb0:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
10008eb6:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008eb9:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008ebc:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008ebf:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008ec2:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008ec5:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008ec8:	0f b6 c0             	movzx  eax,al
10008ecb:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008ece:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008ed2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008ed5:	c1 e8 06             	shr    eax,0x6
10008ed8:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008edb:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008ee2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008ee5:	c1 e8 0e             	shr    eax,0xe
10008ee8:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008eeb:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008ef2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008ef5:	c1 e8 16             	shr    eax,0x16
10008ef8:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008efb:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008f02:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008f08:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008f0e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008f11:	01 d0                	add    eax,edx
10008f13:	8b 00                	mov    eax,DWORD PTR [eax]
10008f15:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008f18:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008f1e:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008f24:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008f27:	01 d0                	add    eax,edx
10008f29:	8b 00                	mov    eax,DWORD PTR [eax]
10008f2b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008f2e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008f34:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008f3a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008f3d:	01 d0                	add    eax,edx
10008f3f:	8b 00                	mov    eax,DWORD PTR [eax]
10008f41:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008f44:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008f4a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008f4d:	01 d0                	add    eax,edx
10008f4f:	8b 00                	mov    eax,DWORD PTR [eax]
10008f51:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008f54:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008f57:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008f5a:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
10008f60:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008f63:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008f66:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008f69:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008f6c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008f6f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008f72:	0f b6 c0             	movzx  eax,al
10008f75:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008f78:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008f7c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008f7f:	c1 e8 06             	shr    eax,0x6
10008f82:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008f85:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008f8c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008f8f:	c1 e8 0e             	shr    eax,0xe
10008f92:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008f95:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008f9c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008f9f:	c1 e8 16             	shr    eax,0x16
10008fa2:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008fa5:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008fac:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008fb2:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008fb8:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008fbb:	01 d0                	add    eax,edx
10008fbd:	8b 00                	mov    eax,DWORD PTR [eax]
10008fbf:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008fc2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008fc8:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008fce:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008fd1:	01 d0                	add    eax,edx
10008fd3:	8b 00                	mov    eax,DWORD PTR [eax]
10008fd5:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008fd8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008fde:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008fe4:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008fe7:	01 d0                	add    eax,edx
10008fe9:	8b 00                	mov    eax,DWORD PTR [eax]
10008feb:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008fee:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008ff4:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008ff7:	01 d0                	add    eax,edx
10008ff9:	8b 00                	mov    eax,DWORD PTR [eax]
10008ffb:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008ffe:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009001:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009004:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
1000900a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000900d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009010:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009013:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009016:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009019:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000901c:	0f b6 c0             	movzx  eax,al
1000901f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009022:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009026:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009029:	c1 e8 06             	shr    eax,0x6
1000902c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000902f:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009036:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009039:	c1 e8 0e             	shr    eax,0xe
1000903c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000903f:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009046:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009049:	c1 e8 16             	shr    eax,0x16
1000904c:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000904f:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009056:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000905c:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009062:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009065:	01 d0                	add    eax,edx
10009067:	8b 00                	mov    eax,DWORD PTR [eax]
10009069:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000906c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009072:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009078:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000907b:	01 d0                	add    eax,edx
1000907d:	8b 00                	mov    eax,DWORD PTR [eax]
1000907f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009082:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009088:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000908e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009091:	01 d0                	add    eax,edx
10009093:	8b 00                	mov    eax,DWORD PTR [eax]
10009095:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009098:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000909e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100090a1:	01 d0                	add    eax,edx
100090a3:	8b 00                	mov    eax,DWORD PTR [eax]
100090a5:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100090a8:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100090ab:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100090ae:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
100090b4:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100090b7:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100090ba:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100090bd:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100090c0:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100090c3:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100090c6:	0f b6 c0             	movzx  eax,al
100090c9:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100090cc:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100090d0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100090d3:	c1 e8 06             	shr    eax,0x6
100090d6:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100090d9:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100090e0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100090e3:	c1 e8 0e             	shr    eax,0xe
100090e6:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100090e9:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100090f0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100090f3:	c1 e8 16             	shr    eax,0x16
100090f6:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100090f9:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009100:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009106:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000910c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000910f:	01 d0                	add    eax,edx
10009111:	8b 00                	mov    eax,DWORD PTR [eax]
10009113:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009116:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000911c:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009122:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009125:	01 d0                	add    eax,edx
10009127:	8b 00                	mov    eax,DWORD PTR [eax]
10009129:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000912c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009132:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009138:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000913b:	01 d0                	add    eax,edx
1000913d:	8b 00                	mov    eax,DWORD PTR [eax]
1000913f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009142:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009148:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000914b:	01 d0                	add    eax,edx
1000914d:	8b 00                	mov    eax,DWORD PTR [eax]
1000914f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009152:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009155:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009158:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
1000915e:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009161:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009164:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009167:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000916a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000916d:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009170:	0f b6 c0             	movzx  eax,al
10009173:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009176:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000917a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000917d:	c1 e8 06             	shr    eax,0x6
10009180:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009183:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000918a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000918d:	c1 e8 0e             	shr    eax,0xe
10009190:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009193:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000919a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000919d:	c1 e8 16             	shr    eax,0x16
100091a0:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100091a3:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100091aa:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100091b0:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100091b6:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100091b9:	01 d0                	add    eax,edx
100091bb:	8b 00                	mov    eax,DWORD PTR [eax]
100091bd:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100091c0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100091c6:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100091cc:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100091cf:	01 d0                	add    eax,edx
100091d1:	8b 00                	mov    eax,DWORD PTR [eax]
100091d3:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100091d6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100091dc:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100091e2:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100091e5:	01 d0                	add    eax,edx
100091e7:	8b 00                	mov    eax,DWORD PTR [eax]
100091e9:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100091ec:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100091f2:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100091f5:	01 d0                	add    eax,edx
100091f7:	8b 00                	mov    eax,DWORD PTR [eax]
100091f9:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100091fc:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100091ff:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009202:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
10009208:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000920b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000920e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009211:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009214:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009217:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000921a:	0f b6 c0             	movzx  eax,al
1000921d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009220:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009224:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009227:	c1 e8 06             	shr    eax,0x6
1000922a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000922d:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009234:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009237:	c1 e8 0e             	shr    eax,0xe
1000923a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000923d:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009244:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009247:	c1 e8 16             	shr    eax,0x16
1000924a:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000924d:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009254:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000925a:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009260:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009263:	01 d0                	add    eax,edx
10009265:	8b 00                	mov    eax,DWORD PTR [eax]
10009267:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000926a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009270:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009276:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009279:	01 d0                	add    eax,edx
1000927b:	8b 00                	mov    eax,DWORD PTR [eax]
1000927d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009280:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009286:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000928c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000928f:	01 d0                	add    eax,edx
10009291:	8b 00                	mov    eax,DWORD PTR [eax]
10009293:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009296:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000929c:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000929f:	01 d0                	add    eax,edx
100092a1:	8b 00                	mov    eax,DWORD PTR [eax]
100092a3:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100092a6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100092a9:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100092ac:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
100092b2:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100092b5:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100092b8:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100092bb:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100092be:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100092c1:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100092c4:	0f b6 c0             	movzx  eax,al
100092c7:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100092ca:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100092ce:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100092d1:	c1 e8 06             	shr    eax,0x6
100092d4:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100092d7:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100092de:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100092e1:	c1 e8 0e             	shr    eax,0xe
100092e4:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100092e7:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100092ee:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100092f1:	c1 e8 16             	shr    eax,0x16
100092f4:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100092f7:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100092fe:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009304:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000930a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000930d:	01 d0                	add    eax,edx
1000930f:	8b 00                	mov    eax,DWORD PTR [eax]
10009311:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009314:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000931a:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009320:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009323:	01 d0                	add    eax,edx
10009325:	8b 00                	mov    eax,DWORD PTR [eax]
10009327:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000932a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009330:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009336:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009339:	01 d0                	add    eax,edx
1000933b:	8b 00                	mov    eax,DWORD PTR [eax]
1000933d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009340:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009346:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009349:	01 d0                	add    eax,edx
1000934b:	8b 00                	mov    eax,DWORD PTR [eax]
1000934d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009350:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009353:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009356:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
1000935c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000935f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009362:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009365:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009368:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000936b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000936e:	0f b6 c0             	movzx  eax,al
10009371:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009374:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009378:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000937b:	c1 e8 06             	shr    eax,0x6
1000937e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009381:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009388:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000938b:	c1 e8 0e             	shr    eax,0xe
1000938e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009391:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009398:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000939b:	c1 e8 16             	shr    eax,0x16
1000939e:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100093a1:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100093a8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100093ae:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100093b4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100093b7:	01 d0                	add    eax,edx
100093b9:	8b 00                	mov    eax,DWORD PTR [eax]
100093bb:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100093be:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100093c4:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100093ca:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100093cd:	01 d0                	add    eax,edx
100093cf:	8b 00                	mov    eax,DWORD PTR [eax]
100093d1:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100093d4:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100093da:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100093e0:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100093e3:	01 d0                	add    eax,edx
100093e5:	8b 00                	mov    eax,DWORD PTR [eax]
100093e7:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100093ea:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100093f0:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100093f3:	01 d0                	add    eax,edx
100093f5:	8b 00                	mov    eax,DWORD PTR [eax]
100093f7:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100093fa:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100093fd:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009400:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
10009406:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009409:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000940c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000940f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009412:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009415:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009418:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000941b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000941e:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10009421:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
10009427:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
1000942a:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000942d:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10009430:	8d 50 f8             	lea    edx,[eax-0x8]
10009433:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009436:	89 02                	mov    DWORD PTR [edx],eax
10009438:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
1000943b:	8d 50 fc             	lea    edx,[eax-0x4]
1000943e:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009441:	89 02                	mov    DWORD PTR [edx],eax
10009443:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009449:	05 fc 0f 00 00       	add    eax,0xffc
1000944e:	39 45 dc             	cmp    DWORD PTR [ebp-0x24],eax
10009451:	0f 82 11 f5 ff ff    	jb     10008968 <_crypt_blowfish_rn+0x2f16>
10009457:	8b 45 ac             	mov    eax,DWORD PTR [ebp-0x54]
1000945a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000945d:	8b 45 b0             	mov    eax,DWORD PTR [ebp-0x50]
10009460:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009463:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
10009466:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009469:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
1000946c:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000946f:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
10009475:	33 45 d0             	xor    eax,DWORD PTR [ebp-0x30]
10009478:	89 85 1c ff ff ff    	mov    DWORD PTR [ebp-0xe4],eax
1000947e:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
10009484:	33 45 cc             	xor    eax,DWORD PTR [ebp-0x34]
10009487:	89 85 20 ff ff ff    	mov    DWORD PTR [ebp-0xe0],eax
1000948d:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
10009493:	33 45 c8             	xor    eax,DWORD PTR [ebp-0x38]
10009496:	89 85 24 ff ff ff    	mov    DWORD PTR [ebp-0xdc],eax
1000949c:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
100094a2:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
100094a5:	89 85 28 ff ff ff    	mov    DWORD PTR [ebp-0xd8],eax
100094ab:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
100094b1:	33 45 d0             	xor    eax,DWORD PTR [ebp-0x30]
100094b4:	89 85 2c ff ff ff    	mov    DWORD PTR [ebp-0xd4],eax
100094ba:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
100094c0:	33 45 cc             	xor    eax,DWORD PTR [ebp-0x34]
100094c3:	89 85 30 ff ff ff    	mov    DWORD PTR [ebp-0xd0],eax
100094c9:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
100094cf:	33 45 c8             	xor    eax,DWORD PTR [ebp-0x38]
100094d2:	89 85 34 ff ff ff    	mov    DWORD PTR [ebp-0xcc],eax
100094d8:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
100094de:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
100094e1:	89 85 38 ff ff ff    	mov    DWORD PTR [ebp-0xc8],eax
100094e7:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
100094ed:	33 45 d0             	xor    eax,DWORD PTR [ebp-0x30]
100094f0:	89 85 3c ff ff ff    	mov    DWORD PTR [ebp-0xc4],eax
100094f6:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
100094fc:	33 45 cc             	xor    eax,DWORD PTR [ebp-0x34]
100094ff:	89 85 40 ff ff ff    	mov    DWORD PTR [ebp-0xc0],eax
10009505:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
1000950b:	33 45 c8             	xor    eax,DWORD PTR [ebp-0x38]
1000950e:	89 85 44 ff ff ff    	mov    DWORD PTR [ebp-0xbc],eax
10009514:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
1000951a:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
1000951d:	89 85 48 ff ff ff    	mov    DWORD PTR [ebp-0xb8],eax
10009523:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
10009529:	33 45 d0             	xor    eax,DWORD PTR [ebp-0x30]
1000952c:	89 85 4c ff ff ff    	mov    DWORD PTR [ebp-0xb4],eax
10009532:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
10009538:	33 45 cc             	xor    eax,DWORD PTR [ebp-0x34]
1000953b:	89 85 50 ff ff ff    	mov    DWORD PTR [ebp-0xb0],eax
10009541:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
10009547:	33 45 c8             	xor    eax,DWORD PTR [ebp-0x38]
1000954a:	89 85 54 ff ff ff    	mov    DWORD PTR [ebp-0xac],eax
10009550:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
10009556:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
10009559:	89 85 58 ff ff ff    	mov    DWORD PTR [ebp-0xa8],eax
1000955f:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
10009565:	33 45 d0             	xor    eax,DWORD PTR [ebp-0x30]
10009568:	89 85 5c ff ff ff    	mov    DWORD PTR [ebp-0xa4],eax
1000956e:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
10009574:	33 45 cc             	xor    eax,DWORD PTR [ebp-0x34]
10009577:	89 85 60 ff ff ff    	mov    DWORD PTR [ebp-0xa0],eax
1000957d:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10009584:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009587:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000958a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009590:	05 00 10 00 00       	add    eax,0x1000
10009595:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10009598:	83 45 dc 08          	add    DWORD PTR [ebp-0x24],0x8
1000959c:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
100095a2:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100095a5:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100095a8:	0f b6 c0             	movzx  eax,al
100095ab:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100095ae:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100095b2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100095b5:	c1 e8 06             	shr    eax,0x6
100095b8:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100095bb:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100095c2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100095c5:	c1 e8 0e             	shr    eax,0xe
100095c8:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100095cb:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100095d2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100095d5:	c1 e8 16             	shr    eax,0x16
100095d8:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100095db:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100095e2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100095e8:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100095ee:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100095f1:	01 d0                	add    eax,edx
100095f3:	8b 00                	mov    eax,DWORD PTR [eax]
100095f5:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100095f8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100095fe:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009604:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009607:	01 d0                	add    eax,edx
10009609:	8b 00                	mov    eax,DWORD PTR [eax]
1000960b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000960e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009614:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000961a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000961d:	01 d0                	add    eax,edx
1000961f:	8b 00                	mov    eax,DWORD PTR [eax]
10009621:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009624:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000962a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000962d:	01 d0                	add    eax,edx
1000962f:	8b 00                	mov    eax,DWORD PTR [eax]
10009631:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009634:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009637:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000963a:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
10009640:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009643:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009646:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009649:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000964c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000964f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009652:	0f b6 c0             	movzx  eax,al
10009655:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009658:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000965c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000965f:	c1 e8 06             	shr    eax,0x6
10009662:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009665:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000966c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000966f:	c1 e8 0e             	shr    eax,0xe
10009672:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009675:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000967c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000967f:	c1 e8 16             	shr    eax,0x16
10009682:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009685:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000968c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009692:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009698:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000969b:	01 d0                	add    eax,edx
1000969d:	8b 00                	mov    eax,DWORD PTR [eax]
1000969f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100096a2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100096a8:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100096ae:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100096b1:	01 d0                	add    eax,edx
100096b3:	8b 00                	mov    eax,DWORD PTR [eax]
100096b5:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100096b8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100096be:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100096c4:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100096c7:	01 d0                	add    eax,edx
100096c9:	8b 00                	mov    eax,DWORD PTR [eax]
100096cb:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100096ce:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100096d4:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100096d7:	01 d0                	add    eax,edx
100096d9:	8b 00                	mov    eax,DWORD PTR [eax]
100096db:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100096de:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100096e1:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100096e4:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
100096ea:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100096ed:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100096f0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100096f3:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100096f6:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100096f9:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100096fc:	0f b6 c0             	movzx  eax,al
100096ff:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009702:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009706:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009709:	c1 e8 06             	shr    eax,0x6
1000970c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000970f:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009716:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009719:	c1 e8 0e             	shr    eax,0xe
1000971c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000971f:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009726:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009729:	c1 e8 16             	shr    eax,0x16
1000972c:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000972f:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009736:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000973c:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009742:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009745:	01 d0                	add    eax,edx
10009747:	8b 00                	mov    eax,DWORD PTR [eax]
10009749:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000974c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009752:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009758:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000975b:	01 d0                	add    eax,edx
1000975d:	8b 00                	mov    eax,DWORD PTR [eax]
1000975f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009762:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009768:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000976e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009771:	01 d0                	add    eax,edx
10009773:	8b 00                	mov    eax,DWORD PTR [eax]
10009775:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009778:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000977e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009781:	01 d0                	add    eax,edx
10009783:	8b 00                	mov    eax,DWORD PTR [eax]
10009785:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009788:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000978b:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000978e:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
10009794:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009797:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000979a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000979d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100097a0:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100097a3:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100097a6:	0f b6 c0             	movzx  eax,al
100097a9:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100097ac:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100097b0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100097b3:	c1 e8 06             	shr    eax,0x6
100097b6:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100097b9:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100097c0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100097c3:	c1 e8 0e             	shr    eax,0xe
100097c6:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100097c9:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100097d0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100097d3:	c1 e8 16             	shr    eax,0x16
100097d6:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100097d9:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100097e0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100097e6:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100097ec:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100097ef:	01 d0                	add    eax,edx
100097f1:	8b 00                	mov    eax,DWORD PTR [eax]
100097f3:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100097f6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100097fc:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009802:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009805:	01 d0                	add    eax,edx
10009807:	8b 00                	mov    eax,DWORD PTR [eax]
10009809:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000980c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009812:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009818:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000981b:	01 d0                	add    eax,edx
1000981d:	8b 00                	mov    eax,DWORD PTR [eax]
1000981f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009822:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009828:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000982b:	01 d0                	add    eax,edx
1000982d:	8b 00                	mov    eax,DWORD PTR [eax]
1000982f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009832:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009835:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009838:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
1000983e:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009841:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009844:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009847:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000984a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000984d:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009850:	0f b6 c0             	movzx  eax,al
10009853:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009856:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000985a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000985d:	c1 e8 06             	shr    eax,0x6
10009860:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009863:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000986a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000986d:	c1 e8 0e             	shr    eax,0xe
10009870:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009873:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000987a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000987d:	c1 e8 16             	shr    eax,0x16
10009880:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009883:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000988a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009890:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009896:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009899:	01 d0                	add    eax,edx
1000989b:	8b 00                	mov    eax,DWORD PTR [eax]
1000989d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100098a0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100098a6:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100098ac:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100098af:	01 d0                	add    eax,edx
100098b1:	8b 00                	mov    eax,DWORD PTR [eax]
100098b3:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100098b6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100098bc:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100098c2:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100098c5:	01 d0                	add    eax,edx
100098c7:	8b 00                	mov    eax,DWORD PTR [eax]
100098c9:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100098cc:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100098d2:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100098d5:	01 d0                	add    eax,edx
100098d7:	8b 00                	mov    eax,DWORD PTR [eax]
100098d9:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100098dc:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100098df:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100098e2:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
100098e8:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100098eb:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100098ee:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100098f1:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100098f4:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100098f7:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100098fa:	0f b6 c0             	movzx  eax,al
100098fd:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009900:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009904:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009907:	c1 e8 06             	shr    eax,0x6
1000990a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000990d:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009914:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009917:	c1 e8 0e             	shr    eax,0xe
1000991a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000991d:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009924:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009927:	c1 e8 16             	shr    eax,0x16
1000992a:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000992d:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009934:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000993a:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009940:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009943:	01 d0                	add    eax,edx
10009945:	8b 00                	mov    eax,DWORD PTR [eax]
10009947:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000994a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009950:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009956:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009959:	01 d0                	add    eax,edx
1000995b:	8b 00                	mov    eax,DWORD PTR [eax]
1000995d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009960:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009966:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000996c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000996f:	01 d0                	add    eax,edx
10009971:	8b 00                	mov    eax,DWORD PTR [eax]
10009973:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009976:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000997c:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000997f:	01 d0                	add    eax,edx
10009981:	8b 00                	mov    eax,DWORD PTR [eax]
10009983:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009986:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009989:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000998c:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
10009992:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009995:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009998:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000999b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000999e:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100099a1:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100099a4:	0f b6 c0             	movzx  eax,al
100099a7:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100099aa:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100099ae:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100099b1:	c1 e8 06             	shr    eax,0x6
100099b4:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100099b7:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100099be:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100099c1:	c1 e8 0e             	shr    eax,0xe
100099c4:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100099c7:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100099ce:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100099d1:	c1 e8 16             	shr    eax,0x16
100099d4:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100099d7:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100099de:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100099e4:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100099ea:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100099ed:	01 d0                	add    eax,edx
100099ef:	8b 00                	mov    eax,DWORD PTR [eax]
100099f1:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100099f4:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100099fa:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009a00:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009a03:	01 d0                	add    eax,edx
10009a05:	8b 00                	mov    eax,DWORD PTR [eax]
10009a07:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009a0a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009a10:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009a16:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009a19:	01 d0                	add    eax,edx
10009a1b:	8b 00                	mov    eax,DWORD PTR [eax]
10009a1d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009a20:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009a26:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009a29:	01 d0                	add    eax,edx
10009a2b:	8b 00                	mov    eax,DWORD PTR [eax]
10009a2d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009a30:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009a33:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009a36:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
10009a3c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009a3f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009a42:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009a45:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009a48:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009a4b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009a4e:	0f b6 c0             	movzx  eax,al
10009a51:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009a54:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009a58:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009a5b:	c1 e8 06             	shr    eax,0x6
10009a5e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009a61:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009a68:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009a6b:	c1 e8 0e             	shr    eax,0xe
10009a6e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009a71:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009a78:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009a7b:	c1 e8 16             	shr    eax,0x16
10009a7e:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009a81:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009a88:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009a8e:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009a94:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009a97:	01 d0                	add    eax,edx
10009a99:	8b 00                	mov    eax,DWORD PTR [eax]
10009a9b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009a9e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009aa4:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009aaa:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009aad:	01 d0                	add    eax,edx
10009aaf:	8b 00                	mov    eax,DWORD PTR [eax]
10009ab1:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009ab4:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009aba:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009ac0:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009ac3:	01 d0                	add    eax,edx
10009ac5:	8b 00                	mov    eax,DWORD PTR [eax]
10009ac7:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009aca:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009ad0:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009ad3:	01 d0                	add    eax,edx
10009ad5:	8b 00                	mov    eax,DWORD PTR [eax]
10009ad7:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009ada:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009add:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009ae0:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
10009ae6:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009ae9:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009aec:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009aef:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009af2:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009af5:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009af8:	0f b6 c0             	movzx  eax,al
10009afb:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009afe:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009b02:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009b05:	c1 e8 06             	shr    eax,0x6
10009b08:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009b0b:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009b12:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009b15:	c1 e8 0e             	shr    eax,0xe
10009b18:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009b1b:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009b22:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009b25:	c1 e8 16             	shr    eax,0x16
10009b28:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009b2b:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009b32:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009b38:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009b3e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009b41:	01 d0                	add    eax,edx
10009b43:	8b 00                	mov    eax,DWORD PTR [eax]
10009b45:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009b48:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009b4e:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009b54:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009b57:	01 d0                	add    eax,edx
10009b59:	8b 00                	mov    eax,DWORD PTR [eax]
10009b5b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009b5e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009b64:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009b6a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009b6d:	01 d0                	add    eax,edx
10009b6f:	8b 00                	mov    eax,DWORD PTR [eax]
10009b71:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009b74:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009b7a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009b7d:	01 d0                	add    eax,edx
10009b7f:	8b 00                	mov    eax,DWORD PTR [eax]
10009b81:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009b84:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009b87:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009b8a:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
10009b90:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009b93:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009b96:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009b99:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009b9c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009b9f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009ba2:	0f b6 c0             	movzx  eax,al
10009ba5:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009ba8:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009bac:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009baf:	c1 e8 06             	shr    eax,0x6
10009bb2:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009bb5:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009bbc:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009bbf:	c1 e8 0e             	shr    eax,0xe
10009bc2:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009bc5:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009bcc:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009bcf:	c1 e8 16             	shr    eax,0x16
10009bd2:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009bd5:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009bdc:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009be2:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009be8:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009beb:	01 d0                	add    eax,edx
10009bed:	8b 00                	mov    eax,DWORD PTR [eax]
10009bef:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009bf2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009bf8:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009bfe:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009c01:	01 d0                	add    eax,edx
10009c03:	8b 00                	mov    eax,DWORD PTR [eax]
10009c05:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009c08:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009c0e:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009c14:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009c17:	01 d0                	add    eax,edx
10009c19:	8b 00                	mov    eax,DWORD PTR [eax]
10009c1b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009c1e:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009c24:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009c27:	01 d0                	add    eax,edx
10009c29:	8b 00                	mov    eax,DWORD PTR [eax]
10009c2b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009c2e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009c31:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009c34:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
10009c3a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009c3d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009c40:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009c43:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009c46:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009c49:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009c4c:	0f b6 c0             	movzx  eax,al
10009c4f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009c52:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009c56:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009c59:	c1 e8 06             	shr    eax,0x6
10009c5c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009c5f:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009c66:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009c69:	c1 e8 0e             	shr    eax,0xe
10009c6c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009c6f:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009c76:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009c79:	c1 e8 16             	shr    eax,0x16
10009c7c:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009c7f:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009c86:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009c8c:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009c92:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009c95:	01 d0                	add    eax,edx
10009c97:	8b 00                	mov    eax,DWORD PTR [eax]
10009c99:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009c9c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009ca2:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009ca8:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009cab:	01 d0                	add    eax,edx
10009cad:	8b 00                	mov    eax,DWORD PTR [eax]
10009caf:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009cb2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009cb8:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009cbe:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009cc1:	01 d0                	add    eax,edx
10009cc3:	8b 00                	mov    eax,DWORD PTR [eax]
10009cc5:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009cc8:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009cce:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009cd1:	01 d0                	add    eax,edx
10009cd3:	8b 00                	mov    eax,DWORD PTR [eax]
10009cd5:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009cd8:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009cdb:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009cde:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
10009ce4:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009ce7:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009cea:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009ced:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009cf0:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009cf3:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009cf6:	0f b6 c0             	movzx  eax,al
10009cf9:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009cfc:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009d00:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009d03:	c1 e8 06             	shr    eax,0x6
10009d06:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009d09:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009d10:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009d13:	c1 e8 0e             	shr    eax,0xe
10009d16:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009d19:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009d20:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009d23:	c1 e8 16             	shr    eax,0x16
10009d26:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009d29:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009d30:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009d36:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009d3c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009d3f:	01 d0                	add    eax,edx
10009d41:	8b 00                	mov    eax,DWORD PTR [eax]
10009d43:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009d46:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009d4c:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009d52:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009d55:	01 d0                	add    eax,edx
10009d57:	8b 00                	mov    eax,DWORD PTR [eax]
10009d59:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009d5c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009d62:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009d68:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009d6b:	01 d0                	add    eax,edx
10009d6d:	8b 00                	mov    eax,DWORD PTR [eax]
10009d6f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009d72:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009d78:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009d7b:	01 d0                	add    eax,edx
10009d7d:	8b 00                	mov    eax,DWORD PTR [eax]
10009d7f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009d82:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009d85:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009d88:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
10009d8e:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009d91:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009d94:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009d97:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009d9a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009d9d:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009da0:	0f b6 c0             	movzx  eax,al
10009da3:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009da6:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009daa:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009dad:	c1 e8 06             	shr    eax,0x6
10009db0:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009db3:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009dba:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009dbd:	c1 e8 0e             	shr    eax,0xe
10009dc0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009dc3:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009dca:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009dcd:	c1 e8 16             	shr    eax,0x16
10009dd0:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009dd3:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009dda:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009de0:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009de6:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009de9:	01 d0                	add    eax,edx
10009deb:	8b 00                	mov    eax,DWORD PTR [eax]
10009ded:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009df0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009df6:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009dfc:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009dff:	01 d0                	add    eax,edx
10009e01:	8b 00                	mov    eax,DWORD PTR [eax]
10009e03:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009e06:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009e0c:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009e12:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009e15:	01 d0                	add    eax,edx
10009e17:	8b 00                	mov    eax,DWORD PTR [eax]
10009e19:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009e1c:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009e22:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009e25:	01 d0                	add    eax,edx
10009e27:	8b 00                	mov    eax,DWORD PTR [eax]
10009e29:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009e2c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009e2f:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009e32:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
10009e38:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009e3b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009e3e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009e41:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009e44:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009e47:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009e4a:	0f b6 c0             	movzx  eax,al
10009e4d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009e50:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009e54:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009e57:	c1 e8 06             	shr    eax,0x6
10009e5a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009e5d:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009e64:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009e67:	c1 e8 0e             	shr    eax,0xe
10009e6a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009e6d:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009e74:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009e77:	c1 e8 16             	shr    eax,0x16
10009e7a:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009e7d:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009e84:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009e8a:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009e90:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009e93:	01 d0                	add    eax,edx
10009e95:	8b 00                	mov    eax,DWORD PTR [eax]
10009e97:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009e9a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009ea0:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009ea6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009ea9:	01 d0                	add    eax,edx
10009eab:	8b 00                	mov    eax,DWORD PTR [eax]
10009ead:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009eb0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009eb6:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009ebc:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009ebf:	01 d0                	add    eax,edx
10009ec1:	8b 00                	mov    eax,DWORD PTR [eax]
10009ec3:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009ec6:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009ecc:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009ecf:	01 d0                	add    eax,edx
10009ed1:	8b 00                	mov    eax,DWORD PTR [eax]
10009ed3:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009ed6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009ed9:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009edc:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
10009ee2:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009ee5:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009ee8:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009eeb:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009eee:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009ef1:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009ef4:	0f b6 c0             	movzx  eax,al
10009ef7:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009efa:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009efe:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009f01:	c1 e8 06             	shr    eax,0x6
10009f04:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009f07:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009f0e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009f11:	c1 e8 0e             	shr    eax,0xe
10009f14:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009f17:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009f1e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009f21:	c1 e8 16             	shr    eax,0x16
10009f24:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009f27:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009f2e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009f34:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009f3a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009f3d:	01 d0                	add    eax,edx
10009f3f:	8b 00                	mov    eax,DWORD PTR [eax]
10009f41:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009f44:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009f4a:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009f50:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009f53:	01 d0                	add    eax,edx
10009f55:	8b 00                	mov    eax,DWORD PTR [eax]
10009f57:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009f5a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009f60:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009f66:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009f69:	01 d0                	add    eax,edx
10009f6b:	8b 00                	mov    eax,DWORD PTR [eax]
10009f6d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009f70:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009f76:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009f79:	01 d0                	add    eax,edx
10009f7b:	8b 00                	mov    eax,DWORD PTR [eax]
10009f7d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009f80:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009f83:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009f86:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
10009f8c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009f8f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009f92:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009f95:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009f98:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009f9b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009f9e:	0f b6 c0             	movzx  eax,al
10009fa1:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009fa4:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009fa8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009fab:	c1 e8 06             	shr    eax,0x6
10009fae:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009fb1:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009fb8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009fbb:	c1 e8 0e             	shr    eax,0xe
10009fbe:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009fc1:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009fc8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009fcb:	c1 e8 16             	shr    eax,0x16
10009fce:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009fd1:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009fd8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009fde:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009fe4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009fe7:	01 d0                	add    eax,edx
10009fe9:	8b 00                	mov    eax,DWORD PTR [eax]
10009feb:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009fee:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009ff4:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009ffa:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009ffd:	01 d0                	add    eax,edx
10009fff:	8b 00                	mov    eax,DWORD PTR [eax]
1000a001:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a004:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a00a:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a010:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a013:	01 d0                	add    eax,edx
1000a015:	8b 00                	mov    eax,DWORD PTR [eax]
1000a017:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a01a:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a020:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a023:	01 d0                	add    eax,edx
1000a025:	8b 00                	mov    eax,DWORD PTR [eax]
1000a027:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a02a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a02d:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a030:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
1000a036:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a039:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a03c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a03f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a042:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a045:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a048:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a04b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a04e:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
1000a051:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
1000a057:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
1000a05a:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000a05d:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
1000a060:	8d 50 f8             	lea    edx,[eax-0x8]
1000a063:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a066:	89 02                	mov    DWORD PTR [edx],eax
1000a068:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
1000a06b:	8d 50 fc             	lea    edx,[eax-0x4]
1000a06e:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a071:	89 02                	mov    DWORD PTR [edx],eax
1000a073:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a079:	05 48 10 00 00       	add    eax,0x1048
1000a07e:	39 45 dc             	cmp    DWORD PTR [ebp-0x24],eax
1000a081:	0f 82 11 f5 ff ff    	jb     10009598 <_crypt_blowfish_rn+0x3b46>
1000a087:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a08d:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
1000a090:	83 45 dc 08          	add    DWORD PTR [ebp-0x24],0x8
1000a094:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
1000a09a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a09d:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a0a0:	0f b6 c0             	movzx  eax,al
1000a0a3:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a0a6:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a0aa:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a0ad:	c1 e8 06             	shr    eax,0x6
1000a0b0:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a0b3:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a0ba:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a0bd:	c1 e8 0e             	shr    eax,0xe
1000a0c0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a0c3:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a0ca:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a0cd:	c1 e8 16             	shr    eax,0x16
1000a0d0:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a0d3:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a0da:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a0e0:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a0e6:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a0e9:	01 d0                	add    eax,edx
1000a0eb:	8b 00                	mov    eax,DWORD PTR [eax]
1000a0ed:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a0f0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a0f6:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a0fc:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a0ff:	01 d0                	add    eax,edx
1000a101:	8b 00                	mov    eax,DWORD PTR [eax]
1000a103:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a106:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a10c:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a112:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a115:	01 d0                	add    eax,edx
1000a117:	8b 00                	mov    eax,DWORD PTR [eax]
1000a119:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a11c:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a122:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a125:	01 d0                	add    eax,edx
1000a127:	8b 00                	mov    eax,DWORD PTR [eax]
1000a129:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a12c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a12f:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a132:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
1000a138:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a13b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a13e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a141:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a144:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a147:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a14a:	0f b6 c0             	movzx  eax,al
1000a14d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a150:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a154:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a157:	c1 e8 06             	shr    eax,0x6
1000a15a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a15d:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a164:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a167:	c1 e8 0e             	shr    eax,0xe
1000a16a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a16d:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a174:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a177:	c1 e8 16             	shr    eax,0x16
1000a17a:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a17d:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a184:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a18a:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a190:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a193:	01 d0                	add    eax,edx
1000a195:	8b 00                	mov    eax,DWORD PTR [eax]
1000a197:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a19a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a1a0:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a1a6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a1a9:	01 d0                	add    eax,edx
1000a1ab:	8b 00                	mov    eax,DWORD PTR [eax]
1000a1ad:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a1b0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a1b6:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a1bc:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a1bf:	01 d0                	add    eax,edx
1000a1c1:	8b 00                	mov    eax,DWORD PTR [eax]
1000a1c3:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a1c6:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a1cc:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a1cf:	01 d0                	add    eax,edx
1000a1d1:	8b 00                	mov    eax,DWORD PTR [eax]
1000a1d3:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a1d6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a1d9:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a1dc:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
1000a1e2:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a1e5:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a1e8:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a1eb:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a1ee:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a1f1:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a1f4:	0f b6 c0             	movzx  eax,al
1000a1f7:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a1fa:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a1fe:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a201:	c1 e8 06             	shr    eax,0x6
1000a204:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a207:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a20e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a211:	c1 e8 0e             	shr    eax,0xe
1000a214:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a217:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a21e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a221:	c1 e8 16             	shr    eax,0x16
1000a224:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a227:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a22e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a234:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a23a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a23d:	01 d0                	add    eax,edx
1000a23f:	8b 00                	mov    eax,DWORD PTR [eax]
1000a241:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a244:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a24a:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a250:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a253:	01 d0                	add    eax,edx
1000a255:	8b 00                	mov    eax,DWORD PTR [eax]
1000a257:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a25a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a260:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a266:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a269:	01 d0                	add    eax,edx
1000a26b:	8b 00                	mov    eax,DWORD PTR [eax]
1000a26d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a270:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a276:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a279:	01 d0                	add    eax,edx
1000a27b:	8b 00                	mov    eax,DWORD PTR [eax]
1000a27d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a280:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a283:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a286:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
1000a28c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a28f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a292:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a295:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a298:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a29b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a29e:	0f b6 c0             	movzx  eax,al
1000a2a1:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a2a4:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a2a8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a2ab:	c1 e8 06             	shr    eax,0x6
1000a2ae:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a2b1:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a2b8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a2bb:	c1 e8 0e             	shr    eax,0xe
1000a2be:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a2c1:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a2c8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a2cb:	c1 e8 16             	shr    eax,0x16
1000a2ce:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a2d1:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a2d8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a2de:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a2e4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a2e7:	01 d0                	add    eax,edx
1000a2e9:	8b 00                	mov    eax,DWORD PTR [eax]
1000a2eb:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a2ee:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a2f4:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a2fa:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a2fd:	01 d0                	add    eax,edx
1000a2ff:	8b 00                	mov    eax,DWORD PTR [eax]
1000a301:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a304:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a30a:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a310:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a313:	01 d0                	add    eax,edx
1000a315:	8b 00                	mov    eax,DWORD PTR [eax]
1000a317:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a31a:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a320:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a323:	01 d0                	add    eax,edx
1000a325:	8b 00                	mov    eax,DWORD PTR [eax]
1000a327:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a32a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a32d:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a330:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
1000a336:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a339:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a33c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a33f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a342:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a345:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a348:	0f b6 c0             	movzx  eax,al
1000a34b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a34e:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a352:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a355:	c1 e8 06             	shr    eax,0x6
1000a358:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a35b:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a362:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a365:	c1 e8 0e             	shr    eax,0xe
1000a368:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a36b:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a372:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a375:	c1 e8 16             	shr    eax,0x16
1000a378:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a37b:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a382:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a388:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a38e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a391:	01 d0                	add    eax,edx
1000a393:	8b 00                	mov    eax,DWORD PTR [eax]
1000a395:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a398:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a39e:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a3a4:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a3a7:	01 d0                	add    eax,edx
1000a3a9:	8b 00                	mov    eax,DWORD PTR [eax]
1000a3ab:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a3ae:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a3b4:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a3ba:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a3bd:	01 d0                	add    eax,edx
1000a3bf:	8b 00                	mov    eax,DWORD PTR [eax]
1000a3c1:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a3c4:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a3ca:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a3cd:	01 d0                	add    eax,edx
1000a3cf:	8b 00                	mov    eax,DWORD PTR [eax]
1000a3d1:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a3d4:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a3d7:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a3da:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
1000a3e0:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a3e3:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a3e6:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a3e9:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a3ec:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a3ef:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a3f2:	0f b6 c0             	movzx  eax,al
1000a3f5:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a3f8:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a3fc:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a3ff:	c1 e8 06             	shr    eax,0x6
1000a402:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a405:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a40c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a40f:	c1 e8 0e             	shr    eax,0xe
1000a412:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a415:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a41c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a41f:	c1 e8 16             	shr    eax,0x16
1000a422:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a425:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a42c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a432:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a438:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a43b:	01 d0                	add    eax,edx
1000a43d:	8b 00                	mov    eax,DWORD PTR [eax]
1000a43f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a442:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a448:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a44e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a451:	01 d0                	add    eax,edx
1000a453:	8b 00                	mov    eax,DWORD PTR [eax]
1000a455:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a458:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a45e:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a464:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a467:	01 d0                	add    eax,edx
1000a469:	8b 00                	mov    eax,DWORD PTR [eax]
1000a46b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a46e:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a474:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a477:	01 d0                	add    eax,edx
1000a479:	8b 00                	mov    eax,DWORD PTR [eax]
1000a47b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a47e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a481:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a484:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
1000a48a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a48d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a490:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a493:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a496:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a499:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a49c:	0f b6 c0             	movzx  eax,al
1000a49f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a4a2:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a4a6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a4a9:	c1 e8 06             	shr    eax,0x6
1000a4ac:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a4af:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a4b6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a4b9:	c1 e8 0e             	shr    eax,0xe
1000a4bc:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a4bf:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a4c6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a4c9:	c1 e8 16             	shr    eax,0x16
1000a4cc:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a4cf:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a4d6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a4dc:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a4e2:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a4e5:	01 d0                	add    eax,edx
1000a4e7:	8b 00                	mov    eax,DWORD PTR [eax]
1000a4e9:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a4ec:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a4f2:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a4f8:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a4fb:	01 d0                	add    eax,edx
1000a4fd:	8b 00                	mov    eax,DWORD PTR [eax]
1000a4ff:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a502:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a508:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a50e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a511:	01 d0                	add    eax,edx
1000a513:	8b 00                	mov    eax,DWORD PTR [eax]
1000a515:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a518:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a51e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a521:	01 d0                	add    eax,edx
1000a523:	8b 00                	mov    eax,DWORD PTR [eax]
1000a525:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a528:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a52b:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a52e:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
1000a534:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a537:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a53a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a53d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a540:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a543:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a546:	0f b6 c0             	movzx  eax,al
1000a549:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a54c:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a550:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a553:	c1 e8 06             	shr    eax,0x6
1000a556:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a559:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a560:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a563:	c1 e8 0e             	shr    eax,0xe
1000a566:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a569:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a570:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a573:	c1 e8 16             	shr    eax,0x16
1000a576:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a579:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a580:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a586:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a58c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a58f:	01 d0                	add    eax,edx
1000a591:	8b 00                	mov    eax,DWORD PTR [eax]
1000a593:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a596:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a59c:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a5a2:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a5a5:	01 d0                	add    eax,edx
1000a5a7:	8b 00                	mov    eax,DWORD PTR [eax]
1000a5a9:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a5ac:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a5b2:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a5b8:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a5bb:	01 d0                	add    eax,edx
1000a5bd:	8b 00                	mov    eax,DWORD PTR [eax]
1000a5bf:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a5c2:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a5c8:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a5cb:	01 d0                	add    eax,edx
1000a5cd:	8b 00                	mov    eax,DWORD PTR [eax]
1000a5cf:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a5d2:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a5d5:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a5d8:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
1000a5de:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a5e1:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a5e4:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a5e7:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a5ea:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a5ed:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a5f0:	0f b6 c0             	movzx  eax,al
1000a5f3:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a5f6:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a5fa:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a5fd:	c1 e8 06             	shr    eax,0x6
1000a600:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a603:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a60a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a60d:	c1 e8 0e             	shr    eax,0xe
1000a610:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a613:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a61a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a61d:	c1 e8 16             	shr    eax,0x16
1000a620:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a623:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a62a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a630:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a636:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a639:	01 d0                	add    eax,edx
1000a63b:	8b 00                	mov    eax,DWORD PTR [eax]
1000a63d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a640:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a646:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a64c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a64f:	01 d0                	add    eax,edx
1000a651:	8b 00                	mov    eax,DWORD PTR [eax]
1000a653:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a656:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a65c:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a662:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a665:	01 d0                	add    eax,edx
1000a667:	8b 00                	mov    eax,DWORD PTR [eax]
1000a669:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a66c:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a672:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a675:	01 d0                	add    eax,edx
1000a677:	8b 00                	mov    eax,DWORD PTR [eax]
1000a679:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a67c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a67f:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a682:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
1000a688:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a68b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a68e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a691:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a694:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a697:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a69a:	0f b6 c0             	movzx  eax,al
1000a69d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a6a0:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a6a4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a6a7:	c1 e8 06             	shr    eax,0x6
1000a6aa:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a6ad:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a6b4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a6b7:	c1 e8 0e             	shr    eax,0xe
1000a6ba:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a6bd:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a6c4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a6c7:	c1 e8 16             	shr    eax,0x16
1000a6ca:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a6cd:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a6d4:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a6da:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a6e0:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a6e3:	01 d0                	add    eax,edx
1000a6e5:	8b 00                	mov    eax,DWORD PTR [eax]
1000a6e7:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a6ea:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a6f0:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a6f6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a6f9:	01 d0                	add    eax,edx
1000a6fb:	8b 00                	mov    eax,DWORD PTR [eax]
1000a6fd:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a700:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a706:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a70c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a70f:	01 d0                	add    eax,edx
1000a711:	8b 00                	mov    eax,DWORD PTR [eax]
1000a713:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a716:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a71c:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a71f:	01 d0                	add    eax,edx
1000a721:	8b 00                	mov    eax,DWORD PTR [eax]
1000a723:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a726:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a729:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a72c:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
1000a732:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a735:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a738:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a73b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a73e:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a741:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a744:	0f b6 c0             	movzx  eax,al
1000a747:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a74a:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a74e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a751:	c1 e8 06             	shr    eax,0x6
1000a754:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a757:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a75e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a761:	c1 e8 0e             	shr    eax,0xe
1000a764:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a767:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a76e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a771:	c1 e8 16             	shr    eax,0x16
1000a774:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a777:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a77e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a784:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a78a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a78d:	01 d0                	add    eax,edx
1000a78f:	8b 00                	mov    eax,DWORD PTR [eax]
1000a791:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a794:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a79a:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a7a0:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a7a3:	01 d0                	add    eax,edx
1000a7a5:	8b 00                	mov    eax,DWORD PTR [eax]
1000a7a7:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a7aa:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a7b0:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a7b6:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a7b9:	01 d0                	add    eax,edx
1000a7bb:	8b 00                	mov    eax,DWORD PTR [eax]
1000a7bd:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a7c0:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a7c6:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a7c9:	01 d0                	add    eax,edx
1000a7cb:	8b 00                	mov    eax,DWORD PTR [eax]
1000a7cd:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a7d0:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a7d3:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a7d6:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
1000a7dc:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a7df:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a7e2:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a7e5:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a7e8:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a7eb:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a7ee:	0f b6 c0             	movzx  eax,al
1000a7f1:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a7f4:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a7f8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a7fb:	c1 e8 06             	shr    eax,0x6
1000a7fe:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a801:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a808:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a80b:	c1 e8 0e             	shr    eax,0xe
1000a80e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a811:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a818:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a81b:	c1 e8 16             	shr    eax,0x16
1000a81e:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a821:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a828:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a82e:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a834:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a837:	01 d0                	add    eax,edx
1000a839:	8b 00                	mov    eax,DWORD PTR [eax]
1000a83b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a83e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a844:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a84a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a84d:	01 d0                	add    eax,edx
1000a84f:	8b 00                	mov    eax,DWORD PTR [eax]
1000a851:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a854:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a85a:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a860:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a863:	01 d0                	add    eax,edx
1000a865:	8b 00                	mov    eax,DWORD PTR [eax]
1000a867:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a86a:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a870:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a873:	01 d0                	add    eax,edx
1000a875:	8b 00                	mov    eax,DWORD PTR [eax]
1000a877:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a87a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a87d:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a880:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
1000a886:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a889:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a88c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a88f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a892:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a895:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a898:	0f b6 c0             	movzx  eax,al
1000a89b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a89e:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a8a2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a8a5:	c1 e8 06             	shr    eax,0x6
1000a8a8:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a8ab:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a8b2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a8b5:	c1 e8 0e             	shr    eax,0xe
1000a8b8:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a8bb:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a8c2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a8c5:	c1 e8 16             	shr    eax,0x16
1000a8c8:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a8cb:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a8d2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a8d8:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a8de:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a8e1:	01 d0                	add    eax,edx
1000a8e3:	8b 00                	mov    eax,DWORD PTR [eax]
1000a8e5:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a8e8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a8ee:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a8f4:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a8f7:	01 d0                	add    eax,edx
1000a8f9:	8b 00                	mov    eax,DWORD PTR [eax]
1000a8fb:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a8fe:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a904:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a90a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a90d:	01 d0                	add    eax,edx
1000a90f:	8b 00                	mov    eax,DWORD PTR [eax]
1000a911:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a914:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a91a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a91d:	01 d0                	add    eax,edx
1000a91f:	8b 00                	mov    eax,DWORD PTR [eax]
1000a921:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a924:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a927:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a92a:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
1000a930:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a933:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a936:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a939:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a93c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a93f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a942:	0f b6 c0             	movzx  eax,al
1000a945:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a948:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a94c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a94f:	c1 e8 06             	shr    eax,0x6
1000a952:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a955:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a95c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a95f:	c1 e8 0e             	shr    eax,0xe
1000a962:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a965:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a96c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a96f:	c1 e8 16             	shr    eax,0x16
1000a972:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a975:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a97c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a982:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a988:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a98b:	01 d0                	add    eax,edx
1000a98d:	8b 00                	mov    eax,DWORD PTR [eax]
1000a98f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a992:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a998:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a99e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a9a1:	01 d0                	add    eax,edx
1000a9a3:	8b 00                	mov    eax,DWORD PTR [eax]
1000a9a5:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a9a8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a9ae:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a9b4:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a9b7:	01 d0                	add    eax,edx
1000a9b9:	8b 00                	mov    eax,DWORD PTR [eax]
1000a9bb:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a9be:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a9c4:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a9c7:	01 d0                	add    eax,edx
1000a9c9:	8b 00                	mov    eax,DWORD PTR [eax]
1000a9cb:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a9ce:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a9d1:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a9d4:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
1000a9da:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a9dd:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a9e0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a9e3:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a9e6:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a9e9:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a9ec:	0f b6 c0             	movzx  eax,al
1000a9ef:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a9f2:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a9f6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a9f9:	c1 e8 06             	shr    eax,0x6
1000a9fc:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a9ff:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000aa06:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000aa09:	c1 e8 0e             	shr    eax,0xe
1000aa0c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000aa0f:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000aa16:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000aa19:	c1 e8 16             	shr    eax,0x16
1000aa1c:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000aa1f:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000aa26:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000aa2c:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000aa32:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000aa35:	01 d0                	add    eax,edx
1000aa37:	8b 00                	mov    eax,DWORD PTR [eax]
1000aa39:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000aa3c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000aa42:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000aa48:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000aa4b:	01 d0                	add    eax,edx
1000aa4d:	8b 00                	mov    eax,DWORD PTR [eax]
1000aa4f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000aa52:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000aa58:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000aa5e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000aa61:	01 d0                	add    eax,edx
1000aa63:	8b 00                	mov    eax,DWORD PTR [eax]
1000aa65:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000aa68:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000aa6e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000aa71:	01 d0                	add    eax,edx
1000aa73:	8b 00                	mov    eax,DWORD PTR [eax]
1000aa75:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000aa78:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000aa7b:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000aa7e:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
1000aa84:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000aa87:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000aa8a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000aa8d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000aa90:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000aa93:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000aa96:	0f b6 c0             	movzx  eax,al
1000aa99:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000aa9c:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000aaa0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000aaa3:	c1 e8 06             	shr    eax,0x6
1000aaa6:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000aaa9:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000aab0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000aab3:	c1 e8 0e             	shr    eax,0xe
1000aab6:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000aab9:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000aac0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000aac3:	c1 e8 16             	shr    eax,0x16
1000aac6:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000aac9:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000aad0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000aad6:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000aadc:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000aadf:	01 d0                	add    eax,edx
1000aae1:	8b 00                	mov    eax,DWORD PTR [eax]
1000aae3:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000aae6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000aaec:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000aaf2:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000aaf5:	01 d0                	add    eax,edx
1000aaf7:	8b 00                	mov    eax,DWORD PTR [eax]
1000aaf9:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000aafc:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ab02:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000ab08:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ab0b:	01 d0                	add    eax,edx
1000ab0d:	8b 00                	mov    eax,DWORD PTR [eax]
1000ab0f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ab12:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000ab18:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000ab1b:	01 d0                	add    eax,edx
1000ab1d:	8b 00                	mov    eax,DWORD PTR [eax]
1000ab1f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000ab22:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000ab25:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000ab28:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
1000ab2e:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000ab31:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000ab34:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000ab37:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ab3a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000ab3d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ab40:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000ab43:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ab46:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
1000ab49:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
1000ab4f:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
1000ab52:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000ab55:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
1000ab58:	8d 50 f8             	lea    edx,[eax-0x8]
1000ab5b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ab5e:	89 02                	mov    DWORD PTR [edx],eax
1000ab60:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
1000ab63:	8d 50 fc             	lea    edx,[eax-0x4]
1000ab66:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ab69:	89 02                	mov    DWORD PTR [edx],eax
1000ab6b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ab71:	05 fc 0f 00 00       	add    eax,0xffc
1000ab76:	39 45 dc             	cmp    DWORD PTR [ebp-0x24],eax
1000ab79:	0f 82 11 f5 ff ff    	jb     1000a090 <_crypt_blowfish_rn+0x463e>
1000ab7f:	ff 4d d8             	dec    DWORD PTR [ebp-0x28]
1000ab82:	83 7d d8 00          	cmp    DWORD PTR [ebp-0x28],0x0
1000ab86:	0f 85 82 d1 ff ff    	jne    10007d0e <_crypt_blowfish_rn+0x22bc>
1000ab8c:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [ebp-0x2c],0x0
1000ab93:	e9 1b 0b 00 00       	jmp    1000b6b3 <_crypt_blowfish_rn+0x5c61>
1000ab98:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
1000ab9b:	8b 04 85 80 c3 00 10 	mov    eax,DWORD PTR [eax*4+0x1000c380]	1000ab9e: R_386_32	.data
1000aba2:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000aba5:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
1000aba8:	40                   	inc    eax
1000aba9:	8b 04 85 80 c3 00 10 	mov    eax,DWORD PTR [eax*4+0x1000c380]	1000abac: R_386_32	.data
1000abb0:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
1000abb3:	c7 45 d8 40 00 00 00 	mov    DWORD PTR [ebp-0x28],0x40
1000abba:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
1000abc0:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000abc3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000abc6:	0f b6 c0             	movzx  eax,al
1000abc9:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000abcc:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000abd0:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000abd3:	c1 e8 06             	shr    eax,0x6
1000abd6:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000abd9:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000abe0:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000abe3:	c1 e8 0e             	shr    eax,0xe
1000abe6:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000abe9:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000abf0:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000abf3:	c1 e8 16             	shr    eax,0x16
1000abf6:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000abf9:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000ac00:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ac06:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000ac0c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000ac0f:	01 d0                	add    eax,edx
1000ac11:	8b 00                	mov    eax,DWORD PTR [eax]
1000ac13:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000ac16:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ac1c:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000ac22:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000ac25:	01 d0                	add    eax,edx
1000ac27:	8b 00                	mov    eax,DWORD PTR [eax]
1000ac29:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000ac2c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ac32:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000ac38:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ac3b:	01 d0                	add    eax,edx
1000ac3d:	8b 00                	mov    eax,DWORD PTR [eax]
1000ac3f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ac42:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000ac48:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000ac4b:	01 d0                	add    eax,edx
1000ac4d:	8b 00                	mov    eax,DWORD PTR [eax]
1000ac4f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000ac52:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000ac55:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000ac58:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
1000ac5e:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000ac61:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000ac64:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000ac67:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ac6a:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000ac6d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ac70:	0f b6 c0             	movzx  eax,al
1000ac73:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000ac76:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000ac7a:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ac7d:	c1 e8 06             	shr    eax,0x6
1000ac80:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000ac83:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000ac8a:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ac8d:	c1 e8 0e             	shr    eax,0xe
1000ac90:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ac93:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000ac9a:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ac9d:	c1 e8 16             	shr    eax,0x16
1000aca0:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000aca3:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000acaa:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000acb0:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000acb6:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000acb9:	01 d0                	add    eax,edx
1000acbb:	8b 00                	mov    eax,DWORD PTR [eax]
1000acbd:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000acc0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000acc6:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000accc:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000accf:	01 d0                	add    eax,edx
1000acd1:	8b 00                	mov    eax,DWORD PTR [eax]
1000acd3:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000acd6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000acdc:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000ace2:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ace5:	01 d0                	add    eax,edx
1000ace7:	8b 00                	mov    eax,DWORD PTR [eax]
1000ace9:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000acec:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000acf2:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000acf5:	01 d0                	add    eax,edx
1000acf7:	8b 00                	mov    eax,DWORD PTR [eax]
1000acf9:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000acfc:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000acff:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000ad02:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
1000ad08:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000ad0b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000ad0e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000ad11:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ad14:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000ad17:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ad1a:	0f b6 c0             	movzx  eax,al
1000ad1d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000ad20:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000ad24:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ad27:	c1 e8 06             	shr    eax,0x6
1000ad2a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000ad2d:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000ad34:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ad37:	c1 e8 0e             	shr    eax,0xe
1000ad3a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ad3d:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000ad44:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ad47:	c1 e8 16             	shr    eax,0x16
1000ad4a:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000ad4d:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000ad54:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ad5a:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000ad60:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000ad63:	01 d0                	add    eax,edx
1000ad65:	8b 00                	mov    eax,DWORD PTR [eax]
1000ad67:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000ad6a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ad70:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000ad76:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000ad79:	01 d0                	add    eax,edx
1000ad7b:	8b 00                	mov    eax,DWORD PTR [eax]
1000ad7d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000ad80:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ad86:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000ad8c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ad8f:	01 d0                	add    eax,edx
1000ad91:	8b 00                	mov    eax,DWORD PTR [eax]
1000ad93:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ad96:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000ad9c:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000ad9f:	01 d0                	add    eax,edx
1000ada1:	8b 00                	mov    eax,DWORD PTR [eax]
1000ada3:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000ada6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000ada9:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000adac:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
1000adb2:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000adb5:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000adb8:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000adbb:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000adbe:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000adc1:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000adc4:	0f b6 c0             	movzx  eax,al
1000adc7:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000adca:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000adce:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000add1:	c1 e8 06             	shr    eax,0x6
1000add4:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000add7:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000adde:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ade1:	c1 e8 0e             	shr    eax,0xe
1000ade4:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ade7:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000adee:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000adf1:	c1 e8 16             	shr    eax,0x16
1000adf4:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000adf7:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000adfe:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ae04:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000ae0a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000ae0d:	01 d0                	add    eax,edx
1000ae0f:	8b 00                	mov    eax,DWORD PTR [eax]
1000ae11:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000ae14:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ae1a:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000ae20:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000ae23:	01 d0                	add    eax,edx
1000ae25:	8b 00                	mov    eax,DWORD PTR [eax]
1000ae27:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000ae2a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ae30:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000ae36:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ae39:	01 d0                	add    eax,edx
1000ae3b:	8b 00                	mov    eax,DWORD PTR [eax]
1000ae3d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ae40:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000ae46:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000ae49:	01 d0                	add    eax,edx
1000ae4b:	8b 00                	mov    eax,DWORD PTR [eax]
1000ae4d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000ae50:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000ae53:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000ae56:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
1000ae5c:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000ae5f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000ae62:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000ae65:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ae68:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000ae6b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ae6e:	0f b6 c0             	movzx  eax,al
1000ae71:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000ae74:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000ae78:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ae7b:	c1 e8 06             	shr    eax,0x6
1000ae7e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000ae81:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000ae88:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ae8b:	c1 e8 0e             	shr    eax,0xe
1000ae8e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ae91:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000ae98:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ae9b:	c1 e8 16             	shr    eax,0x16
1000ae9e:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000aea1:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000aea8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000aeae:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000aeb4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000aeb7:	01 d0                	add    eax,edx
1000aeb9:	8b 00                	mov    eax,DWORD PTR [eax]
1000aebb:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000aebe:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000aec4:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000aeca:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000aecd:	01 d0                	add    eax,edx
1000aecf:	8b 00                	mov    eax,DWORD PTR [eax]
1000aed1:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000aed4:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000aeda:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000aee0:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000aee3:	01 d0                	add    eax,edx
1000aee5:	8b 00                	mov    eax,DWORD PTR [eax]
1000aee7:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000aeea:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000aef0:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000aef3:	01 d0                	add    eax,edx
1000aef5:	8b 00                	mov    eax,DWORD PTR [eax]
1000aef7:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000aefa:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000aefd:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000af00:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
1000af06:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000af09:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000af0c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000af0f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000af12:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000af15:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000af18:	0f b6 c0             	movzx  eax,al
1000af1b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000af1e:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000af22:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000af25:	c1 e8 06             	shr    eax,0x6
1000af28:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000af2b:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000af32:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000af35:	c1 e8 0e             	shr    eax,0xe
1000af38:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000af3b:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000af42:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000af45:	c1 e8 16             	shr    eax,0x16
1000af48:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000af4b:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000af52:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000af58:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000af5e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000af61:	01 d0                	add    eax,edx
1000af63:	8b 00                	mov    eax,DWORD PTR [eax]
1000af65:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000af68:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000af6e:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000af74:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000af77:	01 d0                	add    eax,edx
1000af79:	8b 00                	mov    eax,DWORD PTR [eax]
1000af7b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000af7e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000af84:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000af8a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000af8d:	01 d0                	add    eax,edx
1000af8f:	8b 00                	mov    eax,DWORD PTR [eax]
1000af91:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000af94:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000af9a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000af9d:	01 d0                	add    eax,edx
1000af9f:	8b 00                	mov    eax,DWORD PTR [eax]
1000afa1:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000afa4:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000afa7:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000afaa:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
1000afb0:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000afb3:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000afb6:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000afb9:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000afbc:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000afbf:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000afc2:	0f b6 c0             	movzx  eax,al
1000afc5:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000afc8:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000afcc:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000afcf:	c1 e8 06             	shr    eax,0x6
1000afd2:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000afd5:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000afdc:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000afdf:	c1 e8 0e             	shr    eax,0xe
1000afe2:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000afe5:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000afec:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000afef:	c1 e8 16             	shr    eax,0x16
1000aff2:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000aff5:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000affc:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b002:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b008:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b00b:	01 d0                	add    eax,edx
1000b00d:	8b 00                	mov    eax,DWORD PTR [eax]
1000b00f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b012:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b018:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b01e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b021:	01 d0                	add    eax,edx
1000b023:	8b 00                	mov    eax,DWORD PTR [eax]
1000b025:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b028:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b02e:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b034:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b037:	01 d0                	add    eax,edx
1000b039:	8b 00                	mov    eax,DWORD PTR [eax]
1000b03b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b03e:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b044:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b047:	01 d0                	add    eax,edx
1000b049:	8b 00                	mov    eax,DWORD PTR [eax]
1000b04b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b04e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b051:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b054:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
1000b05a:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b05d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b060:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b063:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b066:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b069:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b06c:	0f b6 c0             	movzx  eax,al
1000b06f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b072:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b076:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b079:	c1 e8 06             	shr    eax,0x6
1000b07c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b07f:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b086:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b089:	c1 e8 0e             	shr    eax,0xe
1000b08c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b08f:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b096:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b099:	c1 e8 16             	shr    eax,0x16
1000b09c:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b09f:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b0a6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b0ac:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b0b2:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b0b5:	01 d0                	add    eax,edx
1000b0b7:	8b 00                	mov    eax,DWORD PTR [eax]
1000b0b9:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b0bc:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b0c2:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b0c8:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b0cb:	01 d0                	add    eax,edx
1000b0cd:	8b 00                	mov    eax,DWORD PTR [eax]
1000b0cf:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b0d2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b0d8:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b0de:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b0e1:	01 d0                	add    eax,edx
1000b0e3:	8b 00                	mov    eax,DWORD PTR [eax]
1000b0e5:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b0e8:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b0ee:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b0f1:	01 d0                	add    eax,edx
1000b0f3:	8b 00                	mov    eax,DWORD PTR [eax]
1000b0f5:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b0f8:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b0fb:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b0fe:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
1000b104:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b107:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b10a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b10d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b110:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b113:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b116:	0f b6 c0             	movzx  eax,al
1000b119:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b11c:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b120:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b123:	c1 e8 06             	shr    eax,0x6
1000b126:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b129:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b130:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b133:	c1 e8 0e             	shr    eax,0xe
1000b136:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b139:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b140:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b143:	c1 e8 16             	shr    eax,0x16
1000b146:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b149:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b150:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b156:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b15c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b15f:	01 d0                	add    eax,edx
1000b161:	8b 00                	mov    eax,DWORD PTR [eax]
1000b163:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b166:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b16c:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b172:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b175:	01 d0                	add    eax,edx
1000b177:	8b 00                	mov    eax,DWORD PTR [eax]
1000b179:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b17c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b182:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b188:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b18b:	01 d0                	add    eax,edx
1000b18d:	8b 00                	mov    eax,DWORD PTR [eax]
1000b18f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b192:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b198:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b19b:	01 d0                	add    eax,edx
1000b19d:	8b 00                	mov    eax,DWORD PTR [eax]
1000b19f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b1a2:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b1a5:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b1a8:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
1000b1ae:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b1b1:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b1b4:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b1b7:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b1ba:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b1bd:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b1c0:	0f b6 c0             	movzx  eax,al
1000b1c3:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b1c6:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b1ca:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b1cd:	c1 e8 06             	shr    eax,0x6
1000b1d0:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b1d3:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b1da:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b1dd:	c1 e8 0e             	shr    eax,0xe
1000b1e0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b1e3:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b1ea:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b1ed:	c1 e8 16             	shr    eax,0x16
1000b1f0:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b1f3:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b1fa:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b200:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b206:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b209:	01 d0                	add    eax,edx
1000b20b:	8b 00                	mov    eax,DWORD PTR [eax]
1000b20d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b210:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b216:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b21c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b21f:	01 d0                	add    eax,edx
1000b221:	8b 00                	mov    eax,DWORD PTR [eax]
1000b223:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b226:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b22c:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b232:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b235:	01 d0                	add    eax,edx
1000b237:	8b 00                	mov    eax,DWORD PTR [eax]
1000b239:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b23c:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b242:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b245:	01 d0                	add    eax,edx
1000b247:	8b 00                	mov    eax,DWORD PTR [eax]
1000b249:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b24c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b24f:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b252:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
1000b258:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b25b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b25e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b261:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b264:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b267:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b26a:	0f b6 c0             	movzx  eax,al
1000b26d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b270:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b274:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b277:	c1 e8 06             	shr    eax,0x6
1000b27a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b27d:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b284:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b287:	c1 e8 0e             	shr    eax,0xe
1000b28a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b28d:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b294:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b297:	c1 e8 16             	shr    eax,0x16
1000b29a:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b29d:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b2a4:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b2aa:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b2b0:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b2b3:	01 d0                	add    eax,edx
1000b2b5:	8b 00                	mov    eax,DWORD PTR [eax]
1000b2b7:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b2ba:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b2c0:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b2c6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b2c9:	01 d0                	add    eax,edx
1000b2cb:	8b 00                	mov    eax,DWORD PTR [eax]
1000b2cd:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b2d0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b2d6:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b2dc:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b2df:	01 d0                	add    eax,edx
1000b2e1:	8b 00                	mov    eax,DWORD PTR [eax]
1000b2e3:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b2e6:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b2ec:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b2ef:	01 d0                	add    eax,edx
1000b2f1:	8b 00                	mov    eax,DWORD PTR [eax]
1000b2f3:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b2f6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b2f9:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b2fc:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
1000b302:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b305:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b308:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b30b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b30e:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b311:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b314:	0f b6 c0             	movzx  eax,al
1000b317:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b31a:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b31e:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b321:	c1 e8 06             	shr    eax,0x6
1000b324:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b327:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b32e:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b331:	c1 e8 0e             	shr    eax,0xe
1000b334:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b337:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b33e:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b341:	c1 e8 16             	shr    eax,0x16
1000b344:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b347:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b34e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b354:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b35a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b35d:	01 d0                	add    eax,edx
1000b35f:	8b 00                	mov    eax,DWORD PTR [eax]
1000b361:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b364:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b36a:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b370:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b373:	01 d0                	add    eax,edx
1000b375:	8b 00                	mov    eax,DWORD PTR [eax]
1000b377:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b37a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b380:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b386:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b389:	01 d0                	add    eax,edx
1000b38b:	8b 00                	mov    eax,DWORD PTR [eax]
1000b38d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b390:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b396:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b399:	01 d0                	add    eax,edx
1000b39b:	8b 00                	mov    eax,DWORD PTR [eax]
1000b39d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b3a0:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b3a3:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b3a6:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
1000b3ac:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b3af:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b3b2:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b3b5:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b3b8:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b3bb:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b3be:	0f b6 c0             	movzx  eax,al
1000b3c1:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b3c4:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b3c8:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b3cb:	c1 e8 06             	shr    eax,0x6
1000b3ce:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b3d1:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b3d8:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b3db:	c1 e8 0e             	shr    eax,0xe
1000b3de:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b3e1:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b3e8:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b3eb:	c1 e8 16             	shr    eax,0x16
1000b3ee:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b3f1:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b3f8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b3fe:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b404:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b407:	01 d0                	add    eax,edx
1000b409:	8b 00                	mov    eax,DWORD PTR [eax]
1000b40b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b40e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b414:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b41a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b41d:	01 d0                	add    eax,edx
1000b41f:	8b 00                	mov    eax,DWORD PTR [eax]
1000b421:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b424:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b42a:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b430:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b433:	01 d0                	add    eax,edx
1000b435:	8b 00                	mov    eax,DWORD PTR [eax]
1000b437:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b43a:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b440:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b443:	01 d0                	add    eax,edx
1000b445:	8b 00                	mov    eax,DWORD PTR [eax]
1000b447:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b44a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b44d:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b450:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
1000b456:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b459:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b45c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b45f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b462:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b465:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b468:	0f b6 c0             	movzx  eax,al
1000b46b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b46e:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b472:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b475:	c1 e8 06             	shr    eax,0x6
1000b478:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b47b:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b482:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b485:	c1 e8 0e             	shr    eax,0xe
1000b488:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b48b:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b492:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b495:	c1 e8 16             	shr    eax,0x16
1000b498:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b49b:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b4a2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b4a8:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b4ae:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b4b1:	01 d0                	add    eax,edx
1000b4b3:	8b 00                	mov    eax,DWORD PTR [eax]
1000b4b5:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b4b8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b4be:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b4c4:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b4c7:	01 d0                	add    eax,edx
1000b4c9:	8b 00                	mov    eax,DWORD PTR [eax]
1000b4cb:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b4ce:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b4d4:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b4da:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b4dd:	01 d0                	add    eax,edx
1000b4df:	8b 00                	mov    eax,DWORD PTR [eax]
1000b4e1:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b4e4:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b4ea:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b4ed:	01 d0                	add    eax,edx
1000b4ef:	8b 00                	mov    eax,DWORD PTR [eax]
1000b4f1:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b4f4:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b4f7:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b4fa:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
1000b500:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b503:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b506:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b509:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b50c:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b50f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b512:	0f b6 c0             	movzx  eax,al
1000b515:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b518:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b51c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b51f:	c1 e8 06             	shr    eax,0x6
1000b522:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b525:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b52c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b52f:	c1 e8 0e             	shr    eax,0xe
1000b532:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b535:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b53c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b53f:	c1 e8 16             	shr    eax,0x16
1000b542:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b545:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b54c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b552:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b558:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b55b:	01 d0                	add    eax,edx
1000b55d:	8b 00                	mov    eax,DWORD PTR [eax]
1000b55f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b562:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b568:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b56e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b571:	01 d0                	add    eax,edx
1000b573:	8b 00                	mov    eax,DWORD PTR [eax]
1000b575:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b578:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b57e:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b584:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b587:	01 d0                	add    eax,edx
1000b589:	8b 00                	mov    eax,DWORD PTR [eax]
1000b58b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b58e:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b594:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b597:	01 d0                	add    eax,edx
1000b599:	8b 00                	mov    eax,DWORD PTR [eax]
1000b59b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b59e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b5a1:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b5a4:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
1000b5aa:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b5ad:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b5b0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b5b3:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b5b6:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b5b9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b5bc:	0f b6 c0             	movzx  eax,al
1000b5bf:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b5c2:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b5c6:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b5c9:	c1 e8 06             	shr    eax,0x6
1000b5cc:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b5cf:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b5d6:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b5d9:	c1 e8 0e             	shr    eax,0xe
1000b5dc:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b5df:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b5e6:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b5e9:	c1 e8 16             	shr    eax,0x16
1000b5ec:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b5ef:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b5f6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b5fc:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b602:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b605:	01 d0                	add    eax,edx
1000b607:	8b 00                	mov    eax,DWORD PTR [eax]
1000b609:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b60c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b612:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b618:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b61b:	01 d0                	add    eax,edx
1000b61d:	8b 00                	mov    eax,DWORD PTR [eax]
1000b61f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b622:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b628:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b62e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b631:	01 d0                	add    eax,edx
1000b633:	8b 00                	mov    eax,DWORD PTR [eax]
1000b635:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b638:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b63e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b641:	01 d0                	add    eax,edx
1000b643:	8b 00                	mov    eax,DWORD PTR [eax]
1000b645:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b648:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b64b:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b64e:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
1000b654:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b657:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b65a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b65d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b660:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b663:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b666:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b669:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b66c:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
1000b66f:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
1000b675:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
1000b678:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000b67b:	ff 4d d8             	dec    DWORD PTR [ebp-0x28]
1000b67e:	83 7d d8 00          	cmp    DWORD PTR [ebp-0x28],0x0
1000b682:	0f 85 32 f5 ff ff    	jne    1000abba <_crypt_blowfish_rn+0x5168>
1000b688:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
1000b68b:	8d 90 24 04 00 00    	lea    edx,[eax+0x424]
1000b691:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b694:	89 84 95 1c ef ff ff 	mov    DWORD PTR [ebp+edx*4-0x10e4],eax
1000b69b:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
1000b69e:	40                   	inc    eax
1000b69f:	8d 90 24 04 00 00    	lea    edx,[eax+0x424]
1000b6a5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b6a8:	89 84 95 1c ef ff ff 	mov    DWORD PTR [ebp+edx*4-0x10e4],eax
1000b6af:	83 45 d4 02          	add    DWORD PTR [ebp-0x2c],0x2
1000b6b3:	83 7d d4 05          	cmp    DWORD PTR [ebp-0x2c],0x5
1000b6b7:	0f 8e db f4 ff ff    	jle    1000ab98 <_crypt_blowfish_rn+0x5146>
1000b6bd:	83 ec 04             	sub    esp,0x4
1000b6c0:	6a 1c                	push   0x1c
1000b6c2:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000b6c5:	ff 75 10             	push   DWORD PTR [ebp+0x10]
1000b6c8:	e8 fc ff ff ff       	call   1000b6c9 <_crypt_blowfish_rn+0x5c77>	1000b6c9: R_386_PC32	memcpy
1000b6cd:	83 c4 10             	add    esp,0x10
1000b6d0:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000b6d3:	83 c0 1c             	add    eax,0x1c
1000b6d6:	8a 00                	mov    al,BYTE PTR [eax]
1000b6d8:	0f be c0             	movsx  eax,al
1000b6db:	83 e8 20             	sub    eax,0x20
1000b6de:	8a 80 60 d4 00 10    	mov    al,BYTE PTR [eax+0x1000d460]	1000b6e0: R_386_32	.data
1000b6e4:	0f b6 c0             	movzx  eax,al
1000b6e7:	83 e0 30             	and    eax,0x30
1000b6ea:	8a 90 00 d4 00 10    	mov    dl,BYTE PTR [eax+0x1000d400]	1000b6ec: R_386_32	.data
1000b6f0:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
1000b6f3:	83 c0 1c             	add    eax,0x1c
1000b6f6:	88 10                	mov    BYTE PTR [eax],dl
1000b6f8:	83 ec 08             	sub    esp,0x8
1000b6fb:	6a 06                	push   0x6
1000b6fd:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b703:	05 90 10 00 00       	add    eax,0x1090
1000b708:	50                   	push   eax
1000b709:	e8 5b a2 ff ff       	call   10005969 <BF_swap>
1000b70e:	83 c4 10             	add    esp,0x10
1000b711:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
1000b714:	83 c0 1d             	add    eax,0x1d
1000b717:	83 ec 04             	sub    esp,0x4
1000b71a:	6a 17                	push   0x17
1000b71c:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b722:	81 c2 90 10 00 00    	add    edx,0x1090
1000b728:	52                   	push   edx
1000b729:	50                   	push   eax
1000b72a:	e8 10 a1 ff ff       	call   1000583f <BF_encode>
1000b72f:	83 c4 10             	add    esp,0x10
1000b732:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
1000b735:	83 c0 3c             	add    eax,0x3c
1000b738:	c6 00 00             	mov    BYTE PTR [eax],0x0
1000b73b:	83 ec 08             	sub    esp,0x8
1000b73e:	68 a8 10 00 00       	push   0x10a8
1000b743:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b749:	50                   	push   eax
1000b74a:	e8 fc 9e ff ff       	call   1000564b <clean>
1000b74f:	83 c4 10             	add    esp,0x10
1000b752:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
1000b755:	8d 65 f4             	lea    esp,[ebp-0xc]
1000b758:	5b                   	pop    ebx
1000b759:	5e                   	pop    esi
1000b75a:	5f                   	pop    edi
1000b75b:	5d                   	pop    ebp
1000b75c:	c3                   	ret    

1000b75d <_crypt_gensalt_blowfish_rn>:
1000b75d:	55                   	push   ebp
1000b75e:	89 e5                	mov    ebp,esp
1000b760:	83 7d 10 0f          	cmp    DWORD PTR [ebp+0x10],0xf
1000b764:	7e 18                	jle    1000b77e <_crypt_gensalt_blowfish_rn+0x21>
1000b766:	83 7d 18 1d          	cmp    DWORD PTR [ebp+0x18],0x1d
1000b76a:	7e 12                	jle    1000b77e <_crypt_gensalt_blowfish_rn+0x21>
1000b76c:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
1000b770:	74 39                	je     1000b7ab <_crypt_gensalt_blowfish_rn+0x4e>
1000b772:	83 7d 08 03          	cmp    DWORD PTR [ebp+0x8],0x3
1000b776:	76 06                	jbe    1000b77e <_crypt_gensalt_blowfish_rn+0x21>
1000b778:	83 7d 08 1f          	cmp    DWORD PTR [ebp+0x8],0x1f
1000b77c:	76 2d                	jbe    1000b7ab <_crypt_gensalt_blowfish_rn+0x4e>
1000b77e:	83 7d 18 00          	cmp    DWORD PTR [ebp+0x18],0x0
1000b782:	7e 06                	jle    1000b78a <_crypt_gensalt_blowfish_rn+0x2d>
1000b784:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b787:	c6 00 00             	mov    BYTE PTR [eax],0x0
1000b78a:	83 7d 18 1d          	cmp    DWORD PTR [ebp+0x18],0x1d
1000b78e:	7f 07                	jg     1000b797 <_crypt_gensalt_blowfish_rn+0x3a>
1000b790:	b8 22 00 00 00       	mov    eax,0x22
1000b795:	eb 05                	jmp    1000b79c <_crypt_gensalt_blowfish_rn+0x3f>
1000b797:	b8 16 00 00 00       	mov    eax,0x16
1000b79c:	a3 00 00 00 00       	mov    ds:0x0,eax	1000b79d: R_386_32	_bcrypt_errno
1000b7a1:	b8 00 00 00 00       	mov    eax,0x0
1000b7a6:	e9 96 00 00 00       	jmp    1000b841 <_crypt_gensalt_blowfish_rn+0xe4>
1000b7ab:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
1000b7af:	75 07                	jne    1000b7b8 <_crypt_gensalt_blowfish_rn+0x5b>
1000b7b1:	c7 45 08 05 00 00 00 	mov    DWORD PTR [ebp+0x8],0x5
1000b7b8:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b7bb:	c6 00 24             	mov    BYTE PTR [eax],0x24
1000b7be:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b7c1:	40                   	inc    eax
1000b7c2:	c6 00 32             	mov    BYTE PTR [eax],0x32
1000b7c5:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b7c8:	83 c0 02             	add    eax,0x2
1000b7cb:	c6 00 61             	mov    BYTE PTR [eax],0x61
1000b7ce:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b7d1:	83 c0 03             	add    eax,0x3
1000b7d4:	c6 00 24             	mov    BYTE PTR [eax],0x24
1000b7d7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000b7da:	ba cd cc cc cc       	mov    edx,0xcccccccd
1000b7df:	f7 e2                	mul    edx
1000b7e1:	89 d0                	mov    eax,edx
1000b7e3:	c1 e8 03             	shr    eax,0x3
1000b7e6:	8d 50 30             	lea    edx,[eax+0x30]
1000b7e9:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b7ec:	83 c0 04             	add    eax,0x4
1000b7ef:	88 10                	mov    BYTE PTR [eax],dl
1000b7f1:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000b7f4:	b8 cd cc cc cc       	mov    eax,0xcccccccd
1000b7f9:	f7 e1                	mul    ecx
1000b7fb:	c1 ea 03             	shr    edx,0x3
1000b7fe:	89 d0                	mov    eax,edx
1000b800:	c1 e0 02             	shl    eax,0x2
1000b803:	01 d0                	add    eax,edx
1000b805:	01 c0                	add    eax,eax
1000b807:	29 c1                	sub    ecx,eax
1000b809:	89 ca                	mov    edx,ecx
1000b80b:	88 d0                	mov    al,dl
1000b80d:	8d 50 30             	lea    edx,[eax+0x30]
1000b810:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b813:	83 c0 05             	add    eax,0x5
1000b816:	88 10                	mov    BYTE PTR [eax],dl
1000b818:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b81b:	83 c0 06             	add    eax,0x6
1000b81e:	c6 00 24             	mov    BYTE PTR [eax],0x24
1000b821:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b824:	83 c0 07             	add    eax,0x7
1000b827:	6a 10                	push   0x10
1000b829:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000b82c:	50                   	push   eax
1000b82d:	e8 0d a0 ff ff       	call   1000583f <BF_encode>
1000b832:	83 c4 0c             	add    esp,0xc
1000b835:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b838:	83 c0 1d             	add    eax,0x1d
1000b83b:	c6 00 00             	mov    BYTE PTR [eax],0x0
1000b83e:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b841:	c9                   	leave  
1000b842:	c3                   	ret    

1000b843 <bcrypt_gensalt>:
1000b843:	55                   	push   ebp
1000b844:	89 e5                	mov    ebp,esp
1000b846:	83 ec 28             	sub    esp,0x28
1000b849:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
1000b850:	eb 14                	jmp    1000b866 <bcrypt_gensalt+0x23>
1000b852:	e8 fc ff ff ff       	call   1000b853 <bcrypt_gensalt+0x10>	1000b853: R_386_PC32	_bcrypt_rand
1000b857:	88 c2                	mov    dl,al
1000b859:	8d 4d dc             	lea    ecx,[ebp-0x24]
1000b85c:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000b85f:	01 c8                	add    eax,ecx
1000b861:	88 10                	mov    BYTE PTR [eax],dl
1000b863:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000b866:	83 7d f4 0f          	cmp    DWORD PTR [ebp-0xc],0xf
1000b86a:	7e e6                	jle    1000b852 <bcrypt_gensalt+0xf>
1000b86c:	83 7d 08 03          	cmp    DWORD PTR [ebp+0x8],0x3
1000b870:	7e 0b                	jle    1000b87d <bcrypt_gensalt+0x3a>
1000b872:	83 7d 08 1f          	cmp    DWORD PTR [ebp+0x8],0x1f
1000b876:	7f 05                	jg     1000b87d <bcrypt_gensalt+0x3a>
1000b878:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000b87b:	eb 05                	jmp    1000b882 <bcrypt_gensalt+0x3f>
1000b87d:	b8 0c 00 00 00       	mov    eax,0xc
1000b882:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
1000b885:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000b888:	83 ec 0c             	sub    esp,0xc
1000b88b:	6a 40                	push   0x40
1000b88d:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000b890:	6a 10                	push   0x10
1000b892:	8d 55 dc             	lea    edx,[ebp-0x24]
1000b895:	52                   	push   edx
1000b896:	50                   	push   eax
1000b897:	e8 c1 fe ff ff       	call   1000b75d <_crypt_gensalt_blowfish_rn>
1000b89c:	83 c4 20             	add    esp,0x20
1000b89f:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000b8a2:	83 7d ec 00          	cmp    DWORD PTR [ebp-0x14],0x0
1000b8a6:	0f 94 c0             	sete   al
1000b8a9:	0f b6 c0             	movzx  eax,al
1000b8ac:	c9                   	leave  
1000b8ad:	c3                   	ret    

1000b8ae <bcrypt_hashpw>:
1000b8ae:	55                   	push   ebp
1000b8af:	89 e5                	mov    ebp,esp
1000b8b1:	83 ec 18             	sub    esp,0x18
1000b8b4:	6a 40                	push   0x40
1000b8b6:	ff 75 10             	push   DWORD PTR [ebp+0x10]
1000b8b9:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000b8bc:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000b8bf:	e8 8e a1 ff ff       	call   10005a52 <_crypt_blowfish_rn>
1000b8c4:	83 c4 10             	add    esp,0x10
1000b8c7:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
1000b8ca:	83 7d f4 00          	cmp    DWORD PTR [ebp-0xc],0x0
1000b8ce:	0f 94 c0             	sete   al
1000b8d1:	0f b6 c0             	movzx  eax,al
1000b8d4:	c9                   	leave  
1000b8d5:	c3                   	ret    
1000b8d6:	66 90                	xchg   ax,ax

1000b8d8 <TERMINAL_KEYBUFFER_IN_SIZE>:
1000b8d8:	80 00 00 00                                         ....

1000b8dc <TERMINAL_KEYBUFFER_OUT_SIZE>:
1000b8dc:	80 00 00 00 2e 00 2e 2e 00 2f 00 43 6f 75 6c 64     ........./.Could
1000b8ec:	6e 27 74 20 6f 70 65 6e 20 62 61 73 65 20 70 61     n't open base pa
1000b8fc:	74 68 2e 0a 00 25 73 20 2d 3e 20 25 73 0a 00 43     th...%s -> %s..C
1000b90c:	4f 55 4c 44 20 4e 4f 54 20 43 52 45 41 54 45 00     OULD NOT CREATE.
1000b91c:	43 4f 55 4c 44 20 4e 4f 54 20 43 4f 50 59 00 4e     COULD NOT COPY.N
1000b92c:	4f 20 4d 45 4d 4f 52 59 00 42 61 63 6b 75 70 00     O MEMORY.Backup.
1000b93c:	43 3a 2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d     C:/Banana/System
1000b94c:	2f 42 61 63 6b 75 70 2f 00 30 31 32 33 34 35 36     /Backup/.0123456
1000b95c:	37 38 39 41 42 43 44 45 46 00 43 3a 2f 55 73 65     789ABCDEF.C:/Use
1000b96c:	72 73 2f 00 2f 44 65 73 6b 74 6f 70 00 2f 44 6f     rs/./Desktop./Do
1000b97c:	63 75 6d 65 6e 74 73 00 2f 44 6f 77 6e 6c 6f 61     cuments./Downloa
1000b98c:	64 73 00 2f 50 68 6f 74 6f 73 00 2f 54 72 61 73     ds./Photos./Tras
1000b99c:	68 20 42 69 6e 00 2f 4d 75 73 69 63 00 2f 4d 6f     h Bin./Music./Mo
1000b9ac:	76 69 65 73 00 43 3a 2f 42 61 6e 61 6e 61 2f 52     vies.C:/Banana/R
1000b9bc:	65 67 69 73 74 72 79 2f 55 73 65 72 2f 00 00 00     egistry/User/...
1000b9cc:	43 3a 2f 42 61 6e 61 6e 61 2f 52 65 67 69 73 74     C:/Banana/Regist
1000b9dc:	72 79 2f 44 65 66 61 75 6c 74 55 73 65 72 00 00     ry/DefaultUser..
1000b9ec:	43 68 65 63 6b 69 6e 67 0a 20 73 79 73 74 65 6d     Checking. system
1000b9fc:	0a 20 72 65 71 75 69 72 65 6d 65 6e 74 73 0a 0a     . requirements..
1000ba0c:	20 4c 65 67 61 6c 0a 20 6e 6f 74 69 63 65 73 0a      Legal. notices.
1000ba1c:	0a 20 43 68 6f 6f 73 69 6e 67 20 61 0a 20 70 61     . Choosing a. pa
1000ba2c:	72 74 69 74 69 6f 6e 0a 0a 20 46 6f 72 6d 61 74     rtition.. Format
1000ba3c:	74 69 6e 67 0a 0a 20 43 6f 70 79 69 6e 67 20 66     ting.. Copying f
1000ba4c:	69 6c 65 73 0a 0a 20 52 65 73 74 61 72 74 69 6e     iles.. Restartin
1000ba5c:	67 0a 20 79 6f 75 72 20 63 6f 6d 70 75 74 65 72     g. your computer
1000ba6c:	0a 0a 00 20 46 69 6e 61 6c 69 73 69 6e 67 20 74     ... Finalising t
1000ba7c:	68 65 0a 20 69 6e 73 74 61 6c 6c 61 74 69 6f 6e     he. installation
1000ba8c:	00 00 00 00 50 6c 65 61 73 65 20 77 61 69 74 20     ....Please wait 
1000ba9c:	77 68 69 6c 65 20 74 68 65 20 69 6e 73 74 61 6c     while the instal
1000baac:	6c 20 66 69 6e 69 73 68 65 73 2e 00 10 20 00 20     l finishes... . 
1000babc:	20 00 41 6c 6c 6f 63 61 74 69 6e 67 20 74 68 65      .Allocating the
1000bacc:	20 73 77 61 70 66 69 6c 65 00 55 70 64 61 74 69      swapfile.Updati
1000badc:	6e 67 20 74 68 65 20 72 65 67 69 73 74 72 79 00     ng the registry.
1000baec:	43 72 65 61 74 69 6e 67 20 75 73 65 72 20 61 63     Creating user ac
1000bafc:	63 6f 75 6e 74 00 49 6e 73 74 61 6c 6c 69 6e 67     count.Installing
1000bb0c:	20 70 61 63 6b 61 67 65 73 00 42 61 63 6b 69 6e      packages.Backin
1000bb1c:	67 20 75 70 20 73 79 73 74 65 6d 20 66 69 6c 65     g up system file
1000bb2c:	73 00 46 69 6e 69 73 68 69 6e 67 20 74 6f 75 63     s.Finishing touc
1000bb3c:	68 65 73 00 51 51 2d 30 30 30 2d 30 30 30 2d 30     hes.QQ-000-000-0
1000bb4c:	30 30 2d 51 00 00 00 00 43 3a 2f 42 61 6e 61 6e     00-Q....C:/Banan
1000bb5c:	61 2f 53 79 73 74 65 6d 2f 74 69 6d 65 7a 6f 6e     a/System/timezon
1000bb6c:	65 73 2e 74 78 74 00 73 69 7a 20 3d 20 25 64 0a     es.txt.siz = %d.
1000bb7c:	00 20 00 2e 2e 2e 20 00 25 64 3b 20 25 73 0a 00     . .... .%d; %s..
1000bb8c:	53 65 74 74 69 6e 67 20 75 70 20 74 68 65 20 73     Setting up the s
1000bb9c:	79 73 74 65 6d 20 66 6f 72 20 74 68 65 20 66 69     ystem for the fi
1000bbac:	72 73 74 20 74 69 6d 65 00 0a 0a 0a 0a 0a 0a 00     rst time........
1000bbbc:	54 65 73 74 00 41 41 2d 30 30 30 30 30 2d 30 30     Test.AA-00000-00
1000bbcc:	30 30 30 2d 41 00 57 57 2d 38 38 33 38 38 2d 35     000-A.WW-88388-5
1000bbdc:	35 35 35 35 2d 4e 00 42 61 6e 61 6e 61 20 53 65     5555-N.Banana Se
1000bbec:	74 75 70 00 50 6c 65 61 73 65 20 65 6e 74 65 72     tup.Please enter
1000bbfc:	20 79 6f 75 72 20 64 65 74 61 69 6c 73 2e 20 50      your details. P
1000bc0c:	72 65 73 73 20 54 41 42 20 74 6f 20 73 77 69 74     ress TAB to swit
1000bc1c:	63 68 00 62 65 74 77 65 65 6e 20 66 69 65 6c 64     ch.between field
1000bc2c:	73 2e 00 4e 61 6d 65 00 43 6f 6d 70 61 6e 79 00     s..Name.Company.
1000bc3c:	50 61 73 73 77 6f 72 64 00 43 6f 6e 66 69 72 6d     Password.Confirm
1000bc4c:	00 70 61 73 73 77 6f 72 64 00 20 20 20 20 20 20     .password.      
1000bc5c:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
1000bc6c:	20 20 20 00 20 20 11 00 20 20 20 00 2a 00 50 72        .  ..   .*.Pr
1000bc7c:	65 73 73 20 45 4e 54 45 52 00 20 20 20 20 20 20     ess ENTER.      
1000bc8c:	20 20 20 20 20 00 74 6f 20 73 75 62 6d 69 74 00          .to submit.
1000bc9c:	20 20 20 4f 4b 20 20 20 00 44 61 74 65 20 61 6e        OK   .Date an
1000bcac:	64 20 54 69 6d 65 00 31 34 2f 30 35 2f 32 30 32     d Time.14/05/202
1000bcbc:	31 20 31 38 3a 35 35 3a 30 30 00 00 50 6c 65 61     1 18:55:00..Plea
1000bccc:	73 65 20 65 6e 74 65 72 20 74 68 65 20 63 75 72     se enter the cur
1000bcdc:	72 65 6e 74 20 64 61 74 65 20 61 6e 64 20 74 69     rent date and ti
1000bcec:	6d 65 2c 00 61 6e 64 20 74 68 65 6e 20 70 72 65     me,.and then pre
1000bcfc:	73 73 20 45 4e 54 45 52 2e 00 44 44 2f 4d 4d 2f     ss ENTER..DD/MM/
1000bd0c:	59 59 59 59 20 48 48 3a 4d 4d 3a 53 53 00 45 53     YYYY HH:MM:SS.ES
1000bd1c:	43 3a 20 47 6f 20 62 61 63 6b 20 61 20 73 63 72     C: Go back a scr
1000bd2c:	65 65 6e 00 50 6c 65 61 73 65 20 73 65 6c 65 63     een.Please selec
1000bd3c:	74 20 79 6f 75 72 20 74 69 6d 65 7a 6f 6e 65 20     t your timezone 
1000bd4c:	61 6e 64 20 74 68 65 6e 20 70 72 65 73 73 20 45     and then press E
1000bd5c:	4e 54 45 52 2e 00 55 73 65 72 20 49 6e 74 65 72     NTER..User Inter
1000bd6c:	66 61 63 65 00 00 00 00 50 6c 65 61 73 65 20 73     face....Please s
1000bd7c:	65 6c 65 63 74 20 74 68 65 20 75 73 65 72 20 69     elect the user i
1000bd8c:	6e 74 65 72 66 61 63 65 20 79 6f 75 20 77 61 6e     nterface you wan
1000bd9c:	74 20 42 61 6e 61 6e 61 00 00 00 00 74 6f 20 62     t Banana....to b
1000bdac:	6f 6f 74 20 69 6e 74 6f 20 62 79 20 64 65 66 61     oot into by defa
1000bdbc:	75 6c 74 20 77 68 65 6e 20 79 6f 75 20 73 74 61     ult when you sta
1000bdcc:	72 74 20 74 68 65 20 63 6f 6d 70 75 74 65 72 2e     rt the computer.
1000bddc:	00 49 6e 76 61 6c 69 64 20 50 72 6f 64 75 63 74     .Invalid Product
1000bdec:	20 4b 65 79 00 00 00 00 59 6f 75 20 64 6f 20 6e      Key....You do n
1000bdfc:	6f 74 20 68 61 76 65 20 61 20 76 61 6c 69 64 20     ot have a valid 
1000be0c:	70 72 6f 64 75 63 74 20 6b 65 79 2e 0a 00 00 00     product key.....
1000be1c:	59 6f 75 20 6e 65 65 64 20 61 20 76 61 6c 69 64     You need a valid
1000be2c:	20 70 72 6f 64 75 63 74 20 6b 65 79 20 69 6e 20      product key in 
1000be3c:	6f 72 64 65 72 20 74 6f 00 75 73 65 20 42 61 6e     order to.use Ban
1000be4c:	61 6e 61 2e 00 00 00 00 50 72 65 73 73 20 45 4e     ana.....Press EN
1000be5c:	54 45 52 20 74 6f 20 72 65 2d 65 6e 74 65 72 20     TER to re-enter 
1000be6c:	79 6f 75 72 20 70 72 6f 64 75 63 74 20 6b 65 79     your product key
1000be7c:	2e 00 50 72 6f 64 75 63 74 20 4b 65 79 00 00 00     ..Product Key...
1000be8c:	50 6c 65 61 73 65 20 65 6e 74 65 72 20 79 6f 75     Please enter you
1000be9c:	72 20 70 72 6f 64 75 63 74 20 6b 65 79 20 62 65     r product key be
1000beac:	6c 6f 77 2c 00 00 00 00 54 68 65 20 65 6e 74 65     low,....The ente
1000bebc:	72 65 64 20 70 72 6f 64 75 63 74 20 6b 65 79 20     red product key 
1000becc:	77 61 73 20 69 6e 76 61 6c 69 64 2e 00 00 00 00     was invalid.....
1000bedc:	50 72 65 73 73 20 61 6e 79 20 6b 65 79 20 74 6f     Press any key to
1000beec:	20 63 6f 6e 74 69 6e 75 65 20 61 6e 64 20 74 68      continue and th
1000befc:	65 6e 00 00 65 6e 74 65 72 20 74 68 65 20 70 72     en..enter the pr
1000bf0c:	6f 64 75 63 74 20 6b 65 79 20 63 6f 72 72 65 63     oduct key correc
1000bf1c:	74 6c 79 2e 00 46 69 6e 61 6c 69 73 69 6e 67 20     tly..Finalising 
1000bf2c:	49 6e 73 74 61 6c 6c 61 74 69 6f 6e 00 40 6d 65     Installation.@me
1000bf3c:	6d 6f 72 79 3a 73 77 61 70 66 69 6c 65 00 73 79     mory:swapfile.sy
1000bf4c:	73 74 65 6d 00 43 3a 2f 42 61 6e 61 6e 61 2f 52     stem.C:/Banana/R
1000bf5c:	65 67 69 73 74 72 79 2f 53 79 73 74 65 6d 00 43     egistry/System.C
1000bf6c:	3a 2f 42 61 6e 61 6e 61 2f 52 65 67 69 73 74 72     :/Banana/Registr
1000bf7c:	79 2f 55 73 65 72 00 00 43 3a 2f 42 61 6e 61 6e     y/User..C:/Banan
1000bf8c:	61 2f 52 65 67 69 73 74 72 79 2f 44 65 66 61 75     a/Registry/Defau
1000bf9c:	6c 74 53 79 73 74 65 6d 00 00 00 00 20 42 6f 6f     ltSystem.... Boo
1000bfac:	74 20 74 6f 20 63 6f 6d 6d 61 6e 64 20 6c 69 6e     t to command lin
1000bfbc:	65 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20     e               
1000bfcc:	00 00 00 00 20 42 6f 6f 74 20 74 6f 20 67 72 61     .... Boot to gra
1000bfdc:	70 68 69 63 61 6c 20 69 6e 74 65 72 66 61 63 65     phical interface
1000bfec:	20 28 56 47 41 29 20 20 00 00 00 00 20 42 6f 6f      (VGA)  .... Boo
1000bffc:	74 20 74 6f 20 67 72 61 70 68 69 63 61 6c 20 69     t to graphical i
1000c00c:	6e 74 65 72 66 61 63 65 20 28 56 45 53 41 29 20     nterface (VESA) 
1000c01c:	00 00 00 00 a8 bf 00 10 d0 bf 00 10 f8 bf 00 10     ................	1000c020: R_386_32	.text
	1000c024: R_386_32	.text
	1000c028: R_386_32	.text
1000c02c:	4c 6f 61 64 69 6e 67 20 65 78 74 65 6e 73 69 6f     Loading extensio
1000c03c:	6e 73 2e 2e 2e 00 0a 0a 3a 0a 00 2f 25 73 0a 00     ns......:../%s..
1000c04c:	43 3a 2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d     C:/Banana/System
1000c05c:	2f 73 65 74 75 70 69 73 64 2e 6f 6e 65 00 53 59     /setupisd.one.SY
1000c06c:	53 49 4e 49 54 20 46 41 49 4c 55 52 45 00 43 3a     SINIT FAILURE.C:
1000c07c:	2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d 2f 63     /Banana/System/c
1000c08c:	6f 6d 6d 61 6e 64 2e 65 78 65 00 43 3a 2f 44 45     ommand.exe.C:/DE
1000c09c:	2e 42 55 47 00 43 3a 2f 42 61 6e 61 6e 61 2f 44     .BUG.C:/Banana/D
1000c0ac:	72 69 76 65 72 73 2f 00 43 3a 2f 42 61 6e 61 6e     rivers/.C:/Banan
1000c0bc:	61 2f 53 79 73 74 65 6d 2f 00 43 3a 2f 42 61 6e     a/System/.C:/Ban
1000c0cc:	61 6e 61 2f 52 65 67 69 73 74 72 79 2f 00 00 00     ana/Registry/...
1000c0dc:	43 3a 2f 42 61 6e 61 6e 61 2f 52 65 67 69 73 74     C:/Banana/Regist
1000c0ec:	72 79 2f 53 79 73 74 65 6d 2f 53 59 53 54 45 4d     ry/System/SYSTEM
1000c0fc:	2e 52 45 47 00 42 41 4e 41 4e 41 00 53 45 54 55     .REG.BANANA.SETU
1000c10c:	50 00 42 4f 4f 54 00 42 41 4e 41 4e 41 2f 53 45     P.BOOT.BANANA/SE
1000c11c:	54 55 50 00 4e 41 4d 45 00 43 4f 4d 50 41 4e 59     TUP.NAME.COMPANY
1000c12c:	00 50 52 4f 44 55 43 54 4b 45 59 00 42 41 4e 41     .PRODUCTKEY.BANA
1000c13c:	4e 41 2f 42 4f 4f 54 00 41 55 54 4f 47 55 49 00     NA/BOOT.AUTOGUI.
1000c14c:	42 41 4e 41 4e 41 2f 53 45 54 55 50 2f 4e 41 4d     BANANA/SETUP/NAM
1000c15c:	45 00 42 41 4e 41 4e 41 2f 53 45 54 55 50 2f 43     E.BANANA/SETUP/C
1000c16c:	4f 4d 50 41 4e 59 00 42 41 4e 41 4e 41 2f 53 45     OMPANY.BANANA/SE
1000c17c:	54 55 50 2f 50 52 4f 44 55 43 54 4b 45 59 00 00     TUP/PRODUCTKEY..
1000c18c:	54 68 65 20 69 6e 73 74 61 6c 6c 61 74 69 6f 6e     The installation
1000c19c:	20 68 61 73 20 62 65 65 6e 20 63 6f 6d 70 6c 65      has been comple
1000c1ac:	74 65 64 2e 0a 00 00 00 50 6c 65 61 73 65 20 70     ted.....Please p
1000c1bc:	72 65 73 73 20 45 4e 54 45 52 20 74 6f 20 72 65     ress ENTER to re
1000c1cc:	73 74 61 72 74 20 79 6f 75 72 20 63 6f 6d 70 75     start your compu
1000c1dc:	74 65 72 00 61 6e 64 20 73 74 61 72 74 20 42 61     ter.and start Ba
1000c1ec:	6e 61 6e 61 2e 00 00 00 50 4c 45 41 53 45 20 4d     nana....PLEASE M
1000c1fc:	41 4e 55 41 4c 4c 59 20 52 45 53 54 41 52 54 20     ANUALLY RESTART 
1000c20c:	59 4f 55 52 20 43 4f 4d 50 55 54 45 52 00 42 41     YOUR COMPUTER.BA
1000c21c:	4e 41 4e 41 2f 42 4f 4f 54 2f 41 55 54 4f 47 55     NANA/BOOT/AUTOGU
1000c22c:	49 00 50 72 6f 64 75 63 74 20 4b 65 79 20 55 70     I.Product Key Up
1000c23c:	64 61 74 65 64 00 00 00 59 6f 75 72 20 70 72 6f     dated...Your pro
1000c24c:	64 75 63 74 20 6b 65 79 20 68 61 73 20 62 65 65     duct key has bee
1000c25c:	6e 20 75 70 64 61 74 65 64 2e 0a 00 49 74 20 69     n updated...It i
1000c26c:	73 20 73 61 66 65 20 74 6f 20 74 75 72 6e 20 6f     s safe to turn o
1000c27c:	66 66 20 79 6f 75 72 20 50 43 00 63 61 6c 6c 00     ff your PC.call.
1000c28c:	43 3a 2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d     C:/Banana/System
1000c29c:	2f 69 6e 69 74 2e 62 61 74 00 00 00 7a c0 00 10     /init.bat...z...	1000c2a8: R_386_32	.text
1000c2ac:	87 c2 00 10 8c c2 00 10 00 00 00 00                 ............	1000c2ac: R_386_32	.text
	1000c2b0: R_386_32	.text
