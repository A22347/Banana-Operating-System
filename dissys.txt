
packages/system/32/0001/system.dll:     file format elf32-i386


Disassembly of section .text:

10000000 <beginx(void*)>:
10000000:	55                   	push   ebp
10000001:	89 e5                	mov    ebp,esp
10000003:	83 ec 08             	sub    esp,0x8
10000006:	83 ec 0c             	sub    esp,0xc
10000009:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000000c:	e8 fc ff ff ff       	call   1000000d <beginx(void*)+0xd>	1000000d: R_386_PC32	begin(void*)
10000011:	83 c4 10             	add    esp,0x10
10000014:	90                   	nop
10000015:	c9                   	leave  
10000016:	c3                   	ret    

10000017 <memcmp(void*, void*, unsigned long)>:
10000017:	55                   	push   ebp
10000018:	89 e5                	mov    ebp,esp
1000001a:	83 ec 10             	sub    esp,0x10
1000001d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000020:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000023:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000026:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
10000029:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
1000002c:	8d 50 ff             	lea    edx,[eax-0x1]
1000002f:	89 55 10             	mov    DWORD PTR [ebp+0x10],edx
10000032:	85 c0                	test   eax,eax
10000034:	74 12                	je     10000048 <memcmp(void*, void*, unsigned long)+0x31>
10000036:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000039:	8a 10                	mov    dl,BYTE PTR [eax]
1000003b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000003e:	8a 00                	mov    al,BYTE PTR [eax]
10000040:	38 c2                	cmp    dl,al
10000042:	75 04                	jne    10000048 <memcmp(void*, void*, unsigned long)+0x31>
10000044:	b0 01                	mov    al,0x1
10000046:	eb 02                	jmp    1000004a <memcmp(void*, void*, unsigned long)+0x33>
10000048:	b0 00                	mov    al,0x0
1000004a:	84 c0                	test   al,al
1000004c:	74 08                	je     10000056 <memcmp(void*, void*, unsigned long)+0x3f>
1000004e:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
10000051:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
10000054:	eb d3                	jmp    10000029 <memcmp(void*, void*, unsigned long)+0x12>
10000056:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000059:	8a 00                	mov    al,BYTE PTR [eax]
1000005b:	0f b6 d0             	movzx  edx,al
1000005e:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10000061:	8a 00                	mov    al,BYTE PTR [eax]
10000063:	0f b6 c0             	movzx  eax,al
10000066:	29 c2                	sub    edx,eax
10000068:	89 d0                	mov    eax,edx
1000006a:	c9                   	leave  
1000006b:	c3                   	ret    

1000006c <memmove>:
1000006c:	55                   	push   ebp
1000006d:	89 e5                	mov    ebp,esp
1000006f:	83 ec 10             	sub    esp,0x10
10000072:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000075:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000078:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000007b:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000007e:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10000081:	3b 45 fc             	cmp    eax,DWORD PTR [ebp-0x4]
10000084:	76 1b                	jbe    100000a1 <memmove+0x35>
10000086:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
1000008a:	74 46                	je     100000d2 <memmove+0x66>
1000008c:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000008f:	8a 10                	mov    dl,BYTE PTR [eax]
10000091:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000094:	88 10                	mov    BYTE PTR [eax],dl
10000096:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
10000099:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
1000009c:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
1000009f:	eb e5                	jmp    10000086 <memmove+0x1a>
100000a1:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100000a4:	3b 45 fc             	cmp    eax,DWORD PTR [ebp-0x4]
100000a7:	73 29                	jae    100000d2 <memmove+0x66>
100000a9:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
100000ac:	48                   	dec    eax
100000ad:	01 45 fc             	add    DWORD PTR [ebp-0x4],eax
100000b0:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
100000b3:	48                   	dec    eax
100000b4:	01 45 f8             	add    DWORD PTR [ebp-0x8],eax
100000b7:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
100000bb:	74 15                	je     100000d2 <memmove+0x66>
100000bd:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100000c0:	8a 10                	mov    dl,BYTE PTR [eax]
100000c2:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000c5:	88 10                	mov    BYTE PTR [eax],dl
100000c7:	ff 4d fc             	dec    DWORD PTR [ebp-0x4]
100000ca:	ff 4d f8             	dec    DWORD PTR [ebp-0x8]
100000cd:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
100000d0:	eb e5                	jmp    100000b7 <memmove+0x4b>
100000d2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000d5:	c9                   	leave  
100000d6:	c3                   	ret    

100000d7 <memset>:
100000d7:	55                   	push   ebp
100000d8:	89 e5                	mov    ebp,esp
100000da:	83 ec 10             	sub    esp,0x10
100000dd:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000e0:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
100000e3:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
100000e7:	74 12                	je     100000fb <memset+0x24>
100000e9:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100000ec:	88 c2                	mov    dl,al
100000ee:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100000f1:	88 10                	mov    BYTE PTR [eax],dl
100000f3:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
100000f6:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
100000f9:	eb e8                	jmp    100000e3 <memset+0xc>
100000fb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100000fe:	c9                   	leave  
100000ff:	c3                   	ret    

10000100 <strlen>:
10000100:	55                   	push   ebp
10000101:	89 e5                	mov    ebp,esp
10000103:	83 ec 10             	sub    esp,0x10
10000106:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [ebp-0x4],0x0
1000010d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000110:	8a 00                	mov    al,BYTE PTR [eax]
10000112:	84 c0                	test   al,al
10000114:	74 0c                	je     10000122 <strlen+0x22>
10000116:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000119:	40                   	inc    eax
1000011a:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000011d:	ff 45 08             	inc    DWORD PTR [ebp+0x8]
10000120:	eb eb                	jmp    1000010d <strlen+0xd>
10000122:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000125:	c9                   	leave  
10000126:	c3                   	ret    

10000127 <strpbrk(char const*, char const*)>:
10000127:	55                   	push   ebp
10000128:	89 e5                	mov    ebp,esp
1000012a:	83 ec 10             	sub    esp,0x10
1000012d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000130:	8a 00                	mov    al,BYTE PTR [eax]
10000132:	84 c0                	test   al,al
10000134:	74 30                	je     10000166 <strpbrk(char const*, char const*)+0x3f>
10000136:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000139:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000013c:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000013f:	8a 00                	mov    al,BYTE PTR [eax]
10000141:	84 c0                	test   al,al
10000143:	74 18                	je     1000015d <strpbrk(char const*, char const*)+0x36>
10000145:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000148:	8a 10                	mov    dl,BYTE PTR [eax]
1000014a:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000014d:	8a 00                	mov    al,BYTE PTR [eax]
1000014f:	38 c2                	cmp    dl,al
10000151:	75 05                	jne    10000158 <strpbrk(char const*, char const*)+0x31>
10000153:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000156:	eb 13                	jmp    1000016b <strpbrk(char const*, char const*)+0x44>
10000158:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
1000015b:	eb df                	jmp    1000013c <strpbrk(char const*, char const*)+0x15>
1000015d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000160:	40                   	inc    eax
10000161:	89 45 08             	mov    DWORD PTR [ebp+0x8],eax
10000164:	eb c7                	jmp    1000012d <strpbrk(char const*, char const*)+0x6>
10000166:	b8 00 00 00 00       	mov    eax,0x0
1000016b:	c9                   	leave  
1000016c:	c3                   	ret    

1000016d <strtok>:
1000016d:	55                   	push   ebp
1000016e:	89 e5                	mov    ebp,esp
10000170:	83 ec 10             	sub    esp,0x10
10000173:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000176:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000179:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000017c:	85 c0                	test   eax,eax
1000017e:	75 18                	jne    10000198 <strtok+0x2b>
10000180:	a1 00 00 00 00       	mov    eax,ds:0x0	10000181: R_386_32	SavedPtr
10000185:	85 c0                	test   eax,eax
10000187:	75 07                	jne    10000190 <strtok+0x23>
10000189:	b8 00 00 00 00       	mov    eax,0x0
1000018e:	eb 6f                	jmp    100001ff <strtok+0x92>
10000190:	a1 00 00 00 00       	mov    eax,ds:0x0	10000191: R_386_32	SavedPtr
10000195:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000198:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000019b:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000019e:	50                   	push   eax
1000019f:	e8 fc ff ff ff       	call   100001a0 <strtok+0x33>	100001a0: R_386_PC32	strpbrk(char const*, char const*)
100001a4:	83 c4 08             	add    esp,0x8
100001a7:	a3 00 00 00 00       	mov    ds:0x0,eax	100001a8: R_386_32	SavedPtr
100001ac:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100001ae: R_386_32	SavedPtr
100001b2:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100001b5:	39 c2                	cmp    edx,eax
100001b7:	75 22                	jne    100001db <strtok+0x6e>
100001b9:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100001bc:	8d 50 01             	lea    edx,[eax+0x1]
100001bf:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
100001c2:	c6 00 00             	mov    BYTE PTR [eax],0x0
100001c5:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100001c8:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100001cb:	50                   	push   eax
100001cc:	e8 fc ff ff ff       	call   100001cd <strtok+0x60>	100001cd: R_386_PC32	strpbrk(char const*, char const*)
100001d1:	83 c4 08             	add    esp,0x8
100001d4:	a3 00 00 00 00       	mov    ds:0x0,eax	100001d5: R_386_32	SavedPtr
100001d9:	eb d1                	jmp    100001ac <strtok+0x3f>
100001db:	a1 00 00 00 00       	mov    eax,ds:0x0	100001dc: R_386_32	SavedPtr
100001e0:	85 c0                	test   eax,eax
100001e2:	74 16                	je     100001fa <strtok+0x8d>
100001e4:	a1 00 00 00 00       	mov    eax,ds:0x0	100001e5: R_386_32	SavedPtr
100001e9:	8d 50 01             	lea    edx,[eax+0x1]
100001ec:	89 15 00 00 00 00    	mov    DWORD PTR ds:0x0,edx	100001ee: R_386_32	SavedPtr
100001f2:	c6 00 00             	mov    BYTE PTR [eax],0x0
100001f5:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100001f8:	eb 05                	jmp    100001ff <strtok+0x92>
100001fa:	b8 00 00 00 00       	mov    eax,0x0
100001ff:	c9                   	leave  
10000200:	c3                   	ret    

10000201 <strcpy>:
10000201:	55                   	push   ebp
10000202:	89 e5                	mov    ebp,esp
10000204:	83 ec 10             	sub    esp,0x10
10000207:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000020a:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000020d:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000210:	8a 00                	mov    al,BYTE PTR [eax]
10000212:	84 c0                	test   al,al
10000214:	74 12                	je     10000228 <strcpy+0x27>
10000216:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000219:	8a 10                	mov    dl,BYTE PTR [eax]
1000021b:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000021e:	88 10                	mov    BYTE PTR [eax],dl
10000220:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
10000223:	ff 45 0c             	inc    DWORD PTR [ebp+0xc]
10000226:	eb e5                	jmp    1000020d <strcpy+0xc>
10000228:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000022b:	c6 00 00             	mov    BYTE PTR [eax],0x0
1000022e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000231:	c9                   	leave  
10000232:	c3                   	ret    

10000233 <strncpyxx(char*, char const*, unsigned long)>:
10000233:	55                   	push   ebp
10000234:	89 e5                	mov    ebp,esp
10000236:	83 ec 10             	sub    esp,0x10
10000239:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000023c:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
1000023f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000242:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000245:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
10000249:	74 23                	je     1000026e <strncpyxx(char*, char const*, unsigned long)+0x3b>
1000024b:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
1000024e:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
10000251:	8d 42 01             	lea    eax,[edx+0x1]
10000254:	89 45 0c             	mov    DWORD PTR [ebp+0xc],eax
10000257:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000025a:	8d 48 01             	lea    ecx,[eax+0x1]
1000025d:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
10000260:	8a 12                	mov    dl,BYTE PTR [edx]
10000262:	88 10                	mov    BYTE PTR [eax],dl
10000264:	8a 00                	mov    al,BYTE PTR [eax]
10000266:	84 c0                	test   al,al
10000268:	74 04                	je     1000026e <strncpyxx(char*, char const*, unsigned long)+0x3b>
1000026a:	b0 01                	mov    al,0x1
1000026c:	eb 02                	jmp    10000270 <strncpyxx(char*, char const*, unsigned long)+0x3d>
1000026e:	b0 00                	mov    al,0x0
10000270:	84 c0                	test   al,al
10000272:	74 02                	je     10000276 <strncpyxx(char*, char const*, unsigned long)+0x43>
10000274:	eb cf                	jmp    10000245 <strncpyxx(char*, char const*, unsigned long)+0x12>
10000276:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10000279:	8d 50 ff             	lea    edx,[eax-0x1]
1000027c:	89 55 10             	mov    DWORD PTR [ebp+0x10],edx
1000027f:	85 c0                	test   eax,eax
10000281:	0f 95 c0             	setne  al
10000284:	84 c0                	test   al,al
10000286:	74 0b                	je     10000293 <strncpyxx(char*, char const*, unsigned long)+0x60>
10000288:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000028b:	c6 00 00             	mov    BYTE PTR [eax],0x0
1000028e:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
10000291:	eb e3                	jmp    10000276 <strncpyxx(char*, char const*, unsigned long)+0x43>
10000293:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000296:	c9                   	leave  
10000297:	c3                   	ret    

10000298 <strcmp>:
10000298:	55                   	push   ebp
10000299:	89 e5                	mov    ebp,esp
1000029b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000029e:	8a 10                	mov    dl,BYTE PTR [eax]
100002a0:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002a3:	8a 00                	mov    al,BYTE PTR [eax]
100002a5:	38 c2                	cmp    dl,al
100002a7:	75 20                	jne    100002c9 <strcmp+0x31>
100002a9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002ac:	8d 50 01             	lea    edx,[eax+0x1]
100002af:	89 55 08             	mov    DWORD PTR [ebp+0x8],edx
100002b2:	8a 00                	mov    al,BYTE PTR [eax]
100002b4:	84 c0                	test   al,al
100002b6:	0f 94 c0             	sete   al
100002b9:	84 c0                	test   al,al
100002bb:	74 07                	je     100002c4 <strcmp+0x2c>
100002bd:	b8 00 00 00 00       	mov    eax,0x0
100002c2:	eb 19                	jmp    100002dd <strcmp+0x45>
100002c4:	ff 45 0c             	inc    DWORD PTR [ebp+0xc]
100002c7:	eb d2                	jmp    1000029b <strcmp+0x3>
100002c9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002cc:	8a 00                	mov    al,BYTE PTR [eax]
100002ce:	0f b6 d0             	movzx  edx,al
100002d1:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100002d4:	8a 00                	mov    al,BYTE PTR [eax]
100002d6:	0f b6 c0             	movzx  eax,al
100002d9:	29 c2                	sub    edx,eax
100002db:	89 d0                	mov    eax,edx
100002dd:	5d                   	pop    ebp
100002de:	c3                   	ret    

100002df <strchr(char const*, int)>:
100002df:	55                   	push   ebp
100002e0:	89 e5                	mov    ebp,esp
100002e2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002e5:	8a 00                	mov    al,BYTE PTR [eax]
100002e7:	84 c0                	test   al,al
100002e9:	74 16                	je     10000301 <strchr(char const*, int)+0x22>
100002eb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002ee:	8a 00                	mov    al,BYTE PTR [eax]
100002f0:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
100002f3:	38 d0                	cmp    al,dl
100002f5:	75 05                	jne    100002fc <strchr(char const*, int)+0x1d>
100002f7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100002fa:	eb 0a                	jmp    10000306 <strchr(char const*, int)+0x27>
100002fc:	ff 45 08             	inc    DWORD PTR [ebp+0x8]
100002ff:	eb e1                	jmp    100002e2 <strchr(char const*, int)+0x3>
10000301:	b8 00 00 00 00       	mov    eax,0x0
10000306:	5d                   	pop    ebp
10000307:	c3                   	ret    

10000308 <strncmp>:
10000308:	55                   	push   ebp
10000309:	89 e5                	mov    ebp,esp
1000030b:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
1000030e:	8d 50 ff             	lea    edx,[eax-0x1]
10000311:	89 55 10             	mov    DWORD PTR [ebp+0x10],edx
10000314:	85 c0                	test   eax,eax
10000316:	74 12                	je     1000032a <strncmp+0x22>
10000318:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000031b:	8a 10                	mov    dl,BYTE PTR [eax]
1000031d:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000320:	8a 00                	mov    al,BYTE PTR [eax]
10000322:	38 c2                	cmp    dl,al
10000324:	75 04                	jne    1000032a <strncmp+0x22>
10000326:	b0 01                	mov    al,0x1
10000328:	eb 02                	jmp    1000032c <strncmp+0x24>
1000032a:	b0 00                	mov    al,0x0
1000032c:	84 c0                	test   al,al
1000032e:	74 20                	je     10000350 <strncmp+0x48>
10000330:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000333:	8d 50 01             	lea    edx,[eax+0x1]
10000336:	89 55 08             	mov    DWORD PTR [ebp+0x8],edx
10000339:	8a 00                	mov    al,BYTE PTR [eax]
1000033b:	84 c0                	test   al,al
1000033d:	0f 94 c0             	sete   al
10000340:	84 c0                	test   al,al
10000342:	74 07                	je     1000034b <strncmp+0x43>
10000344:	b8 00 00 00 00       	mov    eax,0x0
10000349:	eb 19                	jmp    10000364 <strncmp+0x5c>
1000034b:	ff 45 0c             	inc    DWORD PTR [ebp+0xc]
1000034e:	eb bb                	jmp    1000030b <strncmp+0x3>
10000350:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000353:	8a 00                	mov    al,BYTE PTR [eax]
10000355:	0f b6 d0             	movzx  edx,al
10000358:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000035b:	8a 00                	mov    al,BYTE PTR [eax]
1000035d:	0f b6 c0             	movzx  eax,al
10000360:	29 c2                	sub    edx,eax
10000362:	89 d0                	mov    eax,edx
10000364:	5d                   	pop    ebp
10000365:	c3                   	ret    

10000366 <strcat>:
10000366:	55                   	push   ebp
10000367:	89 e5                	mov    ebp,esp
10000369:	83 ec 10             	sub    esp,0x10
1000036c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000036f:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000372:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000375:	8d 50 01             	lea    edx,[eax+0x1]
10000378:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
1000037b:	8a 00                	mov    al,BYTE PTR [eax]
1000037d:	84 c0                	test   al,al
1000037f:	0f 95 c0             	setne  al
10000382:	84 c0                	test   al,al
10000384:	74 02                	je     10000388 <strcat+0x22>
10000386:	eb ea                	jmp    10000372 <strcat+0xc>
10000388:	ff 4d fc             	dec    DWORD PTR [ebp-0x4]
1000038b:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
1000038e:	8d 42 01             	lea    eax,[edx+0x1]
10000391:	89 45 0c             	mov    DWORD PTR [ebp+0xc],eax
10000394:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000397:	8d 48 01             	lea    ecx,[eax+0x1]
1000039a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
1000039d:	8a 12                	mov    dl,BYTE PTR [edx]
1000039f:	88 10                	mov    BYTE PTR [eax],dl
100003a1:	8a 00                	mov    al,BYTE PTR [eax]
100003a3:	84 c0                	test   al,al
100003a5:	0f 95 c0             	setne  al
100003a8:	84 c0                	test   al,al
100003aa:	74 02                	je     100003ae <strcat+0x48>
100003ac:	eb dd                	jmp    1000038b <strcat+0x25>
100003ae:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003b1:	c9                   	leave  
100003b2:	c3                   	ret    

100003b3 <strncat(char*, char const*, unsigned long)>:
100003b3:	55                   	push   ebp
100003b4:	89 e5                	mov    ebp,esp
100003b6:	83 ec 10             	sub    esp,0x10
100003b9:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
100003bd:	74 5c                	je     1000041b <strncat(char*, char const*, unsigned long)+0x68>
100003bf:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100003c2:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
100003c5:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100003c8:	8d 50 01             	lea    edx,[eax+0x1]
100003cb:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
100003ce:	8a 00                	mov    al,BYTE PTR [eax]
100003d0:	84 c0                	test   al,al
100003d2:	0f 95 c0             	setne  al
100003d5:	84 c0                	test   al,al
100003d7:	74 02                	je     100003db <strncat(char*, char const*, unsigned long)+0x28>
100003d9:	eb ea                	jmp    100003c5 <strncat(char*, char const*, unsigned long)+0x12>
100003db:	ff 4d fc             	dec    DWORD PTR [ebp-0x4]
100003de:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
100003e1:	8d 42 01             	lea    eax,[edx+0x1]
100003e4:	89 45 0c             	mov    DWORD PTR [ebp+0xc],eax
100003e7:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100003ea:	8d 48 01             	lea    ecx,[eax+0x1]
100003ed:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
100003f0:	8a 12                	mov    dl,BYTE PTR [edx]
100003f2:	88 10                	mov    BYTE PTR [eax],dl
100003f4:	8a 00                	mov    al,BYTE PTR [eax]
100003f6:	84 c0                	test   al,al
100003f8:	74 0d                	je     10000407 <strncat(char*, char const*, unsigned long)+0x54>
100003fa:	ff 4d 10             	dec    DWORD PTR [ebp+0x10]
100003fd:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
10000401:	74 04                	je     10000407 <strncat(char*, char const*, unsigned long)+0x54>
10000403:	b0 01                	mov    al,0x1
10000405:	eb 02                	jmp    10000409 <strncat(char*, char const*, unsigned long)+0x56>
10000407:	b0 00                	mov    al,0x0
10000409:	84 c0                	test   al,al
1000040b:	74 02                	je     1000040f <strncat(char*, char const*, unsigned long)+0x5c>
1000040d:	eb cf                	jmp    100003de <strncat(char*, char const*, unsigned long)+0x2b>
1000040f:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
10000413:	75 06                	jne    1000041b <strncat(char*, char const*, unsigned long)+0x68>
10000415:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10000418:	c6 00 00             	mov    BYTE PTR [eax],0x0
1000041b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000041e:	c9                   	leave  
1000041f:	c3                   	ret    

10000420 <strstr(char*, char*)>:
10000420:	55                   	push   ebp
10000421:	89 e5                	mov    ebp,esp
10000423:	83 ec 10             	sub    esp,0x10
10000426:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10000429:	e8 fc ff ff ff       	call   1000042a <strstr(char*, char*)+0xa>	1000042a: R_386_PC32	strlen
1000042e:	83 c4 04             	add    esp,0x4
10000431:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10000434:	83 7d fc 00          	cmp    DWORD PTR [ebp-0x4],0x0
10000438:	75 05                	jne    1000043f <strstr(char*, char*)+0x1f>
1000043a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000043d:	eb 3f                	jmp    1000047e <strstr(char*, char*)+0x5e>
1000043f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000442:	50                   	push   eax
10000443:	e8 fc ff ff ff       	call   10000444 <strstr(char*, char*)+0x24>	10000444: R_386_PC32	strlen
10000448:	83 c4 04             	add    esp,0x4
1000044b:	39 45 fc             	cmp    DWORD PTR [ebp-0x4],eax
1000044e:	77 29                	ja     10000479 <strstr(char*, char*)+0x59>
10000450:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000453:	ff 75 fc             	push   DWORD PTR [ebp-0x4]
10000456:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10000459:	50                   	push   eax
1000045a:	e8 fc ff ff ff       	call   1000045b <strstr(char*, char*)+0x3b>	1000045b: R_386_PC32	memcmp(void*, void*, unsigned long)
1000045f:	83 c4 0c             	add    esp,0xc
10000462:	85 c0                	test   eax,eax
10000464:	0f 94 c0             	sete   al
10000467:	84 c0                	test   al,al
10000469:	74 05                	je     10000470 <strstr(char*, char*)+0x50>
1000046b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000046e:	eb 0e                	jmp    1000047e <strstr(char*, char*)+0x5e>
10000470:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000473:	40                   	inc    eax
10000474:	89 45 08             	mov    DWORD PTR [ebp+0x8],eax
10000477:	eb c6                	jmp    1000043f <strstr(char*, char*)+0x1f>
10000479:	b8 00 00 00 00       	mov    eax,0x0
1000047e:	c9                   	leave  
1000047f:	c3                   	ret    

10000480 <rmtree(char*)>:
10000480:	55                   	push   ebp
10000481:	89 e5                	mov    ebp,esp
10000483:	53                   	push   ebx
10000484:	81 ec 64 02 00 00    	sub    esp,0x264
1000048a:	68 2c 01 00 00       	push   0x12c
1000048f:	6a 00                	push   0x0
10000491:	8d 85 b8 fe ff ff    	lea    eax,[ebp-0x148]
10000497:	50                   	push   eax
10000498:	e8 fc ff ff ff       	call   10000499 <rmtree(char*)+0x19>	10000499: R_386_PC32	memset
1000049d:	83 c4 0c             	add    esp,0xc
100004a0:	8d 85 a8 fd ff ff    	lea    eax,[ebp-0x258]
100004a6:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
100004a9:	83 ec 0c             	sub    esp,0xc
100004ac:	68 14 01 00 00       	push   0x114
100004b1:	e8 fc ff ff ff       	call   100004b2 <rmtree(char*)+0x32>	100004b2: R_386_PC32	operator new(unsigned long)
100004b6:	83 c4 10             	add    esp,0x10
100004b9:	89 c3                	mov    ebx,eax
100004bb:	b8 00 20 00 c2       	mov    eax,0xc2002000
100004c0:	8b 00                	mov    eax,DWORD PTR [eax]
100004c2:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
100004c5:	83 ec 04             	sub    esp,0x4
100004c8:	50                   	push   eax
100004c9:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100004cc:	53                   	push   ebx
100004cd:	e8 fc ff ff ff       	call   100004ce <rmtree(char*)+0x4e>	100004ce: R_386_PC32	Directory::Directory(char const*, Process*)
100004d2:	83 c4 10             	add    esp,0x10
100004d5:	89 5d f0             	mov    DWORD PTR [ebp-0x10],ebx
100004d8:	83 ec 0c             	sub    esp,0xc
100004db:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100004de:	e8 fc ff ff ff       	call   100004df <rmtree(char*)+0x5f>	100004df: R_386_PC32	Directory::open()
100004e3:	83 c4 10             	add    esp,0x10
100004e6:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
100004e9:	83 7d ec 00          	cmp    DWORD PTR [ebp-0x14],0x0
100004ed:	74 24                	je     10000513 <rmtree(char*)+0x93>
100004ef:	83 7d f0 00          	cmp    DWORD PTR [ebp-0x10],0x0
100004f3:	0f 84 8b 01 00 00    	je     10000684 <rmtree(char*)+0x204>
100004f9:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100004fc:	8b 00                	mov    eax,DWORD PTR [eax]
100004fe:	83 c0 08             	add    eax,0x8
10000501:	8b 00                	mov    eax,DWORD PTR [eax]
10000503:	83 ec 0c             	sub    esp,0xc
10000506:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000509:	ff d0                	call   eax
1000050b:	83 c4 10             	add    esp,0x10
1000050e:	e9 72 01 00 00       	jmp    10000685 <rmtree(char*)+0x205>
10000513:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000516:	8b 00                	mov    eax,DWORD PTR [eax]
10000518:	83 c0 0c             	add    eax,0xc
1000051b:	8b 00                	mov    eax,DWORD PTR [eax]
1000051d:	83 ec 0c             	sub    esp,0xc
10000520:	8d 95 a4 fd ff ff    	lea    edx,[ebp-0x25c]
10000526:	52                   	push   edx
10000527:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000052a:	6a 00                	push   0x0
1000052c:	68 10 01 00 00       	push   0x110
10000531:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000534:	ff d0                	call   eax
10000536:	83 c4 20             	add    esp,0x20
10000539:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
1000053c:	83 7d e8 00          	cmp    DWORD PTR [ebp-0x18],0x0
10000540:	0f 85 04 01 00 00    	jne    1000064a <rmtree(char*)+0x1ca>
10000546:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000549:	83 c0 10             	add    eax,0x10
1000054c:	83 ec 08             	sub    esp,0x8
1000054f:	68 88 b8 00 10       	push   0x1000b888	10000550: R_386_32	.text
10000554:	50                   	push   eax
10000555:	e8 fc ff ff ff       	call   10000556 <rmtree(char*)+0xd6>	10000556: R_386_PC32	strcmp
1000055a:	83 c4 10             	add    esp,0x10
1000055d:	85 c0                	test   eax,eax
1000055f:	74 b2                	je     10000513 <rmtree(char*)+0x93>
10000561:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10000564:	83 c0 10             	add    eax,0x10
10000567:	83 ec 08             	sub    esp,0x8
1000056a:	68 8a b8 00 10       	push   0x1000b88a	1000056b: R_386_32	.text
1000056f:	50                   	push   eax
10000570:	e8 fc ff ff ff       	call   10000571 <rmtree(char*)+0xf1>	10000571: R_386_PC32	strcmp
10000575:	83 c4 10             	add    esp,0x10
10000578:	85 c0                	test   eax,eax
1000057a:	74 97                	je     10000513 <rmtree(char*)+0x93>
1000057c:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000057f:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000582:	83 e0 02             	and    eax,0x2
10000585:	85 c0                	test   eax,eax
10000587:	74 17                	je     100005a0 <rmtree(char*)+0x120>
10000589:	83 ec 0c             	sub    esp,0xc
1000058c:	8d 85 b8 fe ff ff    	lea    eax,[ebp-0x148]
10000592:	50                   	push   eax
10000593:	e8 fc ff ff ff       	call   10000594 <rmtree(char*)+0x114>	10000594: R_386_PC32	rmtree(char*)
10000598:	83 c4 10             	add    esp,0x10
1000059b:	e9 73 ff ff ff       	jmp    10000513 <rmtree(char*)+0x93>
100005a0:	83 ec 08             	sub    esp,0x8
100005a3:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100005a6:	8d 85 b8 fe ff ff    	lea    eax,[ebp-0x148]
100005ac:	50                   	push   eax
100005ad:	e8 fc ff ff ff       	call   100005ae <rmtree(char*)+0x12e>	100005ae: R_386_PC32	strcpy
100005b2:	83 c4 10             	add    esp,0x10
100005b5:	83 ec 08             	sub    esp,0x8
100005b8:	68 8d b8 00 10       	push   0x1000b88d	100005b9: R_386_32	.text
100005bd:	8d 85 b8 fe ff ff    	lea    eax,[ebp-0x148]
100005c3:	50                   	push   eax
100005c4:	e8 fc ff ff ff       	call   100005c5 <rmtree(char*)+0x145>	100005c5: R_386_PC32	strcat
100005c9:	83 c4 10             	add    esp,0x10
100005cc:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
100005cf:	83 c0 10             	add    eax,0x10
100005d2:	83 ec 08             	sub    esp,0x8
100005d5:	50                   	push   eax
100005d6:	8d 85 b8 fe ff ff    	lea    eax,[ebp-0x148]
100005dc:	50                   	push   eax
100005dd:	e8 fc ff ff ff       	call   100005de <rmtree(char*)+0x15e>	100005de: R_386_PC32	strcat
100005e2:	83 c4 10             	add    esp,0x10
100005e5:	83 ec 0c             	sub    esp,0xc
100005e8:	68 14 01 00 00       	push   0x114
100005ed:	e8 fc ff ff ff       	call   100005ee <rmtree(char*)+0x16e>	100005ee: R_386_PC32	operator new(unsigned long)
100005f2:	83 c4 10             	add    esp,0x10
100005f5:	89 c3                	mov    ebx,eax
100005f7:	b8 00 20 00 c2       	mov    eax,0xc2002000
100005fc:	8b 00                	mov    eax,DWORD PTR [eax]
100005fe:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
10000601:	83 ec 04             	sub    esp,0x4
10000604:	50                   	push   eax
10000605:	8d 85 b8 fe ff ff    	lea    eax,[ebp-0x148]
1000060b:	50                   	push   eax
1000060c:	53                   	push   ebx
1000060d:	e8 fc ff ff ff       	call   1000060e <rmtree(char*)+0x18e>	1000060e: R_386_PC32	File::File(char const*, Process*)
10000612:	83 c4 10             	add    esp,0x10
10000615:	89 5d e4             	mov    DWORD PTR [ebp-0x1c],ebx
10000618:	83 ec 0c             	sub    esp,0xc
1000061b:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
1000061e:	e8 fc ff ff ff       	call   1000061f <rmtree(char*)+0x19f>	1000061f: R_386_PC32	File::unlink()
10000623:	83 c4 10             	add    esp,0x10
10000626:	83 7d e4 00          	cmp    DWORD PTR [ebp-0x1c],0x0
1000062a:	0f 84 e3 fe ff ff    	je     10000513 <rmtree(char*)+0x93>
10000630:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10000633:	8b 00                	mov    eax,DWORD PTR [eax]
10000635:	83 c0 08             	add    eax,0x8
10000638:	8b 00                	mov    eax,DWORD PTR [eax]
1000063a:	83 ec 0c             	sub    esp,0xc
1000063d:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10000640:	ff d0                	call   eax
10000642:	83 c4 10             	add    esp,0x10
10000645:	e9 c9 fe ff ff       	jmp    10000513 <rmtree(char*)+0x93>
1000064a:	90                   	nop
1000064b:	83 ec 0c             	sub    esp,0xc
1000064e:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000651:	e8 fc ff ff ff       	call   10000652 <rmtree(char*)+0x1d2>	10000652: R_386_PC32	Directory::close()
10000656:	83 c4 10             	add    esp,0x10
10000659:	83 ec 0c             	sub    esp,0xc
1000065c:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
1000065f:	e8 fc ff ff ff       	call   10000660 <rmtree(char*)+0x1e0>	10000660: R_386_PC32	Directory::unlink()
10000664:	83 c4 10             	add    esp,0x10
10000667:	83 7d f0 00          	cmp    DWORD PTR [ebp-0x10],0x0
1000066b:	74 18                	je     10000685 <rmtree(char*)+0x205>
1000066d:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10000670:	8b 00                	mov    eax,DWORD PTR [eax]
10000672:	83 c0 08             	add    eax,0x8
10000675:	8b 00                	mov    eax,DWORD PTR [eax]
10000677:	83 ec 0c             	sub    esp,0xc
1000067a:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
1000067d:	ff d0                	call   eax
1000067f:	83 c4 10             	add    esp,0x10
10000682:	eb 01                	jmp    10000685 <rmtree(char*)+0x205>
10000684:	90                   	nop
10000685:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000688:	c9                   	leave  
10000689:	c3                   	ret    

1000068a <mkdir(char const*, int)>:
1000068a:	55                   	push   ebp
1000068b:	89 e5                	mov    ebp,esp
1000068d:	53                   	push   ebx
1000068e:	83 ec 14             	sub    esp,0x14
10000691:	83 ec 0c             	sub    esp,0xc
10000694:	68 14 01 00 00       	push   0x114
10000699:	e8 fc ff ff ff       	call   1000069a <mkdir(char const*, int)+0x10>	1000069a: R_386_PC32	operator new(unsigned long)
1000069e:	83 c4 10             	add    esp,0x10
100006a1:	89 c3                	mov    ebx,eax
100006a3:	a1 00 00 00 00       	mov    eax,ds:0x0	100006a4: R_386_32	kernelProcess
100006a8:	83 ec 04             	sub    esp,0x4
100006ab:	50                   	push   eax
100006ac:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100006af:	53                   	push   ebx
100006b0:	e8 fc ff ff ff       	call   100006b1 <mkdir(char const*, int)+0x27>	100006b1: R_386_PC32	Directory::Directory(char const*, Process*)
100006b5:	83 c4 10             	add    esp,0x10
100006b8:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
100006bb:	83 ec 0c             	sub    esp,0xc
100006be:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006c1:	e8 fc ff ff ff       	call   100006c2 <mkdir(char const*, int)+0x38>	100006c2: R_386_PC32	Directory::create()
100006c6:	83 c4 10             	add    esp,0x10
100006c9:	83 7d f4 00          	cmp    DWORD PTR [ebp-0xc],0x0
100006cd:	74 15                	je     100006e4 <mkdir(char const*, int)+0x5a>
100006cf:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
100006d2:	8b 00                	mov    eax,DWORD PTR [eax]
100006d4:	83 c0 08             	add    eax,0x8
100006d7:	8b 00                	mov    eax,DWORD PTR [eax]
100006d9:	83 ec 0c             	sub    esp,0xc
100006dc:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100006df:	ff d0                	call   eax
100006e1:	83 c4 10             	add    esp,0x10
100006e4:	b8 00 00 00 00       	mov    eax,0x0
100006e9:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100006ec:	c9                   	leave  
100006ed:	c3                   	ret    

100006ee <copytree(char*, char*)>:
100006ee:	55                   	push   ebp
100006ef:	89 e5                	mov    ebp,esp
100006f1:	53                   	push   ebx
100006f2:	81 ec 54 01 00 00    	sub    esp,0x154
100006f8:	83 ec 0c             	sub    esp,0xc
100006fb:	68 90 01 00 00       	push   0x190
10000700:	e8 fc ff ff ff       	call   10000701 <copytree(char*, char*)+0x13>	10000701: R_386_PC32	malloc
10000705:	83 c4 10             	add    esp,0x10
10000708:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
1000070b:	83 ec 0c             	sub    esp,0xc
1000070e:	68 90 01 00 00       	push   0x190
10000713:	e8 fc ff ff ff       	call   10000714 <copytree(char*, char*)+0x26>	10000714: R_386_PC32	malloc
10000718:	83 c4 10             	add    esp,0x10
1000071b:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
1000071e:	83 ec 04             	sub    esp,0x4
10000721:	68 90 01 00 00       	push   0x190
10000726:	6a 00                	push   0x0
10000728:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000072b:	e8 fc ff ff ff       	call   1000072c <copytree(char*, char*)+0x3e>	1000072c: R_386_PC32	memset
10000730:	83 c4 10             	add    esp,0x10
10000733:	83 ec 04             	sub    esp,0x4
10000736:	68 90 01 00 00       	push   0x190
1000073b:	6a 00                	push   0x0
1000073d:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000740:	e8 fc ff ff ff       	call   10000741 <copytree(char*, char*)+0x53>	10000741: R_386_PC32	memset
10000745:	83 c4 10             	add    esp,0x10
10000748:	8d 85 bc fe ff ff    	lea    eax,[ebp-0x144]
1000074e:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10000751:	83 ec 0c             	sub    esp,0xc
10000754:	68 14 01 00 00       	push   0x114
10000759:	e8 fc ff ff ff       	call   1000075a <copytree(char*, char*)+0x6c>	1000075a: R_386_PC32	operator new(unsigned long)
1000075e:	83 c4 10             	add    esp,0x10
10000761:	89 c3                	mov    ebx,eax
10000763:	b8 00 20 00 c2       	mov    eax,0xc2002000
10000768:	8b 00                	mov    eax,DWORD PTR [eax]
1000076a:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
1000076d:	83 ec 04             	sub    esp,0x4
10000770:	50                   	push   eax
10000771:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000774:	53                   	push   ebx
10000775:	e8 fc ff ff ff       	call   10000776 <copytree(char*, char*)+0x88>	10000776: R_386_PC32	Directory::Directory(char const*, Process*)
1000077a:	83 c4 10             	add    esp,0x10
1000077d:	89 5d e8             	mov    DWORD PTR [ebp-0x18],ebx
10000780:	83 ec 0c             	sub    esp,0xc
10000783:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
10000786:	e8 fc ff ff ff       	call   10000787 <copytree(char*, char*)+0x99>	10000787: R_386_PC32	Directory::open()
1000078b:	83 c4 10             	add    esp,0x10
1000078e:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10000791:	83 7d e4 00          	cmp    DWORD PTR [ebp-0x1c],0x0
10000795:	74 34                	je     100007cb <copytree(char*, char*)+0xdd>
10000797:	83 ec 0c             	sub    esp,0xc
1000079a:	68 8f b8 00 10       	push   0x1000b88f	1000079b: R_386_32	.text
1000079f:	e8 fc ff ff ff       	call   100007a0 <copytree(char*, char*)+0xb2>	100007a0: R_386_PC32	Dbg::kprintf(char const*, ...)
100007a4:	83 c4 10             	add    esp,0x10
100007a7:	83 7d e8 00          	cmp    DWORD PTR [ebp-0x18],0x0
100007ab:	0f 84 90 03 00 00    	je     10000b41 <copytree(char*, char*)+0x453>
100007b1:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
100007b4:	8b 00                	mov    eax,DWORD PTR [eax]
100007b6:	83 c0 08             	add    eax,0x8
100007b9:	8b 00                	mov    eax,DWORD PTR [eax]
100007bb:	83 ec 0c             	sub    esp,0xc
100007be:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
100007c1:	ff d0                	call   eax
100007c3:	83 c4 10             	add    esp,0x10
100007c6:	e9 76 03 00 00       	jmp    10000b41 <copytree(char*, char*)+0x453>
100007cb:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
100007ce:	8b 00                	mov    eax,DWORD PTR [eax]
100007d0:	83 c0 0c             	add    eax,0xc
100007d3:	8b 00                	mov    eax,DWORD PTR [eax]
100007d5:	83 ec 0c             	sub    esp,0xc
100007d8:	8d 95 b8 fe ff ff    	lea    edx,[ebp-0x148]
100007de:	52                   	push   edx
100007df:	ff 75 ec             	push   DWORD PTR [ebp-0x14]
100007e2:	6a 00                	push   0x0
100007e4:	68 10 01 00 00       	push   0x110
100007e9:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
100007ec:	ff d0                	call   eax
100007ee:	83 c4 20             	add    esp,0x20
100007f1:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
100007f4:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
100007f8:	0f 85 fb 02 00 00    	jne    10000af9 <copytree(char*, char*)+0x40b>
100007fe:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000801:	83 c0 10             	add    eax,0x10
10000804:	83 ec 08             	sub    esp,0x8
10000807:	68 88 b8 00 10       	push   0x1000b888	10000808: R_386_32	.text
1000080c:	50                   	push   eax
1000080d:	e8 fc ff ff ff       	call   1000080e <copytree(char*, char*)+0x120>	1000080e: R_386_PC32	strcmp
10000812:	83 c4 10             	add    esp,0x10
10000815:	85 c0                	test   eax,eax
10000817:	74 b2                	je     100007cb <copytree(char*, char*)+0xdd>
10000819:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
1000081c:	83 c0 10             	add    eax,0x10
1000081f:	83 ec 08             	sub    esp,0x8
10000822:	68 8a b8 00 10       	push   0x1000b88a	10000823: R_386_32	.text
10000827:	50                   	push   eax
10000828:	e8 fc ff ff ff       	call   10000829 <copytree(char*, char*)+0x13b>	10000829: R_386_PC32	strcmp
1000082d:	83 c4 10             	add    esp,0x10
10000830:	85 c0                	test   eax,eax
10000832:	74 97                	je     100007cb <copytree(char*, char*)+0xdd>
10000834:	83 ec 08             	sub    esp,0x8
10000837:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000083a:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
1000083d:	e8 fc ff ff ff       	call   1000083e <copytree(char*, char*)+0x150>	1000083e: R_386_PC32	strcpy
10000842:	83 c4 10             	add    esp,0x10
10000845:	83 ec 08             	sub    esp,0x8
10000848:	68 8d b8 00 10       	push   0x1000b88d	10000849: R_386_32	.text
1000084d:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000850:	e8 fc ff ff ff       	call   10000851 <copytree(char*, char*)+0x163>	10000851: R_386_PC32	strcat
10000855:	83 c4 10             	add    esp,0x10
10000858:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
1000085b:	83 c0 10             	add    eax,0x10
1000085e:	83 ec 08             	sub    esp,0x8
10000861:	50                   	push   eax
10000862:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000865:	e8 fc ff ff ff       	call   10000866 <copytree(char*, char*)+0x178>	10000866: R_386_PC32	strcat
1000086a:	83 c4 10             	add    esp,0x10
1000086d:	83 ec 08             	sub    esp,0x8
10000870:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10000873:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000876:	e8 fc ff ff ff       	call   10000877 <copytree(char*, char*)+0x189>	10000877: R_386_PC32	strcpy
1000087b:	83 c4 10             	add    esp,0x10
1000087e:	83 ec 08             	sub    esp,0x8
10000881:	68 8d b8 00 10       	push   0x1000b88d	10000882: R_386_32	.text
10000886:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000889:	e8 fc ff ff ff       	call   1000088a <copytree(char*, char*)+0x19c>	1000088a: R_386_PC32	strcat
1000088e:	83 c4 10             	add    esp,0x10
10000891:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10000894:	83 c0 10             	add    eax,0x10
10000897:	83 ec 08             	sub    esp,0x8
1000089a:	50                   	push   eax
1000089b:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
1000089e:	e8 fc ff ff ff       	call   1000089f <copytree(char*, char*)+0x1b1>	1000089f: R_386_PC32	strcat
100008a3:	83 c4 10             	add    esp,0x10
100008a6:	83 ec 04             	sub    esp,0x4
100008a9:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100008ac:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
100008af:	68 a9 b8 00 10       	push   0x1000b8a9	100008b0: R_386_32	.text
100008b4:	e8 fc ff ff ff       	call   100008b5 <copytree(char*, char*)+0x1c7>	100008b5: R_386_PC32	Dbg::kprintf(char const*, ...)
100008b9:	83 c4 10             	add    esp,0x10
100008bc:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100008bf:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
100008c2:	83 e0 02             	and    eax,0x2
100008c5:	85 c0                	test   eax,eax
100008c7:	74 47                	je     10000910 <copytree(char*, char*)+0x222>
100008c9:	83 ec 08             	sub    esp,0x8
100008cc:	68 c0 01 00 00       	push   0x1c0
100008d1:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
100008d4:	e8 fc ff ff ff       	call   100008d5 <copytree(char*, char*)+0x1e7>	100008d5: R_386_PC32	mkdir(char const*, int)
100008d9:	83 c4 10             	add    esp,0x10
100008dc:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
100008df:	83 7d dc 00          	cmp    DWORD PTR [ebp-0x24],0x0
100008e3:	74 15                	je     100008fa <copytree(char*, char*)+0x20c>
100008e5:	83 ec 0c             	sub    esp,0xc
100008e8:	68 b3 b8 00 10       	push   0x1000b8b3	100008e9: R_386_32	.text
100008ed:	e8 fc ff ff ff       	call   100008ee <copytree(char*, char*)+0x200>	100008ee: R_386_PC32	KePanic(char const*)
100008f2:	83 c4 10             	add    esp,0x10
100008f5:	e9 d1 fe ff ff       	jmp    100007cb <copytree(char*, char*)+0xdd>
100008fa:	83 ec 08             	sub    esp,0x8
100008fd:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000900:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000903:	e8 fc ff ff ff       	call   10000904 <copytree(char*, char*)+0x216>	10000904: R_386_PC32	copytree(char*, char*)
10000908:	83 c4 10             	add    esp,0x10
1000090b:	e9 bb fe ff ff       	jmp    100007cb <copytree(char*, char*)+0xdd>
10000910:	83 ec 0c             	sub    esp,0xc
10000913:	68 14 01 00 00       	push   0x114
10000918:	e8 fc ff ff ff       	call   10000919 <copytree(char*, char*)+0x22b>	10000919: R_386_PC32	operator new(unsigned long)
1000091d:	83 c4 10             	add    esp,0x10
10000920:	89 c3                	mov    ebx,eax
10000922:	b8 00 20 00 c2       	mov    eax,0xc2002000
10000927:	8b 00                	mov    eax,DWORD PTR [eax]
10000929:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
1000092c:	83 ec 04             	sub    esp,0x4
1000092f:	50                   	push   eax
10000930:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000933:	53                   	push   ebx
10000934:	e8 fc ff ff ff       	call   10000935 <copytree(char*, char*)+0x247>	10000935: R_386_PC32	File::File(char const*, Process*)
10000939:	83 c4 10             	add    esp,0x10
1000093c:	89 5d d8             	mov    DWORD PTR [ebp-0x28],ebx
1000093f:	83 ec 08             	sub    esp,0x8
10000942:	6a 01                	push   0x1
10000944:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000947:	e8 fc ff ff ff       	call   10000948 <copytree(char*, char*)+0x25a>	10000948: R_386_PC32	File::open(FileOpenMode)
1000094c:	83 c4 10             	add    esp,0x10
1000094f:	83 7d d8 00          	cmp    DWORD PTR [ebp-0x28],0x0
10000953:	75 15                	jne    1000096a <copytree(char*, char*)+0x27c>
10000955:	83 ec 0c             	sub    esp,0xc
10000958:	68 c4 b8 00 10       	push   0x1000b8c4	10000959: R_386_32	.text
1000095d:	e8 fc ff ff ff       	call   1000095e <copytree(char*, char*)+0x270>	1000095e: R_386_PC32	KePanic(char const*)
10000962:	83 c4 10             	add    esp,0x10
10000965:	e9 8a 01 00 00       	jmp    10000af4 <copytree(char*, char*)+0x406>
1000096a:	83 7d d8 00          	cmp    DWORD PTR [ebp-0x28],0x0
1000096e:	0f 84 57 fe ff ff    	je     100007cb <copytree(char*, char*)+0xdd>
10000974:	83 ec 0c             	sub    esp,0xc
10000977:	68 14 01 00 00       	push   0x114
1000097c:	e8 fc ff ff ff       	call   1000097d <copytree(char*, char*)+0x28f>	1000097d: R_386_PC32	operator new(unsigned long)
10000981:	83 c4 10             	add    esp,0x10
10000984:	89 c3                	mov    ebx,eax
10000986:	b8 00 20 00 c2       	mov    eax,0xc2002000
1000098b:	8b 00                	mov    eax,DWORD PTR [eax]
1000098d:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
10000990:	83 ec 04             	sub    esp,0x4
10000993:	50                   	push   eax
10000994:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000997:	53                   	push   ebx
10000998:	e8 fc ff ff ff       	call   10000999 <copytree(char*, char*)+0x2ab>	10000999: R_386_PC32	File::File(char const*, Process*)
1000099d:	83 c4 10             	add    esp,0x10
100009a0:	89 5d d4             	mov    DWORD PTR [ebp-0x2c],ebx
100009a3:	83 ec 08             	sub    esp,0x8
100009a6:	6a 12                	push   0x12
100009a8:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
100009ab:	e8 fc ff ff ff       	call   100009ac <copytree(char*, char*)+0x2be>	100009ac: R_386_PC32	File::open(FileOpenMode)
100009b0:	83 c4 10             	add    esp,0x10
100009b3:	83 7d d4 00          	cmp    DWORD PTR [ebp-0x2c],0x0
100009b7:	75 23                	jne    100009dc <copytree(char*, char*)+0x2ee>
100009b9:	83 ec 0c             	sub    esp,0xc
100009bc:	68 c4 b8 00 10       	push   0x1000b8c4	100009bd: R_386_32	.text
100009c1:	e8 fc ff ff ff       	call   100009c2 <copytree(char*, char*)+0x2d4>	100009c2: R_386_PC32	KePanic(char const*)
100009c6:	83 c4 10             	add    esp,0x10
100009c9:	83 ec 0c             	sub    esp,0xc
100009cc:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
100009cf:	e8 fc ff ff ff       	call   100009d0 <copytree(char*, char*)+0x2e2>	100009d0: R_386_PC32	File::close()
100009d4:	83 c4 10             	add    esp,0x10
100009d7:	e9 18 01 00 00       	jmp    10000af4 <copytree(char*, char*)+0x406>
100009dc:	83 ec 0c             	sub    esp,0xc
100009df:	68 00 10 00 00       	push   0x1000
100009e4:	e8 fc ff ff ff       	call   100009e5 <copytree(char*, char*)+0x2f7>	100009e5: R_386_PC32	malloc
100009e9:	83 c4 10             	add    esp,0x10
100009ec:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100009ef:	83 7d d0 00          	cmp    DWORD PTR [ebp-0x30],0x0
100009f3:	75 31                	jne    10000a26 <copytree(char*, char*)+0x338>
100009f5:	83 ec 0c             	sub    esp,0xc
100009f8:	68 d3 b8 00 10       	push   0x1000b8d3	100009f9: R_386_32	.text
100009fd:	e8 fc ff ff ff       	call   100009fe <copytree(char*, char*)+0x310>	100009fe: R_386_PC32	KePanic(char const*)
10000a02:	83 c4 10             	add    esp,0x10
10000a05:	83 ec 0c             	sub    esp,0xc
10000a08:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000a0b:	e8 fc ff ff ff       	call   10000a0c <copytree(char*, char*)+0x31e>	10000a0c: R_386_PC32	free
10000a10:	83 c4 10             	add    esp,0x10
10000a13:	83 ec 0c             	sub    esp,0xc
10000a16:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000a19:	e8 fc ff ff ff       	call   10000a1a <copytree(char*, char*)+0x32c>	10000a1a: R_386_PC32	free
10000a1e:	83 c4 10             	add    esp,0x10
10000a21:	e9 1c 01 00 00       	jmp    10000b42 <copytree(char*, char*)+0x454>
10000a26:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10000a29:	8b 00                	mov    eax,DWORD PTR [eax]
10000a2b:	83 c0 0c             	add    eax,0xc
10000a2e:	8b 00                	mov    eax,DWORD PTR [eax]
10000a30:	83 ec 0c             	sub    esp,0xc
10000a33:	8d 95 b4 fe ff ff    	lea    edx,[ebp-0x14c]
10000a39:	52                   	push   edx
10000a3a:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10000a3d:	6a 00                	push   0x0
10000a3f:	68 00 10 00 00       	push   0x1000
10000a44:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000a47:	ff d0                	call   eax
10000a49:	83 c4 20             	add    esp,0x20
10000a4c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10000a4f:	83 7d cc 00          	cmp    DWORD PTR [ebp-0x34],0x0
10000a53:	75 37                	jne    10000a8c <copytree(char*, char*)+0x39e>
10000a55:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000a58:	8b 00                	mov    eax,DWORD PTR [eax]
10000a5a:	83 c0 10             	add    eax,0x10
10000a5d:	8b 08                	mov    ecx,DWORD PTR [eax]
10000a5f:	8b 85 b4 fe ff ff    	mov    eax,DWORD PTR [ebp-0x14c]
10000a65:	99                   	cdq    
10000a66:	83 ec 0c             	sub    esp,0xc
10000a69:	8d 9d b0 fe ff ff    	lea    ebx,[ebp-0x150]
10000a6f:	53                   	push   ebx
10000a70:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10000a73:	52                   	push   edx
10000a74:	50                   	push   eax
10000a75:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
10000a78:	ff d1                	call   ecx
10000a7a:	83 c4 20             	add    esp,0x20
10000a7d:	8b 85 b4 fe ff ff    	mov    eax,DWORD PTR [ebp-0x14c]
10000a83:	3d 00 10 00 00       	cmp    eax,0x1000
10000a88:	75 05                	jne    10000a8f <copytree(char*, char*)+0x3a1>
10000a8a:	eb 9a                	jmp    10000a26 <copytree(char*, char*)+0x338>
10000a8c:	90                   	nop
10000a8d:	eb 01                	jmp    10000a90 <copytree(char*, char*)+0x3a2>
10000a8f:	90                   	nop
10000a90:	83 ec 0c             	sub    esp,0xc
10000a93:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10000a96:	e8 fc ff ff ff       	call   10000a97 <copytree(char*, char*)+0x3a9>	10000a97: R_386_PC32	free
10000a9b:	83 c4 10             	add    esp,0x10
10000a9e:	83 ec 0c             	sub    esp,0xc
10000aa1:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000aa4:	e8 fc ff ff ff       	call   10000aa5 <copytree(char*, char*)+0x3b7>	10000aa5: R_386_PC32	File::close()
10000aa9:	83 c4 10             	add    esp,0x10
10000aac:	83 ec 0c             	sub    esp,0xc
10000aaf:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
10000ab2:	e8 fc ff ff ff       	call   10000ab3 <copytree(char*, char*)+0x3c5>	10000ab3: R_386_PC32	File::close()
10000ab7:	83 c4 10             	add    esp,0x10
10000aba:	83 7d d8 00          	cmp    DWORD PTR [ebp-0x28],0x0
10000abe:	74 15                	je     10000ad5 <copytree(char*, char*)+0x3e7>
10000ac0:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10000ac3:	8b 00                	mov    eax,DWORD PTR [eax]
10000ac5:	83 c0 08             	add    eax,0x8
10000ac8:	8b 00                	mov    eax,DWORD PTR [eax]
10000aca:	83 ec 0c             	sub    esp,0xc
10000acd:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000ad0:	ff d0                	call   eax
10000ad2:	83 c4 10             	add    esp,0x10
10000ad5:	83 7d d4 00          	cmp    DWORD PTR [ebp-0x2c],0x0
10000ad9:	0f 84 ec fc ff ff    	je     100007cb <copytree(char*, char*)+0xdd>
10000adf:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000ae2:	8b 00                	mov    eax,DWORD PTR [eax]
10000ae4:	83 c0 08             	add    eax,0x8
10000ae7:	8b 00                	mov    eax,DWORD PTR [eax]
10000ae9:	83 ec 0c             	sub    esp,0xc
10000aec:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
10000aef:	ff d0                	call   eax
10000af1:	83 c4 10             	add    esp,0x10
10000af4:	e9 d2 fc ff ff       	jmp    100007cb <copytree(char*, char*)+0xdd>
10000af9:	90                   	nop
10000afa:	83 ec 0c             	sub    esp,0xc
10000afd:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10000b00:	e8 fc ff ff ff       	call   10000b01 <copytree(char*, char*)+0x413>	10000b01: R_386_PC32	free
10000b05:	83 c4 10             	add    esp,0x10
10000b08:	83 ec 0c             	sub    esp,0xc
10000b0b:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10000b0e:	e8 fc ff ff ff       	call   10000b0f <copytree(char*, char*)+0x421>	10000b0f: R_386_PC32	free
10000b13:	83 c4 10             	add    esp,0x10
10000b16:	83 ec 0c             	sub    esp,0xc
10000b19:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
10000b1c:	e8 fc ff ff ff       	call   10000b1d <copytree(char*, char*)+0x42f>	10000b1d: R_386_PC32	Directory::close()
10000b21:	83 c4 10             	add    esp,0x10
10000b24:	83 7d e8 00          	cmp    DWORD PTR [ebp-0x18],0x0
10000b28:	74 18                	je     10000b42 <copytree(char*, char*)+0x454>
10000b2a:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
10000b2d:	8b 00                	mov    eax,DWORD PTR [eax]
10000b2f:	83 c0 08             	add    eax,0x8
10000b32:	8b 00                	mov    eax,DWORD PTR [eax]
10000b34:	83 ec 0c             	sub    esp,0xc
10000b37:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
10000b3a:	ff d0                	call   eax
10000b3c:	83 c4 10             	add    esp,0x10
10000b3f:	eb 01                	jmp    10000b42 <copytree(char*, char*)+0x454>
10000b41:	90                   	nop
10000b42:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10000b45:	c9                   	leave  
10000b46:	c3                   	ret    

10000b47 <backupTree(char*, unsigned short)>:
10000b47:	55                   	push   ebp
10000b48:	89 e5                	mov    ebp,esp
10000b4a:	57                   	push   edi
10000b4b:	56                   	push   esi
10000b4c:	53                   	push   ebx
10000b4d:	81 ec 8c 12 00 00    	sub    esp,0x128c
10000b53:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10000b56:	66 89 85 74 ed ff ff 	mov    WORD PTR [ebp-0x128c],ax
10000b5d:	83 ec 0c             	sub    esp,0xc
10000b60:	68 90 01 00 00       	push   0x190
10000b65:	e8 fc ff ff ff       	call   10000b66 <backupTree(char*, unsigned short)+0x1f>	10000b66: R_386_PC32	malloc
10000b6a:	83 c4 10             	add    esp,0x10
10000b6d:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10000b70:	83 ec 04             	sub    esp,0x4
10000b73:	68 90 01 00 00       	push   0x190
10000b78:	6a 00                	push   0x0
10000b7a:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000b7d:	e8 fc ff ff ff       	call   10000b7e <backupTree(char*, unsigned short)+0x37>	10000b7e: R_386_PC32	memset
10000b82:	83 c4 10             	add    esp,0x10
10000b85:	8d 85 a8 fe ff ff    	lea    eax,[ebp-0x158]
10000b8b:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
10000b8e:	83 ec 0c             	sub    esp,0xc
10000b91:	68 14 01 00 00       	push   0x114
10000b96:	e8 fc ff ff ff       	call   10000b97 <backupTree(char*, unsigned short)+0x50>	10000b97: R_386_PC32	operator new(unsigned long)
10000b9b:	83 c4 10             	add    esp,0x10
10000b9e:	89 c3                	mov    ebx,eax
10000ba0:	b8 00 20 00 c2       	mov    eax,0xc2002000
10000ba5:	8b 00                	mov    eax,DWORD PTR [eax]
10000ba7:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
10000baa:	83 ec 04             	sub    esp,0x4
10000bad:	50                   	push   eax
10000bae:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000bb1:	53                   	push   ebx
10000bb2:	e8 fc ff ff ff       	call   10000bb3 <backupTree(char*, unsigned short)+0x6c>	10000bb3: R_386_PC32	Directory::Directory(char const*, Process*)
10000bb7:	83 c4 10             	add    esp,0x10
10000bba:	89 5d d0             	mov    DWORD PTR [ebp-0x30],ebx
10000bbd:	83 ec 0c             	sub    esp,0xc
10000bc0:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10000bc3:	e8 fc ff ff ff       	call   10000bc4 <backupTree(char*, unsigned short)+0x7d>	10000bc4: R_386_PC32	Directory::open()
10000bc8:	83 c4 10             	add    esp,0x10
10000bcb:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10000bce:	83 7d cc 00          	cmp    DWORD PTR [ebp-0x34],0x0
10000bd2:	74 34                	je     10000c08 <backupTree(char*, unsigned short)+0xc1>
10000bd4:	83 ec 0c             	sub    esp,0xc
10000bd7:	68 8f b8 00 10       	push   0x1000b88f	10000bd8: R_386_32	.text
10000bdc:	e8 fc ff ff ff       	call   10000bdd <backupTree(char*, unsigned short)+0x96>	10000bdd: R_386_PC32	Dbg::kprintf(char const*, ...)
10000be1:	83 c4 10             	add    esp,0x10
10000be4:	83 7d d0 00          	cmp    DWORD PTR [ebp-0x30],0x0
10000be8:	0f 84 c8 05 00 00    	je     100011b6 <backupTree(char*, unsigned short)+0x66f>
10000bee:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10000bf1:	8b 00                	mov    eax,DWORD PTR [eax]
10000bf3:	83 c0 08             	add    eax,0x8
10000bf6:	8b 00                	mov    eax,DWORD PTR [eax]
10000bf8:	83 ec 0c             	sub    esp,0xc
10000bfb:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10000bfe:	ff d0                	call   eax
10000c00:	83 c4 10             	add    esp,0x10
10000c03:	e9 af 05 00 00       	jmp    100011b7 <backupTree(char*, unsigned short)+0x670>
10000c08:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10000c0b:	8b 00                	mov    eax,DWORD PTR [eax]
10000c0d:	83 c0 0c             	add    eax,0xc
10000c10:	8b 00                	mov    eax,DWORD PTR [eax]
10000c12:	83 ec 0c             	sub    esp,0xc
10000c15:	8d 95 a4 fe ff ff    	lea    edx,[ebp-0x15c]
10000c1b:	52                   	push   edx
10000c1c:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
10000c1f:	6a 00                	push   0x0
10000c21:	68 10 01 00 00       	push   0x110
10000c26:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10000c29:	ff d0                	call   eax
10000c2b:	83 c4 20             	add    esp,0x20
10000c2e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10000c31:	83 7d c8 00          	cmp    DWORD PTR [ebp-0x38],0x0
10000c35:	0f 85 41 05 00 00    	jne    1000117c <backupTree(char*, unsigned short)+0x635>
10000c3b:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000c3e:	83 c0 10             	add    eax,0x10
10000c41:	83 ec 08             	sub    esp,0x8
10000c44:	68 88 b8 00 10       	push   0x1000b888	10000c45: R_386_32	.text
10000c49:	50                   	push   eax
10000c4a:	e8 fc ff ff ff       	call   10000c4b <backupTree(char*, unsigned short)+0x104>	10000c4b: R_386_PC32	strcmp
10000c4f:	83 c4 10             	add    esp,0x10
10000c52:	85 c0                	test   eax,eax
10000c54:	74 b2                	je     10000c08 <backupTree(char*, unsigned short)+0xc1>
10000c56:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000c59:	83 c0 10             	add    eax,0x10
10000c5c:	83 ec 08             	sub    esp,0x8
10000c5f:	68 8a b8 00 10       	push   0x1000b88a	10000c60: R_386_32	.text
10000c64:	50                   	push   eax
10000c65:	e8 fc ff ff ff       	call   10000c66 <backupTree(char*, unsigned short)+0x11f>	10000c66: R_386_PC32	strcmp
10000c6a:	83 c4 10             	add    esp,0x10
10000c6d:	85 c0                	test   eax,eax
10000c6f:	74 97                	je     10000c08 <backupTree(char*, unsigned short)+0xc1>
10000c71:	83 ec 08             	sub    esp,0x8
10000c74:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10000c77:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000c7a:	e8 fc ff ff ff       	call   10000c7b <backupTree(char*, unsigned short)+0x134>	10000c7b: R_386_PC32	strcpy
10000c7f:	83 c4 10             	add    esp,0x10
10000c82:	83 ec 08             	sub    esp,0x8
10000c85:	68 8d b8 00 10       	push   0x1000b88d	10000c86: R_386_32	.text
10000c8a:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000c8d:	e8 fc ff ff ff       	call   10000c8e <backupTree(char*, unsigned short)+0x147>	10000c8e: R_386_PC32	strcat
10000c92:	83 c4 10             	add    esp,0x10
10000c95:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000c98:	83 c0 10             	add    eax,0x10
10000c9b:	83 ec 08             	sub    esp,0x8
10000c9e:	50                   	push   eax
10000c9f:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000ca2:	e8 fc ff ff ff       	call   10000ca3 <backupTree(char*, unsigned short)+0x15c>	10000ca3: R_386_PC32	strcat
10000ca7:	83 c4 10             	add    esp,0x10
10000caa:	66 c7 45 e6 bc ad    	mov    WORD PTR [ebp-0x1a],0xadbc
10000cb0:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10000cb7:	8b 55 d4             	mov    edx,DWORD PTR [ebp-0x2c]
10000cba:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10000cbd:	01 d0                	add    eax,edx
10000cbf:	83 c0 10             	add    eax,0x10
10000cc2:	8a 00                	mov    al,BYTE PTR [eax]
10000cc4:	84 c0                	test   al,al
10000cc6:	74 3c                	je     10000d04 <backupTree(char*, unsigned short)+0x1bd>
10000cc8:	8b 55 d4             	mov    edx,DWORD PTR [ebp-0x2c]
10000ccb:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10000cce:	01 d0                	add    eax,edx
10000cd0:	83 c0 10             	add    eax,0x10
10000cd3:	8a 00                	mov    al,BYTE PTR [eax]
10000cd5:	66 0f be d0          	movsx  dx,al
10000cd9:	66 8b 45 e6          	mov    ax,WORD PTR [ebp-0x1a]
10000cdd:	31 d0                	xor    eax,edx
10000cdf:	66 89 45 e6          	mov    WORD PTR [ebp-0x1a],ax
10000ce3:	0f b7 45 e6          	movzx  eax,WORD PTR [ebp-0x1a]
10000ce7:	c1 e0 03             	shl    eax,0x3
10000cea:	89 c2                	mov    edx,eax
10000cec:	0f b7 45 e6          	movzx  eax,WORD PTR [ebp-0x1a]
10000cf0:	c1 f8 0d             	sar    eax,0xd
10000cf3:	09 d0                	or     eax,edx
10000cf5:	66 89 45 e6          	mov    WORD PTR [ebp-0x1a],ax
10000cf9:	66 81 6d e6 f1 06    	sub    WORD PTR [ebp-0x1a],0x6f1
10000cff:	ff 45 e0             	inc    DWORD PTR [ebp-0x20]
10000d02:	eb b3                	jmp    10000cb7 <backupTree(char*, unsigned short)+0x170>
10000d04:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000d07:	8b 40 0c             	mov    eax,DWORD PTR [eax+0xc]
10000d0a:	83 e0 02             	and    eax,0x2
10000d0d:	85 c0                	test   eax,eax
10000d0f:	74 37                	je     10000d48 <backupTree(char*, unsigned short)+0x201>
10000d11:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000d14:	83 c0 10             	add    eax,0x10
10000d17:	83 ec 08             	sub    esp,0x8
10000d1a:	68 dd b8 00 10       	push   0x1000b8dd	10000d1b: R_386_32	.text
10000d1f:	50                   	push   eax
10000d20:	e8 fc ff ff ff       	call   10000d21 <backupTree(char*, unsigned short)+0x1da>	10000d21: R_386_PC32	strcmp
10000d25:	83 c4 10             	add    esp,0x10
10000d28:	85 c0                	test   eax,eax
10000d2a:	0f 84 d8 fe ff ff    	je     10000c08 <backupTree(char*, unsigned short)+0xc1>
10000d30:	0f b7 45 e6          	movzx  eax,WORD PTR [ebp-0x1a]
10000d34:	83 ec 08             	sub    esp,0x8
10000d37:	50                   	push   eax
10000d38:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10000d3b:	e8 fc ff ff ff       	call   10000d3c <backupTree(char*, unsigned short)+0x1f5>	10000d3c: R_386_PC32	backupTree(char*, unsigned short)
10000d40:	83 c4 10             	add    esp,0x10
10000d43:	e9 c0 fe ff ff       	jmp    10000c08 <backupTree(char*, unsigned short)+0xc1>
10000d48:	c6 85 a3 fe ff ff 00 	mov    BYTE PTR [ebp-0x15d],0x0
10000d4f:	83 ec 08             	sub    esp,0x8
10000d52:	68 e4 b8 00 10       	push   0x1000b8e4	10000d53: R_386_32	.text
10000d57:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000d5d:	50                   	push   eax
10000d5e:	e8 fc ff ff ff       	call   10000d5f <backupTree(char*, unsigned short)+0x218>	10000d5f: R_386_PC32	strcpy
10000d63:	83 c4 10             	add    esp,0x10
10000d66:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10000d69:	8a 40 0a             	mov    al,BYTE PTR [eax+0xa]
10000d6c:	88 85 a2 fe ff ff    	mov    BYTE PTR [ebp-0x15e],al
10000d72:	83 ec 08             	sub    esp,0x8
10000d75:	8d 85 a2 fe ff ff    	lea    eax,[ebp-0x15e]
10000d7b:	50                   	push   eax
10000d7c:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000d82:	50                   	push   eax
10000d83:	e8 fc ff ff ff       	call   10000d84 <backupTree(char*, unsigned short)+0x23d>	10000d84: R_386_PC32	strcat
10000d88:	83 c4 10             	add    esp,0x10
10000d8b:	83 ec 04             	sub    esp,0x4
10000d8e:	6a 09                	push   0x9
10000d90:	6a 00                	push   0x0
10000d92:	8d 85 99 fe ff ff    	lea    eax,[ebp-0x167]
10000d98:	50                   	push   eax
10000d99:	e8 fc ff ff ff       	call   10000d9a <backupTree(char*, unsigned short)+0x253>	10000d9a: R_386_PC32	memset
10000d9e:	83 c4 10             	add    esp,0x10
10000da1:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000da4:	83 c0 10             	add    eax,0x10
10000da7:	83 ec 04             	sub    esp,0x4
10000daa:	6a 08                	push   0x8
10000dac:	50                   	push   eax
10000dad:	8d 85 99 fe ff ff    	lea    eax,[ebp-0x167]
10000db3:	50                   	push   eax
10000db4:	e8 fc ff ff ff       	call   10000db5 <backupTree(char*, unsigned short)+0x26e>	10000db5: R_386_PC32	strncpyxx(char*, char const*, unsigned long)
10000db9:	83 c4 10             	add    esp,0x10
10000dbc:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [ebp-0x24],0x0
10000dc3:	83 7d dc 07          	cmp    DWORD PTR [ebp-0x24],0x7
10000dc7:	0f 8f c5 00 00 00    	jg     10000e92 <backupTree(char*, unsigned short)+0x34b>
10000dcd:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000dd3:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000dd6:	01 d0                	add    eax,edx
10000dd8:	8a 00                	mov    al,BYTE PTR [eax]
10000dda:	3c 60                	cmp    al,0x60
10000ddc:	7e 30                	jle    10000e0e <backupTree(char*, unsigned short)+0x2c7>
10000dde:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000de4:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000de7:	01 d0                	add    eax,edx
10000de9:	8a 00                	mov    al,BYTE PTR [eax]
10000deb:	3c 7a                	cmp    al,0x7a
10000ded:	7f 1f                	jg     10000e0e <backupTree(char*, unsigned short)+0x2c7>
10000def:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000df5:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000df8:	01 d0                	add    eax,edx
10000dfa:	8a 00                	mov    al,BYTE PTR [eax]
10000dfc:	83 e8 20             	sub    eax,0x20
10000dff:	88 c2                	mov    dl,al
10000e01:	8d 8d 99 fe ff ff    	lea    ecx,[ebp-0x167]
10000e07:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e0a:	01 c8                	add    eax,ecx
10000e0c:	88 10                	mov    BYTE PTR [eax],dl
10000e0e:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e14:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e17:	01 d0                	add    eax,edx
10000e19:	8a 00                	mov    al,BYTE PTR [eax]
10000e1b:	3c 59                	cmp    al,0x59
10000e1d:	75 0e                	jne    10000e2d <backupTree(char*, unsigned short)+0x2e6>
10000e1f:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e25:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e28:	01 d0                	add    eax,edx
10000e2a:	c6 00 51             	mov    BYTE PTR [eax],0x51
10000e2d:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e33:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e36:	01 d0                	add    eax,edx
10000e38:	8a 00                	mov    al,BYTE PTR [eax]
10000e3a:	3c 5a                	cmp    al,0x5a
10000e3c:	75 0e                	jne    10000e4c <backupTree(char*, unsigned short)+0x305>
10000e3e:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e44:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e47:	01 d0                	add    eax,edx
10000e49:	c6 00 51             	mov    BYTE PTR [eax],0x51
10000e4c:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e52:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e55:	01 d0                	add    eax,edx
10000e57:	8a 00                	mov    al,BYTE PTR [eax]
10000e59:	3c 20                	cmp    al,0x20
10000e5b:	75 0e                	jne    10000e6b <backupTree(char*, unsigned short)+0x324>
10000e5d:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e63:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e66:	01 d0                	add    eax,edx
10000e68:	c6 00 59             	mov    BYTE PTR [eax],0x59
10000e6b:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e71:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e74:	01 d0                	add    eax,edx
10000e76:	8a 00                	mov    al,BYTE PTR [eax]
10000e78:	3c 2e                	cmp    al,0x2e
10000e7a:	75 0e                	jne    10000e8a <backupTree(char*, unsigned short)+0x343>
10000e7c:	8d 95 99 fe ff ff    	lea    edx,[ebp-0x167]
10000e82:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10000e85:	01 d0                	add    eax,edx
10000e87:	c6 00 5a             	mov    BYTE PTR [eax],0x5a
10000e8a:	ff 45 dc             	inc    DWORD PTR [ebp-0x24]
10000e8d:	e9 31 ff ff ff       	jmp    10000dc3 <backupTree(char*, unsigned short)+0x27c>
10000e92:	83 ec 08             	sub    esp,0x8
10000e95:	8d 85 99 fe ff ff    	lea    eax,[ebp-0x167]
10000e9b:	50                   	push   eax
10000e9c:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000ea2:	50                   	push   eax
10000ea3:	e8 fc ff ff ff       	call   10000ea4 <backupTree(char*, unsigned short)+0x35d>	10000ea4: R_386_PC32	strcat
10000ea8:	83 c4 10             	add    esp,0x10
10000eab:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10000eae:	83 c0 10             	add    eax,0x10
10000eb1:	83 ec 0c             	sub    esp,0xc
10000eb4:	50                   	push   eax
10000eb5:	e8 fc ff ff ff       	call   10000eb6 <backupTree(char*, unsigned short)+0x36f>	10000eb6: R_386_PC32	strlen
10000eba:	83 c4 10             	add    esp,0x10
10000ebd:	83 c0 41             	add    eax,0x41
10000ec0:	88 85 a2 fe ff ff    	mov    BYTE PTR [ebp-0x15e],al
10000ec6:	83 ec 08             	sub    esp,0x8
10000ec9:	8d 85 a2 fe ff ff    	lea    eax,[ebp-0x15e]
10000ecf:	50                   	push   eax
10000ed0:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000ed6:	50                   	push   eax
10000ed7:	e8 fc ff ff ff       	call   10000ed8 <backupTree(char*, unsigned short)+0x391>	10000ed8: R_386_PC32	strcat
10000edc:	83 c4 10             	add    esp,0x10
10000edf:	83 ec 08             	sub    esp,0x8
10000ee2:	68 88 b8 00 10       	push   0x1000b888	10000ee3: R_386_32	.text
10000ee7:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000eed:	50                   	push   eax
10000eee:	e8 fc ff ff ff       	call   10000eef <backupTree(char*, unsigned short)+0x3a8>	10000eef: R_386_PC32	strcat
10000ef3:	83 c4 10             	add    esp,0x10
10000ef6:	66 8b 45 e6          	mov    ax,WORD PTR [ebp-0x1a]
10000efa:	25 65 07 00 00       	and    eax,0x765
10000eff:	33 85 74 ed ff ff    	xor    eax,DWORD PTR [ebp-0x128c]
10000f05:	66 89 45 c6          	mov    WORD PTR [ebp-0x3a],ax
10000f09:	8d 85 88 fe ff ff    	lea    eax,[ebp-0x178]
10000f0f:	bb fd b8 00 10       	mov    ebx,0x1000b8fd	10000f10: R_386_32	.text
10000f14:	ba 11 00 00 00       	mov    edx,0x11
10000f19:	89 c7                	mov    edi,eax
10000f1b:	89 de                	mov    esi,ebx
10000f1d:	89 d1                	mov    ecx,edx
10000f1f:	f3 a4                	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10000f21:	0f b7 45 c6          	movzx  eax,WORD PTR [ebp-0x3a]
10000f25:	83 e0 0f             	and    eax,0xf
10000f28:	8a 84 05 88 fe ff ff 	mov    al,BYTE PTR [ebp+eax*1-0x178]
10000f2f:	88 85 a2 fe ff ff    	mov    BYTE PTR [ebp-0x15e],al
10000f35:	83 ec 08             	sub    esp,0x8
10000f38:	8d 85 a2 fe ff ff    	lea    eax,[ebp-0x15e]
10000f3e:	50                   	push   eax
10000f3f:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000f45:	50                   	push   eax
10000f46:	e8 fc ff ff ff       	call   10000f47 <backupTree(char*, unsigned short)+0x400>	10000f47: R_386_PC32	strcat
10000f4b:	83 c4 10             	add    esp,0x10
10000f4e:	0f b7 45 c6          	movzx  eax,WORD PTR [ebp-0x3a]
10000f52:	c1 f8 04             	sar    eax,0x4
10000f55:	83 e0 0f             	and    eax,0xf
10000f58:	8a 84 05 88 fe ff ff 	mov    al,BYTE PTR [ebp+eax*1-0x178]
10000f5f:	88 85 a2 fe ff ff    	mov    BYTE PTR [ebp-0x15e],al
10000f65:	83 ec 08             	sub    esp,0x8
10000f68:	8d 85 a2 fe ff ff    	lea    eax,[ebp-0x15e]
10000f6e:	50                   	push   eax
10000f6f:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000f75:	50                   	push   eax
10000f76:	e8 fc ff ff ff       	call   10000f77 <backupTree(char*, unsigned short)+0x430>	10000f77: R_386_PC32	strcat
10000f7b:	83 c4 10             	add    esp,0x10
10000f7e:	0f b7 45 c6          	movzx  eax,WORD PTR [ebp-0x3a]
10000f82:	c1 f8 08             	sar    eax,0x8
10000f85:	83 e0 0f             	and    eax,0xf
10000f88:	8a 84 05 88 fe ff ff 	mov    al,BYTE PTR [ebp+eax*1-0x178]
10000f8f:	88 85 a2 fe ff ff    	mov    BYTE PTR [ebp-0x15e],al
10000f95:	83 ec 08             	sub    esp,0x8
10000f98:	8d 85 a2 fe ff ff    	lea    eax,[ebp-0x15e]
10000f9e:	50                   	push   eax
10000f9f:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000fa5:	50                   	push   eax
10000fa6:	e8 fc ff ff ff       	call   10000fa7 <backupTree(char*, unsigned short)+0x460>	10000fa7: R_386_PC32	strcat
10000fab:	83 c4 10             	add    esp,0x10
10000fae:	66 8b 45 c6          	mov    ax,WORD PTR [ebp-0x3a]
10000fb2:	66 c1 e8 0c          	shr    ax,0xc
10000fb6:	0f b7 c0             	movzx  eax,ax
10000fb9:	8a 84 05 88 fe ff ff 	mov    al,BYTE PTR [ebp+eax*1-0x178]
10000fc0:	88 85 a2 fe ff ff    	mov    BYTE PTR [ebp-0x15e],al
10000fc6:	83 ec 08             	sub    esp,0x8
10000fc9:	8d 85 a2 fe ff ff    	lea    eax,[ebp-0x15e]
10000fcf:	50                   	push   eax
10000fd0:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10000fd6:	50                   	push   eax
10000fd7:	e8 fc ff ff ff       	call   10000fd8 <backupTree(char*, unsigned short)+0x491>	10000fd8: R_386_PC32	strcat
10000fdc:	83 c4 10             	add    esp,0x10
10000fdf:	83 ec 0c             	sub    esp,0xc
10000fe2:	68 14 01 00 00       	push   0x114
10000fe7:	e8 fc ff ff ff       	call   10000fe8 <backupTree(char*, unsigned short)+0x4a1>	10000fe8: R_386_PC32	operator new(unsigned long)
10000fec:	83 c4 10             	add    esp,0x10
10000fef:	89 c3                	mov    ebx,eax
10000ff1:	b8 00 20 00 c2       	mov    eax,0xc2002000
10000ff6:	8b 00                	mov    eax,DWORD PTR [eax]
10000ff8:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
10000ffb:	83 ec 04             	sub    esp,0x4
10000ffe:	50                   	push   eax
10000fff:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10001002:	53                   	push   ebx
10001003:	e8 fc ff ff ff       	call   10001004 <backupTree(char*, unsigned short)+0x4bd>	10001004: R_386_PC32	File::File(char const*, Process*)
10001008:	83 c4 10             	add    esp,0x10
1000100b:	89 5d c0             	mov    DWORD PTR [ebp-0x40],ebx
1000100e:	83 ec 08             	sub    esp,0x8
10001011:	6a 01                	push   0x1
10001013:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10001016:	e8 fc ff ff ff       	call   10001017 <backupTree(char*, unsigned short)+0x4d0>	10001017: R_386_PC32	File::open(FileOpenMode)
1000101b:	83 c4 10             	add    esp,0x10
1000101e:	83 7d c0 00          	cmp    DWORD PTR [ebp-0x40],0x0
10001022:	75 15                	jne    10001039 <backupTree(char*, unsigned short)+0x4f2>
10001024:	83 ec 0c             	sub    esp,0xc
10001027:	68 c4 b8 00 10       	push   0x1000b8c4	10001028: R_386_32	.text
1000102c:	e8 fc ff ff ff       	call   1000102d <backupTree(char*, unsigned short)+0x4e6>	1000102d: R_386_PC32	KePanic(char const*)
10001031:	83 c4 10             	add    esp,0x10
10001034:	e9 3e 01 00 00       	jmp    10001177 <backupTree(char*, unsigned short)+0x630>
10001039:	83 7d c0 00          	cmp    DWORD PTR [ebp-0x40],0x0
1000103d:	0f 84 c5 fb ff ff    	je     10000c08 <backupTree(char*, unsigned short)+0xc1>
10001043:	83 ec 0c             	sub    esp,0xc
10001046:	68 14 01 00 00       	push   0x114
1000104b:	e8 fc ff ff ff       	call   1000104c <backupTree(char*, unsigned short)+0x505>	1000104c: R_386_PC32	operator new(unsigned long)
10001050:	83 c4 10             	add    esp,0x10
10001053:	89 c3                	mov    ebx,eax
10001055:	b8 00 20 00 c2       	mov    eax,0xc2002000
1000105a:	8b 00                	mov    eax,DWORD PTR [eax]
1000105c:	8b 40 3c             	mov    eax,DWORD PTR [eax+0x3c]
1000105f:	83 ec 04             	sub    esp,0x4
10001062:	50                   	push   eax
10001063:	8d 85 80 ed ff ff    	lea    eax,[ebp-0x1280]
10001069:	50                   	push   eax
1000106a:	53                   	push   ebx
1000106b:	e8 fc ff ff ff       	call   1000106c <backupTree(char*, unsigned short)+0x525>	1000106c: R_386_PC32	File::File(char const*, Process*)
10001070:	83 c4 10             	add    esp,0x10
10001073:	89 5d bc             	mov    DWORD PTR [ebp-0x44],ebx
10001076:	83 ec 08             	sub    esp,0x8
10001079:	6a 12                	push   0x12
1000107b:	ff 75 bc             	push   DWORD PTR [ebp-0x44]
1000107e:	e8 fc ff ff ff       	call   1000107f <backupTree(char*, unsigned short)+0x538>	1000107f: R_386_PC32	File::open(FileOpenMode)
10001083:	83 c4 10             	add    esp,0x10
10001086:	83 7d bc 00          	cmp    DWORD PTR [ebp-0x44],0x0
1000108a:	75 23                	jne    100010af <backupTree(char*, unsigned short)+0x568>
1000108c:	83 ec 0c             	sub    esp,0xc
1000108f:	68 c4 b8 00 10       	push   0x1000b8c4	10001090: R_386_32	.text
10001094:	e8 fc ff ff ff       	call   10001095 <backupTree(char*, unsigned short)+0x54e>	10001095: R_386_PC32	KePanic(char const*)
10001099:	83 c4 10             	add    esp,0x10
1000109c:	83 ec 0c             	sub    esp,0xc
1000109f:	ff 75 bc             	push   DWORD PTR [ebp-0x44]
100010a2:	e8 fc ff ff ff       	call   100010a3 <backupTree(char*, unsigned short)+0x55c>	100010a3: R_386_PC32	File::close()
100010a7:	83 c4 10             	add    esp,0x10
100010aa:	e9 c8 00 00 00       	jmp    10001177 <backupTree(char*, unsigned short)+0x630>
100010af:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
100010b2:	8b 00                	mov    eax,DWORD PTR [eax]
100010b4:	83 c0 0c             	add    eax,0xc
100010b7:	8b 00                	mov    eax,DWORD PTR [eax]
100010b9:	83 ec 0c             	sub    esp,0xc
100010bc:	8d 95 84 fe ff ff    	lea    edx,[ebp-0x17c]
100010c2:	52                   	push   edx
100010c3:	8d 95 80 ee ff ff    	lea    edx,[ebp-0x1180]
100010c9:	52                   	push   edx
100010ca:	6a 00                	push   0x0
100010cc:	68 00 10 00 00       	push   0x1000
100010d1:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
100010d4:	ff d0                	call   eax
100010d6:	83 c4 20             	add    esp,0x20
100010d9:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
100010dc:	83 7d b8 00          	cmp    DWORD PTR [ebp-0x48],0x0
100010e0:	75 3b                	jne    1000111d <backupTree(char*, unsigned short)+0x5d6>
100010e2:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
100010e5:	8b 00                	mov    eax,DWORD PTR [eax]
100010e7:	83 c0 10             	add    eax,0x10
100010ea:	8b 08                	mov    ecx,DWORD PTR [eax]
100010ec:	8b 85 84 fe ff ff    	mov    eax,DWORD PTR [ebp-0x17c]
100010f2:	99                   	cdq    
100010f3:	83 ec 0c             	sub    esp,0xc
100010f6:	8d 9d 80 fe ff ff    	lea    ebx,[ebp-0x180]
100010fc:	53                   	push   ebx
100010fd:	8d 9d 80 ee ff ff    	lea    ebx,[ebp-0x1180]
10001103:	53                   	push   ebx
10001104:	52                   	push   edx
10001105:	50                   	push   eax
10001106:	ff 75 bc             	push   DWORD PTR [ebp-0x44]
10001109:	ff d1                	call   ecx
1000110b:	83 c4 20             	add    esp,0x20
1000110e:	8b 85 84 fe ff ff    	mov    eax,DWORD PTR [ebp-0x17c]
10001114:	3d 00 10 00 00       	cmp    eax,0x1000
10001119:	75 05                	jne    10001120 <backupTree(char*, unsigned short)+0x5d9>
1000111b:	eb 92                	jmp    100010af <backupTree(char*, unsigned short)+0x568>
1000111d:	90                   	nop
1000111e:	eb 01                	jmp    10001121 <backupTree(char*, unsigned short)+0x5da>
10001120:	90                   	nop
10001121:	83 ec 0c             	sub    esp,0xc
10001124:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10001127:	e8 fc ff ff ff       	call   10001128 <backupTree(char*, unsigned short)+0x5e1>	10001128: R_386_PC32	File::close()
1000112c:	83 c4 10             	add    esp,0x10
1000112f:	83 ec 0c             	sub    esp,0xc
10001132:	ff 75 bc             	push   DWORD PTR [ebp-0x44]
10001135:	e8 fc ff ff ff       	call   10001136 <backupTree(char*, unsigned short)+0x5ef>	10001136: R_386_PC32	File::close()
1000113a:	83 c4 10             	add    esp,0x10
1000113d:	83 7d c0 00          	cmp    DWORD PTR [ebp-0x40],0x0
10001141:	74 15                	je     10001158 <backupTree(char*, unsigned short)+0x611>
10001143:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
10001146:	8b 00                	mov    eax,DWORD PTR [eax]
10001148:	83 c0 08             	add    eax,0x8
1000114b:	8b 00                	mov    eax,DWORD PTR [eax]
1000114d:	83 ec 0c             	sub    esp,0xc
10001150:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10001153:	ff d0                	call   eax
10001155:	83 c4 10             	add    esp,0x10
10001158:	83 7d bc 00          	cmp    DWORD PTR [ebp-0x44],0x0
1000115c:	0f 84 a6 fa ff ff    	je     10000c08 <backupTree(char*, unsigned short)+0xc1>
10001162:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
10001165:	8b 00                	mov    eax,DWORD PTR [eax]
10001167:	83 c0 08             	add    eax,0x8
1000116a:	8b 00                	mov    eax,DWORD PTR [eax]
1000116c:	83 ec 0c             	sub    esp,0xc
1000116f:	ff 75 bc             	push   DWORD PTR [ebp-0x44]
10001172:	ff d0                	call   eax
10001174:	83 c4 10             	add    esp,0x10
10001177:	e9 8c fa ff ff       	jmp    10000c08 <backupTree(char*, unsigned short)+0xc1>
1000117c:	90                   	nop
1000117d:	83 ec 0c             	sub    esp,0xc
10001180:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10001183:	e8 fc ff ff ff       	call   10001184 <backupTree(char*, unsigned short)+0x63d>	10001184: R_386_PC32	free
10001188:	83 c4 10             	add    esp,0x10
1000118b:	83 ec 0c             	sub    esp,0xc
1000118e:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10001191:	e8 fc ff ff ff       	call   10001192 <backupTree(char*, unsigned short)+0x64b>	10001192: R_386_PC32	Directory::close()
10001196:	83 c4 10             	add    esp,0x10
10001199:	83 7d d0 00          	cmp    DWORD PTR [ebp-0x30],0x0
1000119d:	74 18                	je     100011b7 <backupTree(char*, unsigned short)+0x670>
1000119f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100011a2:	8b 00                	mov    eax,DWORD PTR [eax]
100011a4:	83 c0 08             	add    eax,0x8
100011a7:	8b 00                	mov    eax,DWORD PTR [eax]
100011a9:	83 ec 0c             	sub    esp,0xc
100011ac:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
100011af:	ff d0                	call   eax
100011b1:	83 c4 10             	add    esp,0x10
100011b4:	eb 01                	jmp    100011b7 <backupTree(char*, unsigned short)+0x670>
100011b6:	90                   	nop
100011b7:	8d 65 f4             	lea    esp,[ebp-0xc]
100011ba:	5b                   	pop    ebx
100011bb:	5e                   	pop    esi
100011bc:	5f                   	pop    edi
100011bd:	5d                   	pop    ebp
100011be:	c3                   	ret    

100011bf <createUser(char const*)>:
100011bf:	55                   	push   ebp
100011c0:	89 e5                	mov    ebp,esp
100011c2:	81 ec 08 01 00 00    	sub    esp,0x108
100011c8:	68 0e b9 00 10       	push   0x1000b90e	100011c9: R_386_32	.text
100011cd:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100011d3:	50                   	push   eax
100011d4:	e8 fc ff ff ff       	call   100011d5 <createUser(char const*)+0x16>	100011d5: R_386_PC32	strcpy
100011d9:	83 c4 08             	add    esp,0x8
100011dc:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100011df:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100011e5:	50                   	push   eax
100011e6:	e8 fc ff ff ff       	call   100011e7 <createUser(char const*)+0x28>	100011e7: R_386_PC32	strcat
100011eb:	83 c4 08             	add    esp,0x8
100011ee:	83 ec 08             	sub    esp,0x8
100011f1:	68 c0 01 00 00       	push   0x1c0
100011f6:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100011fc:	50                   	push   eax
100011fd:	e8 fc ff ff ff       	call   100011fe <createUser(char const*)+0x3f>	100011fe: R_386_PC32	mkdir(char const*, int)
10001202:	83 c4 10             	add    esp,0x10
10001205:	83 ec 08             	sub    esp,0x8
10001208:	68 18 b9 00 10       	push   0x1000b918	10001209: R_386_32	.text
1000120d:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001213:	50                   	push   eax
10001214:	e8 fc ff ff ff       	call   10001215 <createUser(char const*)+0x56>	10001215: R_386_PC32	strcat
10001219:	83 c4 10             	add    esp,0x10
1000121c:	83 ec 08             	sub    esp,0x8
1000121f:	68 c0 01 00 00       	push   0x1c0
10001224:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000122a:	50                   	push   eax
1000122b:	e8 fc ff ff ff       	call   1000122c <createUser(char const*)+0x6d>	1000122c: R_386_PC32	mkdir(char const*, int)
10001230:	83 c4 10             	add    esp,0x10
10001233:	83 ec 08             	sub    esp,0x8
10001236:	68 0e b9 00 10       	push   0x1000b90e	10001237: R_386_32	.text
1000123b:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001241:	50                   	push   eax
10001242:	e8 fc ff ff ff       	call   10001243 <createUser(char const*)+0x84>	10001243: R_386_PC32	strcpy
10001247:	83 c4 10             	add    esp,0x10
1000124a:	83 ec 08             	sub    esp,0x8
1000124d:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001250:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001256:	50                   	push   eax
10001257:	e8 fc ff ff ff       	call   10001258 <createUser(char const*)+0x99>	10001258: R_386_PC32	strcat
1000125c:	83 c4 10             	add    esp,0x10
1000125f:	83 ec 08             	sub    esp,0x8
10001262:	68 21 b9 00 10       	push   0x1000b921	10001263: R_386_32	.text
10001267:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000126d:	50                   	push   eax
1000126e:	e8 fc ff ff ff       	call   1000126f <createUser(char const*)+0xb0>	1000126f: R_386_PC32	strcat
10001273:	83 c4 10             	add    esp,0x10
10001276:	83 ec 08             	sub    esp,0x8
10001279:	68 c0 01 00 00       	push   0x1c0
1000127e:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001284:	50                   	push   eax
10001285:	e8 fc ff ff ff       	call   10001286 <createUser(char const*)+0xc7>	10001286: R_386_PC32	mkdir(char const*, int)
1000128a:	83 c4 10             	add    esp,0x10
1000128d:	83 ec 08             	sub    esp,0x8
10001290:	68 0e b9 00 10       	push   0x1000b90e	10001291: R_386_32	.text
10001295:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000129b:	50                   	push   eax
1000129c:	e8 fc ff ff ff       	call   1000129d <createUser(char const*)+0xde>	1000129d: R_386_PC32	strcpy
100012a1:	83 c4 10             	add    esp,0x10
100012a4:	83 ec 08             	sub    esp,0x8
100012a7:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100012aa:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100012b0:	50                   	push   eax
100012b1:	e8 fc ff ff ff       	call   100012b2 <createUser(char const*)+0xf3>	100012b2: R_386_PC32	strcat
100012b6:	83 c4 10             	add    esp,0x10
100012b9:	83 ec 08             	sub    esp,0x8
100012bc:	68 2c b9 00 10       	push   0x1000b92c	100012bd: R_386_32	.text
100012c1:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100012c7:	50                   	push   eax
100012c8:	e8 fc ff ff ff       	call   100012c9 <createUser(char const*)+0x10a>	100012c9: R_386_PC32	strcat
100012cd:	83 c4 10             	add    esp,0x10
100012d0:	83 ec 08             	sub    esp,0x8
100012d3:	68 c0 01 00 00       	push   0x1c0
100012d8:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100012de:	50                   	push   eax
100012df:	e8 fc ff ff ff       	call   100012e0 <createUser(char const*)+0x121>	100012e0: R_386_PC32	mkdir(char const*, int)
100012e4:	83 c4 10             	add    esp,0x10
100012e7:	83 ec 08             	sub    esp,0x8
100012ea:	68 0e b9 00 10       	push   0x1000b90e	100012eb: R_386_32	.text
100012ef:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100012f5:	50                   	push   eax
100012f6:	e8 fc ff ff ff       	call   100012f7 <createUser(char const*)+0x138>	100012f7: R_386_PC32	strcpy
100012fb:	83 c4 10             	add    esp,0x10
100012fe:	83 ec 08             	sub    esp,0x8
10001301:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001304:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000130a:	50                   	push   eax
1000130b:	e8 fc ff ff ff       	call   1000130c <createUser(char const*)+0x14d>	1000130c: R_386_PC32	strcat
10001310:	83 c4 10             	add    esp,0x10
10001313:	83 ec 08             	sub    esp,0x8
10001316:	68 37 b9 00 10       	push   0x1000b937	10001317: R_386_32	.text
1000131b:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001321:	50                   	push   eax
10001322:	e8 fc ff ff ff       	call   10001323 <createUser(char const*)+0x164>	10001323: R_386_PC32	strcat
10001327:	83 c4 10             	add    esp,0x10
1000132a:	83 ec 08             	sub    esp,0x8
1000132d:	68 c0 01 00 00       	push   0x1c0
10001332:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001338:	50                   	push   eax
10001339:	e8 fc ff ff ff       	call   1000133a <createUser(char const*)+0x17b>	1000133a: R_386_PC32	mkdir(char const*, int)
1000133e:	83 c4 10             	add    esp,0x10
10001341:	83 ec 08             	sub    esp,0x8
10001344:	68 0e b9 00 10       	push   0x1000b90e	10001345: R_386_32	.text
10001349:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000134f:	50                   	push   eax
10001350:	e8 fc ff ff ff       	call   10001351 <createUser(char const*)+0x192>	10001351: R_386_PC32	strcpy
10001355:	83 c4 10             	add    esp,0x10
10001358:	83 ec 08             	sub    esp,0x8
1000135b:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000135e:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001364:	50                   	push   eax
10001365:	e8 fc ff ff ff       	call   10001366 <createUser(char const*)+0x1a7>	10001366: R_386_PC32	strcat
1000136a:	83 c4 10             	add    esp,0x10
1000136d:	83 ec 08             	sub    esp,0x8
10001370:	68 3f b9 00 10       	push   0x1000b93f	10001371: R_386_32	.text
10001375:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000137b:	50                   	push   eax
1000137c:	e8 fc ff ff ff       	call   1000137d <createUser(char const*)+0x1be>	1000137d: R_386_PC32	strcat
10001381:	83 c4 10             	add    esp,0x10
10001384:	83 ec 08             	sub    esp,0x8
10001387:	68 c0 01 00 00       	push   0x1c0
1000138c:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001392:	50                   	push   eax
10001393:	e8 fc ff ff ff       	call   10001394 <createUser(char const*)+0x1d5>	10001394: R_386_PC32	mkdir(char const*, int)
10001398:	83 c4 10             	add    esp,0x10
1000139b:	83 ec 08             	sub    esp,0x8
1000139e:	68 0e b9 00 10       	push   0x1000b90e	1000139f: R_386_32	.text
100013a3:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100013a9:	50                   	push   eax
100013aa:	e8 fc ff ff ff       	call   100013ab <createUser(char const*)+0x1ec>	100013ab: R_386_PC32	strcpy
100013af:	83 c4 10             	add    esp,0x10
100013b2:	83 ec 08             	sub    esp,0x8
100013b5:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100013b8:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100013be:	50                   	push   eax
100013bf:	e8 fc ff ff ff       	call   100013c0 <createUser(char const*)+0x201>	100013c0: R_386_PC32	strcat
100013c4:	83 c4 10             	add    esp,0x10
100013c7:	83 ec 08             	sub    esp,0x8
100013ca:	68 4a b9 00 10       	push   0x1000b94a	100013cb: R_386_32	.text
100013cf:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100013d5:	50                   	push   eax
100013d6:	e8 fc ff ff ff       	call   100013d7 <createUser(char const*)+0x218>	100013d7: R_386_PC32	strcat
100013db:	83 c4 10             	add    esp,0x10
100013de:	83 ec 08             	sub    esp,0x8
100013e1:	68 c0 01 00 00       	push   0x1c0
100013e6:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
100013ec:	50                   	push   eax
100013ed:	e8 fc ff ff ff       	call   100013ee <createUser(char const*)+0x22f>	100013ee: R_386_PC32	mkdir(char const*, int)
100013f2:	83 c4 10             	add    esp,0x10
100013f5:	83 ec 08             	sub    esp,0x8
100013f8:	68 0e b9 00 10       	push   0x1000b90e	100013f9: R_386_32	.text
100013fd:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001403:	50                   	push   eax
10001404:	e8 fc ff ff ff       	call   10001405 <createUser(char const*)+0x246>	10001405: R_386_PC32	strcpy
10001409:	83 c4 10             	add    esp,0x10
1000140c:	83 ec 08             	sub    esp,0x8
1000140f:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001412:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001418:	50                   	push   eax
10001419:	e8 fc ff ff ff       	call   1000141a <createUser(char const*)+0x25b>	1000141a: R_386_PC32	strcat
1000141e:	83 c4 10             	add    esp,0x10
10001421:	83 ec 08             	sub    esp,0x8
10001424:	68 51 b9 00 10       	push   0x1000b951	10001425: R_386_32	.text
10001429:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000142f:	50                   	push   eax
10001430:	e8 fc ff ff ff       	call   10001431 <createUser(char const*)+0x272>	10001431: R_386_PC32	strcat
10001435:	83 c4 10             	add    esp,0x10
10001438:	83 ec 08             	sub    esp,0x8
1000143b:	68 c0 01 00 00       	push   0x1c0
10001440:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001446:	50                   	push   eax
10001447:	e8 fc ff ff ff       	call   10001448 <createUser(char const*)+0x289>	10001448: R_386_PC32	mkdir(char const*, int)
1000144c:	83 c4 10             	add    esp,0x10
1000144f:	83 ec 08             	sub    esp,0x8
10001452:	68 59 b9 00 10       	push   0x1000b959	10001453: R_386_32	.text
10001457:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000145d:	50                   	push   eax
1000145e:	e8 fc ff ff ff       	call   1000145f <createUser(char const*)+0x2a0>	1000145f: R_386_PC32	strcpy
10001463:	83 c4 10             	add    esp,0x10
10001466:	83 ec 08             	sub    esp,0x8
10001469:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000146c:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001472:	50                   	push   eax
10001473:	e8 fc ff ff ff       	call   10001474 <createUser(char const*)+0x2b5>	10001474: R_386_PC32	strcat
10001478:	83 c4 10             	add    esp,0x10
1000147b:	83 ec 08             	sub    esp,0x8
1000147e:	68 c0 01 00 00       	push   0x1c0
10001483:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
10001489:	50                   	push   eax
1000148a:	e8 fc ff ff ff       	call   1000148b <createUser(char const*)+0x2cc>	1000148b: R_386_PC32	mkdir(char const*, int)
1000148f:	83 c4 10             	add    esp,0x10
10001492:	83 ec 08             	sub    esp,0x8
10001495:	8d 85 f8 fe ff ff    	lea    eax,[ebp-0x108]
1000149b:	50                   	push   eax
1000149c:	68 74 b9 00 10       	push   0x1000b974	1000149d: R_386_32	.text
100014a1:	e8 fc ff ff ff       	call   100014a2 <createUser(char const*)+0x2e3>	100014a2: R_386_PC32	copytree(char*, char*)
100014a6:	83 c4 10             	add    esp,0x10
100014a9:	90                   	nop
100014aa:	c9                   	leave  
100014ab:	c3                   	ret    

100014ac <drawBootScreen()>:
100014ac:	55                   	push   ebp
100014ad:	89 e5                	mov    ebp,esp
100014af:	83 ec 18             	sub    esp,0x18
100014b2:	a1 00 00 00 00       	mov    eax,ds:0x0	100014b3: R_386_32	term
100014b7:	83 ec 08             	sub    esp,0x8
100014ba:	6a 0b                	push   0xb
100014bc:	50                   	push   eax
100014bd:	e8 fc ff ff ff       	call   100014be <drawBootScreen()+0x12>	100014be: R_386_PC32	VgaText::setDefaultBgColour(VgaColour)
100014c2:	83 c4 10             	add    esp,0x10
100014c5:	a1 00 00 00 00       	mov    eax,ds:0x0	100014c6: R_386_32	term
100014ca:	83 ec 08             	sub    esp,0x8
100014cd:	6a 00                	push   0x0
100014cf:	50                   	push   eax
100014d0:	e8 fc ff ff ff       	call   100014d1 <drawBootScreen()+0x25>	100014d1: R_386_PC32	VgaText::setDefaultFgColour(VgaColour)
100014d5:	83 c4 10             	add    esp,0x10
100014d8:	a1 00 00 00 00       	mov    eax,ds:0x0	100014d9: R_386_32	term
100014dd:	83 ec 0c             	sub    esp,0xc
100014e0:	50                   	push   eax
100014e1:	e8 fc ff ff ff       	call   100014e2 <drawBootScreen()+0x36>	100014e2: R_386_PC32	VgaText::clearScreen()
100014e6:	83 c4 10             	add    esp,0x10
100014e9:	a1 00 00 00 00       	mov    eax,ds:0x0	100014ea: R_386_32	term
100014ee:	83 ec 08             	sub    esp,0x8
100014f1:	68 93 b9 00 10       	push   0x1000b993	100014f2: R_386_32	.text
100014f6:	50                   	push   eax
100014f7:	e8 fc ff ff ff       	call   100014f8 <drawBootScreen()+0x4c>	100014f8: R_386_PC32	VgaText::setTitle(char*)
100014fc:	83 c4 10             	add    esp,0x10
100014ff:	a1 00 00 00 00       	mov    eax,ds:0x0	10001500: R_386_32	term
10001504:	83 ec 08             	sub    esp,0x8
10001507:	6a 00                	push   0x0
10001509:	50                   	push   eax
1000150a:	e8 fc ff ff ff       	call   1000150b <drawBootScreen()+0x5f>	1000150b: R_386_PC32	VgaText::setTitleColour(VgaColour)
1000150f:	83 c4 10             	add    esp,0x10
10001512:	a1 00 00 00 00       	mov    eax,ds:0x0	10001513: R_386_32	term
10001517:	83 ec 08             	sub    esp,0x8
1000151a:	6a 00                	push   0x0
1000151c:	50                   	push   eax
1000151d:	e8 fc ff ff ff       	call   1000151e <drawBootScreen()+0x72>	1000151e: R_386_PC32	VgaText::setTitleTextColour(VgaColour)
10001522:	83 c4 10             	add    esp,0x10
10001525:	a1 00 00 00 00       	mov    eax,ds:0x0	10001526: R_386_32	term
1000152a:	83 ec 04             	sub    esp,0x4
1000152d:	6a 00                	push   0x0
1000152f:	6a 00                	push   0x0
10001531:	50                   	push   eax
10001532:	e8 fc ff ff ff       	call   10001533 <drawBootScreen()+0x87>	10001533: R_386_PC32	VgaText::setCursor(int, int)
10001537:	83 c4 10             	add    esp,0x10
1000153a:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10001541:	83 7d f4 4f          	cmp    DWORD PTR [ebp-0xc],0x4f
10001545:	7f 19                	jg     10001560 <drawBootScreen()+0xb4>
10001547:	a1 00 00 00 00       	mov    eax,ds:0x0	10001548: R_386_32	term
1000154c:	6a 00                	push   0x0
1000154e:	6a 00                	push   0x0
10001550:	6a 20                	push   0x20
10001552:	50                   	push   eax
10001553:	e8 fc ff ff ff       	call   10001554 <drawBootScreen()+0xa8>	10001554: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
10001558:	83 c4 10             	add    esp,0x10
1000155b:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000155e:	eb e1                	jmp    10001541 <drawBootScreen()+0x95>
10001560:	a0 00 00 00 00       	mov    al,ds:0x0	10001561: R_386_32	showSidebar
10001565:	84 c0                	test   al,al
10001567:	0f 84 91 00 00 00    	je     100015fe <drawBootScreen()+0x152>
1000156d:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10001574:	83 7d f0 18          	cmp    DWORD PTR [ebp-0x10],0x18
10001578:	7f 41                	jg     100015bb <drawBootScreen()+0x10f>
1000157a:	a1 00 00 00 00       	mov    eax,ds:0x0	1000157b: R_386_32	term
1000157f:	83 ec 04             	sub    esp,0x4
10001582:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10001585:	6a 00                	push   0x0
10001587:	50                   	push   eax
10001588:	e8 fc ff ff ff       	call   10001589 <drawBootScreen()+0xdd>	10001589: R_386_PC32	VgaText::setCursor(int, int)
1000158d:	83 c4 10             	add    esp,0x10
10001590:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [ebp-0x14],0x0
10001597:	83 7d ec 0f          	cmp    DWORD PTR [ebp-0x14],0xf
1000159b:	7f 19                	jg     100015b6 <drawBootScreen()+0x10a>
1000159d:	a1 00 00 00 00       	mov    eax,ds:0x0	1000159e: R_386_32	term
100015a2:	6a 00                	push   0x0
100015a4:	6a 00                	push   0x0
100015a6:	6a 20                	push   0x20
100015a8:	50                   	push   eax
100015a9:	e8 fc ff ff ff       	call   100015aa <drawBootScreen()+0xfe>	100015aa: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
100015ae:	83 c4 10             	add    esp,0x10
100015b1:	ff 45 ec             	inc    DWORD PTR [ebp-0x14]
100015b4:	eb e1                	jmp    10001597 <drawBootScreen()+0xeb>
100015b6:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100015b9:	eb b9                	jmp    10001574 <drawBootScreen()+0xc8>
100015bb:	a1 00 00 00 00       	mov    eax,ds:0x0	100015bc: R_386_32	term
100015c0:	83 ec 04             	sub    esp,0x4
100015c3:	6a 01                	push   0x1
100015c5:	6a 01                	push   0x1
100015c7:	50                   	push   eax
100015c8:	e8 fc ff ff ff       	call   100015c9 <drawBootScreen()+0x11d>	100015c9: R_386_PC32	VgaText::setCursor(int, int)
100015cd:	83 c4 10             	add    esp,0x10
100015d0:	a1 00 00 00 00       	mov    eax,ds:0x0	100015d1: R_386_32	term
100015d5:	6a 00                	push   0x0
100015d7:	6a 0f                	push   0xf
100015d9:	68 94 b9 00 10       	push   0x1000b994	100015da: R_386_32	.text
100015de:	50                   	push   eax
100015df:	e8 fc ff ff ff       	call   100015e0 <drawBootScreen()+0x134>	100015e0: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
100015e4:	83 c4 10             	add    esp,0x10
100015e7:	a1 00 00 00 00       	mov    eax,ds:0x0	100015e8: R_386_32	term
100015ec:	6a 00                	push   0x0
100015ee:	6a 0e                	push   0xe
100015f0:	68 17 ba 00 10       	push   0x1000ba17	100015f1: R_386_32	.text
100015f5:	50                   	push   eax
100015f6:	e8 fc ff ff ff       	call   100015f7 <drawBootScreen()+0x14b>	100015f7: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
100015fb:	83 c4 10             	add    esp,0x10
100015fe:	a1 00 00 00 00       	mov    eax,ds:0x0	100015ff: R_386_32	term
10001603:	83 ec 08             	sub    esp,0x8
10001606:	6a 0f                	push   0xf
10001608:	50                   	push   eax
10001609:	e8 fc ff ff ff       	call   1000160a <drawBootScreen()+0x15e>	1000160a: R_386_PC32	VgaText::setDefaultBgColour(VgaColour)
1000160e:	83 c4 10             	add    esp,0x10
10001611:	a1 00 00 00 00       	mov    eax,ds:0x0	10001612: R_386_32	term
10001616:	83 ec 08             	sub    esp,0x8
10001619:	6a 00                	push   0x0
1000161b:	50                   	push   eax
1000161c:	e8 fc ff ff ff       	call   1000161d <drawBootScreen()+0x171>	1000161d: R_386_PC32	VgaText::setDefaultFgColour(VgaColour)
10001621:	83 c4 10             	add    esp,0x10
10001624:	90                   	nop
10001625:	c9                   	leave  
10001626:	c3                   	ret    

10001627 <drawBasicWindowX(int, int, int, int, char const*, bool)>:
10001627:	55                   	push   ebp
10001628:	89 e5                	mov    ebp,esp
1000162a:	53                   	push   ebx
1000162b:	83 ec 34             	sub    esp,0x34
1000162e:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10001631:	88 45 d4             	mov    BYTE PTR [ebp-0x2c],al
10001634:	ff 45 0c             	inc    DWORD PTR [ebp+0xc]
10001637:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
1000163e:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10001641:	3b 45 14             	cmp    eax,DWORD PTR [ebp+0x14]
10001644:	7d 6c                	jge    100016b2 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x8b>
10001646:	a1 00 00 00 00       	mov    eax,ds:0x0	10001647: R_386_32	term
1000164b:	8b 4d 0c             	mov    ecx,DWORD PTR [ebp+0xc]
1000164e:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001651:	01 ca                	add    edx,ecx
10001653:	83 ec 04             	sub    esp,0x4
10001656:	52                   	push   edx
10001657:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000165a:	50                   	push   eax
1000165b:	e8 fc ff ff ff       	call   1000165c <drawBasicWindowX(int, int, int, int, char const*, bool)+0x35>	1000165c: R_386_PC32	VgaText::setCursor(int, int)
10001660:	83 c4 10             	add    esp,0x10
10001663:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
1000166a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000166d:	3b 45 10             	cmp    eax,DWORD PTR [ebp+0x10]
10001670:	7d 3b                	jge    100016ad <drawBasicWindowX(int, int, int, int, char const*, bool)+0x86>
10001672:	a1 00 00 00 00       	mov    eax,ds:0x0	10001673: R_386_32	term
10001677:	80 7d d4 00          	cmp    BYTE PTR [ebp-0x2c],0x0
1000167b:	74 07                	je     10001684 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x5d>
1000167d:	b9 07 00 00 00       	mov    ecx,0x7
10001682:	eb 05                	jmp    10001689 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x62>
10001684:	b9 0f 00 00 00       	mov    ecx,0xf
10001689:	80 7d d4 00          	cmp    BYTE PTR [ebp-0x2c],0x0
1000168d:	74 07                	je     10001696 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x6f>
1000168f:	ba 07 00 00 00       	mov    edx,0x7
10001694:	eb 05                	jmp    1000169b <drawBasicWindowX(int, int, int, int, char const*, bool)+0x74>
10001696:	ba 0f 00 00 00       	mov    edx,0xf
1000169b:	51                   	push   ecx
1000169c:	52                   	push   edx
1000169d:	6a 20                	push   0x20
1000169f:	50                   	push   eax
100016a0:	e8 fc ff ff ff       	call   100016a1 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x7a>	100016a1: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
100016a5:	83 c4 10             	add    esp,0x10
100016a8:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100016ab:	eb bd                	jmp    1000166a <drawBasicWindowX(int, int, int, int, char const*, bool)+0x43>
100016ad:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100016b0:	eb 8c                	jmp    1000163e <drawBasicWindowX(int, int, int, int, char const*, bool)+0x17>
100016b2:	a1 00 00 00 00       	mov    eax,ds:0x0	100016b3: R_386_32	term
100016b7:	83 ec 04             	sub    esp,0x4
100016ba:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
100016bd:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100016c0:	50                   	push   eax
100016c1:	e8 fc ff ff ff       	call   100016c2 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x9b>	100016c2: R_386_PC32	VgaText::setCursor(int, int)
100016c6:	83 c4 10             	add    esp,0x10
100016c9:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [ebp-0x14],0x0
100016d0:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100016d3:	3b 45 10             	cmp    eax,DWORD PTR [ebp+0x10]
100016d6:	7d 19                	jge    100016f1 <drawBasicWindowX(int, int, int, int, char const*, bool)+0xca>
100016d8:	a1 00 00 00 00       	mov    eax,ds:0x0	100016d9: R_386_32	term
100016dd:	6a 01                	push   0x1
100016df:	6a 01                	push   0x1
100016e1:	6a 20                	push   0x20
100016e3:	50                   	push   eax
100016e4:	e8 fc ff ff ff       	call   100016e5 <drawBasicWindowX(int, int, int, int, char const*, bool)+0xbe>	100016e5: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
100016e9:	83 c4 10             	add    esp,0x10
100016ec:	ff 45 ec             	inc    DWORD PTR [ebp-0x14]
100016ef:	eb df                	jmp    100016d0 <drawBasicWindowX(int, int, int, int, char const*, bool)+0xa9>
100016f1:	a1 00 00 00 00       	mov    eax,ds:0x0	100016f2: R_386_32	term
100016f6:	8b 4d 0c             	mov    ecx,DWORD PTR [ebp+0xc]
100016f9:	8b 55 14             	mov    edx,DWORD PTR [ebp+0x14]
100016fc:	01 d1                	add    ecx,edx
100016fe:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10001701:	42                   	inc    edx
10001702:	83 ec 04             	sub    esp,0x4
10001705:	51                   	push   ecx
10001706:	52                   	push   edx
10001707:	50                   	push   eax
10001708:	e8 fc ff ff ff       	call   10001709 <drawBasicWindowX(int, int, int, int, char const*, bool)+0xe2>	10001709: R_386_PC32	VgaText::setCursor(int, int)
1000170d:	83 c4 10             	add    esp,0x10
10001710:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [ebp-0x18],0x0
10001717:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
1000171a:	3b 45 10             	cmp    eax,DWORD PTR [ebp+0x10]
1000171d:	7d 19                	jge    10001738 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x111>
1000171f:	a1 00 00 00 00       	mov    eax,ds:0x0	10001720: R_386_32	term
10001724:	6a 03                	push   0x3
10001726:	6a 03                	push   0x3
10001728:	6a 20                	push   0x20
1000172a:	50                   	push   eax
1000172b:	e8 fc ff ff ff       	call   1000172c <drawBasicWindowX(int, int, int, int, char const*, bool)+0x105>	1000172c: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
10001730:	83 c4 10             	add    esp,0x10
10001733:	ff 45 e8             	inc    DWORD PTR [ebp-0x18]
10001736:	eb df                	jmp    10001717 <drawBasicWindowX(int, int, int, int, char const*, bool)+0xf0>
10001738:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000173b:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000173e:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
10001741:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10001744:	01 d0                	add    eax,edx
10001746:	39 45 e4             	cmp    DWORD PTR [ebp-0x1c],eax
10001749:	0f 8d 89 00 00 00    	jge    100017d8 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x1b1>
1000174f:	a1 00 00 00 00       	mov    eax,ds:0x0	10001750: R_386_32	term
10001754:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10001757:	8d 4a 01             	lea    ecx,[edx+0x1]
1000175a:	8b 5d 10             	mov    ebx,DWORD PTR [ebp+0x10]
1000175d:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
10001760:	01 da                	add    edx,ebx
10001762:	83 ec 04             	sub    esp,0x4
10001765:	51                   	push   ecx
10001766:	52                   	push   edx
10001767:	50                   	push   eax
10001768:	e8 fc ff ff ff       	call   10001769 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x142>	10001769: R_386_PC32	VgaText::setCursor(int, int)
1000176d:	83 c4 10             	add    esp,0x10
10001770:	a1 00 00 00 00       	mov    eax,ds:0x0	10001771: R_386_32	term
10001775:	6a 03                	push   0x3
10001777:	6a 03                	push   0x3
10001779:	6a 20                	push   0x20
1000177b:	50                   	push   eax
1000177c:	e8 fc ff ff ff       	call   1000177d <drawBasicWindowX(int, int, int, int, char const*, bool)+0x156>	1000177d: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
10001781:	83 c4 10             	add    esp,0x10
10001784:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
10001787:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000178a:	01 d0                	add    eax,edx
1000178c:	48                   	dec    eax
1000178d:	39 45 e4             	cmp    DWORD PTR [ebp-0x1c],eax
10001790:	74 3e                	je     100017d0 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x1a9>
10001792:	a1 00 00 00 00       	mov    eax,ds:0x0	10001793: R_386_32	term
10001797:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
1000179a:	42                   	inc    edx
1000179b:	83 ec 04             	sub    esp,0x4
1000179e:	52                   	push   edx
1000179f:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100017a2:	50                   	push   eax
100017a3:	e8 fc ff ff ff       	call   100017a4 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x17d>	100017a4: R_386_PC32	VgaText::setCursor(int, int)
100017a8:	83 c4 10             	add    esp,0x10
100017ab:	a1 00 00 00 00       	mov    eax,ds:0x0	100017ac: R_386_32	term
100017b0:	80 7d d4 00          	cmp    BYTE PTR [ebp-0x2c],0x0
100017b4:	74 07                	je     100017bd <drawBasicWindowX(int, int, int, int, char const*, bool)+0x196>
100017b6:	ba 07 00 00 00       	mov    edx,0x7
100017bb:	eb 05                	jmp    100017c2 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x19b>
100017bd:	ba 0f 00 00 00       	mov    edx,0xf
100017c2:	52                   	push   edx
100017c3:	6a 00                	push   0x0
100017c5:	6a dd                	push   0xffffffdd
100017c7:	50                   	push   eax
100017c8:	e8 fc ff ff ff       	call   100017c9 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x1a2>	100017c9: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
100017cd:	83 c4 10             	add    esp,0x10
100017d0:	ff 45 e4             	inc    DWORD PTR [ebp-0x1c]
100017d3:	e9 66 ff ff ff       	jmp    1000173e <drawBasicWindowX(int, int, int, int, char const*, bool)+0x117>
100017d8:	8b 5d 10             	mov    ebx,DWORD PTR [ebp+0x10]
100017db:	83 ec 0c             	sub    esp,0xc
100017de:	ff 75 18             	push   DWORD PTR [ebp+0x18]
100017e1:	e8 fc ff ff ff       	call   100017e2 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x1bb>	100017e2: R_386_PC32	strlen
100017e6:	83 c4 10             	add    esp,0x10
100017e9:	29 c3                	sub    ebx,eax
100017eb:	89 d8                	mov    eax,ebx
100017ed:	d1 e8                	shr    eax,1
100017ef:	48                   	dec    eax
100017f0:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
100017f3:	a1 00 00 00 00       	mov    eax,ds:0x0	100017f4: R_386_32	term
100017f8:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
100017fb:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
100017fe:	01 ca                	add    edx,ecx
10001800:	83 ec 04             	sub    esp,0x4
10001803:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10001806:	52                   	push   edx
10001807:	50                   	push   eax
10001808:	e8 fc ff ff ff       	call   10001809 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x1e2>	10001809: R_386_PC32	VgaText::setCursor(int, int)
1000180d:	83 c4 10             	add    esp,0x10
10001810:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10001817:	83 ec 0c             	sub    esp,0xc
1000181a:	ff 75 18             	push   DWORD PTR [ebp+0x18]
1000181d:	e8 fc ff ff ff       	call   1000181e <drawBasicWindowX(int, int, int, int, char const*, bool)+0x1f7>	1000181e: R_386_PC32	strlen
10001822:	83 c4 10             	add    esp,0x10
10001825:	89 c2                	mov    edx,eax
10001827:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000182a:	39 c2                	cmp    edx,eax
1000182c:	76 25                	jbe    10001853 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x22c>
1000182e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000182f: R_386_32	term
10001833:	8b 4d e0             	mov    ecx,DWORD PTR [ebp-0x20]
10001836:	8b 55 18             	mov    edx,DWORD PTR [ebp+0x18]
10001839:	01 ca                	add    edx,ecx
1000183b:	8a 12                	mov    dl,BYTE PTR [edx]
1000183d:	0f be d2             	movsx  edx,dl
10001840:	6a 01                	push   0x1
10001842:	6a 0f                	push   0xf
10001844:	52                   	push   edx
10001845:	50                   	push   eax
10001846:	e8 fc ff ff ff       	call   10001847 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x220>	10001847: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
1000184b:	83 c4 10             	add    esp,0x10
1000184e:	ff 45 e0             	inc    DWORD PTR [ebp-0x20]
10001851:	eb c4                	jmp    10001817 <drawBasicWindowX(int, int, int, int, char const*, bool)+0x1f0>
10001853:	90                   	nop
10001854:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10001857:	c9                   	leave  
10001858:	c3                   	ret    

10001859 <drawBasicWindow(int, int, int, int, char const*)>:
10001859:	55                   	push   ebp
1000185a:	89 e5                	mov    ebp,esp
1000185c:	83 ec 08             	sub    esp,0x8
1000185f:	83 ec 08             	sub    esp,0x8
10001862:	6a 00                	push   0x0
10001864:	ff 75 18             	push   DWORD PTR [ebp+0x18]
10001867:	ff 75 14             	push   DWORD PTR [ebp+0x14]
1000186a:	ff 75 10             	push   DWORD PTR [ebp+0x10]
1000186d:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10001870:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001873:	e8 fc ff ff ff       	call   10001874 <drawBasicWindow(int, int, int, int, char const*)+0x1b>	10001874: R_386_PC32	drawBasicWindowX(int, int, int, int, char const*, bool)
10001878:	83 c4 20             	add    esp,0x20
1000187b:	90                   	nop
1000187c:	c9                   	leave  
1000187d:	c3                   	ret    

1000187e <bootInstallKeybrd(KeyboardToken, bool*)>:
1000187e:	55                   	push   ebp
1000187f:	89 e5                	mov    ebp,esp
10001881:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10001884:	05 04 01 00 00       	add    eax,0x104
10001889:	8a 00                	mov    al,BYTE PTR [eax]
1000188b:	84 c0                	test   al,al
1000188d:	74 15                	je     100018a4 <bootInstallKeybrd(KeyboardToken, bool*)+0x26>
1000188f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001892:	66 83 f8 09          	cmp    ax,0x9
10001896:	75 0c                	jne    100018a4 <bootInstallKeybrd(KeyboardToken, bool*)+0x26>
10001898:	c6 05 00 00 00 00 7f 	mov    BYTE PTR ds:0x0,0x7f	1000189a: R_386_32	installKey
1000189f:	e9 94 00 00 00       	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
100018a4:	8a 45 0a             	mov    al,BYTE PTR [ebp+0xa]
100018a7:	84 c0                	test   al,al
100018a9:	0f 85 88 00 00 00    	jne    10001937 <bootInstallKeybrd(KeyboardToken, bool*)+0xb9>
100018af:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100018b2:	66 3d 0a 02          	cmp    ax,0x20a
100018b6:	75 09                	jne    100018c1 <bootInstallKeybrd(KeyboardToken, bool*)+0x43>
100018b8:	c6 05 00 00 00 00 1b 	mov    BYTE PTR ds:0x0,0x1b	100018ba: R_386_32	installKey
100018bf:	eb 77                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
100018c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100018c4:	66 3d 0d 02          	cmp    ax,0x20d
100018c8:	75 09                	jne    100018d3 <bootInstallKeybrd(KeyboardToken, bool*)+0x55>
100018ca:	c6 05 00 00 00 00 03 	mov    BYTE PTR ds:0x0,0x3	100018cc: R_386_32	installKey
100018d1:	eb 65                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
100018d3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100018d6:	66 3d 0e 02          	cmp    ax,0x20e
100018da:	75 09                	jne    100018e5 <bootInstallKeybrd(KeyboardToken, bool*)+0x67>
100018dc:	c6 05 00 00 00 00 04 	mov    BYTE PTR ds:0x0,0x4	100018de: R_386_32	installKey
100018e3:	eb 53                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
100018e5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100018e8:	66 3d 0b 02          	cmp    ax,0x20b
100018ec:	75 09                	jne    100018f7 <bootInstallKeybrd(KeyboardToken, bool*)+0x79>
100018ee:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	100018f0: R_386_32	installKey
100018f5:	eb 41                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
100018f7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100018fa:	66 3d 0c 02          	cmp    ax,0x20c
100018fe:	75 09                	jne    10001909 <bootInstallKeybrd(KeyboardToken, bool*)+0x8b>
10001900:	c6 05 00 00 00 00 02 	mov    BYTE PTR ds:0x0,0x2	10001902: R_386_32	installKey
10001907:	eb 2f                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
10001909:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000190c:	66 3d 05 02          	cmp    ax,0x205
10001910:	75 09                	jne    1000191b <bootInstallKeybrd(KeyboardToken, bool*)+0x9d>
10001912:	c6 05 00 00 00 00 7d 	mov    BYTE PTR ds:0x0,0x7d	10001914: R_386_32	installKey
10001919:	eb 1d                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
1000191b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000191e:	66 3d 05 02          	cmp    ax,0x205
10001922:	75 09                	jne    1000192d <bootInstallKeybrd(KeyboardToken, bool*)+0xaf>
10001924:	c6 05 00 00 00 00 7e 	mov    BYTE PTR ds:0x0,0x7e	10001926: R_386_32	installKey
1000192b:	eb 0b                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
1000192d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001930:	a2 00 00 00 00       	mov    ds:0x0,al	10001931: R_386_32	installKey
10001935:	eb 01                	jmp    10001938 <bootInstallKeybrd(KeyboardToken, bool*)+0xba>
10001937:	90                   	nop
10001938:	5d                   	pop    ebp
10001939:	c3                   	ret    

1000193a <bootInstallTasks(int)>:
1000193a:	55                   	push   ebp
1000193b:	89 e5                	mov    ebp,esp
1000193d:	83 ec 08             	sub    esp,0x8
10001940:	a1 00 00 00 00       	mov    eax,ds:0x0	10001941: R_386_32	term
10001945:	83 ec 04             	sub    esp,0x4
10001948:	6a 08                	push   0x8
1000194a:	6a 18                	push   0x18
1000194c:	50                   	push   eax
1000194d:	e8 fc ff ff ff       	call   1000194e <bootInstallTasks(int)+0x14>	1000194e: R_386_PC32	VgaText::setCursor(int, int)
10001952:	83 c4 10             	add    esp,0x10
10001955:	a1 00 00 00 00       	mov    eax,ds:0x0	10001956: R_386_32	term
1000195a:	83 ec 08             	sub    esp,0x8
1000195d:	68 38 ba 00 10       	push   0x1000ba38	1000195e: R_386_32	.text
10001962:	50                   	push   eax
10001963:	e8 fc ff ff ff       	call   10001964 <bootInstallTasks(int)+0x2a>	10001964: R_386_PC32	VgaText::puts(char const*)
10001968:	83 c4 10             	add    esp,0x10
1000196b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000196c: R_386_32	term
10001970:	83 ec 04             	sub    esp,0x4
10001973:	6a 0a                	push   0xa
10001975:	6a 1a                	push   0x1a
10001977:	50                   	push   eax
10001978:	e8 fc ff ff ff       	call   10001979 <bootInstallTasks(int)+0x3f>	10001979: R_386_PC32	VgaText::setCursor(int, int)
1000197d:	83 c4 10             	add    esp,0x10
10001980:	a1 00 00 00 00       	mov    eax,ds:0x0	10001981: R_386_32	term
10001985:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
10001989:	75 07                	jne    10001992 <bootInstallTasks(int)+0x58>
1000198b:	ba 60 ba 00 10       	mov    edx,0x1000ba60	1000198c: R_386_32	.text
10001990:	eb 05                	jmp    10001997 <bootInstallTasks(int)+0x5d>
10001992:	ba 63 ba 00 10       	mov    edx,0x1000ba63	10001993: R_386_32	.text
10001997:	83 ec 08             	sub    esp,0x8
1000199a:	52                   	push   edx
1000199b:	50                   	push   eax
1000199c:	e8 fc ff ff ff       	call   1000199d <bootInstallTasks(int)+0x63>	1000199d: R_386_PC32	VgaText::puts(char const*)
100019a1:	83 c4 10             	add    esp,0x10
100019a4:	a1 00 00 00 00       	mov    eax,ds:0x0	100019a5: R_386_32	term
100019a9:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
100019ad:	78 07                	js     100019b6 <bootInstallTasks(int)+0x7c>
100019af:	ba 00 00 00 00       	mov    edx,0x0
100019b4:	eb 05                	jmp    100019bb <bootInstallTasks(int)+0x81>
100019b6:	ba 07 00 00 00       	mov    edx,0x7
100019bb:	6a 0f                	push   0xf
100019bd:	52                   	push   edx
100019be:	68 66 ba 00 10       	push   0x1000ba66	100019bf: R_386_32	.text
100019c3:	50                   	push   eax
100019c4:	e8 fc ff ff ff       	call   100019c5 <bootInstallTasks(int)+0x8b>	100019c5: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
100019c9:	83 c4 10             	add    esp,0x10
100019cc:	a1 00 00 00 00       	mov    eax,ds:0x0	100019cd: R_386_32	term
100019d1:	83 ec 04             	sub    esp,0x4
100019d4:	6a 0b                	push   0xb
100019d6:	6a 1a                	push   0x1a
100019d8:	50                   	push   eax
100019d9:	e8 fc ff ff ff       	call   100019da <bootInstallTasks(int)+0xa0>	100019da: R_386_PC32	VgaText::setCursor(int, int)
100019de:	83 c4 10             	add    esp,0x10
100019e1:	a1 00 00 00 00       	mov    eax,ds:0x0	100019e2: R_386_32	term
100019e6:	83 7d 08 01          	cmp    DWORD PTR [ebp+0x8],0x1
100019ea:	75 07                	jne    100019f3 <bootInstallTasks(int)+0xb9>
100019ec:	ba 60 ba 00 10       	mov    edx,0x1000ba60	100019ed: R_386_32	.text
100019f1:	eb 05                	jmp    100019f8 <bootInstallTasks(int)+0xbe>
100019f3:	ba 63 ba 00 10       	mov    edx,0x1000ba63	100019f4: R_386_32	.text
100019f8:	83 ec 08             	sub    esp,0x8
100019fb:	52                   	push   edx
100019fc:	50                   	push   eax
100019fd:	e8 fc ff ff ff       	call   100019fe <bootInstallTasks(int)+0xc4>	100019fe: R_386_PC32	VgaText::puts(char const*)
10001a02:	83 c4 10             	add    esp,0x10
10001a05:	a1 00 00 00 00       	mov    eax,ds:0x0	10001a06: R_386_32	term
10001a0a:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
10001a0e:	7e 07                	jle    10001a17 <bootInstallTasks(int)+0xdd>
10001a10:	ba 00 00 00 00       	mov    edx,0x0
10001a15:	eb 05                	jmp    10001a1c <bootInstallTasks(int)+0xe2>
10001a17:	ba 07 00 00 00       	mov    edx,0x7
10001a1c:	6a 0f                	push   0xf
10001a1e:	52                   	push   edx
10001a1f:	68 7e ba 00 10       	push   0x1000ba7e	10001a20: R_386_32	.text
10001a24:	50                   	push   eax
10001a25:	e8 fc ff ff ff       	call   10001a26 <bootInstallTasks(int)+0xec>	10001a26: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10001a2a:	83 c4 10             	add    esp,0x10
10001a2d:	a1 00 00 00 00       	mov    eax,ds:0x0	10001a2e: R_386_32	term
10001a32:	83 ec 04             	sub    esp,0x4
10001a35:	6a 0c                	push   0xc
10001a37:	6a 1a                	push   0x1a
10001a39:	50                   	push   eax
10001a3a:	e8 fc ff ff ff       	call   10001a3b <bootInstallTasks(int)+0x101>	10001a3b: R_386_PC32	VgaText::setCursor(int, int)
10001a3f:	83 c4 10             	add    esp,0x10
10001a42:	a1 00 00 00 00       	mov    eax,ds:0x0	10001a43: R_386_32	term
10001a47:	83 7d 08 02          	cmp    DWORD PTR [ebp+0x8],0x2
10001a4b:	75 07                	jne    10001a54 <bootInstallTasks(int)+0x11a>
10001a4d:	ba 60 ba 00 10       	mov    edx,0x1000ba60	10001a4e: R_386_32	.text
10001a52:	eb 05                	jmp    10001a59 <bootInstallTasks(int)+0x11f>
10001a54:	ba 63 ba 00 10       	mov    edx,0x1000ba63	10001a55: R_386_32	.text
10001a59:	83 ec 08             	sub    esp,0x8
10001a5c:	52                   	push   edx
10001a5d:	50                   	push   eax
10001a5e:	e8 fc ff ff ff       	call   10001a5f <bootInstallTasks(int)+0x125>	10001a5f: R_386_PC32	VgaText::puts(char const*)
10001a63:	83 c4 10             	add    esp,0x10
10001a66:	a1 00 00 00 00       	mov    eax,ds:0x0	10001a67: R_386_32	term
10001a6b:	83 7d 08 01          	cmp    DWORD PTR [ebp+0x8],0x1
10001a6f:	7e 07                	jle    10001a78 <bootInstallTasks(int)+0x13e>
10001a71:	ba 00 00 00 00       	mov    edx,0x0
10001a76:	eb 05                	jmp    10001a7d <bootInstallTasks(int)+0x143>
10001a78:	ba 07 00 00 00       	mov    edx,0x7
10001a7d:	6a 0f                	push   0xf
10001a7f:	52                   	push   edx
10001a80:	68 94 ba 00 10       	push   0x1000ba94	10001a81: R_386_32	.text
10001a85:	50                   	push   eax
10001a86:	e8 fc ff ff ff       	call   10001a87 <bootInstallTasks(int)+0x14d>	10001a87: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10001a8b:	83 c4 10             	add    esp,0x10
10001a8e:	a1 00 00 00 00       	mov    eax,ds:0x0	10001a8f: R_386_32	term
10001a93:	83 ec 04             	sub    esp,0x4
10001a96:	6a 0d                	push   0xd
10001a98:	6a 1a                	push   0x1a
10001a9a:	50                   	push   eax
10001a9b:	e8 fc ff ff ff       	call   10001a9c <bootInstallTasks(int)+0x162>	10001a9c: R_386_PC32	VgaText::setCursor(int, int)
10001aa0:	83 c4 10             	add    esp,0x10
10001aa3:	a1 00 00 00 00       	mov    eax,ds:0x0	10001aa4: R_386_32	term
10001aa8:	83 7d 08 03          	cmp    DWORD PTR [ebp+0x8],0x3
10001aac:	75 07                	jne    10001ab5 <bootInstallTasks(int)+0x17b>
10001aae:	ba 60 ba 00 10       	mov    edx,0x1000ba60	10001aaf: R_386_32	.text
10001ab3:	eb 05                	jmp    10001aba <bootInstallTasks(int)+0x180>
10001ab5:	ba 63 ba 00 10       	mov    edx,0x1000ba63	10001ab6: R_386_32	.text
10001aba:	83 ec 08             	sub    esp,0x8
10001abd:	52                   	push   edx
10001abe:	50                   	push   eax
10001abf:	e8 fc ff ff ff       	call   10001ac0 <bootInstallTasks(int)+0x186>	10001ac0: R_386_PC32	VgaText::puts(char const*)
10001ac4:	83 c4 10             	add    esp,0x10
10001ac7:	a1 00 00 00 00       	mov    eax,ds:0x0	10001ac8: R_386_32	term
10001acc:	83 7d 08 02          	cmp    DWORD PTR [ebp+0x8],0x2
10001ad0:	7e 07                	jle    10001ad9 <bootInstallTasks(int)+0x19f>
10001ad2:	ba 00 00 00 00       	mov    edx,0x0
10001ad7:	eb 05                	jmp    10001ade <bootInstallTasks(int)+0x1a4>
10001ad9:	ba 07 00 00 00       	mov    edx,0x7
10001ade:	6a 0f                	push   0xf
10001ae0:	52                   	push   edx
10001ae1:	68 aa ba 00 10       	push   0x1000baaa	10001ae2: R_386_32	.text
10001ae6:	50                   	push   eax
10001ae7:	e8 fc ff ff ff       	call   10001ae8 <bootInstallTasks(int)+0x1ae>	10001ae8: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10001aec:	83 c4 10             	add    esp,0x10
10001aef:	a1 00 00 00 00       	mov    eax,ds:0x0	10001af0: R_386_32	term
10001af4:	83 ec 04             	sub    esp,0x4
10001af7:	6a 0e                	push   0xe
10001af9:	6a 1a                	push   0x1a
10001afb:	50                   	push   eax
10001afc:	e8 fc ff ff ff       	call   10001afd <bootInstallTasks(int)+0x1c3>	10001afd: R_386_PC32	VgaText::setCursor(int, int)
10001b01:	83 c4 10             	add    esp,0x10
10001b04:	a1 00 00 00 00       	mov    eax,ds:0x0	10001b05: R_386_32	term
10001b09:	83 7d 08 04          	cmp    DWORD PTR [ebp+0x8],0x4
10001b0d:	75 07                	jne    10001b16 <bootInstallTasks(int)+0x1dc>
10001b0f:	ba 60 ba 00 10       	mov    edx,0x1000ba60	10001b10: R_386_32	.text
10001b14:	eb 05                	jmp    10001b1b <bootInstallTasks(int)+0x1e1>
10001b16:	ba 63 ba 00 10       	mov    edx,0x1000ba63	10001b17: R_386_32	.text
10001b1b:	83 ec 08             	sub    esp,0x8
10001b1e:	52                   	push   edx
10001b1f:	50                   	push   eax
10001b20:	e8 fc ff ff ff       	call   10001b21 <bootInstallTasks(int)+0x1e7>	10001b21: R_386_PC32	VgaText::puts(char const*)
10001b25:	83 c4 10             	add    esp,0x10
10001b28:	a1 00 00 00 00       	mov    eax,ds:0x0	10001b29: R_386_32	term
10001b2d:	83 7d 08 03          	cmp    DWORD PTR [ebp+0x8],0x3
10001b31:	7e 07                	jle    10001b3a <bootInstallTasks(int)+0x200>
10001b33:	ba 00 00 00 00       	mov    edx,0x0
10001b38:	eb 05                	jmp    10001b3f <bootInstallTasks(int)+0x205>
10001b3a:	ba 07 00 00 00       	mov    edx,0x7
10001b3f:	6a 0f                	push   0xf
10001b41:	52                   	push   edx
10001b42:	68 be ba 00 10       	push   0x1000babe	10001b43: R_386_32	.text
10001b47:	50                   	push   eax
10001b48:	e8 fc ff ff ff       	call   10001b49 <bootInstallTasks(int)+0x20f>	10001b49: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10001b4d:	83 c4 10             	add    esp,0x10
10001b50:	a1 00 00 00 00       	mov    eax,ds:0x0	10001b51: R_386_32	term
10001b55:	83 ec 04             	sub    esp,0x4
10001b58:	6a 0f                	push   0xf
10001b5a:	6a 1a                	push   0x1a
10001b5c:	50                   	push   eax
10001b5d:	e8 fc ff ff ff       	call   10001b5e <bootInstallTasks(int)+0x224>	10001b5e: R_386_PC32	VgaText::setCursor(int, int)
10001b62:	83 c4 10             	add    esp,0x10
10001b65:	a1 00 00 00 00       	mov    eax,ds:0x0	10001b66: R_386_32	term
10001b6a:	83 7d 08 05          	cmp    DWORD PTR [ebp+0x8],0x5
10001b6e:	75 07                	jne    10001b77 <bootInstallTasks(int)+0x23d>
10001b70:	ba 60 ba 00 10       	mov    edx,0x1000ba60	10001b71: R_386_32	.text
10001b75:	eb 05                	jmp    10001b7c <bootInstallTasks(int)+0x242>
10001b77:	ba 63 ba 00 10       	mov    edx,0x1000ba63	10001b78: R_386_32	.text
10001b7c:	83 ec 08             	sub    esp,0x8
10001b7f:	52                   	push   edx
10001b80:	50                   	push   eax
10001b81:	e8 fc ff ff ff       	call   10001b82 <bootInstallTasks(int)+0x248>	10001b82: R_386_PC32	VgaText::puts(char const*)
10001b86:	83 c4 10             	add    esp,0x10
10001b89:	a1 00 00 00 00       	mov    eax,ds:0x0	10001b8a: R_386_32	term
10001b8e:	83 7d 08 04          	cmp    DWORD PTR [ebp+0x8],0x4
10001b92:	7e 07                	jle    10001b9b <bootInstallTasks(int)+0x261>
10001b94:	ba 00 00 00 00       	mov    edx,0x0
10001b99:	eb 05                	jmp    10001ba0 <bootInstallTasks(int)+0x266>
10001b9b:	ba 07 00 00 00       	mov    edx,0x7
10001ba0:	6a 0f                	push   0xf
10001ba2:	52                   	push   edx
10001ba3:	68 d6 ba 00 10       	push   0x1000bad6	10001ba4: R_386_32	.text
10001ba8:	50                   	push   eax
10001ba9:	e8 fc ff ff ff       	call   10001baa <bootInstallTasks(int)+0x270>	10001baa: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10001bae:	83 c4 10             	add    esp,0x10
10001bb1:	90                   	nop
10001bb2:	c9                   	leave  
10001bb3:	c3                   	ret    

10001bb4 <ror(unsigned long long, int, int)>:
10001bb4:	55                   	push   ebp
10001bb5:	89 e5                	mov    ebp,esp
10001bb7:	56                   	push   esi
10001bb8:	53                   	push   ebx
10001bb9:	83 ec 20             	sub    esp,0x20
10001bbc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001bbf:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10001bc2:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10001bc5:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10001bc8:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10001bcb:	ba 01 00 00 00       	mov    edx,0x1
10001bd0:	88 c1                	mov    cl,al
10001bd2:	d3 e2                	shl    edx,cl
10001bd4:	89 d0                	mov    eax,edx
10001bd6:	48                   	dec    eax
10001bd7:	99                   	cdq    
10001bd8:	89 c1                	mov    ecx,eax
10001bda:	23 4d e0             	and    ecx,DWORD PTR [ebp-0x20]
10001bdd:	89 4d f0             	mov    DWORD PTR [ebp-0x10],ecx
10001be0:	89 d0                	mov    eax,edx
10001be2:	23 45 e4             	and    eax,DWORD PTR [ebp-0x1c]
10001be5:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10001be8:	8b 4d 10             	mov    ecx,DWORD PTR [ebp+0x10]
10001beb:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10001bee:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10001bf1:	0f ad d0             	shrd   eax,edx,cl
10001bf4:	d3 ea                	shr    edx,cl
10001bf6:	f6 c1 20             	test   cl,0x20
10001bf9:	74 04                	je     10001bff <ror(unsigned long long, int, int)+0x4b>
10001bfb:	89 d0                	mov    eax,edx
10001bfd:	31 d2                	xor    edx,edx
10001bff:	89 c3                	mov    ebx,eax
10001c01:	89 d6                	mov    esi,edx
10001c03:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10001c06:	2b 45 10             	sub    eax,DWORD PTR [ebp+0x10]
10001c09:	89 c1                	mov    ecx,eax
10001c0b:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001c0e:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001c11:	0f a5 c2             	shld   edx,eax,cl
10001c14:	d3 e0                	shl    eax,cl
10001c16:	f6 c1 20             	test   cl,0x20
10001c19:	74 04                	je     10001c1f <ror(unsigned long long, int, int)+0x6b>
10001c1b:	89 c2                	mov    edx,eax
10001c1d:	31 c0                	xor    eax,eax
10001c1f:	89 d1                	mov    ecx,edx
10001c21:	89 c2                	mov    edx,eax
10001c23:	89 d8                	mov    eax,ebx
10001c25:	09 d0                	or     eax,edx
10001c27:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10001c2a:	89 f0                	mov    eax,esi
10001c2c:	09 c8                	or     eax,ecx
10001c2e:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10001c31:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10001c34:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10001c37:	83 c4 20             	add    esp,0x20
10001c3a:	5b                   	pop    ebx
10001c3b:	5e                   	pop    esi
10001c3c:	5d                   	pop    ebp
10001c3d:	c3                   	ret    

10001c3e <swapBits(unsigned long long, unsigned long long, unsigned long long)>:
10001c3e:	55                   	push   ebp
10001c3f:	89 e5                	mov    ebp,esp
10001c41:	56                   	push   esi
10001c42:	53                   	push   ebx
10001c43:	83 ec 40             	sub    esp,0x40
10001c46:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001c49:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10001c4c:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10001c4f:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
10001c52:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10001c55:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
10001c58:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
10001c5b:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10001c5e:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
10001c61:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10001c64:	8b 45 1c             	mov    eax,DWORD PTR [ebp+0x1c]
10001c67:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10001c6a:	8b 4d e8             	mov    ecx,DWORD PTR [ebp-0x18]
10001c6d:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001c70:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001c73:	0f ad d0             	shrd   eax,edx,cl
10001c76:	d3 ea                	shr    edx,cl
10001c78:	f6 c1 20             	test   cl,0x20
10001c7b:	74 04                	je     10001c81 <swapBits(unsigned long long, unsigned long long, unsigned long long)+0x43>
10001c7d:	89 d0                	mov    eax,edx
10001c7f:	31 d2                	xor    edx,edx
10001c81:	89 c3                	mov    ebx,eax
10001c83:	89 d6                	mov    esi,edx
10001c85:	8b 4d e0             	mov    ecx,DWORD PTR [ebp-0x20]
10001c88:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001c8b:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001c8e:	0f ad d0             	shrd   eax,edx,cl
10001c91:	d3 ea                	shr    edx,cl
10001c93:	f6 c1 20             	test   cl,0x20
10001c96:	74 04                	je     10001c9c <swapBits(unsigned long long, unsigned long long, unsigned long long)+0x5e>
10001c98:	89 d0                	mov    eax,edx
10001c9a:	31 d2                	xor    edx,edx
10001c9c:	89 d1                	mov    ecx,edx
10001c9e:	89 c2                	mov    edx,eax
10001ca0:	89 d8                	mov    eax,ebx
10001ca2:	31 d0                	xor    eax,edx
10001ca4:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10001ca7:	89 f0                	mov    eax,esi
10001ca9:	31 c8                	xor    eax,ecx
10001cab:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
10001cae:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10001cb1:	8b 55 d4             	mov    edx,DWORD PTR [ebp-0x2c]
10001cb4:	89 c6                	mov    esi,eax
10001cb6:	83 e6 01             	and    esi,0x1
10001cb9:	89 75 c8             	mov    DWORD PTR [ebp-0x38],esi
10001cbc:	89 d0                	mov    eax,edx
10001cbe:	83 e0 00             	and    eax,0x0
10001cc1:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10001cc4:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10001cc7:	8b 55 cc             	mov    edx,DWORD PTR [ebp-0x34]
10001cca:	89 c3                	mov    ebx,eax
10001ccc:	80 f7 00             	xor    bh,0x0
10001ccf:	89 5d b8             	mov    DWORD PTR [ebp-0x48],ebx
10001cd2:	89 d0                	mov    eax,edx
10001cd4:	80 f4 00             	xor    ah,0x0
10001cd7:	89 45 bc             	mov    DWORD PTR [ebp-0x44],eax
10001cda:	8b 55 b8             	mov    edx,DWORD PTR [ebp-0x48]
10001cdd:	8b 4d bc             	mov    ecx,DWORD PTR [ebp-0x44]
10001ce0:	89 c8                	mov    eax,ecx
10001ce2:	09 d0                	or     eax,edx
10001ce4:	85 c0                	test   eax,eax
10001ce6:	74 62                	je     10001d4a <swapBits(unsigned long long, unsigned long long, unsigned long long)+0x10c>
10001ce8:	8b 4d e0             	mov    ecx,DWORD PTR [ebp-0x20]
10001ceb:	b8 01 00 00 00       	mov    eax,0x1
10001cf0:	ba 00 00 00 00       	mov    edx,0x0
10001cf5:	0f a5 c2             	shld   edx,eax,cl
10001cf8:	d3 e0                	shl    eax,cl
10001cfa:	f6 c1 20             	test   cl,0x20
10001cfd:	74 04                	je     10001d03 <swapBits(unsigned long long, unsigned long long, unsigned long long)+0xc5>
10001cff:	89 c2                	mov    edx,eax
10001d01:	31 c0                	xor    eax,eax
10001d03:	89 c3                	mov    ebx,eax
10001d05:	89 d6                	mov    esi,edx
10001d07:	89 d8                	mov    eax,ebx
10001d09:	33 45 f0             	xor    eax,DWORD PTR [ebp-0x10]
10001d0c:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
10001d0f:	89 f0                	mov    eax,esi
10001d11:	33 45 f4             	xor    eax,DWORD PTR [ebp-0xc]
10001d14:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10001d17:	8b 4d e8             	mov    ecx,DWORD PTR [ebp-0x18]
10001d1a:	b8 01 00 00 00       	mov    eax,0x1
10001d1f:	ba 00 00 00 00       	mov    edx,0x0
10001d24:	0f a5 c2             	shld   edx,eax,cl
10001d27:	d3 e0                	shl    eax,cl
10001d29:	f6 c1 20             	test   cl,0x20
10001d2c:	74 04                	je     10001d32 <swapBits(unsigned long long, unsigned long long, unsigned long long)+0xf4>
10001d2e:	89 c2                	mov    edx,eax
10001d30:	31 c0                	xor    eax,eax
10001d32:	89 c1                	mov    ecx,eax
10001d34:	89 d3                	mov    ebx,edx
10001d36:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
10001d39:	8b 55 c4             	mov    edx,DWORD PTR [ebp-0x3c]
10001d3c:	89 c6                	mov    esi,eax
10001d3e:	31 ce                	xor    esi,ecx
10001d40:	89 75 d8             	mov    DWORD PTR [ebp-0x28],esi
10001d43:	31 d3                	xor    ebx,edx
10001d45:	89 5d dc             	mov    DWORD PTR [ebp-0x24],ebx
10001d48:	eb 0c                	jmp    10001d56 <swapBits(unsigned long long, unsigned long long, unsigned long long)+0x118>
10001d4a:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001d4d:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001d50:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10001d53:	89 55 dc             	mov    DWORD PTR [ebp-0x24],edx
10001d56:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10001d59:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10001d5c:	83 c4 40             	add    esp,0x40
10001d5f:	5b                   	pop    ebx
10001d60:	5e                   	pop    esi
10001d61:	5d                   	pop    ebp
10001d62:	c3                   	ret    

10001d63 <getChecksum(unsigned int)>:
10001d63:	55                   	push   ebp
10001d64:	89 e5                	mov    ebp,esp
10001d66:	56                   	push   esi
10001d67:	53                   	push   ebx
10001d68:	83 ec 20             	sub    esp,0x20
10001d6b:	66 c7 45 f6 49 4e    	mov    WORD PTR [ebp-0xa],0x4e49
10001d71:	66 c7 45 f4 79 6e    	mov    WORD PTR [ebp-0xc],0x6e79
10001d77:	66 c7 45 f2 67 61    	mov    WORD PTR [ebp-0xe],0x6167
10001d7d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001d80:	c1 e8 10             	shr    eax,0x10
10001d83:	89 c1                	mov    ecx,eax
10001d85:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001d88:	89 c2                	mov    edx,eax
10001d8a:	89 d0                	mov    eax,edx
10001d8c:	c1 e0 06             	shl    eax,0x6
10001d8f:	29 d0                	sub    eax,edx
10001d91:	c1 e0 04             	shl    eax,0x4
10001d94:	01 d0                	add    eax,edx
10001d96:	31 c8                	xor    eax,ecx
10001d98:	66 89 45 f0          	mov    WORD PTR [ebp-0x10],ax
10001d9c:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
10001da0:	0f 84 b1 00 00 00    	je     10001e57 <getChecksum(unsigned int)+0xf4>
10001da6:	b8 f4 02 00 00       	mov    eax,0x2f4
10001dab:	ba 00 00 00 00       	mov    edx,0x0
10001db0:	f7 75 08             	div    DWORD PTR [ebp+0x8]
10001db3:	89 c3                	mov    ebx,eax
10001db5:	be 00 00 00 00       	mov    esi,0x0
10001dba:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001dbd:	ba 00 00 00 00       	mov    edx,0x0
10001dc2:	6a 1d                	push   0x1d
10001dc4:	6a 05                	push   0x5
10001dc6:	52                   	push   edx
10001dc7:	50                   	push   eax
10001dc8:	e8 fc ff ff ff       	call   10001dc9 <getChecksum(unsigned int)+0x66>	10001dc9: R_386_PC32	ror(unsigned long long, int, int)
10001dcd:	83 c4 10             	add    esp,0x10
10001dd0:	05 52 3f 04 00       	add    eax,0x43f52
10001dd5:	83 d2 00             	adc    edx,0x0
10001dd8:	89 d9                	mov    ecx,ebx
10001dda:	31 c1                	xor    ecx,eax
10001ddc:	89 4d e0             	mov    DWORD PTR [ebp-0x20],ecx
10001ddf:	31 d6                	xor    esi,edx
10001de1:	89 75 e4             	mov    DWORD PTR [ebp-0x1c],esi
10001de4:	8b 55 e0             	mov    edx,DWORD PTR [ebp-0x20]
10001de7:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
10001deb:	66 0f af c2          	imul   ax,dx
10001def:	66 89 45 f6          	mov    WORD PTR [ebp-0xa],ax
10001df3:	b8 ea 00 00 00       	mov    eax,0xea
10001df8:	ba 00 00 00 00       	mov    edx,0x0
10001dfd:	f7 75 08             	div    DWORD PTR [ebp+0x8]
10001e00:	89 c3                	mov    ebx,eax
10001e02:	be 00 00 00 00       	mov    esi,0x0
10001e07:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001e0a:	ba 00 00 00 00       	mov    edx,0x0
10001e0f:	6a 1f                	push   0x1f
10001e11:	6a 03                	push   0x3
10001e13:	52                   	push   edx
10001e14:	50                   	push   eax
10001e15:	e8 fc ff ff ff       	call   10001e16 <getChecksum(unsigned int)+0xb3>	10001e16: R_386_PC32	ror(unsigned long long, int, int)
10001e1a:	83 c4 10             	add    esp,0x10
10001e1d:	05 05 db 09 00       	add    eax,0x9db05
10001e22:	83 d2 00             	adc    edx,0x0
10001e25:	89 d9                	mov    ecx,ebx
10001e27:	31 c1                	xor    ecx,eax
10001e29:	89 4d d8             	mov    DWORD PTR [ebp-0x28],ecx
10001e2c:	31 d6                	xor    esi,edx
10001e2e:	89 75 dc             	mov    DWORD PTR [ebp-0x24],esi
10001e31:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10001e34:	66 29 45 f4          	sub    WORD PTR [ebp-0xc],ax
10001e38:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
10001e3c:	33 45 f4             	xor    eax,DWORD PTR [ebp-0xc]
10001e3f:	25 d2 04 00 00       	and    eax,0x4d2
10001e44:	66 01 45 f2          	add    WORD PTR [ebp-0xe],ax
10001e48:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10001e4b:	66 01 45 f2          	add    WORD PTR [ebp-0xe],ax
10001e4f:	d1 6d 08             	shr    DWORD PTR [ebp+0x8],1
10001e52:	e9 45 ff ff ff       	jmp    10001d9c <getChecksum(unsigned int)+0x39>
10001e57:	66 8b 45 f6          	mov    ax,WORD PTR [ebp-0xa]
10001e5b:	33 45 f4             	xor    eax,DWORD PTR [ebp-0xc]
10001e5e:	66 33 45 f2          	xor    ax,WORD PTR [ebp-0xe]
10001e62:	33 45 f0             	xor    eax,DWORD PTR [ebp-0x10]
10001e65:	0f b7 c0             	movzx  eax,ax
10001e68:	25 ff 7f 00 00       	and    eax,0x7fff
10001e6d:	8d 65 f8             	lea    esp,[ebp-0x8]
10001e70:	5b                   	pop    ebx
10001e71:	5e                   	pop    esi
10001e72:	5d                   	pop    ebp
10001e73:	c3                   	ret    

10001e74 <createKey(char*, unsigned int)>:
10001e74:	55                   	push   ebp
10001e75:	89 e5                	mov    ebp,esp
10001e77:	53                   	push   ebx
10001e78:	83 ec 34             	sub    esp,0x34
10001e7b:	68 e8 ba 00 10       	push   0x1000bae8	10001e7c: R_386_32	.text
10001e80:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10001e83:	e8 fc ff ff ff       	call   10001e84 <createKey(char*, unsigned int)+0x10>	10001e84: R_386_PC32	strcpy
10001e88:	83 c4 08             	add    esp,0x8
10001e8b:	8b 4d 0c             	mov    ecx,DWORD PTR [ebp+0xc]
10001e8e:	bb 00 00 00 00       	mov    ebx,0x0
10001e93:	89 c8                	mov    eax,ecx
10001e95:	89 da                	mov    edx,ebx
10001e97:	0f a4 c2 0f          	shld   edx,eax,0xf
10001e9b:	c1 e0 0f             	shl    eax,0xf
10001e9e:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10001ea1:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10001ea4:	83 ec 04             	sub    esp,0x4
10001ea7:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10001eaa:	e8 fc ff ff ff       	call   10001eab <createKey(char*, unsigned int)+0x37>	10001eab: R_386_PC32	getChecksum(unsigned int)
10001eaf:	83 c4 08             	add    esp,0x8
10001eb2:	ba 00 00 00 00       	mov    edx,0x0
10001eb7:	09 45 f0             	or     DWORD PTR [ebp-0x10],eax
10001eba:	09 55 f4             	or     DWORD PTR [ebp-0xc],edx
10001ebd:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [ebp-0x14],0x0
10001ec4:	81 7d ec db 24 00 00 	cmp    DWORD PTR [ebp-0x14],0x24db
10001ecb:	7f 7f                	jg     10001f4c <createKey(char*, unsigned int)+0xd8>
10001ecd:	81 75 f0 95 38 e4 b5 	xor    DWORD PTR [ebp-0x10],0xb5e43895
10001ed4:	83 75 f4 37          	xor    DWORD PTR [ebp-0xc],0x37
10001ed8:	6a 00                	push   0x0
10001eda:	6a 08                	push   0x8
10001edc:	6a 00                	push   0x0
10001ede:	6a 03                	push   0x3
10001ee0:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10001ee3:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10001ee6:	e8 fc ff ff ff       	call   10001ee7 <createKey(char*, unsigned int)+0x73>	10001ee7: R_386_PC32	swapBits(unsigned long long, unsigned long long, unsigned long long)
10001eeb:	83 c4 18             	add    esp,0x18
10001eee:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10001ef1:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10001ef4:	6a 00                	push   0x0
10001ef6:	6a 0c                	push   0xc
10001ef8:	6a 00                	push   0x0
10001efa:	6a 0d                	push   0xd
10001efc:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10001eff:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10001f02:	e8 fc ff ff ff       	call   10001f03 <createKey(char*, unsigned int)+0x8f>	10001f03: R_386_PC32	swapBits(unsigned long long, unsigned long long, unsigned long long)
10001f07:	83 c4 18             	add    esp,0x18
10001f0a:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10001f0d:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10001f10:	6a 00                	push   0x0
10001f12:	6a 16                	push   0x16
10001f14:	6a 00                	push   0x0
10001f16:	6a 25                	push   0x25
10001f18:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10001f1b:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10001f1e:	e8 fc ff ff ff       	call   10001f1f <createKey(char*, unsigned int)+0xab>	10001f1f: R_386_PC32	swapBits(unsigned long long, unsigned long long, unsigned long long)
10001f23:	83 c4 18             	add    esp,0x18
10001f26:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10001f29:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10001f2c:	6a 2a                	push   0x2a
10001f2e:	6a 13                	push   0x13
10001f30:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
10001f33:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
10001f36:	e8 fc ff ff ff       	call   10001f37 <createKey(char*, unsigned int)+0xc3>	10001f37: R_386_PC32	ror(unsigned long long, int, int)
10001f3b:	83 c4 10             	add    esp,0x10
10001f3e:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10001f41:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10001f44:	ff 45 ec             	inc    DWORD PTR [ebp-0x14]
10001f47:	e9 78 ff ff ff       	jmp    10001ec4 <createKey(char*, unsigned int)+0x50>
10001f4c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001f4f:	83 e0 0f             	and    eax,0xf
10001f52:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
10001f55:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001f58:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001f5b:	0f ac d0 04          	shrd   eax,edx,0x4
10001f5f:	c1 ea 04             	shr    edx,0x4
10001f62:	89 c1                	mov    ecx,eax
10001f64:	89 d3                	mov    ebx,edx
10001f66:	89 4d f0             	mov    DWORD PTR [ebp-0x10],ecx
10001f69:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
10001f6c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001f6f:	83 e0 0f             	and    eax,0xf
10001f72:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10001f75:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001f78:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001f7b:	0f ac d0 04          	shrd   eax,edx,0x4
10001f7f:	c1 ea 04             	shr    edx,0x4
10001f82:	89 c1                	mov    ecx,eax
10001f84:	89 d3                	mov    ebx,edx
10001f86:	89 4d f0             	mov    DWORD PTR [ebp-0x10],ecx
10001f89:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
10001f8c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001f8f:	83 e0 0f             	and    eax,0xf
10001f92:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10001f95:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001f98:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001f9b:	0f ac d0 04          	shrd   eax,edx,0x4
10001f9f:	c1 ea 04             	shr    edx,0x4
10001fa2:	89 c1                	mov    ecx,eax
10001fa4:	89 d3                	mov    ebx,edx
10001fa6:	89 4d f0             	mov    DWORD PTR [ebp-0x10],ecx
10001fa9:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
10001fac:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001faf:	25 ff 03 00 00       	and    eax,0x3ff
10001fb4:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10001fb7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001fba:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001fbd:	0f ac d0 0a          	shrd   eax,edx,0xa
10001fc1:	c1 ea 0a             	shr    edx,0xa
10001fc4:	89 c1                	mov    ecx,eax
10001fc6:	89 d3                	mov    ebx,edx
10001fc8:	89 4d f0             	mov    DWORD PTR [ebp-0x10],ecx
10001fcb:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
10001fce:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001fd1:	25 ff 03 00 00       	and    eax,0x3ff
10001fd6:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10001fd9:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001fdc:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10001fdf:	0f ac d0 0a          	shrd   eax,edx,0xa
10001fe3:	c1 ea 0a             	shr    edx,0xa
10001fe6:	89 c1                	mov    ecx,eax
10001fe8:	89 d3                	mov    ebx,edx
10001fea:	89 4d f0             	mov    DWORD PTR [ebp-0x10],ecx
10001fed:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
10001ff0:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001ff3:	25 ff 03 00 00       	and    eax,0x3ff
10001ff8:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
10001ffb:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10001ffe:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
10002001:	0f ac d0 0a          	shrd   eax,edx,0xa
10002005:	c1 ea 0a             	shr    edx,0xa
10002008:	89 c1                	mov    ecx,eax
1000200a:	89 d3                	mov    ebx,edx
1000200c:	89 4d f0             	mov    DWORD PTR [ebp-0x10],ecx
1000200f:	89 5d f4             	mov    DWORD PTR [ebp-0xc],ebx
10002012:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
10002015:	05 00 00 00 00       	add    eax,0x0	10002016: R_386_32	lookupA
1000201a:	8a 10                	mov    dl,BYTE PTR [eax]
1000201c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000201f:	88 10                	mov    BYTE PTR [eax],dl
10002021:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002024:	8d 50 01             	lea    edx,[eax+0x1]
10002027:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000202a:	05 00 00 00 00       	add    eax,0x0	1000202b: R_386_32	lookupA
1000202f:	8a 00                	mov    al,BYTE PTR [eax]
10002031:	88 02                	mov    BYTE PTR [edx],al
10002033:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002036:	8d 50 0f             	lea    edx,[eax+0xf]
10002039:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000203c:	05 00 00 00 00       	add    eax,0x0	1000203d: R_386_32	lookupA
10002041:	8a 00                	mov    al,BYTE PTR [eax]
10002043:	88 02                	mov    BYTE PTR [edx],al
10002045:	8b 4d dc             	mov    ecx,DWORD PTR [ebp-0x24]
10002048:	b8 1f 85 eb 51       	mov    eax,0x51eb851f
1000204d:	f7 e9                	imul   ecx
1000204f:	c1 fa 05             	sar    edx,0x5
10002052:	89 c8                	mov    eax,ecx
10002054:	c1 f8 1f             	sar    eax,0x1f
10002057:	29 c2                	sub    edx,eax
10002059:	89 d0                	mov    eax,edx
1000205b:	b9 0a 00 00 00       	mov    ecx,0xa
10002060:	99                   	cdq    
10002061:	f7 f9                	idiv   ecx
10002063:	89 d0                	mov    eax,edx
10002065:	8d 50 30             	lea    edx,[eax+0x30]
10002068:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000206b:	83 c0 03             	add    eax,0x3
1000206e:	88 10                	mov    BYTE PTR [eax],dl
10002070:	8b 4d dc             	mov    ecx,DWORD PTR [ebp-0x24]
10002073:	b8 67 66 66 66       	mov    eax,0x66666667
10002078:	f7 e9                	imul   ecx
1000207a:	c1 fa 02             	sar    edx,0x2
1000207d:	89 c8                	mov    eax,ecx
1000207f:	c1 f8 1f             	sar    eax,0x1f
10002082:	89 d1                	mov    ecx,edx
10002084:	29 c1                	sub    ecx,eax
10002086:	b8 67 66 66 66       	mov    eax,0x66666667
1000208b:	f7 e9                	imul   ecx
1000208d:	c1 fa 02             	sar    edx,0x2
10002090:	89 c8                	mov    eax,ecx
10002092:	c1 f8 1f             	sar    eax,0x1f
10002095:	29 c2                	sub    edx,eax
10002097:	89 d0                	mov    eax,edx
10002099:	c1 e0 02             	shl    eax,0x2
1000209c:	01 d0                	add    eax,edx
1000209e:	01 c0                	add    eax,eax
100020a0:	29 c1                	sub    ecx,eax
100020a2:	89 ca                	mov    edx,ecx
100020a4:	88 d0                	mov    al,dl
100020a6:	8d 50 30             	lea    edx,[eax+0x30]
100020a9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100020ac:	83 c0 04             	add    eax,0x4
100020af:	88 10                	mov    BYTE PTR [eax],dl
100020b1:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
100020b4:	b9 0a 00 00 00       	mov    ecx,0xa
100020b9:	99                   	cdq    
100020ba:	f7 f9                	idiv   ecx
100020bc:	89 d0                	mov    eax,edx
100020be:	8d 50 30             	lea    edx,[eax+0x30]
100020c1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100020c4:	83 c0 05             	add    eax,0x5
100020c7:	88 10                	mov    BYTE PTR [eax],dl
100020c9:	8b 4d d8             	mov    ecx,DWORD PTR [ebp-0x28]
100020cc:	b8 1f 85 eb 51       	mov    eax,0x51eb851f
100020d1:	f7 e9                	imul   ecx
100020d3:	c1 fa 05             	sar    edx,0x5
100020d6:	89 c8                	mov    eax,ecx
100020d8:	c1 f8 1f             	sar    eax,0x1f
100020db:	29 c2                	sub    edx,eax
100020dd:	89 d0                	mov    eax,edx
100020df:	b9 0a 00 00 00       	mov    ecx,0xa
100020e4:	99                   	cdq    
100020e5:	f7 f9                	idiv   ecx
100020e7:	89 d0                	mov    eax,edx
100020e9:	8d 50 30             	lea    edx,[eax+0x30]
100020ec:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100020ef:	83 c0 07             	add    eax,0x7
100020f2:	88 10                	mov    BYTE PTR [eax],dl
100020f4:	8b 4d d8             	mov    ecx,DWORD PTR [ebp-0x28]
100020f7:	b8 67 66 66 66       	mov    eax,0x66666667
100020fc:	f7 e9                	imul   ecx
100020fe:	c1 fa 02             	sar    edx,0x2
10002101:	89 c8                	mov    eax,ecx
10002103:	c1 f8 1f             	sar    eax,0x1f
10002106:	89 d1                	mov    ecx,edx
10002108:	29 c1                	sub    ecx,eax
1000210a:	b8 67 66 66 66       	mov    eax,0x66666667
1000210f:	f7 e9                	imul   ecx
10002111:	c1 fa 02             	sar    edx,0x2
10002114:	89 c8                	mov    eax,ecx
10002116:	c1 f8 1f             	sar    eax,0x1f
10002119:	29 c2                	sub    edx,eax
1000211b:	89 d0                	mov    eax,edx
1000211d:	c1 e0 02             	shl    eax,0x2
10002120:	01 d0                	add    eax,edx
10002122:	01 c0                	add    eax,eax
10002124:	29 c1                	sub    ecx,eax
10002126:	89 ca                	mov    edx,ecx
10002128:	88 d0                	mov    al,dl
1000212a:	8d 50 30             	lea    edx,[eax+0x30]
1000212d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002130:	83 c0 08             	add    eax,0x8
10002133:	88 10                	mov    BYTE PTR [eax],dl
10002135:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10002138:	b9 0a 00 00 00       	mov    ecx,0xa
1000213d:	99                   	cdq    
1000213e:	f7 f9                	idiv   ecx
10002140:	89 d0                	mov    eax,edx
10002142:	8d 50 30             	lea    edx,[eax+0x30]
10002145:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002148:	83 c0 09             	add    eax,0x9
1000214b:	88 10                	mov    BYTE PTR [eax],dl
1000214d:	8b 4d d4             	mov    ecx,DWORD PTR [ebp-0x2c]
10002150:	b8 1f 85 eb 51       	mov    eax,0x51eb851f
10002155:	f7 e9                	imul   ecx
10002157:	c1 fa 05             	sar    edx,0x5
1000215a:	89 c8                	mov    eax,ecx
1000215c:	c1 f8 1f             	sar    eax,0x1f
1000215f:	29 c2                	sub    edx,eax
10002161:	89 d0                	mov    eax,edx
10002163:	b9 0a 00 00 00       	mov    ecx,0xa
10002168:	99                   	cdq    
10002169:	f7 f9                	idiv   ecx
1000216b:	89 d0                	mov    eax,edx
1000216d:	8d 50 30             	lea    edx,[eax+0x30]
10002170:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002173:	83 c0 0b             	add    eax,0xb
10002176:	88 10                	mov    BYTE PTR [eax],dl
10002178:	8b 4d d4             	mov    ecx,DWORD PTR [ebp-0x2c]
1000217b:	b8 67 66 66 66       	mov    eax,0x66666667
10002180:	f7 e9                	imul   ecx
10002182:	c1 fa 02             	sar    edx,0x2
10002185:	89 c8                	mov    eax,ecx
10002187:	c1 f8 1f             	sar    eax,0x1f
1000218a:	89 d1                	mov    ecx,edx
1000218c:	29 c1                	sub    ecx,eax
1000218e:	b8 67 66 66 66       	mov    eax,0x66666667
10002193:	f7 e9                	imul   ecx
10002195:	c1 fa 02             	sar    edx,0x2
10002198:	89 c8                	mov    eax,ecx
1000219a:	c1 f8 1f             	sar    eax,0x1f
1000219d:	29 c2                	sub    edx,eax
1000219f:	89 d0                	mov    eax,edx
100021a1:	c1 e0 02             	shl    eax,0x2
100021a4:	01 d0                	add    eax,edx
100021a6:	01 c0                	add    eax,eax
100021a8:	29 c1                	sub    ecx,eax
100021aa:	89 ca                	mov    edx,ecx
100021ac:	88 d0                	mov    al,dl
100021ae:	8d 50 30             	lea    edx,[eax+0x30]
100021b1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100021b4:	83 c0 0c             	add    eax,0xc
100021b7:	88 10                	mov    BYTE PTR [eax],dl
100021b9:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
100021bc:	b9 0a 00 00 00       	mov    ecx,0xa
100021c1:	99                   	cdq    
100021c2:	f7 f9                	idiv   ecx
100021c4:	89 d0                	mov    eax,edx
100021c6:	8d 50 30             	lea    edx,[eax+0x30]
100021c9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100021cc:	83 c0 0d             	add    eax,0xd
100021cf:	88 10                	mov    BYTE PTR [eax],dl
100021d1:	90                   	nop
100021d2:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100021d5:	c9                   	leave  
100021d6:	c3                   	ret    

100021d7 <retrieveBits(char*)>:
100021d7:	55                   	push   ebp
100021d8:	89 e5                	mov    ebp,esp
100021da:	57                   	push   edi
100021db:	56                   	push   esi
100021dc:	53                   	push   ebx
100021dd:	83 ec 4c             	sub    esp,0x4c
100021e0:	c7 45 ec ff ff ff ff 	mov    DWORD PTR [ebp-0x14],0xffffffff
100021e7:	c7 45 e8 ff ff ff ff 	mov    DWORD PTR [ebp-0x18],0xffffffff
100021ee:	c7 45 e4 ff ff ff ff 	mov    DWORD PTR [ebp-0x1c],0xffffffff
100021f5:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
100021fc:	83 7d e0 0f          	cmp    DWORD PTR [ebp-0x20],0xf
10002200:	7f 54                	jg     10002256 <retrieveBits(char*)+0x7f>
10002202:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10002205:	05 00 00 00 00       	add    eax,0x0	10002206: R_386_32	lookupA
1000220a:	8a 10                	mov    dl,BYTE PTR [eax]
1000220c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000220f:	8a 00                	mov    al,BYTE PTR [eax]
10002211:	38 c2                	cmp    dl,al
10002213:	75 06                	jne    1000221b <retrieveBits(char*)+0x44>
10002215:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10002218:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000221b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000221e:	05 00 00 00 00       	add    eax,0x0	1000221f: R_386_32	lookupB
10002223:	8a 10                	mov    dl,BYTE PTR [eax]
10002225:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002228:	40                   	inc    eax
10002229:	8a 00                	mov    al,BYTE PTR [eax]
1000222b:	38 c2                	cmp    dl,al
1000222d:	75 06                	jne    10002235 <retrieveBits(char*)+0x5e>
1000222f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10002232:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
10002235:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10002238:	05 00 00 00 00       	add    eax,0x0	10002239: R_386_32	lookupC
1000223d:	8a 10                	mov    dl,BYTE PTR [eax]
1000223f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002242:	83 c0 0f             	add    eax,0xf
10002245:	8a 00                	mov    al,BYTE PTR [eax]
10002247:	38 c2                	cmp    dl,al
10002249:	75 06                	jne    10002251 <retrieveBits(char*)+0x7a>
1000224b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000224e:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10002251:	ff 45 e0             	inc    DWORD PTR [ebp-0x20]
10002254:	eb a6                	jmp    100021fc <retrieveBits(char*)+0x25>
10002256:	83 7d ec ff          	cmp    DWORD PTR [ebp-0x14],0xffffffff
1000225a:	74 0c                	je     10002268 <retrieveBits(char*)+0x91>
1000225c:	83 7d e8 ff          	cmp    DWORD PTR [ebp-0x18],0xffffffff
10002260:	74 06                	je     10002268 <retrieveBits(char*)+0x91>
10002262:	83 7d e4 ff          	cmp    DWORD PTR [ebp-0x1c],0xffffffff
10002266:	75 0f                	jne    10002277 <retrieveBits(char*)+0xa0>
10002268:	b8 00 00 00 00       	mov    eax,0x0
1000226d:	ba 00 00 00 00       	mov    edx,0x0
10002272:	e9 02 02 00 00       	jmp    10002479 <retrieveBits(char*)+0x2a2>
10002277:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000227a:	83 c0 03             	add    eax,0x3
1000227d:	8a 00                	mov    al,BYTE PTR [eax]
1000227f:	0f be c0             	movsx  eax,al
10002282:	8d 50 d0             	lea    edx,[eax-0x30]
10002285:	89 d0                	mov    eax,edx
10002287:	c1 e0 02             	shl    eax,0x2
1000228a:	01 d0                	add    eax,edx
1000228c:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10002293:	01 d0                	add    eax,edx
10002295:	c1 e0 02             	shl    eax,0x2
10002298:	89 c6                	mov    esi,eax
1000229a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000229d:	83 c0 04             	add    eax,0x4
100022a0:	8a 00                	mov    al,BYTE PTR [eax]
100022a2:	0f be c0             	movsx  eax,al
100022a5:	8d 50 d0             	lea    edx,[eax-0x30]
100022a8:	89 d0                	mov    eax,edx
100022aa:	c1 e0 02             	shl    eax,0x2
100022ad:	01 d0                	add    eax,edx
100022af:	01 c0                	add    eax,eax
100022b1:	8d 14 06             	lea    edx,[esi+eax*1]
100022b4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100022b7:	83 c0 05             	add    eax,0x5
100022ba:	8a 00                	mov    al,BYTE PTR [eax]
100022bc:	0f be c0             	movsx  eax,al
100022bf:	83 e8 30             	sub    eax,0x30
100022c2:	01 d0                	add    eax,edx
100022c4:	99                   	cdq    
100022c5:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100022c8:	89 55 cc             	mov    DWORD PTR [ebp-0x34],edx
100022cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100022ce:	83 c0 07             	add    eax,0x7
100022d1:	8a 00                	mov    al,BYTE PTR [eax]
100022d3:	0f be c0             	movsx  eax,al
100022d6:	8d 50 d0             	lea    edx,[eax-0x30]
100022d9:	89 d0                	mov    eax,edx
100022db:	c1 e0 02             	shl    eax,0x2
100022de:	01 d0                	add    eax,edx
100022e0:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
100022e7:	01 d0                	add    eax,edx
100022e9:	c1 e0 02             	shl    eax,0x2
100022ec:	89 c6                	mov    esi,eax
100022ee:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100022f1:	83 c0 08             	add    eax,0x8
100022f4:	8a 00                	mov    al,BYTE PTR [eax]
100022f6:	0f be c0             	movsx  eax,al
100022f9:	8d 50 d0             	lea    edx,[eax-0x30]
100022fc:	89 d0                	mov    eax,edx
100022fe:	c1 e0 02             	shl    eax,0x2
10002301:	01 d0                	add    eax,edx
10002303:	01 c0                	add    eax,eax
10002305:	8d 14 06             	lea    edx,[esi+eax*1]
10002308:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000230b:	83 c0 09             	add    eax,0x9
1000230e:	8a 00                	mov    al,BYTE PTR [eax]
10002310:	0f be c0             	movsx  eax,al
10002313:	83 e8 30             	sub    eax,0x30
10002316:	01 d0                	add    eax,edx
10002318:	99                   	cdq    
10002319:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
1000231c:	89 55 c4             	mov    DWORD PTR [ebp-0x3c],edx
1000231f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002322:	83 c0 0b             	add    eax,0xb
10002325:	8a 00                	mov    al,BYTE PTR [eax]
10002327:	0f be c0             	movsx  eax,al
1000232a:	8d 50 d0             	lea    edx,[eax-0x30]
1000232d:	89 d0                	mov    eax,edx
1000232f:	c1 e0 02             	shl    eax,0x2
10002332:	01 d0                	add    eax,edx
10002334:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
1000233b:	01 d0                	add    eax,edx
1000233d:	c1 e0 02             	shl    eax,0x2
10002340:	89 c6                	mov    esi,eax
10002342:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002345:	83 c0 0c             	add    eax,0xc
10002348:	8a 00                	mov    al,BYTE PTR [eax]
1000234a:	0f be c0             	movsx  eax,al
1000234d:	8d 50 d0             	lea    edx,[eax-0x30]
10002350:	89 d0                	mov    eax,edx
10002352:	c1 e0 02             	shl    eax,0x2
10002355:	01 d0                	add    eax,edx
10002357:	01 c0                	add    eax,eax
10002359:	8d 14 06             	lea    edx,[esi+eax*1]
1000235c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000235f:	83 c0 0d             	add    eax,0xd
10002362:	8a 00                	mov    al,BYTE PTR [eax]
10002364:	0f be c0             	movsx  eax,al
10002367:	83 e8 30             	sub    eax,0x30
1000236a:	01 d0                	add    eax,edx
1000236c:	99                   	cdq    
1000236d:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
10002370:	89 55 bc             	mov    DWORD PTR [ebp-0x44],edx
10002373:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
10002376:	8b 55 c4             	mov    edx,DWORD PTR [ebp-0x3c]
10002379:	0f a4 c2 0a          	shld   edx,eax,0xa
1000237d:	c1 e0 0a             	shl    eax,0xa
10002380:	89 c6                	mov    esi,eax
10002382:	89 d7                	mov    edi,edx
10002384:	89 f0                	mov    eax,esi
10002386:	0b 45 c8             	or     eax,DWORD PTR [ebp-0x38]
10002389:	89 c1                	mov    ecx,eax
1000238b:	89 f8                	mov    eax,edi
1000238d:	0b 45 cc             	or     eax,DWORD PTR [ebp-0x34]
10002390:	89 c3                	mov    ebx,eax
10002392:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
10002395:	8b 55 bc             	mov    edx,DWORD PTR [ebp-0x44]
10002398:	0f a4 c2 14          	shld   edx,eax,0x14
1000239c:	c1 e0 14             	shl    eax,0x14
1000239f:	89 ce                	mov    esi,ecx
100023a1:	89 45 a8             	mov    DWORD PTR [ebp-0x58],eax
100023a4:	89 55 ac             	mov    DWORD PTR [ebp-0x54],edx
100023a7:	0b 75 a8             	or     esi,DWORD PTR [ebp-0x58]
100023aa:	89 75 d8             	mov    DWORD PTR [ebp-0x28],esi
100023ad:	89 d8                	mov    eax,ebx
100023af:	0b 45 ac             	or     eax,DWORD PTR [ebp-0x54]
100023b2:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
100023b5:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
100023b8:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
100023bb:	0f a4 c2 0c          	shld   edx,eax,0xc
100023bf:	c1 e0 0c             	shl    eax,0xc
100023c2:	89 c3                	mov    ebx,eax
100023c4:	89 d6                	mov    esi,edx
100023c6:	89 5d d8             	mov    DWORD PTR [ebp-0x28],ebx
100023c9:	89 75 dc             	mov    DWORD PTR [ebp-0x24],esi
100023cc:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
100023cf:	c1 e0 04             	shl    eax,0x4
100023d2:	0b 45 ec             	or     eax,DWORD PTR [ebp-0x14]
100023d5:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
100023d8:	c1 e2 08             	shl    edx,0x8
100023db:	09 d0                	or     eax,edx
100023dd:	99                   	cdq    
100023de:	09 45 d8             	or     DWORD PTR [ebp-0x28],eax
100023e1:	09 55 dc             	or     DWORD PTR [ebp-0x24],edx
100023e4:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [ebp-0x2c],0x0
100023eb:	81 7d d4 db 24 00 00 	cmp    DWORD PTR [ebp-0x2c],0x24db
100023f2:	7f 7f                	jg     10002473 <retrieveBits(char*)+0x29c>
100023f4:	6a 2a                	push   0x2a
100023f6:	6a 13                	push   0x13
100023f8:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
100023fb:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
100023fe:	e8 fc ff ff ff       	call   100023ff <retrieveBits(char*)+0x228>	100023ff: R_386_PC32	ror(unsigned long long, int, int)
10002403:	83 c4 10             	add    esp,0x10
10002406:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10002409:	89 55 dc             	mov    DWORD PTR [ebp-0x24],edx
1000240c:	6a 00                	push   0x0
1000240e:	6a 08                	push   0x8
10002410:	6a 00                	push   0x0
10002412:	6a 03                	push   0x3
10002414:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
10002417:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
1000241a:	e8 fc ff ff ff       	call   1000241b <retrieveBits(char*)+0x244>	1000241b: R_386_PC32	swapBits(unsigned long long, unsigned long long, unsigned long long)
1000241f:	83 c4 18             	add    esp,0x18
10002422:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10002425:	89 55 dc             	mov    DWORD PTR [ebp-0x24],edx
10002428:	6a 00                	push   0x0
1000242a:	6a 0c                	push   0xc
1000242c:	6a 00                	push   0x0
1000242e:	6a 0d                	push   0xd
10002430:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
10002433:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10002436:	e8 fc ff ff ff       	call   10002437 <retrieveBits(char*)+0x260>	10002437: R_386_PC32	swapBits(unsigned long long, unsigned long long, unsigned long long)
1000243b:	83 c4 18             	add    esp,0x18
1000243e:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10002441:	89 55 dc             	mov    DWORD PTR [ebp-0x24],edx
10002444:	6a 00                	push   0x0
10002446:	6a 16                	push   0x16
10002448:	6a 00                	push   0x0
1000244a:	6a 25                	push   0x25
1000244c:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
1000244f:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10002452:	e8 fc ff ff ff       	call   10002453 <retrieveBits(char*)+0x27c>	10002453: R_386_PC32	swapBits(unsigned long long, unsigned long long, unsigned long long)
10002457:	83 c4 18             	add    esp,0x18
1000245a:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
1000245d:	89 55 dc             	mov    DWORD PTR [ebp-0x24],edx
10002460:	81 75 d8 95 38 e4 b5 	xor    DWORD PTR [ebp-0x28],0xb5e43895
10002467:	83 75 dc 37          	xor    DWORD PTR [ebp-0x24],0x37
1000246b:	ff 45 d4             	inc    DWORD PTR [ebp-0x2c]
1000246e:	e9 78 ff ff ff       	jmp    100023eb <retrieveBits(char*)+0x214>
10002473:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10002476:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10002479:	8d 65 f4             	lea    esp,[ebp-0xc]
1000247c:	5b                   	pop    ebx
1000247d:	5e                   	pop    esi
1000247e:	5f                   	pop    edi
1000247f:	5d                   	pop    ebp
10002480:	c3                   	ret    

10002481 <checkKey(char*)>:
10002481:	55                   	push   ebp
10002482:	89 e5                	mov    ebp,esp
10002484:	53                   	push   ebx
10002485:	83 ec 14             	sub    esp,0x14
10002488:	83 ec 04             	sub    esp,0x4
1000248b:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000248e:	e8 fc ff ff ff       	call   1000248f <checkKey(char*)+0xe>	1000248f: R_386_PC32	retrieveBits(char*)
10002493:	83 c4 08             	add    esp,0x8
10002496:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10002499:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
1000249c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000249f:	25 ff 7f 00 00       	and    eax,0x7fff
100024a4:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
100024a7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100024aa:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
100024ad:	0f ac d0 0f          	shrd   eax,edx,0xf
100024b1:	c1 ea 0f             	shr    edx,0xf
100024b4:	89 c1                	mov    ecx,eax
100024b6:	89 d3                	mov    ebx,edx
100024b8:	89 4d e8             	mov    DWORD PTR [ebp-0x18],ecx
100024bb:	83 ec 04             	sub    esp,0x4
100024be:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
100024c1:	e8 fc ff ff ff       	call   100024c2 <checkKey(char*)+0x41>	100024c2: R_386_PC32	getChecksum(unsigned int)
100024c6:	83 c4 08             	add    esp,0x8
100024c9:	39 45 ec             	cmp    DWORD PTR [ebp-0x14],eax
100024cc:	0f 95 c0             	setne  al
100024cf:	84 c0                	test   al,al
100024d1:	74 07                	je     100024da <checkKey(char*)+0x59>
100024d3:	b8 00 00 00 00       	mov    eax,0x0
100024d8:	eb 06                	jmp    100024e0 <checkKey(char*)+0x5f>
100024da:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100024dd:	83 e0 07             	and    eax,0x7
100024e0:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
100024e3:	c9                   	leave  
100024e4:	c3                   	ret    

100024e5 <changeKeyType(char*, int)>:
100024e5:	55                   	push   ebp
100024e6:	89 e5                	mov    ebp,esp
100024e8:	83 ec 10             	sub    esp,0x10
100024eb:	83 ec 04             	sub    esp,0x4
100024ee:	ff 75 08             	push   DWORD PTR [ebp+0x8]
100024f1:	e8 fc ff ff ff       	call   100024f2 <changeKeyType(char*, int)+0xd>	100024f2: R_386_PC32	retrieveBits(char*)
100024f6:	83 c4 08             	add    esp,0x8
100024f9:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
100024fc:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
100024ff:	83 65 f8 f8          	and    DWORD PTR [ebp-0x8],0xfffffff8
10002503:	83 65 fc ff          	and    DWORD PTR [ebp-0x4],0xffffffff
10002507:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000250a:	99                   	cdq    
1000250b:	09 45 f8             	or     DWORD PTR [ebp-0x8],eax
1000250e:	09 55 fc             	or     DWORD PTR [ebp-0x4],edx
10002511:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10002514:	50                   	push   eax
10002515:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002518:	e8 fc ff ff ff       	call   10002519 <changeKeyType(char*, int)+0x34>	10002519: R_386_PC32	createKey(char*, unsigned int)
1000251d:	83 c4 08             	add    esp,0x8
10002520:	83 ec 04             	sub    esp,0x4
10002523:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10002526:	e8 fc ff ff ff       	call   10002527 <changeKeyType(char*, int)+0x42>	10002527: R_386_PC32	checkKey(char*)
1000252b:	83 c4 08             	add    esp,0x8
1000252e:	85 c0                	test   eax,eax
10002530:	0f 95 c0             	setne  al
10002533:	c9                   	leave  
10002534:	c3                   	ret    

10002535 <checkExtendedKey(char*)>:
10002535:	55                   	push   ebp
10002536:	89 e5                	mov    ebp,esp
10002538:	83 ec 20             	sub    esp,0x20
1000253b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000253e:	8a 00                	mov    al,BYTE PTR [eax]
10002540:	88 45 ec             	mov    BYTE PTR [ebp-0x14],al
10002543:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002546:	8a 40 01             	mov    al,BYTE PTR [eax+0x1]
10002549:	88 45 ed             	mov    BYTE PTR [ebp-0x13],al
1000254c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000254f:	8a 40 02             	mov    al,BYTE PTR [eax+0x2]
10002552:	88 45 ee             	mov    BYTE PTR [ebp-0x12],al
10002555:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002558:	8a 40 03             	mov    al,BYTE PTR [eax+0x3]
1000255b:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
1000255e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002561:	8a 40 04             	mov    al,BYTE PTR [eax+0x4]
10002564:	88 45 f0             	mov    BYTE PTR [ebp-0x10],al
10002567:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000256a:	8a 40 05             	mov    al,BYTE PTR [eax+0x5]
1000256d:	88 45 f1             	mov    BYTE PTR [ebp-0xf],al
10002570:	c6 45 f2 2d          	mov    BYTE PTR [ebp-0xe],0x2d
10002574:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002577:	8a 40 06             	mov    al,BYTE PTR [eax+0x6]
1000257a:	88 45 f3             	mov    BYTE PTR [ebp-0xd],al
1000257d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002580:	8a 40 07             	mov    al,BYTE PTR [eax+0x7]
10002583:	88 45 f4             	mov    BYTE PTR [ebp-0xc],al
10002586:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002589:	8a 40 09             	mov    al,BYTE PTR [eax+0x9]
1000258c:	88 45 f5             	mov    BYTE PTR [ebp-0xb],al
1000258f:	c6 45 f6 2d          	mov    BYTE PTR [ebp-0xa],0x2d
10002593:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10002596:	8a 40 0a             	mov    al,BYTE PTR [eax+0xa]
10002599:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
1000259c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000259f:	8a 40 0b             	mov    al,BYTE PTR [eax+0xb]
100025a2:	88 45 f8             	mov    BYTE PTR [ebp-0x8],al
100025a5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100025a8:	8a 40 0c             	mov    al,BYTE PTR [eax+0xc]
100025ab:	88 45 f9             	mov    BYTE PTR [ebp-0x7],al
100025ae:	c6 45 fa 2d          	mov    BYTE PTR [ebp-0x6],0x2d
100025b2:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100025b5:	8a 40 0f             	mov    al,BYTE PTR [eax+0xf]
100025b8:	88 45 fb             	mov    BYTE PTR [ebp-0x5],al
100025bb:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100025be:	48                   	dec    eax
100025bf:	88 45 ef             	mov    BYTE PTR [ebp-0x11],al
100025c2:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
100025c5:	3c 2f                	cmp    al,0x2f
100025c7:	75 04                	jne    100025cd <checkExtendedKey(char*)+0x98>
100025c9:	c6 45 ef 39          	mov    BYTE PTR [ebp-0x11],0x39
100025cd:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
100025d0:	48                   	dec    eax
100025d1:	88 45 f5             	mov    BYTE PTR [ebp-0xb],al
100025d4:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
100025d7:	3c 2f                	cmp    al,0x2f
100025d9:	75 04                	jne    100025df <checkExtendedKey(char*)+0xaa>
100025db:	c6 45 f5 39          	mov    BYTE PTR [ebp-0xb],0x39
100025df:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100025e2:	83 c0 0d             	add    eax,0xd
100025e5:	8a 10                	mov    dl,BYTE PTR [eax]
100025e7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100025ea:	83 c0 0c             	add    eax,0xc
100025ed:	8a 00                	mov    al,BYTE PTR [eax]
100025ef:	38 c2                	cmp    dl,al
100025f1:	74 0a                	je     100025fd <checkExtendedKey(char*)+0xc8>
100025f3:	b8 00 00 00 00       	mov    eax,0x0
100025f8:	e9 d6 00 00 00       	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
100025fd:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
10002600:	3c 2f                	cmp    al,0x2f
10002602:	7e 07                	jle    1000260b <checkExtendedKey(char*)+0xd6>
10002604:	8a 45 ef             	mov    al,BYTE PTR [ebp-0x11]
10002607:	3c 39                	cmp    al,0x39
10002609:	7e 0a                	jle    10002615 <checkExtendedKey(char*)+0xe0>
1000260b:	b8 00 00 00 00       	mov    eax,0x0
10002610:	e9 be 00 00 00       	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
10002615:	8a 45 f0             	mov    al,BYTE PTR [ebp-0x10]
10002618:	3c 2f                	cmp    al,0x2f
1000261a:	7e 07                	jle    10002623 <checkExtendedKey(char*)+0xee>
1000261c:	8a 45 f0             	mov    al,BYTE PTR [ebp-0x10]
1000261f:	3c 39                	cmp    al,0x39
10002621:	7e 0a                	jle    1000262d <checkExtendedKey(char*)+0xf8>
10002623:	b8 00 00 00 00       	mov    eax,0x0
10002628:	e9 a6 00 00 00       	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
1000262d:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10002630:	3c 2f                	cmp    al,0x2f
10002632:	7e 07                	jle    1000263b <checkExtendedKey(char*)+0x106>
10002634:	8a 45 f1             	mov    al,BYTE PTR [ebp-0xf]
10002637:	3c 39                	cmp    al,0x39
10002639:	7e 0a                	jle    10002645 <checkExtendedKey(char*)+0x110>
1000263b:	b8 00 00 00 00       	mov    eax,0x0
10002640:	e9 8e 00 00 00       	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
10002645:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
10002648:	3c 2f                	cmp    al,0x2f
1000264a:	7e 07                	jle    10002653 <checkExtendedKey(char*)+0x11e>
1000264c:	8a 45 f3             	mov    al,BYTE PTR [ebp-0xd]
1000264f:	3c 39                	cmp    al,0x39
10002651:	7e 07                	jle    1000265a <checkExtendedKey(char*)+0x125>
10002653:	b8 00 00 00 00       	mov    eax,0x0
10002658:	eb 79                	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
1000265a:	8a 45 f4             	mov    al,BYTE PTR [ebp-0xc]
1000265d:	3c 2f                	cmp    al,0x2f
1000265f:	7e 07                	jle    10002668 <checkExtendedKey(char*)+0x133>
10002661:	8a 45 f4             	mov    al,BYTE PTR [ebp-0xc]
10002664:	3c 39                	cmp    al,0x39
10002666:	7e 07                	jle    1000266f <checkExtendedKey(char*)+0x13a>
10002668:	b8 00 00 00 00       	mov    eax,0x0
1000266d:	eb 64                	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
1000266f:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10002672:	3c 2f                	cmp    al,0x2f
10002674:	7e 07                	jle    1000267d <checkExtendedKey(char*)+0x148>
10002676:	8a 45 f5             	mov    al,BYTE PTR [ebp-0xb]
10002679:	3c 39                	cmp    al,0x39
1000267b:	7e 07                	jle    10002684 <checkExtendedKey(char*)+0x14f>
1000267d:	b8 00 00 00 00       	mov    eax,0x0
10002682:	eb 4f                	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
10002684:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
10002687:	3c 2f                	cmp    al,0x2f
10002689:	7e 07                	jle    10002692 <checkExtendedKey(char*)+0x15d>
1000268b:	8a 45 f7             	mov    al,BYTE PTR [ebp-0x9]
1000268e:	3c 39                	cmp    al,0x39
10002690:	7e 07                	jle    10002699 <checkExtendedKey(char*)+0x164>
10002692:	b8 00 00 00 00       	mov    eax,0x0
10002697:	eb 3a                	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
10002699:	8a 45 f8             	mov    al,BYTE PTR [ebp-0x8]
1000269c:	3c 2f                	cmp    al,0x2f
1000269e:	7e 07                	jle    100026a7 <checkExtendedKey(char*)+0x172>
100026a0:	8a 45 f8             	mov    al,BYTE PTR [ebp-0x8]
100026a3:	3c 39                	cmp    al,0x39
100026a5:	7e 07                	jle    100026ae <checkExtendedKey(char*)+0x179>
100026a7:	b8 00 00 00 00       	mov    eax,0x0
100026ac:	eb 25                	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
100026ae:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
100026b1:	3c 2f                	cmp    al,0x2f
100026b3:	7e 07                	jle    100026bc <checkExtendedKey(char*)+0x187>
100026b5:	8a 45 f9             	mov    al,BYTE PTR [ebp-0x7]
100026b8:	3c 39                	cmp    al,0x39
100026ba:	7e 07                	jle    100026c3 <checkExtendedKey(char*)+0x18e>
100026bc:	b8 00 00 00 00       	mov    eax,0x0
100026c1:	eb 10                	jmp    100026d3 <checkExtendedKey(char*)+0x19e>
100026c3:	83 ec 04             	sub    esp,0x4
100026c6:	8d 45 ec             	lea    eax,[ebp-0x14]
100026c9:	50                   	push   eax
100026ca:	e8 fc ff ff ff       	call   100026cb <checkExtendedKey(char*)+0x196>	100026cb: R_386_PC32	checkKey(char*)
100026cf:	83 c4 08             	add    esp,0x8
100026d2:	90                   	nop
100026d3:	c9                   	leave  
100026d4:	c3                   	ret    

100026d5 <loadTimezoneStrings()>:
100026d5:	55                   	push   ebp
100026d6:	89 e5                	mov    ebp,esp
100026d8:	53                   	push   ebx
100026d9:	83 ec 34             	sub    esp,0x34
100026dc:	83 ec 0c             	sub    esp,0xc
100026df:	68 14 01 00 00       	push   0x114
100026e4:	e8 fc ff ff ff       	call   100026e5 <loadTimezoneStrings()+0x10>	100026e5: R_386_PC32	operator new(unsigned long)
100026e9:	83 c4 10             	add    esp,0x10
100026ec:	89 c3                	mov    ebx,eax
100026ee:	a1 00 00 00 00       	mov    eax,ds:0x0	100026ef: R_386_32	kernelProcess
100026f3:	83 ec 04             	sub    esp,0x4
100026f6:	50                   	push   eax
100026f7:	68 fc ba 00 10       	push   0x1000bafc	100026f8: R_386_32	.text
100026fc:	53                   	push   ebx
100026fd:	e8 fc ff ff ff       	call   100026fe <loadTimezoneStrings()+0x29>	100026fe: R_386_PC32	File::File(char const*, Process*)
10002702:	83 c4 10             	add    esp,0x10
10002705:	89 5d e4             	mov    DWORD PTR [ebp-0x1c],ebx
10002708:	83 ec 08             	sub    esp,0x8
1000270b:	6a 01                	push   0x1
1000270d:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10002710:	e8 fc ff ff ff       	call   10002711 <loadTimezoneStrings()+0x3c>	10002711: R_386_PC32	File::open(FileOpenMode)
10002715:	83 c4 10             	add    esp,0x10
10002718:	83 ec 04             	sub    esp,0x4
1000271b:	8d 45 d7             	lea    eax,[ebp-0x29]
1000271e:	50                   	push   eax
1000271f:	8d 45 d8             	lea    eax,[ebp-0x28]
10002722:	50                   	push   eax
10002723:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10002726:	e8 fc ff ff ff       	call   10002727 <loadTimezoneStrings()+0x52>	10002727: R_386_PC32	File::stat(unsigned long long*, bool*)
1000272b:	83 c4 10             	add    esp,0x10
1000272e:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10002731:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10002734:	83 ec 0c             	sub    esp,0xc
10002737:	50                   	push   eax
10002738:	e8 fc ff ff ff       	call   10002739 <loadTimezoneStrings()+0x64>	10002739: R_386_PC32	malloc
1000273d:	83 c4 10             	add    esp,0x10
10002740:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10002743:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10002746:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10002749:	83 ec 04             	sub    esp,0x4
1000274c:	50                   	push   eax
1000274d:	6a 00                	push   0x0
1000274f:	ff 75 e0             	push   DWORD PTR [ebp-0x20]
10002752:	e8 fc ff ff ff       	call   10002753 <loadTimezoneStrings()+0x7e>	10002753: R_386_PC32	memset
10002757:	83 c4 10             	add    esp,0x10
1000275a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000275d:	8b 00                	mov    eax,DWORD PTR [eax]
1000275f:	83 c0 0c             	add    eax,0xc
10002762:	8b 08                	mov    ecx,DWORD PTR [eax]
10002764:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10002767:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
1000276a:	83 ec 0c             	sub    esp,0xc
1000276d:	8d 5d d0             	lea    ebx,[ebp-0x30]
10002770:	53                   	push   ebx
10002771:	ff 75 e0             	push   DWORD PTR [ebp-0x20]
10002774:	52                   	push   edx
10002775:	50                   	push   eax
10002776:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10002779:	ff d1                	call   ecx
1000277b:	83 c4 20             	add    esp,0x20
1000277e:	83 ec 0c             	sub    esp,0xc
10002781:	ff 75 e4             	push   DWORD PTR [ebp-0x1c]
10002784:	e8 fc ff ff ff       	call   10002785 <loadTimezoneStrings()+0xb0>	10002785: R_386_PC32	File::close()
10002789:	83 c4 10             	add    esp,0x10
1000278c:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
1000278f:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10002792:	83 ec 08             	sub    esp,0x8
10002795:	50                   	push   eax
10002796:	68 1b bb 00 10       	push   0x1000bb1b	10002797: R_386_32	.text
1000279b:	e8 fc ff ff ff       	call   1000279c <loadTimezoneStrings()+0xc7>	1000279c: R_386_PC32	Dbg::kprintf(char const*, ...)
100027a0:	83 c4 10             	add    esp,0x10
100027a3:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
100027aa:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
100027b1:	81 7d f0 c7 00 00 00 	cmp    DWORD PTR [ebp-0x10],0xc7
100027b8:	7f 39                	jg     100027f3 <loadTimezoneStrings()+0x11e>
100027ba:	83 ec 0c             	sub    esp,0xc
100027bd:	6a 78                	push   0x78
100027bf:	e8 fc ff ff ff       	call   100027c0 <loadTimezoneStrings()+0xeb>	100027c0: R_386_PC32	malloc
100027c4:	83 c4 10             	add    esp,0x10
100027c7:	89 c2                	mov    edx,eax
100027c9:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100027cc:	89 14 85 00 00 00 00 	mov    DWORD PTR [eax*4+0x0],edx	100027cf: R_386_32	timezoneStrings
100027d3:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100027d6:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	100027d9: R_386_32	timezoneStrings
100027dd:	83 ec 08             	sub    esp,0x8
100027e0:	68 25 bb 00 10       	push   0x1000bb25	100027e1: R_386_32	.text
100027e5:	50                   	push   eax
100027e6:	e8 fc ff ff ff       	call   100027e7 <loadTimezoneStrings()+0x112>	100027e7: R_386_PC32	strcpy
100027eb:	83 c4 10             	add    esp,0x10
100027ee:	ff 45 f0             	inc    DWORD PTR [ebp-0x10]
100027f1:	eb be                	jmp    100027b1 <loadTimezoneStrings()+0xdc>
100027f3:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [ebp-0x14],0x0
100027fa:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100027fd:	8d 50 01             	lea    edx,[eax+0x1]
10002800:	89 55 ec             	mov    DWORD PTR [ebp-0x14],edx
10002803:	89 c2                	mov    edx,eax
10002805:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10002808:	01 d0                	add    eax,edx
1000280a:	8a 00                	mov    al,BYTE PTR [eax]
1000280c:	88 45 ce             	mov    BYTE PTR [ebp-0x32],al
1000280f:	c6 45 cf 00          	mov    BYTE PTR [ebp-0x31],0x0
10002813:	8a 45 ce             	mov    al,BYTE PTR [ebp-0x32]
10002816:	3c 0d                	cmp    al,0xd
10002818:	0f 84 2e 01 00 00    	je     1000294c <loadTimezoneStrings()+0x277>
1000281e:	8a 45 ce             	mov    al,BYTE PTR [ebp-0x32]
10002821:	3c 09                	cmp    al,0x9
10002823:	75 3c                	jne    10002861 <loadTimezoneStrings()+0x18c>
10002825:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10002828:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	1000282b: R_386_32	timezoneStrings
1000282f:	83 ec 0c             	sub    esp,0xc
10002832:	50                   	push   eax
10002833:	e8 fc ff ff ff       	call   10002834 <loadTimezoneStrings()+0x15f>	10002834: R_386_PC32	strlen
10002838:	83 c4 10             	add    esp,0x10
1000283b:	83 f8 08             	cmp    eax,0x8
1000283e:	0f 87 0e 01 00 00    	ja     10002952 <loadTimezoneStrings()+0x27d>
10002844:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10002847:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	1000284a: R_386_32	timezoneStrings
1000284e:	83 ec 08             	sub    esp,0x8
10002851:	68 25 bb 00 10       	push   0x1000bb25	10002852: R_386_32	.text
10002856:	50                   	push   eax
10002857:	e8 fc ff ff ff       	call   10002858 <loadTimezoneStrings()+0x183>	10002858: R_386_PC32	strcat
1000285c:	83 c4 10             	add    esp,0x10
1000285f:	eb c4                	jmp    10002825 <loadTimezoneStrings()+0x150>
10002861:	8a 45 ce             	mov    al,BYTE PTR [ebp-0x32]
10002864:	3c 0a                	cmp    al,0xa
10002866:	75 6b                	jne    100028d3 <loadTimezoneStrings()+0x1fe>
10002868:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000286b:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	1000286e: R_386_32	timezoneStrings
10002872:	83 ec 0c             	sub    esp,0xc
10002875:	50                   	push   eax
10002876:	e8 fc ff ff ff       	call   10002877 <loadTimezoneStrings()+0x1a2>	10002877: R_386_PC32	strlen
1000287b:	83 c4 10             	add    esp,0x10
1000287e:	83 f8 35             	cmp    eax,0x35
10002881:	77 1d                	ja     100028a0 <loadTimezoneStrings()+0x1cb>
10002883:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10002886:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	10002889: R_386_32	timezoneStrings
1000288d:	83 ec 08             	sub    esp,0x8
10002890:	68 25 bb 00 10       	push   0x1000bb25	10002891: R_386_32	.text
10002895:	50                   	push   eax
10002896:	e8 fc ff ff ff       	call   10002897 <loadTimezoneStrings()+0x1c2>	10002897: R_386_PC32	strcat
1000289b:	83 c4 10             	add    esp,0x10
1000289e:	eb c8                	jmp    10002868 <loadTimezoneStrings()+0x193>
100028a0:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100028a3:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100028a6:	99                   	cdq    
100028a7:	8b 4d d8             	mov    ecx,DWORD PTR [ebp-0x28]
100028aa:	8b 5d dc             	mov    ebx,DWORD PTR [ebp-0x24]
100028ad:	39 c8                	cmp    eax,ecx
100028af:	89 d0                	mov    eax,edx
100028b1:	19 d8                	sbb    eax,ebx
100028b3:	0f 82 9f 00 00 00    	jb     10002958 <loadTimezoneStrings()+0x283>
100028b9:	83 ec 0c             	sub    esp,0xc
100028bc:	ff 75 e0             	push   DWORD PTR [ebp-0x20]
100028bf:	e8 fc ff ff ff       	call   100028c0 <loadTimezoneStrings()+0x1eb>	100028c0: R_386_PC32	free
100028c4:	83 c4 10             	add    esp,0x10
100028c7:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [ebp-0x18],0x0
100028ce:	e9 8b 00 00 00       	jmp    1000295e <loadTimezoneStrings()+0x289>
100028d3:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
100028d6:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	100028d9: R_386_32	timezoneStrings
100028dd:	83 ec 0c             	sub    esp,0xc
100028e0:	50                   	push   eax
100028e1:	e8 fc ff ff ff       	call   100028e2 <loadTimezoneStrings()+0x20d>	100028e2: R_386_PC32	strlen
100028e6:	83 c4 10             	add    esp,0x10
100028e9:	83 f8 31             	cmp    eax,0x31
100028ec:	77 1f                	ja     1000290d <loadTimezoneStrings()+0x238>
100028ee:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
100028f1:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	100028f4: R_386_32	timezoneStrings
100028f8:	83 ec 08             	sub    esp,0x8
100028fb:	8d 55 ce             	lea    edx,[ebp-0x32]
100028fe:	52                   	push   edx
100028ff:	50                   	push   eax
10002900:	e8 fc ff ff ff       	call   10002901 <loadTimezoneStrings()+0x22c>	10002901: R_386_PC32	strcat
10002905:	83 c4 10             	add    esp,0x10
10002908:	e9 ed fe ff ff       	jmp    100027fa <loadTimezoneStrings()+0x125>
1000290d:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10002910:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	10002913: R_386_32	timezoneStrings
10002917:	83 ec 0c             	sub    esp,0xc
1000291a:	50                   	push   eax
1000291b:	e8 fc ff ff ff       	call   1000291c <loadTimezoneStrings()+0x247>	1000291c: R_386_PC32	strlen
10002920:	83 c4 10             	add    esp,0x10
10002923:	83 f8 32             	cmp    eax,0x32
10002926:	0f 85 ce fe ff ff    	jne    100027fa <loadTimezoneStrings()+0x125>
1000292c:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000292f:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	10002932: R_386_32	timezoneStrings
10002936:	83 ec 08             	sub    esp,0x8
10002939:	68 27 bb 00 10       	push   0x1000bb27	1000293a: R_386_32	.text
1000293e:	50                   	push   eax
1000293f:	e8 fc ff ff ff       	call   10002940 <loadTimezoneStrings()+0x26b>	10002940: R_386_PC32	strcat
10002944:	83 c4 10             	add    esp,0x10
10002947:	e9 ae fe ff ff       	jmp    100027fa <loadTimezoneStrings()+0x125>
1000294c:	90                   	nop
1000294d:	e9 a8 fe ff ff       	jmp    100027fa <loadTimezoneStrings()+0x125>
10002952:	90                   	nop
10002953:	e9 a2 fe ff ff       	jmp    100027fa <loadTimezoneStrings()+0x125>
10002958:	90                   	nop
10002959:	e9 9c fe ff ff       	jmp    100027fa <loadTimezoneStrings()+0x125>
1000295e:	81 7d e8 c7 00 00 00 	cmp    DWORD PTR [ebp-0x18],0xc7
10002965:	7f 23                	jg     1000298a <loadTimezoneStrings()+0x2b5>
10002967:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000296a:	8b 04 85 00 00 00 00 	mov    eax,DWORD PTR [eax*4+0x0]	1000296d: R_386_32	timezoneStrings
10002971:	83 ec 04             	sub    esp,0x4
10002974:	50                   	push   eax
10002975:	ff 75 e8             	push   DWORD PTR [ebp-0x18]
10002978:	68 2c bb 00 10       	push   0x1000bb2c	10002979: R_386_32	.text
1000297d:	e8 fc ff ff ff       	call   1000297e <loadTimezoneStrings()+0x2a9>	1000297e: R_386_PC32	Dbg::kprintf(char const*, ...)
10002982:	83 c4 10             	add    esp,0x10
10002985:	ff 45 e8             	inc    DWORD PTR [ebp-0x18]
10002988:	eb d4                	jmp    1000295e <loadTimezoneStrings()+0x289>
1000298a:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000298d:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10002990:	c9                   	leave  
10002991:	c3                   	ret    

10002992 <firstRun(bool)>:
10002992:	55                   	push   ebp
10002993:	89 e5                	mov    ebp,esp
10002995:	57                   	push   edi
10002996:	56                   	push   esi
10002997:	53                   	push   ebx
10002998:	81 ec dc 00 00 00    	sub    esp,0xdc
1000299e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100029a1:	88 85 24 ff ff ff    	mov    BYTE PTR [ebp-0xdc],al
100029a7:	8a 85 24 ff ff ff    	mov    al,BYTE PTR [ebp-0xdc]
100029ad:	83 f0 01             	xor    eax,0x1
100029b0:	a2 00 00 00 00       	mov    ds:0x0,al	100029b1: R_386_32	showSidebar
100029b5:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100029b7: R_386_32	guiKeyboardHandler
	100029bb: R_386_32	bootInstallKeybrd(KeyboardToken, bool*)
100029bf:	83 ec 0c             	sub    esp,0xc
100029c2:	68 34 bb 00 10       	push   0x1000bb34	100029c3: R_386_32	.text
100029c7:	e8 fc ff ff ff       	call   100029c8 <firstRun(bool)+0x36>	100029c8: R_386_PC32	KeSetBootMessage(char const*)
100029cc:	83 c4 10             	add    esp,0x10
100029cf:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100029d1: R_386_32	VgaText::hiddenOut
100029d6:	a1 00 00 00 00       	mov    eax,ds:0x0	100029d7: R_386_32	activeTerminal
100029db:	83 ec 08             	sub    esp,0x8
100029de:	68 5d bb 00 10       	push   0x1000bb5d	100029df: R_386_32	.text
100029e3:	50                   	push   eax
100029e4:	e8 fc ff ff ff       	call   100029e5 <firstRun(bool)+0x53>	100029e5: R_386_PC32	VgaText::puts(char const*)
100029e9:	83 c4 10             	add    esp,0x10
100029ec:	a1 00 00 00 00       	mov    eax,ds:0x0	100029ed: R_386_32	kernelProcess
100029f1:	8b 80 06 05 00 00    	mov    eax,DWORD PTR [eax+0x506]
100029f7:	83 ec 08             	sub    esp,0x8
100029fa:	68 5d bb 00 10       	push   0x1000bb5d	100029fb: R_386_32	.text
100029ff:	50                   	push   eax
10002a00:	e8 fc ff ff ff       	call   10002a01 <firstRun(bool)+0x6f>	10002a01: R_386_PC32	VgaText::puts(char const*)
10002a05:	83 c4 10             	add    esp,0x10
10002a08:	83 ec 0c             	sub    esp,0xc
10002a0b:	68 84 01 00 00       	push   0x184
10002a10:	e8 fc ff ff ff       	call   10002a11 <firstRun(bool)+0x7f>	10002a11: R_386_PC32	operator new(unsigned long)
10002a15:	83 c4 10             	add    esp,0x10
10002a18:	89 c3                	mov    ebx,eax
10002a1a:	83 ec 08             	sub    esp,0x8
10002a1d:	68 64 bb 00 10       	push   0x1000bb64	10002a1e: R_386_32	.text
10002a22:	53                   	push   ebx
10002a23:	e8 fc ff ff ff       	call   10002a24 <firstRun(bool)+0x92>	10002a24: R_386_PC32	VgaText::VgaText(char const*)
10002a28:	83 c4 10             	add    esp,0x10
10002a2b:	89 1d 00 00 00 00    	mov    DWORD PTR ds:0x0,ebx	10002a2d: R_386_32	term
10002a31:	a1 00 00 00 00       	mov    eax,ds:0x0	10002a32: R_386_32	term
10002a36:	83 ec 0c             	sub    esp,0xc
10002a39:	50                   	push   eax
10002a3a:	e8 fc ff ff ff       	call   10002a3b <firstRun(bool)+0xa9>	10002a3b: R_386_PC32	setActiveTerminal(VgaText*)
10002a3f:	83 c4 10             	add    esp,0x10
10002a42:	e8 fc ff ff ff       	call   10002a43 <firstRun(bool)+0xb1>	10002a43: R_386_PC32	drawBootScreen()
10002a47:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10002a4e:	80 bd 24 ff ff ff 00 	cmp    BYTE PTR [ebp-0xdc],0x0
10002a55:	74 17                	je     10002a6e <firstRun(bool)+0xdc>
10002a57:	83 ec 08             	sub    esp,0x8
10002a5a:	68 69 bb 00 10       	push   0x1000bb69	10002a5b: R_386_32	.text
10002a5f:	68 00 00 00 00       	push   0x0	10002a60: R_386_32	pkeybuf
10002a64:	e8 fc ff ff ff       	call   10002a65 <firstRun(bool)+0xd3>	10002a65: R_386_PC32	strcpy
10002a69:	83 c4 10             	add    esp,0x10
10002a6c:	eb 15                	jmp    10002a83 <firstRun(bool)+0xf1>
10002a6e:	83 ec 08             	sub    esp,0x8
10002a71:	68 7a bb 00 10       	push   0x1000bb7a	10002a72: R_386_32	.text
10002a76:	68 00 00 00 00       	push   0x0	10002a77: R_386_32	pkeybuf
10002a7b:	e8 fc ff ff ff       	call   10002a7c <firstRun(bool)+0xea>	10002a7c: R_386_PC32	strcpy
10002a80:	83 c4 10             	add    esp,0x10
10002a83:	8a 85 24 ff ff ff    	mov    al,BYTE PTR [ebp-0xdc]
10002a89:	83 f0 01             	xor    eax,0x1
10002a8c:	84 c0                	test   al,al
10002a8e:	0f 84 35 19 00 00    	je     100043c9 <firstRun(bool)+0x1a37>
10002a94:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [ebp-0x24],0x0
10002a9b:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10002a9d: R_386_32	tzsel
10002aa5:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10002aa7: R_386_32	modesel
10002aaf:	eb 01                	jmp    10002ab2 <firstRun(bool)+0x120>
10002ab1:	90                   	nop
10002ab2:	e8 fc ff ff ff       	call   10002ab3 <firstRun(bool)+0x121>	10002ab3: R_386_PC32	drawBootScreen()
10002ab7:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10002abe:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10002ac0: R_386_32	installKey
10002ac5:	83 ec 0c             	sub    esp,0xc
10002ac8:	68 8b bb 00 10       	push   0x1000bb8b	10002ac9: R_386_32	.text
10002acd:	6a 14                	push   0x14
10002acf:	6a 32                	push   0x32
10002ad1:	6a 03                	push   0x3
10002ad3:	6a 16                	push   0x16
10002ad5:	e8 fc ff ff ff       	call   10002ad6 <firstRun(bool)+0x144>	10002ad6: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10002ada:	83 c4 20             	add    esp,0x20
10002add:	a1 00 00 00 00       	mov    eax,ds:0x0	10002ade: R_386_32	term
10002ae2:	83 ec 04             	sub    esp,0x4
10002ae5:	6a 06                	push   0x6
10002ae7:	6a 18                	push   0x18
10002ae9:	50                   	push   eax
10002aea:	e8 fc ff ff ff       	call   10002aeb <firstRun(bool)+0x159>	10002aeb: R_386_PC32	VgaText::setCursor(int, int)
10002aef:	83 c4 10             	add    esp,0x10
10002af2:	a1 00 00 00 00       	mov    eax,ds:0x0	10002af3: R_386_32	term
10002af7:	83 ec 08             	sub    esp,0x8
10002afa:	68 98 bb 00 10       	push   0x1000bb98	10002afb: R_386_32	.text
10002aff:	50                   	push   eax
10002b00:	e8 fc ff ff ff       	call   10002b01 <firstRun(bool)+0x16f>	10002b01: R_386_PC32	VgaText::puts(char const*)
10002b05:	83 c4 10             	add    esp,0x10
10002b08:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b09: R_386_32	term
10002b0d:	83 ec 04             	sub    esp,0x4
10002b10:	6a 07                	push   0x7
10002b12:	6a 18                	push   0x18
10002b14:	50                   	push   eax
10002b15:	e8 fc ff ff ff       	call   10002b16 <firstRun(bool)+0x184>	10002b16: R_386_PC32	VgaText::setCursor(int, int)
10002b1a:	83 c4 10             	add    esp,0x10
10002b1d:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b1e: R_386_32	term
10002b22:	83 ec 08             	sub    esp,0x8
10002b25:	68 c7 bb 00 10       	push   0x1000bbc7	10002b26: R_386_32	.text
10002b2a:	50                   	push   eax
10002b2b:	e8 fc ff ff ff       	call   10002b2c <firstRun(bool)+0x19a>	10002b2c: R_386_PC32	VgaText::puts(char const*)
10002b30:	83 c4 10             	add    esp,0x10
10002b33:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b34: R_386_32	term
10002b38:	83 ec 04             	sub    esp,0x4
10002b3b:	6a 09                	push   0x9
10002b3d:	6a 18                	push   0x18
10002b3f:	50                   	push   eax
10002b40:	e8 fc ff ff ff       	call   10002b41 <firstRun(bool)+0x1af>	10002b41: R_386_PC32	VgaText::setCursor(int, int)
10002b45:	83 c4 10             	add    esp,0x10
10002b48:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b49: R_386_32	term
10002b4d:	83 ec 08             	sub    esp,0x8
10002b50:	68 d7 bb 00 10       	push   0x1000bbd7	10002b51: R_386_32	.text
10002b55:	50                   	push   eax
10002b56:	e8 fc ff ff ff       	call   10002b57 <firstRun(bool)+0x1c5>	10002b57: R_386_PC32	VgaText::puts(char const*)
10002b5b:	83 c4 10             	add    esp,0x10
10002b5e:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b5f: R_386_32	term
10002b63:	83 ec 04             	sub    esp,0x4
10002b66:	6a 0b                	push   0xb
10002b68:	6a 18                	push   0x18
10002b6a:	50                   	push   eax
10002b6b:	e8 fc ff ff ff       	call   10002b6c <firstRun(bool)+0x1da>	10002b6c: R_386_PC32	VgaText::setCursor(int, int)
10002b70:	83 c4 10             	add    esp,0x10
10002b73:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b74: R_386_32	term
10002b78:	83 ec 08             	sub    esp,0x8
10002b7b:	68 dc bb 00 10       	push   0x1000bbdc	10002b7c: R_386_32	.text
10002b80:	50                   	push   eax
10002b81:	e8 fc ff ff ff       	call   10002b82 <firstRun(bool)+0x1f0>	10002b82: R_386_PC32	VgaText::puts(char const*)
10002b86:	83 c4 10             	add    esp,0x10
10002b89:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b8a: R_386_32	term
10002b8e:	83 ec 04             	sub    esp,0x4
10002b91:	6a 0d                	push   0xd
10002b93:	6a 18                	push   0x18
10002b95:	50                   	push   eax
10002b96:	e8 fc ff ff ff       	call   10002b97 <firstRun(bool)+0x205>	10002b97: R_386_PC32	VgaText::setCursor(int, int)
10002b9b:	83 c4 10             	add    esp,0x10
10002b9e:	a1 00 00 00 00       	mov    eax,ds:0x0	10002b9f: R_386_32	term
10002ba3:	83 ec 08             	sub    esp,0x8
10002ba6:	68 e4 bb 00 10       	push   0x1000bbe4	10002ba7: R_386_32	.text
10002bab:	50                   	push   eax
10002bac:	e8 fc ff ff ff       	call   10002bad <firstRun(bool)+0x21b>	10002bad: R_386_PC32	VgaText::puts(char const*)
10002bb1:	83 c4 10             	add    esp,0x10
10002bb4:	a1 00 00 00 00       	mov    eax,ds:0x0	10002bb5: R_386_32	term
10002bb9:	83 ec 04             	sub    esp,0x4
10002bbc:	6a 0f                	push   0xf
10002bbe:	6a 18                	push   0x18
10002bc0:	50                   	push   eax
10002bc1:	e8 fc ff ff ff       	call   10002bc2 <firstRun(bool)+0x230>	10002bc2: R_386_PC32	VgaText::setCursor(int, int)
10002bc6:	83 c4 10             	add    esp,0x10
10002bc9:	a1 00 00 00 00       	mov    eax,ds:0x0	10002bca: R_386_32	term
10002bce:	83 ec 08             	sub    esp,0x8
10002bd1:	68 ed bb 00 10       	push   0x1000bbed	10002bd2: R_386_32	.text
10002bd6:	50                   	push   eax
10002bd7:	e8 fc ff ff ff       	call   10002bd8 <firstRun(bool)+0x246>	10002bd8: R_386_PC32	VgaText::puts(char const*)
10002bdc:	83 c4 10             	add    esp,0x10
10002bdf:	a1 00 00 00 00       	mov    eax,ds:0x0	10002be0: R_386_32	term
10002be4:	83 ec 04             	sub    esp,0x4
10002be7:	6a 10                	push   0x10
10002be9:	6a 18                	push   0x18
10002beb:	50                   	push   eax
10002bec:	e8 fc ff ff ff       	call   10002bed <firstRun(bool)+0x25b>	10002bed: R_386_PC32	VgaText::setCursor(int, int)
10002bf1:	83 c4 10             	add    esp,0x10
10002bf4:	a1 00 00 00 00       	mov    eax,ds:0x0	10002bf5: R_386_32	term
10002bf9:	83 ec 08             	sub    esp,0x8
10002bfc:	68 f5 bb 00 10       	push   0x1000bbf5	10002bfd: R_386_32	.text
10002c01:	50                   	push   eax
10002c02:	e8 fc ff ff ff       	call   10002c03 <firstRun(bool)+0x271>	10002c03: R_386_PC32	VgaText::puts(char const*)
10002c07:	83 c4 10             	add    esp,0x10
10002c0a:	a1 00 00 00 00       	mov    eax,ds:0x0	10002c0b: R_386_32	term
10002c0f:	83 ec 04             	sub    esp,0x4
10002c12:	6a 09                	push   0x9
10002c14:	6a 21                	push   0x21
10002c16:	50                   	push   eax
10002c17:	e8 fc ff ff ff       	call   10002c18 <firstRun(bool)+0x286>	10002c18: R_386_PC32	VgaText::setCursor(int, int)
10002c1c:	83 c4 10             	add    esp,0x10
10002c1f:	a1 00 00 00 00       	mov    eax,ds:0x0	10002c20: R_386_32	term
10002c24:	6a 07                	push   0x7
10002c26:	6a 00                	push   0x0
10002c28:	68 fe bb 00 10       	push   0x1000bbfe	10002c29: R_386_32	.text
10002c2d:	50                   	push   eax
10002c2e:	e8 fc ff ff ff       	call   10002c2f <firstRun(bool)+0x29d>	10002c2f: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002c33:	83 c4 10             	add    esp,0x10
10002c36:	a1 00 00 00 00       	mov    eax,ds:0x0	10002c37: R_386_32	term
10002c3b:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
10002c3f:	75 07                	jne    10002c48 <firstRun(bool)+0x2b6>
10002c41:	ba 18 bc 00 10       	mov    edx,0x1000bc18	10002c42: R_386_32	.text
10002c46:	eb 05                	jmp    10002c4d <firstRun(bool)+0x2bb>
10002c48:	ba 1c bc 00 10       	mov    edx,0x1000bc1c	10002c49: R_386_32	.text
10002c4d:	6a 0f                	push   0xf
10002c4f:	6a 00                	push   0x0
10002c51:	52                   	push   edx
10002c52:	50                   	push   eax
10002c53:	e8 fc ff ff ff       	call   10002c54 <firstRun(bool)+0x2c2>	10002c54: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002c58:	83 c4 10             	add    esp,0x10
10002c5b:	a1 00 00 00 00       	mov    eax,ds:0x0	10002c5c: R_386_32	term
10002c60:	83 ec 08             	sub    esp,0x8
10002c63:	6a 21                	push   0x21
10002c65:	50                   	push   eax
10002c66:	e8 fc ff ff ff       	call   10002c67 <firstRun(bool)+0x2d5>	10002c67: R_386_PC32	VgaText::setCursorX(int)
10002c6b:	83 c4 10             	add    esp,0x10
10002c6e:	a1 00 00 00 00       	mov    eax,ds:0x0	10002c6f: R_386_32	term
10002c73:	6a 07                	push   0x7
10002c75:	6a 00                	push   0x0
10002c77:	68 00 00 00 00       	push   0x0	10002c78: R_386_32	currName
10002c7c:	50                   	push   eax
10002c7d:	e8 fc ff ff ff       	call   10002c7e <firstRun(bool)+0x2ec>	10002c7e: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002c82:	83 c4 10             	add    esp,0x10
10002c85:	a1 00 00 00 00       	mov    eax,ds:0x0	10002c86: R_386_32	term
10002c8a:	83 ec 04             	sub    esp,0x4
10002c8d:	6a 0b                	push   0xb
10002c8f:	6a 21                	push   0x21
10002c91:	50                   	push   eax
10002c92:	e8 fc ff ff ff       	call   10002c93 <firstRun(bool)+0x301>	10002c93: R_386_PC32	VgaText::setCursor(int, int)
10002c97:	83 c4 10             	add    esp,0x10
10002c9a:	a1 00 00 00 00       	mov    eax,ds:0x0	10002c9b: R_386_32	term
10002c9f:	6a 07                	push   0x7
10002ca1:	6a 00                	push   0x0
10002ca3:	68 fe bb 00 10       	push   0x1000bbfe	10002ca4: R_386_32	.text
10002ca8:	50                   	push   eax
10002ca9:	e8 fc ff ff ff       	call   10002caa <firstRun(bool)+0x318>	10002caa: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002cae:	83 c4 10             	add    esp,0x10
10002cb1:	a1 00 00 00 00       	mov    eax,ds:0x0	10002cb2: R_386_32	term
10002cb6:	83 7d e0 01          	cmp    DWORD PTR [ebp-0x20],0x1
10002cba:	75 07                	jne    10002cc3 <firstRun(bool)+0x331>
10002cbc:	ba 18 bc 00 10       	mov    edx,0x1000bc18	10002cbd: R_386_32	.text
10002cc1:	eb 05                	jmp    10002cc8 <firstRun(bool)+0x336>
10002cc3:	ba 1c bc 00 10       	mov    edx,0x1000bc1c	10002cc4: R_386_32	.text
10002cc8:	6a 0f                	push   0xf
10002cca:	6a 00                	push   0x0
10002ccc:	52                   	push   edx
10002ccd:	50                   	push   eax
10002cce:	e8 fc ff ff ff       	call   10002ccf <firstRun(bool)+0x33d>	10002ccf: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002cd3:	83 c4 10             	add    esp,0x10
10002cd6:	a1 00 00 00 00       	mov    eax,ds:0x0	10002cd7: R_386_32	term
10002cdb:	83 ec 08             	sub    esp,0x8
10002cde:	6a 21                	push   0x21
10002ce0:	50                   	push   eax
10002ce1:	e8 fc ff ff ff       	call   10002ce2 <firstRun(bool)+0x350>	10002ce2: R_386_PC32	VgaText::setCursorX(int)
10002ce6:	83 c4 10             	add    esp,0x10
10002ce9:	a1 00 00 00 00       	mov    eax,ds:0x0	10002cea: R_386_32	term
10002cee:	6a 07                	push   0x7
10002cf0:	6a 00                	push   0x0
10002cf2:	68 00 00 00 00       	push   0x0	10002cf3: R_386_32	currComp
10002cf7:	50                   	push   eax
10002cf8:	e8 fc ff ff ff       	call   10002cf9 <firstRun(bool)+0x367>	10002cf9: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002cfd:	83 c4 10             	add    esp,0x10
10002d00:	a1 00 00 00 00       	mov    eax,ds:0x0	10002d01: R_386_32	term
10002d05:	83 ec 04             	sub    esp,0x4
10002d08:	6a 0d                	push   0xd
10002d0a:	6a 21                	push   0x21
10002d0c:	50                   	push   eax
10002d0d:	e8 fc ff ff ff       	call   10002d0e <firstRun(bool)+0x37c>	10002d0e: R_386_PC32	VgaText::setCursor(int, int)
10002d12:	83 c4 10             	add    esp,0x10
10002d15:	a1 00 00 00 00       	mov    eax,ds:0x0	10002d16: R_386_32	term
10002d1a:	6a 07                	push   0x7
10002d1c:	6a 00                	push   0x0
10002d1e:	68 fe bb 00 10       	push   0x1000bbfe	10002d1f: R_386_32	.text
10002d23:	50                   	push   eax
10002d24:	e8 fc ff ff ff       	call   10002d25 <firstRun(bool)+0x393>	10002d25: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002d29:	83 c4 10             	add    esp,0x10
10002d2c:	a1 00 00 00 00       	mov    eax,ds:0x0	10002d2d: R_386_32	term
10002d31:	83 7d e0 02          	cmp    DWORD PTR [ebp-0x20],0x2
10002d35:	75 07                	jne    10002d3e <firstRun(bool)+0x3ac>
10002d37:	ba 18 bc 00 10       	mov    edx,0x1000bc18	10002d38: R_386_32	.text
10002d3c:	eb 05                	jmp    10002d43 <firstRun(bool)+0x3b1>
10002d3e:	ba 1c bc 00 10       	mov    edx,0x1000bc1c	10002d3f: R_386_32	.text
10002d43:	6a 0f                	push   0xf
10002d45:	6a 00                	push   0x0
10002d47:	52                   	push   edx
10002d48:	50                   	push   eax
10002d49:	e8 fc ff ff ff       	call   10002d4a <firstRun(bool)+0x3b8>	10002d4a: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002d4e:	83 c4 10             	add    esp,0x10
10002d51:	a1 00 00 00 00       	mov    eax,ds:0x0	10002d52: R_386_32	term
10002d56:	83 ec 08             	sub    esp,0x8
10002d59:	6a 21                	push   0x21
10002d5b:	50                   	push   eax
10002d5c:	e8 fc ff ff ff       	call   10002d5d <firstRun(bool)+0x3cb>	10002d5d: R_386_PC32	VgaText::setCursorX(int)
10002d61:	83 c4 10             	add    esp,0x10
10002d64:	a1 00 00 00 00       	mov    eax,ds:0x0	10002d65: R_386_32	term
10002d69:	6a 07                	push   0x7
10002d6b:	6a 00                	push   0x0
10002d6d:	68 00 00 00 00       	push   0x0	10002d6e: R_386_32	currComp
10002d72:	50                   	push   eax
10002d73:	e8 fc ff ff ff       	call   10002d74 <firstRun(bool)+0x3e2>	10002d74: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002d78:	83 c4 10             	add    esp,0x10
10002d7b:	a1 00 00 00 00       	mov    eax,ds:0x0	10002d7c: R_386_32	term
10002d80:	83 ec 04             	sub    esp,0x4
10002d83:	6a 0f                	push   0xf
10002d85:	6a 21                	push   0x21
10002d87:	50                   	push   eax
10002d88:	e8 fc ff ff ff       	call   10002d89 <firstRun(bool)+0x3f7>	10002d89: R_386_PC32	VgaText::setCursor(int, int)
10002d8d:	83 c4 10             	add    esp,0x10
10002d90:	a1 00 00 00 00       	mov    eax,ds:0x0	10002d91: R_386_32	term
10002d95:	6a 07                	push   0x7
10002d97:	6a 00                	push   0x0
10002d99:	68 fe bb 00 10       	push   0x1000bbfe	10002d9a: R_386_32	.text
10002d9e:	50                   	push   eax
10002d9f:	e8 fc ff ff ff       	call   10002da0 <firstRun(bool)+0x40e>	10002da0: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002da4:	83 c4 10             	add    esp,0x10
10002da7:	a1 00 00 00 00       	mov    eax,ds:0x0	10002da8: R_386_32	term
10002dac:	83 7d e0 03          	cmp    DWORD PTR [ebp-0x20],0x3
10002db0:	75 07                	jne    10002db9 <firstRun(bool)+0x427>
10002db2:	ba 18 bc 00 10       	mov    edx,0x1000bc18	10002db3: R_386_32	.text
10002db7:	eb 05                	jmp    10002dbe <firstRun(bool)+0x42c>
10002db9:	ba 1c bc 00 10       	mov    edx,0x1000bc1c	10002dba: R_386_32	.text
10002dbe:	6a 0f                	push   0xf
10002dc0:	6a 00                	push   0x0
10002dc2:	52                   	push   edx
10002dc3:	50                   	push   eax
10002dc4:	e8 fc ff ff ff       	call   10002dc5 <firstRun(bool)+0x433>	10002dc5: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002dc9:	83 c4 10             	add    esp,0x10
10002dcc:	a1 00 00 00 00       	mov    eax,ds:0x0	10002dcd: R_386_32	term
10002dd1:	83 ec 08             	sub    esp,0x8
10002dd4:	6a 21                	push   0x21
10002dd6:	50                   	push   eax
10002dd7:	e8 fc ff ff ff       	call   10002dd8 <firstRun(bool)+0x446>	10002dd8: R_386_PC32	VgaText::setCursorX(int)
10002ddc:	83 c4 10             	add    esp,0x10
10002ddf:	a1 00 00 00 00       	mov    eax,ds:0x0	10002de0: R_386_32	term
10002de4:	6a 07                	push   0x7
10002de6:	6a 00                	push   0x0
10002de8:	68 00 00 00 00       	push   0x0	10002de9: R_386_32	currComp
10002ded:	50                   	push   eax
10002dee:	e8 fc ff ff ff       	call   10002def <firstRun(bool)+0x45d>	10002def: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002df3:	83 c4 10             	add    esp,0x10
10002df6:	a1 00 00 00 00       	mov    eax,ds:0x0	10002df7: R_386_32	term
10002dfb:	83 ec 04             	sub    esp,0x4
10002dfe:	6a 12                	push   0x12
10002e00:	6a 18                	push   0x18
10002e02:	50                   	push   eax
10002e03:	e8 fc ff ff ff       	call   10002e04 <firstRun(bool)+0x472>	10002e04: R_386_PC32	VgaText::setCursor(int, int)
10002e08:	83 c4 10             	add    esp,0x10
10002e0b:	a1 00 00 00 00       	mov    eax,ds:0x0	10002e0c: R_386_32	term
10002e10:	83 7d e0 02          	cmp    DWORD PTR [ebp-0x20],0x2
10002e14:	75 07                	jne    10002e1d <firstRun(bool)+0x48b>
10002e16:	ba 20 bc 00 10       	mov    edx,0x1000bc20	10002e17: R_386_32	.text
10002e1b:	eb 05                	jmp    10002e22 <firstRun(bool)+0x490>
10002e1d:	ba 2c bc 00 10       	mov    edx,0x1000bc2c	10002e1e: R_386_32	.text
10002e22:	6a 0f                	push   0xf
10002e24:	6a 08                	push   0x8
10002e26:	52                   	push   edx
10002e27:	50                   	push   eax
10002e28:	e8 fc ff ff ff       	call   10002e29 <firstRun(bool)+0x497>	10002e29: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002e2d:	83 c4 10             	add    esp,0x10
10002e30:	a1 00 00 00 00       	mov    eax,ds:0x0	10002e31: R_386_32	term
10002e35:	83 ec 04             	sub    esp,0x4
10002e38:	6a 13                	push   0x13
10002e3a:	6a 18                	push   0x18
10002e3c:	50                   	push   eax
10002e3d:	e8 fc ff ff ff       	call   10002e3e <firstRun(bool)+0x4ac>	10002e3e: R_386_PC32	VgaText::setCursor(int, int)
10002e42:	83 c4 10             	add    esp,0x10
10002e45:	a1 00 00 00 00       	mov    eax,ds:0x0	10002e46: R_386_32	term
10002e4a:	83 7d e0 02          	cmp    DWORD PTR [ebp-0x20],0x2
10002e4e:	75 07                	jne    10002e57 <firstRun(bool)+0x4c5>
10002e50:	ba 38 bc 00 10       	mov    edx,0x1000bc38	10002e51: R_386_32	.text
10002e55:	eb 05                	jmp    10002e5c <firstRun(bool)+0x4ca>
10002e57:	ba 2c bc 00 10       	mov    edx,0x1000bc2c	10002e58: R_386_32	.text
10002e5c:	6a 0f                	push   0xf
10002e5e:	6a 08                	push   0x8
10002e60:	52                   	push   edx
10002e61:	50                   	push   eax
10002e62:	e8 fc ff ff ff       	call   10002e63 <firstRun(bool)+0x4d1>	10002e63: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002e67:	83 c4 10             	add    esp,0x10
10002e6a:	a1 00 00 00 00       	mov    eax,ds:0x0	10002e6b: R_386_32	term
10002e6f:	83 ec 04             	sub    esp,0x4
10002e72:	6a 12                	push   0x12
10002e74:	6a 32                	push   0x32
10002e76:	50                   	push   eax
10002e77:	e8 fc ff ff ff       	call   10002e78 <firstRun(bool)+0x4e6>	10002e78: R_386_PC32	VgaText::setCursor(int, int)
10002e7c:	83 c4 10             	add    esp,0x10
10002e7f:	83 7d e0 02          	cmp    DWORD PTR [ebp-0x20],0x2
10002e83:	74 19                	je     10002e9e <firstRun(bool)+0x50c>
10002e85:	a1 00 00 00 00       	mov    eax,ds:0x0	10002e86: R_386_32	term
10002e8a:	6a 08                	push   0x8
10002e8c:	6a 0f                	push   0xf
10002e8e:	68 42 bc 00 10       	push   0x1000bc42	10002e8f: R_386_32	.text
10002e93:	50                   	push   eax
10002e94:	e8 fc ff ff ff       	call   10002e95 <firstRun(bool)+0x503>	10002e95: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002e99:	83 c4 10             	add    esp,0x10
10002e9c:	eb 17                	jmp    10002eb5 <firstRun(bool)+0x523>
10002e9e:	a1 00 00 00 00       	mov    eax,ds:0x0	10002e9f: R_386_32	term
10002ea3:	6a 01                	push   0x1
10002ea5:	6a 0f                	push   0xf
10002ea7:	68 42 bc 00 10       	push   0x1000bc42	10002ea8: R_386_32	.text
10002eac:	50                   	push   eax
10002ead:	e8 fc ff ff ff       	call   10002eae <firstRun(bool)+0x51c>	10002eae: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002eb2:	83 c4 10             	add    esp,0x10
10002eb5:	a1 00 00 00 00       	mov    eax,ds:0x0	10002eb6: R_386_32	term
10002eba:	83 7d e0 02          	cmp    DWORD PTR [ebp-0x20],0x2
10002ebe:	75 07                	jne    10002ec7 <firstRun(bool)+0x535>
10002ec0:	ba 18 bc 00 10       	mov    edx,0x1000bc18	10002ec1: R_386_32	.text
10002ec5:	eb 05                	jmp    10002ecc <firstRun(bool)+0x53a>
10002ec7:	ba 1c bc 00 10       	mov    edx,0x1000bc1c	10002ec8: R_386_32	.text
10002ecc:	6a 0f                	push   0xf
10002ece:	6a 00                	push   0x0
10002ed0:	52                   	push   edx
10002ed1:	50                   	push   eax
10002ed2:	e8 fc ff ff ff       	call   10002ed3 <firstRun(bool)+0x541>	10002ed3: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10002ed7:	83 c4 10             	add    esp,0x10
10002eda:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
10002ede:	75 28                	jne    10002f08 <firstRun(bool)+0x576>
10002ee0:	8b 1d 00 00 00 00    	mov    ebx,DWORD PTR ds:0x0	10002ee2: R_386_32	term
10002ee6:	83 ec 0c             	sub    esp,0xc
10002ee9:	68 00 00 00 00       	push   0x0	10002eea: R_386_32	currName
10002eee:	e8 fc ff ff ff       	call   10002eef <firstRun(bool)+0x55d>	10002eef: R_386_PC32	strlen
10002ef3:	83 c4 10             	add    esp,0x10
10002ef6:	83 c0 21             	add    eax,0x21
10002ef9:	83 ec 04             	sub    esp,0x4
10002efc:	6a 09                	push   0x9
10002efe:	50                   	push   eax
10002eff:	53                   	push   ebx
10002f00:	e8 fc ff ff ff       	call   10002f01 <firstRun(bool)+0x56f>	10002f01: R_386_PC32	VgaText::setCursor(int, int)
10002f05:	83 c4 10             	add    esp,0x10
10002f08:	83 7d e0 01          	cmp    DWORD PTR [ebp-0x20],0x1
10002f0c:	75 28                	jne    10002f36 <firstRun(bool)+0x5a4>
10002f0e:	8b 1d 00 00 00 00    	mov    ebx,DWORD PTR ds:0x0	10002f10: R_386_32	term
10002f14:	83 ec 0c             	sub    esp,0xc
10002f17:	68 00 00 00 00       	push   0x0	10002f18: R_386_32	currComp
10002f1c:	e8 fc ff ff ff       	call   10002f1d <firstRun(bool)+0x58b>	10002f1d: R_386_PC32	strlen
10002f21:	83 c4 10             	add    esp,0x10
10002f24:	83 c0 21             	add    eax,0x21
10002f27:	83 ec 04             	sub    esp,0x4
10002f2a:	6a 0b                	push   0xb
10002f2c:	50                   	push   eax
10002f2d:	53                   	push   ebx
10002f2e:	e8 fc ff ff ff       	call   10002f2f <firstRun(bool)+0x59d>	10002f2f: R_386_PC32	VgaText::setCursor(int, int)
10002f33:	83 c4 10             	add    esp,0x10
10002f36:	83 7d e0 02          	cmp    DWORD PTR [ebp-0x20],0x2
10002f3a:	75 28                	jne    10002f64 <firstRun(bool)+0x5d2>
10002f3c:	8b 1d 00 00 00 00    	mov    ebx,DWORD PTR ds:0x0	10002f3e: R_386_32	term
10002f42:	83 ec 0c             	sub    esp,0xc
10002f45:	68 00 00 00 00       	push   0x0	10002f46: R_386_32	passwbufA
10002f4a:	e8 fc ff ff ff       	call   10002f4b <firstRun(bool)+0x5b9>	10002f4b: R_386_PC32	strlen
10002f4f:	83 c4 10             	add    esp,0x10
10002f52:	83 c0 21             	add    eax,0x21
10002f55:	83 ec 04             	sub    esp,0x4
10002f58:	6a 0d                	push   0xd
10002f5a:	50                   	push   eax
10002f5b:	53                   	push   ebx
10002f5c:	e8 fc ff ff ff       	call   10002f5d <firstRun(bool)+0x5cb>	10002f5d: R_386_PC32	VgaText::setCursor(int, int)
10002f61:	83 c4 10             	add    esp,0x10
10002f64:	83 7d e0 03          	cmp    DWORD PTR [ebp-0x20],0x3
10002f68:	75 28                	jne    10002f92 <firstRun(bool)+0x600>
10002f6a:	8b 1d 00 00 00 00    	mov    ebx,DWORD PTR ds:0x0	10002f6c: R_386_32	term
10002f70:	83 ec 0c             	sub    esp,0xc
10002f73:	68 00 00 00 00       	push   0x0	10002f74: R_386_32	passwbufB
10002f78:	e8 fc ff ff ff       	call   10002f79 <firstRun(bool)+0x5e7>	10002f79: R_386_PC32	strlen
10002f7d:	83 c4 10             	add    esp,0x10
10002f80:	83 c0 21             	add    eax,0x21
10002f83:	83 ec 04             	sub    esp,0x4
10002f86:	6a 0f                	push   0xf
10002f88:	50                   	push   eax
10002f89:	53                   	push   ebx
10002f8a:	e8 fc ff ff ff       	call   10002f8b <firstRun(bool)+0x5f9>	10002f8b: R_386_PC32	VgaText::setCursor(int, int)
10002f8f:	83 c4 10             	add    esp,0x10
10002f92:	83 7d e0 04          	cmp    DWORD PTR [ebp-0x20],0x4
10002f96:	75 15                	jne    10002fad <firstRun(bool)+0x61b>
10002f98:	a1 00 00 00 00       	mov    eax,ds:0x0	10002f99: R_386_32	term
10002f9d:	83 ec 04             	sub    esp,0x4
10002fa0:	6a 02                	push   0x2
10002fa2:	6a 00                	push   0x0
10002fa4:	50                   	push   eax
10002fa5:	e8 fc ff ff ff       	call   10002fa6 <firstRun(bool)+0x614>	10002fa6: R_386_PC32	VgaText::setCursor(int, int)
10002faa:	83 c4 10             	add    esp,0x10
10002fad:	a0 00 00 00 00       	mov    al,ds:0x0	10002fae: R_386_32	installKey
10002fb2:	84 c0                	test   al,al
10002fb4:	0f 94 c0             	sete   al
10002fb7:	84 c0                	test   al,al
10002fb9:	74 02                	je     10002fbd <firstRun(bool)+0x62b>
10002fbb:	eb f0                	jmp    10002fad <firstRun(bool)+0x61b>
10002fbd:	a1 00 00 00 00       	mov    eax,ds:0x0	10002fbe: R_386_32	term
10002fc2:	05 82 00 00 00       	add    eax,0x82
10002fc7:	83 ec 04             	sub    esp,0x4
10002fca:	6a 10                	push   0x10
10002fcc:	6a 00                	push   0x0
10002fce:	50                   	push   eax
10002fcf:	e8 fc ff ff ff       	call   10002fd0 <firstRun(bool)+0x63e>	10002fd0: R_386_PC32	memset
10002fd4:	83 c4 10             	add    esp,0x10
10002fd7:	a1 00 00 00 00       	mov    eax,ds:0x0	10002fd8: R_386_32	term
10002fdc:	05 02 01 00 00       	add    eax,0x102
10002fe1:	83 ec 04             	sub    esp,0x4
10002fe4:	6a 10                	push   0x10
10002fe6:	6a 00                	push   0x0
10002fe8:	50                   	push   eax
10002fe9:	e8 fc ff ff ff       	call   10002fea <firstRun(bool)+0x658>	10002fea: R_386_PC32	memset
10002fee:	83 c4 10             	add    esp,0x10
10002ff1:	a0 00 00 00 00       	mov    al,ds:0x0	10002ff2: R_386_32	installKey
10002ff6:	3c 09                	cmp    al,0x9
10002ff8:	74 09                	je     10003003 <firstRun(bool)+0x671>
10002ffa:	a0 00 00 00 00       	mov    al,ds:0x0	10002ffb: R_386_32	installKey
10002fff:	3c 0a                	cmp    al,0xa
10003001:	75 04                	jne    10003007 <firstRun(bool)+0x675>
10003003:	b0 01                	mov    al,0x1
10003005:	eb 02                	jmp    10003009 <firstRun(bool)+0x677>
10003007:	b0 00                	mov    al,0x0
10003009:	84 c0                	test   al,al
1000300b:	74 62                	je     1000306f <firstRun(bool)+0x6dd>
1000300d:	83 7d e0 02          	cmp    DWORD PTR [ebp-0x20],0x2
10003011:	75 0d                	jne    10003020 <firstRun(bool)+0x68e>
10003013:	a0 00 00 00 00       	mov    al,ds:0x0	10003014: R_386_32	installKey
10003018:	3c 0a                	cmp    al,0xa
1000301a:	75 04                	jne    10003020 <firstRun(bool)+0x68e>
1000301c:	b0 01                	mov    al,0x1
1000301e:	eb 02                	jmp    10003022 <firstRun(bool)+0x690>
10003020:	b0 00                	mov    al,0x0
10003022:	84 c0                	test   al,al
10003024:	74 24                	je     1000304a <firstRun(bool)+0x6b8>
10003026:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10003028: R_386_32	installKey
1000302d:	90                   	nop
1000302e:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10003030: R_386_32	installKey
10003035:	83 ec 0c             	sub    esp,0xc
10003038:	68 a0 0f 00 00       	push   0xfa0
1000303d:	e8 fc ff ff ff       	call   1000303e <firstRun(bool)+0x6ac>	1000303e: R_386_PC32	milliTenthSleep(unsigned int)
10003042:	83 c4 10             	add    esp,0x10
10003045:	e9 43 02 00 00       	jmp    1000328d <firstRun(bool)+0x8fb>
1000304a:	ff 45 e0             	inc    DWORD PTR [ebp-0x20]
1000304d:	83 7d e0 05          	cmp    DWORD PTR [ebp-0x20],0x5
10003051:	75 07                	jne    1000305a <firstRun(bool)+0x6c8>
10003053:	c7 45 e0 04 00 00 00 	mov    DWORD PTR [ebp-0x20],0x4
1000305a:	83 ec 0c             	sub    esp,0xc
1000305d:	68 2c 01 00 00       	push   0x12c
10003062:	e8 fc ff ff ff       	call   10003063 <firstRun(bool)+0x6d1>	10003063: R_386_PC32	milliTenthSleep(unsigned int)
10003067:	83 c4 10             	add    esp,0x10
1000306a:	e9 11 02 00 00       	jmp    10003280 <firstRun(bool)+0x8ee>
1000306f:	a0 00 00 00 00       	mov    al,ds:0x0	10003070: R_386_32	installKey
10003074:	3c 1f                	cmp    al,0x1f
10003076:	7e 0d                	jle    10003085 <firstRun(bool)+0x6f3>
10003078:	a0 00 00 00 00       	mov    al,ds:0x0	10003079: R_386_32	installKey
1000307d:	3c 7f                	cmp    al,0x7f
1000307f:	74 04                	je     10003085 <firstRun(bool)+0x6f3>
10003081:	b0 01                	mov    al,0x1
10003083:	eb 02                	jmp    10003087 <firstRun(bool)+0x6f5>
10003085:	b0 00                	mov    al,0x0
10003087:	84 c0                	test   al,al
10003089:	0f 84 e7 00 00 00    	je     10003176 <firstRun(bool)+0x7e4>
1000308f:	a0 00 00 00 00       	mov    al,ds:0x0	10003090: R_386_32	installKey
10003094:	88 85 3a ff ff ff    	mov    BYTE PTR [ebp-0xc6],al
1000309a:	c6 85 3b ff ff ff 00 	mov    BYTE PTR [ebp-0xc5],0x0
100030a1:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
100030a5:	75 2c                	jne    100030d3 <firstRun(bool)+0x741>
100030a7:	83 ec 0c             	sub    esp,0xc
100030aa:	68 00 00 00 00       	push   0x0	100030ab: R_386_32	currName
100030af:	e8 fc ff ff ff       	call   100030b0 <firstRun(bool)+0x71e>	100030b0: R_386_PC32	strlen
100030b4:	83 c4 10             	add    esp,0x10
100030b7:	83 f8 17             	cmp    eax,0x17
100030ba:	77 17                	ja     100030d3 <firstRun(bool)+0x741>
100030bc:	83 ec 08             	sub    esp,0x8
100030bf:	8d 85 3a ff ff ff    	lea    eax,[ebp-0xc6]
100030c5:	50                   	push   eax
100030c6:	68 00 00 00 00       	push   0x0	100030c7: R_386_32	currName
100030cb:	e8 fc ff ff ff       	call   100030cc <firstRun(bool)+0x73a>	100030cc: R_386_PC32	strcat
100030d0:	83 c4 10             	add    esp,0x10
100030d3:	83 7d e0 01          	cmp    DWORD PTR [ebp-0x20],0x1
100030d7:	75 2c                	jne    10003105 <firstRun(bool)+0x773>
100030d9:	83 ec 0c             	sub    esp,0xc
100030dc:	68 00 00 00 00       	push   0x0	100030dd: R_386_32	currComp
100030e1:	e8 fc ff ff ff       	call   100030e2 <firstRun(bool)+0x750>	100030e2: R_386_PC32	strlen
100030e6:	83 c4 10             	add    esp,0x10
100030e9:	83 f8 17             	cmp    eax,0x17
100030ec:	77 17                	ja     10003105 <firstRun(bool)+0x773>
100030ee:	83 ec 08             	sub    esp,0x8
100030f1:	8d 85 3a ff ff ff    	lea    eax,[ebp-0xc6]
100030f7:	50                   	push   eax
100030f8:	68 00 00 00 00       	push   0x0	100030f9: R_386_32	currComp
100030fd:	e8 fc ff ff ff       	call   100030fe <firstRun(bool)+0x76c>	100030fe: R_386_PC32	strcat
10003102:	83 c4 10             	add    esp,0x10
10003105:	83 7d e0 02          	cmp    DWORD PTR [ebp-0x20],0x2
10003109:	75 2c                	jne    10003137 <firstRun(bool)+0x7a5>
1000310b:	83 ec 0c             	sub    esp,0xc
1000310e:	68 00 00 00 00       	push   0x0	1000310f: R_386_32	passwbufA
10003113:	e8 fc ff ff ff       	call   10003114 <firstRun(bool)+0x782>	10003114: R_386_PC32	strlen
10003118:	83 c4 10             	add    esp,0x10
1000311b:	83 f8 17             	cmp    eax,0x17
1000311e:	77 17                	ja     10003137 <firstRun(bool)+0x7a5>
10003120:	83 ec 08             	sub    esp,0x8
10003123:	8d 85 3a ff ff ff    	lea    eax,[ebp-0xc6]
10003129:	50                   	push   eax
1000312a:	68 00 00 00 00       	push   0x0	1000312b: R_386_32	passwbufA
1000312f:	e8 fc ff ff ff       	call   10003130 <firstRun(bool)+0x79e>	10003130: R_386_PC32	strcat
10003134:	83 c4 10             	add    esp,0x10
10003137:	83 7d e0 03          	cmp    DWORD PTR [ebp-0x20],0x3
1000313b:	0f 85 3f 01 00 00    	jne    10003280 <firstRun(bool)+0x8ee>
10003141:	83 ec 0c             	sub    esp,0xc
10003144:	68 00 00 00 00       	push   0x0	10003145: R_386_32	passwbufB
10003149:	e8 fc ff ff ff       	call   1000314a <firstRun(bool)+0x7b8>	1000314a: R_386_PC32	strlen
1000314e:	83 c4 10             	add    esp,0x10
10003151:	83 f8 17             	cmp    eax,0x17
10003154:	0f 87 26 01 00 00    	ja     10003280 <firstRun(bool)+0x8ee>
1000315a:	83 ec 08             	sub    esp,0x8
1000315d:	8d 85 3a ff ff ff    	lea    eax,[ebp-0xc6]
10003163:	50                   	push   eax
10003164:	68 00 00 00 00       	push   0x0	10003165: R_386_32	passwbufB
10003169:	e8 fc ff ff ff       	call   1000316a <firstRun(bool)+0x7d8>	1000316a: R_386_PC32	strcat
1000316e:	83 c4 10             	add    esp,0x10
10003171:	e9 0a 01 00 00       	jmp    10003280 <firstRun(bool)+0x8ee>
10003176:	a0 00 00 00 00       	mov    al,ds:0x0	10003177: R_386_32	installKey
1000317b:	3c 08                	cmp    al,0x8
1000317d:	0f 94 c0             	sete   al
10003180:	84 c0                	test   al,al
10003182:	0f 84 ca 00 00 00    	je     10003252 <firstRun(bool)+0x8c0>
10003188:	83 7d e0 00          	cmp    DWORD PTR [ebp-0x20],0x0
1000318c:	75 2c                	jne    100031ba <firstRun(bool)+0x828>
1000318e:	83 ec 0c             	sub    esp,0xc
10003191:	68 00 00 00 00       	push   0x0	10003192: R_386_32	currName
10003196:	e8 fc ff ff ff       	call   10003197 <firstRun(bool)+0x805>	10003197: R_386_PC32	strlen
1000319b:	83 c4 10             	add    esp,0x10
1000319e:	85 c0                	test   eax,eax
100031a0:	74 18                	je     100031ba <firstRun(bool)+0x828>
100031a2:	83 ec 0c             	sub    esp,0xc
100031a5:	68 00 00 00 00       	push   0x0	100031a6: R_386_32	currName
100031aa:	e8 fc ff ff ff       	call   100031ab <firstRun(bool)+0x819>	100031ab: R_386_PC32	strlen
100031af:	83 c4 10             	add    esp,0x10
100031b2:	48                   	dec    eax
100031b3:	c6 80 00 00 00 00 00 	mov    BYTE PTR [eax+0x0],0x0	100031b5: R_386_32	currName
100031ba:	83 7d e0 01          	cmp    DWORD PTR [ebp-0x20],0x1
100031be:	75 2c                	jne    100031ec <firstRun(bool)+0x85a>
100031c0:	83 ec 0c             	sub    esp,0xc
100031c3:	68 00 00 00 00       	push   0x0	100031c4: R_386_32	currComp
100031c8:	e8 fc ff ff ff       	call   100031c9 <firstRun(bool)+0x837>	100031c9: R_386_PC32	strlen
100031cd:	83 c4 10             	add    esp,0x10
100031d0:	85 c0                	test   eax,eax
100031d2:	74 18                	je     100031ec <firstRun(bool)+0x85a>
100031d4:	83 ec 0c             	sub    esp,0xc
100031d7:	68 00 00 00 00       	push   0x0	100031d8: R_386_32	currComp
100031dc:	e8 fc ff ff ff       	call   100031dd <firstRun(bool)+0x84b>	100031dd: R_386_PC32	strlen
100031e1:	83 c4 10             	add    esp,0x10
100031e4:	48                   	dec    eax
100031e5:	c6 80 00 00 00 00 00 	mov    BYTE PTR [eax+0x0],0x0	100031e7: R_386_32	currComp
100031ec:	83 7d e0 02          	cmp    DWORD PTR [ebp-0x20],0x2
100031f0:	75 2c                	jne    1000321e <firstRun(bool)+0x88c>
100031f2:	83 ec 0c             	sub    esp,0xc
100031f5:	68 00 00 00 00       	push   0x0	100031f6: R_386_32	passwbufA
100031fa:	e8 fc ff ff ff       	call   100031fb <firstRun(bool)+0x869>	100031fb: R_386_PC32	strlen
100031ff:	83 c4 10             	add    esp,0x10
10003202:	85 c0                	test   eax,eax
10003204:	74 18                	je     1000321e <firstRun(bool)+0x88c>
10003206:	83 ec 0c             	sub    esp,0xc
10003209:	68 00 00 00 00       	push   0x0	1000320a: R_386_32	passwbufA
1000320e:	e8 fc ff ff ff       	call   1000320f <firstRun(bool)+0x87d>	1000320f: R_386_PC32	strlen
10003213:	83 c4 10             	add    esp,0x10
10003216:	48                   	dec    eax
10003217:	c6 80 00 00 00 00 00 	mov    BYTE PTR [eax+0x0],0x0	10003219: R_386_32	passwbufA
1000321e:	83 7d e0 03          	cmp    DWORD PTR [ebp-0x20],0x3
10003222:	75 5c                	jne    10003280 <firstRun(bool)+0x8ee>
10003224:	83 ec 0c             	sub    esp,0xc
10003227:	68 00 00 00 00       	push   0x0	10003228: R_386_32	passwbufB
1000322c:	e8 fc ff ff ff       	call   1000322d <firstRun(bool)+0x89b>	1000322d: R_386_PC32	strlen
10003231:	83 c4 10             	add    esp,0x10
10003234:	85 c0                	test   eax,eax
10003236:	74 48                	je     10003280 <firstRun(bool)+0x8ee>
10003238:	83 ec 0c             	sub    esp,0xc
1000323b:	68 00 00 00 00       	push   0x0	1000323c: R_386_32	passwbufB
10003240:	e8 fc ff ff ff       	call   10003241 <firstRun(bool)+0x8af>	10003241: R_386_PC32	strlen
10003245:	83 c4 10             	add    esp,0x10
10003248:	48                   	dec    eax
10003249:	c6 80 00 00 00 00 00 	mov    BYTE PTR [eax+0x0],0x0	1000324b: R_386_32	passwbufB
10003250:	eb 2e                	jmp    10003280 <firstRun(bool)+0x8ee>
10003252:	a0 00 00 00 00       	mov    al,ds:0x0	10003253: R_386_32	installKey
10003257:	3c 7f                	cmp    al,0x7f
10003259:	0f 94 c0             	sete   al
1000325c:	84 c0                	test   al,al
1000325e:	74 20                	je     10003280 <firstRun(bool)+0x8ee>
10003260:	ff 4d e0             	dec    DWORD PTR [ebp-0x20]
10003263:	83 7d e0 ff          	cmp    DWORD PTR [ebp-0x20],0xffffffff
10003267:	75 07                	jne    10003270 <firstRun(bool)+0x8de>
10003269:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10003270:	83 ec 0c             	sub    esp,0xc
10003273:	68 2c 01 00 00       	push   0x12c
10003278:	e8 fc ff ff ff       	call   10003279 <firstRun(bool)+0x8e7>	10003279: R_386_PC32	milliTenthSleep(unsigned int)
1000327d:	83 c4 10             	add    esp,0x10
10003280:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10003282: R_386_32	installKey
10003287:	e9 7e f9 ff ff       	jmp    10002c0a <firstRun(bool)+0x278>
1000328c:	90                   	nop
1000328d:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	1000328f: R_386_32	installKey
10003294:	e8 fc ff ff ff       	call   10003295 <firstRun(bool)+0x903>	10003295: R_386_PC32	drawBootScreen()
10003299:	83 ec 0c             	sub    esp,0xc
1000329c:	68 4b bc 00 10       	push   0x1000bc4b	1000329d: R_386_32	.text
100032a1:	6a 0d                	push   0xd
100032a3:	6a 32                	push   0x32
100032a5:	6a 02                	push   0x2
100032a7:	6a 16                	push   0x16
100032a9:	e8 fc ff ff ff       	call   100032aa <firstRun(bool)+0x918>	100032aa: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
100032ae:	83 c4 20             	add    esp,0x20
100032b1:	a1 00 00 00 00       	mov    eax,ds:0x0	100032b2: R_386_32	Krnl::computer
100032b6:	8b 88 5c 01 00 00    	mov    ecx,DWORD PTR [eax+0x15c]
100032bc:	a1 00 00 00 00       	mov    eax,ds:0x0	100032bd: R_386_32	Krnl::computer
100032c1:	8b 80 5c 01 00 00    	mov    eax,DWORD PTR [eax+0x15c]
100032c7:	8b 00                	mov    eax,DWORD PTR [eax]
100032c9:	83 c0 28             	add    eax,0x28
100032cc:	8b 00                	mov    eax,DWORD PTR [eax]
100032ce:	8d 95 18 ff ff ff    	lea    edx,[ebp-0xe8]
100032d4:	83 ec 08             	sub    esp,0x8
100032d7:	51                   	push   ecx
100032d8:	52                   	push   edx
100032d9:	ff d0                	call   eax
100032db:	83 c4 0c             	add    esp,0xc
100032de:	8b 85 18 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe8]
100032e4:	8b 95 1c ff ff ff    	mov    edx,DWORD PTR [ebp-0xe4]
100032ea:	89 85 48 ff ff ff    	mov    DWORD PTR [ebp-0xb8],eax
100032f0:	89 95 4c ff ff ff    	mov    DWORD PTR [ebp-0xb4],edx
100032f6:	83 ec 08             	sub    esp,0x8
100032f9:	68 59 bc 00 10       	push   0x1000bc59	100032fa: R_386_32	.text
100032fe:	8d 85 50 ff ff ff    	lea    eax,[ebp-0xb0]
10003304:	50                   	push   eax
10003305:	e8 fc ff ff ff       	call   10003306 <firstRun(bool)+0x974>	10003306: R_386_PC32	strcpy
1000330a:	83 c4 10             	add    esp,0x10
1000330d:	8a 85 48 ff ff ff    	mov    al,BYTE PTR [ebp-0xb8]
10003313:	0f b6 d0             	movzx  edx,al
10003316:	89 d0                	mov    eax,edx
10003318:	c1 e0 02             	shl    eax,0x2
1000331b:	01 d0                	add    eax,edx
1000331d:	c1 e0 03             	shl    eax,0x3
10003320:	01 d0                	add    eax,edx
10003322:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003329:	01 d0                	add    eax,edx
1000332b:	66 c1 e8 08          	shr    ax,0x8
1000332f:	c0 e8 03             	shr    al,0x3
10003332:	83 c0 30             	add    eax,0x30
10003335:	88 85 50 ff ff ff    	mov    BYTE PTR [ebp-0xb0],al
1000333b:	8a 8d 48 ff ff ff    	mov    cl,BYTE PTR [ebp-0xb8]
10003341:	0f b6 d1             	movzx  edx,cl
10003344:	89 d0                	mov    eax,edx
10003346:	c1 e0 02             	shl    eax,0x2
10003349:	01 d0                	add    eax,edx
1000334b:	c1 e0 03             	shl    eax,0x3
1000334e:	01 d0                	add    eax,edx
10003350:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003357:	01 d0                	add    eax,edx
10003359:	66 c1 e8 08          	shr    ax,0x8
1000335d:	88 c2                	mov    dl,al
1000335f:	c0 ea 03             	shr    dl,0x3
10003362:	88 d0                	mov    al,dl
10003364:	c1 e0 02             	shl    eax,0x2
10003367:	01 d0                	add    eax,edx
10003369:	d1 e0                	shl    eax,1
1000336b:	29 c1                	sub    ecx,eax
1000336d:	88 ca                	mov    dl,cl
1000336f:	8d 42 30             	lea    eax,[edx+0x30]
10003372:	88 85 51 ff ff ff    	mov    BYTE PTR [ebp-0xaf],al
10003378:	8a 85 49 ff ff ff    	mov    al,BYTE PTR [ebp-0xb7]
1000337e:	0f b6 c8             	movzx  ecx,al
10003381:	b8 67 66 66 66       	mov    eax,0x66666667
10003386:	f7 e9                	imul   ecx
10003388:	c1 fa 02             	sar    edx,0x2
1000338b:	89 c8                	mov    eax,ecx
1000338d:	c1 f8 1f             	sar    eax,0x1f
10003390:	29 c2                	sub    edx,eax
10003392:	89 d0                	mov    eax,edx
10003394:	83 c0 30             	add    eax,0x30
10003397:	88 85 53 ff ff ff    	mov    BYTE PTR [ebp-0xad],al
1000339d:	8a 85 49 ff ff ff    	mov    al,BYTE PTR [ebp-0xb7]
100033a3:	0f b6 c8             	movzx  ecx,al
100033a6:	b8 67 66 66 66       	mov    eax,0x66666667
100033ab:	f7 e9                	imul   ecx
100033ad:	c1 fa 02             	sar    edx,0x2
100033b0:	89 c8                	mov    eax,ecx
100033b2:	c1 f8 1f             	sar    eax,0x1f
100033b5:	29 c2                	sub    edx,eax
100033b7:	89 d0                	mov    eax,edx
100033b9:	c1 e0 02             	shl    eax,0x2
100033bc:	01 d0                	add    eax,edx
100033be:	01 c0                	add    eax,eax
100033c0:	29 c1                	sub    ecx,eax
100033c2:	89 ca                	mov    edx,ecx
100033c4:	88 d0                	mov    al,dl
100033c6:	83 c0 30             	add    eax,0x30
100033c9:	88 85 54 ff ff ff    	mov    BYTE PTR [ebp-0xac],al
100033cf:	66 8b 85 4a ff ff ff 	mov    ax,WORD PTR [ebp-0xb6]
100033d6:	0f b7 c8             	movzx  ecx,ax
100033d9:	b8 d3 4d 62 10       	mov    eax,0x10624dd3
100033de:	f7 e9                	imul   ecx
100033e0:	c1 fa 06             	sar    edx,0x6
100033e3:	89 c8                	mov    eax,ecx
100033e5:	c1 f8 1f             	sar    eax,0x1f
100033e8:	29 c2                	sub    edx,eax
100033ea:	89 d0                	mov    eax,edx
100033ec:	b9 0a 00 00 00       	mov    ecx,0xa
100033f1:	99                   	cdq    
100033f2:	f7 f9                	idiv   ecx
100033f4:	89 d0                	mov    eax,edx
100033f6:	83 c0 30             	add    eax,0x30
100033f9:	88 85 56 ff ff ff    	mov    BYTE PTR [ebp-0xaa],al
100033ff:	66 8b 85 4a ff ff ff 	mov    ax,WORD PTR [ebp-0xb6]
10003406:	0f b7 c8             	movzx  ecx,ax
10003409:	b8 1f 85 eb 51       	mov    eax,0x51eb851f
1000340e:	f7 e9                	imul   ecx
10003410:	c1 fa 05             	sar    edx,0x5
10003413:	89 c8                	mov    eax,ecx
10003415:	c1 f8 1f             	sar    eax,0x1f
10003418:	29 c2                	sub    edx,eax
1000341a:	89 d0                	mov    eax,edx
1000341c:	b9 0a 00 00 00       	mov    ecx,0xa
10003421:	99                   	cdq    
10003422:	f7 f9                	idiv   ecx
10003424:	89 d0                	mov    eax,edx
10003426:	83 c0 30             	add    eax,0x30
10003429:	88 85 57 ff ff ff    	mov    BYTE PTR [ebp-0xa9],al
1000342f:	66 8b 85 4a ff ff ff 	mov    ax,WORD PTR [ebp-0xb6]
10003436:	0f b7 c8             	movzx  ecx,ax
10003439:	b8 67 66 66 66       	mov    eax,0x66666667
1000343e:	f7 e9                	imul   ecx
10003440:	c1 fa 02             	sar    edx,0x2
10003443:	89 c8                	mov    eax,ecx
10003445:	c1 f8 1f             	sar    eax,0x1f
10003448:	89 d1                	mov    ecx,edx
1000344a:	29 c1                	sub    ecx,eax
1000344c:	b8 67 66 66 66       	mov    eax,0x66666667
10003451:	f7 e9                	imul   ecx
10003453:	c1 fa 02             	sar    edx,0x2
10003456:	89 c8                	mov    eax,ecx
10003458:	c1 f8 1f             	sar    eax,0x1f
1000345b:	29 c2                	sub    edx,eax
1000345d:	89 d0                	mov    eax,edx
1000345f:	c1 e0 02             	shl    eax,0x2
10003462:	01 d0                	add    eax,edx
10003464:	01 c0                	add    eax,eax
10003466:	29 c1                	sub    ecx,eax
10003468:	89 ca                	mov    edx,ecx
1000346a:	88 d0                	mov    al,dl
1000346c:	83 c0 30             	add    eax,0x30
1000346f:	88 85 58 ff ff ff    	mov    BYTE PTR [ebp-0xa8],al
10003475:	66 8b 85 4a ff ff ff 	mov    ax,WORD PTR [ebp-0xb6]
1000347c:	0f b7 c0             	movzx  eax,ax
1000347f:	b9 0a 00 00 00       	mov    ecx,0xa
10003484:	99                   	cdq    
10003485:	f7 f9                	idiv   ecx
10003487:	89 d0                	mov    eax,edx
10003489:	83 c0 30             	add    eax,0x30
1000348c:	88 85 59 ff ff ff    	mov    BYTE PTR [ebp-0xa7],al
10003492:	8a 85 4c ff ff ff    	mov    al,BYTE PTR [ebp-0xb4]
10003498:	0f b6 d0             	movzx  edx,al
1000349b:	89 d0                	mov    eax,edx
1000349d:	c1 e0 02             	shl    eax,0x2
100034a0:	01 d0                	add    eax,edx
100034a2:	c1 e0 03             	shl    eax,0x3
100034a5:	01 d0                	add    eax,edx
100034a7:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
100034ae:	01 d0                	add    eax,edx
100034b0:	66 c1 e8 08          	shr    ax,0x8
100034b4:	c0 e8 03             	shr    al,0x3
100034b7:	83 c0 30             	add    eax,0x30
100034ba:	88 85 5b ff ff ff    	mov    BYTE PTR [ebp-0xa5],al
100034c0:	8a 8d 4c ff ff ff    	mov    cl,BYTE PTR [ebp-0xb4]
100034c6:	0f b6 d1             	movzx  edx,cl
100034c9:	89 d0                	mov    eax,edx
100034cb:	c1 e0 02             	shl    eax,0x2
100034ce:	01 d0                	add    eax,edx
100034d0:	c1 e0 03             	shl    eax,0x3
100034d3:	01 d0                	add    eax,edx
100034d5:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
100034dc:	01 d0                	add    eax,edx
100034de:	66 c1 e8 08          	shr    ax,0x8
100034e2:	88 c2                	mov    dl,al
100034e4:	c0 ea 03             	shr    dl,0x3
100034e7:	88 d0                	mov    al,dl
100034e9:	c1 e0 02             	shl    eax,0x2
100034ec:	01 d0                	add    eax,edx
100034ee:	d1 e0                	shl    eax,1
100034f0:	29 c1                	sub    ecx,eax
100034f2:	88 ca                	mov    dl,cl
100034f4:	8d 42 30             	lea    eax,[edx+0x30]
100034f7:	88 85 5c ff ff ff    	mov    BYTE PTR [ebp-0xa4],al
100034fd:	8a 85 4d ff ff ff    	mov    al,BYTE PTR [ebp-0xb3]
10003503:	0f b6 d0             	movzx  edx,al
10003506:	89 d0                	mov    eax,edx
10003508:	c1 e0 02             	shl    eax,0x2
1000350b:	01 d0                	add    eax,edx
1000350d:	c1 e0 03             	shl    eax,0x3
10003510:	01 d0                	add    eax,edx
10003512:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003519:	01 d0                	add    eax,edx
1000351b:	66 c1 e8 08          	shr    ax,0x8
1000351f:	c0 e8 03             	shr    al,0x3
10003522:	83 c0 30             	add    eax,0x30
10003525:	88 85 5e ff ff ff    	mov    BYTE PTR [ebp-0xa2],al
1000352b:	8a 8d 4d ff ff ff    	mov    cl,BYTE PTR [ebp-0xb3]
10003531:	0f b6 d1             	movzx  edx,cl
10003534:	89 d0                	mov    eax,edx
10003536:	c1 e0 02             	shl    eax,0x2
10003539:	01 d0                	add    eax,edx
1000353b:	c1 e0 03             	shl    eax,0x3
1000353e:	01 d0                	add    eax,edx
10003540:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003547:	01 d0                	add    eax,edx
10003549:	66 c1 e8 08          	shr    ax,0x8
1000354d:	88 c2                	mov    dl,al
1000354f:	c0 ea 03             	shr    dl,0x3
10003552:	88 d0                	mov    al,dl
10003554:	c1 e0 02             	shl    eax,0x2
10003557:	01 d0                	add    eax,edx
10003559:	d1 e0                	shl    eax,1
1000355b:	29 c1                	sub    ecx,eax
1000355d:	88 ca                	mov    dl,cl
1000355f:	8d 42 30             	lea    eax,[edx+0x30]
10003562:	88 85 5f ff ff ff    	mov    BYTE PTR [ebp-0xa1],al
10003568:	8a 85 4e ff ff ff    	mov    al,BYTE PTR [ebp-0xb2]
1000356e:	0f b6 d0             	movzx  edx,al
10003571:	89 d0                	mov    eax,edx
10003573:	c1 e0 02             	shl    eax,0x2
10003576:	01 d0                	add    eax,edx
10003578:	c1 e0 03             	shl    eax,0x3
1000357b:	01 d0                	add    eax,edx
1000357d:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003584:	01 d0                	add    eax,edx
10003586:	66 c1 e8 08          	shr    ax,0x8
1000358a:	c0 e8 03             	shr    al,0x3
1000358d:	83 c0 30             	add    eax,0x30
10003590:	88 85 61 ff ff ff    	mov    BYTE PTR [ebp-0x9f],al
10003596:	8a 8d 4e ff ff ff    	mov    cl,BYTE PTR [ebp-0xb2]
1000359c:	0f b6 d1             	movzx  edx,cl
1000359f:	89 d0                	mov    eax,edx
100035a1:	c1 e0 02             	shl    eax,0x2
100035a4:	01 d0                	add    eax,edx
100035a6:	c1 e0 03             	shl    eax,0x3
100035a9:	01 d0                	add    eax,edx
100035ab:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
100035b2:	01 d0                	add    eax,edx
100035b4:	66 c1 e8 08          	shr    ax,0x8
100035b8:	88 c2                	mov    dl,al
100035ba:	c0 ea 03             	shr    dl,0x3
100035bd:	88 d0                	mov    al,dl
100035bf:	c1 e0 02             	shl    eax,0x2
100035c2:	01 d0                	add    eax,edx
100035c4:	d1 e0                	shl    eax,1
100035c6:	29 c1                	sub    ecx,eax
100035c8:	88 ca                	mov    dl,cl
100035ca:	8d 42 30             	lea    eax,[edx+0x30]
100035cd:	88 85 62 ff ff ff    	mov    BYTE PTR [ebp-0x9e],al
100035d3:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
100035da:	a1 00 00 00 00       	mov    eax,ds:0x0	100035db: R_386_32	term
100035df:	83 ec 04             	sub    esp,0x4
100035e2:	6a 05                	push   0x5
100035e4:	6a 18                	push   0x18
100035e6:	50                   	push   eax
100035e7:	e8 fc ff ff ff       	call   100035e8 <firstRun(bool)+0xc56>	100035e8: R_386_PC32	VgaText::setCursor(int, int)
100035ec:	83 c4 10             	add    esp,0x10
100035ef:	a1 00 00 00 00       	mov    eax,ds:0x0	100035f0: R_386_32	term
100035f4:	83 ec 08             	sub    esp,0x8
100035f7:	68 70 bc 00 10       	push   0x1000bc70	100035f8: R_386_32	.text
100035fc:	50                   	push   eax
100035fd:	e8 fc ff ff ff       	call   100035fe <firstRun(bool)+0xc6c>	100035fe: R_386_PC32	VgaText::puts(char const*)
10003602:	83 c4 10             	add    esp,0x10
10003605:	a1 00 00 00 00       	mov    eax,ds:0x0	10003606: R_386_32	term
1000360a:	83 ec 04             	sub    esp,0x4
1000360d:	6a 06                	push   0x6
1000360f:	6a 18                	push   0x18
10003611:	50                   	push   eax
10003612:	e8 fc ff ff ff       	call   10003613 <firstRun(bool)+0xc81>	10003613: R_386_PC32	VgaText::setCursor(int, int)
10003617:	83 c4 10             	add    esp,0x10
1000361a:	a1 00 00 00 00       	mov    eax,ds:0x0	1000361b: R_386_32	term
1000361f:	83 ec 08             	sub    esp,0x8
10003622:	68 98 bc 00 10       	push   0x1000bc98	10003623: R_386_32	.text
10003627:	50                   	push   eax
10003628:	e8 fc ff ff ff       	call   10003629 <firstRun(bool)+0xc97>	10003629: R_386_PC32	VgaText::puts(char const*)
1000362d:	83 c4 10             	add    esp,0x10
10003630:	a1 00 00 00 00       	mov    eax,ds:0x0	10003631: R_386_32	term
10003635:	83 ec 04             	sub    esp,0x4
10003638:	6a 09                	push   0x9
1000363a:	6a 1a                	push   0x1a
1000363c:	50                   	push   eax
1000363d:	e8 fc ff ff ff       	call   1000363e <firstRun(bool)+0xcac>	1000363e: R_386_PC32	VgaText::setCursor(int, int)
10003642:	83 c4 10             	add    esp,0x10
10003645:	a1 00 00 00 00       	mov    eax,ds:0x0	10003646: R_386_32	term
1000364a:	6a 0f                	push   0xf
1000364c:	6a 07                	push   0x7
1000364e:	68 ae bc 00 10       	push   0x1000bcae	1000364f: R_386_32	.text
10003653:	50                   	push   eax
10003654:	e8 fc ff ff ff       	call   10003655 <firstRun(bool)+0xcc3>	10003655: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10003659:	83 c4 10             	add    esp,0x10
1000365c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000365d: R_386_32	term
10003661:	83 ec 04             	sub    esp,0x4
10003664:	6a 18                	push   0x18
10003666:	6a 11                	push   0x11
10003668:	50                   	push   eax
10003669:	e8 fc ff ff ff       	call   1000366a <firstRun(bool)+0xcd8>	1000366a: R_386_PC32	VgaText::setCursor(int, int)
1000366e:	83 c4 10             	add    esp,0x10
10003671:	a1 00 00 00 00       	mov    eax,ds:0x0	10003672: R_386_32	term
10003676:	6a 0b                	push   0xb
10003678:	6a 03                	push   0x3
1000367a:	68 c2 bc 00 10       	push   0x1000bcc2	1000367b: R_386_32	.text
1000367f:	50                   	push   eax
10003680:	e8 fc ff ff ff       	call   10003681 <firstRun(bool)+0xcef>	10003681: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10003685:	83 c4 10             	add    esp,0x10
10003688:	a1 00 00 00 00       	mov    eax,ds:0x0	10003689: R_386_32	term
1000368d:	83 ec 04             	sub    esp,0x4
10003690:	6a 08                	push   0x8
10003692:	6a 1a                	push   0x1a
10003694:	50                   	push   eax
10003695:	e8 fc ff ff ff       	call   10003696 <firstRun(bool)+0xd04>	10003696: R_386_PC32	VgaText::setCursor(int, int)
1000369a:	83 c4 10             	add    esp,0x10
1000369d:	a1 00 00 00 00       	mov    eax,ds:0x0	1000369e: R_386_32	term
100036a2:	83 ec 08             	sub    esp,0x8
100036a5:	8d 95 50 ff ff ff    	lea    edx,[ebp-0xb0]
100036ab:	52                   	push   edx
100036ac:	50                   	push   eax
100036ad:	e8 fc ff ff ff       	call   100036ae <firstRun(bool)+0xd1c>	100036ae: R_386_PC32	VgaText::puts(char const*)
100036b2:	83 c4 10             	add    esp,0x10
100036b5:	a1 00 00 00 00       	mov    eax,ds:0x0	100036b6: R_386_32	term
100036ba:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
100036bd:	83 c2 1a             	add    edx,0x1a
100036c0:	83 ec 04             	sub    esp,0x4
100036c3:	6a 08                	push   0x8
100036c5:	52                   	push   edx
100036c6:	50                   	push   eax
100036c7:	e8 fc ff ff ff       	call   100036c8 <firstRun(bool)+0xd36>	100036c8: R_386_PC32	VgaText::setCursor(int, int)
100036cc:	83 c4 10             	add    esp,0x10
100036cf:	a1 00 00 00 00       	mov    eax,ds:0x0	100036d0: R_386_32	term
100036d4:	8d 8d 50 ff ff ff    	lea    ecx,[ebp-0xb0]
100036da:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
100036dd:	01 ca                	add    edx,ecx
100036df:	8a 12                	mov    dl,BYTE PTR [edx]
100036e1:	0f be d2             	movsx  edx,dl
100036e4:	6a 00                	push   0x0
100036e6:	6a 0f                	push   0xf
100036e8:	52                   	push   edx
100036e9:	50                   	push   eax
100036ea:	e8 fc ff ff ff       	call   100036eb <firstRun(bool)+0xd59>	100036eb: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
100036ef:	83 c4 10             	add    esp,0x10
100036f2:	8a 85 5b ff ff ff    	mov    al,BYTE PTR [ebp-0xa5]
100036f8:	0f be c0             	movsx  eax,al
100036fb:	8d 50 d0             	lea    edx,[eax-0x30]
100036fe:	89 d0                	mov    eax,edx
10003700:	c1 e0 02             	shl    eax,0x2
10003703:	01 d0                	add    eax,edx
10003705:	01 c0                	add    eax,eax
10003707:	89 c2                	mov    edx,eax
10003709:	8a 85 5c ff ff ff    	mov    al,BYTE PTR [ebp-0xa4]
1000370f:	0f be c0             	movsx  eax,al
10003712:	83 e8 30             	sub    eax,0x30
10003715:	01 d0                	add    eax,edx
10003717:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000371a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000371d:	b9 0c 00 00 00       	mov    ecx,0xc
10003722:	99                   	cdq    
10003723:	f7 f9                	idiv   ecx
10003725:	89 55 d8             	mov    DWORD PTR [ebp-0x28],edx
10003728:	83 7d d8 00          	cmp    DWORD PTR [ebp-0x28],0x0
1000372c:	75 07                	jne    10003735 <firstRun(bool)+0xda3>
1000372e:	c7 45 d8 0c 00 00 00 	mov    DWORD PTR [ebp-0x28],0xc
10003735:	8a 85 5e ff ff ff    	mov    al,BYTE PTR [ebp-0xa2]
1000373b:	0f be c0             	movsx  eax,al
1000373e:	8d 50 d0             	lea    edx,[eax-0x30]
10003741:	89 d0                	mov    eax,edx
10003743:	c1 e0 02             	shl    eax,0x2
10003746:	01 d0                	add    eax,edx
10003748:	01 c0                	add    eax,eax
1000374a:	89 c2                	mov    edx,eax
1000374c:	8a 85 5f ff ff ff    	mov    al,BYTE PTR [ebp-0xa1]
10003752:	0f be c0             	movsx  eax,al
10003755:	83 e8 30             	sub    eax,0x30
10003758:	01 d0                	add    eax,edx
1000375a:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
1000375d:	83 ec 04             	sub    esp,0x4
10003760:	6a 10                	push   0x10
10003762:	6a 00                	push   0x0
10003764:	8d 85 2a ff ff ff    	lea    eax,[ebp-0xd6]
1000376a:	50                   	push   eax
1000376b:	e8 fc ff ff ff       	call   1000376c <firstRun(bool)+0xdda>	1000376c: R_386_PC32	memset
10003770:	83 c4 10             	add    esp,0x10
10003773:	c7 45 bc 00 00 00 00 	mov    DWORD PTR [ebp-0x44],0x0
1000377a:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
1000377d:	8d 50 01             	lea    edx,[eax+0x1]
10003780:	89 55 bc             	mov    DWORD PTR [ebp-0x44],edx
10003783:	c6 84 05 2a ff ff ff 28 	mov    BYTE PTR [ebp+eax*1-0xd6],0x28
1000378b:	8b 4d d8             	mov    ecx,DWORD PTR [ebp-0x28]
1000378e:	b8 67 66 66 66       	mov    eax,0x66666667
10003793:	f7 e9                	imul   ecx
10003795:	c1 fa 02             	sar    edx,0x2
10003798:	89 c8                	mov    eax,ecx
1000379a:	c1 f8 1f             	sar    eax,0x1f
1000379d:	29 c2                	sub    edx,eax
1000379f:	89 d0                	mov    eax,edx
100037a1:	8d 48 30             	lea    ecx,[eax+0x30]
100037a4:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
100037a7:	8d 50 01             	lea    edx,[eax+0x1]
100037aa:	89 55 bc             	mov    DWORD PTR [ebp-0x44],edx
100037ad:	88 ca                	mov    dl,cl
100037af:	88 94 05 2a ff ff ff 	mov    BYTE PTR [ebp+eax*1-0xd6],dl
100037b6:	8b 4d d8             	mov    ecx,DWORD PTR [ebp-0x28]
100037b9:	b8 67 66 66 66       	mov    eax,0x66666667
100037be:	f7 e9                	imul   ecx
100037c0:	c1 fa 02             	sar    edx,0x2
100037c3:	89 c8                	mov    eax,ecx
100037c5:	c1 f8 1f             	sar    eax,0x1f
100037c8:	29 c2                	sub    edx,eax
100037ca:	89 d0                	mov    eax,edx
100037cc:	c1 e0 02             	shl    eax,0x2
100037cf:	01 d0                	add    eax,edx
100037d1:	01 c0                	add    eax,eax
100037d3:	29 c1                	sub    ecx,eax
100037d5:	89 ca                	mov    edx,ecx
100037d7:	88 d0                	mov    al,dl
100037d9:	8d 48 30             	lea    ecx,[eax+0x30]
100037dc:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
100037df:	8d 50 01             	lea    edx,[eax+0x1]
100037e2:	89 55 bc             	mov    DWORD PTR [ebp-0x44],edx
100037e5:	88 ca                	mov    dl,cl
100037e7:	88 94 05 2a ff ff ff 	mov    BYTE PTR [ebp+eax*1-0xd6],dl
100037ee:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
100037f1:	8d 50 01             	lea    edx,[eax+0x1]
100037f4:	89 55 bc             	mov    DWORD PTR [ebp-0x44],edx
100037f7:	c6 84 05 2a ff ff ff 3a 	mov    BYTE PTR [ebp+eax*1-0xd6],0x3a
100037ff:	8b 4d c0             	mov    ecx,DWORD PTR [ebp-0x40]
10003802:	b8 67 66 66 66       	mov    eax,0x66666667
10003807:	f7 e9                	imul   ecx
10003809:	c1 fa 02             	sar    edx,0x2
1000380c:	89 c8                	mov    eax,ecx
1000380e:	c1 f8 1f             	sar    eax,0x1f
10003811:	29 c2                	sub    edx,eax
10003813:	89 d0                	mov    eax,edx
10003815:	8d 48 30             	lea    ecx,[eax+0x30]
10003818:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
1000381b:	8d 50 01             	lea    edx,[eax+0x1]
1000381e:	89 55 bc             	mov    DWORD PTR [ebp-0x44],edx
10003821:	88 ca                	mov    dl,cl
10003823:	88 94 05 2a ff ff ff 	mov    BYTE PTR [ebp+eax*1-0xd6],dl
1000382a:	8b 4d c0             	mov    ecx,DWORD PTR [ebp-0x40]
1000382d:	b8 67 66 66 66       	mov    eax,0x66666667
10003832:	f7 e9                	imul   ecx
10003834:	c1 fa 02             	sar    edx,0x2
10003837:	89 c8                	mov    eax,ecx
10003839:	c1 f8 1f             	sar    eax,0x1f
1000383c:	29 c2                	sub    edx,eax
1000383e:	89 d0                	mov    eax,edx
10003840:	c1 e0 02             	shl    eax,0x2
10003843:	01 d0                	add    eax,edx
10003845:	01 c0                	add    eax,eax
10003847:	29 c1                	sub    ecx,eax
10003849:	89 ca                	mov    edx,ecx
1000384b:	88 d0                	mov    al,dl
1000384d:	8d 48 30             	lea    ecx,[eax+0x30]
10003850:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
10003853:	8d 50 01             	lea    edx,[eax+0x1]
10003856:	89 55 bc             	mov    DWORD PTR [ebp-0x44],edx
10003859:	88 ca                	mov    dl,cl
1000385b:	88 94 05 2a ff ff ff 	mov    BYTE PTR [ebp+eax*1-0xd6],dl
10003862:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
10003865:	8d 50 01             	lea    edx,[eax+0x1]
10003868:	89 55 bc             	mov    DWORD PTR [ebp-0x44],edx
1000386b:	c6 84 05 2a ff ff ff 20 	mov    BYTE PTR [ebp+eax*1-0xd6],0x20
10003873:	83 7d c4 0b          	cmp    DWORD PTR [ebp-0x3c],0xb
10003877:	7e 04                	jle    1000387d <firstRun(bool)+0xeeb>
10003879:	b2 50                	mov    dl,0x50
1000387b:	eb 02                	jmp    1000387f <firstRun(bool)+0xeed>
1000387d:	b2 41                	mov    dl,0x41
1000387f:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
10003882:	8d 48 01             	lea    ecx,[eax+0x1]
10003885:	89 4d bc             	mov    DWORD PTR [ebp-0x44],ecx
10003888:	88 94 05 2a ff ff ff 	mov    BYTE PTR [ebp+eax*1-0xd6],dl
1000388f:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
10003892:	8d 50 01             	lea    edx,[eax+0x1]
10003895:	89 55 bc             	mov    DWORD PTR [ebp-0x44],edx
10003898:	c6 84 05 2a ff ff ff 4d 	mov    BYTE PTR [ebp+eax*1-0xd6],0x4d
100038a0:	8b 45 bc             	mov    eax,DWORD PTR [ebp-0x44]
100038a3:	8d 50 01             	lea    edx,[eax+0x1]
100038a6:	89 55 bc             	mov    DWORD PTR [ebp-0x44],edx
100038a9:	c6 84 05 2a ff ff ff 29 	mov    BYTE PTR [ebp+eax*1-0xd6],0x29
100038b1:	8b 1d 00 00 00 00    	mov    ebx,DWORD PTR ds:0x0	100038b3: R_386_32	term
100038b7:	83 ec 0c             	sub    esp,0xc
100038ba:	8d 85 50 ff ff ff    	lea    eax,[ebp-0xb0]
100038c0:	50                   	push   eax
100038c1:	e8 fc ff ff ff       	call   100038c2 <firstRun(bool)+0xf30>	100038c2: R_386_PC32	strlen
100038c6:	83 c4 10             	add    esp,0x10
100038c9:	83 c0 1e             	add    eax,0x1e
100038cc:	83 ec 04             	sub    esp,0x4
100038cf:	6a 08                	push   0x8
100038d1:	50                   	push   eax
100038d2:	53                   	push   ebx
100038d3:	e8 fc ff ff ff       	call   100038d4 <firstRun(bool)+0xf42>	100038d4: R_386_PC32	VgaText::setCursor(int, int)
100038d8:	83 c4 10             	add    esp,0x10
100038db:	a1 00 00 00 00       	mov    eax,ds:0x0	100038dc: R_386_32	term
100038e0:	83 ec 08             	sub    esp,0x8
100038e3:	8d 95 2a ff ff ff    	lea    edx,[ebp-0xd6]
100038e9:	52                   	push   edx
100038ea:	50                   	push   eax
100038eb:	e8 fc ff ff ff       	call   100038ec <firstRun(bool)+0xf5a>	100038ec: R_386_PC32	VgaText::puts(char const*)
100038f0:	83 c4 10             	add    esp,0x10
100038f3:	a1 00 00 00 00       	mov    eax,ds:0x0	100038f4: R_386_32	term
100038f8:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
100038fb:	83 c2 1a             	add    edx,0x1a
100038fe:	83 ec 04             	sub    esp,0x4
10003901:	6a 08                	push   0x8
10003903:	52                   	push   edx
10003904:	50                   	push   eax
10003905:	e8 fc ff ff ff       	call   10003906 <firstRun(bool)+0xf74>	10003906: R_386_PC32	VgaText::setCursor(int, int)
1000390a:	83 c4 10             	add    esp,0x10
1000390d:	a0 00 00 00 00       	mov    al,ds:0x0	1000390e: R_386_32	installKey
10003912:	84 c0                	test   al,al
10003914:	0f 94 c0             	sete   al
10003917:	84 c0                	test   al,al
10003919:	74 02                	je     1000391d <firstRun(bool)+0xf8b>
1000391b:	eb f0                	jmp    1000390d <firstRun(bool)+0xf7b>
1000391d:	a1 00 00 00 00       	mov    eax,ds:0x0	1000391e: R_386_32	term
10003922:	05 82 00 00 00       	add    eax,0x82
10003927:	83 ec 04             	sub    esp,0x4
1000392a:	6a 10                	push   0x10
1000392c:	6a 00                	push   0x0
1000392e:	50                   	push   eax
1000392f:	e8 fc ff ff ff       	call   10003930 <firstRun(bool)+0xf9e>	10003930: R_386_PC32	memset
10003934:	83 c4 10             	add    esp,0x10
10003937:	a1 00 00 00 00       	mov    eax,ds:0x0	10003938: R_386_32	term
1000393c:	05 02 01 00 00       	add    eax,0x102
10003941:	83 ec 04             	sub    esp,0x4
10003944:	6a 10                	push   0x10
10003946:	6a 00                	push   0x0
10003948:	50                   	push   eax
10003949:	e8 fc ff ff ff       	call   1000394a <firstRun(bool)+0xfb8>	1000394a: R_386_PC32	memset
1000394e:	83 c4 10             	add    esp,0x10
10003951:	a0 00 00 00 00       	mov    al,ds:0x0	10003952: R_386_32	installKey
10003956:	3c 03                	cmp    al,0x3
10003958:	74 09                	je     10003963 <firstRun(bool)+0xfd1>
1000395a:	a0 00 00 00 00       	mov    al,ds:0x0	1000395b: R_386_32	installKey
1000395f:	3c 08                	cmp    al,0x8
10003961:	75 04                	jne    10003967 <firstRun(bool)+0xfd5>
10003963:	b0 01                	mov    al,0x1
10003965:	eb 02                	jmp    10003969 <firstRun(bool)+0xfd7>
10003967:	b0 00                	mov    al,0x0
10003969:	84 c0                	test   al,al
1000396b:	74 58                	je     100039c5 <firstRun(bool)+0x1033>
1000396d:	ff 4d e4             	dec    DWORD PTR [ebp-0x1c]
10003970:	83 7d e4 ff          	cmp    DWORD PTR [ebp-0x1c],0xffffffff
10003974:	75 16                	jne    1000398c <firstRun(bool)+0xffa>
10003976:	83 ec 0c             	sub    esp,0xc
10003979:	8d 85 50 ff ff ff    	lea    eax,[ebp-0xb0]
1000397f:	50                   	push   eax
10003980:	e8 fc ff ff ff       	call   10003981 <firstRun(bool)+0xfef>	10003981: R_386_PC32	strlen
10003985:	83 c4 10             	add    esp,0x10
10003988:	48                   	dec    eax
10003989:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000398c:	8d 95 50 ff ff ff    	lea    edx,[ebp-0xb0]
10003992:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003995:	01 d0                	add    eax,edx
10003997:	8a 00                	mov    al,BYTE PTR [eax]
10003999:	3c 20                	cmp    al,0x20
1000399b:	74 d0                	je     1000396d <firstRun(bool)+0xfdb>
1000399d:	8d 95 50 ff ff ff    	lea    edx,[ebp-0xb0]
100039a3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100039a6:	01 d0                	add    eax,edx
100039a8:	8a 00                	mov    al,BYTE PTR [eax]
100039aa:	3c 2f                	cmp    al,0x2f
100039ac:	74 bf                	je     1000396d <firstRun(bool)+0xfdb>
100039ae:	8d 95 50 ff ff ff    	lea    edx,[ebp-0xb0]
100039b4:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100039b7:	01 d0                	add    eax,edx
100039b9:	8a 00                	mov    al,BYTE PTR [eax]
100039bb:	3c 3a                	cmp    al,0x3a
100039bd:	0f 85 5e 04 00 00    	jne    10003e21 <firstRun(bool)+0x148f>
100039c3:	eb a8                	jmp    1000396d <firstRun(bool)+0xfdb>
100039c5:	a0 00 00 00 00       	mov    al,ds:0x0	100039c6: R_386_32	installKey
100039ca:	3c 2f                	cmp    al,0x2f
100039cc:	7e 09                	jle    100039d7 <firstRun(bool)+0x1045>
100039ce:	a0 00 00 00 00       	mov    al,ds:0x0	100039cf: R_386_32	installKey
100039d3:	3c 39                	cmp    al,0x39
100039d5:	7e 12                	jle    100039e9 <firstRun(bool)+0x1057>
100039d7:	a0 00 00 00 00       	mov    al,ds:0x0	100039d8: R_386_32	installKey
100039dc:	3c 20                	cmp    al,0x20
100039de:	74 09                	je     100039e9 <firstRun(bool)+0x1057>
100039e0:	a0 00 00 00 00       	mov    al,ds:0x0	100039e1: R_386_32	installKey
100039e5:	3c 04                	cmp    al,0x4
100039e7:	75 04                	jne    100039ed <firstRun(bool)+0x105b>
100039e9:	b0 01                	mov    al,0x1
100039eb:	eb 02                	jmp    100039ef <firstRun(bool)+0x105d>
100039ed:	b0 00                	mov    al,0x0
100039ef:	84 c0                	test   al,al
100039f1:	0f 84 cf 01 00 00    	je     10003bc6 <firstRun(bool)+0x1234>
100039f7:	a0 00 00 00 00       	mov    al,ds:0x0	100039f8: R_386_32	installKey
100039fc:	3c 2f                	cmp    al,0x2f
100039fe:	7e 0d                	jle    10003a0d <firstRun(bool)+0x107b>
10003a00:	a0 00 00 00 00       	mov    al,ds:0x0	10003a01: R_386_32	installKey
10003a05:	3c 39                	cmp    al,0x39
10003a07:	7f 04                	jg     10003a0d <firstRun(bool)+0x107b>
10003a09:	b0 01                	mov    al,0x1
10003a0b:	eb 02                	jmp    10003a0f <firstRun(bool)+0x107d>
10003a0d:	b0 00                	mov    al,0x0
10003a0f:	84 c0                	test   al,al
10003a11:	0f 84 51 01 00 00    	je     10003b68 <firstRun(bool)+0x11d6>
10003a17:	83 7d e4 00          	cmp    DWORD PTR [ebp-0x1c],0x0
10003a1b:	75 0d                	jne    10003a2a <firstRun(bool)+0x1098>
10003a1d:	a0 00 00 00 00       	mov    al,ds:0x0	10003a1e: R_386_32	installKey
10003a22:	3c 33                	cmp    al,0x33
10003a24:	7e 04                	jle    10003a2a <firstRun(bool)+0x1098>
10003a26:	b0 01                	mov    al,0x1
10003a28:	eb 02                	jmp    10003a2c <firstRun(bool)+0x109a>
10003a2a:	b0 00                	mov    al,0x0
10003a2c:	84 c0                	test   al,al
10003a2e:	74 28                	je     10003a58 <firstRun(bool)+0x10c6>
10003a30:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003a33:	8d 50 01             	lea    edx,[eax+0x1]
10003a36:	89 55 e4             	mov    DWORD PTR [ebp-0x1c],edx
10003a39:	c6 84 05 50 ff ff ff 30 	mov    BYTE PTR [ebp+eax*1-0xb0],0x30
10003a41:	a0 00 00 00 00       	mov    al,ds:0x0	10003a42: R_386_32	installKey
10003a46:	8d 8d 50 ff ff ff    	lea    ecx,[ebp-0xb0]
10003a4c:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10003a4f:	01 ca                	add    edx,ecx
10003a51:	88 02                	mov    BYTE PTR [edx],al
10003a53:	e9 10 01 00 00       	jmp    10003b68 <firstRun(bool)+0x11d6>
10003a58:	83 7d e4 03          	cmp    DWORD PTR [ebp-0x1c],0x3
10003a5c:	75 0d                	jne    10003a6b <firstRun(bool)+0x10d9>
10003a5e:	a0 00 00 00 00       	mov    al,ds:0x0	10003a5f: R_386_32	installKey
10003a63:	3c 31                	cmp    al,0x31
10003a65:	7e 04                	jle    10003a6b <firstRun(bool)+0x10d9>
10003a67:	b0 01                	mov    al,0x1
10003a69:	eb 02                	jmp    10003a6d <firstRun(bool)+0x10db>
10003a6b:	b0 00                	mov    al,0x0
10003a6d:	84 c0                	test   al,al
10003a6f:	74 28                	je     10003a99 <firstRun(bool)+0x1107>
10003a71:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003a74:	8d 50 01             	lea    edx,[eax+0x1]
10003a77:	89 55 e4             	mov    DWORD PTR [ebp-0x1c],edx
10003a7a:	c6 84 05 50 ff ff ff 30 	mov    BYTE PTR [ebp+eax*1-0xb0],0x30
10003a82:	a0 00 00 00 00       	mov    al,ds:0x0	10003a83: R_386_32	installKey
10003a87:	8d 8d 50 ff ff ff    	lea    ecx,[ebp-0xb0]
10003a8d:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10003a90:	01 ca                	add    edx,ecx
10003a92:	88 02                	mov    BYTE PTR [edx],al
10003a94:	e9 cf 00 00 00       	jmp    10003b68 <firstRun(bool)+0x11d6>
10003a99:	83 7d e4 0b          	cmp    DWORD PTR [ebp-0x1c],0xb
10003a9d:	75 0d                	jne    10003aac <firstRun(bool)+0x111a>
10003a9f:	a0 00 00 00 00       	mov    al,ds:0x0	10003aa0: R_386_32	installKey
10003aa4:	3c 32                	cmp    al,0x32
10003aa6:	7e 04                	jle    10003aac <firstRun(bool)+0x111a>
10003aa8:	b0 01                	mov    al,0x1
10003aaa:	eb 02                	jmp    10003aae <firstRun(bool)+0x111c>
10003aac:	b0 00                	mov    al,0x0
10003aae:	84 c0                	test   al,al
10003ab0:	74 28                	je     10003ada <firstRun(bool)+0x1148>
10003ab2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003ab5:	8d 50 01             	lea    edx,[eax+0x1]
10003ab8:	89 55 e4             	mov    DWORD PTR [ebp-0x1c],edx
10003abb:	c6 84 05 50 ff ff ff 30 	mov    BYTE PTR [ebp+eax*1-0xb0],0x30
10003ac3:	a0 00 00 00 00       	mov    al,ds:0x0	10003ac4: R_386_32	installKey
10003ac8:	8d 8d 50 ff ff ff    	lea    ecx,[ebp-0xb0]
10003ace:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10003ad1:	01 ca                	add    edx,ecx
10003ad3:	88 02                	mov    BYTE PTR [edx],al
10003ad5:	e9 8e 00 00 00       	jmp    10003b68 <firstRun(bool)+0x11d6>
10003ada:	83 7d e4 0e          	cmp    DWORD PTR [ebp-0x1c],0xe
10003ade:	75 0d                	jne    10003aed <firstRun(bool)+0x115b>
10003ae0:	a0 00 00 00 00       	mov    al,ds:0x0	10003ae1: R_386_32	installKey
10003ae5:	3c 35                	cmp    al,0x35
10003ae7:	7e 04                	jle    10003aed <firstRun(bool)+0x115b>
10003ae9:	b0 01                	mov    al,0x1
10003aeb:	eb 02                	jmp    10003aef <firstRun(bool)+0x115d>
10003aed:	b0 00                	mov    al,0x0
10003aef:	84 c0                	test   al,al
10003af1:	74 25                	je     10003b18 <firstRun(bool)+0x1186>
10003af3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003af6:	8d 50 01             	lea    edx,[eax+0x1]
10003af9:	89 55 e4             	mov    DWORD PTR [ebp-0x1c],edx
10003afc:	c6 84 05 50 ff ff ff 30 	mov    BYTE PTR [ebp+eax*1-0xb0],0x30
10003b04:	a0 00 00 00 00       	mov    al,ds:0x0	10003b05: R_386_32	installKey
10003b09:	8d 8d 50 ff ff ff    	lea    ecx,[ebp-0xb0]
10003b0f:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10003b12:	01 ca                	add    edx,ecx
10003b14:	88 02                	mov    BYTE PTR [edx],al
10003b16:	eb 50                	jmp    10003b68 <firstRun(bool)+0x11d6>
10003b18:	83 7d e4 11          	cmp    DWORD PTR [ebp-0x1c],0x11
10003b1c:	75 0d                	jne    10003b2b <firstRun(bool)+0x1199>
10003b1e:	a0 00 00 00 00       	mov    al,ds:0x0	10003b1f: R_386_32	installKey
10003b23:	3c 35                	cmp    al,0x35
10003b25:	7e 04                	jle    10003b2b <firstRun(bool)+0x1199>
10003b27:	b0 01                	mov    al,0x1
10003b29:	eb 02                	jmp    10003b2d <firstRun(bool)+0x119b>
10003b2b:	b0 00                	mov    al,0x0
10003b2d:	84 c0                	test   al,al
10003b2f:	74 25                	je     10003b56 <firstRun(bool)+0x11c4>
10003b31:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003b34:	8d 50 01             	lea    edx,[eax+0x1]
10003b37:	89 55 e4             	mov    DWORD PTR [ebp-0x1c],edx
10003b3a:	c6 84 05 50 ff ff ff 30 	mov    BYTE PTR [ebp+eax*1-0xb0],0x30
10003b42:	a0 00 00 00 00       	mov    al,ds:0x0	10003b43: R_386_32	installKey
10003b47:	8d 8d 50 ff ff ff    	lea    ecx,[ebp-0xb0]
10003b4d:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10003b50:	01 ca                	add    edx,ecx
10003b52:	88 02                	mov    BYTE PTR [edx],al
10003b54:	eb 12                	jmp    10003b68 <firstRun(bool)+0x11d6>
10003b56:	a0 00 00 00 00       	mov    al,ds:0x0	10003b57: R_386_32	installKey
10003b5b:	8d 8d 50 ff ff ff    	lea    ecx,[ebp-0xb0]
10003b61:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10003b64:	01 ca                	add    edx,ecx
10003b66:	88 02                	mov    BYTE PTR [edx],al
10003b68:	ff 45 e4             	inc    DWORD PTR [ebp-0x1c]
10003b6b:	83 ec 0c             	sub    esp,0xc
10003b6e:	8d 85 50 ff ff ff    	lea    eax,[ebp-0xb0]
10003b74:	50                   	push   eax
10003b75:	e8 fc ff ff ff       	call   10003b76 <firstRun(bool)+0x11e4>	10003b76: R_386_PC32	strlen
10003b7a:	83 c4 10             	add    esp,0x10
10003b7d:	89 c2                	mov    edx,eax
10003b7f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003b82:	39 c2                	cmp    edx,eax
10003b84:	77 07                	ja     10003b8d <firstRun(bool)+0x11fb>
10003b86:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10003b8d:	8d 95 50 ff ff ff    	lea    edx,[ebp-0xb0]
10003b93:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003b96:	01 d0                	add    eax,edx
10003b98:	8a 00                	mov    al,BYTE PTR [eax]
10003b9a:	3c 20                	cmp    al,0x20
10003b9c:	74 ca                	je     10003b68 <firstRun(bool)+0x11d6>
10003b9e:	8d 95 50 ff ff ff    	lea    edx,[ebp-0xb0]
10003ba4:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003ba7:	01 d0                	add    eax,edx
10003ba9:	8a 00                	mov    al,BYTE PTR [eax]
10003bab:	3c 2f                	cmp    al,0x2f
10003bad:	74 b9                	je     10003b68 <firstRun(bool)+0x11d6>
10003baf:	8d 95 50 ff ff ff    	lea    edx,[ebp-0xb0]
10003bb5:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10003bb8:	01 d0                	add    eax,edx
10003bba:	8a 00                	mov    al,BYTE PTR [eax]
10003bbc:	3c 3a                	cmp    al,0x3a
10003bbe:	0f 85 5d 02 00 00    	jne    10003e21 <firstRun(bool)+0x148f>
10003bc4:	eb a2                	jmp    10003b68 <firstRun(bool)+0x11d6>
10003bc6:	a0 00 00 00 00       	mov    al,ds:0x0	10003bc7: R_386_32	installKey
10003bcb:	3c 0a                	cmp    al,0xa
10003bcd:	0f 94 c0             	sete   al
10003bd0:	84 c0                	test   al,al
10003bd2:	0f 84 37 02 00 00    	je     10003e0f <firstRun(bool)+0x147d>
10003bd8:	8a 85 50 ff ff ff    	mov    al,BYTE PTR [ebp-0xb0]
10003bde:	0f be c0             	movsx  eax,al
10003be1:	8d 50 d0             	lea    edx,[eax-0x30]
10003be4:	89 d0                	mov    eax,edx
10003be6:	c1 e0 02             	shl    eax,0x2
10003be9:	01 d0                	add    eax,edx
10003beb:	01 c0                	add    eax,eax
10003bed:	89 c2                	mov    edx,eax
10003bef:	8a 85 51 ff ff ff    	mov    al,BYTE PTR [ebp-0xaf]
10003bf5:	0f be c0             	movsx  eax,al
10003bf8:	83 e8 30             	sub    eax,0x30
10003bfb:	01 d0                	add    eax,edx
10003bfd:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
10003c00:	8a 85 53 ff ff ff    	mov    al,BYTE PTR [ebp-0xad]
10003c06:	0f be c0             	movsx  eax,al
10003c09:	8d 50 d0             	lea    edx,[eax-0x30]
10003c0c:	89 d0                	mov    eax,edx
10003c0e:	c1 e0 02             	shl    eax,0x2
10003c11:	01 d0                	add    eax,edx
10003c13:	01 c0                	add    eax,eax
10003c15:	89 c2                	mov    edx,eax
10003c17:	8a 85 54 ff ff ff    	mov    al,BYTE PTR [ebp-0xac]
10003c1d:	0f be c0             	movsx  eax,al
10003c20:	83 e8 30             	sub    eax,0x30
10003c23:	01 d0                	add    eax,edx
10003c25:	89 45 b4             	mov    DWORD PTR [ebp-0x4c],eax
10003c28:	8a 85 56 ff ff ff    	mov    al,BYTE PTR [ebp-0xaa]
10003c2e:	0f be c0             	movsx  eax,al
10003c31:	8d 50 d0             	lea    edx,[eax-0x30]
10003c34:	89 d0                	mov    eax,edx
10003c36:	c1 e0 02             	shl    eax,0x2
10003c39:	01 d0                	add    eax,edx
10003c3b:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003c42:	01 d0                	add    eax,edx
10003c44:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003c4b:	01 d0                	add    eax,edx
10003c4d:	c1 e0 03             	shl    eax,0x3
10003c50:	89 c1                	mov    ecx,eax
10003c52:	8a 85 57 ff ff ff    	mov    al,BYTE PTR [ebp-0xa9]
10003c58:	0f be c0             	movsx  eax,al
10003c5b:	8d 50 d0             	lea    edx,[eax-0x30]
10003c5e:	89 d0                	mov    eax,edx
10003c60:	c1 e0 02             	shl    eax,0x2
10003c63:	01 d0                	add    eax,edx
10003c65:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
10003c6c:	01 d0                	add    eax,edx
10003c6e:	c1 e0 02             	shl    eax,0x2
10003c71:	01 c1                	add    ecx,eax
10003c73:	8a 85 58 ff ff ff    	mov    al,BYTE PTR [ebp-0xa8]
10003c79:	0f be c0             	movsx  eax,al
10003c7c:	8d 50 d0             	lea    edx,[eax-0x30]
10003c7f:	89 d0                	mov    eax,edx
10003c81:	c1 e0 02             	shl    eax,0x2
10003c84:	01 d0                	add    eax,edx
10003c86:	01 c0                	add    eax,eax
10003c88:	8d 14 01             	lea    edx,[ecx+eax*1]
10003c8b:	8a 85 59 ff ff ff    	mov    al,BYTE PTR [ebp-0xa7]
10003c91:	0f be c0             	movsx  eax,al
10003c94:	83 e8 30             	sub    eax,0x30
10003c97:	01 d0                	add    eax,edx
10003c99:	89 45 b0             	mov    DWORD PTR [ebp-0x50],eax
10003c9c:	8a 85 5b ff ff ff    	mov    al,BYTE PTR [ebp-0xa5]
10003ca2:	0f be c0             	movsx  eax,al
10003ca5:	8d 50 d0             	lea    edx,[eax-0x30]
10003ca8:	89 d0                	mov    eax,edx
10003caa:	c1 e0 02             	shl    eax,0x2
10003cad:	01 d0                	add    eax,edx
10003caf:	01 c0                	add    eax,eax
10003cb1:	89 c2                	mov    edx,eax
10003cb3:	8a 85 5c ff ff ff    	mov    al,BYTE PTR [ebp-0xa4]
10003cb9:	0f be c0             	movsx  eax,al
10003cbc:	83 e8 30             	sub    eax,0x30
10003cbf:	01 d0                	add    eax,edx
10003cc1:	89 45 ac             	mov    DWORD PTR [ebp-0x54],eax
10003cc4:	8a 85 5e ff ff ff    	mov    al,BYTE PTR [ebp-0xa2]
10003cca:	0f be c0             	movsx  eax,al
10003ccd:	8d 50 d0             	lea    edx,[eax-0x30]
10003cd0:	89 d0                	mov    eax,edx
10003cd2:	c1 e0 02             	shl    eax,0x2
10003cd5:	01 d0                	add    eax,edx
10003cd7:	01 c0                	add    eax,eax
10003cd9:	89 c2                	mov    edx,eax
10003cdb:	8a 85 5f ff ff ff    	mov    al,BYTE PTR [ebp-0xa1]
10003ce1:	0f be c0             	movsx  eax,al
10003ce4:	83 e8 30             	sub    eax,0x30
10003ce7:	01 d0                	add    eax,edx
10003ce9:	89 45 a8             	mov    DWORD PTR [ebp-0x58],eax
10003cec:	8a 85 61 ff ff ff    	mov    al,BYTE PTR [ebp-0x9f]
10003cf2:	0f be c0             	movsx  eax,al
10003cf5:	8d 50 d0             	lea    edx,[eax-0x30]
10003cf8:	89 d0                	mov    eax,edx
10003cfa:	c1 e0 02             	shl    eax,0x2
10003cfd:	01 d0                	add    eax,edx
10003cff:	01 c0                	add    eax,eax
10003d01:	89 c2                	mov    edx,eax
10003d03:	8a 85 62 ff ff ff    	mov    al,BYTE PTR [ebp-0x9e]
10003d09:	0f be c0             	movsx  eax,al
10003d0c:	83 e8 30             	sub    eax,0x30
10003d0f:	01 d0                	add    eax,edx
10003d11:	89 45 a4             	mov    DWORD PTR [ebp-0x5c],eax
10003d14:	8b 45 b0             	mov    eax,DWORD PTR [ebp-0x50]
10003d17:	83 e0 03             	and    eax,0x3
10003d1a:	85 c0                	test   eax,eax
10003d1c:	75 1f                	jne    10003d3d <firstRun(bool)+0x13ab>
10003d1e:	8b 45 b0             	mov    eax,DWORD PTR [ebp-0x50]
10003d21:	b9 19 00 00 00       	mov    ecx,0x19
10003d26:	99                   	cdq    
10003d27:	f7 f9                	idiv   ecx
10003d29:	89 d0                	mov    eax,edx
10003d2b:	85 c0                	test   eax,eax
10003d2d:	75 0a                	jne    10003d39 <firstRun(bool)+0x13a7>
10003d2f:	8b 45 b0             	mov    eax,DWORD PTR [ebp-0x50]
10003d32:	83 e0 0f             	and    eax,0xf
10003d35:	85 c0                	test   eax,eax
10003d37:	75 04                	jne    10003d3d <firstRun(bool)+0x13ab>
10003d39:	b0 01                	mov    al,0x1
10003d3b:	eb 02                	jmp    10003d3f <firstRun(bool)+0x13ad>
10003d3d:	b0 00                	mov    al,0x0
10003d3f:	88 45 a3             	mov    BYTE PTR [ebp-0x5d],al
10003d42:	83 7d b8 1f          	cmp    DWORD PTR [ebp-0x48],0x1f
10003d46:	7e 0c                	jle    10003d54 <firstRun(bool)+0x13c2>
10003d48:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10003d4f:	e9 cd 00 00 00       	jmp    10003e21 <firstRun(bool)+0x148f>
10003d54:	83 7d b8 1e          	cmp    DWORD PTR [ebp-0x48],0x1e
10003d58:	7e 2a                	jle    10003d84 <firstRun(bool)+0x13f2>
10003d5a:	83 7d b4 02          	cmp    DWORD PTR [ebp-0x4c],0x2
10003d5e:	74 18                	je     10003d78 <firstRun(bool)+0x13e6>
10003d60:	83 7d b4 04          	cmp    DWORD PTR [ebp-0x4c],0x4
10003d64:	74 12                	je     10003d78 <firstRun(bool)+0x13e6>
10003d66:	83 7d b4 06          	cmp    DWORD PTR [ebp-0x4c],0x6
10003d6a:	74 0c                	je     10003d78 <firstRun(bool)+0x13e6>
10003d6c:	83 7d b4 09          	cmp    DWORD PTR [ebp-0x4c],0x9
10003d70:	74 06                	je     10003d78 <firstRun(bool)+0x13e6>
10003d72:	83 7d b4 0b          	cmp    DWORD PTR [ebp-0x4c],0xb
10003d76:	75 0c                	jne    10003d84 <firstRun(bool)+0x13f2>
10003d78:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10003d7f:	e9 9d 00 00 00       	jmp    10003e21 <firstRun(bool)+0x148f>
10003d84:	83 7d b8 1d          	cmp    DWORD PTR [ebp-0x48],0x1d
10003d88:	75 19                	jne    10003da3 <firstRun(bool)+0x1411>
10003d8a:	83 7d b4 02          	cmp    DWORD PTR [ebp-0x4c],0x2
10003d8e:	75 13                	jne    10003da3 <firstRun(bool)+0x1411>
10003d90:	8a 45 a3             	mov    al,BYTE PTR [ebp-0x5d]
10003d93:	83 f0 01             	xor    eax,0x1
10003d96:	84 c0                	test   al,al
10003d98:	74 09                	je     10003da3 <firstRun(bool)+0x1411>
10003d9a:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10003da1:	eb 7e                	jmp    10003e21 <firstRun(bool)+0x148f>
10003da3:	83 7d b8 00          	cmp    DWORD PTR [ebp-0x48],0x0
10003da7:	75 09                	jne    10003db2 <firstRun(bool)+0x1420>
10003da9:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10003db0:	eb 6f                	jmp    10003e21 <firstRun(bool)+0x148f>
10003db2:	83 7d b4 0c          	cmp    DWORD PTR [ebp-0x4c],0xc
10003db6:	7f 06                	jg     10003dbe <firstRun(bool)+0x142c>
10003db8:	83 7d b4 00          	cmp    DWORD PTR [ebp-0x4c],0x0
10003dbc:	75 09                	jne    10003dc7 <firstRun(bool)+0x1435>
10003dbe:	c7 45 e4 03 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x3
10003dc5:	eb 5a                	jmp    10003e21 <firstRun(bool)+0x148f>
10003dc7:	81 7d b0 b7 0b 00 00 	cmp    DWORD PTR [ebp-0x50],0xbb7
10003dce:	7f 09                	jg     10003dd9 <firstRun(bool)+0x1447>
10003dd0:	81 7d b0 b1 07 00 00 	cmp    DWORD PTR [ebp-0x50],0x7b1
10003dd7:	7f 09                	jg     10003de2 <firstRun(bool)+0x1450>
10003dd9:	c7 45 e4 06 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x6
10003de0:	eb 3f                	jmp    10003e21 <firstRun(bool)+0x148f>
10003de2:	83 7d ac 17          	cmp    DWORD PTR [ebp-0x54],0x17
10003de6:	7e 09                	jle    10003df1 <firstRun(bool)+0x145f>
10003de8:	c7 45 e4 0b 00 00 00 	mov    DWORD PTR [ebp-0x1c],0xb
10003def:	eb 30                	jmp    10003e21 <firstRun(bool)+0x148f>
10003df1:	83 7d a8 3b          	cmp    DWORD PTR [ebp-0x58],0x3b
10003df5:	7e 09                	jle    10003e00 <firstRun(bool)+0x146e>
10003df7:	c7 45 e4 0e 00 00 00 	mov    DWORD PTR [ebp-0x1c],0xe
10003dfe:	eb 21                	jmp    10003e21 <firstRun(bool)+0x148f>
10003e00:	83 7d a4 3b          	cmp    DWORD PTR [ebp-0x5c],0x3b
10003e04:	7e 37                	jle    10003e3d <firstRun(bool)+0x14ab>
10003e06:	c7 45 e4 11 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x11
10003e0d:	eb 12                	jmp    10003e21 <firstRun(bool)+0x148f>
10003e0f:	a0 00 00 00 00       	mov    al,ds:0x0	10003e10: R_386_32	installKey
10003e14:	3c 1b                	cmp    al,0x1b
10003e16:	0f 94 c0             	sete   al
10003e19:	84 c0                	test   al,al
10003e1b:	0f 85 90 ec ff ff    	jne    10002ab1 <firstRun(bool)+0x11f>
10003e21:	83 ec 0c             	sub    esp,0xc
10003e24:	68 4c 04 00 00       	push   0x44c
10003e29:	e8 fc ff ff ff       	call   10003e2a <firstRun(bool)+0x1498>	10003e2a: R_386_PC32	milliTenthSleep(unsigned int)
10003e2e:	83 c4 10             	add    esp,0x10
10003e31:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10003e33: R_386_32	installKey
10003e38:	e9 4b f8 ff ff       	jmp    10003688 <firstRun(bool)+0xcf6>
10003e3d:	90                   	nop
10003e3e:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10003e40: R_386_32	installKey
10003e45:	83 ec 0c             	sub    esp,0xc
10003e48:	68 a0 0f 00 00       	push   0xfa0
10003e4d:	e8 fc ff ff ff       	call   10003e4e <firstRun(bool)+0x14bc>	10003e4e: R_386_PC32	milliTenthSleep(unsigned int)
10003e52:	83 c4 10             	add    esp,0x10
10003e55:	eb 01                	jmp    10003e58 <firstRun(bool)+0x14c6>
10003e57:	90                   	nop
10003e58:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10003e5a: R_386_32	installKey
10003e5f:	e8 fc ff ff ff       	call   10003e60 <firstRun(bool)+0x14ce>	10003e60: R_386_PC32	drawBootScreen()
10003e64:	83 ec 0c             	sub    esp,0xc
10003e67:	68 4b bc 00 10       	push   0x1000bc4b	10003e68: R_386_32	.text
10003e6c:	6a 14                	push   0x14
10003e6e:	6a 3c                	push   0x3c
10003e70:	6a 01                	push   0x1
10003e72:	6a 12                	push   0x12
10003e74:	e8 fc ff ff ff       	call   10003e75 <firstRun(bool)+0x14e3>	10003e75: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10003e79:	83 c4 20             	add    esp,0x20
10003e7c:	a1 00 00 00 00       	mov    eax,ds:0x0	10003e7d: R_386_32	term
10003e81:	83 ec 04             	sub    esp,0x4
10003e84:	6a 04                	push   0x4
10003e86:	6a 14                	push   0x14
10003e88:	50                   	push   eax
10003e89:	e8 fc ff ff ff       	call   10003e8a <firstRun(bool)+0x14f8>	10003e8a: R_386_PC32	VgaText::setCursor(int, int)
10003e8e:	83 c4 10             	add    esp,0x10
10003e91:	a1 00 00 00 00       	mov    eax,ds:0x0	10003e92: R_386_32	term
10003e96:	83 ec 08             	sub    esp,0x8
10003e99:	68 d8 bc 00 10       	push   0x1000bcd8	10003e9a: R_386_32	.text
10003e9e:	50                   	push   eax
10003e9f:	e8 fc ff ff ff       	call   10003ea0 <firstRun(bool)+0x150e>	10003ea0: R_386_PC32	VgaText::puts(char const*)
10003ea4:	83 c4 10             	add    esp,0x10
10003ea7:	a1 00 00 00 00       	mov    eax,ds:0x0	10003ea8: R_386_32	term
10003eac:	83 ec 04             	sub    esp,0x4
10003eaf:	6a 18                	push   0x18
10003eb1:	6a 11                	push   0x11
10003eb3:	50                   	push   eax
10003eb4:	e8 fc ff ff ff       	call   10003eb5 <firstRun(bool)+0x1523>	10003eb5: R_386_PC32	VgaText::setCursor(int, int)
10003eb9:	83 c4 10             	add    esp,0x10
10003ebc:	a1 00 00 00 00       	mov    eax,ds:0x0	10003ebd: R_386_32	term
10003ec1:	6a 0b                	push   0xb
10003ec3:	6a 03                	push   0x3
10003ec5:	68 c2 bc 00 10       	push   0x1000bcc2	10003ec6: R_386_32	.text
10003eca:	50                   	push   eax
10003ecb:	e8 fc ff ff ff       	call   10003ecc <firstRun(bool)+0x153a>	10003ecc: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10003ed0:	83 c4 10             	add    esp,0x10
10003ed3:	e8 fc ff ff ff       	call   10003ed4 <firstRun(bool)+0x1542>	10003ed4: R_386_PC32	loadTimezoneStrings()
10003ed8:	89 45 9c             	mov    DWORD PTR [ebp-0x64],eax
10003edb:	b8 d2 00 00 00       	mov    eax,0xd2
10003ee0:	99                   	cdq    
10003ee1:	f7 7d 9c             	idiv   DWORD PTR [ebp-0x64]
10003ee4:	89 45 98             	mov    DWORD PTR [ebp-0x68],eax
10003ee7:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [ebp-0x2c],0x0
10003eee:	83 7d d4 0d          	cmp    DWORD PTR [ebp-0x2c],0xd
10003ef2:	7f 32                	jg     10003f26 <firstRun(bool)+0x1594>
10003ef4:	a1 00 00 00 00       	mov    eax,ds:0x0	10003ef5: R_386_32	term
10003ef9:	8b 55 d4             	mov    edx,DWORD PTR [ebp-0x2c]
10003efc:	83 c2 07             	add    edx,0x7
10003eff:	83 ec 04             	sub    esp,0x4
10003f02:	52                   	push   edx
10003f03:	6a 4b                	push   0x4b
10003f05:	50                   	push   eax
10003f06:	e8 fc ff ff ff       	call   10003f07 <firstRun(bool)+0x1575>	10003f07: R_386_PC32	VgaText::setCursor(int, int)
10003f0b:	83 c4 10             	add    esp,0x10
10003f0e:	a1 00 00 00 00       	mov    eax,ds:0x0	10003f0f: R_386_32	term
10003f13:	83 ec 08             	sub    esp,0x8
10003f16:	6a 20                	push   0x20
10003f18:	50                   	push   eax
10003f19:	e8 fc ff ff ff       	call   10003f1a <firstRun(bool)+0x1588>	10003f1a: R_386_PC32	VgaText::putchar(char)
10003f1e:	83 c4 10             	add    esp,0x10
10003f21:	ff 45 d4             	inc    DWORD PTR [ebp-0x2c]
10003f24:	eb c8                	jmp    10003eee <firstRun(bool)+0x155c>
10003f26:	c7 45 d0 00 00 00 00 	mov    DWORD PTR [ebp-0x30],0x0
10003f2d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10003f30:	3b 45 98             	cmp    eax,DWORD PTR [ebp-0x68]
10003f33:	7d 48                	jge    10003f7d <firstRun(bool)+0x15eb>
10003f35:	8b 0d 00 00 00 00    	mov    ecx,DWORD PTR ds:0x0	10003f37: R_386_32	term
10003f3b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10003f3e:	8d 58 07             	lea    ebx,[eax+0x7]
10003f41:	8b 55 dc             	mov    edx,DWORD PTR [ebp-0x24]
10003f44:	89 d0                	mov    eax,edx
10003f46:	01 c0                	add    eax,eax
10003f48:	01 d0                	add    eax,edx
10003f4a:	01 c0                	add    eax,eax
10003f4c:	01 d0                	add    eax,edx
10003f4e:	01 c0                	add    eax,eax
10003f50:	99                   	cdq    
10003f51:	f7 7d 9c             	idiv   DWORD PTR [ebp-0x64]
10003f54:	01 d8                	add    eax,ebx
10003f56:	83 ec 04             	sub    esp,0x4
10003f59:	50                   	push   eax
10003f5a:	6a 4b                	push   0x4b
10003f5c:	51                   	push   ecx
10003f5d:	e8 fc ff ff ff       	call   10003f5e <firstRun(bool)+0x15cc>	10003f5e: R_386_PC32	VgaText::setCursor(int, int)
10003f62:	83 c4 10             	add    esp,0x10
10003f65:	a1 00 00 00 00       	mov    eax,ds:0x0	10003f66: R_386_32	term
10003f6a:	83 ec 08             	sub    esp,0x8
10003f6d:	6a db                	push   0xffffffdb
10003f6f:	50                   	push   eax
10003f70:	e8 fc ff ff ff       	call   10003f71 <firstRun(bool)+0x15df>	10003f71: R_386_PC32	VgaText::putchar(char)
10003f75:	83 c4 10             	add    esp,0x10
10003f78:	ff 45 d0             	inc    DWORD PTR [ebp-0x30]
10003f7b:	eb b0                	jmp    10003f2d <firstRun(bool)+0x159b>
10003f7d:	a1 00 00 00 00       	mov    eax,ds:0x0	10003f7e: R_386_32	term
10003f82:	83 ec 04             	sub    esp,0x4
10003f85:	6a 06                	push   0x6
10003f87:	6a 4b                	push   0x4b
10003f89:	50                   	push   eax
10003f8a:	e8 fc ff ff ff       	call   10003f8b <firstRun(bool)+0x15f9>	10003f8b: R_386_PC32	VgaText::setCursor(int, int)
10003f8f:	83 c4 10             	add    esp,0x10
10003f92:	a1 00 00 00 00       	mov    eax,ds:0x0	10003f93: R_386_32	term
10003f97:	83 ec 08             	sub    esp,0x8
10003f9a:	6a 1e                	push   0x1e
10003f9c:	50                   	push   eax
10003f9d:	e8 fc ff ff ff       	call   10003f9e <firstRun(bool)+0x160c>	10003f9e: R_386_PC32	VgaText::putchar(char)
10003fa2:	83 c4 10             	add    esp,0x10
10003fa5:	a1 00 00 00 00       	mov    eax,ds:0x0	10003fa6: R_386_32	term
10003faa:	83 ec 04             	sub    esp,0x4
10003fad:	6a 14                	push   0x14
10003faf:	6a 4b                	push   0x4b
10003fb1:	50                   	push   eax
10003fb2:	e8 fc ff ff ff       	call   10003fb3 <firstRun(bool)+0x1621>	10003fb3: R_386_PC32	VgaText::setCursor(int, int)
10003fb7:	83 c4 10             	add    esp,0x10
10003fba:	a1 00 00 00 00       	mov    eax,ds:0x0	10003fbb: R_386_32	term
10003fbf:	83 ec 08             	sub    esp,0x8
10003fc2:	6a 1f                	push   0x1f
10003fc4:	50                   	push   eax
10003fc5:	e8 fc ff ff ff       	call   10003fc6 <firstRun(bool)+0x1634>	10003fc6: R_386_PC32	VgaText::putchar(char)
10003fca:	83 c4 10             	add    esp,0x10
10003fcd:	c7 45 cc 00 00 00 00 	mov    DWORD PTR [ebp-0x34],0x0
10003fd4:	83 7d cc 0e          	cmp    DWORD PTR [ebp-0x34],0xe
10003fd8:	7f 7e                	jg     10004058 <firstRun(bool)+0x16c6>
10003fda:	a1 00 00 00 00       	mov    eax,ds:0x0	10003fdb: R_386_32	term
10003fdf:	8b 55 cc             	mov    edx,DWORD PTR [ebp-0x34]
10003fe2:	83 c2 06             	add    edx,0x6
10003fe5:	83 ec 04             	sub    esp,0x4
10003fe8:	52                   	push   edx
10003fe9:	6a 14                	push   0x14
10003feb:	50                   	push   eax
10003fec:	e8 fc ff ff ff       	call   10003fed <firstRun(bool)+0x165b>	10003fed: R_386_PC32	VgaText::setCursor(int, int)
10003ff1:	83 c4 10             	add    esp,0x10
10003ff4:	a1 00 00 00 00       	mov    eax,ds:0x0	10003ff5: R_386_32	term
10003ff9:	8b 4d dc             	mov    ecx,DWORD PTR [ebp-0x24]
10003ffc:	8b 55 cc             	mov    edx,DWORD PTR [ebp-0x34]
10003fff:	01 d1                	add    ecx,edx
10004001:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10004003: R_386_32	tzsel
10004007:	39 d1                	cmp    ecx,edx
10004009:	75 07                	jne    10004012 <firstRun(bool)+0x1680>
1000400b:	bb 00 00 00 00       	mov    ebx,0x0
10004010:	eb 05                	jmp    10004017 <firstRun(bool)+0x1685>
10004012:	bb 0f 00 00 00       	mov    ebx,0xf
10004017:	8b 4d dc             	mov    ecx,DWORD PTR [ebp-0x24]
1000401a:	8b 55 cc             	mov    edx,DWORD PTR [ebp-0x34]
1000401d:	01 d1                	add    ecx,edx
1000401f:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10004021: R_386_32	tzsel
10004025:	39 d1                	cmp    ecx,edx
10004027:	75 07                	jne    10004030 <firstRun(bool)+0x169e>
10004029:	b9 0f 00 00 00       	mov    ecx,0xf
1000402e:	eb 05                	jmp    10004035 <firstRun(bool)+0x16a3>
10004030:	b9 00 00 00 00       	mov    ecx,0x0
10004035:	8b 75 dc             	mov    esi,DWORD PTR [ebp-0x24]
10004038:	8b 55 cc             	mov    edx,DWORD PTR [ebp-0x34]
1000403b:	01 f2                	add    edx,esi
1000403d:	8b 14 95 00 00 00 00 	mov    edx,DWORD PTR [edx*4+0x0]	10004040: R_386_32	timezoneStrings
10004044:	53                   	push   ebx
10004045:	51                   	push   ecx
10004046:	52                   	push   edx
10004047:	50                   	push   eax
10004048:	e8 fc ff ff ff       	call   10004049 <firstRun(bool)+0x16b7>	10004049: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
1000404d:	83 c4 10             	add    esp,0x10
10004050:	ff 45 cc             	inc    DWORD PTR [ebp-0x34]
10004053:	e9 7c ff ff ff       	jmp    10003fd4 <firstRun(bool)+0x1642>
10004058:	a0 00 00 00 00       	mov    al,ds:0x0	10004059: R_386_32	installKey
1000405d:	84 c0                	test   al,al
1000405f:	0f 94 c0             	sete   al
10004062:	84 c0                	test   al,al
10004064:	74 02                	je     10004068 <firstRun(bool)+0x16d6>
10004066:	eb f0                	jmp    10004058 <firstRun(bool)+0x16c6>
10004068:	a1 00 00 00 00       	mov    eax,ds:0x0	10004069: R_386_32	term
1000406d:	05 82 00 00 00       	add    eax,0x82
10004072:	83 ec 04             	sub    esp,0x4
10004075:	6a 04                	push   0x4
10004077:	6a 00                	push   0x0
10004079:	50                   	push   eax
1000407a:	e8 fc ff ff ff       	call   1000407b <firstRun(bool)+0x16e9>	1000407b: R_386_PC32	memset
1000407f:	83 c4 10             	add    esp,0x10
10004082:	a1 00 00 00 00       	mov    eax,ds:0x0	10004083: R_386_32	term
10004087:	05 02 01 00 00       	add    eax,0x102
1000408c:	83 ec 04             	sub    esp,0x4
1000408f:	6a 04                	push   0x4
10004091:	6a 00                	push   0x0
10004093:	50                   	push   eax
10004094:	e8 fc ff ff ff       	call   10004095 <firstRun(bool)+0x1703>	10004095: R_386_PC32	memset
10004099:	83 c4 10             	add    esp,0x10
1000409c:	a0 00 00 00 00       	mov    al,ds:0x0	1000409d: R_386_32	installKey
100040a1:	3c 01                	cmp    al,0x1
100040a3:	0f 94 c0             	sete   al
100040a6:	84 c0                	test   al,al
100040a8:	74 41                	je     100040eb <firstRun(bool)+0x1759>
100040aa:	a1 00 00 00 00       	mov    eax,ds:0x0	100040ab: R_386_32	tzsel
100040af:	48                   	dec    eax
100040b0:	a3 00 00 00 00       	mov    ds:0x0,eax	100040b1: R_386_32	tzsel
100040b5:	a1 00 00 00 00       	mov    eax,ds:0x0	100040b6: R_386_32	tzsel
100040ba:	2b 45 dc             	sub    eax,DWORD PTR [ebp-0x24]
100040bd:	83 f8 04             	cmp    eax,0x4
100040c0:	7f 03                	jg     100040c5 <firstRun(bool)+0x1733>
100040c2:	ff 4d dc             	dec    DWORD PTR [ebp-0x24]
100040c5:	a1 00 00 00 00       	mov    eax,ds:0x0	100040c6: R_386_32	tzsel
100040ca:	85 c0                	test   eax,eax
100040cc:	79 0a                	jns    100040d8 <firstRun(bool)+0x1746>
100040ce:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	100040d0: R_386_32	tzsel
100040d8:	83 7d dc 00          	cmp    DWORD PTR [ebp-0x24],0x0
100040dc:	0f 89 82 00 00 00    	jns    10004164 <firstRun(bool)+0x17d2>
100040e2:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [ebp-0x24],0x0
100040e9:	eb 79                	jmp    10004164 <firstRun(bool)+0x17d2>
100040eb:	a0 00 00 00 00       	mov    al,ds:0x0	100040ec: R_386_32	installKey
100040f0:	3c 02                	cmp    al,0x2
100040f2:	0f 94 c0             	sete   al
100040f5:	84 c0                	test   al,al
100040f7:	74 4b                	je     10004144 <firstRun(bool)+0x17b2>
100040f9:	a1 00 00 00 00       	mov    eax,ds:0x0	100040fa: R_386_32	tzsel
100040fe:	40                   	inc    eax
100040ff:	a3 00 00 00 00       	mov    ds:0x0,eax	10004100: R_386_32	tzsel
10004104:	a1 00 00 00 00       	mov    eax,ds:0x0	10004105: R_386_32	tzsel
10004109:	2b 45 dc             	sub    eax,DWORD PTR [ebp-0x24]
1000410c:	83 f8 0a             	cmp    eax,0xa
1000410f:	7e 03                	jle    10004114 <firstRun(bool)+0x1782>
10004111:	ff 45 dc             	inc    DWORD PTR [ebp-0x24]
10004114:	8b 45 9c             	mov    eax,DWORD PTR [ebp-0x64]
10004117:	8d 50 ff             	lea    edx,[eax-0x1]
1000411a:	a1 00 00 00 00       	mov    eax,ds:0x0	1000411b: R_386_32	tzsel
1000411f:	39 c2                	cmp    edx,eax
10004121:	7f 0b                	jg     1000412e <firstRun(bool)+0x179c>
10004123:	8b 45 9c             	mov    eax,DWORD PTR [ebp-0x64]
10004126:	83 e8 02             	sub    eax,0x2
10004129:	a3 00 00 00 00       	mov    ds:0x0,eax	1000412a: R_386_32	tzsel
1000412e:	8b 45 9c             	mov    eax,DWORD PTR [ebp-0x64]
10004131:	83 e8 0f             	sub    eax,0xf
10004134:	39 45 dc             	cmp    DWORD PTR [ebp-0x24],eax
10004137:	7c 2b                	jl     10004164 <firstRun(bool)+0x17d2>
10004139:	8b 45 9c             	mov    eax,DWORD PTR [ebp-0x64]
1000413c:	83 e8 10             	sub    eax,0x10
1000413f:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10004142:	eb 20                	jmp    10004164 <firstRun(bool)+0x17d2>
10004144:	a0 00 00 00 00       	mov    al,ds:0x0	10004145: R_386_32	installKey
10004149:	3c 0a                	cmp    al,0xa
1000414b:	0f 94 c0             	sete   al
1000414e:	84 c0                	test   al,al
10004150:	75 2e                	jne    10004180 <firstRun(bool)+0x17ee>
10004152:	a0 00 00 00 00       	mov    al,ds:0x0	10004153: R_386_32	installKey
10004157:	3c 1b                	cmp    al,0x1b
10004159:	0f 94 c0             	sete   al
1000415c:	84 c0                	test   al,al
1000415e:	0f 85 28 f1 ff ff    	jne    1000328c <firstRun(bool)+0x8fa>
10004164:	83 ec 0c             	sub    esp,0xc
10004167:	68 f4 01 00 00       	push   0x1f4
1000416c:	e8 fc ff ff ff       	call   1000416d <firstRun(bool)+0x17db>	1000416d: R_386_PC32	milliTenthSleep(unsigned int)
10004171:	83 c4 10             	add    esp,0x10
10004174:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004176: R_386_32	installKey
1000417b:	e9 67 fd ff ff       	jmp    10003ee7 <firstRun(bool)+0x1555>
10004180:	90                   	nop
10004181:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004183: R_386_32	installKey
10004188:	83 ec 0c             	sub    esp,0xc
1000418b:	68 a0 0f 00 00       	push   0xfa0
10004190:	e8 fc ff ff ff       	call   10004191 <firstRun(bool)+0x17ff>	10004191: R_386_PC32	milliTenthSleep(unsigned int)
10004195:	83 c4 10             	add    esp,0x10
10004198:	eb 01                	jmp    1000419b <firstRun(bool)+0x1809>
1000419a:	90                   	nop
1000419b:	e8 fc ff ff ff       	call   1000419c <firstRun(bool)+0x180a>	1000419c: R_386_PC32	drawBootScreen()
100041a0:	83 ec 0c             	sub    esp,0xc
100041a3:	68 58 1b 00 00       	push   0x1b58
100041a8:	e8 fc ff ff ff       	call   100041a9 <firstRun(bool)+0x1817>	100041a9: R_386_PC32	milliTenthSleep(unsigned int)
100041ad:	83 c4 10             	add    esp,0x10
100041b0:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100041b2: R_386_32	installKey
100041b7:	e8 fc ff ff ff       	call   100041b8 <firstRun(bool)+0x1826>	100041b8: R_386_PC32	drawBootScreen()
100041bc:	83 ec 0c             	sub    esp,0xc
100041bf:	68 0a bd 00 10       	push   0x1000bd0a	100041c0: R_386_32	.text
100041c4:	6a 10                	push   0x10
100041c6:	6a 37                	push   0x37
100041c8:	6a 03                	push   0x3
100041ca:	6a 14                	push   0x14
100041cc:	e8 fc ff ff ff       	call   100041cd <firstRun(bool)+0x183b>	100041cd: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
100041d1:	83 c4 20             	add    esp,0x20
100041d4:	a1 00 00 00 00       	mov    eax,ds:0x0	100041d5: R_386_32	term
100041d9:	83 ec 04             	sub    esp,0x4
100041dc:	6a 06                	push   0x6
100041de:	6a 16                	push   0x16
100041e0:	50                   	push   eax
100041e1:	e8 fc ff ff ff       	call   100041e2 <firstRun(bool)+0x1850>	100041e2: R_386_PC32	VgaText::setCursor(int, int)
100041e6:	83 c4 10             	add    esp,0x10
100041e9:	a1 00 00 00 00       	mov    eax,ds:0x0	100041ea: R_386_32	term
100041ee:	83 ec 08             	sub    esp,0x8
100041f1:	68 1c bd 00 10       	push   0x1000bd1c	100041f2: R_386_32	.text
100041f6:	50                   	push   eax
100041f7:	e8 fc ff ff ff       	call   100041f8 <firstRun(bool)+0x1866>	100041f8: R_386_PC32	VgaText::puts(char const*)
100041fc:	83 c4 10             	add    esp,0x10
100041ff:	a1 00 00 00 00       	mov    eax,ds:0x0	10004200: R_386_32	term
10004204:	83 ec 04             	sub    esp,0x4
10004207:	6a 07                	push   0x7
10004209:	6a 16                	push   0x16
1000420b:	50                   	push   eax
1000420c:	e8 fc ff ff ff       	call   1000420d <firstRun(bool)+0x187b>	1000420d: R_386_PC32	VgaText::setCursor(int, int)
10004211:	83 c4 10             	add    esp,0x10
10004214:	a1 00 00 00 00       	mov    eax,ds:0x0	10004215: R_386_32	term
10004219:	83 ec 08             	sub    esp,0x8
1000421c:	68 50 bd 00 10       	push   0x1000bd50	1000421d: R_386_32	.text
10004221:	50                   	push   eax
10004222:	e8 fc ff ff ff       	call   10004223 <firstRun(bool)+0x1891>	10004223: R_386_PC32	VgaText::puts(char const*)
10004227:	83 c4 10             	add    esp,0x10
1000422a:	a1 00 00 00 00       	mov    eax,ds:0x0	1000422b: R_386_32	term
1000422f:	83 ec 04             	sub    esp,0x4
10004232:	6a 18                	push   0x18
10004234:	6a 11                	push   0x11
10004236:	50                   	push   eax
10004237:	e8 fc ff ff ff       	call   10004238 <firstRun(bool)+0x18a6>	10004238: R_386_PC32	VgaText::setCursor(int, int)
1000423c:	83 c4 10             	add    esp,0x10
1000423f:	a1 00 00 00 00       	mov    eax,ds:0x0	10004240: R_386_32	term
10004244:	6a 0b                	push   0xb
10004246:	6a 03                	push   0x3
10004248:	68 c2 bc 00 10       	push   0x1000bcc2	10004249: R_386_32	.text
1000424d:	50                   	push   eax
1000424e:	e8 fc ff ff ff       	call   1000424f <firstRun(bool)+0x18bd>	1000424f: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10004253:	83 c4 10             	add    esp,0x10
10004256:	c7 45 9c 03 00 00 00 	mov    DWORD PTR [ebp-0x64],0x3
1000425d:	8d 85 3c ff ff ff    	lea    eax,[ebp-0xc4]
10004263:	bb c8 bf 00 10       	mov    ebx,0x1000bfc8	10004264: R_386_32	.text
10004268:	ba 03 00 00 00       	mov    edx,0x3
1000426d:	89 c7                	mov    edi,eax
1000426f:	89 de                	mov    esi,ebx
10004271:	89 d1                	mov    ecx,edx
10004273:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10004275:	c7 45 c8 00 00 00 00 	mov    DWORD PTR [ebp-0x38],0x0
1000427c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000427f:	3b 45 9c             	cmp    eax,DWORD PTR [ebp-0x64]
10004282:	7d 68                	jge    100042ec <firstRun(bool)+0x195a>
10004284:	a1 00 00 00 00       	mov    eax,ds:0x0	10004285: R_386_32	term
10004289:	8b 55 c8             	mov    edx,DWORD PTR [ebp-0x38]
1000428c:	83 c2 09             	add    edx,0x9
1000428f:	83 ec 04             	sub    esp,0x4
10004292:	52                   	push   edx
10004293:	6a 16                	push   0x16
10004295:	50                   	push   eax
10004296:	e8 fc ff ff ff       	call   10004297 <firstRun(bool)+0x1905>	10004297: R_386_PC32	VgaText::setCursor(int, int)
1000429b:	83 c4 10             	add    esp,0x10
1000429e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000429f: R_386_32	term
100042a3:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100042a5: R_386_32	modesel
100042a9:	39 55 c8             	cmp    DWORD PTR [ebp-0x38],edx
100042ac:	75 07                	jne    100042b5 <firstRun(bool)+0x1923>
100042ae:	bb 00 00 00 00       	mov    ebx,0x0
100042b3:	eb 05                	jmp    100042ba <firstRun(bool)+0x1928>
100042b5:	bb 0f 00 00 00       	mov    ebx,0xf
100042ba:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100042bc: R_386_32	modesel
100042c0:	39 55 c8             	cmp    DWORD PTR [ebp-0x38],edx
100042c3:	75 07                	jne    100042cc <firstRun(bool)+0x193a>
100042c5:	b9 0f 00 00 00       	mov    ecx,0xf
100042ca:	eb 05                	jmp    100042d1 <firstRun(bool)+0x193f>
100042cc:	b9 00 00 00 00       	mov    ecx,0x0
100042d1:	8b 55 c8             	mov    edx,DWORD PTR [ebp-0x38]
100042d4:	8b 94 95 3c ff ff ff 	mov    edx,DWORD PTR [ebp+edx*4-0xc4]
100042db:	53                   	push   ebx
100042dc:	51                   	push   ecx
100042dd:	52                   	push   edx
100042de:	50                   	push   eax
100042df:	e8 fc ff ff ff       	call   100042e0 <firstRun(bool)+0x194e>	100042e0: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
100042e4:	83 c4 10             	add    esp,0x10
100042e7:	ff 45 c8             	inc    DWORD PTR [ebp-0x38]
100042ea:	eb 90                	jmp    1000427c <firstRun(bool)+0x18ea>
100042ec:	a0 00 00 00 00       	mov    al,ds:0x0	100042ed: R_386_32	installKey
100042f1:	84 c0                	test   al,al
100042f3:	0f 94 c0             	sete   al
100042f6:	84 c0                	test   al,al
100042f8:	74 02                	je     100042fc <firstRun(bool)+0x196a>
100042fa:	eb f0                	jmp    100042ec <firstRun(bool)+0x195a>
100042fc:	a1 00 00 00 00       	mov    eax,ds:0x0	100042fd: R_386_32	term
10004301:	05 82 00 00 00       	add    eax,0x82
10004306:	83 ec 04             	sub    esp,0x4
10004309:	6a 04                	push   0x4
1000430b:	6a 00                	push   0x0
1000430d:	50                   	push   eax
1000430e:	e8 fc ff ff ff       	call   1000430f <firstRun(bool)+0x197d>	1000430f: R_386_PC32	memset
10004313:	83 c4 10             	add    esp,0x10
10004316:	a1 00 00 00 00       	mov    eax,ds:0x0	10004317: R_386_32	term
1000431b:	05 02 01 00 00       	add    eax,0x102
10004320:	83 ec 04             	sub    esp,0x4
10004323:	6a 04                	push   0x4
10004325:	6a 00                	push   0x0
10004327:	50                   	push   eax
10004328:	e8 fc ff ff ff       	call   10004329 <firstRun(bool)+0x1997>	10004329: R_386_PC32	memset
1000432d:	83 c4 10             	add    esp,0x10
10004330:	a0 00 00 00 00       	mov    al,ds:0x0	10004331: R_386_32	installKey
10004335:	3c 01                	cmp    al,0x1
10004337:	0f 94 c0             	sete   al
1000433a:	84 c0                	test   al,al
1000433c:	74 20                	je     1000435e <firstRun(bool)+0x19cc>
1000433e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000433f: R_386_32	modesel
10004343:	48                   	dec    eax
10004344:	a3 00 00 00 00       	mov    ds:0x0,eax	10004345: R_386_32	modesel
10004349:	a1 00 00 00 00       	mov    eax,ds:0x0	1000434a: R_386_32	modesel
1000434e:	85 c0                	test   eax,eax
10004350:	79 5a                	jns    100043ac <firstRun(bool)+0x1a1a>
10004352:	c7 05 00 00 00 00 00 00 00 00 	mov    DWORD PTR ds:0x0,0x0	10004354: R_386_32	modesel
1000435c:	eb 4e                	jmp    100043ac <firstRun(bool)+0x1a1a>
1000435e:	a0 00 00 00 00       	mov    al,ds:0x0	1000435f: R_386_32	installKey
10004363:	3c 02                	cmp    al,0x2
10004365:	0f 94 c0             	sete   al
10004368:	84 c0                	test   al,al
1000436a:	74 20                	je     1000438c <firstRun(bool)+0x19fa>
1000436c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000436d: R_386_32	modesel
10004371:	40                   	inc    eax
10004372:	a3 00 00 00 00       	mov    ds:0x0,eax	10004373: R_386_32	modesel
10004377:	a1 00 00 00 00       	mov    eax,ds:0x0	10004378: R_386_32	modesel
1000437c:	39 45 9c             	cmp    DWORD PTR [ebp-0x64],eax
1000437f:	7f 2b                	jg     100043ac <firstRun(bool)+0x1a1a>
10004381:	8b 45 9c             	mov    eax,DWORD PTR [ebp-0x64]
10004384:	48                   	dec    eax
10004385:	a3 00 00 00 00       	mov    ds:0x0,eax	10004386: R_386_32	modesel
1000438a:	eb 20                	jmp    100043ac <firstRun(bool)+0x1a1a>
1000438c:	a0 00 00 00 00       	mov    al,ds:0x0	1000438d: R_386_32	installKey
10004391:	3c 0a                	cmp    al,0xa
10004393:	0f 94 c0             	sete   al
10004396:	84 c0                	test   al,al
10004398:	75 2e                	jne    100043c8 <firstRun(bool)+0x1a36>
1000439a:	a0 00 00 00 00       	mov    al,ds:0x0	1000439b: R_386_32	installKey
1000439f:	3c 1b                	cmp    al,0x1b
100043a1:	0f 94 c0             	sete   al
100043a4:	84 c0                	test   al,al
100043a6:	0f 85 ab fa ff ff    	jne    10003e57 <firstRun(bool)+0x14c5>
100043ac:	83 ec 0c             	sub    esp,0xc
100043af:	68 f4 01 00 00       	push   0x1f4
100043b4:	e8 fc ff ff ff       	call   100043b5 <firstRun(bool)+0x1a23>	100043b5: R_386_PC32	milliTenthSleep(unsigned int)
100043b9:	83 c4 10             	add    esp,0x10
100043bc:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100043be: R_386_32	installKey
100043c3:	e9 ad fe ff ff       	jmp    10004275 <firstRun(bool)+0x18e3>
100043c8:	90                   	nop
100043c9:	80 bd 24 ff ff ff 00 	cmp    BYTE PTR [ebp-0xdc],0x0
100043d0:	0f 84 ff 00 00 00    	je     100044d5 <firstRun(bool)+0x1b43>
100043d6:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100043d8: R_386_32	showSidebar
100043dd:	a1 00 00 00 00       	mov    eax,ds:0x0	100043de: R_386_32	term
100043e2:	83 ec 0c             	sub    esp,0xc
100043e5:	50                   	push   eax
100043e6:	e8 fc ff ff ff       	call   100043e7 <firstRun(bool)+0x1a55>	100043e7: R_386_PC32	setActiveTerminal(VgaText*)
100043eb:	83 c4 10             	add    esp,0x10
100043ee:	e8 fc ff ff ff       	call   100043ef <firstRun(bool)+0x1a5d>	100043ef: R_386_PC32	drawBootScreen()
100043f3:	83 ec 0c             	sub    esp,0xc
100043f6:	68 85 bd 00 10       	push   0x1000bd85	100043f7: R_386_32	.text
100043fb:	6a 0d                	push   0xd
100043fd:	6a 32                	push   0x32
100043ff:	6a 05                	push   0x5
10004401:	6a 16                	push   0x16
10004403:	e8 fc ff ff ff       	call   10004404 <firstRun(bool)+0x1a72>	10004404: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10004408:	83 c4 20             	add    esp,0x20
1000440b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000440c: R_386_32	term
10004410:	83 ec 04             	sub    esp,0x4
10004413:	6a 08                	push   0x8
10004415:	6a 18                	push   0x18
10004417:	50                   	push   eax
10004418:	e8 fc ff ff ff       	call   10004419 <firstRun(bool)+0x1a87>	10004419: R_386_PC32	VgaText::setCursor(int, int)
1000441d:	83 c4 10             	add    esp,0x10
10004420:	a1 00 00 00 00       	mov    eax,ds:0x0	10004421: R_386_32	term
10004425:	83 ec 08             	sub    esp,0x8
10004428:	68 9c bd 00 10       	push   0x1000bd9c	10004429: R_386_32	.text
1000442d:	50                   	push   eax
1000442e:	e8 fc ff ff ff       	call   1000442f <firstRun(bool)+0x1a9d>	1000442f: R_386_PC32	VgaText::puts(char const*)
10004433:	83 c4 10             	add    esp,0x10
10004436:	a1 00 00 00 00       	mov    eax,ds:0x0	10004437: R_386_32	term
1000443b:	83 ec 04             	sub    esp,0x4
1000443e:	6a 0a                	push   0xa
10004440:	6a 18                	push   0x18
10004442:	50                   	push   eax
10004443:	e8 fc ff ff ff       	call   10004444 <firstRun(bool)+0x1ab2>	10004444: R_386_PC32	VgaText::setCursor(int, int)
10004448:	83 c4 10             	add    esp,0x10
1000444b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000444c: R_386_32	term
10004450:	83 ec 08             	sub    esp,0x8
10004453:	68 c4 bd 00 10       	push   0x1000bdc4	10004454: R_386_32	.text
10004458:	50                   	push   eax
10004459:	e8 fc ff ff ff       	call   1000445a <firstRun(bool)+0x1ac8>	1000445a: R_386_PC32	VgaText::puts(char const*)
1000445e:	83 c4 10             	add    esp,0x10
10004461:	a1 00 00 00 00       	mov    eax,ds:0x0	10004462: R_386_32	term
10004466:	83 ec 04             	sub    esp,0x4
10004469:	6a 0b                	push   0xb
1000446b:	6a 18                	push   0x18
1000446d:	50                   	push   eax
1000446e:	e8 fc ff ff ff       	call   1000446f <firstRun(bool)+0x1add>	1000446f: R_386_PC32	VgaText::setCursor(int, int)
10004473:	83 c4 10             	add    esp,0x10
10004476:	a1 00 00 00 00       	mov    eax,ds:0x0	10004477: R_386_32	term
1000447b:	83 ec 08             	sub    esp,0x8
1000447e:	68 ed bd 00 10       	push   0x1000bded	1000447f: R_386_32	.text
10004483:	50                   	push   eax
10004484:	e8 fc ff ff ff       	call   10004485 <firstRun(bool)+0x1af3>	10004485: R_386_PC32	VgaText::puts(char const*)
10004489:	83 c4 10             	add    esp,0x10
1000448c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000448d: R_386_32	term
10004491:	83 ec 04             	sub    esp,0x4
10004494:	6a 0e                	push   0xe
10004496:	6a 18                	push   0x18
10004498:	50                   	push   eax
10004499:	e8 fc ff ff ff       	call   1000449a <firstRun(bool)+0x1b08>	1000449a: R_386_PC32	VgaText::setCursor(int, int)
1000449e:	83 c4 10             	add    esp,0x10
100044a1:	a1 00 00 00 00       	mov    eax,ds:0x0	100044a2: R_386_32	term
100044a6:	83 ec 08             	sub    esp,0x8
100044a9:	68 fc bd 00 10       	push   0x1000bdfc	100044aa: R_386_32	.text
100044ae:	50                   	push   eax
100044af:	e8 fc ff ff ff       	call   100044b0 <firstRun(bool)+0x1b1e>	100044b0: R_386_PC32	VgaText::puts(char const*)
100044b4:	83 c4 10             	add    esp,0x10
100044b7:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100044b9: R_386_32	installKey
100044be:	a0 00 00 00 00       	mov    al,ds:0x0	100044bf: R_386_32	installKey
100044c3:	84 c0                	test   al,al
100044c5:	0f 94 c0             	sete   al
100044c8:	84 c0                	test   al,al
100044ca:	74 02                	je     100044ce <firstRun(bool)+0x1b3c>
100044cc:	eb f0                	jmp    100044be <firstRun(bool)+0x1b2c>
100044ce:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100044d0: R_386_32	installKey
100044d5:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100044d7: R_386_32	installKey
100044dc:	83 ec 0c             	sub    esp,0xc
100044df:	68 84 03 00 00       	push   0x384
100044e4:	e8 fc ff ff ff       	call   100044e5 <firstRun(bool)+0x1b53>	100044e5: R_386_PC32	milliTenthSleep(unsigned int)
100044e9:	83 c4 10             	add    esp,0x10
100044ec:	e8 fc ff ff ff       	call   100044ed <firstRun(bool)+0x1b5b>	100044ed: R_386_PC32	drawBootScreen()
100044f1:	83 ec 0c             	sub    esp,0xc
100044f4:	68 18 2e 00 00       	push   0x2e18
100044f9:	e8 fc ff ff ff       	call   100044fa <firstRun(bool)+0x1b68>	100044fa: R_386_PC32	milliTenthSleep(unsigned int)
100044fe:	83 c4 10             	add    esp,0x10
10004501:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
10004508:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	1000450a: R_386_32	installKey
1000450f:	e8 fc ff ff ff       	call   10004510 <firstRun(bool)+0x1b7e>	10004510: R_386_PC32	drawBootScreen()
10004514:	83 ec 0c             	sub    esp,0xc
10004517:	68 26 be 00 10       	push   0x1000be26	10004518: R_386_32	.text
1000451c:	6a 0e                	push   0xe
1000451e:	6a 32                	push   0x32
10004520:	6a 02                	push   0x2
10004522:	6a 16                	push   0x16
10004524:	e8 fc ff ff ff       	call   10004525 <firstRun(bool)+0x1b93>	10004525: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10004529:	83 c4 20             	add    esp,0x20
1000452c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000452d: R_386_32	term
10004531:	83 ec 04             	sub    esp,0x4
10004534:	6a 18                	push   0x18
10004536:	6a 11                	push   0x11
10004538:	50                   	push   eax
10004539:	e8 fc ff ff ff       	call   1000453a <firstRun(bool)+0x1ba8>	1000453a: R_386_PC32	VgaText::setCursor(int, int)
1000453e:	83 c4 10             	add    esp,0x10
10004541:	a1 00 00 00 00       	mov    eax,ds:0x0	10004542: R_386_32	term
10004546:	6a 0b                	push   0xb
10004548:	6a 03                	push   0x3
1000454a:	68 c2 bc 00 10       	push   0x1000bcc2	1000454b: R_386_32	.text
1000454f:	50                   	push   eax
10004550:	e8 fc ff ff ff       	call   10004551 <firstRun(bool)+0x1bbf>	10004551: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10004555:	83 c4 10             	add    esp,0x10
10004558:	a1 00 00 00 00       	mov    eax,ds:0x0	10004559: R_386_32	term
1000455d:	83 ec 04             	sub    esp,0x4
10004560:	6a 05                	push   0x5
10004562:	6a 18                	push   0x18
10004564:	50                   	push   eax
10004565:	e8 fc ff ff ff       	call   10004566 <firstRun(bool)+0x1bd4>	10004566: R_386_PC32	VgaText::setCursor(int, int)
1000456a:	83 c4 10             	add    esp,0x10
1000456d:	a1 00 00 00 00       	mov    eax,ds:0x0	1000456e: R_386_32	term
10004572:	83 ec 08             	sub    esp,0x8
10004575:	68 34 be 00 10       	push   0x1000be34	10004576: R_386_32	.text
1000457a:	50                   	push   eax
1000457b:	e8 fc ff ff ff       	call   1000457c <firstRun(bool)+0x1bea>	1000457c: R_386_PC32	VgaText::puts(char const*)
10004580:	83 c4 10             	add    esp,0x10
10004583:	a1 00 00 00 00       	mov    eax,ds:0x0	10004584: R_386_32	term
10004588:	83 ec 04             	sub    esp,0x4
1000458b:	6a 06                	push   0x6
1000458d:	6a 18                	push   0x18
1000458f:	50                   	push   eax
10004590:	e8 fc ff ff ff       	call   10004591 <firstRun(bool)+0x1bff>	10004591: R_386_PC32	VgaText::setCursor(int, int)
10004595:	83 c4 10             	add    esp,0x10
10004598:	a1 00 00 00 00       	mov    eax,ds:0x0	10004599: R_386_32	term
1000459d:	83 ec 08             	sub    esp,0x8
100045a0:	68 98 bc 00 10       	push   0x1000bc98	100045a1: R_386_32	.text
100045a5:	50                   	push   eax
100045a6:	e8 fc ff ff ff       	call   100045a7 <firstRun(bool)+0x1c15>	100045a7: R_386_PC32	VgaText::puts(char const*)
100045ab:	83 c4 10             	add    esp,0x10
100045ae:	c6 05 10 00 00 00 00 	mov    BYTE PTR ds:0x10,0x0	100045b0: R_386_32	pkeybuf
100045b5:	c6 05 11 00 00 00 00 	mov    BYTE PTR ds:0x11,0x0	100045b7: R_386_32	pkeybuf
100045bc:	a1 00 00 00 00       	mov    eax,ds:0x0	100045bd: R_386_32	term
100045c1:	83 ec 04             	sub    esp,0x4
100045c4:	6a 08                	push   0x8
100045c6:	6a 1c                	push   0x1c
100045c8:	50                   	push   eax
100045c9:	e8 fc ff ff ff       	call   100045ca <firstRun(bool)+0x1c38>	100045ca: R_386_PC32	VgaText::setCursor(int, int)
100045ce:	83 c4 10             	add    esp,0x10
100045d1:	a1 00 00 00 00       	mov    eax,ds:0x0	100045d2: R_386_32	term
100045d6:	83 ec 08             	sub    esp,0x8
100045d9:	68 00 00 00 00       	push   0x0	100045da: R_386_32	pkeybuf
100045de:	50                   	push   eax
100045df:	e8 fc ff ff ff       	call   100045e0 <firstRun(bool)+0x1c4e>	100045e0: R_386_PC32	VgaText::puts(char const*)
100045e4:	83 c4 10             	add    esp,0x10
100045e7:	a1 00 00 00 00       	mov    eax,ds:0x0	100045e8: R_386_32	term
100045ec:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
100045ef:	83 c2 1c             	add    edx,0x1c
100045f2:	83 ec 04             	sub    esp,0x4
100045f5:	6a 08                	push   0x8
100045f7:	52                   	push   edx
100045f8:	50                   	push   eax
100045f9:	e8 fc ff ff ff       	call   100045fa <firstRun(bool)+0x1c68>	100045fa: R_386_PC32	VgaText::setCursor(int, int)
100045fe:	83 c4 10             	add    esp,0x10
10004601:	a1 00 00 00 00       	mov    eax,ds:0x0	10004602: R_386_32	term
10004606:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10004609:	81 c2 00 00 00 00    	add    edx,0x0	1000460b: R_386_32	pkeybuf
1000460f:	8a 12                	mov    dl,BYTE PTR [edx]
10004611:	0f be d2             	movsx  edx,dl
10004614:	6a 00                	push   0x0
10004616:	6a 0f                	push   0xf
10004618:	52                   	push   edx
10004619:	50                   	push   eax
1000461a:	e8 fc ff ff ff       	call   1000461b <firstRun(bool)+0x1c89>	1000461b: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
1000461f:	83 c4 10             	add    esp,0x10
10004622:	a1 00 00 00 00       	mov    eax,ds:0x0	10004623: R_386_32	term
10004627:	83 ec 04             	sub    esp,0x4
1000462a:	6a 08                	push   0x8
1000462c:	6a 2c                	push   0x2c
1000462e:	50                   	push   eax
1000462f:	e8 fc ff ff ff       	call   10004630 <firstRun(bool)+0x1c9e>	10004630: R_386_PC32	VgaText::setCursor(int, int)
10004634:	83 c4 10             	add    esp,0x10
10004637:	a1 00 00 00 00       	mov    eax,ds:0x0	10004638: R_386_32	term
1000463c:	6a 0f                	push   0xf
1000463e:	6a 0f                	push   0xf
10004640:	6a 20                	push   0x20
10004642:	50                   	push   eax
10004643:	e8 fc ff ff ff       	call   10004644 <firstRun(bool)+0x1cb2>	10004644: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
10004648:	83 c4 10             	add    esp,0x10
1000464b:	a1 00 00 00 00       	mov    eax,ds:0x0	1000464c: R_386_32	term
10004650:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10004653:	83 c2 1c             	add    edx,0x1c
10004656:	83 ec 04             	sub    esp,0x4
10004659:	6a 08                	push   0x8
1000465b:	52                   	push   edx
1000465c:	50                   	push   eax
1000465d:	e8 fc ff ff ff       	call   1000465e <firstRun(bool)+0x1ccc>	1000465e: R_386_PC32	VgaText::setCursor(int, int)
10004662:	83 c4 10             	add    esp,0x10
10004665:	a0 00 00 00 00       	mov    al,ds:0x0	10004666: R_386_32	installKey
1000466a:	84 c0                	test   al,al
1000466c:	0f 94 c0             	sete   al
1000466f:	84 c0                	test   al,al
10004671:	74 02                	je     10004675 <firstRun(bool)+0x1ce3>
10004673:	eb f0                	jmp    10004665 <firstRun(bool)+0x1cd3>
10004675:	a1 00 00 00 00       	mov    eax,ds:0x0	10004676: R_386_32	term
1000467a:	05 82 00 00 00       	add    eax,0x82
1000467f:	83 ec 04             	sub    esp,0x4
10004682:	6a 10                	push   0x10
10004684:	6a 00                	push   0x0
10004686:	50                   	push   eax
10004687:	e8 fc ff ff ff       	call   10004688 <firstRun(bool)+0x1cf6>	10004688: R_386_PC32	memset
1000468c:	83 c4 10             	add    esp,0x10
1000468f:	a1 00 00 00 00       	mov    eax,ds:0x0	10004690: R_386_32	term
10004694:	05 02 01 00 00       	add    eax,0x102
10004699:	83 ec 04             	sub    esp,0x4
1000469c:	6a 10                	push   0x10
1000469e:	6a 00                	push   0x0
100046a0:	50                   	push   eax
100046a1:	e8 fc ff ff ff       	call   100046a2 <firstRun(bool)+0x1d10>	100046a2: R_386_PC32	memset
100046a6:	83 c4 10             	add    esp,0x10
100046a9:	a0 00 00 00 00       	mov    al,ds:0x0	100046aa: R_386_32	installKey
100046ae:	3c 03                	cmp    al,0x3
100046b0:	74 09                	je     100046bb <firstRun(bool)+0x1d29>
100046b2:	a0 00 00 00 00       	mov    al,ds:0x0	100046b3: R_386_32	installKey
100046b7:	3c 08                	cmp    al,0x8
100046b9:	75 04                	jne    100046bf <firstRun(bool)+0x1d2d>
100046bb:	b0 01                	mov    al,0x1
100046bd:	eb 02                	jmp    100046c1 <firstRun(bool)+0x1d2f>
100046bf:	b0 00                	mov    al,0x0
100046c1:	84 c0                	test   al,al
100046c3:	74 31                	je     100046f6 <firstRun(bool)+0x1d64>
100046c5:	ff 4d e4             	dec    DWORD PTR [ebp-0x1c]
100046c8:	83 7d e4 ff          	cmp    DWORD PTR [ebp-0x1c],0xffffffff
100046cc:	75 14                	jne    100046e2 <firstRun(bool)+0x1d50>
100046ce:	83 ec 0c             	sub    esp,0xc
100046d1:	68 00 00 00 00       	push   0x0	100046d2: R_386_32	pkeybuf
100046d6:	e8 fc ff ff ff       	call   100046d7 <firstRun(bool)+0x1d45>	100046d7: R_386_PC32	strlen
100046db:	83 c4 10             	add    esp,0x10
100046de:	48                   	dec    eax
100046df:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
100046e2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100046e5:	05 00 00 00 00       	add    eax,0x0	100046e6: R_386_32	pkeybuf
100046ea:	8a 00                	mov    al,BYTE PTR [eax]
100046ec:	3c 2d                	cmp    al,0x2d
100046ee:	0f 85 6f 03 00 00    	jne    10004a63 <firstRun(bool)+0x20d1>
100046f4:	eb cf                	jmp    100046c5 <firstRun(bool)+0x1d33>
100046f6:	a0 00 00 00 00       	mov    al,ds:0x0	100046f7: R_386_32	installKey
100046fb:	3c 2f                	cmp    al,0x2f
100046fd:	7e 09                	jle    10004708 <firstRun(bool)+0x1d76>
100046ff:	a0 00 00 00 00       	mov    al,ds:0x0	10004700: R_386_32	installKey
10004704:	3c 39                	cmp    al,0x39
10004706:	7e 36                	jle    1000473e <firstRun(bool)+0x1dac>
10004708:	a0 00 00 00 00       	mov    al,ds:0x0	10004709: R_386_32	installKey
1000470d:	3c 40                	cmp    al,0x40
1000470f:	7e 09                	jle    1000471a <firstRun(bool)+0x1d88>
10004711:	a0 00 00 00 00       	mov    al,ds:0x0	10004712: R_386_32	installKey
10004716:	3c 5a                	cmp    al,0x5a
10004718:	7e 24                	jle    1000473e <firstRun(bool)+0x1dac>
1000471a:	a0 00 00 00 00       	mov    al,ds:0x0	1000471b: R_386_32	installKey
1000471f:	3c 60                	cmp    al,0x60
10004721:	7e 09                	jle    1000472c <firstRun(bool)+0x1d9a>
10004723:	a0 00 00 00 00       	mov    al,ds:0x0	10004724: R_386_32	installKey
10004728:	3c 7a                	cmp    al,0x7a
1000472a:	7e 12                	jle    1000473e <firstRun(bool)+0x1dac>
1000472c:	a0 00 00 00 00       	mov    al,ds:0x0	1000472d: R_386_32	installKey
10004731:	3c 20                	cmp    al,0x20
10004733:	74 09                	je     1000473e <firstRun(bool)+0x1dac>
10004735:	a0 00 00 00 00       	mov    al,ds:0x0	10004736: R_386_32	installKey
1000473a:	3c 04                	cmp    al,0x4
1000473c:	75 04                	jne    10004742 <firstRun(bool)+0x1db0>
1000473e:	b0 01                	mov    al,0x1
10004740:	eb 02                	jmp    10004744 <firstRun(bool)+0x1db2>
10004742:	b0 00                	mov    al,0x0
10004744:	84 c0                	test   al,al
10004746:	0f 84 a3 00 00 00    	je     100047ef <firstRun(bool)+0x1e5d>
1000474c:	a0 00 00 00 00       	mov    al,ds:0x0	1000474d: R_386_32	installKey
10004751:	3c 2f                	cmp    al,0x2f
10004753:	7e 09                	jle    1000475e <firstRun(bool)+0x1dcc>
10004755:	a0 00 00 00 00       	mov    al,ds:0x0	10004756: R_386_32	installKey
1000475a:	3c 39                	cmp    al,0x39
1000475c:	7e 24                	jle    10004782 <firstRun(bool)+0x1df0>
1000475e:	a0 00 00 00 00       	mov    al,ds:0x0	1000475f: R_386_32	installKey
10004763:	3c 40                	cmp    al,0x40
10004765:	7e 09                	jle    10004770 <firstRun(bool)+0x1dde>
10004767:	a0 00 00 00 00       	mov    al,ds:0x0	10004768: R_386_32	installKey
1000476c:	3c 5a                	cmp    al,0x5a
1000476e:	7e 12                	jle    10004782 <firstRun(bool)+0x1df0>
10004770:	a0 00 00 00 00       	mov    al,ds:0x0	10004771: R_386_32	installKey
10004775:	3c 60                	cmp    al,0x60
10004777:	7e 0d                	jle    10004786 <firstRun(bool)+0x1df4>
10004779:	a0 00 00 00 00       	mov    al,ds:0x0	1000477a: R_386_32	installKey
1000477e:	3c 7a                	cmp    al,0x7a
10004780:	7f 04                	jg     10004786 <firstRun(bool)+0x1df4>
10004782:	b0 01                	mov    al,0x1
10004784:	eb 02                	jmp    10004788 <firstRun(bool)+0x1df6>
10004786:	b0 00                	mov    al,0x0
10004788:	84 c0                	test   al,al
1000478a:	74 2c                	je     100047b8 <firstRun(bool)+0x1e26>
1000478c:	a0 00 00 00 00       	mov    al,ds:0x0	1000478d: R_386_32	installKey
10004791:	3c 60                	cmp    al,0x60
10004793:	7e 13                	jle    100047a8 <firstRun(bool)+0x1e16>
10004795:	a0 00 00 00 00       	mov    al,ds:0x0	10004796: R_386_32	installKey
1000479a:	3c 7a                	cmp    al,0x7a
1000479c:	7f 0a                	jg     100047a8 <firstRun(bool)+0x1e16>
1000479e:	a0 00 00 00 00       	mov    al,ds:0x0	1000479f: R_386_32	installKey
100047a3:	83 e8 20             	sub    eax,0x20
100047a6:	eb 05                	jmp    100047ad <firstRun(bool)+0x1e1b>
100047a8:	a0 00 00 00 00       	mov    al,ds:0x0	100047a9: R_386_32	installKey
100047ad:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
100047b0:	81 c2 00 00 00 00    	add    edx,0x0	100047b2: R_386_32	pkeybuf
100047b6:	88 02                	mov    BYTE PTR [edx],al
100047b8:	ff 45 e4             	inc    DWORD PTR [ebp-0x1c]
100047bb:	83 ec 0c             	sub    esp,0xc
100047be:	68 00 00 00 00       	push   0x0	100047bf: R_386_32	pkeybuf
100047c3:	e8 fc ff ff ff       	call   100047c4 <firstRun(bool)+0x1e32>	100047c4: R_386_PC32	strlen
100047c8:	83 c4 10             	add    esp,0x10
100047cb:	89 c2                	mov    edx,eax
100047cd:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100047d0:	39 c2                	cmp    edx,eax
100047d2:	77 07                	ja     100047db <firstRun(bool)+0x1e49>
100047d4:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
100047db:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100047de:	05 00 00 00 00       	add    eax,0x0	100047df: R_386_32	pkeybuf
100047e3:	8a 00                	mov    al,BYTE PTR [eax]
100047e5:	3c 2d                	cmp    al,0x2d
100047e7:	0f 85 76 02 00 00    	jne    10004a63 <firstRun(bool)+0x20d1>
100047ed:	eb c9                	jmp    100047b8 <firstRun(bool)+0x1e26>
100047ef:	a0 00 00 00 00       	mov    al,ds:0x0	100047f0: R_386_32	installKey
100047f4:	3c 1b                	cmp    al,0x1b
100047f6:	0f 94 c0             	sete   al
100047f9:	84 c0                	test   al,al
100047fb:	0f 85 99 f9 ff ff    	jne    1000419a <firstRun(bool)+0x1808>
10004801:	a0 00 00 00 00       	mov    al,ds:0x0	10004802: R_386_32	installKey
10004806:	3c 0a                	cmp    al,0xa
10004808:	0f 94 c0             	sete   al
1000480b:	84 c0                	test   al,al
1000480d:	0f 84 50 02 00 00    	je     10004a63 <firstRun(bool)+0x20d1>
10004813:	83 ec 0c             	sub    esp,0xc
10004816:	68 00 00 00 00       	push   0x0	10004817: R_386_32	pkeybuf
1000481b:	e8 fc ff ff ff       	call   1000481c <firstRun(bool)+0x1e8a>	1000481c: R_386_PC32	checkExtendedKey(char*)
10004820:	83 c4 10             	add    esp,0x10
10004823:	85 c0                	test   eax,eax
10004825:	0f 95 c0             	setne  al
10004828:	88 45 97             	mov    BYTE PTR [ebp-0x69],al
1000482b:	80 7d 97 00          	cmp    BYTE PTR [ebp-0x69],0x0
1000482f:	74 5b                	je     1000488c <firstRun(bool)+0x1efa>
10004831:	83 ec 0c             	sub    esp,0xc
10004834:	68 f0 0a 00 00       	push   0xaf0
10004839:	e8 fc ff ff ff       	call   1000483a <firstRun(bool)+0x1ea8>	1000483a: R_386_PC32	milliTenthSleep(unsigned int)
1000483e:	83 c4 10             	add    esp,0x10
10004841:	e8 fc ff ff ff       	call   10004842 <firstRun(bool)+0x1eb0>	10004842: R_386_PC32	drawBootScreen()
10004846:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004848: R_386_32	installKey
1000484d:	83 ec 0c             	sub    esp,0xc
10004850:	68 84 03 00 00       	push   0x384
10004855:	e8 fc ff ff ff       	call   10004856 <firstRun(bool)+0x1ec4>	10004856: R_386_PC32	milliTenthSleep(unsigned int)
1000485a:	83 c4 10             	add    esp,0x10
1000485d:	e8 fc ff ff ff       	call   1000485e <firstRun(bool)+0x1ecc>	1000485e: R_386_PC32	drawBootScreen()
10004862:	83 ec 0c             	sub    esp,0xc
10004865:	68 c0 12 00 00       	push   0x12c0
1000486a:	e8 fc ff ff ff       	call   1000486b <firstRun(bool)+0x1ed9>	1000486b: R_386_PC32	milliTenthSleep(unsigned int)
1000486f:	83 c4 10             	add    esp,0x10
10004872:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004874: R_386_32	installKey
10004879:	90                   	nop
1000487a:	80 bd 24 ff ff ff 00 	cmp    BYTE PTR [ebp-0xdc],0x0
10004881:	0f 84 e8 01 00 00    	je     10004a6f <firstRun(bool)+0x20dd>
10004887:	e9 d2 02 00 00       	jmp    10004b5e <firstRun(bool)+0x21cc>
1000488c:	83 ec 0c             	sub    esp,0xc
1000488f:	68 f0 0a 00 00       	push   0xaf0
10004894:	e8 fc ff ff ff       	call   10004895 <firstRun(bool)+0x1f03>	10004895: R_386_PC32	milliTenthSleep(unsigned int)
10004899:	83 c4 10             	add    esp,0x10
1000489c:	e8 fc ff ff ff       	call   1000489d <firstRun(bool)+0x1f0b>	1000489d: R_386_PC32	drawBootScreen()
100048a1:	83 ec 08             	sub    esp,0x8
100048a4:	6a 01                	push   0x1
100048a6:	68 26 be 00 10       	push   0x1000be26	100048a7: R_386_32	.text
100048ab:	6a 0e                	push   0xe
100048ad:	6a 32                	push   0x32
100048af:	6a 02                	push   0x2
100048b1:	6a 16                	push   0x16
100048b3:	e8 fc ff ff ff       	call   100048b4 <firstRun(bool)+0x1f22>	100048b4: R_386_PC32	drawBasicWindowX(int, int, int, int, char const*, bool)
100048b8:	83 c4 20             	add    esp,0x20
100048bb:	a1 00 00 00 00       	mov    eax,ds:0x0	100048bc: R_386_32	term
100048c0:	83 ec 04             	sub    esp,0x4
100048c3:	6a 05                	push   0x5
100048c5:	6a 18                	push   0x18
100048c7:	50                   	push   eax
100048c8:	e8 fc ff ff ff       	call   100048c9 <firstRun(bool)+0x1f37>	100048c9: R_386_PC32	VgaText::setCursor(int, int)
100048cd:	83 c4 10             	add    esp,0x10
100048d0:	a1 00 00 00 00       	mov    eax,ds:0x0	100048d1: R_386_32	term
100048d5:	6a 07                	push   0x7
100048d7:	6a 00                	push   0x0
100048d9:	68 34 be 00 10       	push   0x1000be34	100048da: R_386_32	.text
100048de:	50                   	push   eax
100048df:	e8 fc ff ff ff       	call   100048e0 <firstRun(bool)+0x1f4e>	100048e0: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
100048e4:	83 c4 10             	add    esp,0x10
100048e7:	a1 00 00 00 00       	mov    eax,ds:0x0	100048e8: R_386_32	term
100048ec:	83 ec 04             	sub    esp,0x4
100048ef:	6a 06                	push   0x6
100048f1:	6a 18                	push   0x18
100048f3:	50                   	push   eax
100048f4:	e8 fc ff ff ff       	call   100048f5 <firstRun(bool)+0x1f63>	100048f5: R_386_PC32	VgaText::setCursor(int, int)
100048f9:	83 c4 10             	add    esp,0x10
100048fc:	a1 00 00 00 00       	mov    eax,ds:0x0	100048fd: R_386_32	term
10004901:	6a 07                	push   0x7
10004903:	6a 00                	push   0x0
10004905:	68 98 bc 00 10       	push   0x1000bc98	10004906: R_386_32	.text
1000490a:	50                   	push   eax
1000490b:	e8 fc ff ff ff       	call   1000490c <firstRun(bool)+0x1f7a>	1000490c: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10004910:	83 c4 10             	add    esp,0x10
10004913:	a1 00 00 00 00       	mov    eax,ds:0x0	10004914: R_386_32	term
10004918:	83 ec 04             	sub    esp,0x4
1000491b:	6a 08                	push   0x8
1000491d:	6a 1c                	push   0x1c
1000491f:	50                   	push   eax
10004920:	e8 fc ff ff ff       	call   10004921 <firstRun(bool)+0x1f8f>	10004921: R_386_PC32	VgaText::setCursor(int, int)
10004925:	83 c4 10             	add    esp,0x10
10004928:	a1 00 00 00 00       	mov    eax,ds:0x0	10004929: R_386_32	term
1000492d:	6a 07                	push   0x7
1000492f:	6a 00                	push   0x0
10004931:	68 00 00 00 00       	push   0x0	10004932: R_386_32	pkeybuf
10004936:	50                   	push   eax
10004937:	e8 fc ff ff ff       	call   10004938 <firstRun(bool)+0x1fa6>	10004938: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
1000493c:	83 c4 10             	add    esp,0x10
1000493f:	a1 00 00 00 00       	mov    eax,ds:0x0	10004940: R_386_32	term
10004944:	83 ec 04             	sub    esp,0x4
10004947:	6a 08                	push   0x8
10004949:	6a 2c                	push   0x2c
1000494b:	50                   	push   eax
1000494c:	e8 fc ff ff ff       	call   1000494d <firstRun(bool)+0x1fbb>	1000494d: R_386_PC32	VgaText::setCursor(int, int)
10004951:	83 c4 10             	add    esp,0x10
10004954:	a1 00 00 00 00       	mov    eax,ds:0x0	10004955: R_386_32	term
10004959:	6a 07                	push   0x7
1000495b:	6a 07                	push   0x7
1000495d:	6a 20                	push   0x20
1000495f:	50                   	push   eax
10004960:	e8 fc ff ff ff       	call   10004961 <firstRun(bool)+0x1fcf>	10004961: R_386_PC32	VgaText::putchar(char, VgaColour, VgaColour)
10004965:	83 c4 10             	add    esp,0x10
10004968:	a1 00 00 00 00       	mov    eax,ds:0x0	10004969: R_386_32	term
1000496d:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
10004970:	83 c2 1c             	add    edx,0x1c
10004973:	83 ec 04             	sub    esp,0x4
10004976:	6a 08                	push   0x8
10004978:	52                   	push   edx
10004979:	50                   	push   eax
1000497a:	e8 fc ff ff ff       	call   1000497b <firstRun(bool)+0x1fe9>	1000497b: R_386_PC32	VgaText::setCursor(int, int)
1000497f:	83 c4 10             	add    esp,0x10
10004982:	83 ec 0c             	sub    esp,0xc
10004985:	68 85 bd 00 10       	push   0x1000bd85	10004986: R_386_32	.text
1000498a:	6a 0b                	push   0xb
1000498c:	6a 2b                	push   0x2b
1000498e:	6a 0a                	push   0xa
10004990:	6a 22                	push   0x22
10004992:	e8 fc ff ff ff       	call   10004993 <firstRun(bool)+0x2001>	10004993: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10004997:	83 c4 20             	add    esp,0x20
1000499a:	a1 00 00 00 00       	mov    eax,ds:0x0	1000499b: R_386_32	term
1000499f:	83 ec 04             	sub    esp,0x4
100049a2:	6a 0d                	push   0xd
100049a4:	6a 24                	push   0x24
100049a6:	50                   	push   eax
100049a7:	e8 fc ff ff ff       	call   100049a8 <firstRun(bool)+0x2016>	100049a8: R_386_PC32	VgaText::setCursor(int, int)
100049ac:	83 c4 10             	add    esp,0x10
100049af:	a1 00 00 00 00       	mov    eax,ds:0x0	100049b0: R_386_32	term
100049b4:	83 ec 08             	sub    esp,0x8
100049b7:	68 5c be 00 10       	push   0x1000be5c	100049b8: R_386_32	.text
100049bc:	50                   	push   eax
100049bd:	e8 fc ff ff ff       	call   100049be <firstRun(bool)+0x202c>	100049be: R_386_PC32	VgaText::puts(char const*)
100049c2:	83 c4 10             	add    esp,0x10
100049c5:	a1 00 00 00 00       	mov    eax,ds:0x0	100049c6: R_386_32	term
100049ca:	83 ec 04             	sub    esp,0x4
100049cd:	6a 0f                	push   0xf
100049cf:	6a 24                	push   0x24
100049d1:	50                   	push   eax
100049d2:	e8 fc ff ff ff       	call   100049d3 <firstRun(bool)+0x2041>	100049d3: R_386_PC32	VgaText::setCursor(int, int)
100049d7:	83 c4 10             	add    esp,0x10
100049da:	a1 00 00 00 00       	mov    eax,ds:0x0	100049db: R_386_32	term
100049df:	83 ec 08             	sub    esp,0x8
100049e2:	68 84 be 00 10       	push   0x1000be84	100049e3: R_386_32	.text
100049e7:	50                   	push   eax
100049e8:	e8 fc ff ff ff       	call   100049e9 <firstRun(bool)+0x2057>	100049e9: R_386_PC32	VgaText::puts(char const*)
100049ed:	83 c4 10             	add    esp,0x10
100049f0:	a1 00 00 00 00       	mov    eax,ds:0x0	100049f1: R_386_32	term
100049f5:	83 ec 04             	sub    esp,0x4
100049f8:	6a 10                	push   0x10
100049fa:	6a 24                	push   0x24
100049fc:	50                   	push   eax
100049fd:	e8 fc ff ff ff       	call   100049fe <firstRun(bool)+0x206c>	100049fe: R_386_PC32	VgaText::setCursor(int, int)
10004a02:	83 c4 10             	add    esp,0x10
10004a05:	a1 00 00 00 00       	mov    eax,ds:0x0	10004a06: R_386_32	term
10004a0a:	83 ec 08             	sub    esp,0x8
10004a0d:	68 a8 be 00 10       	push   0x1000bea8	10004a0e: R_386_32	.text
10004a12:	50                   	push   eax
10004a13:	e8 fc ff ff ff       	call   10004a14 <firstRun(bool)+0x2082>	10004a14: R_386_PC32	VgaText::puts(char const*)
10004a18:	83 c4 10             	add    esp,0x10
10004a1b:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004a1d: R_386_32	installKey
10004a22:	83 ec 0c             	sub    esp,0xc
10004a25:	68 94 11 00 00       	push   0x1194
10004a2a:	e8 fc ff ff ff       	call   10004a2b <firstRun(bool)+0x2099>	10004a2b: R_386_PC32	milliTenthSleep(unsigned int)
10004a2f:	83 c4 10             	add    esp,0x10
10004a32:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004a34: R_386_32	installKey
10004a39:	a0 00 00 00 00       	mov    al,ds:0x0	10004a3a: R_386_32	installKey
10004a3e:	84 c0                	test   al,al
10004a40:	0f 94 c0             	sete   al
10004a43:	84 c0                	test   al,al
10004a45:	74 02                	je     10004a49 <firstRun(bool)+0x20b7>
10004a47:	eb f0                	jmp    10004a39 <firstRun(bool)+0x20a7>
10004a49:	e8 fc ff ff ff       	call   10004a4a <firstRun(bool)+0x20b8>	10004a4a: R_386_PC32	drawBootScreen()
10004a4e:	83 ec 0c             	sub    esp,0xc
10004a51:	68 9c 18 00 00       	push   0x189c
10004a56:	e8 fc ff ff ff       	call   10004a57 <firstRun(bool)+0x20c5>	10004a57: R_386_PC32	milliTenthSleep(unsigned int)
10004a5b:	83 c4 10             	add    esp,0x10
10004a5e:	e9 a5 fa ff ff       	jmp    10004508 <firstRun(bool)+0x1b76>
10004a63:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004a65: R_386_32	installKey
10004a6a:	e9 3f fb ff ff       	jmp    100045ae <firstRun(bool)+0x1c1c>
10004a6f:	e8 fc ff ff ff       	call   10004a70 <firstRun(bool)+0x20de>	10004a70: R_386_PC32	drawBootScreen()
10004a74:	83 ec 0c             	sub    esp,0xc
10004a77:	68 c9 be 00 10       	push   0x1000bec9	10004a78: R_386_32	.text
10004a7c:	6a 0d                	push   0xd
10004a7e:	6a 32                	push   0x32
10004a80:	6a 05                	push   0x5
10004a82:	6a 16                	push   0x16
10004a84:	e8 fc ff ff ff       	call   10004a85 <firstRun(bool)+0x20f3>	10004a85: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10004a89:	83 c4 20             	add    esp,0x20
10004a8c:	83 ec 0c             	sub    esp,0xc
10004a8f:	6a 00                	push   0x0
10004a91:	e8 fc ff ff ff       	call   10004a92 <firstRun(bool)+0x2100>	10004a92: R_386_PC32	bootInstallTasks(int)
10004a96:	83 c4 10             	add    esp,0x10
10004a99:	83 ec 04             	sub    esp,0x4
10004a9c:	6a 0c                	push   0xc
10004a9e:	68 e1 be 00 10       	push   0x1000bee1	10004a9f: R_386_32	.text
10004aa3:	68 f2 be 00 10       	push   0x1000bef2	10004aa4: R_386_32	.text
10004aa8:	e8 fc ff ff ff       	call   10004aa9 <firstRun(bool)+0x2117>	10004aa9: R_386_PC32	Reg::readIntWithDefault(char*, char*, int)
10004aad:	83 c4 10             	add    esp,0x10
10004ab0:	89 45 90             	mov    DWORD PTR [ebp-0x70],eax
10004ab3:	83 ec 0c             	sub    esp,0xc
10004ab6:	ff 75 90             	push   DWORD PTR [ebp-0x70]
10004ab9:	e8 fc ff ff ff       	call   10004aba <firstRun(bool)+0x2128>	10004aba: R_386_PC32	Virt::setupPageSwapping(int)
10004abe:	83 c4 10             	add    esp,0x10
10004ac1:	83 ec 0c             	sub    esp,0xc
10004ac4:	6a 01                	push   0x1
10004ac6:	e8 fc ff ff ff       	call   10004ac7 <firstRun(bool)+0x2135>	10004ac7: R_386_PC32	bootInstallTasks(int)
10004acb:	83 c4 10             	add    esp,0x10
10004ace:	83 ec 0c             	sub    esp,0xc
10004ad1:	68 f9 be 00 10       	push   0x1000bef9	10004ad2: R_386_32	.text
10004ad6:	e8 fc ff ff ff       	call   10004ad7 <firstRun(bool)+0x2145>	10004ad7: R_386_PC32	rmtree(char*)
10004adb:	83 c4 10             	add    esp,0x10
10004ade:	83 ec 0c             	sub    esp,0xc
10004ae1:	68 13 bf 00 10       	push   0x1000bf13	10004ae2: R_386_32	.text
10004ae6:	e8 fc ff ff ff       	call   10004ae7 <firstRun(bool)+0x2155>	10004ae7: R_386_PC32	rmtree(char*)
10004aeb:	83 c4 10             	add    esp,0x10
10004aee:	83 ec 08             	sub    esp,0x8
10004af1:	68 c0 01 00 00       	push   0x1c0
10004af6:	68 f9 be 00 10       	push   0x1000bef9	10004af7: R_386_32	.text
10004afb:	e8 fc ff ff ff       	call   10004afc <firstRun(bool)+0x216a>	10004afc: R_386_PC32	mkdir(char const*, int)
10004b00:	83 c4 10             	add    esp,0x10
10004b03:	83 ec 08             	sub    esp,0x8
10004b06:	68 c0 01 00 00       	push   0x1c0
10004b0b:	68 13 bf 00 10       	push   0x1000bf13	10004b0c: R_386_32	.text
10004b10:	e8 fc ff ff ff       	call   10004b11 <firstRun(bool)+0x217f>	10004b11: R_386_PC32	mkdir(char const*, int)
10004b15:	83 c4 10             	add    esp,0x10
10004b18:	83 ec 08             	sub    esp,0x8
10004b1b:	68 f9 be 00 10       	push   0x1000bef9	10004b1c: R_386_32	.text
10004b20:	68 2c bf 00 10       	push   0x1000bf2c	10004b21: R_386_32	.text
10004b25:	e8 fc ff ff ff       	call   10004b26 <firstRun(bool)+0x2194>	10004b26: R_386_PC32	copytree(char*, char*)
10004b2a:	83 c4 10             	add    esp,0x10
10004b2d:	83 ec 0c             	sub    esp,0xc
10004b30:	6a 02                	push   0x2
10004b32:	e8 fc ff ff ff       	call   10004b33 <firstRun(bool)+0x21a1>	10004b33: R_386_PC32	bootInstallTasks(int)
10004b37:	83 c4 10             	add    esp,0x10
10004b3a:	83 ec 0c             	sub    esp,0xc
10004b3d:	68 00 00 00 00       	push   0x0	10004b3e: R_386_32	currName
10004b42:	e8 fc ff ff ff       	call   10004b43 <firstRun(bool)+0x21b1>	10004b43: R_386_PC32	createUser(char const*)
10004b47:	83 c4 10             	add    esp,0x10
10004b4a:	83 ec 0c             	sub    esp,0xc
10004b4d:	6a 03                	push   0x3
10004b4f:	e8 fc ff ff ff       	call   10004b50 <firstRun(bool)+0x21be>	10004b50: R_386_PC32	bootInstallTasks(int)
10004b54:	83 c4 10             	add    esp,0x10
10004b57:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10004b59: R_386_32	VgaText::hiddenOut
10004b5e:	8d 65 f4             	lea    esp,[ebp-0xc]
10004b61:	5b                   	pop    ebx
10004b62:	5e                   	pop    esi
10004b63:	5f                   	pop    edi
10004b64:	5d                   	pop    ebp
10004b65:	c3                   	ret    

10004b66 <loadExtensions()>:
10004b66:	55                   	push   ebp
10004b67:	89 e5                	mov    ebp,esp
10004b69:	83 ec 08             	sub    esp,0x8
10004b6c:	83 ec 0c             	sub    esp,0xc
10004b6f:	68 d4 bf 00 10       	push   0x1000bfd4	10004b70: R_386_32	.text
10004b74:	e8 fc ff ff ff       	call   10004b75 <loadExtensions()+0xf>	10004b75: R_386_PC32	KeSetBootMessage(char const*)
10004b79:	83 c4 10             	add    esp,0x10
10004b7c:	90                   	nop
10004b7d:	c9                   	leave  
10004b7e:	c3                   	ret    

10004b7f <rgtree(Reghive_Tag*, int, int)>:
10004b7f:	55                   	push   ebp
10004b80:	89 e5                	mov    ebp,esp
10004b82:	53                   	push   ebx
10004b83:	83 ec 44             	sub    esp,0x44
10004b86:	83 7d 0c 01          	cmp    DWORD PTR [ebp+0xc],0x1
10004b8a:	75 16                	jne    10004ba2 <rgtree(Reghive_Tag*, int, int)+0x23>
10004b8c:	83 7d 10 00          	cmp    DWORD PTR [ebp+0x10],0x0
10004b90:	75 10                	jne    10004ba2 <rgtree(Reghive_Tag*, int, int)+0x23>
10004b92:	83 ec 0c             	sub    esp,0xc
10004b95:	68 ea bf 00 10       	push   0x1000bfea	10004b96: R_386_32	.text
10004b9a:	e8 fc ff ff ff       	call   10004b9b <rgtree(Reghive_Tag*, int, int)+0x1c>	10004b9b: R_386_PC32	Dbg::kprintf(char const*, ...)
10004b9f:	83 c4 10             	add    esp,0x10
10004ba2:	83 7d 0c 00          	cmp    DWORD PTR [ebp+0xc],0x0
10004ba6:	0f 8e a9 00 00 00    	jle    10004c55 <rgtree(Reghive_Tag*, int, int)+0xd6>
10004bac:	83 ec 04             	sub    esp,0x4
10004baf:	6a 32                	push   0x32
10004bb1:	6a 00                	push   0x0
10004bb3:	8d 45 be             	lea    eax,[ebp-0x42]
10004bb6:	50                   	push   eax
10004bb7:	e8 fc ff ff ff       	call   10004bb8 <rgtree(Reghive_Tag*, int, int)+0x39>	10004bb8: R_386_PC32	memset
10004bbc:	83 c4 10             	add    esp,0x10
10004bbf:	83 ec 04             	sub    esp,0x4
10004bc2:	8d 45 be             	lea    eax,[ebp-0x42]
10004bc5:	50                   	push   eax
10004bc6:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10004bc9:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004bcc:	e8 fc ff ff ff       	call   10004bcd <rgtree(Reghive_Tag*, int, int)+0x4e>	10004bcd: R_386_PC32	CmGetNameAndTypeFromExtent(Reghive_Tag*, int, char*)
10004bd1:	83 c4 10             	add    esp,0x10
10004bd4:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10004bd7:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
10004bde:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10004be1:	3b 45 10             	cmp    eax,DWORD PTR [ebp+0x10]
10004be4:	7d 15                	jge    10004bfb <rgtree(Reghive_Tag*, int, int)+0x7c>
10004be6:	83 ec 0c             	sub    esp,0xc
10004be9:	68 25 bb 00 10       	push   0x1000bb25	10004bea: R_386_32	.text
10004bee:	e8 fc ff ff ff       	call   10004bef <rgtree(Reghive_Tag*, int, int)+0x70>	10004bef: R_386_PC32	Dbg::kprintf(char const*, ...)
10004bf3:	83 c4 10             	add    esp,0x10
10004bf6:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
10004bf9:	eb e3                	jmp    10004bde <rgtree(Reghive_Tag*, int, int)+0x5f>
10004bfb:	83 ec 08             	sub    esp,0x8
10004bfe:	8d 45 be             	lea    eax,[ebp-0x42]
10004c01:	50                   	push   eax
10004c02:	68 ef bf 00 10       	push   0x1000bfef	10004c03: R_386_32	.text
10004c07:	e8 fc ff ff ff       	call   10004c08 <rgtree(Reghive_Tag*, int, int)+0x89>	10004c08: R_386_PC32	Dbg::kprintf(char const*, ...)
10004c0c:	83 c4 10             	add    esp,0x10
10004c0f:	83 7d f0 4e          	cmp    DWORD PTR [ebp-0x10],0x4e
10004c13:	75 27                	jne    10004c3c <rgtree(Reghive_Tag*, int, int)+0xbd>
10004c15:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
10004c18:	8d 58 04             	lea    ebx,[eax+0x4]
10004c1b:	83 ec 08             	sub    esp,0x8
10004c1e:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10004c21:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004c24:	e8 fc ff ff ff       	call   10004c25 <rgtree(Reghive_Tag*, int, int)+0xa6>	10004c25: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
10004c29:	83 c4 10             	add    esp,0x10
10004c2c:	83 ec 04             	sub    esp,0x4
10004c2f:	53                   	push   ebx
10004c30:	50                   	push   eax
10004c31:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004c34:	e8 fc ff ff ff       	call   10004c35 <rgtree(Reghive_Tag*, int, int)+0xb6>	10004c35: R_386_PC32	rgtree(Reghive_Tag*, int, int)
10004c39:	83 c4 10             	add    esp,0x10
10004c3c:	83 ec 08             	sub    esp,0x8
10004c3f:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
10004c42:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10004c45:	e8 fc ff ff ff       	call   10004c46 <rgtree(Reghive_Tag*, int, int)+0xc7>	10004c46: R_386_PC32	CmGetNext(Reghive_Tag*, int)
10004c4a:	83 c4 10             	add    esp,0x10
10004c4d:	89 45 0c             	mov    DWORD PTR [ebp+0xc],eax
10004c50:	e9 4d ff ff ff       	jmp    10004ba2 <rgtree(Reghive_Tag*, int, int)+0x23>
10004c55:	90                   	nop
10004c56:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
10004c59:	c9                   	leave  
10004c5a:	c3                   	ret    

10004c5b <begin(void*)>:
10004c5b:	55                   	push   ebp
10004c5c:	89 e5                	mov    ebp,esp
10004c5e:	57                   	push   edi
10004c5f:	56                   	push   esi
10004c60:	53                   	push   ebx
10004c61:	81 ec 5c 02 00 00    	sub    esp,0x25c
10004c67:	c6 45 e7 00          	mov    BYTE PTR [ebp-0x19],0x0
10004c6b:	83 ec 0c             	sub    esp,0xc
10004c6e:	68 14 01 00 00       	push   0x114
10004c73:	e8 fc ff ff ff       	call   10004c74 <begin(void*)+0x19>	10004c74: R_386_PC32	operator new(unsigned long)
10004c78:	83 c4 10             	add    esp,0x10
10004c7b:	89 c3                	mov    ebx,eax
10004c7d:	a1 00 00 00 00       	mov    eax,ds:0x0	10004c7e: R_386_32	kernelProcess
10004c82:	83 ec 04             	sub    esp,0x4
10004c85:	50                   	push   eax
10004c86:	68 f4 bf 00 10       	push   0x1000bff4	10004c87: R_386_32	.text
10004c8b:	53                   	push   ebx
10004c8c:	e8 fc ff ff ff       	call   10004c8d <begin(void*)+0x32>	10004c8d: R_386_PC32	File::File(char const*, Process*)
10004c91:	83 c4 10             	add    esp,0x10
10004c94:	89 5d d8             	mov    DWORD PTR [ebp-0x28],ebx
10004c97:	83 7d d8 00          	cmp    DWORD PTR [ebp-0x28],0x0
10004c9b:	75 10                	jne    10004cad <begin(void*)+0x52>
10004c9d:	83 ec 0c             	sub    esp,0xc
10004ca0:	68 12 c0 00 10       	push   0x1000c012	10004ca1: R_386_32	.text
10004ca5:	e8 fc ff ff ff       	call   10004ca6 <begin(void*)+0x4b>	10004ca6: R_386_PC32	KePanic(char const*)
10004caa:	83 c4 10             	add    esp,0x10
10004cad:	83 ec 08             	sub    esp,0x8
10004cb0:	6a 01                	push   0x1
10004cb2:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10004cb5:	e8 fc ff ff ff       	call   10004cb6 <begin(void*)+0x5b>	10004cb6: R_386_PC32	File::open(FileOpenMode)
10004cba:	83 c4 10             	add    esp,0x10
10004cbd:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
10004cc0:	83 7d d4 00          	cmp    DWORD PTR [ebp-0x2c],0x0
10004cc4:	75 10                	jne    10004cd6 <begin(void*)+0x7b>
10004cc6:	83 ec 0c             	sub    esp,0xc
10004cc9:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10004ccc:	e8 fc ff ff ff       	call   10004ccd <begin(void*)+0x72>	10004ccd: R_386_PC32	File::close()
10004cd1:	83 c4 10             	add    esp,0x10
10004cd4:	eb 04                	jmp    10004cda <begin(void*)+0x7f>
10004cd6:	c6 45 e7 01          	mov    BYTE PTR [ebp-0x19],0x1
10004cda:	83 7d d8 00          	cmp    DWORD PTR [ebp-0x28],0x0
10004cde:	74 15                	je     10004cf5 <begin(void*)+0x9a>
10004ce0:	8b 45 d8             	mov    eax,DWORD PTR [ebp-0x28]
10004ce3:	8b 00                	mov    eax,DWORD PTR [eax]
10004ce5:	83 c0 08             	add    eax,0x8
10004ce8:	8b 00                	mov    eax,DWORD PTR [eax]
10004cea:	83 ec 0c             	sub    esp,0xc
10004ced:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
10004cf0:	ff d0                	call   eax
10004cf2:	83 c4 10             	add    esp,0x10
10004cf5:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10004cf7: R_386_32	KeIsPreemptionOn
10004cfc:	80 7d e7 00          	cmp    BYTE PTR [ebp-0x19],0x0
10004d00:	74 0f                	je     10004d11 <begin(void*)+0xb6>
10004d02:	83 ec 0c             	sub    esp,0xc
10004d05:	6a 00                	push   0x0
10004d07:	e8 fc ff ff ff       	call   10004d08 <begin(void*)+0xad>	10004d08: R_386_PC32	firstRun(bool)
10004d0c:	83 c4 10             	add    esp,0x10
10004d0f:	eb 05                	jmp    10004d16 <begin(void*)+0xbb>
10004d11:	e8 fc ff ff ff       	call   10004d12 <begin(void*)+0xb7>	10004d12: R_386_PC32	loadExtensions()
10004d16:	8d 45 b0             	lea    eax,[ebp-0x50]
10004d19:	bb 50 c2 00 10       	mov    ebx,0x1000c250	10004d1a: R_386_32	.text
10004d1e:	ba 04 00 00 00       	mov    edx,0x4
10004d23:	89 c7                	mov    edi,eax
10004d25:	89 de                	mov    esi,ebx
10004d27:	89 d1                	mov    ecx,edx
10004d29:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10004d2b:	80 7d e7 00          	cmp    BYTE PTR [ebp-0x19],0x0
10004d2f:	0f 84 e2 04 00 00    	je     10005217 <begin(void*)+0x5bc>
10004d35:	83 ec 0c             	sub    esp,0xc
10004d38:	68 24 07 00 00       	push   0x724
10004d3d:	e8 fc ff ff ff       	call   10004d3e <begin(void*)+0xe3>	10004d3e: R_386_PC32	operator new(unsigned long)
10004d42:	83 c4 10             	add    esp,0x10
10004d45:	89 c3                	mov    ebx,eax
10004d47:	8d 45 b0             	lea    eax,[ebp-0x50]
10004d4a:	50                   	push   eax
10004d4b:	6a 00                	push   0x0
10004d4d:	68 22 c0 00 10       	push   0x1000c022	10004d4e: R_386_32	.text
10004d52:	53                   	push   ebx
10004d53:	e8 fc ff ff ff       	call   10004d54 <begin(void*)+0xf9>	10004d54: R_386_PC32	Process::Process(char const*, Process*, char**)
10004d58:	83 c4 10             	add    esp,0x10
10004d5b:	89 5d d0             	mov    DWORD PTR [ebp-0x30],ebx
10004d5e:	83 ec 0c             	sub    esp,0xc
10004d61:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10004d64:	e8 fc ff ff ff       	call   10004d65 <begin(void*)+0x10a>	10004d65: R_386_PC32	Process::createUserThread()
10004d69:	83 c4 10             	add    esp,0x10
10004d6c:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004d6e: R_386_32	VgaText::hiddenOut
10004d73:	a1 00 00 00 00       	mov    eax,ds:0x0	10004d74: R_386_32	term
10004d78:	83 ec 0c             	sub    esp,0xc
10004d7b:	50                   	push   eax
10004d7c:	e8 fc ff ff ff       	call   10004d7d <begin(void*)+0x122>	10004d7d: R_386_PC32	setActiveTerminal(VgaText*)
10004d81:	83 c4 10             	add    esp,0x10
10004d84:	e8 fc ff ff ff       	call   10004d85 <begin(void*)+0x12a>	10004d85: R_386_PC32	drawBootScreen()
10004d89:	83 ec 0c             	sub    esp,0xc
10004d8c:	68 c9 be 00 10       	push   0x1000bec9	10004d8d: R_386_32	.text
10004d91:	6a 0d                	push   0xd
10004d93:	6a 32                	push   0x32
10004d95:	6a 05                	push   0x5
10004d97:	6a 16                	push   0x16
10004d99:	e8 fc ff ff ff       	call   10004d9a <begin(void*)+0x13f>	10004d9a: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10004d9e:	83 c4 20             	add    esp,0x20
10004da1:	83 ec 0c             	sub    esp,0xc
10004da4:	6a 03                	push   0x3
10004da6:	e8 fc ff ff ff       	call   10004da7 <begin(void*)+0x14c>	10004da7: R_386_PC32	bootInstallTasks(int)
10004dab:	83 c4 10             	add    esp,0x10
10004dae:	c6 05 00 00 00 00 01 	mov    BYTE PTR ds:0x0,0x1	10004db0: R_386_32	VgaText::hiddenOut
10004db5:	83 ec 0c             	sub    esp,0xc
10004db8:	68 14 01 00 00       	push   0x114
10004dbd:	e8 fc ff ff ff       	call   10004dbe <begin(void*)+0x163>	10004dbe: R_386_PC32	operator new(unsigned long)
10004dc2:	83 c4 10             	add    esp,0x10
10004dc5:	89 c3                	mov    ebx,eax
10004dc7:	a1 00 00 00 00       	mov    eax,ds:0x0	10004dc8: R_386_32	kernelProcess
10004dcc:	83 ec 04             	sub    esp,0x4
10004dcf:	50                   	push   eax
10004dd0:	68 3f c0 00 10       	push   0x1000c03f	10004dd1: R_386_32	.text
10004dd5:	53                   	push   ebx
10004dd6:	e8 fc ff ff ff       	call   10004dd7 <begin(void*)+0x17c>	10004dd7: R_386_PC32	File::File(char const*, Process*)
10004ddb:	83 c4 10             	add    esp,0x10
10004dde:	89 5d cc             	mov    DWORD PTR [ebp-0x34],ebx
10004de1:	83 ec 08             	sub    esp,0x8
10004de4:	6a 01                	push   0x1
10004de6:	ff 75 cc             	push   DWORD PTR [ebp-0x34]
10004de9:	e8 fc ff ff ff       	call   10004dea <begin(void*)+0x18f>	10004dea: R_386_PC32	File::open(FileOpenMode)
10004dee:	83 c4 10             	add    esp,0x10
10004df1:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10004df4:	83 7d c8 00          	cmp    DWORD PTR [ebp-0x38],0x0
10004df8:	75 39                	jne    10004e33 <begin(void*)+0x1d8>
10004dfa:	83 ec 0c             	sub    esp,0xc
10004dfd:	ff 75 cc             	push   DWORD PTR [ebp-0x34]
10004e00:	e8 fc ff ff ff       	call   10004e01 <begin(void*)+0x1a6>	10004e01: R_386_PC32	File::close()
10004e05:	83 c4 10             	add    esp,0x10
10004e08:	83 ec 0c             	sub    esp,0xc
10004e0b:	ff 75 cc             	push   DWORD PTR [ebp-0x34]
10004e0e:	e8 fc ff ff ff       	call   10004e0f <begin(void*)+0x1b4>	10004e0f: R_386_PC32	File::unlink()
10004e13:	83 c4 10             	add    esp,0x10
10004e16:	83 7d cc 00          	cmp    DWORD PTR [ebp-0x34],0x0
10004e1a:	74 44                	je     10004e60 <begin(void*)+0x205>
10004e1c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10004e1f:	8b 00                	mov    eax,DWORD PTR [eax]
10004e21:	83 c0 08             	add    eax,0x8
10004e24:	8b 00                	mov    eax,DWORD PTR [eax]
10004e26:	83 ec 0c             	sub    esp,0xc
10004e29:	ff 75 cc             	push   DWORD PTR [ebp-0x34]
10004e2c:	ff d0                	call   eax
10004e2e:	83 c4 10             	add    esp,0x10
10004e31:	eb 2d                	jmp    10004e60 <begin(void*)+0x205>
10004e33:	83 7d cc 00          	cmp    DWORD PTR [ebp-0x34],0x0
10004e37:	74 15                	je     10004e4e <begin(void*)+0x1f3>
10004e39:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10004e3c:	8b 00                	mov    eax,DWORD PTR [eax]
10004e3e:	83 c0 08             	add    eax,0x8
10004e41:	8b 00                	mov    eax,DWORD PTR [eax]
10004e43:	83 ec 0c             	sub    esp,0xc
10004e46:	ff 75 cc             	push   DWORD PTR [ebp-0x34]
10004e49:	ff d0                	call   eax
10004e4b:	83 c4 10             	add    esp,0x10
10004e4e:	83 ec 0c             	sub    esp,0xc
10004e51:	6a 01                	push   0x1
10004e53:	e8 fc ff ff ff       	call   10004e54 <begin(void*)+0x1f9>	10004e54: R_386_PC32	sleep(unsigned int)
10004e58:	83 c4 10             	add    esp,0x10
10004e5b:	e9 55 ff ff ff       	jmp    10004db5 <begin(void*)+0x15a>
10004e60:	90                   	nop
10004e61:	83 ec 0c             	sub    esp,0xc
10004e64:	6a 02                	push   0x2
10004e66:	e8 fc ff ff ff       	call   10004e67 <begin(void*)+0x20c>	10004e67: R_386_PC32	sleep(unsigned int)
10004e6b:	83 c4 10             	add    esp,0x10
10004e6e:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10004e70: R_386_32	VgaText::hiddenOut
10004e75:	a1 00 00 00 00       	mov    eax,ds:0x0	10004e76: R_386_32	term
10004e7a:	83 ec 0c             	sub    esp,0xc
10004e7d:	50                   	push   eax
10004e7e:	e8 fc ff ff ff       	call   10004e7f <begin(void*)+0x224>	10004e7f: R_386_PC32	setActiveTerminal(VgaText*)
10004e83:	83 c4 10             	add    esp,0x10
10004e86:	e8 fc ff ff ff       	call   10004e87 <begin(void*)+0x22c>	10004e87: R_386_PC32	drawBootScreen()
10004e8b:	83 ec 0c             	sub    esp,0xc
10004e8e:	68 c9 be 00 10       	push   0x1000bec9	10004e8f: R_386_32	.text
10004e93:	6a 0d                	push   0xd
10004e95:	6a 32                	push   0x32
10004e97:	6a 05                	push   0x5
10004e99:	6a 16                	push   0x16
10004e9b:	e8 fc ff ff ff       	call   10004e9c <begin(void*)+0x241>	10004e9c: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10004ea0:	83 c4 20             	add    esp,0x20
10004ea3:	83 ec 0c             	sub    esp,0xc
10004ea6:	6a 04                	push   0x4
10004ea8:	e8 fc ff ff ff       	call   10004ea9 <begin(void*)+0x24e>	10004ea9: R_386_PC32	bootInstallTasks(int)
10004ead:	83 c4 10             	add    esp,0x10
10004eb0:	83 ec 08             	sub    esp,0x8
10004eb3:	68 dd dd 00 00       	push   0xdddd
10004eb8:	68 49 c0 00 10       	push   0x1000c049	10004eb9: R_386_32	.text
10004ebd:	e8 fc ff ff ff       	call   10004ebe <begin(void*)+0x263>	10004ebe: R_386_PC32	backupTree(char*, unsigned short)
10004ec2:	83 c4 10             	add    esp,0x10
10004ec5:	83 ec 08             	sub    esp,0x8
10004ec8:	68 ee ee 00 00       	push   0xeeee
10004ecd:	68 5c c0 00 10       	push   0x1000c05c	10004ece: R_386_32	.text
10004ed2:	e8 fc ff ff ff       	call   10004ed3 <begin(void*)+0x278>	10004ed3: R_386_PC32	backupTree(char*, unsigned short)
10004ed7:	83 c4 10             	add    esp,0x10
10004eda:	83 ec 08             	sub    esp,0x8
10004edd:	68 ff ff 00 00       	push   0xffff
10004ee2:	68 6e c0 00 10       	push   0x1000c06e	10004ee3: R_386_32	.text
10004ee7:	e8 fc ff ff ff       	call   10004ee8 <begin(void*)+0x28d>	10004ee8: R_386_PC32	backupTree(char*, unsigned short)
10004eec:	83 c4 10             	add    esp,0x10
10004eef:	83 ec 0c             	sub    esp,0xc
10004ef2:	6a 05                	push   0x5
10004ef4:	e8 fc ff ff ff       	call   10004ef5 <begin(void*)+0x29a>	10004ef5: R_386_PC32	bootInstallTasks(int)
10004ef9:	83 c4 10             	add    esp,0x10
10004efc:	83 ec 0c             	sub    esp,0xc
10004eff:	68 84 c0 00 10       	push   0x1000c084	10004f00: R_386_32	.text
10004f04:	e8 fc ff ff ff       	call   10004f05 <begin(void*)+0x2aa>	10004f05: R_386_PC32	CmOpen(char const*)
10004f09:	83 c4 10             	add    esp,0x10
10004f0c:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10004f0f:	83 ec 04             	sub    esp,0x4
10004f12:	68 a9 c0 00 10       	push   0x1000c0a9	10004f13: R_386_32	.text
10004f17:	6a 00                	push   0x0
10004f19:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004f1c:	e8 fc ff ff ff       	call   10004f1d <begin(void*)+0x2c2>	10004f1d: R_386_PC32	CmCreateDirectory(Reghive_Tag*, int, char const*)
10004f21:	83 c4 10             	add    esp,0x10
10004f24:	83 ec 08             	sub    esp,0x8
10004f27:	68 a9 c0 00 10       	push   0x1000c0a9	10004f28: R_386_32	.text
10004f2c:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004f2f:	e8 fc ff ff ff       	call   10004f30 <begin(void*)+0x2d5>	10004f30: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10004f34:	83 c4 10             	add    esp,0x10
10004f37:	83 ec 08             	sub    esp,0x8
10004f3a:	50                   	push   eax
10004f3b:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004f3e:	e8 fc ff ff ff       	call   10004f3f <begin(void*)+0x2e4>	10004f3f: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
10004f43:	83 c4 10             	add    esp,0x10
10004f46:	83 ec 04             	sub    esp,0x4
10004f49:	68 b0 c0 00 10       	push   0x1000c0b0	10004f4a: R_386_32	.text
10004f4e:	50                   	push   eax
10004f4f:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004f52:	e8 fc ff ff ff       	call   10004f53 <begin(void*)+0x2f8>	10004f53: R_386_PC32	CmCreateDirectory(Reghive_Tag*, int, char const*)
10004f57:	83 c4 10             	add    esp,0x10
10004f5a:	83 ec 08             	sub    esp,0x8
10004f5d:	68 a9 c0 00 10       	push   0x1000c0a9	10004f5e: R_386_32	.text
10004f62:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004f65:	e8 fc ff ff ff       	call   10004f66 <begin(void*)+0x30b>	10004f66: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10004f6a:	83 c4 10             	add    esp,0x10
10004f6d:	83 ec 08             	sub    esp,0x8
10004f70:	50                   	push   eax
10004f71:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004f74:	e8 fc ff ff ff       	call   10004f75 <begin(void*)+0x31a>	10004f75: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
10004f79:	83 c4 10             	add    esp,0x10
10004f7c:	83 ec 04             	sub    esp,0x4
10004f7f:	68 b6 c0 00 10       	push   0x1000c0b6	10004f80: R_386_32	.text
10004f84:	50                   	push   eax
10004f85:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004f88:	e8 fc ff ff ff       	call   10004f89 <begin(void*)+0x32e>	10004f89: R_386_PC32	CmCreateDirectory(Reghive_Tag*, int, char const*)
10004f8d:	83 c4 10             	add    esp,0x10
10004f90:	83 ec 08             	sub    esp,0x8
10004f93:	68 bb c0 00 10       	push   0x1000c0bb	10004f94: R_386_32	.text
10004f98:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004f9b:	e8 fc ff ff ff       	call   10004f9c <begin(void*)+0x341>	10004f9c: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10004fa0:	83 c4 10             	add    esp,0x10
10004fa3:	83 ec 08             	sub    esp,0x8
10004fa6:	50                   	push   eax
10004fa7:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004faa:	e8 fc ff ff ff       	call   10004fab <begin(void*)+0x350>	10004fab: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
10004faf:	83 c4 10             	add    esp,0x10
10004fb2:	83 ec 04             	sub    esp,0x4
10004fb5:	68 c8 c0 00 10       	push   0x1000c0c8	10004fb6: R_386_32	.text
10004fba:	50                   	push   eax
10004fbb:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004fbe:	e8 fc ff ff ff       	call   10004fbf <begin(void*)+0x364>	10004fbf: R_386_PC32	CmCreateString(Reghive_Tag*, int, char const*)
10004fc3:	83 c4 10             	add    esp,0x10
10004fc6:	83 ec 08             	sub    esp,0x8
10004fc9:	68 bb c0 00 10       	push   0x1000c0bb	10004fca: R_386_32	.text
10004fce:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004fd1:	e8 fc ff ff ff       	call   10004fd2 <begin(void*)+0x377>	10004fd2: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10004fd6:	83 c4 10             	add    esp,0x10
10004fd9:	83 ec 08             	sub    esp,0x8
10004fdc:	50                   	push   eax
10004fdd:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004fe0:	e8 fc ff ff ff       	call   10004fe1 <begin(void*)+0x386>	10004fe1: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
10004fe5:	83 c4 10             	add    esp,0x10
10004fe8:	83 ec 04             	sub    esp,0x4
10004feb:	68 cd c0 00 10       	push   0x1000c0cd	10004fec: R_386_32	.text
10004ff0:	50                   	push   eax
10004ff1:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10004ff4:	e8 fc ff ff ff       	call   10004ff5 <begin(void*)+0x39a>	10004ff5: R_386_PC32	CmCreateString(Reghive_Tag*, int, char const*)
10004ff9:	83 c4 10             	add    esp,0x10
10004ffc:	83 ec 08             	sub    esp,0x8
10004fff:	68 bb c0 00 10       	push   0x1000c0bb	10005000: R_386_32	.text
10005004:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10005007:	e8 fc ff ff ff       	call   10005008 <begin(void*)+0x3ad>	10005008: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
1000500c:	83 c4 10             	add    esp,0x10
1000500f:	83 ec 08             	sub    esp,0x8
10005012:	50                   	push   eax
10005013:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10005016:	e8 fc ff ff ff       	call   10005017 <begin(void*)+0x3bc>	10005017: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
1000501b:	83 c4 10             	add    esp,0x10
1000501e:	83 ec 04             	sub    esp,0x4
10005021:	68 d5 c0 00 10       	push   0x1000c0d5	10005022: R_386_32	.text
10005026:	50                   	push   eax
10005027:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
1000502a:	e8 fc ff ff ff       	call   1000502b <begin(void*)+0x3d0>	1000502b: R_386_PC32	CmCreateString(Reghive_Tag*, int, char const*)
1000502f:	83 c4 10             	add    esp,0x10
10005032:	a1 00 00 00 00       	mov    eax,ds:0x0	10005033: R_386_32	modesel
10005037:	89 c3                	mov    ebx,eax
10005039:	89 c6                	mov    esi,eax
1000503b:	c1 fe 1f             	sar    esi,0x1f
1000503e:	83 ec 08             	sub    esp,0x8
10005041:	68 e0 c0 00 10       	push   0x1000c0e0	10005042: R_386_32	.text
10005046:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10005049:	e8 fc ff ff ff       	call   1000504a <begin(void*)+0x3ef>	1000504a: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
1000504e:	83 c4 10             	add    esp,0x10
10005051:	83 ec 08             	sub    esp,0x8
10005054:	50                   	push   eax
10005055:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10005058:	e8 fc ff ff ff       	call   10005059 <begin(void*)+0x3fe>	10005059: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
1000505d:	83 c4 10             	add    esp,0x10
10005060:	83 ec 08             	sub    esp,0x8
10005063:	6a 6a                	push   0x6a
10005065:	56                   	push   esi
10005066:	53                   	push   ebx
10005067:	68 ec c0 00 10       	push   0x1000c0ec	10005068: R_386_32	.text
1000506c:	50                   	push   eax
1000506d:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10005070:	e8 fc ff ff ff       	call   10005071 <begin(void*)+0x416>	10005071: R_386_PC32	CmCreateInteger(Reghive_Tag*, int, char const*, unsigned long long, int)
10005075:	83 c4 20             	add    esp,0x20
10005078:	83 ec 08             	sub    esp,0x8
1000507b:	68 f4 c0 00 10       	push   0x1000c0f4	1000507c: R_386_32	.text
10005080:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10005083:	e8 fc ff ff ff       	call   10005084 <begin(void*)+0x429>	10005084: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10005088:	83 c4 10             	add    esp,0x10
1000508b:	83 ec 04             	sub    esp,0x4
1000508e:	68 00 00 00 00       	push   0x0	1000508f: R_386_32	currName
10005093:	50                   	push   eax
10005094:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
10005097:	e8 fc ff ff ff       	call   10005098 <begin(void*)+0x43d>	10005098: R_386_PC32	CmSetString(Reghive_Tag*, int, char const*)
1000509c:	83 c4 10             	add    esp,0x10
1000509f:	83 ec 08             	sub    esp,0x8
100050a2:	68 06 c1 00 10       	push   0x1000c106	100050a3: R_386_32	.text
100050a7:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
100050aa:	e8 fc ff ff ff       	call   100050ab <begin(void*)+0x450>	100050ab: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
100050af:	83 c4 10             	add    esp,0x10
100050b2:	83 ec 04             	sub    esp,0x4
100050b5:	68 00 00 00 00       	push   0x0	100050b6: R_386_32	currComp
100050ba:	50                   	push   eax
100050bb:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
100050be:	e8 fc ff ff ff       	call   100050bf <begin(void*)+0x464>	100050bf: R_386_PC32	CmSetString(Reghive_Tag*, int, char const*)
100050c3:	83 c4 10             	add    esp,0x10
100050c6:	83 ec 08             	sub    esp,0x8
100050c9:	68 1b c1 00 10       	push   0x1000c11b	100050ca: R_386_32	.text
100050ce:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
100050d1:	e8 fc ff ff ff       	call   100050d2 <begin(void*)+0x477>	100050d2: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
100050d6:	83 c4 10             	add    esp,0x10
100050d9:	83 ec 04             	sub    esp,0x4
100050dc:	68 00 00 00 00       	push   0x0	100050dd: R_386_32	pkeybuf
100050e1:	50                   	push   eax
100050e2:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
100050e5:	e8 fc ff ff ff       	call   100050e6 <begin(void*)+0x48b>	100050e6: R_386_PC32	CmSetString(Reghive_Tag*, int, char const*)
100050ea:	83 c4 10             	add    esp,0x10
100050ed:	83 ec 0c             	sub    esp,0xc
100050f0:	ff 75 c4             	push   DWORD PTR [ebp-0x3c]
100050f3:	e8 fc ff ff ff       	call   100050f4 <begin(void*)+0x499>	100050f4: R_386_PC32	CmClose(Reghive_Tag*)
100050f8:	83 c4 10             	add    esp,0x10
100050fb:	a1 00 00 00 00       	mov    eax,ds:0x0	100050fc: R_386_32	term
10005100:	83 ec 0c             	sub    esp,0xc
10005103:	50                   	push   eax
10005104:	e8 fc ff ff ff       	call   10005105 <begin(void*)+0x4aa>	10005105: R_386_PC32	setActiveTerminal(VgaText*)
10005109:	83 c4 10             	add    esp,0x10
1000510c:	e8 fc ff ff ff       	call   1000510d <begin(void*)+0x4b2>	1000510d: R_386_PC32	drawBootScreen()
10005111:	83 ec 0c             	sub    esp,0xc
10005114:	68 c9 be 00 10       	push   0x1000bec9	10005115: R_386_32	.text
10005119:	6a 0d                	push   0xd
1000511b:	6a 32                	push   0x32
1000511d:	6a 05                	push   0x5
1000511f:	6a 16                	push   0x16
10005121:	e8 fc ff ff ff       	call   10005122 <begin(void*)+0x4c7>	10005122: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
10005126:	83 c4 20             	add    esp,0x20
10005129:	a1 00 00 00 00       	mov    eax,ds:0x0	1000512a: R_386_32	term
1000512e:	83 ec 04             	sub    esp,0x4
10005131:	6a 08                	push   0x8
10005133:	6a 18                	push   0x18
10005135:	50                   	push   eax
10005136:	e8 fc ff ff ff       	call   10005137 <begin(void*)+0x4dc>	10005137: R_386_PC32	VgaText::setCursor(int, int)
1000513b:	83 c4 10             	add    esp,0x10
1000513e:	a1 00 00 00 00       	mov    eax,ds:0x0	1000513f: R_386_32	term
10005143:	83 ec 08             	sub    esp,0x8
10005146:	68 34 c1 00 10       	push   0x1000c134	10005147: R_386_32	.text
1000514b:	50                   	push   eax
1000514c:	e8 fc ff ff ff       	call   1000514d <begin(void*)+0x4f2>	1000514d: R_386_PC32	VgaText::puts(char const*)
10005151:	83 c4 10             	add    esp,0x10
10005154:	a1 00 00 00 00       	mov    eax,ds:0x0	10005155: R_386_32	term
10005159:	83 ec 04             	sub    esp,0x4
1000515c:	6a 0a                	push   0xa
1000515e:	6a 18                	push   0x18
10005160:	50                   	push   eax
10005161:	e8 fc ff ff ff       	call   10005162 <begin(void*)+0x507>	10005162: R_386_PC32	VgaText::setCursor(int, int)
10005166:	83 c4 10             	add    esp,0x10
10005169:	a1 00 00 00 00       	mov    eax,ds:0x0	1000516a: R_386_32	term
1000516e:	83 ec 08             	sub    esp,0x8
10005171:	68 5c c1 00 10       	push   0x1000c15c	10005172: R_386_32	.text
10005176:	50                   	push   eax
10005177:	e8 fc ff ff ff       	call   10005178 <begin(void*)+0x51d>	10005178: R_386_PC32	VgaText::puts(char const*)
1000517c:	83 c4 10             	add    esp,0x10
1000517f:	a1 00 00 00 00       	mov    eax,ds:0x0	10005180: R_386_32	term
10005184:	83 ec 04             	sub    esp,0x4
10005187:	6a 0b                	push   0xb
10005189:	6a 18                	push   0x18
1000518b:	50                   	push   eax
1000518c:	e8 fc ff ff ff       	call   1000518d <begin(void*)+0x532>	1000518d: R_386_PC32	VgaText::setCursor(int, int)
10005191:	83 c4 10             	add    esp,0x10
10005194:	a1 00 00 00 00       	mov    eax,ds:0x0	10005195: R_386_32	term
10005199:	83 ec 08             	sub    esp,0x8
1000519c:	68 88 c1 00 10       	push   0x1000c188	1000519d: R_386_32	.text
100051a1:	50                   	push   eax
100051a2:	e8 fc ff ff ff       	call   100051a3 <begin(void*)+0x548>	100051a3: R_386_PC32	VgaText::puts(char const*)
100051a7:	83 c4 10             	add    esp,0x10
100051aa:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100051ac: R_386_32	installKey
100051b1:	a0 00 00 00 00       	mov    al,ds:0x0	100051b2: R_386_32	installKey
100051b6:	84 c0                	test   al,al
100051b8:	0f 94 c0             	sete   al
100051bb:	84 c0                	test   al,al
100051bd:	74 02                	je     100051c1 <begin(void*)+0x566>
100051bf:	eb f0                	jmp    100051b1 <begin(void*)+0x556>
100051c1:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	100051c3: R_386_32	installKey
100051c8:	a1 00 00 00 00       	mov    eax,ds:0x0	100051c9: R_386_32	term
100051cd:	83 ec 04             	sub    esp,0x4
100051d0:	6a 0c                	push   0xc
100051d2:	6a 18                	push   0x18
100051d4:	50                   	push   eax
100051d5:	e8 fc ff ff ff       	call   100051d6 <begin(void*)+0x57b>	100051d6: R_386_PC32	VgaText::setCursor(int, int)
100051da:	83 c4 10             	add    esp,0x10
100051dd:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100051df: R_386_32	Krnl::computer
100051e3:	a1 00 00 00 00       	mov    eax,ds:0x0	100051e4: R_386_32	Krnl::computer
100051e8:	8b 00                	mov    eax,DWORD PTR [eax]
100051ea:	83 c0 0c             	add    eax,0xc
100051ed:	8b 00                	mov    eax,DWORD PTR [eax]
100051ef:	6a 00                	push   0x0
100051f1:	6a 00                	push   0x0
100051f3:	6a 01                	push   0x1
100051f5:	52                   	push   edx
100051f6:	ff d0                	call   eax
100051f8:	83 c4 10             	add    esp,0x10
100051fb:	a1 00 00 00 00       	mov    eax,ds:0x0	100051fc: R_386_32	term
10005200:	6a 0f                	push   0xf
10005202:	6a 0c                	push   0xc
10005204:	68 9c c1 00 10       	push   0x1000c19c	10005205: R_386_32	.text
10005209:	50                   	push   eax
1000520a:	e8 fc ff ff ff       	call   1000520b <begin(void*)+0x5b0>	1000520b: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
1000520f:	83 c4 10             	add    esp,0x10
10005212:	e9 ad 03 00 00       	jmp    100055c4 <begin(void*)+0x969>
10005217:	83 ec 0c             	sub    esp,0xc
1000521a:	68 84 c0 00 10       	push   0x1000c084	1000521b: R_386_32	.text
1000521f:	e8 fc ff ff ff       	call   10005220 <begin(void*)+0x5c5>	10005220: R_386_PC32	CmOpen(char const*)
10005224:	83 c4 10             	add    esp,0x10
10005227:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
1000522a:	83 ec 08             	sub    esp,0x8
1000522d:	68 1b c1 00 10       	push   0x1000c11b	1000522e: R_386_32	.text
10005232:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10005235:	e8 fc ff ff ff       	call   10005236 <begin(void*)+0x5db>	10005236: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
1000523a:	83 c4 10             	add    esp,0x10
1000523d:	83 ec 04             	sub    esp,0x4
10005240:	8d 95 b0 fd ff ff    	lea    edx,[ebp-0x250]
10005246:	52                   	push   edx
10005247:	50                   	push   eax
10005248:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
1000524b:	e8 fc ff ff ff       	call   1000524c <begin(void*)+0x5f1>	1000524c: R_386_PC32	CmGetString(Reghive_Tag*, int, char*)
10005250:	83 c4 10             	add    esp,0x10
10005253:	83 ec 08             	sub    esp,0x8
10005256:	68 c2 c1 00 10       	push   0x1000c1c2	10005257: R_386_32	.text
1000525b:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
1000525e:	e8 fc ff ff ff       	call   1000525f <begin(void*)+0x604>	1000525f: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10005263:	83 c4 10             	add    esp,0x10
10005266:	83 ec 04             	sub    esp,0x4
10005269:	8d 55 a8             	lea    edx,[ebp-0x58]
1000526c:	52                   	push   edx
1000526d:	50                   	push   eax
1000526e:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10005271:	e8 fc ff ff ff       	call   10005272 <begin(void*)+0x617>	10005272: R_386_PC32	CmGetInteger(Reghive_Tag*, int, unsigned long long*)
10005276:	83 c4 10             	add    esp,0x10
10005279:	83 ec 0c             	sub    esp,0xc
1000527c:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
1000527f:	e8 fc ff ff ff       	call   10005280 <begin(void*)+0x625>	10005280: R_386_PC32	CmClose(Reghive_Tag*)
10005284:	83 c4 10             	add    esp,0x10
10005287:	83 ec 0c             	sub    esp,0xc
1000528a:	8d 85 b0 fd ff ff    	lea    eax,[ebp-0x250]
10005290:	50                   	push   eax
10005291:	e8 fc ff ff ff       	call   10005292 <begin(void*)+0x637>	10005292: R_386_PC32	checkExtendedKey(char*)
10005296:	83 c4 10             	add    esp,0x10
10005299:	85 c0                	test   eax,eax
1000529b:	0f 94 c0             	sete   al
1000529e:	84 c0                	test   al,al
100052a0:	0f 84 ed 01 00 00    	je     10005493 <begin(void*)+0x838>
100052a6:	83 ec 0c             	sub    esp,0xc
100052a9:	6a 01                	push   0x1
100052ab:	e8 fc ff ff ff       	call   100052ac <begin(void*)+0x651>	100052ac: R_386_PC32	firstRun(bool)
100052b0:	83 c4 10             	add    esp,0x10
100052b3:	83 ec 0c             	sub    esp,0xc
100052b6:	68 84 c0 00 10       	push   0x1000c084	100052b7: R_386_32	.text
100052bb:	e8 fc ff ff ff       	call   100052bc <begin(void*)+0x661>	100052bc: R_386_PC32	CmOpen(char const*)
100052c0:	83 c4 10             	add    esp,0x10
100052c3:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
100052c6:	83 ec 04             	sub    esp,0x4
100052c9:	68 a9 c0 00 10       	push   0x1000c0a9	100052ca: R_386_32	.text
100052ce:	6a 00                	push   0x0
100052d0:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
100052d3:	e8 fc ff ff ff       	call   100052d4 <begin(void*)+0x679>	100052d4: R_386_PC32	CmCreateDirectory(Reghive_Tag*, int, char const*)
100052d8:	83 c4 10             	add    esp,0x10
100052db:	83 ec 08             	sub    esp,0x8
100052de:	68 a9 c0 00 10       	push   0x1000c0a9	100052df: R_386_32	.text
100052e3:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
100052e6:	e8 fc ff ff ff       	call   100052e7 <begin(void*)+0x68c>	100052e7: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
100052eb:	83 c4 10             	add    esp,0x10
100052ee:	83 ec 08             	sub    esp,0x8
100052f1:	50                   	push   eax
100052f2:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
100052f5:	e8 fc ff ff ff       	call   100052f6 <begin(void*)+0x69b>	100052f6: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
100052fa:	83 c4 10             	add    esp,0x10
100052fd:	83 ec 04             	sub    esp,0x4
10005300:	68 b0 c0 00 10       	push   0x1000c0b0	10005301: R_386_32	.text
10005305:	50                   	push   eax
10005306:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10005309:	e8 fc ff ff ff       	call   1000530a <begin(void*)+0x6af>	1000530a: R_386_PC32	CmCreateDirectory(Reghive_Tag*, int, char const*)
1000530e:	83 c4 10             	add    esp,0x10
10005311:	83 ec 08             	sub    esp,0x8
10005314:	68 bb c0 00 10       	push   0x1000c0bb	10005315: R_386_32	.text
10005319:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
1000531c:	e8 fc ff ff ff       	call   1000531d <begin(void*)+0x6c2>	1000531d: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10005321:	83 c4 10             	add    esp,0x10
10005324:	83 ec 08             	sub    esp,0x8
10005327:	50                   	push   eax
10005328:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
1000532b:	e8 fc ff ff ff       	call   1000532c <begin(void*)+0x6d1>	1000532c: R_386_PC32	CmEnterDirectory(Reghive_Tag*, int)
10005330:	83 c4 10             	add    esp,0x10
10005333:	83 ec 04             	sub    esp,0x4
10005336:	68 d5 c0 00 10       	push   0x1000c0d5	10005337: R_386_32	.text
1000533b:	50                   	push   eax
1000533c:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
1000533f:	e8 fc ff ff ff       	call   10005340 <begin(void*)+0x6e5>	10005340: R_386_PC32	CmCreateString(Reghive_Tag*, int, char const*)
10005344:	83 c4 10             	add    esp,0x10
10005347:	83 ec 08             	sub    esp,0x8
1000534a:	68 1b c1 00 10       	push   0x1000c11b	1000534b: R_386_32	.text
1000534f:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10005352:	e8 fc ff ff ff       	call   10005353 <begin(void*)+0x6f8>	10005353: R_386_PC32	CmFindObjectFromPath(Reghive_Tag*, char const*)
10005357:	83 c4 10             	add    esp,0x10
1000535a:	83 ec 04             	sub    esp,0x4
1000535d:	68 00 00 00 00       	push   0x0	1000535e: R_386_32	pkeybuf
10005362:	50                   	push   eax
10005363:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10005366:	e8 fc ff ff ff       	call   10005367 <begin(void*)+0x70c>	10005367: R_386_PC32	CmSetString(Reghive_Tag*, int, char const*)
1000536b:	83 c4 10             	add    esp,0x10
1000536e:	83 ec 0c             	sub    esp,0xc
10005371:	ff 75 c0             	push   DWORD PTR [ebp-0x40]
10005374:	e8 fc ff ff ff       	call   10005375 <begin(void*)+0x71a>	10005375: R_386_PC32	CmClose(Reghive_Tag*)
10005379:	83 c4 10             	add    esp,0x10
1000537c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000537d: R_386_32	term
10005381:	83 ec 0c             	sub    esp,0xc
10005384:	50                   	push   eax
10005385:	e8 fc ff ff ff       	call   10005386 <begin(void*)+0x72b>	10005386: R_386_PC32	setActiveTerminal(VgaText*)
1000538a:	83 c4 10             	add    esp,0x10
1000538d:	e8 fc ff ff ff       	call   1000538e <begin(void*)+0x733>	1000538e: R_386_PC32	drawBootScreen()
10005392:	83 ec 0c             	sub    esp,0xc
10005395:	68 d6 c1 00 10       	push   0x1000c1d6	10005396: R_386_32	.text
1000539a:	6a 0d                	push   0xd
1000539c:	6a 32                	push   0x32
1000539e:	6a 05                	push   0x5
100053a0:	6a 16                	push   0x16
100053a2:	e8 fc ff ff ff       	call   100053a3 <begin(void*)+0x748>	100053a3: R_386_PC32	drawBasicWindow(int, int, int, int, char const*)
100053a7:	83 c4 20             	add    esp,0x20
100053aa:	a1 00 00 00 00       	mov    eax,ds:0x0	100053ab: R_386_32	term
100053af:	83 ec 04             	sub    esp,0x4
100053b2:	6a 08                	push   0x8
100053b4:	6a 18                	push   0x18
100053b6:	50                   	push   eax
100053b7:	e8 fc ff ff ff       	call   100053b8 <begin(void*)+0x75d>	100053b8: R_386_PC32	VgaText::setCursor(int, int)
100053bc:	83 c4 10             	add    esp,0x10
100053bf:	a1 00 00 00 00       	mov    eax,ds:0x0	100053c0: R_386_32	term
100053c4:	83 ec 08             	sub    esp,0x8
100053c7:	68 ec c1 00 10       	push   0x1000c1ec	100053c8: R_386_32	.text
100053cc:	50                   	push   eax
100053cd:	e8 fc ff ff ff       	call   100053ce <begin(void*)+0x773>	100053ce: R_386_PC32	VgaText::puts(char const*)
100053d2:	83 c4 10             	add    esp,0x10
100053d5:	a1 00 00 00 00       	mov    eax,ds:0x0	100053d6: R_386_32	term
100053da:	83 ec 04             	sub    esp,0x4
100053dd:	6a 0a                	push   0xa
100053df:	6a 18                	push   0x18
100053e1:	50                   	push   eax
100053e2:	e8 fc ff ff ff       	call   100053e3 <begin(void*)+0x788>	100053e3: R_386_PC32	VgaText::setCursor(int, int)
100053e7:	83 c4 10             	add    esp,0x10
100053ea:	a1 00 00 00 00       	mov    eax,ds:0x0	100053eb: R_386_32	term
100053ef:	83 ec 08             	sub    esp,0x8
100053f2:	68 5c c1 00 10       	push   0x1000c15c	100053f3: R_386_32	.text
100053f7:	50                   	push   eax
100053f8:	e8 fc ff ff ff       	call   100053f9 <begin(void*)+0x79e>	100053f9: R_386_PC32	VgaText::puts(char const*)
100053fd:	83 c4 10             	add    esp,0x10
10005400:	a1 00 00 00 00       	mov    eax,ds:0x0	10005401: R_386_32	term
10005405:	83 ec 04             	sub    esp,0x4
10005408:	6a 0b                	push   0xb
1000540a:	6a 18                	push   0x18
1000540c:	50                   	push   eax
1000540d:	e8 fc ff ff ff       	call   1000540e <begin(void*)+0x7b3>	1000540e: R_386_PC32	VgaText::setCursor(int, int)
10005412:	83 c4 10             	add    esp,0x10
10005415:	a1 00 00 00 00       	mov    eax,ds:0x0	10005416: R_386_32	term
1000541a:	83 ec 08             	sub    esp,0x8
1000541d:	68 88 c1 00 10       	push   0x1000c188	1000541e: R_386_32	.text
10005422:	50                   	push   eax
10005423:	e8 fc ff ff ff       	call   10005424 <begin(void*)+0x7c9>	10005424: R_386_PC32	VgaText::puts(char const*)
10005428:	83 c4 10             	add    esp,0x10
1000542b:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	1000542d: R_386_32	installKey
10005432:	a0 00 00 00 00       	mov    al,ds:0x0	10005433: R_386_32	installKey
10005437:	84 c0                	test   al,al
10005439:	0f 94 c0             	sete   al
1000543c:	84 c0                	test   al,al
1000543e:	74 02                	je     10005442 <begin(void*)+0x7e7>
10005440:	eb f0                	jmp    10005432 <begin(void*)+0x7d7>
10005442:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10005444: R_386_32	installKey
10005449:	a1 00 00 00 00       	mov    eax,ds:0x0	1000544a: R_386_32	term
1000544e:	83 ec 04             	sub    esp,0x4
10005451:	6a 0c                	push   0xc
10005453:	6a 18                	push   0x18
10005455:	50                   	push   eax
10005456:	e8 fc ff ff ff       	call   10005457 <begin(void*)+0x7fc>	10005457: R_386_PC32	VgaText::setCursor(int, int)
1000545b:	83 c4 10             	add    esp,0x10
1000545e:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	10005460: R_386_32	Krnl::computer
10005464:	a1 00 00 00 00       	mov    eax,ds:0x0	10005465: R_386_32	Krnl::computer
10005469:	8b 00                	mov    eax,DWORD PTR [eax]
1000546b:	83 c0 0c             	add    eax,0xc
1000546e:	8b 00                	mov    eax,DWORD PTR [eax]
10005470:	6a 00                	push   0x0
10005472:	6a 00                	push   0x0
10005474:	6a 01                	push   0x1
10005476:	52                   	push   edx
10005477:	ff d0                	call   eax
10005479:	83 c4 10             	add    esp,0x10
1000547c:	a1 00 00 00 00       	mov    eax,ds:0x0	1000547d: R_386_32	term
10005481:	6a 0f                	push   0xf
10005483:	6a 0c                	push   0xc
10005485:	68 9c c1 00 10       	push   0x1000c19c	10005486: R_386_32	.text
1000548a:	50                   	push   eax
1000548b:	e8 fc ff ff ff       	call   1000548c <begin(void*)+0x831>	1000548c: R_386_PC32	VgaText::puts(char const*, VgaColour, VgaColour)
10005490:	83 c4 10             	add    esp,0x10
10005493:	c6 05 00 00 00 00 00 	mov    BYTE PTR ds:0x0,0x0	10005495: R_386_32	VgaText::hiddenOut
1000549a:	83 ec 0c             	sub    esp,0xc
1000549d:	68 24 07 00 00       	push   0x724
100054a2:	e8 fc ff ff ff       	call   100054a3 <begin(void*)+0x848>	100054a3: R_386_PC32	operator new(unsigned long)
100054a7:	83 c4 10             	add    esp,0x10
100054aa:	89 c3                	mov    ebx,eax
100054ac:	6a 00                	push   0x0
100054ae:	6a 00                	push   0x0
100054b0:	68 22 c0 00 10       	push   0x1000c022	100054b1: R_386_32	.text
100054b5:	53                   	push   ebx
100054b6:	e8 fc ff ff ff       	call   100054b7 <begin(void*)+0x85c>	100054b7: R_386_PC32	Process::Process(char const*, Process*, char**)
100054bb:	83 c4 10             	add    esp,0x10
100054be:	89 5d d0             	mov    DWORD PTR [ebp-0x30],ebx
100054c1:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100054c4:	8b 80 06 05 00 00    	mov    eax,DWORD PTR [eax+0x506]
100054ca:	83 ec 0c             	sub    esp,0xc
100054cd:	50                   	push   eax
100054ce:	e8 fc ff ff ff       	call   100054cf <begin(void*)+0x874>	100054cf: R_386_PC32	setActiveTerminal(VgaText*)
100054d3:	83 c4 10             	add    esp,0x10
100054d6:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
100054dd:	83 7d e0 18          	cmp    DWORD PTR [ebp-0x20],0x18
100054e1:	7f 2e                	jg     10005511 <begin(void*)+0x8b6>
100054e3:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [ebp-0x24],0x0
100054ea:	83 7d dc 4f          	cmp    DWORD PTR [ebp-0x24],0x4f
100054ee:	7f 1c                	jg     1000550c <begin(void*)+0x8b1>
100054f0:	83 ec 0c             	sub    esp,0xc
100054f3:	ff 75 e0             	push   DWORD PTR [ebp-0x20]
100054f6:	ff 75 dc             	push   DWORD PTR [ebp-0x24]
100054f9:	6a 00                	push   0x0
100054fb:	6a 07                	push   0x7
100054fd:	6a 20                	push   0x20
100054ff:	e8 fc ff ff ff       	call   10005500 <begin(void*)+0x8a5>	10005500: R_386_PC32	HalConsoleWriteCharacter(char, int, int, int, int)
10005504:	83 c4 20             	add    esp,0x20
10005507:	ff 45 dc             	inc    DWORD PTR [ebp-0x24]
1000550a:	eb de                	jmp    100054ea <begin(void*)+0x88f>
1000550c:	ff 45 e0             	inc    DWORD PTR [ebp-0x20]
1000550f:	eb cc                	jmp    100054dd <begin(void*)+0x882>
10005511:	83 ec 0c             	sub    esp,0xc
10005514:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
10005517:	e8 fc ff ff ff       	call   10005518 <begin(void*)+0x8bd>	10005518: R_386_PC32	Process::createUserThread()
1000551c:	83 c4 10             	add    esp,0x10
1000551f:	8b 45 a8             	mov    eax,DWORD PTR [ebp-0x58]
10005522:	8b 55 ac             	mov    edx,DWORD PTR [ebp-0x54]
10005525:	89 c1                	mov    ecx,eax
10005527:	83 f1 01             	xor    ecx,0x1
1000552a:	89 8d a0 fd ff ff    	mov    DWORD PTR [ebp-0x260],ecx
10005530:	89 d0                	mov    eax,edx
10005532:	80 f4 00             	xor    ah,0x0
10005535:	89 85 a4 fd ff ff    	mov    DWORD PTR [ebp-0x25c],eax
1000553b:	8b 8d a0 fd ff ff    	mov    ecx,DWORD PTR [ebp-0x260]
10005541:	8b 9d a4 fd ff ff    	mov    ebx,DWORD PTR [ebp-0x25c]
10005547:	89 d8                	mov    eax,ebx
10005549:	09 c8                	or     eax,ecx
1000554b:	85 c0                	test   eax,eax
1000554d:	75 17                	jne    10005566 <begin(void*)+0x90b>
1000554f:	a1 00 00 00 00       	mov    eax,ds:0x0	10005550: R_386_32	kernelProcess
10005554:	6a 01                	push   0x1
10005556:	6a 00                	push   0x0
10005558:	68 00 00 00 00       	push   0x0	10005559: R_386_32	startGUI(void*)
1000555d:	50                   	push   eax
1000555e:	e8 fc ff ff ff       	call   1000555f <begin(void*)+0x904>	1000555f: R_386_PC32	Process::createThread(void (*)(void*), void*, int)
10005563:	83 c4 10             	add    esp,0x10
10005566:	8b 45 a8             	mov    eax,DWORD PTR [ebp-0x58]
10005569:	8b 55 ac             	mov    edx,DWORD PTR [ebp-0x54]
1000556c:	89 c6                	mov    esi,eax
1000556e:	83 f6 02             	xor    esi,0x2
10005571:	89 b5 98 fd ff ff    	mov    DWORD PTR [ebp-0x268],esi
10005577:	89 d0                	mov    eax,edx
10005579:	80 f4 00             	xor    ah,0x0
1000557c:	89 85 9c fd ff ff    	mov    DWORD PTR [ebp-0x264],eax
10005582:	8b b5 98 fd ff ff    	mov    esi,DWORD PTR [ebp-0x268]
10005588:	8b bd 9c fd ff ff    	mov    edi,DWORD PTR [ebp-0x264]
1000558e:	89 f8                	mov    eax,edi
10005590:	09 f0                	or     eax,esi
10005592:	85 c0                	test   eax,eax
10005594:	75 17                	jne    100055ad <begin(void*)+0x952>
10005596:	a1 00 00 00 00       	mov    eax,ds:0x0	10005597: R_386_32	kernelProcess
1000559b:	6a 01                	push   0x1
1000559d:	6a 00                	push   0x0
1000559f:	68 00 00 00 00       	push   0x0	100055a0: R_386_32	startGUIVESA(void*)
100055a4:	50                   	push   eax
100055a5:	e8 fc ff ff ff       	call   100055a6 <begin(void*)+0x94b>	100055a6: R_386_PC32	Process::createThread(void (*)(void*), void*, int)
100055aa:	83 c4 10             	add    esp,0x10
100055ad:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100055b0:	8b 00                	mov    eax,DWORD PTR [eax]
100055b2:	83 ec 04             	sub    esp,0x4
100055b5:	6a 00                	push   0x0
100055b7:	8d 55 a4             	lea    edx,[ebp-0x5c]
100055ba:	52                   	push   edx
100055bb:	50                   	push   eax
100055bc:	e8 fc ff ff ff       	call   100055bd <begin(void*)+0x962>	100055bd: R_386_PC32	waitTask(int, int*, int)
100055c1:	83 c4 10             	add    esp,0x10
100055c4:	8b 15 00 00 00 00    	mov    edx,DWORD PTR ds:0x0	100055c6: R_386_32	Krnl::computer
100055ca:	a1 00 00 00 00       	mov    eax,ds:0x0	100055cb: R_386_32	Krnl::computer
100055cf:	8b 00                	mov    eax,DWORD PTR [eax]
100055d1:	83 c0 0c             	add    eax,0xc
100055d4:	8b 00                	mov    eax,DWORD PTR [eax]
100055d6:	6a 00                	push   0x0
100055d8:	6a 00                	push   0x0
100055da:	6a 00                	push   0x0
100055dc:	52                   	push   edx
100055dd:	ff d0                	call   eax
100055df:	83 c4 10             	add    esp,0x10
100055e2:	83 ec 0c             	sub    esp,0xc
100055e5:	68 10 c2 00 10       	push   0x1000c210	100055e6: R_386_32	.text
100055ea:	e8 fc ff ff ff       	call   100055eb <begin(void*)+0x990>	100055eb: R_386_PC32	KePanic(char const*)
100055ef:	83 c4 10             	add    esp,0x10
100055f2:	eb fe                	jmp    100055f2 <begin(void*)+0x997>

100055f4 <clean>:
100055f4:	55                   	push   ebp
100055f5:	89 e5                	mov    ebp,esp
100055f7:	83 ec 08             	sub    esp,0x8
100055fa:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100055fd:	83 ec 04             	sub    esp,0x4
10005600:	50                   	push   eax
10005601:	6a 00                	push   0x0
10005603:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10005606:	e8 fc ff ff ff       	call   10005607 <clean+0x13>	10005607: R_386_PC32	memset
1000560b:	83 c4 10             	add    esp,0x10
1000560e:	90                   	nop
1000560f:	c9                   	leave  
10005610:	c3                   	ret    

10005611 <BF_decode>:
10005611:	55                   	push   ebp
10005612:	89 e5                	mov    ebp,esp
10005614:	53                   	push   ebx
10005615:	83 ec 20             	sub    esp,0x20
10005618:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000561b:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000561e:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
10005621:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10005624:	01 d0                	add    eax,edx
10005626:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10005629:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000562c:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
1000562f:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
10005632:	8d 50 01             	lea    edx,[eax+0x1]
10005635:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10005638:	8a 00                	mov    al,BYTE PTR [eax]
1000563a:	0f b6 c0             	movzx  eax,al
1000563d:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10005640:	83 6d ec 20          	sub    DWORD PTR [ebp-0x14],0x20
10005644:	83 7d ec 5f          	cmp    DWORD PTR [ebp-0x14],0x5f
10005648:	76 0a                	jbe    10005654 <BF_decode+0x43>
1000564a:	b8 ff ff ff ff       	mov    eax,0xffffffff
1000564f:	e9 8e 01 00 00       	jmp    100057e2 <BF_decode+0x1d1>
10005654:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10005657:	05 00 d4 00 10       	add    eax,0x1000d400	10005658: R_386_32	.data
1000565c:	8a 00                	mov    al,BYTE PTR [eax]
1000565e:	0f b6 c0             	movzx  eax,al
10005661:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10005664:	83 7d ec 3f          	cmp    DWORD PTR [ebp-0x14],0x3f
10005668:	76 0a                	jbe    10005674 <BF_decode+0x63>
1000566a:	b8 ff ff ff ff       	mov    eax,0xffffffff
1000566f:	e9 6e 01 00 00       	jmp    100057e2 <BF_decode+0x1d1>
10005674:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10005677:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
1000567a:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000567d:	8d 50 01             	lea    edx,[eax+0x1]
10005680:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10005683:	8a 00                	mov    al,BYTE PTR [eax]
10005685:	0f b6 c0             	movzx  eax,al
10005688:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000568b:	83 6d ec 20          	sub    DWORD PTR [ebp-0x14],0x20
1000568f:	83 7d ec 5f          	cmp    DWORD PTR [ebp-0x14],0x5f
10005693:	76 0a                	jbe    1000569f <BF_decode+0x8e>
10005695:	b8 ff ff ff ff       	mov    eax,0xffffffff
1000569a:	e9 43 01 00 00       	jmp    100057e2 <BF_decode+0x1d1>
1000569f:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100056a2:	05 00 d4 00 10       	add    eax,0x1000d400	100056a3: R_386_32	.data
100056a7:	8a 00                	mov    al,BYTE PTR [eax]
100056a9:	0f b6 c0             	movzx  eax,al
100056ac:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
100056af:	83 7d ec 3f          	cmp    DWORD PTR [ebp-0x14],0x3f
100056b3:	76 0a                	jbe    100056bf <BF_decode+0xae>
100056b5:	b8 ff ff ff ff       	mov    eax,0xffffffff
100056ba:	e9 23 01 00 00       	jmp    100057e2 <BF_decode+0x1d1>
100056bf:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100056c2:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
100056c5:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
100056c8:	8d 1c 85 00 00 00 00 	lea    ebx,[eax*4+0x0]
100056cf:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100056d2:	c1 e8 04             	shr    eax,0x4
100056d5:	83 e0 03             	and    eax,0x3
100056d8:	88 c1                	mov    cl,al
100056da:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100056dd:	8d 50 01             	lea    edx,[eax+0x1]
100056e0:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
100056e3:	09 cb                	or     ebx,ecx
100056e5:	88 da                	mov    dl,bl
100056e7:	88 10                	mov    BYTE PTR [eax],dl
100056e9:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100056ec:	3b 45 f0             	cmp    eax,DWORD PTR [ebp-0x10]
100056ef:	0f 83 e4 00 00 00    	jae    100057d9 <BF_decode+0x1c8>
100056f5:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
100056f8:	8d 50 01             	lea    edx,[eax+0x1]
100056fb:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
100056fe:	8a 00                	mov    al,BYTE PTR [eax]
10005700:	0f b6 c0             	movzx  eax,al
10005703:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
10005706:	83 6d ec 20          	sub    DWORD PTR [ebp-0x14],0x20
1000570a:	83 7d ec 5f          	cmp    DWORD PTR [ebp-0x14],0x5f
1000570e:	76 0a                	jbe    1000571a <BF_decode+0x109>
10005710:	b8 ff ff ff ff       	mov    eax,0xffffffff
10005715:	e9 c8 00 00 00       	jmp    100057e2 <BF_decode+0x1d1>
1000571a:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
1000571d:	05 00 d4 00 10       	add    eax,0x1000d400	1000571e: R_386_32	.data
10005722:	8a 00                	mov    al,BYTE PTR [eax]
10005724:	0f b6 c0             	movzx  eax,al
10005727:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000572a:	83 7d ec 3f          	cmp    DWORD PTR [ebp-0x14],0x3f
1000572e:	76 0a                	jbe    1000573a <BF_decode+0x129>
10005730:	b8 ff ff ff ff       	mov    eax,0xffffffff
10005735:	e9 a8 00 00 00       	jmp    100057e2 <BF_decode+0x1d1>
1000573a:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
1000573d:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10005740:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005743:	c1 e0 04             	shl    eax,0x4
10005746:	88 c3                	mov    bl,al
10005748:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000574b:	c1 e8 02             	shr    eax,0x2
1000574e:	83 e0 0f             	and    eax,0xf
10005751:	88 c1                	mov    cl,al
10005753:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10005756:	8d 50 01             	lea    edx,[eax+0x1]
10005759:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
1000575c:	09 cb                	or     ebx,ecx
1000575e:	88 da                	mov    dl,bl
10005760:	88 10                	mov    BYTE PTR [eax],dl
10005762:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10005765:	3b 45 f0             	cmp    eax,DWORD PTR [ebp-0x10]
10005768:	73 72                	jae    100057dc <BF_decode+0x1cb>
1000576a:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000576d:	8d 50 01             	lea    edx,[eax+0x1]
10005770:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
10005773:	8a 00                	mov    al,BYTE PTR [eax]
10005775:	0f b6 c0             	movzx  eax,al
10005778:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000577b:	83 6d ec 20          	sub    DWORD PTR [ebp-0x14],0x20
1000577f:	83 7d ec 5f          	cmp    DWORD PTR [ebp-0x14],0x5f
10005783:	76 07                	jbe    1000578c <BF_decode+0x17b>
10005785:	b8 ff ff ff ff       	mov    eax,0xffffffff
1000578a:	eb 56                	jmp    100057e2 <BF_decode+0x1d1>
1000578c:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
1000578f:	05 00 d4 00 10       	add    eax,0x1000d400	10005790: R_386_32	.data
10005794:	8a 00                	mov    al,BYTE PTR [eax]
10005796:	0f b6 c0             	movzx  eax,al
10005799:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000579c:	83 7d ec 3f          	cmp    DWORD PTR [ebp-0x14],0x3f
100057a0:	76 07                	jbe    100057a9 <BF_decode+0x198>
100057a2:	b8 ff ff ff ff       	mov    eax,0xffffffff
100057a7:	eb 39                	jmp    100057e2 <BF_decode+0x1d1>
100057a9:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100057ac:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
100057af:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100057b2:	c1 e0 06             	shl    eax,0x6
100057b5:	88 c3                	mov    bl,al
100057b7:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
100057ba:	88 c1                	mov    cl,al
100057bc:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100057bf:	8d 50 01             	lea    edx,[eax+0x1]
100057c2:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
100057c5:	09 cb                	or     ebx,ecx
100057c7:	88 da                	mov    dl,bl
100057c9:	88 10                	mov    BYTE PTR [eax],dl
100057cb:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100057ce:	3b 45 f0             	cmp    eax,DWORD PTR [ebp-0x10]
100057d1:	0f 82 58 fe ff ff    	jb     1000562f <BF_decode+0x1e>
100057d7:	eb 04                	jmp    100057dd <BF_decode+0x1cc>
100057d9:	90                   	nop
100057da:	eb 01                	jmp    100057dd <BF_decode+0x1cc>
100057dc:	90                   	nop
100057dd:	b8 00 00 00 00       	mov    eax,0x0
100057e2:	83 c4 20             	add    esp,0x20
100057e5:	5b                   	pop    ebx
100057e6:	5d                   	pop    ebp
100057e7:	c3                   	ret    

100057e8 <BF_encode>:
100057e8:	55                   	push   ebp
100057e9:	89 e5                	mov    ebp,esp
100057eb:	83 ec 20             	sub    esp,0x20
100057ee:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100057f1:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
100057f4:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
100057f7:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100057fa:	01 d0                	add    eax,edx
100057fc:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
100057ff:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10005802:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
10005805:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10005808:	8d 50 01             	lea    edx,[eax+0x1]
1000580b:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
1000580e:	8a 00                	mov    al,BYTE PTR [eax]
10005810:	0f b6 c0             	movzx  eax,al
10005813:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
10005816:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10005819:	c1 e8 02             	shr    eax,0x2
1000581c:	89 c1                	mov    ecx,eax
1000581e:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10005821:	8d 50 01             	lea    edx,[eax+0x1]
10005824:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10005827:	8a 91 a0 d3 00 10    	mov    dl,BYTE PTR [ecx+0x1000d3a0]	10005829: R_386_32	.data
1000582d:	88 10                	mov    BYTE PTR [eax],dl
1000582f:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
10005832:	c1 e0 04             	shl    eax,0x4
10005835:	83 e0 30             	and    eax,0x30
10005838:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
1000583b:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000583e:	3b 45 f4             	cmp    eax,DWORD PTR [ebp-0xc]
10005841:	72 1b                	jb     1000585e <BF_encode+0x76>
10005843:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10005846:	8d 50 01             	lea    edx,[eax+0x1]
10005849:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
1000584c:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
1000584f:	81 c2 a0 d3 00 10    	add    edx,0x1000d3a0	10005851: R_386_32	.data
10005855:	8a 12                	mov    dl,BYTE PTR [edx]
10005857:	88 10                	mov    BYTE PTR [eax],dl
10005859:	e9 b1 00 00 00       	jmp    1000590f <BF_encode+0x127>
1000585e:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10005861:	8d 50 01             	lea    edx,[eax+0x1]
10005864:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
10005867:	8a 00                	mov    al,BYTE PTR [eax]
10005869:	0f b6 c0             	movzx  eax,al
1000586c:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000586f:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10005872:	c1 e8 04             	shr    eax,0x4
10005875:	09 45 f0             	or     DWORD PTR [ebp-0x10],eax
10005878:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000587b:	8d 50 01             	lea    edx,[eax+0x1]
1000587e:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
10005881:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
10005884:	81 c2 a0 d3 00 10    	add    edx,0x1000d3a0	10005886: R_386_32	.data
1000588a:	8a 12                	mov    dl,BYTE PTR [edx]
1000588c:	88 10                	mov    BYTE PTR [eax],dl
1000588e:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
10005891:	c1 e0 02             	shl    eax,0x2
10005894:	83 e0 3c             	and    eax,0x3c
10005897:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
1000589a:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000589d:	3b 45 f4             	cmp    eax,DWORD PTR [ebp-0xc]
100058a0:	72 18                	jb     100058ba <BF_encode+0xd2>
100058a2:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100058a5:	8d 50 01             	lea    edx,[eax+0x1]
100058a8:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
100058ab:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100058ae:	81 c2 a0 d3 00 10    	add    edx,0x1000d3a0	100058b0: R_386_32	.data
100058b4:	8a 12                	mov    dl,BYTE PTR [edx]
100058b6:	88 10                	mov    BYTE PTR [eax],dl
100058b8:	eb 55                	jmp    1000590f <BF_encode+0x127>
100058ba:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
100058bd:	8d 50 01             	lea    edx,[eax+0x1]
100058c0:	89 55 fc             	mov    DWORD PTR [ebp-0x4],edx
100058c3:	8a 00                	mov    al,BYTE PTR [eax]
100058c5:	0f b6 c0             	movzx  eax,al
100058c8:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
100058cb:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100058ce:	c1 e8 06             	shr    eax,0x6
100058d1:	09 45 f0             	or     DWORD PTR [ebp-0x10],eax
100058d4:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100058d7:	8d 50 01             	lea    edx,[eax+0x1]
100058da:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
100058dd:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
100058e0:	81 c2 a0 d3 00 10    	add    edx,0x1000d3a0	100058e2: R_386_32	.data
100058e6:	8a 12                	mov    dl,BYTE PTR [edx]
100058e8:	88 10                	mov    BYTE PTR [eax],dl
100058ea:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
100058ed:	83 e0 3f             	and    eax,0x3f
100058f0:	89 c1                	mov    ecx,eax
100058f2:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100058f5:	8d 50 01             	lea    edx,[eax+0x1]
100058f8:	89 55 f8             	mov    DWORD PTR [ebp-0x8],edx
100058fb:	8a 91 a0 d3 00 10    	mov    dl,BYTE PTR [ecx+0x1000d3a0]	100058fd: R_386_32	.data
10005901:	88 10                	mov    BYTE PTR [eax],dl
10005903:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10005906:	3b 45 f4             	cmp    eax,DWORD PTR [ebp-0xc]
10005909:	0f 82 f6 fe ff ff    	jb     10005805 <BF_encode+0x1d>
1000590f:	90                   	nop
10005910:	c9                   	leave  
10005911:	c3                   	ret    

10005912 <BF_swap>:
10005912:	55                   	push   ebp
10005913:	89 e5                	mov    ebp,esp
10005915:	53                   	push   ebx
10005916:	83 ec 10             	sub    esp,0x10
10005919:	a0 60 d4 00 10       	mov    al,ds:0x1000d460	1000591a: R_386_32	.data
1000591e:	84 c0                	test   al,al
10005920:	74 3e                	je     10005960 <BF_swap+0x4e>
10005922:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10005925:	8b 00                	mov    eax,DWORD PTR [eax]
10005927:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
1000592a:	c1 45 f8 10          	rol    DWORD PTR [ebp-0x8],0x10
1000592e:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
10005931:	c1 e0 08             	shl    eax,0x8
10005934:	25 00 ff 00 ff       	and    eax,0xff00ff00
10005939:	89 c3                	mov    ebx,eax
1000593b:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
1000593e:	c1 e8 08             	shr    eax,0x8
10005941:	25 ff 00 ff 00       	and    eax,0xff00ff
10005946:	89 c1                	mov    ecx,eax
10005948:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000594b:	8d 50 04             	lea    edx,[eax+0x4]
1000594e:	89 55 08             	mov    DWORD PTR [ebp+0x8],edx
10005951:	09 cb                	or     ebx,ecx
10005953:	89 da                	mov    edx,ebx
10005955:	89 10                	mov    DWORD PTR [eax],edx
10005957:	ff 4d 0c             	dec    DWORD PTR [ebp+0xc]
1000595a:	83 7d 0c 00          	cmp    DWORD PTR [ebp+0xc],0x0
1000595e:	75 c2                	jne    10005922 <BF_swap+0x10>
10005960:	90                   	nop
10005961:	83 c4 10             	add    esp,0x10
10005964:	5b                   	pop    ebx
10005965:	5d                   	pop    ebp
10005966:	c3                   	ret    

10005967 <BF_set_key>:
10005967:	55                   	push   ebp
10005968:	89 e5                	mov    ebp,esp
1000596a:	83 ec 10             	sub    esp,0x10
1000596d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
10005970:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
10005973:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
1000597a:	eb 76                	jmp    100059f2 <BF_set_key+0x8b>
1000597c:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
10005983:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
1000598a:	eb 26                	jmp    100059b2 <BF_set_key+0x4b>
1000598c:	c1 65 f0 08          	shl    DWORD PTR [ebp-0x10],0x8
10005990:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
10005993:	8a 00                	mov    al,BYTE PTR [eax]
10005995:	0f b6 c0             	movzx  eax,al
10005998:	09 45 f0             	or     DWORD PTR [ebp-0x10],eax
1000599b:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
1000599e:	8a 00                	mov    al,BYTE PTR [eax]
100059a0:	84 c0                	test   al,al
100059a2:	75 08                	jne    100059ac <BF_set_key+0x45>
100059a4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
100059a7:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
100059aa:	eb 03                	jmp    100059af <BF_set_key+0x48>
100059ac:	ff 45 fc             	inc    DWORD PTR [ebp-0x4]
100059af:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
100059b2:	83 7d f4 03          	cmp    DWORD PTR [ebp-0xc],0x3
100059b6:	7e d4                	jle    1000598c <BF_set_key+0x25>
100059b8:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100059bb:	8d 14 85 00 00 00 00 	lea    edx,[eax*4+0x0]
100059c2:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
100059c5:	01 c2                	add    edx,eax
100059c7:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
100059ca:	89 02                	mov    DWORD PTR [edx],eax
100059cc:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
100059cf:	05 00 04 00 00       	add    eax,0x400
100059d4:	8b 04 85 40 c3 00 10 	mov    eax,DWORD PTR [eax*4+0x1000c340]	100059d7: R_386_32	.data
100059db:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
100059de:	8d 0c 95 00 00 00 00 	lea    ecx,[edx*4+0x0]
100059e5:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
100059e8:	01 ca                	add    edx,ecx
100059ea:	33 45 f0             	xor    eax,DWORD PTR [ebp-0x10]
100059ed:	89 02                	mov    DWORD PTR [edx],eax
100059ef:	ff 45 f8             	inc    DWORD PTR [ebp-0x8]
100059f2:	83 7d f8 11          	cmp    DWORD PTR [ebp-0x8],0x11
100059f6:	7e 84                	jle    1000597c <BF_set_key+0x15>
100059f8:	90                   	nop
100059f9:	c9                   	leave  
100059fa:	c3                   	ret    

100059fb <_crypt_blowfish_rn>:
100059fb:	55                   	push   ebp
100059fc:	89 e5                	mov    ebp,esp
100059fe:	57                   	push   edi
100059ff:	56                   	push   esi
10005a00:	53                   	push   ebx
10005a01:	81 ec dc 10 00 00    	sub    esp,0x10dc
10005a07:	83 7d 14 3c          	cmp    DWORD PTR [ebp+0x14],0x3c
10005a0b:	7f 14                	jg     10005a21 <_crypt_blowfish_rn+0x26>
10005a0d:	c7 05 00 00 00 00 22 00 00 00 	mov    DWORD PTR ds:0x0,0x22	10005a0f: R_386_32	_bcrypt_errno
10005a17:	b8 00 00 00 00       	mov    eax,0x0
10005a1c:	e9 dd 5c 00 00       	jmp    1000b6fe <_crypt_blowfish_rn+0x5d03>
10005a21:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a24:	8a 00                	mov    al,BYTE PTR [eax]
10005a26:	3c 24                	cmp    al,0x24
10005a28:	75 76                	jne    10005aa0 <_crypt_blowfish_rn+0xa5>
10005a2a:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a2d:	40                   	inc    eax
10005a2e:	8a 00                	mov    al,BYTE PTR [eax]
10005a30:	3c 32                	cmp    al,0x32
10005a32:	75 6c                	jne    10005aa0 <_crypt_blowfish_rn+0xa5>
10005a34:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a37:	83 c0 02             	add    eax,0x2
10005a3a:	8a 00                	mov    al,BYTE PTR [eax]
10005a3c:	3c 61                	cmp    al,0x61
10005a3e:	75 60                	jne    10005aa0 <_crypt_blowfish_rn+0xa5>
10005a40:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a43:	83 c0 03             	add    eax,0x3
10005a46:	8a 00                	mov    al,BYTE PTR [eax]
10005a48:	3c 24                	cmp    al,0x24
10005a4a:	75 54                	jne    10005aa0 <_crypt_blowfish_rn+0xa5>
10005a4c:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a4f:	83 c0 04             	add    eax,0x4
10005a52:	8a 00                	mov    al,BYTE PTR [eax]
10005a54:	3c 2f                	cmp    al,0x2f
10005a56:	7e 48                	jle    10005aa0 <_crypt_blowfish_rn+0xa5>
10005a58:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a5b:	83 c0 04             	add    eax,0x4
10005a5e:	8a 00                	mov    al,BYTE PTR [eax]
10005a60:	3c 33                	cmp    al,0x33
10005a62:	7f 3c                	jg     10005aa0 <_crypt_blowfish_rn+0xa5>
10005a64:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a67:	83 c0 05             	add    eax,0x5
10005a6a:	8a 00                	mov    al,BYTE PTR [eax]
10005a6c:	3c 2f                	cmp    al,0x2f
10005a6e:	7e 30                	jle    10005aa0 <_crypt_blowfish_rn+0xa5>
10005a70:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a73:	83 c0 05             	add    eax,0x5
10005a76:	8a 00                	mov    al,BYTE PTR [eax]
10005a78:	3c 39                	cmp    al,0x39
10005a7a:	7f 24                	jg     10005aa0 <_crypt_blowfish_rn+0xa5>
10005a7c:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a7f:	83 c0 04             	add    eax,0x4
10005a82:	8a 00                	mov    al,BYTE PTR [eax]
10005a84:	3c 33                	cmp    al,0x33
10005a86:	75 0c                	jne    10005a94 <_crypt_blowfish_rn+0x99>
10005a88:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a8b:	83 c0 05             	add    eax,0x5
10005a8e:	8a 00                	mov    al,BYTE PTR [eax]
10005a90:	3c 31                	cmp    al,0x31
10005a92:	7f 0c                	jg     10005aa0 <_crypt_blowfish_rn+0xa5>
10005a94:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005a97:	83 c0 06             	add    eax,0x6
10005a9a:	8a 00                	mov    al,BYTE PTR [eax]
10005a9c:	3c 24                	cmp    al,0x24
10005a9e:	74 14                	je     10005ab4 <_crypt_blowfish_rn+0xb9>
10005aa0:	c7 05 00 00 00 00 16 00 00 00 	mov    DWORD PTR ds:0x0,0x16	10005aa2: R_386_32	_bcrypt_errno
10005aaa:	b8 00 00 00 00       	mov    eax,0x0
10005aaf:	e9 4a 5c 00 00       	jmp    1000b6fe <_crypt_blowfish_rn+0x5d03>
10005ab4:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005ab7:	83 c0 04             	add    eax,0x4
10005aba:	8a 00                	mov    al,BYTE PTR [eax]
10005abc:	0f be c0             	movsx  eax,al
10005abf:	8d 50 d0             	lea    edx,[eax-0x30]
10005ac2:	89 d0                	mov    eax,edx
10005ac4:	c1 e0 02             	shl    eax,0x2
10005ac7:	01 d0                	add    eax,edx
10005ac9:	01 c0                	add    eax,eax
10005acb:	89 c2                	mov    edx,eax
10005acd:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005ad0:	83 c0 05             	add    eax,0x5
10005ad3:	8a 00                	mov    al,BYTE PTR [eax]
10005ad5:	0f be c0             	movsx  eax,al
10005ad8:	83 e8 30             	sub    eax,0x30
10005adb:	01 d0                	add    eax,edx
10005add:	ba 01 00 00 00       	mov    edx,0x1
10005ae2:	88 c1                	mov    cl,al
10005ae4:	d3 e2                	shl    edx,cl
10005ae6:	89 d0                	mov    eax,edx
10005ae8:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
10005aeb:	83 7d d8 0f          	cmp    DWORD PTR [ebp-0x28],0xf
10005aef:	76 21                	jbe    10005b12 <_crypt_blowfish_rn+0x117>
10005af1:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
10005af4:	83 c0 07             	add    eax,0x7
10005af7:	6a 10                	push   0x10
10005af9:	50                   	push   eax
10005afa:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005b00:	05 90 10 00 00       	add    eax,0x1090
10005b05:	50                   	push   eax
10005b06:	e8 06 fb ff ff       	call   10005611 <BF_decode>
10005b0b:	83 c4 0c             	add    esp,0xc
10005b0e:	85 c0                	test   eax,eax
10005b10:	74 2d                	je     10005b3f <_crypt_blowfish_rn+0x144>
10005b12:	83 ec 08             	sub    esp,0x8
10005b15:	6a 10                	push   0x10
10005b17:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005b1d:	05 90 10 00 00       	add    eax,0x1090
10005b22:	50                   	push   eax
10005b23:	e8 cc fa ff ff       	call   100055f4 <clean>
10005b28:	83 c4 10             	add    esp,0x10
10005b2b:	c7 05 00 00 00 00 16 00 00 00 	mov    DWORD PTR ds:0x0,0x16	10005b2d: R_386_32	_bcrypt_errno
10005b35:	b8 00 00 00 00       	mov    eax,0x0
10005b3a:	e9 bf 5b 00 00       	jmp    1000b6fe <_crypt_blowfish_rn+0x5d03>
10005b3f:	83 ec 08             	sub    esp,0x8
10005b42:	6a 04                	push   0x4
10005b44:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005b4a:	05 90 10 00 00       	add    eax,0x1090
10005b4f:	50                   	push   eax
10005b50:	e8 bd fd ff ff       	call   10005912 <BF_swap>
10005b55:	83 c4 10             	add    esp,0x10
10005b58:	83 ec 04             	sub    esp,0x4
10005b5b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005b61:	05 00 10 00 00       	add    eax,0x1000
10005b66:	50                   	push   eax
10005b67:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005b6d:	05 48 10 00 00       	add    eax,0x1048
10005b72:	50                   	push   eax
10005b73:	ff 75 08             	push   DWORD PTR [ebp+0x8]
10005b76:	e8 ec fd ff ff       	call   10005967 <BF_set_key>
10005b7b:	83 c4 10             	add    esp,0x10
10005b7e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005b84:	bb 40 c3 00 10       	mov    ebx,0x1000c340	10005b85: R_386_32	.data
10005b89:	ba 00 04 00 00       	mov    edx,0x400
10005b8e:	89 c7                	mov    edi,eax
10005b90:	89 de                	mov    esi,ebx
10005b92:	89 d1                	mov    ecx,edx
10005b94:	f3 a5                	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10005b96:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10005b9d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005ba0:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10005ba3:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [ebp-0x2c],0x0
10005baa:	e9 17 0b 00 00       	jmp    100066c6 <_crypt_blowfish_rn+0xccb>
10005baf:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10005bb2:	83 e0 02             	and    eax,0x2
10005bb5:	05 24 04 00 00       	add    eax,0x424
10005bba:	8b 84 85 1c ef ff ff 	mov    eax,DWORD PTR [ebp+eax*4-0x10e4]
10005bc1:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10005bc4:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
10005bc7:	83 e0 02             	and    eax,0x2
10005bca:	40                   	inc    eax
10005bcb:	05 24 04 00 00       	add    eax,0x424
10005bd0:	8b 84 85 1c ef ff ff 	mov    eax,DWORD PTR [ebp+eax*4-0x10e4]
10005bd7:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10005bda:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
10005be0:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10005be3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005be6:	0f b6 c0             	movzx  eax,al
10005be9:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005bec:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10005bf0:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005bf3:	c1 e8 06             	shr    eax,0x6
10005bf6:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005bf9:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10005c00:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005c03:	c1 e8 0e             	shr    eax,0xe
10005c06:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005c09:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10005c10:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005c13:	c1 e8 16             	shr    eax,0x16
10005c16:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10005c19:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10005c20:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005c26:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10005c2c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005c2f:	01 d0                	add    eax,edx
10005c31:	8b 00                	mov    eax,DWORD PTR [eax]
10005c33:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005c36:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005c3c:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10005c42:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005c45:	01 d0                	add    eax,edx
10005c47:	8b 00                	mov    eax,DWORD PTR [eax]
10005c49:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005c4c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005c52:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10005c58:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005c5b:	01 d0                	add    eax,edx
10005c5d:	8b 00                	mov    eax,DWORD PTR [eax]
10005c5f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005c62:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10005c68:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10005c6b:	01 d0                	add    eax,edx
10005c6d:	8b 00                	mov    eax,DWORD PTR [eax]
10005c6f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005c72:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005c75:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10005c78:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
10005c7e:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10005c81:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005c84:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005c87:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005c8a:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10005c8d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005c90:	0f b6 c0             	movzx  eax,al
10005c93:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005c96:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10005c9a:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005c9d:	c1 e8 06             	shr    eax,0x6
10005ca0:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005ca3:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10005caa:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005cad:	c1 e8 0e             	shr    eax,0xe
10005cb0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005cb3:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10005cba:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005cbd:	c1 e8 16             	shr    eax,0x16
10005cc0:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10005cc3:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10005cca:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005cd0:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10005cd6:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005cd9:	01 d0                	add    eax,edx
10005cdb:	8b 00                	mov    eax,DWORD PTR [eax]
10005cdd:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005ce0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005ce6:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10005cec:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005cef:	01 d0                	add    eax,edx
10005cf1:	8b 00                	mov    eax,DWORD PTR [eax]
10005cf3:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005cf6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005cfc:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10005d02:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005d05:	01 d0                	add    eax,edx
10005d07:	8b 00                	mov    eax,DWORD PTR [eax]
10005d09:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005d0c:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10005d12:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10005d15:	01 d0                	add    eax,edx
10005d17:	8b 00                	mov    eax,DWORD PTR [eax]
10005d19:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005d1c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005d1f:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10005d22:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
10005d28:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10005d2b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005d2e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005d31:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005d34:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10005d37:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005d3a:	0f b6 c0             	movzx  eax,al
10005d3d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005d40:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10005d44:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005d47:	c1 e8 06             	shr    eax,0x6
10005d4a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005d4d:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10005d54:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005d57:	c1 e8 0e             	shr    eax,0xe
10005d5a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005d5d:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10005d64:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005d67:	c1 e8 16             	shr    eax,0x16
10005d6a:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10005d6d:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10005d74:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005d7a:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10005d80:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005d83:	01 d0                	add    eax,edx
10005d85:	8b 00                	mov    eax,DWORD PTR [eax]
10005d87:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005d8a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005d90:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10005d96:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005d99:	01 d0                	add    eax,edx
10005d9b:	8b 00                	mov    eax,DWORD PTR [eax]
10005d9d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005da0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005da6:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10005dac:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005daf:	01 d0                	add    eax,edx
10005db1:	8b 00                	mov    eax,DWORD PTR [eax]
10005db3:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005db6:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10005dbc:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10005dbf:	01 d0                	add    eax,edx
10005dc1:	8b 00                	mov    eax,DWORD PTR [eax]
10005dc3:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005dc6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005dc9:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10005dcc:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
10005dd2:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10005dd5:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005dd8:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005ddb:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005dde:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10005de1:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005de4:	0f b6 c0             	movzx  eax,al
10005de7:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005dea:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10005dee:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005df1:	c1 e8 06             	shr    eax,0x6
10005df4:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005df7:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10005dfe:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005e01:	c1 e8 0e             	shr    eax,0xe
10005e04:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005e07:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10005e0e:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005e11:	c1 e8 16             	shr    eax,0x16
10005e14:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10005e17:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10005e1e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005e24:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10005e2a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005e2d:	01 d0                	add    eax,edx
10005e2f:	8b 00                	mov    eax,DWORD PTR [eax]
10005e31:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005e34:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005e3a:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10005e40:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005e43:	01 d0                	add    eax,edx
10005e45:	8b 00                	mov    eax,DWORD PTR [eax]
10005e47:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005e4a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005e50:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10005e56:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005e59:	01 d0                	add    eax,edx
10005e5b:	8b 00                	mov    eax,DWORD PTR [eax]
10005e5d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005e60:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10005e66:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10005e69:	01 d0                	add    eax,edx
10005e6b:	8b 00                	mov    eax,DWORD PTR [eax]
10005e6d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005e70:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005e73:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10005e76:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
10005e7c:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10005e7f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005e82:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005e85:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005e88:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10005e8b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005e8e:	0f b6 c0             	movzx  eax,al
10005e91:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005e94:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10005e98:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005e9b:	c1 e8 06             	shr    eax,0x6
10005e9e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005ea1:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10005ea8:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005eab:	c1 e8 0e             	shr    eax,0xe
10005eae:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005eb1:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10005eb8:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005ebb:	c1 e8 16             	shr    eax,0x16
10005ebe:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10005ec1:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10005ec8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005ece:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10005ed4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005ed7:	01 d0                	add    eax,edx
10005ed9:	8b 00                	mov    eax,DWORD PTR [eax]
10005edb:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005ede:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005ee4:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10005eea:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005eed:	01 d0                	add    eax,edx
10005eef:	8b 00                	mov    eax,DWORD PTR [eax]
10005ef1:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005ef4:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005efa:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10005f00:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005f03:	01 d0                	add    eax,edx
10005f05:	8b 00                	mov    eax,DWORD PTR [eax]
10005f07:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005f0a:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10005f10:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10005f13:	01 d0                	add    eax,edx
10005f15:	8b 00                	mov    eax,DWORD PTR [eax]
10005f17:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005f1a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005f1d:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10005f20:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
10005f26:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10005f29:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005f2c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005f2f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005f32:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10005f35:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005f38:	0f b6 c0             	movzx  eax,al
10005f3b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005f3e:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10005f42:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005f45:	c1 e8 06             	shr    eax,0x6
10005f48:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005f4b:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10005f52:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005f55:	c1 e8 0e             	shr    eax,0xe
10005f58:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005f5b:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10005f62:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10005f65:	c1 e8 16             	shr    eax,0x16
10005f68:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10005f6b:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10005f72:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005f78:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10005f7e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005f81:	01 d0                	add    eax,edx
10005f83:	8b 00                	mov    eax,DWORD PTR [eax]
10005f85:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005f88:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005f8e:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10005f94:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005f97:	01 d0                	add    eax,edx
10005f99:	8b 00                	mov    eax,DWORD PTR [eax]
10005f9b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005f9e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10005fa4:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10005faa:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005fad:	01 d0                	add    eax,edx
10005faf:	8b 00                	mov    eax,DWORD PTR [eax]
10005fb1:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10005fb4:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10005fba:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10005fbd:	01 d0                	add    eax,edx
10005fbf:	8b 00                	mov    eax,DWORD PTR [eax]
10005fc1:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005fc4:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10005fc7:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10005fca:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
10005fd0:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10005fd3:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10005fd6:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10005fd9:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10005fdc:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10005fdf:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005fe2:	0f b6 c0             	movzx  eax,al
10005fe5:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10005fe8:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10005fec:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005fef:	c1 e8 06             	shr    eax,0x6
10005ff2:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10005ff5:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10005ffc:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10005fff:	c1 e8 0e             	shr    eax,0xe
10006002:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006005:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000600c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000600f:	c1 e8 16             	shr    eax,0x16
10006012:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006015:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000601c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006022:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006028:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000602b:	01 d0                	add    eax,edx
1000602d:	8b 00                	mov    eax,DWORD PTR [eax]
1000602f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006032:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006038:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000603e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006041:	01 d0                	add    eax,edx
10006043:	8b 00                	mov    eax,DWORD PTR [eax]
10006045:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006048:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000604e:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006054:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006057:	01 d0                	add    eax,edx
10006059:	8b 00                	mov    eax,DWORD PTR [eax]
1000605b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000605e:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006064:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006067:	01 d0                	add    eax,edx
10006069:	8b 00                	mov    eax,DWORD PTR [eax]
1000606b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000606e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006071:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006074:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
1000607a:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000607d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006080:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006083:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006086:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006089:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000608c:	0f b6 c0             	movzx  eax,al
1000608f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006092:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006096:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006099:	c1 e8 06             	shr    eax,0x6
1000609c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000609f:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100060a6:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100060a9:	c1 e8 0e             	shr    eax,0xe
100060ac:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100060af:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100060b6:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100060b9:	c1 e8 16             	shr    eax,0x16
100060bc:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100060bf:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100060c6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100060cc:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100060d2:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100060d5:	01 d0                	add    eax,edx
100060d7:	8b 00                	mov    eax,DWORD PTR [eax]
100060d9:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100060dc:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100060e2:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100060e8:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100060eb:	01 d0                	add    eax,edx
100060ed:	8b 00                	mov    eax,DWORD PTR [eax]
100060ef:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100060f2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100060f8:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100060fe:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006101:	01 d0                	add    eax,edx
10006103:	8b 00                	mov    eax,DWORD PTR [eax]
10006105:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006108:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000610e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006111:	01 d0                	add    eax,edx
10006113:	8b 00                	mov    eax,DWORD PTR [eax]
10006115:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006118:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000611b:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000611e:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
10006124:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006127:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000612a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000612d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006130:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006133:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006136:	0f b6 c0             	movzx  eax,al
10006139:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000613c:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006140:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006143:	c1 e8 06             	shr    eax,0x6
10006146:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006149:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006150:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006153:	c1 e8 0e             	shr    eax,0xe
10006156:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006159:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006160:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006163:	c1 e8 16             	shr    eax,0x16
10006166:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006169:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006170:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006176:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000617c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000617f:	01 d0                	add    eax,edx
10006181:	8b 00                	mov    eax,DWORD PTR [eax]
10006183:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006186:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000618c:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006192:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006195:	01 d0                	add    eax,edx
10006197:	8b 00                	mov    eax,DWORD PTR [eax]
10006199:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000619c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100061a2:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100061a8:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100061ab:	01 d0                	add    eax,edx
100061ad:	8b 00                	mov    eax,DWORD PTR [eax]
100061af:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100061b2:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100061b8:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100061bb:	01 d0                	add    eax,edx
100061bd:	8b 00                	mov    eax,DWORD PTR [eax]
100061bf:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100061c2:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100061c5:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100061c8:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
100061ce:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100061d1:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100061d4:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100061d7:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100061da:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100061dd:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100061e0:	0f b6 c0             	movzx  eax,al
100061e3:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100061e6:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100061ea:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100061ed:	c1 e8 06             	shr    eax,0x6
100061f0:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100061f3:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100061fa:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100061fd:	c1 e8 0e             	shr    eax,0xe
10006200:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006203:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000620a:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000620d:	c1 e8 16             	shr    eax,0x16
10006210:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006213:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000621a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006220:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006226:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006229:	01 d0                	add    eax,edx
1000622b:	8b 00                	mov    eax,DWORD PTR [eax]
1000622d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006230:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006236:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000623c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000623f:	01 d0                	add    eax,edx
10006241:	8b 00                	mov    eax,DWORD PTR [eax]
10006243:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006246:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000624c:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006252:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006255:	01 d0                	add    eax,edx
10006257:	8b 00                	mov    eax,DWORD PTR [eax]
10006259:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000625c:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006262:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006265:	01 d0                	add    eax,edx
10006267:	8b 00                	mov    eax,DWORD PTR [eax]
10006269:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000626c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000626f:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006272:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
10006278:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000627b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000627e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006281:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006284:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006287:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000628a:	0f b6 c0             	movzx  eax,al
1000628d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006290:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006294:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006297:	c1 e8 06             	shr    eax,0x6
1000629a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000629d:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100062a4:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100062a7:	c1 e8 0e             	shr    eax,0xe
100062aa:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100062ad:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100062b4:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100062b7:	c1 e8 16             	shr    eax,0x16
100062ba:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100062bd:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100062c4:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100062ca:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100062d0:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100062d3:	01 d0                	add    eax,edx
100062d5:	8b 00                	mov    eax,DWORD PTR [eax]
100062d7:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100062da:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100062e0:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100062e6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100062e9:	01 d0                	add    eax,edx
100062eb:	8b 00                	mov    eax,DWORD PTR [eax]
100062ed:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100062f0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100062f6:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100062fc:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100062ff:	01 d0                	add    eax,edx
10006301:	8b 00                	mov    eax,DWORD PTR [eax]
10006303:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006306:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000630c:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000630f:	01 d0                	add    eax,edx
10006311:	8b 00                	mov    eax,DWORD PTR [eax]
10006313:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006316:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006319:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000631c:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
10006322:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006325:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006328:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000632b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000632e:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006331:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006334:	0f b6 c0             	movzx  eax,al
10006337:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000633a:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000633e:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006341:	c1 e8 06             	shr    eax,0x6
10006344:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006347:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000634e:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006351:	c1 e8 0e             	shr    eax,0xe
10006354:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006357:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000635e:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006361:	c1 e8 16             	shr    eax,0x16
10006364:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006367:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000636e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006374:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000637a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000637d:	01 d0                	add    eax,edx
1000637f:	8b 00                	mov    eax,DWORD PTR [eax]
10006381:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006384:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000638a:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006390:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006393:	01 d0                	add    eax,edx
10006395:	8b 00                	mov    eax,DWORD PTR [eax]
10006397:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000639a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100063a0:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100063a6:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100063a9:	01 d0                	add    eax,edx
100063ab:	8b 00                	mov    eax,DWORD PTR [eax]
100063ad:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100063b0:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100063b6:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100063b9:	01 d0                	add    eax,edx
100063bb:	8b 00                	mov    eax,DWORD PTR [eax]
100063bd:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100063c0:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100063c3:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100063c6:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
100063cc:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100063cf:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100063d2:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100063d5:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100063d8:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100063db:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100063de:	0f b6 c0             	movzx  eax,al
100063e1:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100063e4:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100063e8:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100063eb:	c1 e8 06             	shr    eax,0x6
100063ee:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100063f1:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100063f8:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100063fb:	c1 e8 0e             	shr    eax,0xe
100063fe:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006401:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006408:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000640b:	c1 e8 16             	shr    eax,0x16
1000640e:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006411:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006418:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000641e:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006424:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006427:	01 d0                	add    eax,edx
10006429:	8b 00                	mov    eax,DWORD PTR [eax]
1000642b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000642e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006434:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000643a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000643d:	01 d0                	add    eax,edx
1000643f:	8b 00                	mov    eax,DWORD PTR [eax]
10006441:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006444:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000644a:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006450:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006453:	01 d0                	add    eax,edx
10006455:	8b 00                	mov    eax,DWORD PTR [eax]
10006457:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000645a:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006460:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006463:	01 d0                	add    eax,edx
10006465:	8b 00                	mov    eax,DWORD PTR [eax]
10006467:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000646a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000646d:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006470:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
10006476:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006479:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000647c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000647f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006482:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006485:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006488:	0f b6 c0             	movzx  eax,al
1000648b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000648e:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006492:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006495:	c1 e8 06             	shr    eax,0x6
10006498:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000649b:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100064a2:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100064a5:	c1 e8 0e             	shr    eax,0xe
100064a8:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100064ab:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100064b2:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100064b5:	c1 e8 16             	shr    eax,0x16
100064b8:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100064bb:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100064c2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100064c8:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100064ce:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100064d1:	01 d0                	add    eax,edx
100064d3:	8b 00                	mov    eax,DWORD PTR [eax]
100064d5:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100064d8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100064de:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100064e4:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100064e7:	01 d0                	add    eax,edx
100064e9:	8b 00                	mov    eax,DWORD PTR [eax]
100064eb:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100064ee:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100064f4:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100064fa:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100064fd:	01 d0                	add    eax,edx
100064ff:	8b 00                	mov    eax,DWORD PTR [eax]
10006501:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006504:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000650a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000650d:	01 d0                	add    eax,edx
1000650f:	8b 00                	mov    eax,DWORD PTR [eax]
10006511:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006514:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006517:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000651a:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
10006520:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006523:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006526:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006529:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000652c:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000652f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006532:	0f b6 c0             	movzx  eax,al
10006535:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006538:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000653c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000653f:	c1 e8 06             	shr    eax,0x6
10006542:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006545:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000654c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000654f:	c1 e8 0e             	shr    eax,0xe
10006552:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006555:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000655c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000655f:	c1 e8 16             	shr    eax,0x16
10006562:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006565:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000656c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006572:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006578:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000657b:	01 d0                	add    eax,edx
1000657d:	8b 00                	mov    eax,DWORD PTR [eax]
1000657f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006582:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006588:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000658e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006591:	01 d0                	add    eax,edx
10006593:	8b 00                	mov    eax,DWORD PTR [eax]
10006595:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006598:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000659e:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100065a4:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100065a7:	01 d0                	add    eax,edx
100065a9:	8b 00                	mov    eax,DWORD PTR [eax]
100065ab:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100065ae:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100065b4:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100065b7:	01 d0                	add    eax,edx
100065b9:	8b 00                	mov    eax,DWORD PTR [eax]
100065bb:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100065be:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100065c1:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100065c4:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
100065ca:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100065cd:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100065d0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100065d3:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100065d6:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100065d9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100065dc:	0f b6 c0             	movzx  eax,al
100065df:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100065e2:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100065e6:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100065e9:	c1 e8 06             	shr    eax,0x6
100065ec:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100065ef:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100065f6:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100065f9:	c1 e8 0e             	shr    eax,0xe
100065fc:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100065ff:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006606:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006609:	c1 e8 16             	shr    eax,0x16
1000660c:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000660f:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006616:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000661c:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006622:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006625:	01 d0                	add    eax,edx
10006627:	8b 00                	mov    eax,DWORD PTR [eax]
10006629:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000662c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006632:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006638:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000663b:	01 d0                	add    eax,edx
1000663d:	8b 00                	mov    eax,DWORD PTR [eax]
1000663f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006642:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006648:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000664e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006651:	01 d0                	add    eax,edx
10006653:	8b 00                	mov    eax,DWORD PTR [eax]
10006655:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006658:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000665e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006661:	01 d0                	add    eax,edx
10006663:	8b 00                	mov    eax,DWORD PTR [eax]
10006665:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006668:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000666b:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000666e:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
10006674:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006677:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000667a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000667d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006680:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006683:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006686:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006689:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000668c:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
1000668f:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
10006695:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
10006698:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000669b:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
1000669e:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100066a4:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100066a7:	89 84 95 1c ef ff ff 	mov    DWORD PTR [ebp+edx*4-0x10e4],eax
100066ae:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
100066b1:	40                   	inc    eax
100066b2:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100066b8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100066bb:	89 84 95 1c ef ff ff 	mov    DWORD PTR [ebp+edx*4-0x10e4],eax
100066c2:	83 45 d4 02          	add    DWORD PTR [ebp-0x2c],0x2
100066c6:	83 7d d4 11          	cmp    DWORD PTR [ebp-0x2c],0x11
100066ca:	0f 8e df f4 ff ff    	jle    10005baf <_crypt_blowfish_rn+0x1b4>
100066d0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100066d6:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
100066d9:	83 45 dc 10          	add    DWORD PTR [ebp-0x24],0x10
100066dd:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
100066e0:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100066e3:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
100066e6:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100066e9:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
100066ef:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100066f2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100066f5:	0f b6 c0             	movzx  eax,al
100066f8:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100066fb:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100066ff:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006702:	c1 e8 06             	shr    eax,0x6
10006705:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006708:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000670f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006712:	c1 e8 0e             	shr    eax,0xe
10006715:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006718:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000671f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006722:	c1 e8 16             	shr    eax,0x16
10006725:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006728:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000672f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006735:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000673b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000673e:	01 d0                	add    eax,edx
10006740:	8b 00                	mov    eax,DWORD PTR [eax]
10006742:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006745:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000674b:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006751:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006754:	01 d0                	add    eax,edx
10006756:	8b 00                	mov    eax,DWORD PTR [eax]
10006758:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000675b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006761:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006767:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000676a:	01 d0                	add    eax,edx
1000676c:	8b 00                	mov    eax,DWORD PTR [eax]
1000676e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006771:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006777:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000677a:	01 d0                	add    eax,edx
1000677c:	8b 00                	mov    eax,DWORD PTR [eax]
1000677e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006781:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006784:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006787:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
1000678d:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006790:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006793:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006796:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006799:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000679c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000679f:	0f b6 c0             	movzx  eax,al
100067a2:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100067a5:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100067a9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100067ac:	c1 e8 06             	shr    eax,0x6
100067af:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100067b2:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100067b9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100067bc:	c1 e8 0e             	shr    eax,0xe
100067bf:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100067c2:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100067c9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100067cc:	c1 e8 16             	shr    eax,0x16
100067cf:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100067d2:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100067d9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100067df:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100067e5:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100067e8:	01 d0                	add    eax,edx
100067ea:	8b 00                	mov    eax,DWORD PTR [eax]
100067ec:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100067ef:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100067f5:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100067fb:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100067fe:	01 d0                	add    eax,edx
10006800:	8b 00                	mov    eax,DWORD PTR [eax]
10006802:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006805:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000680b:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006811:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006814:	01 d0                	add    eax,edx
10006816:	8b 00                	mov    eax,DWORD PTR [eax]
10006818:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000681b:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006821:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006824:	01 d0                	add    eax,edx
10006826:	8b 00                	mov    eax,DWORD PTR [eax]
10006828:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000682b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000682e:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006831:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
10006837:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000683a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000683d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006840:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006843:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006846:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006849:	0f b6 c0             	movzx  eax,al
1000684c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000684f:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006853:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006856:	c1 e8 06             	shr    eax,0x6
10006859:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000685c:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006863:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006866:	c1 e8 0e             	shr    eax,0xe
10006869:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000686c:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006873:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006876:	c1 e8 16             	shr    eax,0x16
10006879:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000687c:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006883:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006889:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000688f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006892:	01 d0                	add    eax,edx
10006894:	8b 00                	mov    eax,DWORD PTR [eax]
10006896:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006899:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000689f:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100068a5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100068a8:	01 d0                	add    eax,edx
100068aa:	8b 00                	mov    eax,DWORD PTR [eax]
100068ac:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100068af:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100068b5:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100068bb:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100068be:	01 d0                	add    eax,edx
100068c0:	8b 00                	mov    eax,DWORD PTR [eax]
100068c2:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100068c5:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100068cb:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100068ce:	01 d0                	add    eax,edx
100068d0:	8b 00                	mov    eax,DWORD PTR [eax]
100068d2:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100068d5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100068d8:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100068db:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
100068e1:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100068e4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100068e7:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100068ea:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100068ed:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100068f0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100068f3:	0f b6 c0             	movzx  eax,al
100068f6:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100068f9:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100068fd:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006900:	c1 e8 06             	shr    eax,0x6
10006903:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006906:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000690d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006910:	c1 e8 0e             	shr    eax,0xe
10006913:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006916:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000691d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006920:	c1 e8 16             	shr    eax,0x16
10006923:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006926:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000692d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006933:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006939:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000693c:	01 d0                	add    eax,edx
1000693e:	8b 00                	mov    eax,DWORD PTR [eax]
10006940:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006943:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006949:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000694f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006952:	01 d0                	add    eax,edx
10006954:	8b 00                	mov    eax,DWORD PTR [eax]
10006956:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006959:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000695f:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006965:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006968:	01 d0                	add    eax,edx
1000696a:	8b 00                	mov    eax,DWORD PTR [eax]
1000696c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000696f:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006975:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006978:	01 d0                	add    eax,edx
1000697a:	8b 00                	mov    eax,DWORD PTR [eax]
1000697c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000697f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006982:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006985:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
1000698b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000698e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006991:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006994:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006997:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000699a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000699d:	0f b6 c0             	movzx  eax,al
100069a0:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100069a3:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100069a7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100069aa:	c1 e8 06             	shr    eax,0x6
100069ad:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100069b0:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100069b7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100069ba:	c1 e8 0e             	shr    eax,0xe
100069bd:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100069c0:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100069c7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100069ca:	c1 e8 16             	shr    eax,0x16
100069cd:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100069d0:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100069d7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100069dd:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100069e3:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100069e6:	01 d0                	add    eax,edx
100069e8:	8b 00                	mov    eax,DWORD PTR [eax]
100069ea:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100069ed:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100069f3:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100069f9:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100069fc:	01 d0                	add    eax,edx
100069fe:	8b 00                	mov    eax,DWORD PTR [eax]
10006a00:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006a03:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006a09:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006a0f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006a12:	01 d0                	add    eax,edx
10006a14:	8b 00                	mov    eax,DWORD PTR [eax]
10006a16:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006a19:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006a1f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006a22:	01 d0                	add    eax,edx
10006a24:	8b 00                	mov    eax,DWORD PTR [eax]
10006a26:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006a29:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006a2c:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006a2f:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
10006a35:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006a38:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006a3b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006a3e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006a41:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006a44:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006a47:	0f b6 c0             	movzx  eax,al
10006a4a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006a4d:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006a51:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006a54:	c1 e8 06             	shr    eax,0x6
10006a57:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006a5a:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006a61:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006a64:	c1 e8 0e             	shr    eax,0xe
10006a67:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006a6a:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006a71:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006a74:	c1 e8 16             	shr    eax,0x16
10006a77:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006a7a:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006a81:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006a87:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006a8d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006a90:	01 d0                	add    eax,edx
10006a92:	8b 00                	mov    eax,DWORD PTR [eax]
10006a94:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006a97:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006a9d:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006aa3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006aa6:	01 d0                	add    eax,edx
10006aa8:	8b 00                	mov    eax,DWORD PTR [eax]
10006aaa:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006aad:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006ab3:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006ab9:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006abc:	01 d0                	add    eax,edx
10006abe:	8b 00                	mov    eax,DWORD PTR [eax]
10006ac0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006ac3:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006ac9:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006acc:	01 d0                	add    eax,edx
10006ace:	8b 00                	mov    eax,DWORD PTR [eax]
10006ad0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006ad3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006ad6:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006ad9:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
10006adf:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006ae2:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006ae5:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006ae8:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006aeb:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006aee:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006af1:	0f b6 c0             	movzx  eax,al
10006af4:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006af7:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006afb:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006afe:	c1 e8 06             	shr    eax,0x6
10006b01:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006b04:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006b0b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006b0e:	c1 e8 0e             	shr    eax,0xe
10006b11:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006b14:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006b1b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006b1e:	c1 e8 16             	shr    eax,0x16
10006b21:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006b24:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006b2b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006b31:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006b37:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006b3a:	01 d0                	add    eax,edx
10006b3c:	8b 00                	mov    eax,DWORD PTR [eax]
10006b3e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006b41:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006b47:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006b4d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006b50:	01 d0                	add    eax,edx
10006b52:	8b 00                	mov    eax,DWORD PTR [eax]
10006b54:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006b57:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006b5d:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006b63:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006b66:	01 d0                	add    eax,edx
10006b68:	8b 00                	mov    eax,DWORD PTR [eax]
10006b6a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006b6d:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006b73:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006b76:	01 d0                	add    eax,edx
10006b78:	8b 00                	mov    eax,DWORD PTR [eax]
10006b7a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006b7d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006b80:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006b83:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
10006b89:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006b8c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006b8f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006b92:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006b95:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006b98:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006b9b:	0f b6 c0             	movzx  eax,al
10006b9e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006ba1:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006ba5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006ba8:	c1 e8 06             	shr    eax,0x6
10006bab:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006bae:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006bb5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006bb8:	c1 e8 0e             	shr    eax,0xe
10006bbb:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006bbe:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006bc5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006bc8:	c1 e8 16             	shr    eax,0x16
10006bcb:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006bce:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006bd5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006bdb:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006be1:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006be4:	01 d0                	add    eax,edx
10006be6:	8b 00                	mov    eax,DWORD PTR [eax]
10006be8:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006beb:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006bf1:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006bf7:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006bfa:	01 d0                	add    eax,edx
10006bfc:	8b 00                	mov    eax,DWORD PTR [eax]
10006bfe:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006c01:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006c07:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006c0d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006c10:	01 d0                	add    eax,edx
10006c12:	8b 00                	mov    eax,DWORD PTR [eax]
10006c14:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006c17:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006c1d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006c20:	01 d0                	add    eax,edx
10006c22:	8b 00                	mov    eax,DWORD PTR [eax]
10006c24:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006c27:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006c2a:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006c2d:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
10006c33:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006c36:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006c39:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006c3c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006c3f:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006c42:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006c45:	0f b6 c0             	movzx  eax,al
10006c48:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006c4b:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006c4f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006c52:	c1 e8 06             	shr    eax,0x6
10006c55:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006c58:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006c5f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006c62:	c1 e8 0e             	shr    eax,0xe
10006c65:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006c68:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006c6f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006c72:	c1 e8 16             	shr    eax,0x16
10006c75:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006c78:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006c7f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006c85:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006c8b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006c8e:	01 d0                	add    eax,edx
10006c90:	8b 00                	mov    eax,DWORD PTR [eax]
10006c92:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006c95:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006c9b:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006ca1:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006ca4:	01 d0                	add    eax,edx
10006ca6:	8b 00                	mov    eax,DWORD PTR [eax]
10006ca8:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006cab:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006cb1:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006cb7:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006cba:	01 d0                	add    eax,edx
10006cbc:	8b 00                	mov    eax,DWORD PTR [eax]
10006cbe:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006cc1:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006cc7:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006cca:	01 d0                	add    eax,edx
10006ccc:	8b 00                	mov    eax,DWORD PTR [eax]
10006cce:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006cd1:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006cd4:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006cd7:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
10006cdd:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006ce0:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006ce3:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006ce6:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006ce9:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006cec:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006cef:	0f b6 c0             	movzx  eax,al
10006cf2:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006cf5:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006cf9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006cfc:	c1 e8 06             	shr    eax,0x6
10006cff:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006d02:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006d09:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006d0c:	c1 e8 0e             	shr    eax,0xe
10006d0f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006d12:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006d19:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006d1c:	c1 e8 16             	shr    eax,0x16
10006d1f:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006d22:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006d29:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006d2f:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006d35:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006d38:	01 d0                	add    eax,edx
10006d3a:	8b 00                	mov    eax,DWORD PTR [eax]
10006d3c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006d3f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006d45:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006d4b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006d4e:	01 d0                	add    eax,edx
10006d50:	8b 00                	mov    eax,DWORD PTR [eax]
10006d52:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006d55:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006d5b:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006d61:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006d64:	01 d0                	add    eax,edx
10006d66:	8b 00                	mov    eax,DWORD PTR [eax]
10006d68:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006d6b:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006d71:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006d74:	01 d0                	add    eax,edx
10006d76:	8b 00                	mov    eax,DWORD PTR [eax]
10006d78:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006d7b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006d7e:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006d81:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
10006d87:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006d8a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006d8d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006d90:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006d93:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006d96:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006d99:	0f b6 c0             	movzx  eax,al
10006d9c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006d9f:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006da3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006da6:	c1 e8 06             	shr    eax,0x6
10006da9:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006dac:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006db3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006db6:	c1 e8 0e             	shr    eax,0xe
10006db9:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006dbc:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006dc3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006dc6:	c1 e8 16             	shr    eax,0x16
10006dc9:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006dcc:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006dd3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006dd9:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006ddf:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006de2:	01 d0                	add    eax,edx
10006de4:	8b 00                	mov    eax,DWORD PTR [eax]
10006de6:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006de9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006def:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006df5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006df8:	01 d0                	add    eax,edx
10006dfa:	8b 00                	mov    eax,DWORD PTR [eax]
10006dfc:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006dff:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006e05:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006e0b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006e0e:	01 d0                	add    eax,edx
10006e10:	8b 00                	mov    eax,DWORD PTR [eax]
10006e12:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006e15:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006e1b:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006e1e:	01 d0                	add    eax,edx
10006e20:	8b 00                	mov    eax,DWORD PTR [eax]
10006e22:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006e25:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006e28:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006e2b:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
10006e31:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006e34:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006e37:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006e3a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006e3d:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006e40:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006e43:	0f b6 c0             	movzx  eax,al
10006e46:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006e49:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006e4d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006e50:	c1 e8 06             	shr    eax,0x6
10006e53:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006e56:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006e5d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006e60:	c1 e8 0e             	shr    eax,0xe
10006e63:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006e66:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006e6d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006e70:	c1 e8 16             	shr    eax,0x16
10006e73:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006e76:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006e7d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006e83:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006e89:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006e8c:	01 d0                	add    eax,edx
10006e8e:	8b 00                	mov    eax,DWORD PTR [eax]
10006e90:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006e93:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006e99:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006e9f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006ea2:	01 d0                	add    eax,edx
10006ea4:	8b 00                	mov    eax,DWORD PTR [eax]
10006ea6:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006ea9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006eaf:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006eb5:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006eb8:	01 d0                	add    eax,edx
10006eba:	8b 00                	mov    eax,DWORD PTR [eax]
10006ebc:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006ebf:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006ec5:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006ec8:	01 d0                	add    eax,edx
10006eca:	8b 00                	mov    eax,DWORD PTR [eax]
10006ecc:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006ecf:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006ed2:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006ed5:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
10006edb:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006ede:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006ee1:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006ee4:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006ee7:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10006eea:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006eed:	0f b6 c0             	movzx  eax,al
10006ef0:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006ef3:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006ef7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006efa:	c1 e8 06             	shr    eax,0x6
10006efd:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006f00:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006f07:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006f0a:	c1 e8 0e             	shr    eax,0xe
10006f0d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006f10:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006f17:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10006f1a:	c1 e8 16             	shr    eax,0x16
10006f1d:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006f20:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006f27:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006f2d:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006f33:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006f36:	01 d0                	add    eax,edx
10006f38:	8b 00                	mov    eax,DWORD PTR [eax]
10006f3a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006f3d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006f43:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006f49:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006f4c:	01 d0                	add    eax,edx
10006f4e:	8b 00                	mov    eax,DWORD PTR [eax]
10006f50:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006f53:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006f59:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10006f5f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006f62:	01 d0                	add    eax,edx
10006f64:	8b 00                	mov    eax,DWORD PTR [eax]
10006f66:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006f69:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10006f6f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10006f72:	01 d0                	add    eax,edx
10006f74:	8b 00                	mov    eax,DWORD PTR [eax]
10006f76:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006f79:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006f7c:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10006f7f:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
10006f85:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006f88:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006f8b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10006f8e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10006f91:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10006f94:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006f97:	0f b6 c0             	movzx  eax,al
10006f9a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006f9d:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10006fa1:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006fa4:	c1 e8 06             	shr    eax,0x6
10006fa7:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006faa:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10006fb1:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006fb4:	c1 e8 0e             	shr    eax,0xe
10006fb7:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10006fba:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10006fc1:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10006fc4:	c1 e8 16             	shr    eax,0x16
10006fc7:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10006fca:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10006fd1:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006fd7:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10006fdd:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10006fe0:	01 d0                	add    eax,edx
10006fe2:	8b 00                	mov    eax,DWORD PTR [eax]
10006fe4:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10006fe7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10006fed:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10006ff3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10006ff6:	01 d0                	add    eax,edx
10006ff8:	8b 00                	mov    eax,DWORD PTR [eax]
10006ffa:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10006ffd:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007003:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007009:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000700c:	01 d0                	add    eax,edx
1000700e:	8b 00                	mov    eax,DWORD PTR [eax]
10007010:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007013:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007019:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000701c:	01 d0                	add    eax,edx
1000701e:	8b 00                	mov    eax,DWORD PTR [eax]
10007020:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007023:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007026:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007029:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
1000702f:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007032:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007035:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007038:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000703b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000703e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007041:	0f b6 c0             	movzx  eax,al
10007044:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007047:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000704b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000704e:	c1 e8 06             	shr    eax,0x6
10007051:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007054:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000705b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000705e:	c1 e8 0e             	shr    eax,0xe
10007061:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007064:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000706b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000706e:	c1 e8 16             	shr    eax,0x16
10007071:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007074:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000707b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007081:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007087:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000708a:	01 d0                	add    eax,edx
1000708c:	8b 00                	mov    eax,DWORD PTR [eax]
1000708e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007091:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007097:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000709d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100070a0:	01 d0                	add    eax,edx
100070a2:	8b 00                	mov    eax,DWORD PTR [eax]
100070a4:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100070a7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100070ad:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100070b3:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100070b6:	01 d0                	add    eax,edx
100070b8:	8b 00                	mov    eax,DWORD PTR [eax]
100070ba:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100070bd:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100070c3:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100070c6:	01 d0                	add    eax,edx
100070c8:	8b 00                	mov    eax,DWORD PTR [eax]
100070ca:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100070cd:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100070d0:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100070d3:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
100070d9:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100070dc:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100070df:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100070e2:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100070e5:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100070e8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100070eb:	0f b6 c0             	movzx  eax,al
100070ee:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100070f1:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100070f5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100070f8:	c1 e8 06             	shr    eax,0x6
100070fb:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100070fe:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007105:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007108:	c1 e8 0e             	shr    eax,0xe
1000710b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000710e:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007115:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007118:	c1 e8 16             	shr    eax,0x16
1000711b:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000711e:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007125:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000712b:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007131:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007134:	01 d0                	add    eax,edx
10007136:	8b 00                	mov    eax,DWORD PTR [eax]
10007138:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000713b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007141:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007147:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000714a:	01 d0                	add    eax,edx
1000714c:	8b 00                	mov    eax,DWORD PTR [eax]
1000714e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007151:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007157:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000715d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007160:	01 d0                	add    eax,edx
10007162:	8b 00                	mov    eax,DWORD PTR [eax]
10007164:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007167:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000716d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007170:	01 d0                	add    eax,edx
10007172:	8b 00                	mov    eax,DWORD PTR [eax]
10007174:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007177:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000717a:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000717d:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
10007183:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007186:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007189:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000718c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000718f:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007192:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007195:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007198:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000719b:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
1000719e:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
100071a4:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
100071a7:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
100071aa:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
100071ad:	8d 50 f0             	lea    edx,[eax-0x10]
100071b0:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100071b3:	89 02                	mov    DWORD PTR [edx],eax
100071b5:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
100071b8:	8d 50 f4             	lea    edx,[eax-0xc]
100071bb:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100071be:	89 02                	mov    DWORD PTR [edx],eax
100071c0:	8b 45 ac             	mov    eax,DWORD PTR [ebp-0x54]
100071c3:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100071c6:	8b 45 b0             	mov    eax,DWORD PTR [ebp-0x50]
100071c9:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100071cc:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
100071d2:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100071d5:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100071d8:	0f b6 c0             	movzx  eax,al
100071db:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100071de:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100071e2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100071e5:	c1 e8 06             	shr    eax,0x6
100071e8:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100071eb:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100071f2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100071f5:	c1 e8 0e             	shr    eax,0xe
100071f8:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100071fb:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007202:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007205:	c1 e8 16             	shr    eax,0x16
10007208:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000720b:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007212:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007218:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000721e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007221:	01 d0                	add    eax,edx
10007223:	8b 00                	mov    eax,DWORD PTR [eax]
10007225:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007228:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000722e:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007234:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007237:	01 d0                	add    eax,edx
10007239:	8b 00                	mov    eax,DWORD PTR [eax]
1000723b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000723e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007244:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000724a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000724d:	01 d0                	add    eax,edx
1000724f:	8b 00                	mov    eax,DWORD PTR [eax]
10007251:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007254:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000725a:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000725d:	01 d0                	add    eax,edx
1000725f:	8b 00                	mov    eax,DWORD PTR [eax]
10007261:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007264:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007267:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000726a:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
10007270:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007273:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007276:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007279:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000727c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000727f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007282:	0f b6 c0             	movzx  eax,al
10007285:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007288:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000728c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000728f:	c1 e8 06             	shr    eax,0x6
10007292:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007295:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000729c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000729f:	c1 e8 0e             	shr    eax,0xe
100072a2:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100072a5:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100072ac:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100072af:	c1 e8 16             	shr    eax,0x16
100072b2:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100072b5:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100072bc:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100072c2:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100072c8:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100072cb:	01 d0                	add    eax,edx
100072cd:	8b 00                	mov    eax,DWORD PTR [eax]
100072cf:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100072d2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100072d8:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100072de:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100072e1:	01 d0                	add    eax,edx
100072e3:	8b 00                	mov    eax,DWORD PTR [eax]
100072e5:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100072e8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100072ee:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100072f4:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100072f7:	01 d0                	add    eax,edx
100072f9:	8b 00                	mov    eax,DWORD PTR [eax]
100072fb:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100072fe:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007304:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007307:	01 d0                	add    eax,edx
10007309:	8b 00                	mov    eax,DWORD PTR [eax]
1000730b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000730e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007311:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007314:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
1000731a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000731d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007320:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007323:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007326:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007329:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000732c:	0f b6 c0             	movzx  eax,al
1000732f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007332:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007336:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007339:	c1 e8 06             	shr    eax,0x6
1000733c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000733f:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007346:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007349:	c1 e8 0e             	shr    eax,0xe
1000734c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000734f:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007356:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007359:	c1 e8 16             	shr    eax,0x16
1000735c:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000735f:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007366:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000736c:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007372:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007375:	01 d0                	add    eax,edx
10007377:	8b 00                	mov    eax,DWORD PTR [eax]
10007379:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000737c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007382:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007388:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000738b:	01 d0                	add    eax,edx
1000738d:	8b 00                	mov    eax,DWORD PTR [eax]
1000738f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007392:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007398:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000739e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100073a1:	01 d0                	add    eax,edx
100073a3:	8b 00                	mov    eax,DWORD PTR [eax]
100073a5:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100073a8:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100073ae:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100073b1:	01 d0                	add    eax,edx
100073b3:	8b 00                	mov    eax,DWORD PTR [eax]
100073b5:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100073b8:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100073bb:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100073be:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
100073c4:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100073c7:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100073ca:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100073cd:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100073d0:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100073d3:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100073d6:	0f b6 c0             	movzx  eax,al
100073d9:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100073dc:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100073e0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100073e3:	c1 e8 06             	shr    eax,0x6
100073e6:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100073e9:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100073f0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100073f3:	c1 e8 0e             	shr    eax,0xe
100073f6:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100073f9:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007400:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007403:	c1 e8 16             	shr    eax,0x16
10007406:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007409:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007410:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007416:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000741c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000741f:	01 d0                	add    eax,edx
10007421:	8b 00                	mov    eax,DWORD PTR [eax]
10007423:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007426:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000742c:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007432:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007435:	01 d0                	add    eax,edx
10007437:	8b 00                	mov    eax,DWORD PTR [eax]
10007439:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000743c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007442:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007448:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000744b:	01 d0                	add    eax,edx
1000744d:	8b 00                	mov    eax,DWORD PTR [eax]
1000744f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007452:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007458:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000745b:	01 d0                	add    eax,edx
1000745d:	8b 00                	mov    eax,DWORD PTR [eax]
1000745f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007462:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007465:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007468:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
1000746e:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007471:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007474:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007477:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000747a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000747d:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007480:	0f b6 c0             	movzx  eax,al
10007483:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007486:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000748a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000748d:	c1 e8 06             	shr    eax,0x6
10007490:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007493:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000749a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000749d:	c1 e8 0e             	shr    eax,0xe
100074a0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100074a3:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100074aa:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100074ad:	c1 e8 16             	shr    eax,0x16
100074b0:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100074b3:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100074ba:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100074c0:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100074c6:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100074c9:	01 d0                	add    eax,edx
100074cb:	8b 00                	mov    eax,DWORD PTR [eax]
100074cd:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100074d0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100074d6:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100074dc:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100074df:	01 d0                	add    eax,edx
100074e1:	8b 00                	mov    eax,DWORD PTR [eax]
100074e3:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100074e6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100074ec:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100074f2:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100074f5:	01 d0                	add    eax,edx
100074f7:	8b 00                	mov    eax,DWORD PTR [eax]
100074f9:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100074fc:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007502:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007505:	01 d0                	add    eax,edx
10007507:	8b 00                	mov    eax,DWORD PTR [eax]
10007509:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000750c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000750f:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007512:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
10007518:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000751b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000751e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007521:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007524:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007527:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000752a:	0f b6 c0             	movzx  eax,al
1000752d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007530:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007534:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007537:	c1 e8 06             	shr    eax,0x6
1000753a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000753d:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007544:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007547:	c1 e8 0e             	shr    eax,0xe
1000754a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000754d:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007554:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007557:	c1 e8 16             	shr    eax,0x16
1000755a:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000755d:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007564:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000756a:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007570:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007573:	01 d0                	add    eax,edx
10007575:	8b 00                	mov    eax,DWORD PTR [eax]
10007577:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000757a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007580:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007586:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007589:	01 d0                	add    eax,edx
1000758b:	8b 00                	mov    eax,DWORD PTR [eax]
1000758d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007590:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007596:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000759c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000759f:	01 d0                	add    eax,edx
100075a1:	8b 00                	mov    eax,DWORD PTR [eax]
100075a3:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100075a6:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100075ac:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100075af:	01 d0                	add    eax,edx
100075b1:	8b 00                	mov    eax,DWORD PTR [eax]
100075b3:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100075b6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100075b9:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100075bc:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
100075c2:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100075c5:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100075c8:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100075cb:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100075ce:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100075d1:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100075d4:	0f b6 c0             	movzx  eax,al
100075d7:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100075da:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100075de:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100075e1:	c1 e8 06             	shr    eax,0x6
100075e4:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100075e7:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100075ee:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100075f1:	c1 e8 0e             	shr    eax,0xe
100075f4:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100075f7:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100075fe:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007601:	c1 e8 16             	shr    eax,0x16
10007604:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007607:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000760e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007614:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000761a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000761d:	01 d0                	add    eax,edx
1000761f:	8b 00                	mov    eax,DWORD PTR [eax]
10007621:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007624:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000762a:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007630:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007633:	01 d0                	add    eax,edx
10007635:	8b 00                	mov    eax,DWORD PTR [eax]
10007637:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000763a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007640:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007646:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007649:	01 d0                	add    eax,edx
1000764b:	8b 00                	mov    eax,DWORD PTR [eax]
1000764d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007650:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007656:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007659:	01 d0                	add    eax,edx
1000765b:	8b 00                	mov    eax,DWORD PTR [eax]
1000765d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007660:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007663:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007666:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
1000766c:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000766f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007672:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007675:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007678:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000767b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000767e:	0f b6 c0             	movzx  eax,al
10007681:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007684:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007688:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000768b:	c1 e8 06             	shr    eax,0x6
1000768e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007691:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007698:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000769b:	c1 e8 0e             	shr    eax,0xe
1000769e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100076a1:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100076a8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100076ab:	c1 e8 16             	shr    eax,0x16
100076ae:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100076b1:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100076b8:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100076be:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100076c4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100076c7:	01 d0                	add    eax,edx
100076c9:	8b 00                	mov    eax,DWORD PTR [eax]
100076cb:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100076ce:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100076d4:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100076da:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100076dd:	01 d0                	add    eax,edx
100076df:	8b 00                	mov    eax,DWORD PTR [eax]
100076e1:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100076e4:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100076ea:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100076f0:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100076f3:	01 d0                	add    eax,edx
100076f5:	8b 00                	mov    eax,DWORD PTR [eax]
100076f7:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100076fa:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007700:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007703:	01 d0                	add    eax,edx
10007705:	8b 00                	mov    eax,DWORD PTR [eax]
10007707:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000770a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000770d:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007710:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
10007716:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007719:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000771c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000771f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007722:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007725:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007728:	0f b6 c0             	movzx  eax,al
1000772b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000772e:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007732:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007735:	c1 e8 06             	shr    eax,0x6
10007738:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000773b:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007742:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007745:	c1 e8 0e             	shr    eax,0xe
10007748:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000774b:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007752:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007755:	c1 e8 16             	shr    eax,0x16
10007758:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000775b:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007762:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007768:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000776e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007771:	01 d0                	add    eax,edx
10007773:	8b 00                	mov    eax,DWORD PTR [eax]
10007775:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007778:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000777e:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007784:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007787:	01 d0                	add    eax,edx
10007789:	8b 00                	mov    eax,DWORD PTR [eax]
1000778b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000778e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007794:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000779a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000779d:	01 d0                	add    eax,edx
1000779f:	8b 00                	mov    eax,DWORD PTR [eax]
100077a1:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100077a4:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100077aa:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100077ad:	01 d0                	add    eax,edx
100077af:	8b 00                	mov    eax,DWORD PTR [eax]
100077b1:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100077b4:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100077b7:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100077ba:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
100077c0:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100077c3:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100077c6:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100077c9:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100077cc:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100077cf:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100077d2:	0f b6 c0             	movzx  eax,al
100077d5:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100077d8:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100077dc:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100077df:	c1 e8 06             	shr    eax,0x6
100077e2:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100077e5:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100077ec:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100077ef:	c1 e8 0e             	shr    eax,0xe
100077f2:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100077f5:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100077fc:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100077ff:	c1 e8 16             	shr    eax,0x16
10007802:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007805:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000780c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007812:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007818:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000781b:	01 d0                	add    eax,edx
1000781d:	8b 00                	mov    eax,DWORD PTR [eax]
1000781f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007822:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007828:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000782e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007831:	01 d0                	add    eax,edx
10007833:	8b 00                	mov    eax,DWORD PTR [eax]
10007835:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007838:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000783e:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007844:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007847:	01 d0                	add    eax,edx
10007849:	8b 00                	mov    eax,DWORD PTR [eax]
1000784b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000784e:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007854:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007857:	01 d0                	add    eax,edx
10007859:	8b 00                	mov    eax,DWORD PTR [eax]
1000785b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000785e:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007861:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007864:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
1000786a:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000786d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007870:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007873:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007876:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007879:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000787c:	0f b6 c0             	movzx  eax,al
1000787f:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007882:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007886:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007889:	c1 e8 06             	shr    eax,0x6
1000788c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000788f:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007896:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007899:	c1 e8 0e             	shr    eax,0xe
1000789c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000789f:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100078a6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100078a9:	c1 e8 16             	shr    eax,0x16
100078ac:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100078af:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100078b6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100078bc:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100078c2:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100078c5:	01 d0                	add    eax,edx
100078c7:	8b 00                	mov    eax,DWORD PTR [eax]
100078c9:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100078cc:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100078d2:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100078d8:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100078db:	01 d0                	add    eax,edx
100078dd:	8b 00                	mov    eax,DWORD PTR [eax]
100078df:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100078e2:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100078e8:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100078ee:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100078f1:	01 d0                	add    eax,edx
100078f3:	8b 00                	mov    eax,DWORD PTR [eax]
100078f5:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100078f8:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100078fe:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007901:	01 d0                	add    eax,edx
10007903:	8b 00                	mov    eax,DWORD PTR [eax]
10007905:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007908:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000790b:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000790e:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
10007914:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007917:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000791a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000791d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007920:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007923:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007926:	0f b6 c0             	movzx  eax,al
10007929:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000792c:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007930:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007933:	c1 e8 06             	shr    eax,0x6
10007936:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007939:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007940:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007943:	c1 e8 0e             	shr    eax,0xe
10007946:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007949:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007950:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007953:	c1 e8 16             	shr    eax,0x16
10007956:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007959:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007960:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007966:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000796c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000796f:	01 d0                	add    eax,edx
10007971:	8b 00                	mov    eax,DWORD PTR [eax]
10007973:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007976:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000797c:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007982:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007985:	01 d0                	add    eax,edx
10007987:	8b 00                	mov    eax,DWORD PTR [eax]
10007989:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000798c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007992:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007998:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000799b:	01 d0                	add    eax,edx
1000799d:	8b 00                	mov    eax,DWORD PTR [eax]
1000799f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100079a2:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100079a8:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100079ab:	01 d0                	add    eax,edx
100079ad:	8b 00                	mov    eax,DWORD PTR [eax]
100079af:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100079b2:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100079b5:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100079b8:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
100079be:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100079c1:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100079c4:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100079c7:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100079ca:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100079cd:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100079d0:	0f b6 c0             	movzx  eax,al
100079d3:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100079d6:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100079da:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100079dd:	c1 e8 06             	shr    eax,0x6
100079e0:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100079e3:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100079ea:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100079ed:	c1 e8 0e             	shr    eax,0xe
100079f0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100079f3:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100079fa:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100079fd:	c1 e8 16             	shr    eax,0x16
10007a00:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007a03:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007a0a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007a10:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007a16:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007a19:	01 d0                	add    eax,edx
10007a1b:	8b 00                	mov    eax,DWORD PTR [eax]
10007a1d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007a20:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007a26:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007a2c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007a2f:	01 d0                	add    eax,edx
10007a31:	8b 00                	mov    eax,DWORD PTR [eax]
10007a33:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007a36:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007a3c:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007a42:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007a45:	01 d0                	add    eax,edx
10007a47:	8b 00                	mov    eax,DWORD PTR [eax]
10007a49:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007a4c:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007a52:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007a55:	01 d0                	add    eax,edx
10007a57:	8b 00                	mov    eax,DWORD PTR [eax]
10007a59:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007a5c:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007a5f:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007a62:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
10007a68:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007a6b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007a6e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007a71:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007a74:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007a77:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007a7a:	0f b6 c0             	movzx  eax,al
10007a7d:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007a80:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007a84:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007a87:	c1 e8 06             	shr    eax,0x6
10007a8a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007a8d:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007a94:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007a97:	c1 e8 0e             	shr    eax,0xe
10007a9a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007a9d:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007aa4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007aa7:	c1 e8 16             	shr    eax,0x16
10007aaa:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007aad:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007ab4:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007aba:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007ac0:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007ac3:	01 d0                	add    eax,edx
10007ac5:	8b 00                	mov    eax,DWORD PTR [eax]
10007ac7:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007aca:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007ad0:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007ad6:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007ad9:	01 d0                	add    eax,edx
10007adb:	8b 00                	mov    eax,DWORD PTR [eax]
10007add:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007ae0:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007ae6:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007aec:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007aef:	01 d0                	add    eax,edx
10007af1:	8b 00                	mov    eax,DWORD PTR [eax]
10007af3:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007af6:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007afc:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007aff:	01 d0                	add    eax,edx
10007b01:	8b 00                	mov    eax,DWORD PTR [eax]
10007b03:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007b06:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007b09:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007b0c:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
10007b12:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007b15:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007b18:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007b1b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007b1e:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007b21:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007b24:	0f b6 c0             	movzx  eax,al
10007b27:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007b2a:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007b2e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007b31:	c1 e8 06             	shr    eax,0x6
10007b34:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007b37:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007b3e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007b41:	c1 e8 0e             	shr    eax,0xe
10007b44:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007b47:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007b4e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007b51:	c1 e8 16             	shr    eax,0x16
10007b54:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007b57:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007b5e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007b64:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007b6a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007b6d:	01 d0                	add    eax,edx
10007b6f:	8b 00                	mov    eax,DWORD PTR [eax]
10007b71:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007b74:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007b7a:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007b80:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007b83:	01 d0                	add    eax,edx
10007b85:	8b 00                	mov    eax,DWORD PTR [eax]
10007b87:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007b8a:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007b90:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007b96:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007b99:	01 d0                	add    eax,edx
10007b9b:	8b 00                	mov    eax,DWORD PTR [eax]
10007b9d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007ba0:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007ba6:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007ba9:	01 d0                	add    eax,edx
10007bab:	8b 00                	mov    eax,DWORD PTR [eax]
10007bad:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007bb0:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007bb3:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007bb6:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
10007bbc:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007bbf:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007bc2:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007bc5:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007bc8:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007bcb:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007bce:	0f b6 c0             	movzx  eax,al
10007bd1:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007bd4:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007bd8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007bdb:	c1 e8 06             	shr    eax,0x6
10007bde:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007be1:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007be8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007beb:	c1 e8 0e             	shr    eax,0xe
10007bee:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007bf1:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007bf8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007bfb:	c1 e8 16             	shr    eax,0x16
10007bfe:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007c01:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007c08:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007c0e:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007c14:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007c17:	01 d0                	add    eax,edx
10007c19:	8b 00                	mov    eax,DWORD PTR [eax]
10007c1b:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007c1e:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007c24:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007c2a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007c2d:	01 d0                	add    eax,edx
10007c2f:	8b 00                	mov    eax,DWORD PTR [eax]
10007c31:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007c34:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007c3a:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007c40:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007c43:	01 d0                	add    eax,edx
10007c45:	8b 00                	mov    eax,DWORD PTR [eax]
10007c47:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007c4a:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007c50:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007c53:	01 d0                	add    eax,edx
10007c55:	8b 00                	mov    eax,DWORD PTR [eax]
10007c57:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007c5a:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007c5d:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007c60:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
10007c66:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007c69:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007c6c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007c6f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007c72:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007c75:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007c78:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007c7b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007c7e:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10007c81:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
10007c87:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
10007c8a:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10007c8d:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10007c90:	8d 50 f8             	lea    edx,[eax-0x8]
10007c93:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007c96:	89 02                	mov    DWORD PTR [edx],eax
10007c98:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
10007c9b:	8d 50 fc             	lea    edx,[eax-0x4]
10007c9e:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007ca1:	89 02                	mov    DWORD PTR [edx],eax
10007ca3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007ca9:	05 fc 0f 00 00       	add    eax,0xffc
10007cae:	39 45 dc             	cmp    DWORD PTR [ebp-0x24],eax
10007cb1:	0f 82 22 ea ff ff    	jb     100066d9 <_crypt_blowfish_rn+0xcde>
10007cb7:	8b 95 1c ff ff ff    	mov    edx,DWORD PTR [ebp-0xe4]
10007cbd:	8b 85 64 ff ff ff    	mov    eax,DWORD PTR [ebp-0x9c]
10007cc3:	31 d0                	xor    eax,edx
10007cc5:	89 85 1c ff ff ff    	mov    DWORD PTR [ebp-0xe4],eax
10007ccb:	8b 95 20 ff ff ff    	mov    edx,DWORD PTR [ebp-0xe0]
10007cd1:	8b 85 68 ff ff ff    	mov    eax,DWORD PTR [ebp-0x98]
10007cd7:	31 d0                	xor    eax,edx
10007cd9:	89 85 20 ff ff ff    	mov    DWORD PTR [ebp-0xe0],eax
10007cdf:	8b 95 24 ff ff ff    	mov    edx,DWORD PTR [ebp-0xdc]
10007ce5:	8b 85 6c ff ff ff    	mov    eax,DWORD PTR [ebp-0x94]
10007ceb:	31 d0                	xor    eax,edx
10007ced:	89 85 24 ff ff ff    	mov    DWORD PTR [ebp-0xdc],eax
10007cf3:	8b 95 28 ff ff ff    	mov    edx,DWORD PTR [ebp-0xd8]
10007cf9:	8b 85 70 ff ff ff    	mov    eax,DWORD PTR [ebp-0x90]
10007cff:	31 d0                	xor    eax,edx
10007d01:	89 85 28 ff ff ff    	mov    DWORD PTR [ebp-0xd8],eax
10007d07:	8b 95 2c ff ff ff    	mov    edx,DWORD PTR [ebp-0xd4]
10007d0d:	8b 85 74 ff ff ff    	mov    eax,DWORD PTR [ebp-0x8c]
10007d13:	31 d0                	xor    eax,edx
10007d15:	89 85 2c ff ff ff    	mov    DWORD PTR [ebp-0xd4],eax
10007d1b:	8b 95 30 ff ff ff    	mov    edx,DWORD PTR [ebp-0xd0]
10007d21:	8b 85 78 ff ff ff    	mov    eax,DWORD PTR [ebp-0x88]
10007d27:	31 d0                	xor    eax,edx
10007d29:	89 85 30 ff ff ff    	mov    DWORD PTR [ebp-0xd0],eax
10007d2f:	8b 95 34 ff ff ff    	mov    edx,DWORD PTR [ebp-0xcc]
10007d35:	8b 85 7c ff ff ff    	mov    eax,DWORD PTR [ebp-0x84]
10007d3b:	31 d0                	xor    eax,edx
10007d3d:	89 85 34 ff ff ff    	mov    DWORD PTR [ebp-0xcc],eax
10007d43:	8b 95 38 ff ff ff    	mov    edx,DWORD PTR [ebp-0xc8]
10007d49:	8b 45 80             	mov    eax,DWORD PTR [ebp-0x80]
10007d4c:	31 d0                	xor    eax,edx
10007d4e:	89 85 38 ff ff ff    	mov    DWORD PTR [ebp-0xc8],eax
10007d54:	8b 95 3c ff ff ff    	mov    edx,DWORD PTR [ebp-0xc4]
10007d5a:	8b 45 84             	mov    eax,DWORD PTR [ebp-0x7c]
10007d5d:	31 d0                	xor    eax,edx
10007d5f:	89 85 3c ff ff ff    	mov    DWORD PTR [ebp-0xc4],eax
10007d65:	8b 95 40 ff ff ff    	mov    edx,DWORD PTR [ebp-0xc0]
10007d6b:	8b 45 88             	mov    eax,DWORD PTR [ebp-0x78]
10007d6e:	31 d0                	xor    eax,edx
10007d70:	89 85 40 ff ff ff    	mov    DWORD PTR [ebp-0xc0],eax
10007d76:	8b 95 44 ff ff ff    	mov    edx,DWORD PTR [ebp-0xbc]
10007d7c:	8b 45 8c             	mov    eax,DWORD PTR [ebp-0x74]
10007d7f:	31 d0                	xor    eax,edx
10007d81:	89 85 44 ff ff ff    	mov    DWORD PTR [ebp-0xbc],eax
10007d87:	8b 95 48 ff ff ff    	mov    edx,DWORD PTR [ebp-0xb8]
10007d8d:	8b 45 90             	mov    eax,DWORD PTR [ebp-0x70]
10007d90:	31 d0                	xor    eax,edx
10007d92:	89 85 48 ff ff ff    	mov    DWORD PTR [ebp-0xb8],eax
10007d98:	8b 95 4c ff ff ff    	mov    edx,DWORD PTR [ebp-0xb4]
10007d9e:	8b 45 94             	mov    eax,DWORD PTR [ebp-0x6c]
10007da1:	31 d0                	xor    eax,edx
10007da3:	89 85 4c ff ff ff    	mov    DWORD PTR [ebp-0xb4],eax
10007da9:	8b 95 50 ff ff ff    	mov    edx,DWORD PTR [ebp-0xb0]
10007daf:	8b 45 98             	mov    eax,DWORD PTR [ebp-0x68]
10007db2:	31 d0                	xor    eax,edx
10007db4:	89 85 50 ff ff ff    	mov    DWORD PTR [ebp-0xb0],eax
10007dba:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [ebp-0xac]
10007dc0:	8b 45 9c             	mov    eax,DWORD PTR [ebp-0x64]
10007dc3:	31 d0                	xor    eax,edx
10007dc5:	89 85 54 ff ff ff    	mov    DWORD PTR [ebp-0xac],eax
10007dcb:	8b 95 58 ff ff ff    	mov    edx,DWORD PTR [ebp-0xa8]
10007dd1:	8b 45 a0             	mov    eax,DWORD PTR [ebp-0x60]
10007dd4:	31 d0                	xor    eax,edx
10007dd6:	89 85 58 ff ff ff    	mov    DWORD PTR [ebp-0xa8],eax
10007ddc:	8b 95 5c ff ff ff    	mov    edx,DWORD PTR [ebp-0xa4]
10007de2:	8b 45 a4             	mov    eax,DWORD PTR [ebp-0x5c]
10007de5:	31 d0                	xor    eax,edx
10007de7:	89 85 5c ff ff ff    	mov    DWORD PTR [ebp-0xa4],eax
10007ded:	8b 95 60 ff ff ff    	mov    edx,DWORD PTR [ebp-0xa0]
10007df3:	8b 45 a8             	mov    eax,DWORD PTR [ebp-0x58]
10007df6:	31 d0                	xor    eax,edx
10007df8:	89 85 60 ff ff ff    	mov    DWORD PTR [ebp-0xa0],eax
10007dfe:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
10007e05:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007e08:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10007e0b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007e11:	05 00 10 00 00       	add    eax,0x1000
10007e16:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10007e19:	83 45 dc 08          	add    DWORD PTR [ebp-0x24],0x8
10007e1d:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
10007e23:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007e26:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007e29:	0f b6 c0             	movzx  eax,al
10007e2c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007e2f:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007e33:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007e36:	c1 e8 06             	shr    eax,0x6
10007e39:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007e3c:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007e43:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007e46:	c1 e8 0e             	shr    eax,0xe
10007e49:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007e4c:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007e53:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007e56:	c1 e8 16             	shr    eax,0x16
10007e59:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007e5c:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007e63:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007e69:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007e6f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007e72:	01 d0                	add    eax,edx
10007e74:	8b 00                	mov    eax,DWORD PTR [eax]
10007e76:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007e79:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007e7f:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007e85:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007e88:	01 d0                	add    eax,edx
10007e8a:	8b 00                	mov    eax,DWORD PTR [eax]
10007e8c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007e8f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007e95:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007e9b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007e9e:	01 d0                	add    eax,edx
10007ea0:	8b 00                	mov    eax,DWORD PTR [eax]
10007ea2:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007ea5:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007eab:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007eae:	01 d0                	add    eax,edx
10007eb0:	8b 00                	mov    eax,DWORD PTR [eax]
10007eb2:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007eb5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007eb8:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007ebb:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
10007ec1:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007ec4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007ec7:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007eca:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007ecd:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10007ed0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007ed3:	0f b6 c0             	movzx  eax,al
10007ed6:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007ed9:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007edd:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007ee0:	c1 e8 06             	shr    eax,0x6
10007ee3:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007ee6:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007eed:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007ef0:	c1 e8 0e             	shr    eax,0xe
10007ef3:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007ef6:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007efd:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10007f00:	c1 e8 16             	shr    eax,0x16
10007f03:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007f06:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007f0d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007f13:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007f19:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007f1c:	01 d0                	add    eax,edx
10007f1e:	8b 00                	mov    eax,DWORD PTR [eax]
10007f20:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007f23:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007f29:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007f2f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007f32:	01 d0                	add    eax,edx
10007f34:	8b 00                	mov    eax,DWORD PTR [eax]
10007f36:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007f39:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007f3f:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007f45:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007f48:	01 d0                	add    eax,edx
10007f4a:	8b 00                	mov    eax,DWORD PTR [eax]
10007f4c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007f4f:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007f55:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10007f58:	01 d0                	add    eax,edx
10007f5a:	8b 00                	mov    eax,DWORD PTR [eax]
10007f5c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007f5f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007f62:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10007f65:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
10007f6b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007f6e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007f71:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10007f74:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007f77:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10007f7a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007f7d:	0f b6 c0             	movzx  eax,al
10007f80:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007f83:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10007f87:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007f8a:	c1 e8 06             	shr    eax,0x6
10007f8d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007f90:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10007f97:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007f9a:	c1 e8 0e             	shr    eax,0xe
10007f9d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007fa0:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10007fa7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10007faa:	c1 e8 16             	shr    eax,0x16
10007fad:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10007fb0:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10007fb7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007fbd:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10007fc3:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10007fc6:	01 d0                	add    eax,edx
10007fc8:	8b 00                	mov    eax,DWORD PTR [eax]
10007fca:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10007fcd:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007fd3:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10007fd9:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10007fdc:	01 d0                	add    eax,edx
10007fde:	8b 00                	mov    eax,DWORD PTR [eax]
10007fe0:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10007fe3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10007fe9:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10007fef:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10007ff2:	01 d0                	add    eax,edx
10007ff4:	8b 00                	mov    eax,DWORD PTR [eax]
10007ff6:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10007ff9:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10007fff:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008002:	01 d0                	add    eax,edx
10008004:	8b 00                	mov    eax,DWORD PTR [eax]
10008006:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008009:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000800c:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000800f:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
10008015:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008018:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000801b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000801e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008021:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008024:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008027:	0f b6 c0             	movzx  eax,al
1000802a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000802d:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008031:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008034:	c1 e8 06             	shr    eax,0x6
10008037:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000803a:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008041:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008044:	c1 e8 0e             	shr    eax,0xe
10008047:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000804a:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008051:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008054:	c1 e8 16             	shr    eax,0x16
10008057:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000805a:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008061:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008067:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000806d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008070:	01 d0                	add    eax,edx
10008072:	8b 00                	mov    eax,DWORD PTR [eax]
10008074:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008077:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000807d:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008083:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008086:	01 d0                	add    eax,edx
10008088:	8b 00                	mov    eax,DWORD PTR [eax]
1000808a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000808d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008093:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008099:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000809c:	01 d0                	add    eax,edx
1000809e:	8b 00                	mov    eax,DWORD PTR [eax]
100080a0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100080a3:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100080a9:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100080ac:	01 d0                	add    eax,edx
100080ae:	8b 00                	mov    eax,DWORD PTR [eax]
100080b0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100080b3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100080b6:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100080b9:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
100080bf:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100080c2:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100080c5:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100080c8:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100080cb:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100080ce:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100080d1:	0f b6 c0             	movzx  eax,al
100080d4:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100080d7:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100080db:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100080de:	c1 e8 06             	shr    eax,0x6
100080e1:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100080e4:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100080eb:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100080ee:	c1 e8 0e             	shr    eax,0xe
100080f1:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100080f4:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100080fb:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100080fe:	c1 e8 16             	shr    eax,0x16
10008101:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008104:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000810b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008111:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008117:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000811a:	01 d0                	add    eax,edx
1000811c:	8b 00                	mov    eax,DWORD PTR [eax]
1000811e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008121:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008127:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000812d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008130:	01 d0                	add    eax,edx
10008132:	8b 00                	mov    eax,DWORD PTR [eax]
10008134:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008137:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000813d:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008143:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008146:	01 d0                	add    eax,edx
10008148:	8b 00                	mov    eax,DWORD PTR [eax]
1000814a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000814d:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008153:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008156:	01 d0                	add    eax,edx
10008158:	8b 00                	mov    eax,DWORD PTR [eax]
1000815a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000815d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008160:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008163:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
10008169:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000816c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000816f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008172:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008175:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008178:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000817b:	0f b6 c0             	movzx  eax,al
1000817e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008181:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008185:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008188:	c1 e8 06             	shr    eax,0x6
1000818b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000818e:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008195:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008198:	c1 e8 0e             	shr    eax,0xe
1000819b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000819e:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100081a5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100081a8:	c1 e8 16             	shr    eax,0x16
100081ab:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100081ae:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100081b5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100081bb:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100081c1:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100081c4:	01 d0                	add    eax,edx
100081c6:	8b 00                	mov    eax,DWORD PTR [eax]
100081c8:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100081cb:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100081d1:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100081d7:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100081da:	01 d0                	add    eax,edx
100081dc:	8b 00                	mov    eax,DWORD PTR [eax]
100081de:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100081e1:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100081e7:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100081ed:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100081f0:	01 d0                	add    eax,edx
100081f2:	8b 00                	mov    eax,DWORD PTR [eax]
100081f4:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100081f7:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100081fd:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008200:	01 d0                	add    eax,edx
10008202:	8b 00                	mov    eax,DWORD PTR [eax]
10008204:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008207:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000820a:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000820d:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
10008213:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008216:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008219:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000821c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000821f:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008222:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008225:	0f b6 c0             	movzx  eax,al
10008228:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000822b:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000822f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008232:	c1 e8 06             	shr    eax,0x6
10008235:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008238:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000823f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008242:	c1 e8 0e             	shr    eax,0xe
10008245:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008248:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000824f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008252:	c1 e8 16             	shr    eax,0x16
10008255:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008258:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000825f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008265:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000826b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000826e:	01 d0                	add    eax,edx
10008270:	8b 00                	mov    eax,DWORD PTR [eax]
10008272:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008275:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000827b:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008281:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008284:	01 d0                	add    eax,edx
10008286:	8b 00                	mov    eax,DWORD PTR [eax]
10008288:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000828b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008291:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008297:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000829a:	01 d0                	add    eax,edx
1000829c:	8b 00                	mov    eax,DWORD PTR [eax]
1000829e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100082a1:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100082a7:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100082aa:	01 d0                	add    eax,edx
100082ac:	8b 00                	mov    eax,DWORD PTR [eax]
100082ae:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100082b1:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100082b4:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100082b7:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
100082bd:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100082c0:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100082c3:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100082c6:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100082c9:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100082cc:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100082cf:	0f b6 c0             	movzx  eax,al
100082d2:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100082d5:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100082d9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100082dc:	c1 e8 06             	shr    eax,0x6
100082df:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100082e2:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100082e9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100082ec:	c1 e8 0e             	shr    eax,0xe
100082ef:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100082f2:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100082f9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100082fc:	c1 e8 16             	shr    eax,0x16
100082ff:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008302:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008309:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000830f:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008315:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008318:	01 d0                	add    eax,edx
1000831a:	8b 00                	mov    eax,DWORD PTR [eax]
1000831c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000831f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008325:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000832b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000832e:	01 d0                	add    eax,edx
10008330:	8b 00                	mov    eax,DWORD PTR [eax]
10008332:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008335:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000833b:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008341:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008344:	01 d0                	add    eax,edx
10008346:	8b 00                	mov    eax,DWORD PTR [eax]
10008348:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000834b:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008351:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008354:	01 d0                	add    eax,edx
10008356:	8b 00                	mov    eax,DWORD PTR [eax]
10008358:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000835b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000835e:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008361:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
10008367:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000836a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000836d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008370:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008373:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008376:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008379:	0f b6 c0             	movzx  eax,al
1000837c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000837f:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008383:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008386:	c1 e8 06             	shr    eax,0x6
10008389:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000838c:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008393:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008396:	c1 e8 0e             	shr    eax,0xe
10008399:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000839c:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100083a3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100083a6:	c1 e8 16             	shr    eax,0x16
100083a9:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100083ac:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100083b3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100083b9:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100083bf:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100083c2:	01 d0                	add    eax,edx
100083c4:	8b 00                	mov    eax,DWORD PTR [eax]
100083c6:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100083c9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100083cf:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100083d5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100083d8:	01 d0                	add    eax,edx
100083da:	8b 00                	mov    eax,DWORD PTR [eax]
100083dc:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100083df:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100083e5:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100083eb:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100083ee:	01 d0                	add    eax,edx
100083f0:	8b 00                	mov    eax,DWORD PTR [eax]
100083f2:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100083f5:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100083fb:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100083fe:	01 d0                	add    eax,edx
10008400:	8b 00                	mov    eax,DWORD PTR [eax]
10008402:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008405:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008408:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000840b:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
10008411:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008414:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008417:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000841a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000841d:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008420:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008423:	0f b6 c0             	movzx  eax,al
10008426:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008429:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000842d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008430:	c1 e8 06             	shr    eax,0x6
10008433:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008436:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000843d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008440:	c1 e8 0e             	shr    eax,0xe
10008443:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008446:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000844d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008450:	c1 e8 16             	shr    eax,0x16
10008453:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008456:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000845d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008463:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008469:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000846c:	01 d0                	add    eax,edx
1000846e:	8b 00                	mov    eax,DWORD PTR [eax]
10008470:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008473:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008479:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000847f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008482:	01 d0                	add    eax,edx
10008484:	8b 00                	mov    eax,DWORD PTR [eax]
10008486:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008489:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000848f:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008495:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008498:	01 d0                	add    eax,edx
1000849a:	8b 00                	mov    eax,DWORD PTR [eax]
1000849c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000849f:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100084a5:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100084a8:	01 d0                	add    eax,edx
100084aa:	8b 00                	mov    eax,DWORD PTR [eax]
100084ac:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100084af:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100084b2:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100084b5:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
100084bb:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100084be:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100084c1:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100084c4:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100084c7:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100084ca:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100084cd:	0f b6 c0             	movzx  eax,al
100084d0:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100084d3:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100084d7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100084da:	c1 e8 06             	shr    eax,0x6
100084dd:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100084e0:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100084e7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100084ea:	c1 e8 0e             	shr    eax,0xe
100084ed:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100084f0:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100084f7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100084fa:	c1 e8 16             	shr    eax,0x16
100084fd:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008500:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008507:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000850d:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008513:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008516:	01 d0                	add    eax,edx
10008518:	8b 00                	mov    eax,DWORD PTR [eax]
1000851a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000851d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008523:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008529:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000852c:	01 d0                	add    eax,edx
1000852e:	8b 00                	mov    eax,DWORD PTR [eax]
10008530:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008533:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008539:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000853f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008542:	01 d0                	add    eax,edx
10008544:	8b 00                	mov    eax,DWORD PTR [eax]
10008546:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008549:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000854f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008552:	01 d0                	add    eax,edx
10008554:	8b 00                	mov    eax,DWORD PTR [eax]
10008556:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008559:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000855c:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000855f:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
10008565:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008568:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000856b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000856e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008571:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008574:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008577:	0f b6 c0             	movzx  eax,al
1000857a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000857d:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008581:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008584:	c1 e8 06             	shr    eax,0x6
10008587:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000858a:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008591:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008594:	c1 e8 0e             	shr    eax,0xe
10008597:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000859a:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100085a1:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100085a4:	c1 e8 16             	shr    eax,0x16
100085a7:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100085aa:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100085b1:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100085b7:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100085bd:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100085c0:	01 d0                	add    eax,edx
100085c2:	8b 00                	mov    eax,DWORD PTR [eax]
100085c4:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100085c7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100085cd:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100085d3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100085d6:	01 d0                	add    eax,edx
100085d8:	8b 00                	mov    eax,DWORD PTR [eax]
100085da:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100085dd:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100085e3:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100085e9:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100085ec:	01 d0                	add    eax,edx
100085ee:	8b 00                	mov    eax,DWORD PTR [eax]
100085f0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100085f3:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100085f9:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100085fc:	01 d0                	add    eax,edx
100085fe:	8b 00                	mov    eax,DWORD PTR [eax]
10008600:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008603:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008606:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008609:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
1000860f:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008612:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008615:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008618:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000861b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000861e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008621:	0f b6 c0             	movzx  eax,al
10008624:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008627:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000862b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000862e:	c1 e8 06             	shr    eax,0x6
10008631:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008634:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000863b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000863e:	c1 e8 0e             	shr    eax,0xe
10008641:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008644:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000864b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000864e:	c1 e8 16             	shr    eax,0x16
10008651:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008654:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000865b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008661:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008667:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000866a:	01 d0                	add    eax,edx
1000866c:	8b 00                	mov    eax,DWORD PTR [eax]
1000866e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008671:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008677:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000867d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008680:	01 d0                	add    eax,edx
10008682:	8b 00                	mov    eax,DWORD PTR [eax]
10008684:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008687:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000868d:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008693:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008696:	01 d0                	add    eax,edx
10008698:	8b 00                	mov    eax,DWORD PTR [eax]
1000869a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000869d:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100086a3:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100086a6:	01 d0                	add    eax,edx
100086a8:	8b 00                	mov    eax,DWORD PTR [eax]
100086aa:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100086ad:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100086b0:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100086b3:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
100086b9:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100086bc:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100086bf:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100086c2:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100086c5:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100086c8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100086cb:	0f b6 c0             	movzx  eax,al
100086ce:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100086d1:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100086d5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100086d8:	c1 e8 06             	shr    eax,0x6
100086db:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100086de:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100086e5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100086e8:	c1 e8 0e             	shr    eax,0xe
100086eb:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100086ee:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100086f5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100086f8:	c1 e8 16             	shr    eax,0x16
100086fb:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100086fe:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008705:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000870b:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008711:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008714:	01 d0                	add    eax,edx
10008716:	8b 00                	mov    eax,DWORD PTR [eax]
10008718:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000871b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008721:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008727:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000872a:	01 d0                	add    eax,edx
1000872c:	8b 00                	mov    eax,DWORD PTR [eax]
1000872e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008731:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008737:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000873d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008740:	01 d0                	add    eax,edx
10008742:	8b 00                	mov    eax,DWORD PTR [eax]
10008744:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008747:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000874d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008750:	01 d0                	add    eax,edx
10008752:	8b 00                	mov    eax,DWORD PTR [eax]
10008754:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008757:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000875a:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000875d:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
10008763:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008766:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008769:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000876c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000876f:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008772:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008775:	0f b6 c0             	movzx  eax,al
10008778:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000877b:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000877f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008782:	c1 e8 06             	shr    eax,0x6
10008785:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008788:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000878f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008792:	c1 e8 0e             	shr    eax,0xe
10008795:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008798:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000879f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100087a2:	c1 e8 16             	shr    eax,0x16
100087a5:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100087a8:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100087af:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100087b5:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100087bb:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100087be:	01 d0                	add    eax,edx
100087c0:	8b 00                	mov    eax,DWORD PTR [eax]
100087c2:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100087c5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100087cb:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100087d1:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100087d4:	01 d0                	add    eax,edx
100087d6:	8b 00                	mov    eax,DWORD PTR [eax]
100087d8:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100087db:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100087e1:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100087e7:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100087ea:	01 d0                	add    eax,edx
100087ec:	8b 00                	mov    eax,DWORD PTR [eax]
100087ee:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100087f1:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100087f7:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100087fa:	01 d0                	add    eax,edx
100087fc:	8b 00                	mov    eax,DWORD PTR [eax]
100087fe:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008801:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008804:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008807:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
1000880d:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008810:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008813:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008816:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008819:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000881c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000881f:	0f b6 c0             	movzx  eax,al
10008822:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008825:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008829:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000882c:	c1 e8 06             	shr    eax,0x6
1000882f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008832:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008839:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000883c:	c1 e8 0e             	shr    eax,0xe
1000883f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008842:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008849:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000884c:	c1 e8 16             	shr    eax,0x16
1000884f:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008852:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008859:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000885f:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008865:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008868:	01 d0                	add    eax,edx
1000886a:	8b 00                	mov    eax,DWORD PTR [eax]
1000886c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000886f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008875:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000887b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000887e:	01 d0                	add    eax,edx
10008880:	8b 00                	mov    eax,DWORD PTR [eax]
10008882:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008885:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000888b:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008891:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008894:	01 d0                	add    eax,edx
10008896:	8b 00                	mov    eax,DWORD PTR [eax]
10008898:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000889b:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100088a1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100088a4:	01 d0                	add    eax,edx
100088a6:	8b 00                	mov    eax,DWORD PTR [eax]
100088a8:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100088ab:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100088ae:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100088b1:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
100088b7:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100088ba:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100088bd:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100088c0:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100088c3:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100088c6:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100088c9:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100088cc:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100088cf:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
100088d2:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
100088d8:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
100088db:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
100088de:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
100088e1:	8d 50 f8             	lea    edx,[eax-0x8]
100088e4:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100088e7:	89 02                	mov    DWORD PTR [edx],eax
100088e9:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
100088ec:	8d 50 fc             	lea    edx,[eax-0x4]
100088ef:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100088f2:	89 02                	mov    DWORD PTR [edx],eax
100088f4:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100088fa:	05 48 10 00 00       	add    eax,0x1048
100088ff:	39 45 dc             	cmp    DWORD PTR [ebp-0x24],eax
10008902:	0f 82 11 f5 ff ff    	jb     10007e19 <_crypt_blowfish_rn+0x241e>
10008908:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000890e:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10008911:	83 45 dc 08          	add    DWORD PTR [ebp-0x24],0x8
10008915:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
1000891b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000891e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008921:	0f b6 c0             	movzx  eax,al
10008924:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008927:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000892b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000892e:	c1 e8 06             	shr    eax,0x6
10008931:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008934:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000893b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000893e:	c1 e8 0e             	shr    eax,0xe
10008941:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008944:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000894b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000894e:	c1 e8 16             	shr    eax,0x16
10008951:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008954:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000895b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008961:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008967:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000896a:	01 d0                	add    eax,edx
1000896c:	8b 00                	mov    eax,DWORD PTR [eax]
1000896e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008971:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008977:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000897d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008980:	01 d0                	add    eax,edx
10008982:	8b 00                	mov    eax,DWORD PTR [eax]
10008984:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008987:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000898d:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008993:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008996:	01 d0                	add    eax,edx
10008998:	8b 00                	mov    eax,DWORD PTR [eax]
1000899a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000899d:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100089a3:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100089a6:	01 d0                	add    eax,edx
100089a8:	8b 00                	mov    eax,DWORD PTR [eax]
100089aa:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100089ad:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100089b0:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100089b3:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
100089b9:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100089bc:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100089bf:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100089c2:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100089c5:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100089c8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100089cb:	0f b6 c0             	movzx  eax,al
100089ce:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100089d1:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100089d5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100089d8:	c1 e8 06             	shr    eax,0x6
100089db:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100089de:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100089e5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100089e8:	c1 e8 0e             	shr    eax,0xe
100089eb:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100089ee:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100089f5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100089f8:	c1 e8 16             	shr    eax,0x16
100089fb:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100089fe:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008a05:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008a0b:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008a11:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008a14:	01 d0                	add    eax,edx
10008a16:	8b 00                	mov    eax,DWORD PTR [eax]
10008a18:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008a1b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008a21:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008a27:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008a2a:	01 d0                	add    eax,edx
10008a2c:	8b 00                	mov    eax,DWORD PTR [eax]
10008a2e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008a31:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008a37:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008a3d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008a40:	01 d0                	add    eax,edx
10008a42:	8b 00                	mov    eax,DWORD PTR [eax]
10008a44:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008a47:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008a4d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008a50:	01 d0                	add    eax,edx
10008a52:	8b 00                	mov    eax,DWORD PTR [eax]
10008a54:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008a57:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008a5a:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008a5d:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
10008a63:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008a66:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008a69:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008a6c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008a6f:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008a72:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008a75:	0f b6 c0             	movzx  eax,al
10008a78:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008a7b:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008a7f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008a82:	c1 e8 06             	shr    eax,0x6
10008a85:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008a88:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008a8f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008a92:	c1 e8 0e             	shr    eax,0xe
10008a95:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008a98:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008a9f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008aa2:	c1 e8 16             	shr    eax,0x16
10008aa5:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008aa8:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008aaf:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008ab5:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008abb:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008abe:	01 d0                	add    eax,edx
10008ac0:	8b 00                	mov    eax,DWORD PTR [eax]
10008ac2:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008ac5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008acb:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008ad1:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008ad4:	01 d0                	add    eax,edx
10008ad6:	8b 00                	mov    eax,DWORD PTR [eax]
10008ad8:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008adb:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008ae1:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008ae7:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008aea:	01 d0                	add    eax,edx
10008aec:	8b 00                	mov    eax,DWORD PTR [eax]
10008aee:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008af1:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008af7:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008afa:	01 d0                	add    eax,edx
10008afc:	8b 00                	mov    eax,DWORD PTR [eax]
10008afe:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008b01:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008b04:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008b07:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
10008b0d:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008b10:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008b13:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008b16:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008b19:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008b1c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008b1f:	0f b6 c0             	movzx  eax,al
10008b22:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008b25:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008b29:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008b2c:	c1 e8 06             	shr    eax,0x6
10008b2f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008b32:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008b39:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008b3c:	c1 e8 0e             	shr    eax,0xe
10008b3f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008b42:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008b49:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008b4c:	c1 e8 16             	shr    eax,0x16
10008b4f:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008b52:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008b59:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008b5f:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008b65:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008b68:	01 d0                	add    eax,edx
10008b6a:	8b 00                	mov    eax,DWORD PTR [eax]
10008b6c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008b6f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008b75:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008b7b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008b7e:	01 d0                	add    eax,edx
10008b80:	8b 00                	mov    eax,DWORD PTR [eax]
10008b82:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008b85:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008b8b:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008b91:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008b94:	01 d0                	add    eax,edx
10008b96:	8b 00                	mov    eax,DWORD PTR [eax]
10008b98:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008b9b:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008ba1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008ba4:	01 d0                	add    eax,edx
10008ba6:	8b 00                	mov    eax,DWORD PTR [eax]
10008ba8:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008bab:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008bae:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008bb1:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
10008bb7:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008bba:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008bbd:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008bc0:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008bc3:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008bc6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008bc9:	0f b6 c0             	movzx  eax,al
10008bcc:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008bcf:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008bd3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008bd6:	c1 e8 06             	shr    eax,0x6
10008bd9:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008bdc:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008be3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008be6:	c1 e8 0e             	shr    eax,0xe
10008be9:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008bec:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008bf3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008bf6:	c1 e8 16             	shr    eax,0x16
10008bf9:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008bfc:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008c03:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008c09:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008c0f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008c12:	01 d0                	add    eax,edx
10008c14:	8b 00                	mov    eax,DWORD PTR [eax]
10008c16:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008c19:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008c1f:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008c25:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008c28:	01 d0                	add    eax,edx
10008c2a:	8b 00                	mov    eax,DWORD PTR [eax]
10008c2c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008c2f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008c35:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008c3b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008c3e:	01 d0                	add    eax,edx
10008c40:	8b 00                	mov    eax,DWORD PTR [eax]
10008c42:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008c45:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008c4b:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008c4e:	01 d0                	add    eax,edx
10008c50:	8b 00                	mov    eax,DWORD PTR [eax]
10008c52:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008c55:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008c58:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008c5b:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
10008c61:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008c64:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008c67:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008c6a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008c6d:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008c70:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008c73:	0f b6 c0             	movzx  eax,al
10008c76:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008c79:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008c7d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008c80:	c1 e8 06             	shr    eax,0x6
10008c83:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008c86:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008c8d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008c90:	c1 e8 0e             	shr    eax,0xe
10008c93:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008c96:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008c9d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008ca0:	c1 e8 16             	shr    eax,0x16
10008ca3:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008ca6:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008cad:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008cb3:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008cb9:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008cbc:	01 d0                	add    eax,edx
10008cbe:	8b 00                	mov    eax,DWORD PTR [eax]
10008cc0:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008cc3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008cc9:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008ccf:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008cd2:	01 d0                	add    eax,edx
10008cd4:	8b 00                	mov    eax,DWORD PTR [eax]
10008cd6:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008cd9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008cdf:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008ce5:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008ce8:	01 d0                	add    eax,edx
10008cea:	8b 00                	mov    eax,DWORD PTR [eax]
10008cec:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008cef:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008cf5:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008cf8:	01 d0                	add    eax,edx
10008cfa:	8b 00                	mov    eax,DWORD PTR [eax]
10008cfc:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008cff:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008d02:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008d05:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
10008d0b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008d0e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008d11:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008d14:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008d17:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008d1a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008d1d:	0f b6 c0             	movzx  eax,al
10008d20:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008d23:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008d27:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008d2a:	c1 e8 06             	shr    eax,0x6
10008d2d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008d30:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008d37:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008d3a:	c1 e8 0e             	shr    eax,0xe
10008d3d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008d40:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008d47:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008d4a:	c1 e8 16             	shr    eax,0x16
10008d4d:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008d50:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008d57:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008d5d:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008d63:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008d66:	01 d0                	add    eax,edx
10008d68:	8b 00                	mov    eax,DWORD PTR [eax]
10008d6a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008d6d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008d73:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008d79:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008d7c:	01 d0                	add    eax,edx
10008d7e:	8b 00                	mov    eax,DWORD PTR [eax]
10008d80:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008d83:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008d89:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008d8f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008d92:	01 d0                	add    eax,edx
10008d94:	8b 00                	mov    eax,DWORD PTR [eax]
10008d96:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008d99:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008d9f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008da2:	01 d0                	add    eax,edx
10008da4:	8b 00                	mov    eax,DWORD PTR [eax]
10008da6:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008da9:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008dac:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008daf:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
10008db5:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008db8:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008dbb:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008dbe:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008dc1:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008dc4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008dc7:	0f b6 c0             	movzx  eax,al
10008dca:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008dcd:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008dd1:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008dd4:	c1 e8 06             	shr    eax,0x6
10008dd7:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008dda:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008de1:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008de4:	c1 e8 0e             	shr    eax,0xe
10008de7:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008dea:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008df1:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008df4:	c1 e8 16             	shr    eax,0x16
10008df7:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008dfa:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008e01:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008e07:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008e0d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008e10:	01 d0                	add    eax,edx
10008e12:	8b 00                	mov    eax,DWORD PTR [eax]
10008e14:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008e17:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008e1d:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008e23:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008e26:	01 d0                	add    eax,edx
10008e28:	8b 00                	mov    eax,DWORD PTR [eax]
10008e2a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008e2d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008e33:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008e39:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008e3c:	01 d0                	add    eax,edx
10008e3e:	8b 00                	mov    eax,DWORD PTR [eax]
10008e40:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008e43:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008e49:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008e4c:	01 d0                	add    eax,edx
10008e4e:	8b 00                	mov    eax,DWORD PTR [eax]
10008e50:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008e53:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008e56:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008e59:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
10008e5f:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008e62:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008e65:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008e68:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008e6b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008e6e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008e71:	0f b6 c0             	movzx  eax,al
10008e74:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008e77:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008e7b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008e7e:	c1 e8 06             	shr    eax,0x6
10008e81:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008e84:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008e8b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008e8e:	c1 e8 0e             	shr    eax,0xe
10008e91:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008e94:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008e9b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008e9e:	c1 e8 16             	shr    eax,0x16
10008ea1:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008ea4:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008eab:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008eb1:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008eb7:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008eba:	01 d0                	add    eax,edx
10008ebc:	8b 00                	mov    eax,DWORD PTR [eax]
10008ebe:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008ec1:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008ec7:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008ecd:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008ed0:	01 d0                	add    eax,edx
10008ed2:	8b 00                	mov    eax,DWORD PTR [eax]
10008ed4:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008ed7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008edd:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008ee3:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008ee6:	01 d0                	add    eax,edx
10008ee8:	8b 00                	mov    eax,DWORD PTR [eax]
10008eea:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008eed:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008ef3:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008ef6:	01 d0                	add    eax,edx
10008ef8:	8b 00                	mov    eax,DWORD PTR [eax]
10008efa:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008efd:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008f00:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008f03:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
10008f09:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008f0c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008f0f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008f12:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008f15:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10008f18:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008f1b:	0f b6 c0             	movzx  eax,al
10008f1e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008f21:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008f25:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008f28:	c1 e8 06             	shr    eax,0x6
10008f2b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008f2e:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008f35:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008f38:	c1 e8 0e             	shr    eax,0xe
10008f3b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008f3e:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008f45:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10008f48:	c1 e8 16             	shr    eax,0x16
10008f4b:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008f4e:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008f55:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008f5b:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10008f61:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008f64:	01 d0                	add    eax,edx
10008f66:	8b 00                	mov    eax,DWORD PTR [eax]
10008f68:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008f6b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008f71:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10008f77:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008f7a:	01 d0                	add    eax,edx
10008f7c:	8b 00                	mov    eax,DWORD PTR [eax]
10008f7e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008f81:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10008f87:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10008f8d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008f90:	01 d0                	add    eax,edx
10008f92:	8b 00                	mov    eax,DWORD PTR [eax]
10008f94:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008f97:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10008f9d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10008fa0:	01 d0                	add    eax,edx
10008fa2:	8b 00                	mov    eax,DWORD PTR [eax]
10008fa4:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008fa7:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10008faa:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10008fad:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
10008fb3:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008fb6:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10008fb9:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10008fbc:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10008fbf:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10008fc2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008fc5:	0f b6 c0             	movzx  eax,al
10008fc8:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10008fcb:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10008fcf:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008fd2:	c1 e8 06             	shr    eax,0x6
10008fd5:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10008fd8:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10008fdf:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008fe2:	c1 e8 0e             	shr    eax,0xe
10008fe5:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10008fe8:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10008fef:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10008ff2:	c1 e8 16             	shr    eax,0x16
10008ff5:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10008ff8:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10008fff:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009005:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000900b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000900e:	01 d0                	add    eax,edx
10009010:	8b 00                	mov    eax,DWORD PTR [eax]
10009012:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009015:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000901b:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009021:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009024:	01 d0                	add    eax,edx
10009026:	8b 00                	mov    eax,DWORD PTR [eax]
10009028:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000902b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009031:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009037:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000903a:	01 d0                	add    eax,edx
1000903c:	8b 00                	mov    eax,DWORD PTR [eax]
1000903e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009041:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009047:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000904a:	01 d0                	add    eax,edx
1000904c:	8b 00                	mov    eax,DWORD PTR [eax]
1000904e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009051:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009054:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009057:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
1000905d:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009060:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009063:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009066:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009069:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000906c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000906f:	0f b6 c0             	movzx  eax,al
10009072:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009075:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009079:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000907c:	c1 e8 06             	shr    eax,0x6
1000907f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009082:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009089:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000908c:	c1 e8 0e             	shr    eax,0xe
1000908f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009092:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009099:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000909c:	c1 e8 16             	shr    eax,0x16
1000909f:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100090a2:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100090a9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100090af:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100090b5:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100090b8:	01 d0                	add    eax,edx
100090ba:	8b 00                	mov    eax,DWORD PTR [eax]
100090bc:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100090bf:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100090c5:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100090cb:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100090ce:	01 d0                	add    eax,edx
100090d0:	8b 00                	mov    eax,DWORD PTR [eax]
100090d2:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100090d5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100090db:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100090e1:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100090e4:	01 d0                	add    eax,edx
100090e6:	8b 00                	mov    eax,DWORD PTR [eax]
100090e8:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100090eb:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100090f1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100090f4:	01 d0                	add    eax,edx
100090f6:	8b 00                	mov    eax,DWORD PTR [eax]
100090f8:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100090fb:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100090fe:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009101:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
10009107:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000910a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000910d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009110:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009113:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009116:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009119:	0f b6 c0             	movzx  eax,al
1000911c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000911f:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009123:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009126:	c1 e8 06             	shr    eax,0x6
10009129:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000912c:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009133:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009136:	c1 e8 0e             	shr    eax,0xe
10009139:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000913c:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009143:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009146:	c1 e8 16             	shr    eax,0x16
10009149:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000914c:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009153:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009159:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000915f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009162:	01 d0                	add    eax,edx
10009164:	8b 00                	mov    eax,DWORD PTR [eax]
10009166:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009169:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000916f:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009175:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009178:	01 d0                	add    eax,edx
1000917a:	8b 00                	mov    eax,DWORD PTR [eax]
1000917c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000917f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009185:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000918b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000918e:	01 d0                	add    eax,edx
10009190:	8b 00                	mov    eax,DWORD PTR [eax]
10009192:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009195:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000919b:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000919e:	01 d0                	add    eax,edx
100091a0:	8b 00                	mov    eax,DWORD PTR [eax]
100091a2:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100091a5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100091a8:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100091ab:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
100091b1:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100091b4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100091b7:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100091ba:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100091bd:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100091c0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100091c3:	0f b6 c0             	movzx  eax,al
100091c6:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100091c9:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100091cd:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100091d0:	c1 e8 06             	shr    eax,0x6
100091d3:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100091d6:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100091dd:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100091e0:	c1 e8 0e             	shr    eax,0xe
100091e3:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100091e6:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100091ed:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100091f0:	c1 e8 16             	shr    eax,0x16
100091f3:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100091f6:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100091fd:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009203:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009209:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000920c:	01 d0                	add    eax,edx
1000920e:	8b 00                	mov    eax,DWORD PTR [eax]
10009210:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009213:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009219:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000921f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009222:	01 d0                	add    eax,edx
10009224:	8b 00                	mov    eax,DWORD PTR [eax]
10009226:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009229:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000922f:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009235:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009238:	01 d0                	add    eax,edx
1000923a:	8b 00                	mov    eax,DWORD PTR [eax]
1000923c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000923f:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009245:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009248:	01 d0                	add    eax,edx
1000924a:	8b 00                	mov    eax,DWORD PTR [eax]
1000924c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000924f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009252:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009255:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
1000925b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000925e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009261:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009264:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009267:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000926a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000926d:	0f b6 c0             	movzx  eax,al
10009270:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009273:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009277:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000927a:	c1 e8 06             	shr    eax,0x6
1000927d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009280:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009287:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000928a:	c1 e8 0e             	shr    eax,0xe
1000928d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009290:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009297:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000929a:	c1 e8 16             	shr    eax,0x16
1000929d:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100092a0:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100092a7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100092ad:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100092b3:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100092b6:	01 d0                	add    eax,edx
100092b8:	8b 00                	mov    eax,DWORD PTR [eax]
100092ba:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100092bd:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100092c3:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100092c9:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100092cc:	01 d0                	add    eax,edx
100092ce:	8b 00                	mov    eax,DWORD PTR [eax]
100092d0:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100092d3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100092d9:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100092df:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100092e2:	01 d0                	add    eax,edx
100092e4:	8b 00                	mov    eax,DWORD PTR [eax]
100092e6:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100092e9:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100092ef:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100092f2:	01 d0                	add    eax,edx
100092f4:	8b 00                	mov    eax,DWORD PTR [eax]
100092f6:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100092f9:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100092fc:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100092ff:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
10009305:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009308:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000930b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000930e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009311:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009314:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009317:	0f b6 c0             	movzx  eax,al
1000931a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000931d:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009321:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009324:	c1 e8 06             	shr    eax,0x6
10009327:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000932a:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009331:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009334:	c1 e8 0e             	shr    eax,0xe
10009337:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000933a:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009341:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009344:	c1 e8 16             	shr    eax,0x16
10009347:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000934a:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009351:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009357:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000935d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009360:	01 d0                	add    eax,edx
10009362:	8b 00                	mov    eax,DWORD PTR [eax]
10009364:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009367:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000936d:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009373:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009376:	01 d0                	add    eax,edx
10009378:	8b 00                	mov    eax,DWORD PTR [eax]
1000937a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000937d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009383:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009389:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000938c:	01 d0                	add    eax,edx
1000938e:	8b 00                	mov    eax,DWORD PTR [eax]
10009390:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009393:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009399:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000939c:	01 d0                	add    eax,edx
1000939e:	8b 00                	mov    eax,DWORD PTR [eax]
100093a0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100093a3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100093a6:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100093a9:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
100093af:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100093b2:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100093b5:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100093b8:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100093bb:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100093be:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100093c1:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100093c4:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100093c7:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
100093ca:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
100093d0:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
100093d3:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
100093d6:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
100093d9:	8d 50 f8             	lea    edx,[eax-0x8]
100093dc:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100093df:	89 02                	mov    DWORD PTR [edx],eax
100093e1:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
100093e4:	8d 50 fc             	lea    edx,[eax-0x4]
100093e7:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100093ea:	89 02                	mov    DWORD PTR [edx],eax
100093ec:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100093f2:	05 fc 0f 00 00       	add    eax,0xffc
100093f7:	39 45 dc             	cmp    DWORD PTR [ebp-0x24],eax
100093fa:	0f 82 11 f5 ff ff    	jb     10008911 <_crypt_blowfish_rn+0x2f16>
10009400:	8b 45 ac             	mov    eax,DWORD PTR [ebp-0x54]
10009403:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009406:	8b 45 b0             	mov    eax,DWORD PTR [ebp-0x50]
10009409:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000940c:	8b 45 b4             	mov    eax,DWORD PTR [ebp-0x4c]
1000940f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009412:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
10009415:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009418:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
1000941e:	33 45 d0             	xor    eax,DWORD PTR [ebp-0x30]
10009421:	89 85 1c ff ff ff    	mov    DWORD PTR [ebp-0xe4],eax
10009427:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
1000942d:	33 45 cc             	xor    eax,DWORD PTR [ebp-0x34]
10009430:	89 85 20 ff ff ff    	mov    DWORD PTR [ebp-0xe0],eax
10009436:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
1000943c:	33 45 c8             	xor    eax,DWORD PTR [ebp-0x38]
1000943f:	89 85 24 ff ff ff    	mov    DWORD PTR [ebp-0xdc],eax
10009445:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
1000944b:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
1000944e:	89 85 28 ff ff ff    	mov    DWORD PTR [ebp-0xd8],eax
10009454:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
1000945a:	33 45 d0             	xor    eax,DWORD PTR [ebp-0x30]
1000945d:	89 85 2c ff ff ff    	mov    DWORD PTR [ebp-0xd4],eax
10009463:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
10009469:	33 45 cc             	xor    eax,DWORD PTR [ebp-0x34]
1000946c:	89 85 30 ff ff ff    	mov    DWORD PTR [ebp-0xd0],eax
10009472:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
10009478:	33 45 c8             	xor    eax,DWORD PTR [ebp-0x38]
1000947b:	89 85 34 ff ff ff    	mov    DWORD PTR [ebp-0xcc],eax
10009481:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
10009487:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
1000948a:	89 85 38 ff ff ff    	mov    DWORD PTR [ebp-0xc8],eax
10009490:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
10009496:	33 45 d0             	xor    eax,DWORD PTR [ebp-0x30]
10009499:	89 85 3c ff ff ff    	mov    DWORD PTR [ebp-0xc4],eax
1000949f:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
100094a5:	33 45 cc             	xor    eax,DWORD PTR [ebp-0x34]
100094a8:	89 85 40 ff ff ff    	mov    DWORD PTR [ebp-0xc0],eax
100094ae:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
100094b4:	33 45 c8             	xor    eax,DWORD PTR [ebp-0x38]
100094b7:	89 85 44 ff ff ff    	mov    DWORD PTR [ebp-0xbc],eax
100094bd:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
100094c3:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
100094c6:	89 85 48 ff ff ff    	mov    DWORD PTR [ebp-0xb8],eax
100094cc:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
100094d2:	33 45 d0             	xor    eax,DWORD PTR [ebp-0x30]
100094d5:	89 85 4c ff ff ff    	mov    DWORD PTR [ebp-0xb4],eax
100094db:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
100094e1:	33 45 cc             	xor    eax,DWORD PTR [ebp-0x34]
100094e4:	89 85 50 ff ff ff    	mov    DWORD PTR [ebp-0xb0],eax
100094ea:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
100094f0:	33 45 c8             	xor    eax,DWORD PTR [ebp-0x38]
100094f3:	89 85 54 ff ff ff    	mov    DWORD PTR [ebp-0xac],eax
100094f9:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
100094ff:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
10009502:	89 85 58 ff ff ff    	mov    DWORD PTR [ebp-0xa8],eax
10009508:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
1000950e:	33 45 d0             	xor    eax,DWORD PTR [ebp-0x30]
10009511:	89 85 5c ff ff ff    	mov    DWORD PTR [ebp-0xa4],eax
10009517:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
1000951d:	33 45 cc             	xor    eax,DWORD PTR [ebp-0x34]
10009520:	89 85 60 ff ff ff    	mov    DWORD PTR [ebp-0xa0],eax
10009526:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [ebp-0x20],0x0
1000952d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009530:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
10009533:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009539:	05 00 10 00 00       	add    eax,0x1000
1000953e:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
10009541:	83 45 dc 08          	add    DWORD PTR [ebp-0x24],0x8
10009545:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
1000954b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000954e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009551:	0f b6 c0             	movzx  eax,al
10009554:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009557:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000955b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000955e:	c1 e8 06             	shr    eax,0x6
10009561:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009564:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000956b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000956e:	c1 e8 0e             	shr    eax,0xe
10009571:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009574:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000957b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000957e:	c1 e8 16             	shr    eax,0x16
10009581:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009584:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000958b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009591:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009597:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000959a:	01 d0                	add    eax,edx
1000959c:	8b 00                	mov    eax,DWORD PTR [eax]
1000959e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100095a1:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100095a7:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100095ad:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100095b0:	01 d0                	add    eax,edx
100095b2:	8b 00                	mov    eax,DWORD PTR [eax]
100095b4:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100095b7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100095bd:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100095c3:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100095c6:	01 d0                	add    eax,edx
100095c8:	8b 00                	mov    eax,DWORD PTR [eax]
100095ca:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100095cd:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100095d3:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100095d6:	01 d0                	add    eax,edx
100095d8:	8b 00                	mov    eax,DWORD PTR [eax]
100095da:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100095dd:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100095e0:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100095e3:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
100095e9:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100095ec:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100095ef:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100095f2:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100095f5:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100095f8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100095fb:	0f b6 c0             	movzx  eax,al
100095fe:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009601:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009605:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009608:	c1 e8 06             	shr    eax,0x6
1000960b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000960e:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009615:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009618:	c1 e8 0e             	shr    eax,0xe
1000961b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000961e:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009625:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009628:	c1 e8 16             	shr    eax,0x16
1000962b:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000962e:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009635:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000963b:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009641:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009644:	01 d0                	add    eax,edx
10009646:	8b 00                	mov    eax,DWORD PTR [eax]
10009648:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000964b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009651:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009657:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000965a:	01 d0                	add    eax,edx
1000965c:	8b 00                	mov    eax,DWORD PTR [eax]
1000965e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009661:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009667:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000966d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009670:	01 d0                	add    eax,edx
10009672:	8b 00                	mov    eax,DWORD PTR [eax]
10009674:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009677:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000967d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009680:	01 d0                	add    eax,edx
10009682:	8b 00                	mov    eax,DWORD PTR [eax]
10009684:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009687:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000968a:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000968d:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
10009693:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009696:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009699:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000969c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000969f:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100096a2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100096a5:	0f b6 c0             	movzx  eax,al
100096a8:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100096ab:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100096af:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100096b2:	c1 e8 06             	shr    eax,0x6
100096b5:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100096b8:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100096bf:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100096c2:	c1 e8 0e             	shr    eax,0xe
100096c5:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100096c8:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100096cf:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100096d2:	c1 e8 16             	shr    eax,0x16
100096d5:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100096d8:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100096df:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100096e5:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100096eb:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100096ee:	01 d0                	add    eax,edx
100096f0:	8b 00                	mov    eax,DWORD PTR [eax]
100096f2:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100096f5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100096fb:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009701:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009704:	01 d0                	add    eax,edx
10009706:	8b 00                	mov    eax,DWORD PTR [eax]
10009708:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000970b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009711:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009717:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000971a:	01 d0                	add    eax,edx
1000971c:	8b 00                	mov    eax,DWORD PTR [eax]
1000971e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009721:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009727:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000972a:	01 d0                	add    eax,edx
1000972c:	8b 00                	mov    eax,DWORD PTR [eax]
1000972e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009731:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009734:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009737:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
1000973d:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009740:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009743:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009746:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009749:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000974c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000974f:	0f b6 c0             	movzx  eax,al
10009752:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009755:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009759:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000975c:	c1 e8 06             	shr    eax,0x6
1000975f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009762:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009769:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000976c:	c1 e8 0e             	shr    eax,0xe
1000976f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009772:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009779:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000977c:	c1 e8 16             	shr    eax,0x16
1000977f:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009782:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009789:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000978f:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009795:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009798:	01 d0                	add    eax,edx
1000979a:	8b 00                	mov    eax,DWORD PTR [eax]
1000979c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000979f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100097a5:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100097ab:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100097ae:	01 d0                	add    eax,edx
100097b0:	8b 00                	mov    eax,DWORD PTR [eax]
100097b2:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100097b5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100097bb:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100097c1:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100097c4:	01 d0                	add    eax,edx
100097c6:	8b 00                	mov    eax,DWORD PTR [eax]
100097c8:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100097cb:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100097d1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100097d4:	01 d0                	add    eax,edx
100097d6:	8b 00                	mov    eax,DWORD PTR [eax]
100097d8:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100097db:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100097de:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100097e1:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
100097e7:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100097ea:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100097ed:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100097f0:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100097f3:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
100097f6:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
100097f9:	0f b6 c0             	movzx  eax,al
100097fc:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100097ff:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009803:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009806:	c1 e8 06             	shr    eax,0x6
10009809:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000980c:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009813:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009816:	c1 e8 0e             	shr    eax,0xe
10009819:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000981c:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009823:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009826:	c1 e8 16             	shr    eax,0x16
10009829:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000982c:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009833:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009839:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000983f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009842:	01 d0                	add    eax,edx
10009844:	8b 00                	mov    eax,DWORD PTR [eax]
10009846:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009849:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000984f:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009855:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009858:	01 d0                	add    eax,edx
1000985a:	8b 00                	mov    eax,DWORD PTR [eax]
1000985c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000985f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009865:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000986b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000986e:	01 d0                	add    eax,edx
10009870:	8b 00                	mov    eax,DWORD PTR [eax]
10009872:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009875:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000987b:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000987e:	01 d0                	add    eax,edx
10009880:	8b 00                	mov    eax,DWORD PTR [eax]
10009882:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009885:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009888:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000988b:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
10009891:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009894:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009897:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000989a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000989d:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100098a0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100098a3:	0f b6 c0             	movzx  eax,al
100098a6:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100098a9:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
100098ad:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100098b0:	c1 e8 06             	shr    eax,0x6
100098b3:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100098b6:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
100098bd:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100098c0:	c1 e8 0e             	shr    eax,0xe
100098c3:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100098c6:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
100098cd:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100098d0:	c1 e8 16             	shr    eax,0x16
100098d3:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
100098d6:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
100098dd:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100098e3:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
100098e9:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100098ec:	01 d0                	add    eax,edx
100098ee:	8b 00                	mov    eax,DWORD PTR [eax]
100098f0:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100098f3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100098f9:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100098ff:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009902:	01 d0                	add    eax,edx
10009904:	8b 00                	mov    eax,DWORD PTR [eax]
10009906:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009909:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000990f:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009915:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009918:	01 d0                	add    eax,edx
1000991a:	8b 00                	mov    eax,DWORD PTR [eax]
1000991c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000991f:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009925:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009928:	01 d0                	add    eax,edx
1000992a:	8b 00                	mov    eax,DWORD PTR [eax]
1000992c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000992f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009932:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009935:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
1000993b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000993e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009941:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009944:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009947:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000994a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000994d:	0f b6 c0             	movzx  eax,al
10009950:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009953:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009957:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000995a:	c1 e8 06             	shr    eax,0x6
1000995d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009960:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009967:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000996a:	c1 e8 0e             	shr    eax,0xe
1000996d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009970:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009977:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000997a:	c1 e8 16             	shr    eax,0x16
1000997d:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009980:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009987:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000998d:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009993:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009996:	01 d0                	add    eax,edx
10009998:	8b 00                	mov    eax,DWORD PTR [eax]
1000999a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000999d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100099a3:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
100099a9:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100099ac:	01 d0                	add    eax,edx
100099ae:	8b 00                	mov    eax,DWORD PTR [eax]
100099b0:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
100099b3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
100099b9:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
100099bf:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100099c2:	01 d0                	add    eax,edx
100099c4:	8b 00                	mov    eax,DWORD PTR [eax]
100099c6:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
100099c9:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
100099cf:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
100099d2:	01 d0                	add    eax,edx
100099d4:	8b 00                	mov    eax,DWORD PTR [eax]
100099d6:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100099d9:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
100099dc:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
100099df:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
100099e5:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100099e8:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
100099eb:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
100099ee:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
100099f1:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
100099f4:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
100099f7:	0f b6 c0             	movzx  eax,al
100099fa:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
100099fd:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009a01:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009a04:	c1 e8 06             	shr    eax,0x6
10009a07:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009a0a:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009a11:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009a14:	c1 e8 0e             	shr    eax,0xe
10009a17:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009a1a:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009a21:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009a24:	c1 e8 16             	shr    eax,0x16
10009a27:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009a2a:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009a31:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009a37:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009a3d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009a40:	01 d0                	add    eax,edx
10009a42:	8b 00                	mov    eax,DWORD PTR [eax]
10009a44:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009a47:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009a4d:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009a53:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009a56:	01 d0                	add    eax,edx
10009a58:	8b 00                	mov    eax,DWORD PTR [eax]
10009a5a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009a5d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009a63:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009a69:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009a6c:	01 d0                	add    eax,edx
10009a6e:	8b 00                	mov    eax,DWORD PTR [eax]
10009a70:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009a73:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009a79:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009a7c:	01 d0                	add    eax,edx
10009a7e:	8b 00                	mov    eax,DWORD PTR [eax]
10009a80:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009a83:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009a86:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009a89:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
10009a8f:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009a92:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009a95:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009a98:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009a9b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009a9e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009aa1:	0f b6 c0             	movzx  eax,al
10009aa4:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009aa7:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009aab:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009aae:	c1 e8 06             	shr    eax,0x6
10009ab1:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009ab4:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009abb:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009abe:	c1 e8 0e             	shr    eax,0xe
10009ac1:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009ac4:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009acb:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009ace:	c1 e8 16             	shr    eax,0x16
10009ad1:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009ad4:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009adb:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009ae1:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009ae7:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009aea:	01 d0                	add    eax,edx
10009aec:	8b 00                	mov    eax,DWORD PTR [eax]
10009aee:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009af1:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009af7:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009afd:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009b00:	01 d0                	add    eax,edx
10009b02:	8b 00                	mov    eax,DWORD PTR [eax]
10009b04:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009b07:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009b0d:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009b13:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009b16:	01 d0                	add    eax,edx
10009b18:	8b 00                	mov    eax,DWORD PTR [eax]
10009b1a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009b1d:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009b23:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009b26:	01 d0                	add    eax,edx
10009b28:	8b 00                	mov    eax,DWORD PTR [eax]
10009b2a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009b2d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009b30:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009b33:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
10009b39:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009b3c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009b3f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009b42:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009b45:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009b48:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009b4b:	0f b6 c0             	movzx  eax,al
10009b4e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009b51:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009b55:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009b58:	c1 e8 06             	shr    eax,0x6
10009b5b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009b5e:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009b65:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009b68:	c1 e8 0e             	shr    eax,0xe
10009b6b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009b6e:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009b75:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009b78:	c1 e8 16             	shr    eax,0x16
10009b7b:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009b7e:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009b85:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009b8b:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009b91:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009b94:	01 d0                	add    eax,edx
10009b96:	8b 00                	mov    eax,DWORD PTR [eax]
10009b98:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009b9b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009ba1:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009ba7:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009baa:	01 d0                	add    eax,edx
10009bac:	8b 00                	mov    eax,DWORD PTR [eax]
10009bae:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009bb1:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009bb7:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009bbd:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009bc0:	01 d0                	add    eax,edx
10009bc2:	8b 00                	mov    eax,DWORD PTR [eax]
10009bc4:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009bc7:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009bcd:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009bd0:	01 d0                	add    eax,edx
10009bd2:	8b 00                	mov    eax,DWORD PTR [eax]
10009bd4:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009bd7:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009bda:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009bdd:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
10009be3:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009be6:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009be9:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009bec:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009bef:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009bf2:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009bf5:	0f b6 c0             	movzx  eax,al
10009bf8:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009bfb:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009bff:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009c02:	c1 e8 06             	shr    eax,0x6
10009c05:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009c08:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009c0f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009c12:	c1 e8 0e             	shr    eax,0xe
10009c15:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009c18:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009c1f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009c22:	c1 e8 16             	shr    eax,0x16
10009c25:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009c28:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009c2f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009c35:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009c3b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009c3e:	01 d0                	add    eax,edx
10009c40:	8b 00                	mov    eax,DWORD PTR [eax]
10009c42:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009c45:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009c4b:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009c51:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009c54:	01 d0                	add    eax,edx
10009c56:	8b 00                	mov    eax,DWORD PTR [eax]
10009c58:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009c5b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009c61:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009c67:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009c6a:	01 d0                	add    eax,edx
10009c6c:	8b 00                	mov    eax,DWORD PTR [eax]
10009c6e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009c71:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009c77:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009c7a:	01 d0                	add    eax,edx
10009c7c:	8b 00                	mov    eax,DWORD PTR [eax]
10009c7e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009c81:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009c84:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009c87:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
10009c8d:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009c90:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009c93:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009c96:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009c99:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009c9c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009c9f:	0f b6 c0             	movzx  eax,al
10009ca2:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009ca5:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009ca9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009cac:	c1 e8 06             	shr    eax,0x6
10009caf:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009cb2:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009cb9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009cbc:	c1 e8 0e             	shr    eax,0xe
10009cbf:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009cc2:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009cc9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009ccc:	c1 e8 16             	shr    eax,0x16
10009ccf:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009cd2:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009cd9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009cdf:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009ce5:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009ce8:	01 d0                	add    eax,edx
10009cea:	8b 00                	mov    eax,DWORD PTR [eax]
10009cec:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009cef:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009cf5:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009cfb:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009cfe:	01 d0                	add    eax,edx
10009d00:	8b 00                	mov    eax,DWORD PTR [eax]
10009d02:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009d05:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009d0b:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009d11:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009d14:	01 d0                	add    eax,edx
10009d16:	8b 00                	mov    eax,DWORD PTR [eax]
10009d18:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009d1b:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009d21:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009d24:	01 d0                	add    eax,edx
10009d26:	8b 00                	mov    eax,DWORD PTR [eax]
10009d28:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009d2b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009d2e:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009d31:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
10009d37:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009d3a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009d3d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009d40:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009d43:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009d46:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009d49:	0f b6 c0             	movzx  eax,al
10009d4c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009d4f:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009d53:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009d56:	c1 e8 06             	shr    eax,0x6
10009d59:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009d5c:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009d63:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009d66:	c1 e8 0e             	shr    eax,0xe
10009d69:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009d6c:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009d73:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009d76:	c1 e8 16             	shr    eax,0x16
10009d79:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009d7c:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009d83:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009d89:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009d8f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009d92:	01 d0                	add    eax,edx
10009d94:	8b 00                	mov    eax,DWORD PTR [eax]
10009d96:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009d99:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009d9f:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009da5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009da8:	01 d0                	add    eax,edx
10009daa:	8b 00                	mov    eax,DWORD PTR [eax]
10009dac:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009daf:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009db5:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009dbb:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009dbe:	01 d0                	add    eax,edx
10009dc0:	8b 00                	mov    eax,DWORD PTR [eax]
10009dc2:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009dc5:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009dcb:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009dce:	01 d0                	add    eax,edx
10009dd0:	8b 00                	mov    eax,DWORD PTR [eax]
10009dd2:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009dd5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009dd8:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009ddb:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
10009de1:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009de4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009de7:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009dea:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009ded:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009df0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009df3:	0f b6 c0             	movzx  eax,al
10009df6:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009df9:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009dfd:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009e00:	c1 e8 06             	shr    eax,0x6
10009e03:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009e06:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009e0d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009e10:	c1 e8 0e             	shr    eax,0xe
10009e13:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009e16:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009e1d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009e20:	c1 e8 16             	shr    eax,0x16
10009e23:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009e26:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009e2d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009e33:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009e39:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009e3c:	01 d0                	add    eax,edx
10009e3e:	8b 00                	mov    eax,DWORD PTR [eax]
10009e40:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009e43:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009e49:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009e4f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009e52:	01 d0                	add    eax,edx
10009e54:	8b 00                	mov    eax,DWORD PTR [eax]
10009e56:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009e59:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009e5f:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009e65:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009e68:	01 d0                	add    eax,edx
10009e6a:	8b 00                	mov    eax,DWORD PTR [eax]
10009e6c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009e6f:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009e75:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009e78:	01 d0                	add    eax,edx
10009e7a:	8b 00                	mov    eax,DWORD PTR [eax]
10009e7c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009e7f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009e82:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009e85:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
10009e8b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009e8e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009e91:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009e94:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009e97:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009e9a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009e9d:	0f b6 c0             	movzx  eax,al
10009ea0:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009ea3:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009ea7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009eaa:	c1 e8 06             	shr    eax,0x6
10009ead:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009eb0:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009eb7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009eba:	c1 e8 0e             	shr    eax,0xe
10009ebd:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009ec0:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009ec7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009eca:	c1 e8 16             	shr    eax,0x16
10009ecd:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009ed0:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009ed7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009edd:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009ee3:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009ee6:	01 d0                	add    eax,edx
10009ee8:	8b 00                	mov    eax,DWORD PTR [eax]
10009eea:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009eed:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009ef3:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009ef9:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009efc:	01 d0                	add    eax,edx
10009efe:	8b 00                	mov    eax,DWORD PTR [eax]
10009f00:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009f03:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009f09:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009f0f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009f12:	01 d0                	add    eax,edx
10009f14:	8b 00                	mov    eax,DWORD PTR [eax]
10009f16:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009f19:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009f1f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009f22:	01 d0                	add    eax,edx
10009f24:	8b 00                	mov    eax,DWORD PTR [eax]
10009f26:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009f29:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009f2c:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009f2f:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
10009f35:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009f38:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009f3b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009f3e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009f41:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
10009f44:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009f47:	0f b6 c0             	movzx  eax,al
10009f4a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009f4d:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
10009f51:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009f54:	c1 e8 06             	shr    eax,0x6
10009f57:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009f5a:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
10009f61:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009f64:	c1 e8 0e             	shr    eax,0xe
10009f67:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009f6a:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
10009f71:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009f74:	c1 e8 16             	shr    eax,0x16
10009f77:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009f7a:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
10009f81:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009f87:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
10009f8d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009f90:	01 d0                	add    eax,edx
10009f92:	8b 00                	mov    eax,DWORD PTR [eax]
10009f94:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
10009f97:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009f9d:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
10009fa3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009fa6:	01 d0                	add    eax,edx
10009fa8:	8b 00                	mov    eax,DWORD PTR [eax]
10009faa:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
10009fad:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
10009fb3:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
10009fb9:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009fbc:	01 d0                	add    eax,edx
10009fbe:	8b 00                	mov    eax,DWORD PTR [eax]
10009fc0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
10009fc3:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
10009fc9:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
10009fcc:	01 d0                	add    eax,edx
10009fce:	8b 00                	mov    eax,DWORD PTR [eax]
10009fd0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009fd3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
10009fd6:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
10009fd9:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
10009fdf:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009fe2:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
10009fe5:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
10009fe8:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
10009feb:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
10009fee:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
10009ff1:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
10009ff4:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
10009ff7:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
10009ffa:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
1000a000:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
1000a003:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000a006:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
1000a009:	8d 50 f8             	lea    edx,[eax-0x8]
1000a00c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a00f:	89 02                	mov    DWORD PTR [edx],eax
1000a011:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
1000a014:	8d 50 fc             	lea    edx,[eax-0x4]
1000a017:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a01a:	89 02                	mov    DWORD PTR [edx],eax
1000a01c:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a022:	05 48 10 00 00       	add    eax,0x1048
1000a027:	39 45 dc             	cmp    DWORD PTR [ebp-0x24],eax
1000a02a:	0f 82 11 f5 ff ff    	jb     10009541 <_crypt_blowfish_rn+0x3b46>
1000a030:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a036:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
1000a039:	83 45 dc 08          	add    DWORD PTR [ebp-0x24],0x8
1000a03d:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
1000a043:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a046:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a049:	0f b6 c0             	movzx  eax,al
1000a04c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a04f:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a053:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a056:	c1 e8 06             	shr    eax,0x6
1000a059:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a05c:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a063:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a066:	c1 e8 0e             	shr    eax,0xe
1000a069:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a06c:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a073:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a076:	c1 e8 16             	shr    eax,0x16
1000a079:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a07c:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a083:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a089:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a08f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a092:	01 d0                	add    eax,edx
1000a094:	8b 00                	mov    eax,DWORD PTR [eax]
1000a096:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a099:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a09f:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a0a5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a0a8:	01 d0                	add    eax,edx
1000a0aa:	8b 00                	mov    eax,DWORD PTR [eax]
1000a0ac:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a0af:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a0b5:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a0bb:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a0be:	01 d0                	add    eax,edx
1000a0c0:	8b 00                	mov    eax,DWORD PTR [eax]
1000a0c2:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a0c5:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a0cb:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a0ce:	01 d0                	add    eax,edx
1000a0d0:	8b 00                	mov    eax,DWORD PTR [eax]
1000a0d2:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a0d5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a0d8:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a0db:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
1000a0e1:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a0e4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a0e7:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a0ea:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a0ed:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a0f0:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a0f3:	0f b6 c0             	movzx  eax,al
1000a0f6:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a0f9:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a0fd:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a100:	c1 e8 06             	shr    eax,0x6
1000a103:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a106:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a10d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a110:	c1 e8 0e             	shr    eax,0xe
1000a113:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a116:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a11d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a120:	c1 e8 16             	shr    eax,0x16
1000a123:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a126:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a12d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a133:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a139:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a13c:	01 d0                	add    eax,edx
1000a13e:	8b 00                	mov    eax,DWORD PTR [eax]
1000a140:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a143:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a149:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a14f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a152:	01 d0                	add    eax,edx
1000a154:	8b 00                	mov    eax,DWORD PTR [eax]
1000a156:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a159:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a15f:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a165:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a168:	01 d0                	add    eax,edx
1000a16a:	8b 00                	mov    eax,DWORD PTR [eax]
1000a16c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a16f:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a175:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a178:	01 d0                	add    eax,edx
1000a17a:	8b 00                	mov    eax,DWORD PTR [eax]
1000a17c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a17f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a182:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a185:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
1000a18b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a18e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a191:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a194:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a197:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a19a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a19d:	0f b6 c0             	movzx  eax,al
1000a1a0:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a1a3:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a1a7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a1aa:	c1 e8 06             	shr    eax,0x6
1000a1ad:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a1b0:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a1b7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a1ba:	c1 e8 0e             	shr    eax,0xe
1000a1bd:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a1c0:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a1c7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a1ca:	c1 e8 16             	shr    eax,0x16
1000a1cd:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a1d0:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a1d7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a1dd:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a1e3:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a1e6:	01 d0                	add    eax,edx
1000a1e8:	8b 00                	mov    eax,DWORD PTR [eax]
1000a1ea:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a1ed:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a1f3:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a1f9:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a1fc:	01 d0                	add    eax,edx
1000a1fe:	8b 00                	mov    eax,DWORD PTR [eax]
1000a200:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a203:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a209:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a20f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a212:	01 d0                	add    eax,edx
1000a214:	8b 00                	mov    eax,DWORD PTR [eax]
1000a216:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a219:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a21f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a222:	01 d0                	add    eax,edx
1000a224:	8b 00                	mov    eax,DWORD PTR [eax]
1000a226:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a229:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a22c:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a22f:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
1000a235:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a238:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a23b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a23e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a241:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a244:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a247:	0f b6 c0             	movzx  eax,al
1000a24a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a24d:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a251:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a254:	c1 e8 06             	shr    eax,0x6
1000a257:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a25a:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a261:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a264:	c1 e8 0e             	shr    eax,0xe
1000a267:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a26a:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a271:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a274:	c1 e8 16             	shr    eax,0x16
1000a277:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a27a:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a281:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a287:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a28d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a290:	01 d0                	add    eax,edx
1000a292:	8b 00                	mov    eax,DWORD PTR [eax]
1000a294:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a297:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a29d:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a2a3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a2a6:	01 d0                	add    eax,edx
1000a2a8:	8b 00                	mov    eax,DWORD PTR [eax]
1000a2aa:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a2ad:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a2b3:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a2b9:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a2bc:	01 d0                	add    eax,edx
1000a2be:	8b 00                	mov    eax,DWORD PTR [eax]
1000a2c0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a2c3:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a2c9:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a2cc:	01 d0                	add    eax,edx
1000a2ce:	8b 00                	mov    eax,DWORD PTR [eax]
1000a2d0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a2d3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a2d6:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a2d9:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
1000a2df:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a2e2:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a2e5:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a2e8:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a2eb:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a2ee:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a2f1:	0f b6 c0             	movzx  eax,al
1000a2f4:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a2f7:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a2fb:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a2fe:	c1 e8 06             	shr    eax,0x6
1000a301:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a304:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a30b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a30e:	c1 e8 0e             	shr    eax,0xe
1000a311:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a314:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a31b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a31e:	c1 e8 16             	shr    eax,0x16
1000a321:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a324:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a32b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a331:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a337:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a33a:	01 d0                	add    eax,edx
1000a33c:	8b 00                	mov    eax,DWORD PTR [eax]
1000a33e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a341:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a347:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a34d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a350:	01 d0                	add    eax,edx
1000a352:	8b 00                	mov    eax,DWORD PTR [eax]
1000a354:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a357:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a35d:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a363:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a366:	01 d0                	add    eax,edx
1000a368:	8b 00                	mov    eax,DWORD PTR [eax]
1000a36a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a36d:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a373:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a376:	01 d0                	add    eax,edx
1000a378:	8b 00                	mov    eax,DWORD PTR [eax]
1000a37a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a37d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a380:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a383:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
1000a389:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a38c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a38f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a392:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a395:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a398:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a39b:	0f b6 c0             	movzx  eax,al
1000a39e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a3a1:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a3a5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a3a8:	c1 e8 06             	shr    eax,0x6
1000a3ab:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a3ae:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a3b5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a3b8:	c1 e8 0e             	shr    eax,0xe
1000a3bb:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a3be:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a3c5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a3c8:	c1 e8 16             	shr    eax,0x16
1000a3cb:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a3ce:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a3d5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a3db:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a3e1:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a3e4:	01 d0                	add    eax,edx
1000a3e6:	8b 00                	mov    eax,DWORD PTR [eax]
1000a3e8:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a3eb:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a3f1:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a3f7:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a3fa:	01 d0                	add    eax,edx
1000a3fc:	8b 00                	mov    eax,DWORD PTR [eax]
1000a3fe:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a401:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a407:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a40d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a410:	01 d0                	add    eax,edx
1000a412:	8b 00                	mov    eax,DWORD PTR [eax]
1000a414:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a417:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a41d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a420:	01 d0                	add    eax,edx
1000a422:	8b 00                	mov    eax,DWORD PTR [eax]
1000a424:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a427:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a42a:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a42d:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
1000a433:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a436:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a439:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a43c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a43f:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a442:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a445:	0f b6 c0             	movzx  eax,al
1000a448:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a44b:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a44f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a452:	c1 e8 06             	shr    eax,0x6
1000a455:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a458:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a45f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a462:	c1 e8 0e             	shr    eax,0xe
1000a465:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a468:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a46f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a472:	c1 e8 16             	shr    eax,0x16
1000a475:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a478:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a47f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a485:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a48b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a48e:	01 d0                	add    eax,edx
1000a490:	8b 00                	mov    eax,DWORD PTR [eax]
1000a492:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a495:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a49b:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a4a1:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a4a4:	01 d0                	add    eax,edx
1000a4a6:	8b 00                	mov    eax,DWORD PTR [eax]
1000a4a8:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a4ab:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a4b1:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a4b7:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a4ba:	01 d0                	add    eax,edx
1000a4bc:	8b 00                	mov    eax,DWORD PTR [eax]
1000a4be:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a4c1:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a4c7:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a4ca:	01 d0                	add    eax,edx
1000a4cc:	8b 00                	mov    eax,DWORD PTR [eax]
1000a4ce:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a4d1:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a4d4:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a4d7:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
1000a4dd:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a4e0:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a4e3:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a4e6:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a4e9:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a4ec:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a4ef:	0f b6 c0             	movzx  eax,al
1000a4f2:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a4f5:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a4f9:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a4fc:	c1 e8 06             	shr    eax,0x6
1000a4ff:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a502:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a509:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a50c:	c1 e8 0e             	shr    eax,0xe
1000a50f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a512:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a519:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a51c:	c1 e8 16             	shr    eax,0x16
1000a51f:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a522:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a529:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a52f:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a535:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a538:	01 d0                	add    eax,edx
1000a53a:	8b 00                	mov    eax,DWORD PTR [eax]
1000a53c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a53f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a545:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a54b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a54e:	01 d0                	add    eax,edx
1000a550:	8b 00                	mov    eax,DWORD PTR [eax]
1000a552:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a555:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a55b:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a561:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a564:	01 d0                	add    eax,edx
1000a566:	8b 00                	mov    eax,DWORD PTR [eax]
1000a568:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a56b:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a571:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a574:	01 d0                	add    eax,edx
1000a576:	8b 00                	mov    eax,DWORD PTR [eax]
1000a578:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a57b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a57e:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a581:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
1000a587:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a58a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a58d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a590:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a593:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a596:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a599:	0f b6 c0             	movzx  eax,al
1000a59c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a59f:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a5a3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a5a6:	c1 e8 06             	shr    eax,0x6
1000a5a9:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a5ac:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a5b3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a5b6:	c1 e8 0e             	shr    eax,0xe
1000a5b9:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a5bc:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a5c3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a5c6:	c1 e8 16             	shr    eax,0x16
1000a5c9:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a5cc:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a5d3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a5d9:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a5df:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a5e2:	01 d0                	add    eax,edx
1000a5e4:	8b 00                	mov    eax,DWORD PTR [eax]
1000a5e6:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a5e9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a5ef:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a5f5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a5f8:	01 d0                	add    eax,edx
1000a5fa:	8b 00                	mov    eax,DWORD PTR [eax]
1000a5fc:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a5ff:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a605:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a60b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a60e:	01 d0                	add    eax,edx
1000a610:	8b 00                	mov    eax,DWORD PTR [eax]
1000a612:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a615:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a61b:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a61e:	01 d0                	add    eax,edx
1000a620:	8b 00                	mov    eax,DWORD PTR [eax]
1000a622:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a625:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a628:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a62b:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
1000a631:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a634:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a637:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a63a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a63d:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a640:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a643:	0f b6 c0             	movzx  eax,al
1000a646:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a649:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a64d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a650:	c1 e8 06             	shr    eax,0x6
1000a653:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a656:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a65d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a660:	c1 e8 0e             	shr    eax,0xe
1000a663:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a666:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a66d:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a670:	c1 e8 16             	shr    eax,0x16
1000a673:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a676:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a67d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a683:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a689:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a68c:	01 d0                	add    eax,edx
1000a68e:	8b 00                	mov    eax,DWORD PTR [eax]
1000a690:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a693:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a699:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a69f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a6a2:	01 d0                	add    eax,edx
1000a6a4:	8b 00                	mov    eax,DWORD PTR [eax]
1000a6a6:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a6a9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a6af:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a6b5:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a6b8:	01 d0                	add    eax,edx
1000a6ba:	8b 00                	mov    eax,DWORD PTR [eax]
1000a6bc:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a6bf:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a6c5:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a6c8:	01 d0                	add    eax,edx
1000a6ca:	8b 00                	mov    eax,DWORD PTR [eax]
1000a6cc:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a6cf:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a6d2:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a6d5:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
1000a6db:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a6de:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a6e1:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a6e4:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a6e7:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a6ea:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a6ed:	0f b6 c0             	movzx  eax,al
1000a6f0:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a6f3:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a6f7:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a6fa:	c1 e8 06             	shr    eax,0x6
1000a6fd:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a700:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a707:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a70a:	c1 e8 0e             	shr    eax,0xe
1000a70d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a710:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a717:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a71a:	c1 e8 16             	shr    eax,0x16
1000a71d:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a720:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a727:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a72d:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a733:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a736:	01 d0                	add    eax,edx
1000a738:	8b 00                	mov    eax,DWORD PTR [eax]
1000a73a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a73d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a743:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a749:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a74c:	01 d0                	add    eax,edx
1000a74e:	8b 00                	mov    eax,DWORD PTR [eax]
1000a750:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a753:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a759:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a75f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a762:	01 d0                	add    eax,edx
1000a764:	8b 00                	mov    eax,DWORD PTR [eax]
1000a766:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a769:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a76f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a772:	01 d0                	add    eax,edx
1000a774:	8b 00                	mov    eax,DWORD PTR [eax]
1000a776:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a779:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a77c:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a77f:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
1000a785:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a788:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a78b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a78e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a791:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a794:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a797:	0f b6 c0             	movzx  eax,al
1000a79a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a79d:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a7a1:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a7a4:	c1 e8 06             	shr    eax,0x6
1000a7a7:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a7aa:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a7b1:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a7b4:	c1 e8 0e             	shr    eax,0xe
1000a7b7:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a7ba:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a7c1:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a7c4:	c1 e8 16             	shr    eax,0x16
1000a7c7:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a7ca:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a7d1:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a7d7:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a7dd:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a7e0:	01 d0                	add    eax,edx
1000a7e2:	8b 00                	mov    eax,DWORD PTR [eax]
1000a7e4:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a7e7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a7ed:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a7f3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a7f6:	01 d0                	add    eax,edx
1000a7f8:	8b 00                	mov    eax,DWORD PTR [eax]
1000a7fa:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a7fd:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a803:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a809:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a80c:	01 d0                	add    eax,edx
1000a80e:	8b 00                	mov    eax,DWORD PTR [eax]
1000a810:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a813:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a819:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a81c:	01 d0                	add    eax,edx
1000a81e:	8b 00                	mov    eax,DWORD PTR [eax]
1000a820:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a823:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a826:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a829:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
1000a82f:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a832:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a835:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a838:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a83b:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a83e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a841:	0f b6 c0             	movzx  eax,al
1000a844:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a847:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a84b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a84e:	c1 e8 06             	shr    eax,0x6
1000a851:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a854:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a85b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a85e:	c1 e8 0e             	shr    eax,0xe
1000a861:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a864:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a86b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a86e:	c1 e8 16             	shr    eax,0x16
1000a871:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a874:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a87b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a881:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a887:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a88a:	01 d0                	add    eax,edx
1000a88c:	8b 00                	mov    eax,DWORD PTR [eax]
1000a88e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a891:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a897:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a89d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a8a0:	01 d0                	add    eax,edx
1000a8a2:	8b 00                	mov    eax,DWORD PTR [eax]
1000a8a4:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a8a7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a8ad:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a8b3:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a8b6:	01 d0                	add    eax,edx
1000a8b8:	8b 00                	mov    eax,DWORD PTR [eax]
1000a8ba:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a8bd:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a8c3:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a8c6:	01 d0                	add    eax,edx
1000a8c8:	8b 00                	mov    eax,DWORD PTR [eax]
1000a8ca:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a8cd:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a8d0:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a8d3:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
1000a8d9:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a8dc:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a8df:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a8e2:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a8e5:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000a8e8:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a8eb:	0f b6 c0             	movzx  eax,al
1000a8ee:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a8f1:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a8f5:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a8f8:	c1 e8 06             	shr    eax,0x6
1000a8fb:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a8fe:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a905:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a908:	c1 e8 0e             	shr    eax,0xe
1000a90b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a90e:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a915:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000a918:	c1 e8 16             	shr    eax,0x16
1000a91b:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a91e:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a925:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a92b:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a931:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a934:	01 d0                	add    eax,edx
1000a936:	8b 00                	mov    eax,DWORD PTR [eax]
1000a938:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a93b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a941:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a947:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a94a:	01 d0                	add    eax,edx
1000a94c:	8b 00                	mov    eax,DWORD PTR [eax]
1000a94e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a951:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a957:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000a95d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a960:	01 d0                	add    eax,edx
1000a962:	8b 00                	mov    eax,DWORD PTR [eax]
1000a964:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a967:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000a96d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000a970:	01 d0                	add    eax,edx
1000a972:	8b 00                	mov    eax,DWORD PTR [eax]
1000a974:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a977:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a97a:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000a97d:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
1000a983:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a986:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a989:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000a98c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000a98f:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000a992:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a995:	0f b6 c0             	movzx  eax,al
1000a998:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a99b:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000a99f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a9a2:	c1 e8 06             	shr    eax,0x6
1000a9a5:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a9a8:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000a9af:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a9b2:	c1 e8 0e             	shr    eax,0xe
1000a9b5:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000a9b8:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000a9bf:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000a9c2:	c1 e8 16             	shr    eax,0x16
1000a9c5:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000a9c8:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000a9cf:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a9d5:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000a9db:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000a9de:	01 d0                	add    eax,edx
1000a9e0:	8b 00                	mov    eax,DWORD PTR [eax]
1000a9e2:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000a9e5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000a9eb:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000a9f1:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000a9f4:	01 d0                	add    eax,edx
1000a9f6:	8b 00                	mov    eax,DWORD PTR [eax]
1000a9f8:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000a9fb:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000aa01:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000aa07:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000aa0a:	01 d0                	add    eax,edx
1000aa0c:	8b 00                	mov    eax,DWORD PTR [eax]
1000aa0e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000aa11:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000aa17:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000aa1a:	01 d0                	add    eax,edx
1000aa1c:	8b 00                	mov    eax,DWORD PTR [eax]
1000aa1e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000aa21:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000aa24:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000aa27:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
1000aa2d:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000aa30:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000aa33:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000aa36:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000aa39:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000aa3c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000aa3f:	0f b6 c0             	movzx  eax,al
1000aa42:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000aa45:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000aa49:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000aa4c:	c1 e8 06             	shr    eax,0x6
1000aa4f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000aa52:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000aa59:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000aa5c:	c1 e8 0e             	shr    eax,0xe
1000aa5f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000aa62:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000aa69:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000aa6c:	c1 e8 16             	shr    eax,0x16
1000aa6f:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000aa72:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000aa79:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000aa7f:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000aa85:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000aa88:	01 d0                	add    eax,edx
1000aa8a:	8b 00                	mov    eax,DWORD PTR [eax]
1000aa8c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000aa8f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000aa95:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000aa9b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000aa9e:	01 d0                	add    eax,edx
1000aaa0:	8b 00                	mov    eax,DWORD PTR [eax]
1000aaa2:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000aaa5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000aaab:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000aab1:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000aab4:	01 d0                	add    eax,edx
1000aab6:	8b 00                	mov    eax,DWORD PTR [eax]
1000aab8:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000aabb:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000aac1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000aac4:	01 d0                	add    eax,edx
1000aac6:	8b 00                	mov    eax,DWORD PTR [eax]
1000aac8:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000aacb:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000aace:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000aad1:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
1000aad7:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000aada:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000aadd:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000aae0:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000aae3:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000aae6:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000aae9:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000aaec:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000aaef:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
1000aaf2:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
1000aaf8:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
1000aafb:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000aafe:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
1000ab01:	8d 50 f8             	lea    edx,[eax-0x8]
1000ab04:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ab07:	89 02                	mov    DWORD PTR [edx],eax
1000ab09:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
1000ab0c:	8d 50 fc             	lea    edx,[eax-0x4]
1000ab0f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ab12:	89 02                	mov    DWORD PTR [edx],eax
1000ab14:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ab1a:	05 fc 0f 00 00       	add    eax,0xffc
1000ab1f:	39 45 dc             	cmp    DWORD PTR [ebp-0x24],eax
1000ab22:	0f 82 11 f5 ff ff    	jb     1000a039 <_crypt_blowfish_rn+0x463e>
1000ab28:	ff 4d d8             	dec    DWORD PTR [ebp-0x28]
1000ab2b:	83 7d d8 00          	cmp    DWORD PTR [ebp-0x28],0x0
1000ab2f:	0f 85 82 d1 ff ff    	jne    10007cb7 <_crypt_blowfish_rn+0x22bc>
1000ab35:	c7 45 d4 00 00 00 00 	mov    DWORD PTR [ebp-0x2c],0x0
1000ab3c:	e9 1b 0b 00 00       	jmp    1000b65c <_crypt_blowfish_rn+0x5c61>
1000ab41:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
1000ab44:	8b 04 85 20 c3 00 10 	mov    eax,DWORD PTR [eax*4+0x1000c320]	1000ab47: R_386_32	.data
1000ab4b:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000ab4e:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
1000ab51:	40                   	inc    eax
1000ab52:	8b 04 85 20 c3 00 10 	mov    eax,DWORD PTR [eax*4+0x1000c320]	1000ab55: R_386_32	.data
1000ab59:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
1000ab5c:	c7 45 d8 40 00 00 00 	mov    DWORD PTR [ebp-0x28],0x40
1000ab63:	8b 85 1c ff ff ff    	mov    eax,DWORD PTR [ebp-0xe4]
1000ab69:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000ab6c:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ab6f:	0f b6 c0             	movzx  eax,al
1000ab72:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000ab75:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000ab79:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ab7c:	c1 e8 06             	shr    eax,0x6
1000ab7f:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000ab82:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000ab89:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ab8c:	c1 e8 0e             	shr    eax,0xe
1000ab8f:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ab92:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000ab99:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ab9c:	c1 e8 16             	shr    eax,0x16
1000ab9f:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000aba2:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000aba9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000abaf:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000abb5:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000abb8:	01 d0                	add    eax,edx
1000abba:	8b 00                	mov    eax,DWORD PTR [eax]
1000abbc:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000abbf:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000abc5:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000abcb:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000abce:	01 d0                	add    eax,edx
1000abd0:	8b 00                	mov    eax,DWORD PTR [eax]
1000abd2:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000abd5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000abdb:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000abe1:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000abe4:	01 d0                	add    eax,edx
1000abe6:	8b 00                	mov    eax,DWORD PTR [eax]
1000abe8:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000abeb:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000abf1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000abf4:	01 d0                	add    eax,edx
1000abf6:	8b 00                	mov    eax,DWORD PTR [eax]
1000abf8:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000abfb:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000abfe:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000ac01:	8b 85 20 ff ff ff    	mov    eax,DWORD PTR [ebp-0xe0]
1000ac07:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000ac0a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000ac0d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000ac10:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ac13:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000ac16:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ac19:	0f b6 c0             	movzx  eax,al
1000ac1c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000ac1f:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000ac23:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ac26:	c1 e8 06             	shr    eax,0x6
1000ac29:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000ac2c:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000ac33:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ac36:	c1 e8 0e             	shr    eax,0xe
1000ac39:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ac3c:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000ac43:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ac46:	c1 e8 16             	shr    eax,0x16
1000ac49:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000ac4c:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000ac53:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ac59:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000ac5f:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000ac62:	01 d0                	add    eax,edx
1000ac64:	8b 00                	mov    eax,DWORD PTR [eax]
1000ac66:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000ac69:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ac6f:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000ac75:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000ac78:	01 d0                	add    eax,edx
1000ac7a:	8b 00                	mov    eax,DWORD PTR [eax]
1000ac7c:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000ac7f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ac85:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000ac8b:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ac8e:	01 d0                	add    eax,edx
1000ac90:	8b 00                	mov    eax,DWORD PTR [eax]
1000ac92:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ac95:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000ac9b:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000ac9e:	01 d0                	add    eax,edx
1000aca0:	8b 00                	mov    eax,DWORD PTR [eax]
1000aca2:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000aca5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000aca8:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000acab:	8b 85 24 ff ff ff    	mov    eax,DWORD PTR [ebp-0xdc]
1000acb1:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000acb4:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000acb7:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000acba:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000acbd:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000acc0:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000acc3:	0f b6 c0             	movzx  eax,al
1000acc6:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000acc9:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000accd:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000acd0:	c1 e8 06             	shr    eax,0x6
1000acd3:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000acd6:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000acdd:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ace0:	c1 e8 0e             	shr    eax,0xe
1000ace3:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ace6:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000aced:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000acf0:	c1 e8 16             	shr    eax,0x16
1000acf3:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000acf6:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000acfd:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ad03:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000ad09:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000ad0c:	01 d0                	add    eax,edx
1000ad0e:	8b 00                	mov    eax,DWORD PTR [eax]
1000ad10:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000ad13:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ad19:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000ad1f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000ad22:	01 d0                	add    eax,edx
1000ad24:	8b 00                	mov    eax,DWORD PTR [eax]
1000ad26:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000ad29:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ad2f:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000ad35:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ad38:	01 d0                	add    eax,edx
1000ad3a:	8b 00                	mov    eax,DWORD PTR [eax]
1000ad3c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ad3f:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000ad45:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000ad48:	01 d0                	add    eax,edx
1000ad4a:	8b 00                	mov    eax,DWORD PTR [eax]
1000ad4c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000ad4f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000ad52:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000ad55:	8b 85 28 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd8]
1000ad5b:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000ad5e:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000ad61:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000ad64:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ad67:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000ad6a:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ad6d:	0f b6 c0             	movzx  eax,al
1000ad70:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000ad73:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000ad77:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ad7a:	c1 e8 06             	shr    eax,0x6
1000ad7d:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000ad80:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000ad87:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ad8a:	c1 e8 0e             	shr    eax,0xe
1000ad8d:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ad90:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000ad97:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000ad9a:	c1 e8 16             	shr    eax,0x16
1000ad9d:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000ada0:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000ada7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000adad:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000adb3:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000adb6:	01 d0                	add    eax,edx
1000adb8:	8b 00                	mov    eax,DWORD PTR [eax]
1000adba:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000adbd:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000adc3:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000adc9:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000adcc:	01 d0                	add    eax,edx
1000adce:	8b 00                	mov    eax,DWORD PTR [eax]
1000add0:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000add3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000add9:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000addf:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ade2:	01 d0                	add    eax,edx
1000ade4:	8b 00                	mov    eax,DWORD PTR [eax]
1000ade6:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ade9:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000adef:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000adf2:	01 d0                	add    eax,edx
1000adf4:	8b 00                	mov    eax,DWORD PTR [eax]
1000adf6:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000adf9:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000adfc:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000adff:	8b 85 2c ff ff ff    	mov    eax,DWORD PTR [ebp-0xd4]
1000ae05:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000ae08:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000ae0b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000ae0e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ae11:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000ae14:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ae17:	0f b6 c0             	movzx  eax,al
1000ae1a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000ae1d:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000ae21:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ae24:	c1 e8 06             	shr    eax,0x6
1000ae27:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000ae2a:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000ae31:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ae34:	c1 e8 0e             	shr    eax,0xe
1000ae37:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ae3a:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000ae41:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000ae44:	c1 e8 16             	shr    eax,0x16
1000ae47:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000ae4a:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000ae51:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ae57:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000ae5d:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000ae60:	01 d0                	add    eax,edx
1000ae62:	8b 00                	mov    eax,DWORD PTR [eax]
1000ae64:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000ae67:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ae6d:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000ae73:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000ae76:	01 d0                	add    eax,edx
1000ae78:	8b 00                	mov    eax,DWORD PTR [eax]
1000ae7a:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000ae7d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000ae83:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000ae89:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000ae8c:	01 d0                	add    eax,edx
1000ae8e:	8b 00                	mov    eax,DWORD PTR [eax]
1000ae90:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000ae93:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000ae99:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000ae9c:	01 d0                	add    eax,edx
1000ae9e:	8b 00                	mov    eax,DWORD PTR [eax]
1000aea0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000aea3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000aea6:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000aea9:	8b 85 30 ff ff ff    	mov    eax,DWORD PTR [ebp-0xd0]
1000aeaf:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000aeb2:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000aeb5:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000aeb8:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000aebb:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000aebe:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000aec1:	0f b6 c0             	movzx  eax,al
1000aec4:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000aec7:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000aecb:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000aece:	c1 e8 06             	shr    eax,0x6
1000aed1:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000aed4:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000aedb:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000aede:	c1 e8 0e             	shr    eax,0xe
1000aee1:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000aee4:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000aeeb:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000aeee:	c1 e8 16             	shr    eax,0x16
1000aef1:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000aef4:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000aefb:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000af01:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000af07:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000af0a:	01 d0                	add    eax,edx
1000af0c:	8b 00                	mov    eax,DWORD PTR [eax]
1000af0e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000af11:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000af17:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000af1d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000af20:	01 d0                	add    eax,edx
1000af22:	8b 00                	mov    eax,DWORD PTR [eax]
1000af24:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000af27:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000af2d:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000af33:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000af36:	01 d0                	add    eax,edx
1000af38:	8b 00                	mov    eax,DWORD PTR [eax]
1000af3a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000af3d:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000af43:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000af46:	01 d0                	add    eax,edx
1000af48:	8b 00                	mov    eax,DWORD PTR [eax]
1000af4a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000af4d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000af50:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000af53:	8b 85 34 ff ff ff    	mov    eax,DWORD PTR [ebp-0xcc]
1000af59:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000af5c:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000af5f:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000af62:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000af65:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000af68:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000af6b:	0f b6 c0             	movzx  eax,al
1000af6e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000af71:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000af75:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000af78:	c1 e8 06             	shr    eax,0x6
1000af7b:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000af7e:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000af85:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000af88:	c1 e8 0e             	shr    eax,0xe
1000af8b:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000af8e:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000af95:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000af98:	c1 e8 16             	shr    eax,0x16
1000af9b:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000af9e:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000afa5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000afab:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000afb1:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000afb4:	01 d0                	add    eax,edx
1000afb6:	8b 00                	mov    eax,DWORD PTR [eax]
1000afb8:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000afbb:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000afc1:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000afc7:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000afca:	01 d0                	add    eax,edx
1000afcc:	8b 00                	mov    eax,DWORD PTR [eax]
1000afce:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000afd1:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000afd7:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000afdd:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000afe0:	01 d0                	add    eax,edx
1000afe2:	8b 00                	mov    eax,DWORD PTR [eax]
1000afe4:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000afe7:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000afed:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000aff0:	01 d0                	add    eax,edx
1000aff2:	8b 00                	mov    eax,DWORD PTR [eax]
1000aff4:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000aff7:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000affa:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000affd:	8b 85 38 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc8]
1000b003:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b006:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b009:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b00c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b00f:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b012:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b015:	0f b6 c0             	movzx  eax,al
1000b018:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b01b:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b01f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b022:	c1 e8 06             	shr    eax,0x6
1000b025:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b028:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b02f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b032:	c1 e8 0e             	shr    eax,0xe
1000b035:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b038:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b03f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b042:	c1 e8 16             	shr    eax,0x16
1000b045:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b048:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b04f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b055:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b05b:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b05e:	01 d0                	add    eax,edx
1000b060:	8b 00                	mov    eax,DWORD PTR [eax]
1000b062:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b065:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b06b:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b071:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b074:	01 d0                	add    eax,edx
1000b076:	8b 00                	mov    eax,DWORD PTR [eax]
1000b078:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b07b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b081:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b087:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b08a:	01 d0                	add    eax,edx
1000b08c:	8b 00                	mov    eax,DWORD PTR [eax]
1000b08e:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b091:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b097:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b09a:	01 d0                	add    eax,edx
1000b09c:	8b 00                	mov    eax,DWORD PTR [eax]
1000b09e:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b0a1:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b0a4:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b0a7:	8b 85 3c ff ff ff    	mov    eax,DWORD PTR [ebp-0xc4]
1000b0ad:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b0b0:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b0b3:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b0b6:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b0b9:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b0bc:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b0bf:	0f b6 c0             	movzx  eax,al
1000b0c2:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b0c5:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b0c9:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b0cc:	c1 e8 06             	shr    eax,0x6
1000b0cf:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b0d2:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b0d9:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b0dc:	c1 e8 0e             	shr    eax,0xe
1000b0df:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b0e2:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b0e9:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b0ec:	c1 e8 16             	shr    eax,0x16
1000b0ef:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b0f2:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b0f9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b0ff:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b105:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b108:	01 d0                	add    eax,edx
1000b10a:	8b 00                	mov    eax,DWORD PTR [eax]
1000b10c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b10f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b115:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b11b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b11e:	01 d0                	add    eax,edx
1000b120:	8b 00                	mov    eax,DWORD PTR [eax]
1000b122:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b125:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b12b:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b131:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b134:	01 d0                	add    eax,edx
1000b136:	8b 00                	mov    eax,DWORD PTR [eax]
1000b138:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b13b:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b141:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b144:	01 d0                	add    eax,edx
1000b146:	8b 00                	mov    eax,DWORD PTR [eax]
1000b148:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b14b:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b14e:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b151:	8b 85 40 ff ff ff    	mov    eax,DWORD PTR [ebp-0xc0]
1000b157:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b15a:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b15d:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b160:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b163:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b166:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b169:	0f b6 c0             	movzx  eax,al
1000b16c:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b16f:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b173:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b176:	c1 e8 06             	shr    eax,0x6
1000b179:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b17c:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b183:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b186:	c1 e8 0e             	shr    eax,0xe
1000b189:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b18c:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b193:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b196:	c1 e8 16             	shr    eax,0x16
1000b199:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b19c:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b1a3:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b1a9:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b1af:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b1b2:	01 d0                	add    eax,edx
1000b1b4:	8b 00                	mov    eax,DWORD PTR [eax]
1000b1b6:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b1b9:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b1bf:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b1c5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b1c8:	01 d0                	add    eax,edx
1000b1ca:	8b 00                	mov    eax,DWORD PTR [eax]
1000b1cc:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b1cf:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b1d5:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b1db:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b1de:	01 d0                	add    eax,edx
1000b1e0:	8b 00                	mov    eax,DWORD PTR [eax]
1000b1e2:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b1e5:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b1eb:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b1ee:	01 d0                	add    eax,edx
1000b1f0:	8b 00                	mov    eax,DWORD PTR [eax]
1000b1f2:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b1f5:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b1f8:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b1fb:	8b 85 44 ff ff ff    	mov    eax,DWORD PTR [ebp-0xbc]
1000b201:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b204:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b207:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b20a:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b20d:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b210:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b213:	0f b6 c0             	movzx  eax,al
1000b216:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b219:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b21d:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b220:	c1 e8 06             	shr    eax,0x6
1000b223:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b226:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b22d:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b230:	c1 e8 0e             	shr    eax,0xe
1000b233:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b236:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b23d:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b240:	c1 e8 16             	shr    eax,0x16
1000b243:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b246:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b24d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b253:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b259:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b25c:	01 d0                	add    eax,edx
1000b25e:	8b 00                	mov    eax,DWORD PTR [eax]
1000b260:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b263:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b269:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b26f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b272:	01 d0                	add    eax,edx
1000b274:	8b 00                	mov    eax,DWORD PTR [eax]
1000b276:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b279:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b27f:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b285:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b288:	01 d0                	add    eax,edx
1000b28a:	8b 00                	mov    eax,DWORD PTR [eax]
1000b28c:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b28f:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b295:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b298:	01 d0                	add    eax,edx
1000b29a:	8b 00                	mov    eax,DWORD PTR [eax]
1000b29c:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b29f:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b2a2:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b2a5:	8b 85 48 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb8]
1000b2ab:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b2ae:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b2b1:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b2b4:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b2b7:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b2ba:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b2bd:	0f b6 c0             	movzx  eax,al
1000b2c0:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b2c3:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b2c7:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b2ca:	c1 e8 06             	shr    eax,0x6
1000b2cd:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b2d0:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b2d7:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b2da:	c1 e8 0e             	shr    eax,0xe
1000b2dd:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b2e0:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b2e7:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b2ea:	c1 e8 16             	shr    eax,0x16
1000b2ed:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b2f0:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b2f7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b2fd:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b303:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b306:	01 d0                	add    eax,edx
1000b308:	8b 00                	mov    eax,DWORD PTR [eax]
1000b30a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b30d:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b313:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b319:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b31c:	01 d0                	add    eax,edx
1000b31e:	8b 00                	mov    eax,DWORD PTR [eax]
1000b320:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b323:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b329:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b32f:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b332:	01 d0                	add    eax,edx
1000b334:	8b 00                	mov    eax,DWORD PTR [eax]
1000b336:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b339:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b33f:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b342:	01 d0                	add    eax,edx
1000b344:	8b 00                	mov    eax,DWORD PTR [eax]
1000b346:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b349:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b34c:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b34f:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [ebp-0xb4]
1000b355:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b358:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b35b:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b35e:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b361:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b364:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b367:	0f b6 c0             	movzx  eax,al
1000b36a:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b36d:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b371:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b374:	c1 e8 06             	shr    eax,0x6
1000b377:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b37a:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b381:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b384:	c1 e8 0e             	shr    eax,0xe
1000b387:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b38a:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b391:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b394:	c1 e8 16             	shr    eax,0x16
1000b397:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b39a:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b3a1:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b3a7:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b3ad:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b3b0:	01 d0                	add    eax,edx
1000b3b2:	8b 00                	mov    eax,DWORD PTR [eax]
1000b3b4:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b3b7:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b3bd:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b3c3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b3c6:	01 d0                	add    eax,edx
1000b3c8:	8b 00                	mov    eax,DWORD PTR [eax]
1000b3ca:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b3cd:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b3d3:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b3d9:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b3dc:	01 d0                	add    eax,edx
1000b3de:	8b 00                	mov    eax,DWORD PTR [eax]
1000b3e0:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b3e3:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b3e9:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b3ec:	01 d0                	add    eax,edx
1000b3ee:	8b 00                	mov    eax,DWORD PTR [eax]
1000b3f0:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b3f3:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b3f6:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b3f9:	8b 85 50 ff ff ff    	mov    eax,DWORD PTR [ebp-0xb0]
1000b3ff:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b402:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b405:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b408:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b40b:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b40e:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b411:	0f b6 c0             	movzx  eax,al
1000b414:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b417:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b41b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b41e:	c1 e8 06             	shr    eax,0x6
1000b421:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b424:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b42b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b42e:	c1 e8 0e             	shr    eax,0xe
1000b431:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b434:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b43b:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b43e:	c1 e8 16             	shr    eax,0x16
1000b441:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b444:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b44b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b451:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b457:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b45a:	01 d0                	add    eax,edx
1000b45c:	8b 00                	mov    eax,DWORD PTR [eax]
1000b45e:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b461:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b467:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b46d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b470:	01 d0                	add    eax,edx
1000b472:	8b 00                	mov    eax,DWORD PTR [eax]
1000b474:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b477:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b47d:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b483:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b486:	01 d0                	add    eax,edx
1000b488:	8b 00                	mov    eax,DWORD PTR [eax]
1000b48a:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b48d:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b493:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b496:	01 d0                	add    eax,edx
1000b498:	8b 00                	mov    eax,DWORD PTR [eax]
1000b49a:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b49d:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b4a0:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b4a3:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [ebp-0xac]
1000b4a9:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b4ac:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b4af:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b4b2:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b4b5:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b4b8:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b4bb:	0f b6 c0             	movzx  eax,al
1000b4be:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b4c1:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b4c5:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b4c8:	c1 e8 06             	shr    eax,0x6
1000b4cb:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b4ce:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b4d5:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b4d8:	c1 e8 0e             	shr    eax,0xe
1000b4db:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b4de:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b4e5:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b4e8:	c1 e8 16             	shr    eax,0x16
1000b4eb:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b4ee:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b4f5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b4fb:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b501:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b504:	01 d0                	add    eax,edx
1000b506:	8b 00                	mov    eax,DWORD PTR [eax]
1000b508:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b50b:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b511:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b517:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b51a:	01 d0                	add    eax,edx
1000b51c:	8b 00                	mov    eax,DWORD PTR [eax]
1000b51e:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b521:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b527:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b52d:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b530:	01 d0                	add    eax,edx
1000b532:	8b 00                	mov    eax,DWORD PTR [eax]
1000b534:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b537:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b53d:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b540:	01 d0                	add    eax,edx
1000b542:	8b 00                	mov    eax,DWORD PTR [eax]
1000b544:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b547:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b54a:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b54d:	8b 85 58 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa8]
1000b553:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b556:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b559:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b55c:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b55f:	31 45 e0             	xor    DWORD PTR [ebp-0x20],eax
1000b562:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b565:	0f b6 c0             	movzx  eax,al
1000b568:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b56b:	c1 65 d0 02          	shl    DWORD PTR [ebp-0x30],0x2
1000b56f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b572:	c1 e8 06             	shr    eax,0x6
1000b575:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b578:	81 65 cc fc 03 00 00 	and    DWORD PTR [ebp-0x34],0x3fc
1000b57f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b582:	c1 e8 0e             	shr    eax,0xe
1000b585:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b588:	81 65 c8 fc 03 00 00 	and    DWORD PTR [ebp-0x38],0x3fc
1000b58f:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b592:	c1 e8 16             	shr    eax,0x16
1000b595:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b598:	81 65 c4 fc 03 00 00 	and    DWORD PTR [ebp-0x3c],0x3fc
1000b59f:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b5a5:	8d 90 00 0c 00 00    	lea    edx,[eax+0xc00]
1000b5ab:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b5ae:	01 d0                	add    eax,edx
1000b5b0:	8b 00                	mov    eax,DWORD PTR [eax]
1000b5b2:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
1000b5b5:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b5bb:	8d 90 00 08 00 00    	lea    edx,[eax+0x800]
1000b5c1:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b5c4:	01 d0                	add    eax,edx
1000b5c6:	8b 00                	mov    eax,DWORD PTR [eax]
1000b5c8:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
1000b5cb:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b5d1:	8d 90 00 04 00 00    	lea    edx,[eax+0x400]
1000b5d7:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b5da:	01 d0                	add    eax,edx
1000b5dc:	8b 00                	mov    eax,DWORD PTR [eax]
1000b5de:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
1000b5e1:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b5e7:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
1000b5ea:	01 d0                	add    eax,edx
1000b5ec:	8b 00                	mov    eax,DWORD PTR [eax]
1000b5ee:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b5f1:	8b 45 cc             	mov    eax,DWORD PTR [ebp-0x34]
1000b5f4:	31 45 c8             	xor    DWORD PTR [ebp-0x38],eax
1000b5f7:	8b 85 5c ff ff ff    	mov    eax,DWORD PTR [ebp-0xa4]
1000b5fd:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b600:	8b 45 d0             	mov    eax,DWORD PTR [ebp-0x30]
1000b603:	01 45 c8             	add    DWORD PTR [ebp-0x38],eax
1000b606:	8b 45 c8             	mov    eax,DWORD PTR [ebp-0x38]
1000b609:	31 45 e4             	xor    DWORD PTR [ebp-0x1c],eax
1000b60c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b60f:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
1000b612:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b615:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
1000b618:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [ebp-0xa0]
1000b61e:	33 45 c4             	xor    eax,DWORD PTR [ebp-0x3c]
1000b621:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
1000b624:	ff 4d d8             	dec    DWORD PTR [ebp-0x28]
1000b627:	83 7d d8 00          	cmp    DWORD PTR [ebp-0x28],0x0
1000b62b:	0f 85 32 f5 ff ff    	jne    1000ab63 <_crypt_blowfish_rn+0x5168>
1000b631:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
1000b634:	8d 90 24 04 00 00    	lea    edx,[eax+0x424]
1000b63a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
1000b63d:	89 84 95 1c ef ff ff 	mov    DWORD PTR [ebp+edx*4-0x10e4],eax
1000b644:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
1000b647:	40                   	inc    eax
1000b648:	8d 90 24 04 00 00    	lea    edx,[eax+0x424]
1000b64e:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
1000b651:	89 84 95 1c ef ff ff 	mov    DWORD PTR [ebp+edx*4-0x10e4],eax
1000b658:	83 45 d4 02          	add    DWORD PTR [ebp-0x2c],0x2
1000b65c:	83 7d d4 05          	cmp    DWORD PTR [ebp-0x2c],0x5
1000b660:	0f 8e db f4 ff ff    	jle    1000ab41 <_crypt_blowfish_rn+0x5146>
1000b666:	83 ec 04             	sub    esp,0x4
1000b669:	6a 1c                	push   0x1c
1000b66b:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000b66e:	ff 75 10             	push   DWORD PTR [ebp+0x10]
1000b671:	e8 fc ff ff ff       	call   1000b672 <_crypt_blowfish_rn+0x5c77>	1000b672: R_386_PC32	memcpy
1000b676:	83 c4 10             	add    esp,0x10
1000b679:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
1000b67c:	83 c0 1c             	add    eax,0x1c
1000b67f:	8a 00                	mov    al,BYTE PTR [eax]
1000b681:	0f be c0             	movsx  eax,al
1000b684:	83 e8 20             	sub    eax,0x20
1000b687:	8a 80 00 d4 00 10    	mov    al,BYTE PTR [eax+0x1000d400]	1000b689: R_386_32	.data
1000b68d:	0f b6 c0             	movzx  eax,al
1000b690:	83 e0 30             	and    eax,0x30
1000b693:	8a 90 a0 d3 00 10    	mov    dl,BYTE PTR [eax+0x1000d3a0]	1000b695: R_386_32	.data
1000b699:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
1000b69c:	83 c0 1c             	add    eax,0x1c
1000b69f:	88 10                	mov    BYTE PTR [eax],dl
1000b6a1:	83 ec 08             	sub    esp,0x8
1000b6a4:	6a 06                	push   0x6
1000b6a6:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b6ac:	05 90 10 00 00       	add    eax,0x1090
1000b6b1:	50                   	push   eax
1000b6b2:	e8 5b a2 ff ff       	call   10005912 <BF_swap>
1000b6b7:	83 c4 10             	add    esp,0x10
1000b6ba:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
1000b6bd:	83 c0 1d             	add    eax,0x1d
1000b6c0:	83 ec 04             	sub    esp,0x4
1000b6c3:	6a 17                	push   0x17
1000b6c5:	8d 95 1c ef ff ff    	lea    edx,[ebp-0x10e4]
1000b6cb:	81 c2 90 10 00 00    	add    edx,0x1090
1000b6d1:	52                   	push   edx
1000b6d2:	50                   	push   eax
1000b6d3:	e8 10 a1 ff ff       	call   100057e8 <BF_encode>
1000b6d8:	83 c4 10             	add    esp,0x10
1000b6db:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
1000b6de:	83 c0 3c             	add    eax,0x3c
1000b6e1:	c6 00 00             	mov    BYTE PTR [eax],0x0
1000b6e4:	83 ec 08             	sub    esp,0x8
1000b6e7:	68 a8 10 00 00       	push   0x10a8
1000b6ec:	8d 85 1c ef ff ff    	lea    eax,[ebp-0x10e4]
1000b6f2:	50                   	push   eax
1000b6f3:	e8 fc 9e ff ff       	call   100055f4 <clean>
1000b6f8:	83 c4 10             	add    esp,0x10
1000b6fb:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
1000b6fe:	8d 65 f4             	lea    esp,[ebp-0xc]
1000b701:	5b                   	pop    ebx
1000b702:	5e                   	pop    esi
1000b703:	5f                   	pop    edi
1000b704:	5d                   	pop    ebp
1000b705:	c3                   	ret    

1000b706 <_crypt_gensalt_blowfish_rn>:
1000b706:	55                   	push   ebp
1000b707:	89 e5                	mov    ebp,esp
1000b709:	83 7d 10 0f          	cmp    DWORD PTR [ebp+0x10],0xf
1000b70d:	7e 18                	jle    1000b727 <_crypt_gensalt_blowfish_rn+0x21>
1000b70f:	83 7d 18 1d          	cmp    DWORD PTR [ebp+0x18],0x1d
1000b713:	7e 12                	jle    1000b727 <_crypt_gensalt_blowfish_rn+0x21>
1000b715:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
1000b719:	74 39                	je     1000b754 <_crypt_gensalt_blowfish_rn+0x4e>
1000b71b:	83 7d 08 03          	cmp    DWORD PTR [ebp+0x8],0x3
1000b71f:	76 06                	jbe    1000b727 <_crypt_gensalt_blowfish_rn+0x21>
1000b721:	83 7d 08 1f          	cmp    DWORD PTR [ebp+0x8],0x1f
1000b725:	76 2d                	jbe    1000b754 <_crypt_gensalt_blowfish_rn+0x4e>
1000b727:	83 7d 18 00          	cmp    DWORD PTR [ebp+0x18],0x0
1000b72b:	7e 06                	jle    1000b733 <_crypt_gensalt_blowfish_rn+0x2d>
1000b72d:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b730:	c6 00 00             	mov    BYTE PTR [eax],0x0
1000b733:	83 7d 18 1d          	cmp    DWORD PTR [ebp+0x18],0x1d
1000b737:	7f 07                	jg     1000b740 <_crypt_gensalt_blowfish_rn+0x3a>
1000b739:	b8 22 00 00 00       	mov    eax,0x22
1000b73e:	eb 05                	jmp    1000b745 <_crypt_gensalt_blowfish_rn+0x3f>
1000b740:	b8 16 00 00 00       	mov    eax,0x16
1000b745:	a3 00 00 00 00       	mov    ds:0x0,eax	1000b746: R_386_32	_bcrypt_errno
1000b74a:	b8 00 00 00 00       	mov    eax,0x0
1000b74f:	e9 96 00 00 00       	jmp    1000b7ea <_crypt_gensalt_blowfish_rn+0xe4>
1000b754:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
1000b758:	75 07                	jne    1000b761 <_crypt_gensalt_blowfish_rn+0x5b>
1000b75a:	c7 45 08 05 00 00 00 	mov    DWORD PTR [ebp+0x8],0x5
1000b761:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b764:	c6 00 24             	mov    BYTE PTR [eax],0x24
1000b767:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b76a:	40                   	inc    eax
1000b76b:	c6 00 32             	mov    BYTE PTR [eax],0x32
1000b76e:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b771:	83 c0 02             	add    eax,0x2
1000b774:	c6 00 61             	mov    BYTE PTR [eax],0x61
1000b777:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b77a:	83 c0 03             	add    eax,0x3
1000b77d:	c6 00 24             	mov    BYTE PTR [eax],0x24
1000b780:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000b783:	ba cd cc cc cc       	mov    edx,0xcccccccd
1000b788:	f7 e2                	mul    edx
1000b78a:	89 d0                	mov    eax,edx
1000b78c:	c1 e8 03             	shr    eax,0x3
1000b78f:	8d 50 30             	lea    edx,[eax+0x30]
1000b792:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b795:	83 c0 04             	add    eax,0x4
1000b798:	88 10                	mov    BYTE PTR [eax],dl
1000b79a:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
1000b79d:	b8 cd cc cc cc       	mov    eax,0xcccccccd
1000b7a2:	f7 e1                	mul    ecx
1000b7a4:	c1 ea 03             	shr    edx,0x3
1000b7a7:	89 d0                	mov    eax,edx
1000b7a9:	c1 e0 02             	shl    eax,0x2
1000b7ac:	01 d0                	add    eax,edx
1000b7ae:	01 c0                	add    eax,eax
1000b7b0:	29 c1                	sub    ecx,eax
1000b7b2:	89 ca                	mov    edx,ecx
1000b7b4:	88 d0                	mov    al,dl
1000b7b6:	8d 50 30             	lea    edx,[eax+0x30]
1000b7b9:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b7bc:	83 c0 05             	add    eax,0x5
1000b7bf:	88 10                	mov    BYTE PTR [eax],dl
1000b7c1:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b7c4:	83 c0 06             	add    eax,0x6
1000b7c7:	c6 00 24             	mov    BYTE PTR [eax],0x24
1000b7ca:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b7cd:	83 c0 07             	add    eax,0x7
1000b7d0:	6a 10                	push   0x10
1000b7d2:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000b7d5:	50                   	push   eax
1000b7d6:	e8 0d a0 ff ff       	call   100057e8 <BF_encode>
1000b7db:	83 c4 0c             	add    esp,0xc
1000b7de:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b7e1:	83 c0 1d             	add    eax,0x1d
1000b7e4:	c6 00 00             	mov    BYTE PTR [eax],0x0
1000b7e7:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
1000b7ea:	c9                   	leave  
1000b7eb:	c3                   	ret    

1000b7ec <bcrypt_gensalt>:
1000b7ec:	55                   	push   ebp
1000b7ed:	89 e5                	mov    ebp,esp
1000b7ef:	83 ec 28             	sub    esp,0x28
1000b7f2:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
1000b7f9:	eb 14                	jmp    1000b80f <bcrypt_gensalt+0x23>
1000b7fb:	e8 fc ff ff ff       	call   1000b7fc <bcrypt_gensalt+0x10>	1000b7fc: R_386_PC32	rand
1000b800:	88 c2                	mov    dl,al
1000b802:	8d 4d dc             	lea    ecx,[ebp-0x24]
1000b805:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
1000b808:	01 c8                	add    eax,ecx
1000b80a:	88 10                	mov    BYTE PTR [eax],dl
1000b80c:	ff 45 f4             	inc    DWORD PTR [ebp-0xc]
1000b80f:	83 7d f4 0f          	cmp    DWORD PTR [ebp-0xc],0xf
1000b813:	7e e6                	jle    1000b7fb <bcrypt_gensalt+0xf>
1000b815:	83 7d 08 03          	cmp    DWORD PTR [ebp+0x8],0x3
1000b819:	7e 0b                	jle    1000b826 <bcrypt_gensalt+0x3a>
1000b81b:	83 7d 08 1f          	cmp    DWORD PTR [ebp+0x8],0x1f
1000b81f:	7f 05                	jg     1000b826 <bcrypt_gensalt+0x3a>
1000b821:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
1000b824:	eb 05                	jmp    1000b82b <bcrypt_gensalt+0x3f>
1000b826:	b8 0c 00 00 00       	mov    eax,0xc
1000b82b:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
1000b82e:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
1000b831:	83 ec 0c             	sub    esp,0xc
1000b834:	6a 40                	push   0x40
1000b836:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000b839:	6a 10                	push   0x10
1000b83b:	8d 55 dc             	lea    edx,[ebp-0x24]
1000b83e:	52                   	push   edx
1000b83f:	50                   	push   eax
1000b840:	e8 c1 fe ff ff       	call   1000b706 <_crypt_gensalt_blowfish_rn>
1000b845:	83 c4 20             	add    esp,0x20
1000b848:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
1000b84b:	83 7d ec 00          	cmp    DWORD PTR [ebp-0x14],0x0
1000b84f:	0f 94 c0             	sete   al
1000b852:	0f b6 c0             	movzx  eax,al
1000b855:	c9                   	leave  
1000b856:	c3                   	ret    

1000b857 <bcrypt_hashpw>:
1000b857:	55                   	push   ebp
1000b858:	89 e5                	mov    ebp,esp
1000b85a:	83 ec 18             	sub    esp,0x18
1000b85d:	6a 40                	push   0x40
1000b85f:	ff 75 10             	push   DWORD PTR [ebp+0x10]
1000b862:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
1000b865:	ff 75 08             	push   DWORD PTR [ebp+0x8]
1000b868:	e8 8e a1 ff ff       	call   100059fb <_crypt_blowfish_rn>
1000b86d:	83 c4 10             	add    esp,0x10
1000b870:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
1000b873:	83 7d f4 00          	cmp    DWORD PTR [ebp-0xc],0x0
1000b877:	0f 94 c0             	sete   al
1000b87a:	0f b6 c0             	movzx  eax,al
1000b87d:	c9                   	leave  
1000b87e:	c3                   	ret    
1000b87f:	90                   	nop

1000b880 <TERMINAL_KEYBUFFER_IN_SIZE>:
1000b880:	80 00 00 00                                         ....

1000b884 <TERMINAL_KEYBUFFER_OUT_SIZE>:
1000b884:	80 00 00 00 2e 00 2e 2e 00 2f 00 43 6f 75 6c 64     ........./.Could
1000b894:	6e 27 74 20 6f 70 65 6e 20 62 61 73 65 20 70 61     n't open base pa
1000b8a4:	74 68 2e 0a 00 25 73 20 2d 3e 20 25 73 0a 00 43     th...%s -> %s..C
1000b8b4:	4f 55 4c 44 20 4e 4f 54 20 43 52 45 41 54 45 00     OULD NOT CREATE.
1000b8c4:	43 4f 55 4c 44 20 4e 4f 54 20 43 4f 50 59 00 4e     COULD NOT COPY.N
1000b8d4:	4f 20 4d 45 4d 4f 52 59 00 42 61 63 6b 75 70 00     O MEMORY.Backup.
1000b8e4:	43 3a 2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d     C:/Banana/System
1000b8f4:	2f 42 61 63 6b 75 70 2f 00 30 31 32 33 34 35 36     /Backup/.0123456
1000b904:	37 38 39 41 42 43 44 45 46 00 43 3a 2f 55 73 65     789ABCDEF.C:/Use
1000b914:	72 73 2f 00 2f 44 65 73 6b 74 6f 70 00 2f 44 6f     rs/./Desktop./Do
1000b924:	63 75 6d 65 6e 74 73 00 2f 44 6f 77 6e 6c 6f 61     cuments./Downloa
1000b934:	64 73 00 2f 50 68 6f 74 6f 73 00 2f 54 72 61 73     ds./Photos./Tras
1000b944:	68 20 42 69 6e 00 2f 4d 75 73 69 63 00 2f 4d 6f     h Bin./Music./Mo
1000b954:	76 69 65 73 00 43 3a 2f 42 61 6e 61 6e 61 2f 52     vies.C:/Banana/R
1000b964:	65 67 69 73 74 72 79 2f 55 73 65 72 2f 00 00 00     egistry/User/...
1000b974:	43 3a 2f 42 61 6e 61 6e 61 2f 52 65 67 69 73 74     C:/Banana/Regist
1000b984:	72 79 2f 44 65 66 61 75 6c 74 55 73 65 72 00 00     ry/DefaultUser..
1000b994:	43 68 65 63 6b 69 6e 67 0a 20 73 79 73 74 65 6d     Checking. system
1000b9a4:	0a 20 72 65 71 75 69 72 65 6d 65 6e 74 73 0a 0a     . requirements..
1000b9b4:	20 4c 65 67 61 6c 0a 20 6e 6f 74 69 63 65 73 0a      Legal. notices.
1000b9c4:	0a 20 43 68 6f 6f 73 69 6e 67 20 61 0a 20 70 61     . Choosing a. pa
1000b9d4:	72 74 69 74 69 6f 6e 0a 0a 20 46 6f 72 6d 61 74     rtition.. Format
1000b9e4:	74 69 6e 67 0a 0a 20 43 6f 70 79 69 6e 67 20 66     ting.. Copying f
1000b9f4:	69 6c 65 73 0a 0a 20 52 65 73 74 61 72 74 69 6e     iles.. Restartin
1000ba04:	67 0a 20 79 6f 75 72 20 63 6f 6d 70 75 74 65 72     g. your computer
1000ba14:	0a 0a 00 20 46 69 6e 61 6c 69 73 69 6e 67 20 74     ... Finalising t
1000ba24:	68 65 0a 20 69 6e 73 74 61 6c 6c 61 74 69 6f 6e     he. installation
1000ba34:	00 00 00 00 50 6c 65 61 73 65 20 77 61 69 74 20     ....Please wait 
1000ba44:	77 68 69 6c 65 20 74 68 65 20 69 6e 73 74 61 6c     while the instal
1000ba54:	6c 20 66 69 6e 69 73 68 65 73 2e 00 10 20 00 20     l finishes... . 
1000ba64:	20 00 41 6c 6c 6f 63 61 74 69 6e 67 20 74 68 65      .Allocating the
1000ba74:	20 73 77 61 70 66 69 6c 65 00 55 70 64 61 74 69      swapfile.Updati
1000ba84:	6e 67 20 74 68 65 20 72 65 67 69 73 74 72 79 00     ng the registry.
1000ba94:	43 72 65 61 74 69 6e 67 20 75 73 65 72 20 61 63     Creating user ac
1000baa4:	63 6f 75 6e 74 00 49 6e 73 74 61 6c 6c 69 6e 67     count.Installing
1000bab4:	20 70 61 63 6b 61 67 65 73 00 42 61 63 6b 69 6e      packages.Backin
1000bac4:	67 20 75 70 20 73 79 73 74 65 6d 20 66 69 6c 65     g up system file
1000bad4:	73 00 46 69 6e 69 73 68 69 6e 67 20 74 6f 75 63     s.Finishing touc
1000bae4:	68 65 73 00 51 51 2d 30 30 30 2d 30 30 30 2d 30     hes.QQ-000-000-0
1000baf4:	30 30 2d 51 00 00 00 00 43 3a 2f 42 61 6e 61 6e     00-Q....C:/Banan
1000bb04:	61 2f 53 79 73 74 65 6d 2f 74 69 6d 65 7a 6f 6e     a/System/timezon
1000bb14:	65 73 2e 74 78 74 00 73 69 7a 20 3d 20 25 64 0a     es.txt.siz = %d.
1000bb24:	00 20 00 2e 2e 2e 20 00 25 64 3b 20 25 73 0a 00     . .... .%d; %s..
1000bb34:	53 65 74 74 69 6e 67 20 75 70 20 74 68 65 20 73     Setting up the s
1000bb44:	79 73 74 65 6d 20 66 6f 72 20 74 68 65 20 66 69     ystem for the fi
1000bb54:	72 73 74 20 74 69 6d 65 00 0a 0a 0a 0a 0a 0a 00     rst time........
1000bb64:	54 65 73 74 00 41 41 2d 30 30 30 30 30 2d 30 30     Test.AA-00000-00
1000bb74:	30 30 30 2d 41 00 57 57 2d 38 38 33 38 38 2d 35     000-A.WW-88388-5
1000bb84:	35 35 35 35 2d 4e 00 42 61 6e 61 6e 61 20 53 65     5555-N.Banana Se
1000bb94:	74 75 70 00 50 6c 65 61 73 65 20 65 6e 74 65 72     tup.Please enter
1000bba4:	20 79 6f 75 72 20 64 65 74 61 69 6c 73 2e 20 50      your details. P
1000bbb4:	72 65 73 73 20 54 41 42 20 74 6f 20 73 77 69 74     ress TAB to swit
1000bbc4:	63 68 00 62 65 74 77 65 65 6e 20 66 69 65 6c 64     ch.between field
1000bbd4:	73 2e 00 4e 61 6d 65 00 43 6f 6d 70 61 6e 79 00     s..Name.Company.
1000bbe4:	50 61 73 73 77 6f 72 64 00 43 6f 6e 66 69 72 6d     Password.Confirm
1000bbf4:	00 70 61 73 73 77 6f 72 64 00 20 20 20 20 20 20     .password.      
1000bc04:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
1000bc14:	20 20 20 00 20 20 11 00 20 20 20 00 50 72 65 73        .  ..   .Pres
1000bc24:	73 20 45 4e 54 45 52 00 20 20 20 20 20 20 20 20     s ENTER.        
1000bc34:	20 20 20 00 74 6f 20 73 75 62 6d 69 74 00 20 20        .to submit.  
1000bc44:	20 4f 4b 20 20 20 00 44 61 74 65 20 61 6e 64 20      OK   .Date and 
1000bc54:	54 69 6d 65 00 31 34 2f 30 35 2f 32 30 32 31 20     Time.14/05/2021 
1000bc64:	31 38 3a 35 35 3a 30 30 00 00 00 00 50 6c 65 61     18:55:00....Plea
1000bc74:	73 65 20 65 6e 74 65 72 20 74 68 65 20 63 75 72     se enter the cur
1000bc84:	72 65 6e 74 20 64 61 74 65 20 61 6e 64 20 74 69     rent date and ti
1000bc94:	6d 65 2c 00 61 6e 64 20 74 68 65 6e 20 70 72 65     me,.and then pre
1000bca4:	73 73 20 45 4e 54 45 52 2e 00 44 44 2f 4d 4d 2f     ss ENTER..DD/MM/
1000bcb4:	59 59 59 59 20 48 48 3a 4d 4d 3a 53 53 00 45 53     YYYY HH:MM:SS.ES
1000bcc4:	43 3a 20 47 6f 20 62 61 63 6b 20 61 20 73 63 72     C: Go back a scr
1000bcd4:	65 65 6e 00 50 6c 65 61 73 65 20 73 65 6c 65 63     een.Please selec
1000bce4:	74 20 79 6f 75 72 20 74 69 6d 65 7a 6f 6e 65 20     t your timezone 
1000bcf4:	61 6e 64 20 74 68 65 6e 20 70 72 65 73 73 20 45     and then press E
1000bd04:	4e 54 45 52 2e 00 55 73 65 72 20 49 6e 74 65 72     NTER..User Inter
1000bd14:	66 61 63 65 00 00 00 00 50 6c 65 61 73 65 20 73     face....Please s
1000bd24:	65 6c 65 63 74 20 74 68 65 20 75 73 65 72 20 69     elect the user i
1000bd34:	6e 74 65 72 66 61 63 65 20 79 6f 75 20 77 61 6e     nterface you wan
1000bd44:	74 20 42 61 6e 61 6e 61 00 00 00 00 74 6f 20 62     t Banana....to b
1000bd54:	6f 6f 74 20 69 6e 74 6f 20 62 79 20 64 65 66 61     oot into by defa
1000bd64:	75 6c 74 20 77 68 65 6e 20 79 6f 75 20 73 74 61     ult when you sta
1000bd74:	72 74 20 74 68 65 20 63 6f 6d 70 75 74 65 72 2e     rt the computer.
1000bd84:	00 49 6e 76 61 6c 69 64 20 50 72 6f 64 75 63 74     .Invalid Product
1000bd94:	20 4b 65 79 00 00 00 00 59 6f 75 20 64 6f 20 6e      Key....You do n
1000bda4:	6f 74 20 68 61 76 65 20 61 20 76 61 6c 69 64 20     ot have a valid 
1000bdb4:	70 72 6f 64 75 63 74 20 6b 65 79 2e 0a 00 00 00     product key.....
1000bdc4:	59 6f 75 20 6e 65 65 64 20 61 20 76 61 6c 69 64     You need a valid
1000bdd4:	20 70 72 6f 64 75 63 74 20 6b 65 79 20 69 6e 20      product key in 
1000bde4:	6f 72 64 65 72 20 74 6f 00 75 73 65 20 42 61 6e     order to.use Ban
1000bdf4:	61 6e 61 2e 00 00 00 00 50 72 65 73 73 20 45 4e     ana.....Press EN
1000be04:	54 45 52 20 74 6f 20 72 65 2d 65 6e 74 65 72 20     TER to re-enter 
1000be14:	79 6f 75 72 20 70 72 6f 64 75 63 74 20 6b 65 79     your product key
1000be24:	2e 00 50 72 6f 64 75 63 74 20 4b 65 79 00 00 00     ..Product Key...
1000be34:	50 6c 65 61 73 65 20 65 6e 74 65 72 20 79 6f 75     Please enter you
1000be44:	72 20 70 72 6f 64 75 63 74 20 6b 65 79 20 62 65     r product key be
1000be54:	6c 6f 77 2c 00 00 00 00 54 68 65 20 65 6e 74 65     low,....The ente
1000be64:	72 65 64 20 70 72 6f 64 75 63 74 20 6b 65 79 20     red product key 
1000be74:	77 61 73 20 69 6e 76 61 6c 69 64 2e 00 00 00 00     was invalid.....
1000be84:	50 72 65 73 73 20 61 6e 79 20 6b 65 79 20 74 6f     Press any key to
1000be94:	20 63 6f 6e 74 69 6e 75 65 20 61 6e 64 20 74 68      continue and th
1000bea4:	65 6e 00 00 65 6e 74 65 72 20 74 68 65 20 70 72     en..enter the pr
1000beb4:	6f 64 75 63 74 20 6b 65 79 20 63 6f 72 72 65 63     oduct key correc
1000bec4:	74 6c 79 2e 00 46 69 6e 61 6c 69 73 69 6e 67 20     tly..Finalising 
1000bed4:	49 6e 73 74 61 6c 6c 61 74 69 6f 6e 00 40 6d 65     Installation.@me
1000bee4:	6d 6f 72 79 3a 73 77 61 70 66 69 6c 65 00 73 79     mory:swapfile.sy
1000bef4:	73 74 65 6d 00 43 3a 2f 42 61 6e 61 6e 61 2f 52     stem.C:/Banana/R
1000bf04:	65 67 69 73 74 72 79 2f 53 79 73 74 65 6d 00 43     egistry/System.C
1000bf14:	3a 2f 42 61 6e 61 6e 61 2f 52 65 67 69 73 74 72     :/Banana/Registr
1000bf24:	79 2f 55 73 65 72 00 00 43 3a 2f 42 61 6e 61 6e     y/User..C:/Banan
1000bf34:	61 2f 52 65 67 69 73 74 72 79 2f 44 65 66 61 75     a/Registry/Defau
1000bf44:	6c 74 53 79 73 74 65 6d 00 00 00 00 20 42 6f 6f     ltSystem.... Boo
1000bf54:	74 20 74 6f 20 63 6f 6d 6d 61 6e 64 20 6c 69 6e     t to command lin
1000bf64:	65 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20     e               
1000bf74:	00 00 00 00 20 42 6f 6f 74 20 74 6f 20 67 72 61     .... Boot to gra
1000bf84:	70 68 69 63 61 6c 20 69 6e 74 65 72 66 61 63 65     phical interface
1000bf94:	20 28 56 47 41 29 20 20 00 00 00 00 20 42 6f 6f      (VGA)  .... Boo
1000bfa4:	74 20 74 6f 20 67 72 61 70 68 69 63 61 6c 20 69     t to graphical i
1000bfb4:	6e 74 65 72 66 61 63 65 20 28 56 45 53 41 29 20     nterface (VESA) 
1000bfc4:	00 00 00 00 50 bf 00 10 78 bf 00 10 a0 bf 00 10     ....P...x.......	1000bfc8: R_386_32	.text
	1000bfcc: R_386_32	.text
	1000bfd0: R_386_32	.text
1000bfd4:	4c 6f 61 64 69 6e 67 20 65 78 74 65 6e 73 69 6f     Loading extensio
1000bfe4:	6e 73 2e 2e 2e 00 0a 0a 3a 0a 00 2f 25 73 0a 00     ns......:../%s..
1000bff4:	43 3a 2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d     C:/Banana/System
1000c004:	2f 73 65 74 75 70 69 73 64 2e 6f 6e 65 00 53 59     /setupisd.one.SY
1000c014:	53 49 4e 49 54 20 46 41 49 4c 55 52 45 00 43 3a     SINIT FAILURE.C:
1000c024:	2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d 2f 63     /Banana/System/c
1000c034:	6f 6d 6d 61 6e 64 2e 65 78 65 00 43 3a 2f 44 45     ommand.exe.C:/DE
1000c044:	2e 42 55 47 00 43 3a 2f 42 61 6e 61 6e 61 2f 44     .BUG.C:/Banana/D
1000c054:	72 69 76 65 72 73 2f 00 43 3a 2f 42 61 6e 61 6e     rivers/.C:/Banan
1000c064:	61 2f 53 79 73 74 65 6d 2f 00 43 3a 2f 42 61 6e     a/System/.C:/Ban
1000c074:	61 6e 61 2f 52 65 67 69 73 74 72 79 2f 00 00 00     ana/Registry/...
1000c084:	43 3a 2f 42 61 6e 61 6e 61 2f 52 65 67 69 73 74     C:/Banana/Regist
1000c094:	72 79 2f 53 79 73 74 65 6d 2f 53 59 53 54 45 4d     ry/System/SYSTEM
1000c0a4:	2e 52 45 47 00 42 41 4e 41 4e 41 00 53 45 54 55     .REG.BANANA.SETU
1000c0b4:	50 00 42 4f 4f 54 00 42 41 4e 41 4e 41 2f 53 45     P.BOOT.BANANA/SE
1000c0c4:	54 55 50 00 4e 41 4d 45 00 43 4f 4d 50 41 4e 59     TUP.NAME.COMPANY
1000c0d4:	00 50 52 4f 44 55 43 54 4b 45 59 00 42 41 4e 41     .PRODUCTKEY.BANA
1000c0e4:	4e 41 2f 42 4f 4f 54 00 41 55 54 4f 47 55 49 00     NA/BOOT.AUTOGUI.
1000c0f4:	42 41 4e 41 4e 41 2f 53 45 54 55 50 2f 4e 41 4d     BANANA/SETUP/NAM
1000c104:	45 00 42 41 4e 41 4e 41 2f 53 45 54 55 50 2f 43     E.BANANA/SETUP/C
1000c114:	4f 4d 50 41 4e 59 00 42 41 4e 41 4e 41 2f 53 45     OMPANY.BANANA/SE
1000c124:	54 55 50 2f 50 52 4f 44 55 43 54 4b 45 59 00 00     TUP/PRODUCTKEY..
1000c134:	54 68 65 20 69 6e 73 74 61 6c 6c 61 74 69 6f 6e     The installation
1000c144:	20 68 61 73 20 62 65 65 6e 20 63 6f 6d 70 6c 65      has been comple
1000c154:	74 65 64 2e 0a 00 00 00 50 6c 65 61 73 65 20 70     ted.....Please p
1000c164:	72 65 73 73 20 45 4e 54 45 52 20 74 6f 20 72 65     ress ENTER to re
1000c174:	73 74 61 72 74 20 79 6f 75 72 20 63 6f 6d 70 75     start your compu
1000c184:	74 65 72 00 61 6e 64 20 73 74 61 72 74 20 42 61     ter.and start Ba
1000c194:	6e 61 6e 61 2e 00 00 00 50 4c 45 41 53 45 20 4d     nana....PLEASE M
1000c1a4:	41 4e 55 41 4c 4c 59 20 52 45 53 54 41 52 54 20     ANUALLY RESTART 
1000c1b4:	59 4f 55 52 20 43 4f 4d 50 55 54 45 52 00 42 41     YOUR COMPUTER.BA
1000c1c4:	4e 41 4e 41 2f 42 4f 4f 54 2f 41 55 54 4f 47 55     NANA/BOOT/AUTOGU
1000c1d4:	49 00 50 72 6f 64 75 63 74 20 4b 65 79 20 55 70     I.Product Key Up
1000c1e4:	64 61 74 65 64 00 00 00 59 6f 75 72 20 70 72 6f     dated...Your pro
1000c1f4:	64 75 63 74 20 6b 65 79 20 68 61 73 20 62 65 65     duct key has bee
1000c204:	6e 20 75 70 64 61 74 65 64 2e 0a 00 49 74 20 69     n updated...It i
1000c214:	73 20 73 61 66 65 20 74 6f 20 74 75 72 6e 20 6f     s safe to turn o
1000c224:	66 66 20 79 6f 75 72 20 50 43 00 63 61 6c 6c 00     ff your PC.call.
1000c234:	43 3a 2f 42 61 6e 61 6e 61 2f 53 79 73 74 65 6d     C:/Banana/System
1000c244:	2f 69 6e 69 74 2e 62 61 74 00 00 00 22 c0 00 10     /init.bat..."...	1000c250: R_386_32	.text
1000c254:	2f c2 00 10 34 c2 00 10 00 00 00 00                 /...4.......	1000c254: R_386_32	.text
	1000c258: R_386_32	.text
